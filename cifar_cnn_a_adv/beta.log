Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  sparse_interm: true
  save_adv_example: false
  verify_onnxruntime_output: false
  eval_adv_example: false
  show_adv_example: false
  precompile_jit: false
  prepare_only: false
  complete_verifier: bab
  enable_incomplete_verification: true
  csv_name: null
  results_file: ablation_results/cifar_cnn_a_adv/beta.out
  root_path: ''
  deterministic_opt: false
  graph_optimizer: 'Customized("custom_graph_optimizer", "default_optimizer")'
  buffer_has_batchdim: false
  save_output: false
  output_file: out.pkl
  return_optimized_model: false
model:
  name: cnn_4layer_adv
  path: models/sdp/cifar_cnn_a_adv.model
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  debug_onnx: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: []
  onnx_vnnlib_joint_optimization_flags: none
  check_optimized: false
  flatten_final_output: false
  optimize_graph: null
  with_jacobian: false
data:
  start: 0
  end: 10000
  select_instance: null
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: CIFAR_SDP
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.00784313725
  epsilon_min: 0.0
  vnnlib_path: null
  vnnlib_path_prefix: ''
  rhs_offset: null
solver:
  batch_size: 4096
  auto_enlarge_batch_size: true
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  optimize_disjuncts_separately: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
    relu_option: adaptive
    compare_crown_with_ibp: false
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_alphas: false
    lr_decay: 0.98
    full_conv_alpha: true
    max_coeff_mul: .inf
    matmul_share_alphas: false
    disable_optimization: []
    max_time: 1.0
  invprop:
    apply_output_constraints_to: []
    tighten_input_bounds: false
    best_of_oc_and_no_oc: false
    directly_optimize: []
    oc_lr: 0.1
    share_gammas: false
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    max_dim: 10000
    reset_threshold: 1.0
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    unstable_neuron_threshold: 0
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
    skip_unsafe: false
    topk_filter: 1.0
    sliding_window: -1
    extra_constraint: false
    refine_neuron_timeout_increasement: 0
    timeout_neuron_percentage: 0.3
    remaining_timeout_threshold: 1
    remove_unstable_neurons: false
    lp_solver: mip
    output_cut: false
bab:
  initial_max_domains: 1
  backing_up_max_domain: null
  max_domains: .inf
  decision_thresh: 0
  timeout: 200
  timeout_scale: 1
  max_iterations: -1
  override_timeout: null
  get_upper_bound: false
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_interm: ''
  interm_transfer: false
  recompute_interm: false
  sort_domain_interval: -1
  vanilla_crown: false
  tree_traversal: depth_first
  cut:
    enabled: false
    cuts_path: /tmp/abcrown_cuts_27848
    implication: false
    bab_cut: true
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 0.99
    iteration: 200
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.05
    number_cuts: 500
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    add_implied_cuts: false
    add_input_cuts: false
    biccos:
      enabled: false
      auto_param: true
      constraint_strengthening: true
      recursively_strengthening: false
      merge_cut_enabled: false
      fast_inference_enabled: false
      drop_ratio: 0.5
      max_infer_iter: 40
      heuristic: neuron_influence_score
      save_cuts: false
      multi_tree_branching:
        enabled: false
        restore_best_tree: false
        keep_n_best_domains: 50
        target_batch_size: 200
        iterations: 5
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    nonlinear_split:
      method: shortcut
      branching_point_method: uniform
      num_branches: 2
      filter: false
      filter_beta: false
      filter_clamp: false
      filter_batch_size: 10000
      filter_iterations: 25
      relu_only: false
      loose_tanh_threshold: null
      dynamic_bbps: false
      dynamic_options: [uniform, three_left, three_right]
      branching_point_node: ''
      branching_point_db: []
    input_split:
      enable_clip_domains: false
      split_hint: null
      reorder_bab: false
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      split_partitions: 2
      sb_margin_weight: 1.0
      sb_sum: false
      sb_primary_spec: null
      bf_backup_thresh: -1
      bf_rhs_offset: 0
      bf_iters: 1000000000.0
      bf_batch_size: 100000
      bf_zero_crossing_score: false
      touch_zero_score: 0
      ibp_enhancement: false
      catch_assertion: false
      compare_with_old_bounds: false
      update_rhs_with_attack: false
      sb_coeff_thresh: 0.001
      sort_index: null
      sort_descending: true
      show_progress: false
      presplit_domains: null
      skip_getting_worst_domain: false
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: middle
  pgd_steps: 100
  pgd_restarts: 50
  pgd_batch_size: 100000000
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_alpha_scale: false
  pgd_loss_mode: null
  pgd_restart_when_stuck: false
  enable_mip_attack: false
  adv_saver: default_adv_saver
  adv_verifier: default_adv_verifier
  early_stop_condition: default_early_stop_condition
  adv_example_finalizer: default_adv_example_finalizer
  pgd_loss: default_pgd_loss
  cex_path: ./test_cex.txt
  attack_mode: PGD
  attack_tolerance: 0.0
  attack_func: attack_with_general_specs
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 500000
    pgd_alpha: auto
  input_split_check_adv:
    enabled: auto
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
    max_num_domains: 10
debug:
  view_model: false
  lp_test: null
  rescale_vnnlib_ptb: null
  test_optimized_bounds: false
  test_optimized_bounds_after_n_iterations: 0
  print_verbose_decisions: false
  biccos_mip_sanity_check: false
  sanity_check: 0
  z_split_enabled: false

Experiments at Wed Oct 30 16:25:51 2024 on n23g0022.hpc.itc.rwth-aachen.de
Sequential(
  (0): Conv2d(3, 16, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(16, 32, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (3): ReLU()
  (4): Flatten(start_dim=1, end_dim=-1)
  (5): Linear(in_features=2048, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=10, bias=True)
)
Parameters:
  0.weight: shape torch.Size([16, 3, 4, 4])
  0.bias: shape torch.Size([16])
  2.weight: shape torch.Size([32, 16, 4, 4])
  2.bias: shape torch.Size([32])
  5.weight: shape torch.Size([100, 2048])
  5.bias: shape torch.Size([100])
  7.weight: shape torch.Size([10, 100])
  7.bias: shape torch.Size([10])
############################
Sampled data loaded. Data already preprocessed!
Shape: torch.Size([200, 3, 32, 32]) torch.Size([200]) torch.Size([200])
X range: tensor(2.12560368) tensor(-1.98888886) tensor(-0.01308715)
############################
Internal results will be saved to ablation_results/cifar_cnn_a_adv/beta.out.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-2.60389853, -4.03890705, -0.96637481, -1.08776557, -1.28065956,
         -1.57759106, -2.01748729, -1.63907158, -4.69097900, -3.85279989]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [218]; unstable size 218; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 98, 1, 218] with unstable size 97 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 218] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 218] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [97]; unstable size 97; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 97] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 97] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.15868020,  2.57397366, -0.32336405, -0.12450433,  0.40432674,
          0.56075490,  0.24401055,  3.10249233,  2.30172944]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.60389853, -4.03890705, -0.96637481, -1.08776557, -1.28065956,
         -1.57759106, -2.01748729, -1.63907158, -4.69097900, -3.85279989]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.60389853, -4.03890657, -0.96637493, -1.08776581, -1.28065979,
          -1.57759106, -2.01748776, -1.63907230, -4.69097900, -3.85279989],
         [-2.60389853, -4.03890657, -0.96637493, -1.08776581, -1.28065979,
          -1.57759106, -2.01748776, -1.63907230, -4.69097900, -3.85279989]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.12139088,  0.19289398]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.97301579, -1.96507931, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.96507931],
           [-1.96507931, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.97301579],
           [-1.96507931, -1.97301579, -1.97301579,  ..., -1.94126987,
            -1.96507931, -1.97301579],
           ...,
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.97301579],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.97301579],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.97301579]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.93236721,
            -1.93236721, -1.96457338],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.95652175,
            -1.95652175, -1.96457338],
           [-1.96457338, -1.95652175, -1.94847023,  ..., -1.96457338,
            -1.96457338, -1.95652175],
           ...,
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.66266882,
            -1.66266882, -1.64767623],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.68515754,
            -1.68515754, -1.67766130],
           [-1.69265378, -1.68515754, -1.68515754,  ..., -1.69265378,
            -1.69265378, -1.69265378],
           ...,
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.69265378],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.69265378],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.69265378]]],


         [[[-1.97301579, -1.96507931, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.96507931],
           [-1.96507931, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.97301579],
           [-1.96507931, -1.97301579, -1.97301579,  ..., -1.94126987,
            -1.96507931, -1.97301579],
           ...,
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.97301579],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.97301579],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.97301579]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.93236721,
            -1.93236721, -1.96457338],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.95652175,
            -1.95652175, -1.96457338],
           [-1.96457338, -1.95652175, -1.94847023,  ..., -1.96457338,
            -1.96457338, -1.95652175],
           ...,
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.66266882,
            -1.66266882, -1.64767623],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.68515754,
            -1.68515754, -1.67766130],
           [-1.69265378, -1.68515754, -1.68515754,  ..., -1.69265378,
            -1.69265378, -1.69265378],
           ...,
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.69265378],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.69265378],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.69265378]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 1.2080 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 1, vnnlib ID: 1 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-2.91239977,  1.30044675, -7.26831532, -7.87342548, -7.74763012,
         -8.46835899, -6.64607763, -8.08242130, -6.15906239,  1.63948882]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [567]; unstable size 567; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 163, 1, 567] with unstable size 162 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 567] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 567] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [162]; unstable size 162; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 162] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 162] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.13653493, -0.81675231,  7.20471859,  7.60528660,  7.75195885,
          8.15055847,  6.22120571,  7.95112562,  6.37312317]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.91239977,  1.30044675, -7.26831532, -7.87342548, -7.74763012,
         -8.46835899, -6.64607763, -8.08242130, -6.15906239,  1.63948882]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.29230642,  1.39088631, -7.69417095, -8.36273766, -8.14110756,
          -8.96644974, -7.15948677, -8.63516712, -6.20971012,  1.18852425]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.20236206]]], device='cuda:0')
number of violation:  1
Attack finished in 0.2554 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.2856 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 2, vnnlib ID: 2 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.38900280,  -6.91815758, -13.39404202, -12.50848293, -12.34240627,
         -13.34833145, -12.47480679, -13.81170845, -10.09896183,  -8.65394974]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [799]; unstable size 799; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 220, 1, 799] with unstable size 219 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 799] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 799] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [219]; unstable size 219; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 219] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 219] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.81504011, 4.21952724, 3.42958927, 3.38334274, 4.03887367, 3.68367100,
         4.85273170, 1.66043234, 0.65433025]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0649 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 3, vnnlib ID: 3 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.38513088, -15.12822247,  -7.38964939,  -7.50558901,  -6.26222038,
          -6.85573816, -10.31254101,  -5.30293274, -15.13275623, -13.36650562]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [471]; unstable size 471; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 209, 1, 471] with unstable size 208 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 471] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 471] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [208]; unstable size 208; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 208] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 208] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.96806812,  7.51881790,  0.34542710,  0.43790019, -0.23603082,
          3.05391550, -1.87563026,  7.75412416,  5.88288021]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.38513088, -15.12822247,  -7.38964939,  -7.50558901,  -6.26222038,
          -6.85573816, -10.31254101,  -5.30293274, -15.13275623, -13.36650562]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-12.38513088, -15.12822247,  -7.38964939,  -7.50558901,  -6.26222038,
           -6.85573816, -10.31254101,  -5.30293274, -15.13275719, -13.36650467],
         [-12.38513088, -15.12822247,  -7.38964939,  -7.50558901,  -6.26222038,
           -6.85573816, -10.31254101,  -5.30293274, -15.13275719, -13.36650467]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.59351778, -0.95928764]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.28095245, -0.35396814, -0.21111101,  ..., -0.43333322,
            -0.76666665,  0.32857150],
           [-1.11587298, -0.44920623, -0.59206349,  ..., -0.41746020,
            -1.09999990, -1.02063489],
           [-1.30634916, -0.59206349, -0.86190474,  ..., -0.06825387,
            -0.81428570, -1.17936504],
           ...,
           [ 0.94761908,  1.24920666,  1.42380977,  ...,  1.45555580,
             1.15396857,  0.80476195],
           [ 0.77301592,  0.97936511,  1.23333359,  ...,  1.18571460,
             1.13809550,  0.86825401],
           [ 0.85238099,  0.24920642,  0.50317466,  ...,  0.86825401,
             0.86825401,  0.99523818]],

          [[ 0.28985518, -0.33816412, -0.19323659,  ..., -0.46698871,
            -0.78904986,  0.33816436],
           [-1.11111104, -0.41867942, -0.54750401,  ..., -0.48309177,
            -1.12721407, -1.03059578],
           [-1.28824472, -0.54750401, -0.80515295,  ..., -0.17713353,
            -0.86956519, -1.17552328],
           ...,
           [ 0.93397754,  1.06280196,  1.20772982,  ...,  1.33655429,
             1.14331758,  0.83735919],
           [ 0.78904998,  0.85346222,  1.04669893,  ...,  1.14331758,
             1.19162667,  0.98228669],
           [ 0.88566834,  0.17713377,  0.35426742,  ...,  0.83735919,
             0.90177143,  1.07890511]],

          [[ 0.40629703, -0.26836565, -0.22338814,  ..., -0.35832080,
            -0.55322337,  0.48125952],
           [-0.92803597, -0.37331331, -0.56821585,  ..., -0.41829082,
            -0.91304344, -0.80809593],
           [-1.10794616, -0.53823084, -0.85307342,  ..., -0.19340314,
            -0.74812591, -1.01799107],
           ...,
           [ 0.28635699,  0.34632701,  0.52623707,  ...,  0.51124454,
             0.31634200,  0.09145443],
           [ 0.36131951,  0.34632701,  0.55622208,  ...,  0.27136448,
             0.34632701,  0.24137947],
           [ 0.69115460, -0.01349309,  0.18140946,  ...,  0.37631202,
             0.48125952,  0.75112462]]],


         [[[ 0.28095245, -0.35396814, -0.21111101,  ..., -0.43333322,
            -0.76666665,  0.32857150],
           [-1.11587298, -0.44920623, -0.59206349,  ..., -0.41746020,
            -1.09999990, -1.02063489],
           [-1.30634916, -0.59206349, -0.86190474,  ..., -0.06825387,
            -0.81428570, -1.17936504],
           ...,
           [ 0.94761908,  1.24920666,  1.42380977,  ...,  1.45555580,
             1.15396857,  0.80476195],
           [ 0.77301592,  0.97936511,  1.23333359,  ...,  1.18571460,
             1.13809550,  0.86825401],
           [ 0.85238099,  0.24920642,  0.50317466,  ...,  0.86825401,
             0.86825401,  0.99523818]],

          [[ 0.28985518, -0.33816412, -0.19323659,  ..., -0.46698871,
            -0.78904986,  0.33816436],
           [-1.11111104, -0.41867942, -0.54750401,  ..., -0.48309177,
            -1.12721407, -1.03059578],
           [-1.28824472, -0.54750401, -0.80515295,  ..., -0.17713353,
            -0.86956519, -1.17552328],
           ...,
           [ 0.93397754,  1.06280196,  1.20772982,  ...,  1.33655429,
             1.14331758,  0.83735919],
           [ 0.78904998,  0.85346222,  1.04669893,  ...,  1.14331758,
             1.19162667,  0.98228669],
           [ 0.88566834,  0.17713377,  0.35426742,  ...,  0.83735919,
             0.90177143,  1.07890511]],

          [[ 0.40629703, -0.26836565, -0.22338814,  ..., -0.35832080,
            -0.55322337,  0.48125952],
           [-0.92803597, -0.37331331, -0.56821585,  ..., -0.41829082,
            -0.91304344, -0.80809593],
           [-1.10794616, -0.53823084, -0.85307342,  ..., -0.19340314,
            -0.74812591, -1.01799107],
           ...,
           [ 0.28635699,  0.34632701,  0.52623707,  ...,  0.51124454,
             0.31634200,  0.09145443],
           [ 0.36131951,  0.34632701,  0.55622208,  ...,  0.27136448,
             0.34632701,  0.24137947],
           [ 0.69115460, -0.01349309,  0.18140946,  ...,  0.37631202,
             0.48125952,  0.75112462]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0713 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 4, vnnlib ID: 4 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.68809223, -12.13025570,  -6.63767338,  -9.10205269,  -6.98852253,
          -8.95999241,  -8.94991684,  -9.34213543, -12.00477028, -11.17362881]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [543]; unstable size 543; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 225, 1, 543] with unstable size 224 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 543] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 543] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [224]; unstable size 224; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 224] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 224] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.20494175,  3.45831966, -1.40828764,  1.23128462,  0.91528034,
          0.49897861,  1.02173901,  3.54240799,  2.59704590]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.68809223, -12.13025570,  -6.63767338,  -9.10205269,  -6.98852253,
          -8.95999241,  -8.94991684,  -9.34213543, -12.00477028, -11.17362881]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.68809223, -12.13025570,  -6.63767338,  -9.10205269,  -6.98852253,
           -8.95999241,  -8.94991684,  -9.34213543, -12.00477028, -11.17362881]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.35084915]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.45555562,  0.47142863,  0.50317466,  ...,  0.23333341,
             0.16984135, -0.06825387],
           [ 0.37619054,  0.55079371,  0.91587305,  ...,  0.39206356,
             0.59841275,  0.21746039],
           [ 0.47142863,  0.64603180,  0.70952386,  ...,  0.58253974,
             0.85238099,  0.82063496],
           ...,
           [ 0.32857150,  0.55079371,  0.18571436,  ..., -0.67142856,
            -1.22698402, -1.06825387],
           [ 0.47142863,  0.47142863,  0.21746039,  ..., -0.00476181,
            -1.14761901, -1.44920623],
           [ 0.45555562,  0.15396833, -0.11587292,  ...,  1.04285717,
             0.34444451, -0.54444444]],

          [[ 1.03059590,  1.09500813,  1.19162667,  ...,  1.12721443,
             0.96618366,  0.70853472],
           [ 1.03059590,  1.14331758,  1.28824508,  ...,  1.27214205,
             1.36876035,  0.98228669],
           [ 1.15942061,  1.22383285,  1.23993587,  ...,  1.38486338,
             1.54589403,  1.44927561],
           ...,
           [ 1.07890511,  1.28824508,  0.86956531,  ..., -0.70853460,
            -1.20772946, -0.96618354],
           [ 1.15942061,  1.22383285,  1.03059590,  ..., -0.19323659,
            -1.12721407, -1.33655393],
           [ 1.07890511,  0.93397754,  0.85346222,  ...,  0.99838978,
             0.28985518, -0.43478248]],

          [[ 0.10644694,  0.19640197,  0.42128953,  ..., -0.01349309,
             0.09145443, -0.31334329],
           [ 0.16641696,  0.45127454,  0.94602716,  ...,  0.19640197,
             0.75112462,  0.28635699],
           [ 0.16641696,  0.39130452,  0.48125952,  ...,  0.36131951,
             0.91604215,  1.03598225],
           ...,
           [ 0.06146942,  0.37631202,  0.07646193,  ..., -0.83808094,
            -1.27286363, -1.09295356],
           [ 0.19640197,  0.37631202, -0.11844061,  ..., -0.43328333,
            -1.27286363, -1.42278874],
           [ 0.25637197, -0.14842562, -0.73313338,  ...,  0.82608712,
            -0.02848560, -0.82308841]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0689 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 5, vnnlib ID: 5 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-2.08061361, -7.35808754, -1.52466714, -0.79548538, -0.38909817,
         -1.03977191, -3.36049914, -3.42065954, -6.66970348, -6.69352865]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [658]; unstable size 658; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 201, 1, 658] with unstable size 200 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 658] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 658] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [200]; unstable size 200; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 200] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 200] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.36226130,  5.20612240,  0.11421621, -0.45663387, -0.35881883,
          1.67416477,  1.85006595,  4.62577057,  5.01755571]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.08061361, -7.35808754, -1.52466714, -0.79548538, -0.38909817,
         -1.03977191, -3.36049914, -3.42065954, -6.66970348, -6.69352865]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.72007203, -6.67509556, -1.02529848, -0.02632031, -0.06467843,
          -0.23389345, -2.63078475, -2.87741232, -6.08596230, -5.98822784],
         [-1.72007203, -6.67509556, -1.02529848, -0.02632031, -0.06467843,
          -0.23389345, -2.63078475, -2.87741232, -6.08596230, -5.98822784]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.03835812,  0.16921502]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0105 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0757 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 6, vnnlib ID: 6 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.40164280,  -8.37019825, -13.00969315, -14.79013634, -13.45650959,
         -15.46328926, -15.14051628, -13.42083931,  -9.22426891, -11.21731853]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [529]; unstable size 529; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 193, 1, 529] with unstable size 192 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 529] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 529] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [192]; unstable size 192; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 192] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 192] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.41059256,  2.25627065,  3.81135964,  2.82651448,  4.25359440,
          4.02583933,  2.31334543, -1.35637224,  0.51038718]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.40164280,  -8.37019825, -13.00969315, -14.79013634, -13.45650959,
         -15.46328926, -15.14051628, -13.42083931,  -9.22426891, -11.21731853]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.40164471,  -8.37019730, -13.00969315, -14.79013538, -13.45650864,
          -15.46328926, -15.14051723, -13.42084026,  -9.22426891, -11.21731758],
         [ -9.40164471,  -8.37019730, -13.00969315, -14.79013538, -13.45650864,
          -15.46328926, -15.14051723, -13.42084026,  -9.22426891, -11.21731758]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-1.03144741, -0.17737579]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 0.55079371,  0.96349210,  0.82063496,  ..., -0.19523799,
            -0.21111101, -0.16349196],
           [ 0.21746039,  0.55079371, -0.21111101,  ..., -0.29047608,
            -0.30634910, -0.29047608],
           [ 0.01111121, -0.36984116, -0.40158719,  ..., -0.49682540,
            -0.48095238, -0.43333322],
           ...,
           [-0.62380952, -0.63968253, -0.65555555,  ..., -0.56031746,
            -0.54444444, -0.41746020],
           [-0.60793650, -0.65555555, -0.63968253,  ..., -0.52857143,
            -0.48095238, -0.36984116],
           [-0.56031746, -0.60793650, -0.62380952,  ..., -0.65555555,
            -0.59206349, -0.52857143]],

          [[ 0.61191636,  1.07890511,  0.98228669,  ..., -0.01610294,
            -0.01610294,  0.03220624],
           [ 0.12882459,  0.56360716, -0.12882435,  ..., -0.40257636,
            -0.41867942, -0.40257636],
           [-0.27375188, -0.57971013, -0.54750401,  ..., -1.06280184,
            -1.04669881, -1.01449275],
           ...,
           [-0.46698871, -0.48309177, -0.49919480,  ..., -0.46698871,
            -0.49919480, -0.45088565],
           [-0.45088565, -0.49919480, -0.48309177,  ..., -0.41867942,
            -0.43478248, -0.40257636],
           [-0.43478248, -0.48309177, -0.49919480,  ..., -0.49919480,
            -0.46698871, -0.45088565]],

          [[ 0.87106466,  1.38081002,  1.27586246,  ...,  0.27136448,
             0.24137947,  0.28635699],
           [ 0.30134949,  0.78110963,  0.13643195,  ..., -0.23838064,
            -0.23838064, -0.22338814],
           [-0.17841063, -0.37331331, -0.34332830,  ..., -1.09295356,
            -1.04797614, -0.98800600],
           ...,
           [-1.16791618, -1.18290865, -1.19790113,  ..., -1.15292358,
            -1.18290865, -1.12293863],
           [-1.15292358, -1.19790113, -1.19790113,  ..., -1.13793111,
            -1.12293863, -1.07796109],
           [-1.15292358, -1.18290865, -1.19790113,  ..., -1.22788620,
            -1.19790113, -1.16791618]]],


         [[[ 0.55079371,  0.96349210,  0.82063496,  ..., -0.19523799,
            -0.21111101, -0.16349196],
           [ 0.21746039,  0.55079371, -0.21111101,  ..., -0.29047608,
            -0.30634910, -0.29047608],
           [ 0.01111121, -0.36984116, -0.40158719,  ..., -0.49682540,
            -0.48095238, -0.43333322],
           ...,
           [-0.62380952, -0.63968253, -0.65555555,  ..., -0.56031746,
            -0.54444444, -0.41746020],
           [-0.60793650, -0.65555555, -0.63968253,  ..., -0.52857143,
            -0.48095238, -0.36984116],
           [-0.56031746, -0.60793650, -0.62380952,  ..., -0.65555555,
            -0.59206349, -0.52857143]],

          [[ 0.61191636,  1.07890511,  0.98228669,  ..., -0.01610294,
            -0.01610294,  0.03220624],
           [ 0.12882459,  0.56360716, -0.12882435,  ..., -0.40257636,
            -0.41867942, -0.40257636],
           [-0.27375188, -0.57971013, -0.54750401,  ..., -1.06280184,
            -1.04669881, -1.01449275],
           ...,
           [-0.46698871, -0.48309177, -0.49919480,  ..., -0.46698871,
            -0.49919480, -0.45088565],
           [-0.45088565, -0.49919480, -0.48309177,  ..., -0.41867942,
            -0.43478248, -0.40257636],
           [-0.43478248, -0.48309177, -0.49919480,  ..., -0.49919480,
            -0.46698871, -0.45088565]],

          [[ 0.87106466,  1.38081002,  1.27586246,  ...,  0.27136448,
             0.24137947,  0.28635699],
           [ 0.30134949,  0.78110963,  0.13643195,  ..., -0.23838064,
            -0.23838064, -0.22338814],
           [-0.17841063, -0.37331331, -0.34332830,  ..., -1.09295356,
            -1.04797614, -0.98800600],
           ...,
           [-1.16791618, -1.18290865, -1.19790113,  ..., -1.15292358,
            -1.18290865, -1.12293863],
           [-1.15292358, -1.19790113, -1.19790113,  ..., -1.13793111,
            -1.12293863, -1.07796109],
           [-1.15292358, -1.18290865, -1.19790113,  ..., -1.22788620,
            -1.19790113, -1.16791618]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0699 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 7, vnnlib ID: 7 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-7.00835705, -8.96086788, -3.69912124, -5.03624153, -2.68869019,
         -5.63221502, -2.51778221, -6.42361641, -8.76600933, -9.71107197]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [503]; unstable size 503; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 254, 1, 503] with unstable size 253 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 503] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 503] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [253]; unstable size 253; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 253] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 253] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.85433054,  4.63593197,  0.09867144,  1.33992791, -1.07176208,
          1.69816673,  1.94883537,  4.31601477,  5.46722841]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-7.00835705, -8.96086788, -3.69912124, -5.03624153, -2.68869019,
         -5.63221502, -2.51778221, -6.42361641, -8.76600933, -9.71107197]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.24038744,  -9.28610897,  -3.84454465,  -5.20589828,  -2.66719246,
           -5.68954802,  -3.06507778,  -6.37724495,  -8.96725273, -10.02994823]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.39788532]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0054 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0689 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 8, vnnlib ID: 8 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-13.93469334, -20.12154388, -17.33457947, -19.86049843, -20.21372986,
         -21.25618935, -22.65778542, -22.05707359, -17.64817047, -20.80877304]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1012]; unstable size 1012; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 127, 1, 1012] with unstable size 126 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 5, 1, 1012] with unstable size 4 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1012] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [126]; unstable size 126; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 5, 1, 126] with unstable size 4 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 126] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [4]; unstable size 4; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.23773289, 2.69126463, 5.14333248, 5.34886694, 6.31123495, 7.75378323,
         7.14197016, 2.92753410, 5.99536991]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0634 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 9, vnnlib ID: 9 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.80179358, -12.46501255,  -6.57853985,  -6.68956470,  -7.61111355,
          -7.23589230,  -7.87289953,  -9.75897789,  -7.54242992, -11.49101162]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [483]; unstable size 483; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 224, 1, 483] with unstable size 223 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 483] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 483] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [223]; unstable size 223; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 223] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 223] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.44218934,  3.89411950, -1.74409580, -0.80226827, -0.57978773,
         -0.20545268,  1.59700751, -1.08158183,  2.85933208]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.80179358, -12.46501255,  -6.57853985,  -6.68956470,  -7.61111355,
          -7.23589230,  -7.87289953,  -9.75897789,  -7.54242992, -11.49101162]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.80179310, -12.46501160,  -6.57853985,  -6.68956327,  -7.61111259,
           -7.23589230,  -7.87289858,  -9.75897694,  -7.54242992, -11.49100971],
         [ -7.80179310, -12.46501160,  -6.57853985,  -6.68956327,  -7.61111259,
           -7.23589230,  -7.87289858,  -9.75897694,  -7.54242992, -11.49100971]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.56590080, -0.65735245, -0.54632902,  0.37522030,  0.63700628,
           0.30653763]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0823 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 10, vnnlib ID: 10 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.70068169, -10.68916798,  -4.80894661,  -4.48129988,  -7.59597015,
          -3.34438372,  -9.78639984,  -5.25471544,  -8.97214031,  -9.17322254]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [326]; unstable size 326; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 99, 1, 326] with unstable size 98 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 8, 1, 326] with unstable size 7 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 326] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [98]; unstable size 98; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 8, 1, 98] with unstable size 7 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 98] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [7]; unstable size 7; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.76745200,  4.58752918, -0.99277103, -1.30379057,  1.80976820,
         -2.48497891,  3.87898946,  2.81910634,  3.04527569]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.70068169, -10.68916798,  -4.80894661,  -4.48129988,  -7.59597015,
          -3.34438372,  -9.78639984,  -5.25471544,  -8.97214031,  -9.17322254]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.70068073, -10.68916893,  -4.80894661,  -4.48130035,  -7.59597015,
           -3.34438372,  -9.78640079,  -5.25471544,  -8.97214031,  -9.17322254],
         [ -8.70068073, -10.68916893,  -4.80894661,  -4.48130035,  -7.59597015,
           -3.34438372,  -9.78640079,  -5.25471544,  -8.97214031,  -9.17322254]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.44576883, -0.77341509, -1.91033173]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           ...,
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.89365077,
            -1.90952384, -1.63968253],
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.96507931,
            -1.95714283, -1.96507931],
           [-1.97301579, -1.97301579, -1.94126987,  ..., -1.97301579,
            -1.97301579, -1.96507931]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           ...,
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.70692432,
            -1.77133656, -1.54589367],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.80354273,
            -1.81964576, -1.86795497],
           [-1.96457338, -1.96457338, -1.93236721,  ..., -1.86795497,
            -1.91626418, -1.93236721]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.60269880,
            -1.63268375, -1.39280367],
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.67766130,
            -1.68515754, -1.69265378],
           [-1.69265378, -1.69265378, -1.66266882,  ..., -1.69265378,
            -1.69265378, -1.69265378]]],


         [[[-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           ...,
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.89365077,
            -1.90952384, -1.63968253],
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.96507931,
            -1.95714283, -1.96507931],
           [-1.97301579, -1.97301579, -1.94126987,  ..., -1.97301579,
            -1.97301579, -1.96507931]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           ...,
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.70692432,
            -1.77133656, -1.54589367],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.80354273,
            -1.81964576, -1.86795497],
           [-1.96457338, -1.96457338, -1.93236721,  ..., -1.86795497,
            -1.91626418, -1.93236721]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.60269880,
            -1.63268375, -1.39280367],
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.67766130,
            -1.68515754, -1.69265378],
           [-1.69265378, -1.69265378, -1.66266882,  ..., -1.69265378,
            -1.69265378, -1.69265378]]],


         [[[-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           ...,
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.89365077,
            -1.90952384, -1.63968253],
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.96507931,
            -1.95714283, -1.96507931],
           [-1.97301579, -1.97301579, -1.94126987,  ..., -1.97301579,
            -1.97301579, -1.96507931]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           ...,
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.70692432,
            -1.77133656, -1.54589367],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.80354273,
            -1.81964576, -1.86795497],
           [-1.96457338, -1.96457338, -1.93236721,  ..., -1.86795497,
            -1.91626418, -1.93236721]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.60269880,
            -1.63268375, -1.39280367],
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.67766130,
            -1.68515754, -1.69265378],
           [-1.69265378, -1.69265378, -1.66266882,  ..., -1.69265378,
            -1.69265378, -1.69265378]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0759 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 11, vnnlib ID: 11 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.63478470, -9.97276974, -2.42177224, -5.98180294, -3.01294947,
         -6.49992609, -5.35868835, -6.09445810, -8.49534416, -9.48241520]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [507]; unstable size 507; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 253, 1, 507] with unstable size 252 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 507] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 507] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [252]; unstable size 252; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 252] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 252] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.93055725,  5.50861359,  2.43715644, -0.28564250,  2.95803714,
          1.64144301,  2.49058795,  4.06994009,  5.13847494]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.63478470, -9.97276974, -2.42177224, -5.98180294, -3.01294947,
         -6.49992609, -5.35868835, -6.09445810, -8.49534416, -9.48241520]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.14it/s]100%|██████████| 1/1 [00:00<00:00,  9.13it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.85260201, -9.94958401, -2.69204354, -5.95113659, -2.83771229,
          -6.45710039, -5.35251665, -5.97749758, -8.52292919, -9.41183758]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.14566875]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1120 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 26.60955047607422
alpha/beta optimization time: 3.5290281772613525
initial alpha-crown bounds: tensor([[ 2.00031996,  5.62875414,  2.49428272, -0.20550299,  3.01036215,
          1.72182679,  2.55286407,  4.16995525,  5.23668861]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.20550298690795898
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 196.29343843460083
Verifying property 0 with 1 instances.
##### Instance 11 first 10 spec matrices: 
tensor([[[-1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.0003199577331543.

Properties batch 1, size 1
Remaining timeout: 196.15225672721863
Verifying property 1 with 1 instances.
##### Instance 11 first 10 spec matrices: 
tensor([[[ 0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.628754138946533.

Properties batch 2, size 1
Remaining timeout: 196.06293869018555
Verifying property 2 with 1 instances.
##### Instance 11 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.4942827224731445.

Properties batch 3, size 1
Remaining timeout: 195.9739670753479
Verifying property 3 with 1 instances.
##### Instance 11 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.20550299]], device='cuda:0') need to verify.
Model prediction is: tensor([-5.63478470, -9.97276974, -2.42177224, -5.98180294, -3.01294947,
        -6.49992609, -5.35868835, -6.09445810, -8.49534416, -9.48241520],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.20550299]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 507
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 252
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 782
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 41] 
split level 1: [/input-12, 35] 
split level 2: [/input-12, 45] 
split level 3: [/input-12, 58] 
split level 4: [/input-12, 61] 
split level 5: [/input-12, 4] 
split level 6: [/input-12, 40] 
split level 7: [/input, 393] 
pruning_in_iteration open status: True
ratio of positive domain = 254 / 256 = 0.9921875
pruning-in-iteration extra time: 0.004651069641113281
Time: prepare 0.0031    bound 0.4512    transfer 0.0020    finalize 0.0016    func 0.4578    
Accumulated time: func 0.4578    prepare 0.0035    bound 0.4512    transfer 0.0020    finalize 0.0016    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03249 (8), -0.02878 (8), 
Length of domains: 2
Time: pickout 0.0004    decision 0.2127    set_bounds 0.0163    solve 0.4579    add 0.0037    
Accumulated time: pickout 0.0004    decision 0.2127    set_bounds 0.0163    solve 0.4579    add 0.0037    
Current (lb-rhs): -0.032489895820617676
2 domains visited
Cumulative time: 0.7163910865783691

BaB round 2
batch: 2
splitting decisions: 
split level 0: [/input-12, 80] [/input-12, 80] 
split level 1: [/input, 392] [/input, 377] 
split level 2: [/input-8, 1411] [/input-8, 1411] 
split level 3: [/input-8, 1251] [/input-8, 1251] 
split level 4: [/input-8, 2043] [/input-8, 2043] 
split level 5: [/input, 428] [/input, 378] 
split level 6: [/input, 378] [/input, 428] 
pruning_in_iteration open status: True
ratio of positive domain = 188 / 256 = 0.734375
pruning-in-iteration extra time: 0.004876136779785156
Time: prepare 0.0064    bound 0.1270    transfer 0.0017    finalize 0.0012    func 0.1363    
Accumulated time: func 0.5941    prepare 0.0103    bound 0.5782    transfer 0.0037    finalize 0.0027    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01325 (15), -0.01307 (15), -0.01281 (15), -0.01263 (15), -0.01207 (15), -0.01189 (15), -0.01177 (15), -0.01163 (15), -0.01159 (15), -0.01145 (15), -0.01133 (15), -0.01116 (15), -0.01059 (15), -0.01041 (15), -0.01015 (15), -0.00997 (15), -0.00868 (15), -0.00863 (15), -0.00854 (15), -0.00850 (15), 
Length of domains: 68
Time: pickout 0.0008    decision 0.0214    set_bounds 0.0178    solve 0.1363    add 0.0010    
Accumulated time: pickout 0.0012    decision 0.2341    set_bounds 0.0341    solve 0.5943    add 0.0047    
Current (lb-rhs): -0.013250172138214111
70 domains visited
Cumulative time: 0.8942499160766602

BaB round 3
batch: 68
splitting decisions: 
split level 0: [/input, 377] [/input, 392] [/input, 377] [/input, 392] [/input, 377] [/input, 392] [/input, 377] [/input, 392] [/input, 377] [/input, 392] 
split level 1: [/input-8, 1389] [/input-8, 818] [/input-8, 1389] [/input-8, 818] [/input-8, 1389] [/input-8, 818] [/input-8, 1389] [/input-8, 818] [/input-8, 1389] [/input-8, 818] 
pruning_in_iteration open status: True
ratio of positive domain = 216 / 272 = 0.7941176470588236
pruning-in-iteration extra time: 0.004854917526245117
Time: prepare 0.0066    bound 0.1320    transfer 0.0008    finalize 0.0013    func 0.1408    
Accumulated time: func 0.7349    prepare 0.0171    bound 0.7101    transfer 0.0045    finalize 0.0040    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01029 (17), -0.01011 (17), -0.00991 (17), -0.00973 (17), -0.00911 (17), -0.00893 (17), -0.00891 (17), -0.00873 (17), -0.00873 (17), -0.00855 (17), -0.00853 (17), -0.00835 (17), -0.00773 (17), -0.00755 (17), -0.00735 (17), -0.00717 (17), -0.00571 (17), -0.00553 (17), -0.00533 (17), -0.00514 (17), 
Length of domains: 56
Time: pickout 0.0016    decision 0.0161    set_bounds 0.0090    solve 0.1408    add 0.0008    
Accumulated time: pickout 0.0028    decision 0.2502    set_bounds 0.0431    solve 0.7351    add 0.0055    
Current (lb-rhs): -0.010290265083312988
126 domains visited
Cumulative time: 1.0631754398345947

BaB round 4
batch: 56
splitting decisions: 
split level 0: [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] 
split level 1: [/input-8, 292] [/input-8, 610] [/input-8, 292] [/input-8, 610] [/input-8, 292] [/input-8, 610] [/input-8, 292] [/input-8, 610] [/input-8, 292] [/input-8, 610] 
pruning_in_iteration open status: True
ratio of positive domain = 174 / 224 = 0.7767857142857143
pruning-in-iteration extra time: 0.004552125930786133
Time: prepare 0.0054    bound 0.1190    transfer 0.0007    finalize 0.0010    func 0.1262    
Accumulated time: func 0.8611    prepare 0.0226    bound 0.8291    transfer 0.0052    finalize 0.0050    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00469 (19), -0.00445 (19), -0.00413 (19), -0.00400 (19), -0.00388 (19), -0.00375 (19), -0.00351 (19), -0.00340 (19), -0.00331 (19), -0.00326 (19), -0.00315 (19), -0.00307 (19), -0.00291 (19), -0.00282 (19), -0.00275 (19), -0.00266 (19), -0.00262 (19), -0.00257 (19), -0.00250 (19), -0.00237 (19), 
Length of domains: 50
Time: pickout 0.0014    decision 0.0151    set_bounds 0.0055    solve 0.1263    add 0.0008    
Accumulated time: pickout 0.0041    decision 0.2653    set_bounds 0.0486    solve 0.8614    add 0.0063    
Current (lb-rhs): -0.004693508148193359
176 domains visited
Cumulative time: 1.212653398513794

BaB round 5
batch: 50
splitting decisions: 
split level 0: [/input, 327] [/input, 327] [/input, 327] [/input, 327] [/input, 327] [/input, 327] [/input, 327] [/input, 327] [/input, 327] [/input, 327] 
split level 1: [/input-8, 292] [/input-8, 610] [/input-8, 292] [/input-8, 610] [/input-8, 292] [/input-8, 610] [/input-8, 292] [/input-8, 610] [/input-8, 292] [/input-8, 610] 
split level 2: [/input-8, 1410] [/input-8, 1410] [/input-8, 1410] [/input-8, 1410] [/input-8, 1410] [/input-8, 1410] [/input-8, 1410] [/input-8, 1410] [/input-8, 1410] [/input-8, 1410] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 400 / 400 = 1.0
pruning-in-iteration extra time: 5.030632019042969e-05
Time: prepare 0.0097    bound 0.0624    transfer 0.0035    finalize 0.0023    func 0.0779    
Accumulated time: func 0.9390    prepare 0.0324    bound 0.8915    transfer 0.0087    finalize 0.0074    
all_split False
Length of domains: 0
Time: pickout 0.0013    decision 0.0161    set_bounds 0.0156    solve 0.0780    add 0.0001    
Accumulated time: pickout 0.0054    decision 0.2814    set_bounds 0.0642    solve 0.9394    add 0.0064    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
176 domains visited
Cumulative time: 1.3248875141143799


Properties batch 4, size 1
Remaining timeout: 194.50191831588745
Verifying property 4 with 1 instances.
##### Instance 11 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.010362148284912.

Properties batch 5, size 1
Remaining timeout: 194.3982229232788
Verifying property 5 with 1 instances.
##### Instance 11 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.7218267917633057.

Properties batch 6, size 1
Remaining timeout: 194.30848360061646
Verifying property 6 with 1 instances.
##### Instance 11 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.5528640747070312.

Properties batch 7, size 1
Remaining timeout: 194.21983432769775
Verifying property 7 with 1 instances.
##### Instance 11 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.169955253601074.

Properties batch 8, size 1
Remaining timeout: 194.13177800178528
Verifying property 8 with 1 instances.
##### Instance 11 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.236688613891602.
Result: safe in 5.9707 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 12, vnnlib ID: 12 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.60971117, -6.54356766, -3.77449369, -4.58758783, -5.85971212,
         -3.70617151, -9.49713802, -3.95379829, -6.54922104, -5.37819719]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [436]; unstable size 436; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 114, 1, 436] with unstable size 113 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 436] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 436] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [113]; unstable size 113; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 113] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 113] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 6.80846214e-01,  1.01449513e+00, -8.60395193e-01,  3.58945131e-03,
          1.15603185e+00, -9.08453584e-01,  4.73845673e+00,  1.30274701e+00,
          2.83696294e-01]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.60971117, -6.54356766, -3.77449369, -4.58758783, -5.85971212,
         -3.70617151, -9.49713802, -3.95379829, -6.54922104, -5.37819719]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.60971117, -6.54356766, -3.77449417, -4.58758783, -5.85971165,
          -3.70617199, -9.49713802, -3.95379782, -6.54922009, -5.37819719],
         [-5.60971117, -6.54356766, -3.77449417, -4.58758783, -5.85971165,
          -3.70617199, -9.49713802, -3.95379782, -6.54922009, -5.37819719]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.17930365, -0.24762583]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 0.56666672,  0.66190481,  0.64603180,  ...,  0.24920642,
             0.26507944,  0.21746039],
           [ 0.43968260,  0.53492069,  0.51904768,  ...,  0.29682547,
             0.29682547,  0.24920642],
           [ 0.34444451,  0.39206356,  0.39206356,  ...,  0.32857150,
             0.34444451,  0.29682547],
           ...,
           [-1.83015871, -1.73492062, -1.73492062,  ..., -0.51269841,
            -0.52857143, -0.60793650],
           [-1.87777781, -1.81428576, -1.81428576,  ..., -0.52857143,
            -0.51269841, -0.52857143],
           [-1.90952384, -1.89365077, -1.87777781,  ..., -0.56031746,
            -0.59206349, -0.54444444]],

          [[ 1.15942061,  1.20772982,  1.19162667,  ...,  0.95008057,
             0.96618366,  0.91787446],
           [ 1.09500813,  1.12721443,  1.09500813,  ...,  0.98228669,
             0.99838978,  0.93397754],
           [ 0.99838978,  1.03059590,  1.01449287,  ...,  0.98228669,
             0.99838978,  0.95008057],
           ...,
           [-1.72302747, -1.57809973, -1.61030602,  ..., -0.06441211,
            -0.01610294, -0.09661824],
           [-1.80354273, -1.72302747, -1.73913050,  ..., -0.03220600,
            -0.01610294, -0.04830906],
           [-1.83574879, -1.81964576, -1.80354273,  ..., -0.06441211,
            -0.08051517, -0.04830906]],

          [[ 1.62069011,  1.62069011,  1.60569763,  ...,  1.50075006,
             1.51574254,  1.47076499],
           [ 1.59070504,  1.59070504,  1.56072009,  ...,  1.53073502,
             1.54572761,  1.48575759],
           [ 1.51574254,  1.51574254,  1.50075006,  ...,  1.50075006,
             1.51574254,  1.47076499],
           ...,
           [-1.49775124, -1.37781119, -1.39280367,  ..., -0.55322337,
            -0.61319339, -0.70314842],
           [-1.55772126, -1.49775124, -1.49775124,  ..., -0.56821585,
            -0.61319339, -0.58320838],
           [-1.58770621, -1.57271373, -1.55772126,  ..., -0.65817088,
            -0.71814090, -0.61319339]]],


         [[[ 0.56666672,  0.66190481,  0.64603180,  ...,  0.24920642,
             0.26507944,  0.21746039],
           [ 0.43968260,  0.53492069,  0.51904768,  ...,  0.29682547,
             0.29682547,  0.24920642],
           [ 0.34444451,  0.39206356,  0.39206356,  ...,  0.32857150,
             0.34444451,  0.29682547],
           ...,
           [-1.83015871, -1.73492062, -1.73492062,  ..., -0.51269841,
            -0.52857143, -0.60793650],
           [-1.87777781, -1.81428576, -1.81428576,  ..., -0.52857143,
            -0.51269841, -0.52857143],
           [-1.90952384, -1.89365077, -1.87777781,  ..., -0.56031746,
            -0.59206349, -0.54444444]],

          [[ 1.15942061,  1.20772982,  1.19162667,  ...,  0.95008057,
             0.96618366,  0.91787446],
           [ 1.09500813,  1.12721443,  1.09500813,  ...,  0.98228669,
             0.99838978,  0.93397754],
           [ 0.99838978,  1.03059590,  1.01449287,  ...,  0.98228669,
             0.99838978,  0.95008057],
           ...,
           [-1.72302747, -1.57809973, -1.61030602,  ..., -0.06441211,
            -0.01610294, -0.09661824],
           [-1.80354273, -1.72302747, -1.73913050,  ..., -0.03220600,
            -0.01610294, -0.04830906],
           [-1.83574879, -1.81964576, -1.80354273,  ..., -0.06441211,
            -0.08051517, -0.04830906]],

          [[ 1.62069011,  1.62069011,  1.60569763,  ...,  1.50075006,
             1.51574254,  1.47076499],
           [ 1.59070504,  1.59070504,  1.56072009,  ...,  1.53073502,
             1.54572761,  1.48575759],
           [ 1.51574254,  1.51574254,  1.50075006,  ...,  1.50075006,
             1.51574254,  1.47076499],
           ...,
           [-1.49775124, -1.37781119, -1.39280367,  ..., -0.55322337,
            -0.61319339, -0.70314842],
           [-1.55772126, -1.49775124, -1.49775124,  ..., -0.56821585,
            -0.61319339, -0.58320838],
           [-1.58770621, -1.57271373, -1.55772126,  ..., -0.65817088,
            -0.71814090, -0.61319339]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0799 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 13, vnnlib ID: 13 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.31652355, -10.39834499, -14.53281593, -16.07817841, -15.67444897,
         -18.01647186, -16.02903366, -17.28762436, -10.97990608, -12.63942242]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [677]; unstable size 677; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 165, 1, 677] with unstable size 164 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 677] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 677] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [164]; unstable size 164; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 164] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 164] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.35580778,  2.29579544,  4.09076500,  3.52531195,  5.89760590,
          4.21795750,  5.18644428, -0.70376539,  1.22269106]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.31652355, -10.39834499, -14.53281593, -16.07817841, -15.67444897,
         -18.01647186, -16.02903366, -17.28762436, -10.97990608, -12.63942242]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.31652260, -10.39834595, -14.53281403, -16.07817841, -15.67444897,
          -18.01647186, -16.02903175, -17.28762627, -10.97990513, -12.63942051],
         [-10.31652260, -10.39834595, -14.53281403, -16.07817841, -15.67444897,
          -18.01647186, -16.02903175, -17.28762627, -10.97990513, -12.63942051]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.08182335,  0.58155918]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[0.45555562, 0.40793657, 0.42380959,  ..., 0.75714290,
            0.74126989, 0.70952386],
           [0.47142863, 0.42380959, 0.43968260,  ..., 0.72539687,
            0.69365084, 0.66190481],
           [0.53492069, 0.50317466, 0.55079371,  ..., 0.70952386,
            0.69365084, 0.66190481],
           ...,
           [0.63015878, 0.64603180, 0.66190481,  ..., 0.64603180,
            0.67777783, 0.66190481],
           [0.64603180, 0.61428577, 0.59841275,  ..., 0.63015878,
            0.64603180, 0.66190481],
           [0.72539687, 0.66190481, 0.63015878,  ..., 0.63015878,
            0.59841275, 0.64603180]],

          [[0.48309189, 0.43478271, 0.45088577,  ..., 0.75684386,
            0.72463775, 0.69243163],
           [0.49919492, 0.45088577, 0.46698883,  ..., 0.70853472,
            0.67632860, 0.64412248],
           [0.56360716, 0.53140104, 0.57971025,  ..., 0.69243163,
            0.67632860, 0.64412248],
           ...,
           [0.61191636, 0.62801939, 0.64412248,  ..., 0.62801939,
            0.66022551, 0.64412248],
           [0.62801939, 0.59581327, 0.57971025,  ..., 0.61191636,
            0.62801939, 0.64412248],
           [0.70853472, 0.64412248, 0.61191636,  ..., 0.61191636,
            0.57971025, 0.62801939]],

          [[0.66116959, 0.61619210, 0.63118458,  ..., 0.76611710,
            0.81109464, 0.79610211],
           [0.67616212, 0.63118458, 0.64617711,  ..., 0.76611710,
            0.78110963, 0.75112462],
           [0.73613209, 0.70614707, 0.75112462,  ..., 0.79610211,
            0.78110963, 0.75112462],
           ...,
           [0.66116959, 0.67616212, 0.72113961,  ..., 0.73613209,
            0.76611710, 0.75112462],
           [0.67616212, 0.64617711, 0.66116959,  ..., 0.72113961,
            0.73613209, 0.75112462],
           [0.75112462, 0.69115460, 0.69115460,  ..., 0.72113961,
            0.69115460, 0.73613209]]],


         [[[0.45555562, 0.40793657, 0.42380959,  ..., 0.75714290,
            0.74126989, 0.70952386],
           [0.47142863, 0.42380959, 0.43968260,  ..., 0.72539687,
            0.69365084, 0.66190481],
           [0.53492069, 0.50317466, 0.55079371,  ..., 0.70952386,
            0.69365084, 0.66190481],
           ...,
           [0.63015878, 0.64603180, 0.66190481,  ..., 0.64603180,
            0.67777783, 0.66190481],
           [0.64603180, 0.61428577, 0.59841275,  ..., 0.63015878,
            0.64603180, 0.66190481],
           [0.72539687, 0.66190481, 0.63015878,  ..., 0.63015878,
            0.59841275, 0.64603180]],

          [[0.48309189, 0.43478271, 0.45088577,  ..., 0.75684386,
            0.72463775, 0.69243163],
           [0.49919492, 0.45088577, 0.46698883,  ..., 0.70853472,
            0.67632860, 0.64412248],
           [0.56360716, 0.53140104, 0.57971025,  ..., 0.69243163,
            0.67632860, 0.64412248],
           ...,
           [0.61191636, 0.62801939, 0.64412248,  ..., 0.62801939,
            0.66022551, 0.64412248],
           [0.62801939, 0.59581327, 0.57971025,  ..., 0.61191636,
            0.62801939, 0.64412248],
           [0.70853472, 0.64412248, 0.61191636,  ..., 0.61191636,
            0.57971025, 0.62801939]],

          [[0.66116959, 0.61619210, 0.63118458,  ..., 0.76611710,
            0.81109464, 0.79610211],
           [0.67616212, 0.63118458, 0.64617711,  ..., 0.76611710,
            0.78110963, 0.75112462],
           [0.73613209, 0.70614707, 0.75112462,  ..., 0.79610211,
            0.78110963, 0.75112462],
           ...,
           [0.66116959, 0.67616212, 0.72113961,  ..., 0.73613209,
            0.76611710, 0.75112462],
           [0.67616212, 0.64617711, 0.66116959,  ..., 0.72113961,
            0.73613209, 0.75112462],
           [0.75112462, 0.69115460, 0.69115460,  ..., 0.72113961,
            0.69115460, 0.73613209]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0763 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 14, vnnlib ID: 14 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.58788013, -3.57877111, -7.49758530, -6.42473507, -6.46546555,
         -7.68810511, -6.21870279, -6.45115232, -5.74132729, -1.41073096]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [534]; unstable size 534; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 186, 1, 534] with unstable size 185 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 534] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 534] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [185]; unstable size 185; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 185] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 185] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.82803464, 1.00371790, 4.58163691, 3.52479553, 3.45554543, 4.66323185,
         3.15355444, 3.39953923, 2.80839324]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0695 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 15, vnnlib ID: 15 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-3.55321646, -5.81442928, -1.99641812,  0.06207272, -0.82771432,
          0.04142630, -2.41349435, -1.42710316, -5.66043377, -4.60286999]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [492]; unstable size 492; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 188, 1, 492] with unstable size 187 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 492] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 492] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [187]; unstable size 187; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 187] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 187] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.35873747,  4.47410536,  0.94619071,  0.06511021, -0.33263895,
          1.83395362,  0.21094525,  4.77025223,  3.27124619]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.55321646, -5.81442928, -1.99641812,  0.06207272, -0.82771432,
          0.04142630, -2.41349435, -1.42710316, -5.66043377, -4.60286999]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.96010399, -6.20732403, -2.32285213, -0.28913876, -1.16081107,
          -0.13703477, -2.92448115, -1.63956416, -6.15403843, -4.97522259]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.15210399]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0060 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0694 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 16, vnnlib ID: 16 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.37839031, -13.42577553,  -6.48252678,  -7.11965179,  -6.67908382,
          -7.55561876,  -7.39423037,  -8.94825554, -12.10931110, -13.00597000]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [788]; unstable size 788; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 362, 1, 788] with unstable size 361 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 788] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 788] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [361]; unstable size 361; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 361] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 361] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.24375153,  3.81155181, -1.93120444, -1.85189080, -0.03242296,
         -1.13493085,  0.07367373,  2.53733778,  3.71830487]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.37839031, -13.42577553,  -6.48252678,  -7.11965179,  -6.67908382,
          -7.55561876,  -7.39423037,  -8.94825554, -12.10931110, -13.00597000]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.37839031, -13.42577457,  -6.48252583,  -7.11965132,  -6.67908287,
           -7.55561876,  -7.39422894,  -8.94825554, -12.10931206, -13.00597095],
         [-10.37839031, -13.42577457,  -6.48252583,  -7.11965132,  -6.67908287,
           -7.55561876,  -7.39422894,  -8.94825554, -12.10931206, -13.00597095]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.63712549, -0.44056845,  0.43596745,  0.27457762]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-0.59206349, -0.57619047, -0.54444444,  ..., -1.27460313,
            -1.17936504, -1.05238092],
           [-0.54444444, -0.54444444, -0.51269841,  ..., -1.21111107,
            -1.17936504, -0.94126981],
           [-0.52857143, -0.56031746, -0.52857143,  ..., -1.29047608,
            -1.21111107, -0.90952379],
           ...,
           [-0.35396814, -0.35396814, -0.33809513,  ...,  0.05873025,
             0.09047628,  0.02698422],
           [-0.33809513, -0.32222211, -0.30634910,  ...,  0.15396833,
             0.23333341,  0.24920642],
           [-0.36984116, -0.30634910, -0.35396814,  ...,  0.21746039,
             0.24920642,  0.24920642]],

          [[-0.70853460, -0.69243151, -0.66022539,  ..., -1.25603855,
            -1.19162631, -1.07890499],
           [-0.66022539, -0.66022539, -0.62801927,  ..., -1.19162631,
            -1.19162631, -0.98228657],
           [-0.66022539, -0.67632848, -0.64412236,  ..., -1.27214170,
            -1.22383249, -0.95008045],
           ...,
           [-0.46698871, -0.46698871, -0.45088565,  ..., -0.06441211,
            -0.03220600, -0.09661824],
           [-0.43478248, -0.41867942, -0.38647330,  ...,  0.03220624,
             0.11272153,  0.12882459],
           [-0.45088565, -0.37037024, -0.38647330,  ...,  0.09661847,
             0.14492765,  0.12882459]],

          [[-0.74812591, -0.73313338, -0.68815589,  ..., -1.01799107,
            -0.95802099, -0.95802099],
           [-0.70314842, -0.70314842, -0.67316341,  ..., -0.95802099,
            -0.95802099, -0.86806595],
           [-0.70314842, -0.71814090, -0.68815589,  ..., -1.03298354,
            -0.98800600, -0.82308841],
           ...,
           [-0.46326834, -0.44827583, -0.44827583,  ..., -0.07346311,
            -0.04347810, -0.10344811],
           [-0.43328333, -0.41829082, -0.40329832,  ...,  0.01649191,
             0.09145443,  0.10644694],
           [-0.47826082, -0.40329832, -0.43328333,  ...,  0.04647692,
             0.09145443,  0.07646193]]],


         [[[-0.59206349, -0.57619047, -0.54444444,  ..., -1.27460313,
            -1.17936504, -1.05238092],
           [-0.54444444, -0.54444444, -0.51269841,  ..., -1.21111107,
            -1.17936504, -0.94126981],
           [-0.52857143, -0.56031746, -0.52857143,  ..., -1.29047608,
            -1.21111107, -0.90952379],
           ...,
           [-0.35396814, -0.35396814, -0.33809513,  ...,  0.05873025,
             0.09047628,  0.02698422],
           [-0.33809513, -0.32222211, -0.30634910,  ...,  0.15396833,
             0.23333341,  0.24920642],
           [-0.36984116, -0.30634910, -0.35396814,  ...,  0.21746039,
             0.24920642,  0.24920642]],

          [[-0.70853460, -0.69243151, -0.66022539,  ..., -1.25603855,
            -1.19162631, -1.07890499],
           [-0.66022539, -0.66022539, -0.62801927,  ..., -1.19162631,
            -1.19162631, -0.98228657],
           [-0.66022539, -0.67632848, -0.64412236,  ..., -1.27214170,
            -1.22383249, -0.95008045],
           ...,
           [-0.46698871, -0.46698871, -0.45088565,  ..., -0.06441211,
            -0.03220600, -0.09661824],
           [-0.43478248, -0.41867942, -0.38647330,  ...,  0.03220624,
             0.11272153,  0.12882459],
           [-0.45088565, -0.37037024, -0.38647330,  ...,  0.09661847,
             0.14492765,  0.12882459]],

          [[-0.74812591, -0.73313338, -0.68815589,  ..., -1.01799107,
            -0.95802099, -0.95802099],
           [-0.70314842, -0.70314842, -0.67316341,  ..., -0.95802099,
            -0.95802099, -0.86806595],
           [-0.70314842, -0.71814090, -0.68815589,  ..., -1.03298354,
            -0.98800600, -0.82308841],
           ...,
           [-0.46326834, -0.44827583, -0.44827583,  ..., -0.07346311,
            -0.04347810, -0.10344811],
           [-0.43328333, -0.41829082, -0.40329832,  ...,  0.01649191,
             0.09145443,  0.10644694],
           [-0.47826082, -0.40329832, -0.43328333,  ...,  0.04647692,
             0.09145443,  0.07646193]]],


         [[[-0.59206349, -0.57619047, -0.54444444,  ..., -1.27460313,
            -1.17936504, -1.05238092],
           [-0.54444444, -0.54444444, -0.51269841,  ..., -1.21111107,
            -1.17936504, -0.94126981],
           [-0.52857143, -0.56031746, -0.52857143,  ..., -1.29047608,
            -1.21111107, -0.90952379],
           ...,
           [-0.35396814, -0.35396814, -0.33809513,  ...,  0.05873025,
             0.09047628,  0.02698422],
           [-0.33809513, -0.32222211, -0.30634910,  ...,  0.15396833,
             0.23333341,  0.24920642],
           [-0.36984116, -0.30634910, -0.35396814,  ...,  0.21746039,
             0.24920642,  0.24920642]],

          [[-0.70853460, -0.69243151, -0.66022539,  ..., -1.25603855,
            -1.19162631, -1.07890499],
           [-0.66022539, -0.66022539, -0.62801927,  ..., -1.19162631,
            -1.19162631, -0.98228657],
           [-0.66022539, -0.67632848, -0.64412236,  ..., -1.27214170,
            -1.22383249, -0.95008045],
           ...,
           [-0.46698871, -0.46698871, -0.45088565,  ..., -0.06441211,
            -0.03220600, -0.09661824],
           [-0.43478248, -0.41867942, -0.38647330,  ...,  0.03220624,
             0.11272153,  0.12882459],
           [-0.45088565, -0.37037024, -0.38647330,  ...,  0.09661847,
             0.14492765,  0.12882459]],

          [[-0.74812591, -0.73313338, -0.68815589,  ..., -1.01799107,
            -0.95802099, -0.95802099],
           [-0.70314842, -0.70314842, -0.67316341,  ..., -0.95802099,
            -0.95802099, -0.86806595],
           [-0.70314842, -0.71814090, -0.68815589,  ..., -1.03298354,
            -0.98800600, -0.82308841],
           ...,
           [-0.46326834, -0.44827583, -0.44827583,  ..., -0.07346311,
            -0.04347810, -0.10344811],
           [-0.43328333, -0.41829082, -0.40329832,  ...,  0.01649191,
             0.09145443,  0.10644694],
           [-0.47826082, -0.40329832, -0.43328333,  ...,  0.04647692,
             0.09145443,  0.07646193]]],


         [[[-0.59206349, -0.57619047, -0.54444444,  ..., -1.27460313,
            -1.17936504, -1.05238092],
           [-0.54444444, -0.54444444, -0.51269841,  ..., -1.21111107,
            -1.17936504, -0.94126981],
           [-0.52857143, -0.56031746, -0.52857143,  ..., -1.29047608,
            -1.21111107, -0.90952379],
           ...,
           [-0.35396814, -0.35396814, -0.33809513,  ...,  0.05873025,
             0.09047628,  0.02698422],
           [-0.33809513, -0.32222211, -0.30634910,  ...,  0.15396833,
             0.23333341,  0.24920642],
           [-0.36984116, -0.30634910, -0.35396814,  ...,  0.21746039,
             0.24920642,  0.24920642]],

          [[-0.70853460, -0.69243151, -0.66022539,  ..., -1.25603855,
            -1.19162631, -1.07890499],
           [-0.66022539, -0.66022539, -0.62801927,  ..., -1.19162631,
            -1.19162631, -0.98228657],
           [-0.66022539, -0.67632848, -0.64412236,  ..., -1.27214170,
            -1.22383249, -0.95008045],
           ...,
           [-0.46698871, -0.46698871, -0.45088565,  ..., -0.06441211,
            -0.03220600, -0.09661824],
           [-0.43478248, -0.41867942, -0.38647330,  ...,  0.03220624,
             0.11272153,  0.12882459],
           [-0.45088565, -0.37037024, -0.38647330,  ...,  0.09661847,
             0.14492765,  0.12882459]],

          [[-0.74812591, -0.73313338, -0.68815589,  ..., -1.01799107,
            -0.95802099, -0.95802099],
           [-0.70314842, -0.70314842, -0.67316341,  ..., -0.95802099,
            -0.95802099, -0.86806595],
           [-0.70314842, -0.71814090, -0.68815589,  ..., -1.03298354,
            -0.98800600, -0.82308841],
           ...,
           [-0.46326834, -0.44827583, -0.44827583,  ..., -0.07346311,
            -0.04347810, -0.10344811],
           [-0.43328333, -0.41829082, -0.40329832,  ...,  0.01649191,
             0.09145443,  0.10644694],
           [-0.47826082, -0.40329832, -0.43328333,  ...,  0.04647692,
             0.09145443,  0.07646193]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0804 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 17, vnnlib ID: 17 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.48207045,  -2.39753056,  -9.58371258, -10.52106094,  -9.25177765,
         -11.82708836, -10.46574306, -11.05204582,  -6.78091049,  -5.65733051]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [502]; unstable size 502; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 254, 1, 502] with unstable size 253 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 502] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 502] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [253]; unstable size 253; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 253] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 253] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.89075279, 4.35961246, 5.77320862, 4.46269131, 6.95126152, 5.95177555,
         6.24258089, 2.54485893, 2.28885126]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0662 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 18, vnnlib ID: 18 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-13.97675323, -17.08073425,  -8.92278004, -11.53713417,  -9.34353065,
         -11.19538307,  -8.12182331, -11.58376312, -17.60232544, -15.83768177]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [512]; unstable size 512; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 260, 1, 512] with unstable size 259 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 512] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 512] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [259]; unstable size 259; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 259] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 259] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.63812375,  6.80160332, -0.75694084,  2.17035437, -0.29967880,
          1.59824860,  1.65513229,  7.41604805,  5.91091537]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-13.97675323, -17.08073425,  -8.92278004, -11.53713417,  -9.34353065,
         -11.19538307,  -8.12182331, -11.58376312, -17.60232544, -15.83768177]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-14.56005764, -18.10161591,  -9.57238865, -12.55412483, -10.26584530,
          -12.21403694,  -9.57373428, -12.60732460, -18.38806343, -16.88108253],
         [-14.56005764, -18.10161591,  -9.57238865, -12.55412483, -10.26584530,
          -12.21403694,  -9.57373428, -12.60732460, -18.38806343, -16.88108253]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.00134563,  0.69211102]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0060 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0735 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 19, vnnlib ID: 19 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.67748737, -15.99068165,  -8.99268341,  -7.79347992,  -8.35536575,
          -8.22471714,  -9.16943359, -11.52655983, -13.26644325, -15.81279469]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [547]; unstable size 547; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 260, 1, 547] with unstable size 259 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 547] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 547] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [259]; unstable size 259; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 259] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 259] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.43207598,  6.44367456,  0.19957805, -0.46666551,  0.09526157,
          0.46659350,  2.60346079,  3.93457603,  6.28853273]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.67748737, -15.99068165,  -8.99268341,  -7.79347992,  -8.35536575,
          -8.22471714,  -9.16943359, -11.52655983, -13.26644325, -15.81279469]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-12.68204021, -16.05737877,  -8.96092319,  -8.17651176,  -8.15779305,
           -8.62596226,  -9.30371189, -11.61334324, -13.34238148, -16.04029083]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.01871872]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0055 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0710 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 20, vnnlib ID: 20 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.99751091, -10.60476208,  -5.80764198,  -6.15668106,  -6.26862431,
          -6.07673597,  -4.08238983,  -8.79667854,  -9.22789669, -10.72688580]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [601]; unstable size 601; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 287, 1, 601] with unstable size 286 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 601] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 601] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [286]; unstable size 286; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 286] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 286] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.22418571, 4.25854826, 0.62012959, 0.93473458, 0.88097095, 0.60569596,
         2.78608918, 3.20536184, 4.78958416]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0652 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 21, vnnlib ID: 21 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.39633656, -10.81733418,  -8.14680481,  -7.67903614,  -8.47020626,
          -6.77577496, -10.40852451,  -8.02430439, -10.83304310,  -9.56988335]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [512]; unstable size 512; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 172, 1, 512] with unstable size 171 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 512] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 512] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [171]; unstable size 171; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 171] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 171] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.18678737, 2.55919075, 0.31564891, 0.61779261, 0.64823699, 2.52021646,
         0.37382317, 2.55972433, 1.61684656]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0644 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 22, vnnlib ID: 22 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.61524105, -12.71203899, -11.56439686, -11.98183823, -11.60697556,
         -12.97468090, -12.19276619, -14.18572140,  -5.67168808, -12.38231468]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [599]; unstable size 599; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 173, 1, 599] with unstable size 172 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 599] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 599] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [172]; unstable size 172; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 172] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 172] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.42892742, 5.35214663, 4.30807924, 4.89422417, 4.33142710, 5.69092751,
         5.16717911, 6.89458799, 4.89000034]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0704 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 23, vnnlib ID: 23 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.84393740, -7.84841537, -4.07208776, -2.13655066, -4.59707069,
         -1.22025633, -5.05424547, -3.93261433, -4.29843807, -6.48314619]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [499]; unstable size 499; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 185, 1, 499] with unstable size 184 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 499] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 499] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [184]; unstable size 184; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 184] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 184] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.94525373, 4.37971735, 1.50863886, 0.51084441, 2.10668612, 2.74752998,
         1.74771595, 1.16706777, 3.61705399]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0689 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 24, vnnlib ID: 24 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.95971680,  -7.97020435, -11.66736698, -13.97354507, -12.17215443,
         -15.07821083, -12.78244114, -14.01900578, -10.50253868, -10.70786572]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [778]; unstable size 778; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 305, 1, 778] with unstable size 304 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 778] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 778] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [304]; unstable size 304; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 304] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 304] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.83722687,  1.20715904,  3.54842663,  1.72621632,  4.45857143,
          2.37408161,  3.37173080,  0.75684643,  1.53906167]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.95971680,  -7.97020435, -11.66736698, -13.97354507, -12.17215443,
         -15.07821083, -12.78244114, -14.01900578, -10.50253868, -10.70786572]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.67it/s]100%|██████████| 1/1 [00:00<00:00,  7.67it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.18222904,  -8.04493713, -10.81180954, -13.20889759, -11.28295040,
          -14.31022644, -12.04443455, -13.26400185,  -9.93011951, -10.47806263]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.13729191]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1334 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 19.56053924560547
alpha/beta optimization time: 1.329326868057251
initial alpha-crown bounds: tensor([[-0.67048264,  1.36126328,  3.71650124,  1.91701984,  4.64379406,
          2.51711655,  3.56975937,  0.87808704,  1.62748063]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.6704826354980469
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.48472094535828
Verifying property 0 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.67048264]], device='cuda:0') need to verify.
Model prediction is: tensor([ -8.95971680,  -7.97020435, -11.66736698, -13.97354507, -12.17215443,
        -15.07821083, -12.78244114, -14.01900578, -10.50253868, -10.70786572],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.67048264]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 778
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 300
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 1101
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 10] 
split level 1: [/input-12, 60] 
split level 2: [/input-12, 13] 
split level 3: [/input-12, 1] 
split level 4: [/input-12, 36] 
split level 5: [/input-12, 92] 
split level 6: [/input-12, 93] 
split level 7: [/input-12, 37] 
pruning_in_iteration open status: True
ratio of positive domain = 202 / 256 = 0.7890625
pruning-in-iteration extra time: 0.004970073699951172
Time: prepare 0.0018    bound 0.1232    transfer 0.0023    finalize 0.0015    func 0.1288    
Accumulated time: func 0.1288    prepare 0.0022    bound 0.1232    transfer 0.0023    finalize 0.0015    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.22762 (8), -0.22604 (8), -0.21837 (8), -0.21766 (8), -0.21756 (8), -0.21695 (8), -0.21536 (8), -0.21408 (8), -0.19646 (8), -0.19492 (8), -0.19323 (8), -0.19281 (8), -0.18915 (8), -0.18794 (8), -0.18785 (8), -0.18623 (8), -0.18572 (8), -0.18318 (8), -0.17834 (8), -0.17773 (8), 
Length of domains: 54
Time: pickout 0.0004    decision 0.0230    set_bounds 0.0162    solve 0.1289    add 0.0024    
Accumulated time: pickout 0.0004    decision 0.0230    set_bounds 0.0162    solve 0.1289    add 0.0024    
Current (lb-rhs): -0.22762203216552734
54 domains visited
Cumulative time: 0.1782090663909912

BaB round 2
batch: 54
splitting decisions: 
split level 0: [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] 
split level 1: [/input-8, 677] [/input-12, 4] [/input-8, 677] [/input-12, 4] [/input-8, 677] [/input-12, 4] [/input-8, 677] [/input-12, 4] [/input-8, 677] [/input-12, 4] 
pruning_in_iteration open status: True
ratio of positive domain = 152 / 216 = 0.7037037037037037
pruning-in-iteration extra time: 0.004658937454223633
Time: prepare 0.0037    bound 0.1268    transfer 0.0006    finalize 0.0013    func 0.1325    
Accumulated time: func 0.2612    prepare 0.0060    bound 0.2500    transfer 0.0029    finalize 0.0028    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21034 (10), -0.20879 (10), -0.20109 (10), -0.20064 (10), -0.19969 (10), -0.19906 (10), -0.19755 (10), -0.19635 (10), -0.17733 (10), -0.17659 (10), -0.17357 (10), -0.17327 (10), -0.17098 (10), -0.16985 (10), -0.16921 (10), -0.16802 (10), -0.16673 (10), -0.16434 (10), -0.15817 (10), -0.15721 (10), 
Length of domains: 64
Time: pickout 0.0010    decision 0.0155    set_bounds 0.0063    solve 0.1325    add 0.0008    
Accumulated time: pickout 0.0014    decision 0.0385    set_bounds 0.0226    solve 0.2614    add 0.0032    
Current (lb-rhs): -0.21033954620361328
118 domains visited
Cumulative time: 0.334822416305542

BaB round 3
batch: 64
splitting decisions: 
split level 0: [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] 
split level 1: [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-8, 603] [/input-8, 603] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] 
pruning_in_iteration open status: True
ratio of positive domain = 160 / 256 = 0.625
pruning-in-iteration extra time: 0.004627704620361328
Time: prepare 0.0049    bound 0.1225    transfer 0.0008    finalize 0.0016    func 0.1299    
Accumulated time: func 0.3911    prepare 0.0111    bound 0.3725    transfer 0.0037    finalize 0.0044    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.19513 (12), -0.18879 (12), -0.18634 (12), -0.18627 (12), -0.18544 (12), -0.18524 (12), -0.18306 (12), -0.18289 (12), -0.18128 (12), -0.17680 (12), -0.16774 (12), -0.16259 (12), -0.16224 (12), -0.16028 (12), -0.16018 (12), -0.15974 (12), -0.15533 (12), -0.15056 (12), -0.15022 (12), -0.14944 (12), 
Length of domains: 96
Time: pickout 0.0012    decision 0.0142    set_bounds 0.0077    solve 0.1300    add 0.0010    
Accumulated time: pickout 0.0027    decision 0.0526    set_bounds 0.0302    solve 0.3914    add 0.0041    
Current (lb-rhs): -0.19512557983398438
214 domains visited
Cumulative time: 0.4892845153808594

BaB round 4
batch: 96
splitting decisions: 
split level 0: [/input-8, 1880] [/input-12, 90] [/input-12, 90] [/input-8, 670] [/input-8, 1045] [/input-8, 670] [/input-12, 90] [/input-12, 33] [/input-12, 90] [/input-8, 1880] 
split level 1: [/input-8, 670] [/input-8, 1045] [/input-8, 670] [/input-12, 90] [/input-8, 1880] [/input-8, 603] [/input-8, 1045] [/input-12, 90] [/input-8, 670] [/input-8, 603] 
pruning_in_iteration open status: True
ratio of positive domain = 134 / 384 = 0.34895833333333337
pruning-in-iteration extra time: 0.004457950592041016
Time: prepare 0.0103    bound 0.1526    transfer 0.0018    finalize 0.0025    func 0.1673    
Accumulated time: func 0.5584    prepare 0.0215    bound 0.5251    transfer 0.0055    finalize 0.0070    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18257 (14), -0.17854 (14), -0.17580 (14), -0.17499 (14), -0.17250 (14), -0.17114 (14), -0.16766 (14), -0.16664 (14), -0.16503 (14), -0.16408 (14), -0.16326 (14), -0.16173 (14), -0.16075 (14), -0.15911 (14), -0.15872 (14), -0.15744 (14), -0.15729 (14), -0.15722 (14), -0.15579 (14), -0.15380 (14), 
Length of domains: 250
Time: pickout 0.0015    decision 0.0193    set_bounds 0.0119    solve 0.1674    add 0.0018    
Accumulated time: pickout 0.0042    decision 0.0719    set_bounds 0.0421    solve 0.5587    add 0.0059    
Current (lb-rhs): -0.1825695037841797
464 domains visited
Cumulative time: 0.6915886402130127

BaB round 5
batch: 250
splitting decisions: 
split level 0: [/input-12, 90] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-8, 1880] [/input-12, 33] [/input-8, 1880] [/input-12, 33] [/input-12, 33] 
pruning_in_iteration open status: True
ratio of positive domain = 232 / 500 = 0.46399999999999997
pruning-in-iteration extra time: 0.004487514495849609
Time: prepare 0.0095    bound 0.1643    transfer 0.0030    finalize 0.0025    func 0.1793    
Accumulated time: func 0.7377    prepare 0.0312    bound 0.6894    transfer 0.0085    finalize 0.0095    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.17798 (15), -0.17147 (15), -0.17108 (15), -0.17075 (15), -0.16501 (15), -0.16328 (15), -0.16235 (15), -0.16041 (15), -0.15938 (15), -0.15909 (15), -0.15728 (15), -0.15628 (15), -0.15560 (15), -0.15435 (15), -0.15434 (15), -0.15288 (15), -0.15279 (15), -0.15277 (15), -0.14952 (15), -0.14771 (15), 
Length of domains: 268
Time: pickout 0.0032    decision 0.0253    set_bounds 0.0101    solve 0.1794    add 0.0013    
Accumulated time: pickout 0.0073    decision 0.0972    set_bounds 0.0522    solve 0.7381    add 0.0072    
Current (lb-rhs): -0.1779794692993164
732 domains visited
Cumulative time: 0.9118273258209229

BaB round 6
batch: 268
splitting decisions: 
split level 0: [/input-12, 33] [/input-12, 90] [/input-8, 670] [/input-12, 33] [/input-8, 670] [/input-12, 90] [/input-8, 603] [/input-8, 1880] [/input-12, 90] [/input-8, 603] 
pruning_in_iteration open status: True
ratio of positive domain = 146 / 536 = 0.2723880597014925
pruning-in-iteration extra time: 0.0045430660247802734
Time: prepare 0.0118    bound 0.1533    transfer 0.0028    finalize 0.0032    func 0.1711    
Accumulated time: func 0.9089    prepare 0.0432    bound 0.8427    transfer 0.0113    finalize 0.0127    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16657 (16), -0.16562 (16), -0.16047 (16), -0.15961 (16), -0.15938 (16), -0.15926 (16), -0.15884 (16), -0.15857 (16), -0.15835 (16), -0.15463 (16), -0.15332 (16), -0.15320 (16), -0.15257 (16), -0.15244 (16), -0.15209 (16), -0.15111 (16), -0.15059 (16), -0.14699 (16), -0.14557 (16), -0.14553 (16), 
Length of domains: 390
Time: pickout 0.0033    decision 0.0248    set_bounds 0.0109    solve 0.1712    add 0.0017    
Accumulated time: pickout 0.0107    decision 0.1220    set_bounds 0.0631    solve 0.9094    add 0.0089    
Current (lb-rhs): -0.16656780242919922
1122 domains visited
Cumulative time: 1.1244380474090576

BaB round 7
batch: 390
splitting decisions: 
split level 0: [/input-8, 603] [/input-8, 811] [/input-8, 670] [/input-8, 603] [/input-8, 1880] [/input-8, 670] [/input-8, 1880] [/input-8, 811] [/input-8, 603] [/input-8, 811] 
pruning_in_iteration open status: False
ratio of positive domain = 122 / 780 = 0.1564102564102564
pruning-in-iteration extra time: 7.05718994140625e-05
Time: prepare 0.0147    bound 0.0998    transfer 0.0038    finalize 0.0042    func 0.1226    
Accumulated time: func 1.0315    prepare 0.0581    bound 0.9425    transfer 0.0151    finalize 0.0169    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.15738 (17), -0.15733 (17), -0.15691 (17), -0.15263 (17), -0.15197 (17), -0.15163 (17), -0.15131 (17), -0.15096 (17), -0.15094 (17), -0.15079 (17), -0.14996 (17), -0.14981 (17), -0.14976 (17), -0.14606 (17), -0.14560 (17), -0.14554 (17), -0.14552 (17), -0.14498 (17), -0.14496 (17), -0.14463 (17), 
Length of domains: 657
Time: pickout 0.0048    decision 0.0311    set_bounds 0.0155    solve 0.1232    add 0.0028    
Accumulated time: pickout 0.0155    decision 0.1531    set_bounds 0.0786    solve 1.0326    add 0.0117    
Current (lb-rhs): -0.157379150390625
1779 domains visited
Cumulative time: 1.3025946617126465

BaB round 8
batch: 657
splitting decisions: 
split level 0: [/input-8, 811] [/input-8, 158] [/input-8, 811] [/input-12, 80] [/input-12, 80] [/input-8, 811] [/input-12, 80] [/input-8, 670] [/input-8, 811] [/input-8, 158] 
pruning_in_iteration open status: False
ratio of positive domain = 218 / 1314 = 0.16590563165905636
pruning-in-iteration extra time: 5.4836273193359375e-05
Time: prepare 0.0244    bound 0.1101    transfer 0.0063    finalize 0.0067    func 0.1481    
Accumulated time: func 1.1796    prepare 0.0827    bound 1.0526    transfer 0.0214    finalize 0.0236    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.15565 (18), -0.15524 (18), -0.15439 (18), -0.15028 (18), -0.14996 (18), -0.14992 (18), -0.14921 (18), -0.14911 (18), -0.14773 (18), -0.14693 (18), -0.14560 (18), -0.14532 (18), -0.14432 (18), -0.14371 (18), -0.14355 (18), -0.14112 (18), -0.14044 (18), -0.14029 (18), -0.14017 (18), -0.13966 (18), 
Length of domains: 1090
Time: pickout 0.0075    decision 0.0456    set_bounds 0.0260    solve 0.1483    add 0.0193    
Accumulated time: pickout 0.0230    decision 0.1986    set_bounds 0.1046    solve 1.1808    add 0.0311    
Current (lb-rhs): -0.15565109252929688
2869 domains visited
Cumulative time: 1.5509617328643799

BaB round 9
batch: 1090
splitting decisions: 
split level 0: [/input-12, 80] [/input-8, 603] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-8, 603] [/input-12, 80] [/input-12, 80] [/input-8, 677] [/input-12, 80] 
pruning_in_iteration open status: True
ratio of positive domain = 509 / 2180 = 0.23348623853211015
pruning-in-iteration extra time: 0.0015840530395507812
Time: prepare 0.0407    bound 0.1513    transfer 0.0125    finalize 0.0130    func 0.2175    
Accumulated time: func 1.3971    prepare 0.1236    bound 1.2038    transfer 0.0339    finalize 0.0366    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.15308 (19), -0.15253 (19), -0.14755 (19), -0.14732 (19), -0.14692 (19), -0.14661 (19), -0.14626 (19), -0.14301 (19), -0.14253 (19), -0.14224 (19), -0.14187 (19), -0.14147 (19), -0.14106 (19), -0.14058 (19), -0.14019 (19), -0.13929 (19), -0.13802 (19), -0.13755 (19), -0.13735 (19), -0.13695 (19), 
Length of domains: 1671
Time: pickout 0.0130    decision 0.0703    set_bounds 0.0436    solve 0.2183    add 0.0106    
Accumulated time: pickout 0.0360    decision 0.2689    set_bounds 0.1482    solve 1.3991    add 0.0417    
Current (lb-rhs): -0.1530771255493164
4540 domains visited
Cumulative time: 1.909916639328003

BaB round 10
batch: 1671
splitting decisions: 
split level 0: [/input-12, 80] [/input-8, 987] [/input-8, 811] [/input-8, 1069] [/input-8, 811] [/input-8, 987] [/input-8, 158] [/input-8, 677] [/input-8, 811] [/input-8, 987] 
pruning_in_iteration open status: False
ratio of positive domain = 594 / 3342 = 0.177737881508079
pruning-in-iteration extra time: 6.794929504394531e-05
Time: prepare 0.0649    bound 0.1783    transfer 0.0152    finalize 0.0190    func 0.2775    
Accumulated time: func 1.6747    prepare 0.1888    bound 1.3822    transfer 0.0492    finalize 0.0556    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14850 (20), -0.14802 (20), -0.14309 (20), -0.14281 (20), -0.14203 (20), -0.14170 (20), -0.14060 (20), -0.13938 (20), -0.13900 (20), -0.13812 (20), -0.13692 (20), -0.13651 (20), -0.13644 (20), -0.13610 (20), -0.13567 (20), -0.13477 (20), -0.13440 (20), -0.13383 (20), -0.13357 (20), -0.13288 (20), 
Length of domains: 2721
Time: pickout 0.0228    decision 0.2767    set_bounds 0.0671    solve 0.2785    add 0.1147    
Accumulated time: pickout 0.0588    decision 0.5456    set_bounds 0.2153    solve 1.6776    add 0.1563    
Current (lb-rhs): -0.14850425720214844
7261 domains visited
Cumulative time: 2.679967164993286

BaB round 11
batch: 2721
splitting decisions: 
split level 0: [/input-8, 987] [/input-12, 80] [/input-8, 158] [/input-12, 80] [/input-12, 80] [/input-8, 1315] [/input-12, 80] [/input-8, 158] [/input-12, 80] [/input-12, 80] 
pruning_in_iteration open status: False
ratio of positive domain = 952 / 5442 = 0.17493568540977578
pruning-in-iteration extra time: 7.414817810058594e-05
Time: prepare 0.1156    bound 0.2639    transfer 0.0304    finalize 0.0306    func 0.4416    
Accumulated time: func 2.1162    prepare 0.3046    bound 1.6460    transfer 0.0795    finalize 0.0862    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14188 (21), -0.14144 (21), -0.13652 (21), -0.13639 (21), -0.13616 (21), -0.13538 (21), -0.13513 (21), -0.13492 (21), -0.13340 (21), -0.13203 (21), -0.13194 (21), -0.13058 (21), -0.13030 (21), -0.12980 (21), -0.12973 (21), -0.12948 (21), -0.12937 (21), -0.12927 (21), -0.12873 (21), -0.12865 (21), 
Length of domains: 4456
Time: pickout 0.0503    decision 0.1559    set_bounds 0.2914    solve 0.4425    add 0.1039    
Accumulated time: pickout 0.1092    decision 0.7015    set_bounds 0.5068    solve 2.1201    add 0.2602    
Current (lb-rhs): -0.14188289642333984
11717 domains visited
Cumulative time: 3.732022762298584

BaB round 12
batch: 4096
splitting decisions: 
split level 0: [/input-8, 1315] [/input-8, 987] [/input-8, 677] [/input-12, 80] [/input-8, 988] [/input-8, 1069] [/input-8, 1055] [/input-8, 1315] [/input-8, 1069] [/input-8, 1315] 
pruning_in_iteration open status: False
ratio of positive domain = 1275 / 8192 = 0.1556396484375
pruning-in-iteration extra time: 7.534027099609375e-05
Time: prepare 0.1691    bound 0.3668    transfer 0.0454    finalize 0.0462    func 0.6289    
Accumulated time: func 2.7451    prepare 0.4740    bound 2.0129    transfer 0.1249    finalize 0.1324    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.13881 (22), -0.13844 (22), -0.13351 (22), -0.13310 (22), -0.13228 (22), -0.13208 (22), -0.13005 (22), -0.12925 (22), -0.12859 (22), -0.12723 (22), -0.12672 (22), -0.12660 (22), -0.12605 (22), -0.12549 (22), -0.12523 (22), -0.12513 (22), -0.12499 (22), -0.12475 (22), -0.12453 (22), -0.12441 (22), 
Length of domains: 7249
Time: pickout 0.0549    decision 0.2288    set_bounds 0.3488    solve 0.6300    add 0.0272    
Accumulated time: pickout 0.1641    decision 0.9303    set_bounds 0.8555    solve 2.7501    add 0.2874    
Current (lb-rhs): -0.13881397247314453
18606 domains visited
current_vram/total_varm: 10.3GB/99.9GB, batch_size increase to 8192
Cumulative time: 5.035243034362793

BaB round 13
batch: 7249
splitting decisions: 
split level 0: [/input-8, 1315] [/input-8, 1315] [/input-8, 1315] [/input-8, 677] [/input-8, 1315] [/input-8, 1315] [/input-8, 1315] [/input-12, 80] [/input-8, 987] [/input-8, 987] 
pruning_in_iteration open status: False
ratio of positive domain = 2595 / 14498 = 0.17899020554559253
pruning-in-iteration extra time: 0.00013685226440429688
Time: prepare 0.3051    bound 0.6127    transfer 0.0806    finalize 0.0785    func 1.0776    
Accumulated time: func 3.8227    prepare 0.7794    bound 2.6255    transfer 0.2056    finalize 0.2108    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.13113 (23), -0.13034 (23), -0.12904 (23), -0.12796 (23), -0.12537 (23), -0.12534 (23), -0.12457 (23), -0.12450 (23), -0.12425 (23), -0.12417 (23), -0.12395 (23), -0.12334 (23), -0.12293 (23), -0.12260 (23), -0.12255 (23), -0.12220 (23), -0.12161 (23), -0.12120 (23), -0.12016 (23), -0.11952 (23), 
Length of domains: 11844
Time: pickout 0.0987    decision 0.5468    set_bounds 0.4594    solve 1.0800    add 0.1363    
Accumulated time: pickout 0.2628    decision 1.4771    set_bounds 1.3149    solve 3.8301    add 0.4237    
Current (lb-rhs): -0.13112735748291016
30450 domains visited
Cumulative time: 7.376725673675537

BaB round 14
batch: 8192
splitting decisions: 
split level 0: [/input-8, 987] [/input-8, 1069] [/input-8, 981] [/input-8, 1055] [/input-8, 1055] [/input-8, 810] [/input-8, 1055] [/input-8, 810] [/input-8, 810] [/input-8, 810] 
pruning_in_iteration open status: False
ratio of positive domain = 3012 / 16384 = 0.183837890625
pruning-in-iteration extra time: 0.00013017654418945312
Time: prepare 0.5083    bound 0.6841    transfer 0.0902    finalize 0.0934    func 1.3770    
Accumulated time: func 5.1997    prepare 1.2880    bound 3.3097    transfer 0.2958    finalize 0.3042    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12904 (23), -0.12796 (23), -0.12504 (24), -0.12428 (24), -0.12334 (23), -0.12293 (23), -0.12260 (23), -0.12255 (23), -0.12185 (24), -0.12161 (23), -0.12120 (23), -0.12115 (24), -0.12008 (24), -0.11965 (24), -0.11955 (24), -0.11944 (24), -0.11918 (23), -0.11907 (24), -0.11894 (24), -0.11891 (24), 
Length of domains: 16957
Time: pickout 0.1160    decision 0.6400    set_bounds 0.3344    solve 1.3795    add 0.2447    
Accumulated time: pickout 0.3788    decision 2.1171    set_bounds 1.6494    solve 5.2096    add 0.6684    
Current (lb-rhs): -0.12903976440429688
43755 domains visited
current_vram/total_varm: 23.3GB/99.9GB, batch_size increase to 16384
Cumulative time: 10.11573076248169

BaB round 15
batch: 16384
splitting decisions: 
split level 0: [/input-8, 810] [/input-8, 1454] [/input-8, 810] [/input-8, 1315] [/input-8, 987] [/input-8, 82] [/input-8, 810] [/input-8, 1454] [/input-8, 987] [/input-8, 1055] 
pruning_in_iteration open status: True
ratio of positive domain = 7173 / 32768 = 0.218902587890625
pruning-in-iteration extra time: 0.0016093254089355469
Time: prepare 0.7098    bound 1.3107    transfer 0.1795    finalize 0.2030    func 2.4051    
Accumulated time: func 7.6048    prepare 1.9981    bound 4.6204    transfer 0.4753    finalize 0.5072    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12270 (24), -0.12258 (24), -0.12207 (25), -0.12164 (24), -0.12121 (25), -0.12113 (25), -0.11922 (24), -0.11888 (24), -0.11815 (25), -0.11782 (24), -0.11709 (25), -0.11703 (24), -0.11687 (25), -0.11663 (24), -0.11654 (23), -0.11647 (25), -0.11646 (25), -0.11634 (25), -0.11627 (24), -0.11623 (24), 
Length of domains: 26168
Time: pickout 0.2365    decision 1.7050    set_bounds 1.1197    solve 2.4106    add 0.0913    
Accumulated time: pickout 0.6152    decision 3.8221    set_bounds 2.7690    solve 7.6202    add 0.7596    
Current (lb-rhs): -0.12270355224609375
69350 domains visited
current_vram/total_varm: 27.6GB/99.9GB, batch_size increase to 32768
Cumulative time: 15.731544494628906

BaB round 16
batch: 26168
splitting decisions: 
split level 0: [/input-8, 1069] [/input-8, 1315] [/input-8, 987] [/input-8, 1315] [/input-12, 80] [/input-8, 1055] [/input-8, 1315] [/input-8, 987] [/input-8, 1315] [/input-12, 80] 
pruning_in_iteration open status: True
ratio of positive domain = 12265 / 52336 = 0.23435111586670743
pruning-in-iteration extra time: 0.002317190170288086
Time: prepare 1.1723    bound 2.0435    transfer 0.2956    finalize 0.3279    func 3.8413    
Accumulated time: func 11.4460    prepare 3.1709    bound 6.6638    transfer 0.7710    finalize 0.8351    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12161 (25), -0.12076 (26), -0.11973 (25), -0.11967 (25), -0.11900 (26), -0.11816 (26), -0.11813 (26), -0.11779 (25), -0.11701 (25), -0.11660 (25), -0.11650 (26), -0.11649 (24), -0.11622 (25), -0.11597 (25), -0.11527 (26), -0.11524 (25), -0.11517 (25), -0.11403 (26), -0.11376 (26), -0.11344 (26), 
Length of domains: 40071
Time: pickout 0.3929    decision 2.9261    set_bounds 1.6893    solve 3.8495    add 0.5167    
Accumulated time: pickout 1.0082    decision 6.7482    set_bounds 4.4583    solve 11.4696    add 1.2763    
Current (lb-rhs): -0.12160968780517578
109421 domains visited
Cumulative time: 25.19599723815918

BaB round 17
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1055] [/input, 332] [/input-8, 981] [/input-8, 1494] [/input-8, 810] [/input, 332] [/input-8, 1055] [/input-8, 810] [/input-8, 1494] [/input-8, 1055] 
pruning_in_iteration open status: True
ratio of positive domain = 15210 / 65536 = 0.232086181640625
pruning-in-iteration extra time: 0.002683877944946289
Time: prepare 1.5034    bound 5.9019    transfer 0.3668    finalize 0.4254    func 8.1999    
Accumulated time: func 19.6459    prepare 4.6746    bound 12.5657    transfer 1.1377    finalize 1.2605    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11973 (25), -0.11898 (27), -0.11854 (26), -0.11845 (27), -0.11649 (26), -0.11560 (26), -0.11542 (27), -0.11526 (27), -0.11515 (26), -0.11472 (26), -0.11419 (27), -0.11404 (26), -0.11373 (27), -0.11355 (25), -0.11354 (26), -0.11317 (25), -0.11310 (27), -0.11303 (27), -0.11298 (25), -0.11296 (27), 
Length of domains: 57629
Time: pickout 0.5193    decision 3.6831    set_bounds 2.2011    solve 8.6763    add 0.2137    
Accumulated time: pickout 1.5275    decision 10.4313    set_bounds 6.6594    solve 20.1459    add 1.4900    
Current (lb-rhs): -0.11973285675048828
159747 domains visited
Cumulative time: 40.60114049911499

BaB round 18
batch: 32768
splitting decisions: 
split level 0: [/input-8, 981] [/input-8, 1494] [/input, 633] [/input-8, 810] [/input-8, 1494] [/input-8, 1019] [/input-8, 986] [/input-8, 986] [/input-8, 1019] [/input-8, 82] 
pruning_in_iteration open status: True
ratio of positive domain = 15232 / 65536 = 0.232421875
pruning-in-iteration extra time: 0.002703428268432617
Time: prepare 1.5380    bound 5.8983    transfer 0.3672    finalize 1.0157    func 8.8223    
Accumulated time: func 28.4681    prepare 6.2130    bound 18.4640    transfer 1.5049    finalize 2.2762    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11973 (25), -0.11854 (26), -0.11845 (27), -0.11595 (28), -0.11526 (27), -0.11419 (27), -0.11404 (26), -0.11381 (27), -0.11355 (25), -0.11354 (26), -0.11329 (27), -0.11317 (25), -0.11298 (25), -0.11296 (27), -0.11291 (27), -0.11240 (27), -0.11213 (26), -0.11139 (27), -0.11124 (27), -0.11122 (25), 
Length of domains: 75165
Time: pickout 0.5452    decision 3.4489    set_bounds 1.9741    solve 8.8358    add 18.4024    
Accumulated time: pickout 2.0727    decision 13.8802    set_bounds 8.6335    solve 28.9817    add 19.8924    
Current (lb-rhs): -0.11973285675048828
210051 domains visited
Cumulative time: 73.92220044136047

BaB round 19
batch: 32768
splitting decisions: 
split level 0: [/input, 332] [/input-8, 1019] [/input-8, 1883] [/input-8, 1019] [/input-8, 986] [/input, 332] [/input-8, 1446] [/input-8, 1019] [/input-8, 1446] [/input-8, 810] 
pruning_in_iteration open status: True
ratio of positive domain = 15890 / 65536 = 0.242462158203125
pruning-in-iteration extra time: 0.00446009635925293
Time: prepare 1.6645    bound 4.8041    transfer 0.3673    finalize 1.2329    func 8.0724    
Accumulated time: func 36.5406    prepare 7.8780    bound 23.2681    transfer 1.8722    finalize 3.5091    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11973 (25), -0.11854 (26), -0.11845 (27), -0.11595 (28), -0.11526 (27), -0.11419 (27), -0.11404 (26), -0.11381 (27), -0.11355 (25), -0.11354 (26), -0.11329 (27), -0.11317 (25), -0.11298 (25), -0.11296 (27), -0.11240 (27), -0.11213 (26), -0.11124 (27), -0.11122 (25), -0.11033 (27), -0.11013 (28), 
Length of domains: 92043
Time: pickout 0.5571    decision 3.7626    set_bounds 2.2512    solve 8.0851    add 0.2205    
Accumulated time: pickout 2.6298    decision 17.6428    set_bounds 10.8848    solve 37.0668    add 20.1129    
Current (lb-rhs): -0.11973285675048828
259697 domains visited
Cumulative time: 88.91723704338074

BaB round 20
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1454] [/input, 332] [/input-8, 677] [/input-8, 1446] [/input-8, 82] [/input-8, 1055] [/input-8, 1055] [/input-8, 1019] [/input-8, 82] [/input-8, 82] 
pruning_in_iteration open status: True
ratio of positive domain = 17218 / 65536 = 0.262725830078125
pruning-in-iteration extra time: 0.00459599494934082
Time: prepare 1.6590    bound 4.5034    transfer 0.3677    finalize 0.4764    func 7.0112    
Accumulated time: func 43.5518    prepare 9.5376    bound 27.7715    transfer 2.2399    finalize 3.9855    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11973 (25), -0.11854 (26), -0.11845 (27), -0.11595 (28), -0.11526 (27), -0.11419 (27), -0.11404 (26), -0.11381 (27), -0.11355 (25), -0.11354 (26), -0.11329 (27), -0.11317 (25), -0.11298 (25), -0.11296 (27), -0.11240 (27), -0.11213 (26), -0.11124 (27), -0.11122 (25), -0.11033 (27), -0.11013 (28), 
Length of domains: 107593
Time: pickout 0.6103    decision 3.9721    set_bounds 2.4730    solve 7.0282    add 0.1526    
Accumulated time: pickout 3.2401    decision 21.6149    set_bounds 13.3578    solve 44.0950    add 20.2655    
Current (lb-rhs): -0.11973285675048828
308015 domains visited
Cumulative time: 103.34313821792603

BaB round 21
batch: 32768
splitting decisions: 
split level 0: [/input-8, 981] [/input-8, 981] [/input-8, 1454] [/input-8, 986] [/input, 633] [/input-8, 1019] [/input-8, 1251] [/input-8, 1883] [/input-8, 986] [/input, 633] 
pruning_in_iteration open status: True
ratio of positive domain = 19308 / 65536 = 0.29461669921875
pruning-in-iteration extra time: 0.00580286979675293
Time: prepare 1.6958    bound 3.6285    transfer 0.3680    finalize 1.5517    func 7.2469    
Accumulated time: func 50.7987    prepare 11.2339    bound 31.4000    transfer 2.6079    finalize 5.5372    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11973 (25), -0.11854 (26), -0.11845 (27), -0.11595 (28), -0.11526 (27), -0.11419 (27), -0.11404 (26), -0.11381 (27), -0.11355 (25), -0.11354 (26), -0.11329 (27), -0.11317 (25), -0.11298 (25), -0.11296 (27), -0.11240 (27), -0.11213 (26), -0.11124 (27), -0.11122 (25), -0.11033 (27), -0.11013 (28), 
Length of domains: 121053
Time: pickout 0.6289    decision 4.5105    set_bounds 2.6186    solve 7.2612    add 0.1661    
Accumulated time: pickout 3.8690    decision 26.1253    set_bounds 15.9763    solve 51.3562    add 20.4315    
Current (lb-rhs): -0.11973285675048828
354243 domains visited
Cumulative time: 118.73612093925476

BaB round 22
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1055] [/input-8, 677] [/input, 3483] [/input-8, 82] [/input-8, 988] [/input-8, 1494] [/input-8, 82] [/input, 2182] [/input-8, 1055] [/input-8, 981] 
pruning_in_iteration open status: True
ratio of positive domain = 20979 / 65536 = 0.3201141357421875
pruning-in-iteration extra time: 0.00616765022277832
Time: prepare 1.7857    bound 3.3038    transfer 0.3720    finalize 1.7494    func 7.2146    
Accumulated time: func 58.0133    prepare 13.0202    bound 34.7038    transfer 2.9799    finalize 7.2865    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11973 (25), -0.11854 (26), -0.11845 (27), -0.11595 (28), -0.11526 (27), -0.11419 (27), -0.11404 (26), -0.11381 (27), -0.11355 (25), -0.11354 (26), -0.11329 (27), -0.11317 (25), -0.11298 (25), -0.11296 (27), -0.11240 (27), -0.11213 (26), -0.11124 (27), -0.11122 (25), -0.11033 (27), -0.11013 (28), 
Length of domains: 132842
Time: pickout 0.6560    decision 3.4628    set_bounds 2.9006    solve 7.2297    add 0.1886    
Accumulated time: pickout 4.5250    decision 29.5881    set_bounds 18.8769    solve 58.5860    add 20.6201    
Current (lb-rhs): -0.11973285675048828
398800 domains visited
Cumulative time: 133.34486436843872

BaB round 23
batch: 32768
splitting decisions: 
split level 0: [/input-8, 82] [/input-8, 102] [/input-8, 1494] [/input-8, 82] [/input-8, 1494] [/input-8, 1883] [/input-8, 102] [/input-8, 981] [/input-8, 1494] [/input-8, 82] 
pruning_in_iteration open status: True
ratio of positive domain = 21371 / 65536 = 0.3260955810546875
pruning-in-iteration extra time: 0.006010770797729492
Time: prepare 1.7994    bound 3.0140    transfer 0.3682    finalize 1.8797    func 7.0647    
Accumulated time: func 65.0780    prepare 14.8201    bound 37.7179    transfer 3.3481    finalize 9.1662    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11973 (25), -0.11854 (26), -0.11845 (27), -0.11595 (28), -0.11526 (27), -0.11419 (27), -0.11404 (26), -0.11381 (27), -0.11355 (25), -0.11354 (26), -0.11329 (27), -0.11317 (25), -0.11298 (25), -0.11296 (27), -0.11240 (27), -0.11213 (26), -0.11124 (27), -0.11122 (25), -0.11033 (27), -0.11013 (28), 
Length of domains: 144239
Time: pickout 0.6629    decision 3.4745    set_bounds 2.9772    solve 7.0847    add 0.3060    
Accumulated time: pickout 5.1879    decision 33.0627    set_bounds 21.8541    solve 65.6707    add 20.9261    
Current (lb-rhs): -0.11973285675048828
442965 domains visited
Cumulative time: 148.03034090995789

BaB round 24
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1019] [/input-8, 633] [/input-8, 1019] [/input-8, 82] [/input-8, 1494] [/input-8, 1019] [/input-8, 82] [/input-8, 82] [/input-8, 1069] [/input-8, 82] 
pruning_in_iteration open status: True
ratio of positive domain = 21253 / 65536 = 0.3242950439453125
pruning-in-iteration extra time: 0.006613492965698242
Time: prepare 1.8257    bound 2.7444    transfer 0.3837    finalize 0.5791    func 5.5368    
Accumulated time: func 70.6147    prepare 16.6464    bound 40.4623    transfer 3.7318    finalize 9.7454    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11973 (25), -0.11854 (26), -0.11845 (27), -0.11595 (28), -0.11526 (27), -0.11419 (27), -0.11404 (26), -0.11381 (27), -0.11355 (25), -0.11354 (26), -0.11329 (27), -0.11317 (25), -0.11298 (25), -0.11296 (27), -0.11240 (27), -0.11213 (26), -0.11124 (27), -0.11122 (25), -0.11033 (27), -0.11013 (28), 
Length of domains: 155754
Time: pickout 0.6485    decision 3.4702    set_bounds 3.0724    solve 5.5566    add 0.2064    
Accumulated time: pickout 5.8364    decision 36.5329    set_bounds 24.9265    solve 71.2273    add 21.1325    
Current (lb-rhs): -0.11973285675048828
487248 domains visited
Cumulative time: 161.1942594051361

BaB round 25
batch: 32768
splitting decisions: 
split level 0: [/input, 332] [/input, 1767] [/input, 390] [/input-8, 82] [/input, 633] [/input-8, 981] [/input-8, 986] [/input, 1418] [/input-8, 1019] [/input-8, 1069] 
pruning_in_iteration open status: True
ratio of positive domain = 21165 / 65536 = 0.3229522705078125
pruning-in-iteration extra time: 0.006459712982177734
Time: prepare 1.7688    bound 2.7431    transfer 0.4101    finalize 0.5784    func 5.5044    
Accumulated time: func 76.1191    prepare 18.4157    bound 43.2054    transfer 4.1418    finalize 10.3238    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11973 (25), -0.11854 (26), -0.11845 (27), -0.11595 (28), -0.11526 (27), -0.11419 (27), -0.11404 (26), -0.11381 (27), -0.11355 (25), -0.11354 (26), -0.11329 (27), -0.11317 (25), -0.11298 (25), -0.11296 (27), -0.11240 (27), -0.11213 (26), -0.11124 (27), -0.11122 (25), -0.11033 (27), -0.11013 (28), 
Length of domains: 167357
Time: pickout 0.7034    decision 4.9933    set_bounds 3.1056    solve 5.5247    add 0.1798    
Accumulated time: pickout 6.5397    decision 41.5262    set_bounds 28.0321    solve 76.7520    add 21.3123    
Current (lb-rhs): -0.11973285675048828
531619 domains visited
Cumulative time: 175.90351462364197

BaB round 26
batch: 32768
splitting decisions: 
split level 0: [/input, 395] [/input-8, 1503] [/input, 395] [/input, 2166] [/input-8, 1883] [/input-8, 1494] [/input-8, 986] [/input-8, 81] [/input-8, 1494] [/input-8, 1020] 
pruning_in_iteration open status: True
ratio of positive domain = 21191 / 65536 = 0.3233489990234375
pruning-in-iteration extra time: 0.007201194763183594
Time: prepare 1.8971    bound 2.7398    transfer 0.4351    finalize 2.1168    func 7.1916    
Accumulated time: func 83.3107    prepare 20.3133    bound 45.9452    transfer 4.5770    finalize 12.4406    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11973 (25), -0.11854 (26), -0.11845 (27), -0.11595 (28), -0.11526 (27), -0.11419 (27), -0.11404 (26), -0.11381 (27), -0.11355 (25), -0.11354 (26), -0.11329 (27), -0.11317 (25), -0.11298 (25), -0.11296 (27), -0.11240 (27), -0.11213 (26), -0.11124 (27), -0.11122 (25), -0.11033 (27), -0.11013 (28), 
Length of domains: 178934
Time: pickout 0.7018    decision 4.7865    set_bounds 1.5802    solve 7.2081    add 0.3611    
Accumulated time: pickout 7.2416    decision 46.3127    set_bounds 29.6123    solve 83.9602    add 21.6734    
Current (lb-rhs): -0.11973285675048828
575964 domains visited
Cumulative time: 190.73118114471436

BaB round 27
batch: 32768
splitting decisions: 
split level 0: [/input, 2182] [/input, 633] [/input-8, 102] [/input-8, 81] [/input, 2166] [/input-8, 1447] [/input, 395] [/input, 395] [/input, 395] [/input-8, 1019] 
pruning_in_iteration open status: True
ratio of positive domain = 20523 / 65536 = 0.3131561279296875
pruning-in-iteration extra time: 0.006585597991943359
Time: prepare 1.8295    bound 2.7588    transfer 0.4454    finalize 0.5715    func 5.6100    
Accumulated time: func 88.9207    prepare 22.1434    bound 48.7040    transfer 5.0224    finalize 13.0121    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11973 (25), -0.11854 (26), -0.11845 (27), -0.11595 (28), -0.11526 (27), -0.11419 (27), -0.11404 (26), -0.11381 (27), -0.11355 (25), -0.11354 (26), -0.11329 (27), -0.11317 (25), -0.11298 (25), -0.11296 (27), -0.11240 (27), -0.11213 (26), -0.11124 (27), -0.11122 (25), -0.11033 (27), -0.11013 (28), 
Length of domains: 191179
Time: pickout 0.7688    decision 3.4944    set_bounds 3.4729    solve 5.6292    add 0.1792    
Accumulated time: pickout 8.0103    decision 49.8071    set_bounds 33.0852    solve 89.5894    add 21.8526    
Current (lb-rhs): -0.11973285675048828
620977 domains visited
Time out!!!!!!!!
Result: unknown in 207.4112 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 25, vnnlib ID: 25 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.14924717, -7.20264626, -3.62566066, -3.26617622, -3.26720905,
         -3.86512804, -2.64753652, -4.15916395, -7.16723728, -5.27643299]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [704]; unstable size 704; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 299, 1, 704] with unstable size 298 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 704] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 704] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [298]; unstable size 298; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 298] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 298] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.08241987, -2.05952263, -2.42161846, -2.46702027, -2.20508480,
         -3.01654959, -2.22386384,  1.33762681, -0.76212645]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.14924717, -7.20264626, -3.62566066, -3.26617622, -3.26720905,
         -3.86512804, -2.64753652, -4.15916395, -7.16723728, -5.27643299]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.14924717, -7.20264530, -3.62566042, -3.26617575, -3.26720858,
          -3.86512756, -2.64753628, -4.15916443, -7.16723728, -5.27643251],
         [-4.14924717, -7.20264530, -3.62566042, -3.26617575, -3.26720858,
          -3.86512756, -2.64753628, -4.15916443, -7.16723728, -5.27643251]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.52358675, -0.88307142, -0.88203859, -0.28411961, -1.50171089,
           0.00991726,  1.12718534]]], device='cuda:0')
number of violation:  5
clean attack image tensor([[[[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         ...,


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]]]], device='cuda:0') torch.Size([1, 7, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.1115 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 26, vnnlib ID: 26 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.82686090, -6.41171074, -7.68403912, -6.35791826, -7.00407124,
         -6.85788012, -7.81835127, -6.72433424, -6.81869602, -4.52237940]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [573]; unstable size 573; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 165, 1, 573] with unstable size 164 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 573] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 573] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [164]; unstable size 164; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 164] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 164] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.93261272, 0.64227378, 1.35773599, 0.14541197, 0.77890730, 0.42941737,
         1.61863828, 0.36068952, 0.89056206]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0675 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 27, vnnlib ID: 27 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-14.06539822, -17.73662376, -13.52726841, -13.91146278, -10.88764858,
         -13.52410698, -16.07256508,  -5.87544203, -16.85854721, -15.41843987]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [650]; unstable size 650; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 192, 1, 650] with unstable size 191 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 650] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 650] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [191]; unstable size 191; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 191] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 191] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.35606480, 9.58715725, 6.00918579, 6.42040968, 3.78135014, 6.19913769,
         8.01423836, 8.93800354, 7.41418457]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0675 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 28, vnnlib ID: 28 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.62422132, -12.83205509, -10.86794376, -11.14358330, -11.48577309,
         -12.18943787, -11.86716270, -14.63631248, -10.53621006, -12.42279720]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [928]; unstable size 928; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 124, 1, 928] with unstable size 123 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 928] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 928] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [123]; unstable size 123; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 123] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 123] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.12223911, 2.45312452, 2.49229217, 2.85657811, 3.25084138, 3.41792631,
         5.43004036, 2.01518440, 3.76126528]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0684 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 29, vnnlib ID: 29 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.71822071, -11.80851841,  -6.85466003,  -5.36537838,  -5.07366467,
          -5.51355600,  -5.88568926,  -6.49064875, -10.61816978, -10.64415073]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [574]; unstable size 574; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 216, 1, 574] with unstable size 215 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 574] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 574] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [215]; unstable size 215; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 215] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 215] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.72788763,  3.64086866, -0.86040497, -2.15425611, -2.38526583,
         -1.95328188, -1.94343805,  2.43316603,  2.66482735]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.71822071, -11.80851841,  -6.85466003,  -5.36537838,  -5.07366467,
          -5.51355600,  -5.88568926,  -6.49064875, -10.61816978, -10.64415073]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.71822071, -11.80851841,  -6.85466003,  -5.36537838,  -5.07366467,
           -5.51355553,  -5.88568926,  -6.49064827, -10.61816883, -10.64415073],
         [-10.71822071, -11.80851841,  -6.85466003,  -5.36537838,  -5.07366467,
           -5.51355553,  -5.88568926,  -6.49064827, -10.61816883, -10.64415073]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.36401176, -1.12526989, -1.41698360, -0.97709274, -0.60495901]]],
       device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0815 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 30, vnnlib ID: 30 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.18480682, -14.47258854, -11.18161869, -14.32627869, -12.30105877,
         -15.18956566, -14.34846020, -16.43445969, -12.35407734, -15.00505161]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [778]; unstable size 778; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 155, 1, 778] with unstable size 154 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 778] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 778] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [154]; unstable size 154; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 154] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 154] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.25004578, 2.19217992, 5.06827402, 3.28106451, 5.71235991, 5.22400141,
         7.04772663, 3.23776221, 5.66314173]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0695 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 31, vnnlib ID: 31 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.54959202, -14.93725681,  -9.59988976, -11.64203358,  -7.25195312,
         -11.52101326, -11.52331543,  -9.14212132, -13.16885757, -13.51460266]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [559]; unstable size 559; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 280, 1, 559] with unstable size 279 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 559] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 559] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [279]; unstable size 279; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 279] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 279] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.93221843, 5.50633097, 1.10160065, 3.24869013, 3.06275177, 2.55501699,
         0.80379391, 3.91150165, 4.20123196]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0686 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 32, vnnlib ID: 32 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.27112675, -12.63512135,  -8.63367748,  -9.42183304,  -7.46700573,
          -9.92411232,  -9.37480068,  -7.93249464, -10.13228416, -10.65295982]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [673]; unstable size 673; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 250, 1, 673] with unstable size 249 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 673] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 673] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [249]; unstable size 249; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 249] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 249] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.22755671,  2.35429525, -1.18080187, -0.14742744, -1.67962360,
          0.47270066, -0.58272362, -0.47875619,  1.04633427]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.27112675, -12.63512135,  -8.63367748,  -9.42183304,  -7.46700573,
          -9.92411232,  -9.37480068,  -7.93249464, -10.13228416, -10.65295982]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.27112770, -12.63512135,  -8.63367748,  -9.42183399,  -7.46700478,
           -9.92411232,  -9.37480068,  -7.93249464, -10.13228512, -10.65296173],
         [-10.27112770, -12.63512135,  -8.63367748,  -9.42183399,  -7.46700478,
           -9.92411232,  -9.37480068,  -7.93249464, -10.13228512, -10.65296173]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.70118284,  1.48933935, -0.46548986,  1.44230604,  2.19979048]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]]]],
       device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0825 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 33, vnnlib ID: 33 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.97903728, -15.47458935, -14.82082081, -16.93464851, -16.98804283,
         -18.22283363, -17.40720367, -19.39607430, -13.83522511, -16.04048157]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [961]; unstable size 961; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 147, 1, 961] with unstable size 146 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 961] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 961] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [146]; unstable size 146; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 146] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 146] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.36850739, 2.85024309, 4.83520412, 4.84200573, 5.83572006, 5.30677128,
         7.12614679, 1.81439662, 4.14064789]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0711 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 34, vnnlib ID: 34 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-8.24514103, -9.31445694, -4.68999958, -4.27805805, -4.32876205,
         -4.84132576, -4.94563007, -5.30884266, -9.89639282, -8.35261440]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [576]; unstable size 576; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 271, 1, 576] with unstable size 270 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 576] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 576] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [270]; unstable size 270; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 270] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 270] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.30363131,  2.67125320, -0.65277267, -0.97995400,  0.21614310,
         -0.59254014,  0.02449480,  3.50285649,  2.09800625]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-8.24514103, -9.31445694, -4.68999958, -4.27805805, -4.32876205,
         -4.84132576, -4.94563007, -5.30884266, -9.89639282, -8.35261440]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.15455532, -10.60125256,  -5.41358471,  -5.43196726,  -5.26921654,
           -5.97929192,  -6.01046705,  -6.31621122, -10.86349106,  -9.62036419],
         [ -9.15455532, -10.60125256,  -5.41358471,  -5.43196726,  -5.26921654,
           -5.97929192,  -6.01046705,  -6.31621122, -10.86349106,  -9.62036419]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.01838255, -0.16275072,  0.57849979]]], device='cuda:0')
number of violation:  2
Attack finished in 0.0132 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0789 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 35, vnnlib ID: 35 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.70502281, -7.45960903, -2.49920797, -1.05304623, -3.13333511,
         -1.90231669, -1.12411547, -2.32658529, -5.78024006, -5.08773088]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [540]; unstable size 540; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 256, 1, 540] with unstable size 255 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 540] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 540] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [255]; unstable size 255; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 255] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 255] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.87189960,  3.69729805,  0.41519809,  1.04059911,  0.46059477,
         -1.19380593,  0.21724123,  2.69666767,  1.93056870]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.70502281, -7.45960903, -2.49920797, -1.05304623, -3.13333511,
         -1.90231669, -1.12411547, -2.32658529, -5.78024006, -5.08773088]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.05819893, -7.58267593, -2.72234511, -1.43960345, -3.43121195,
          -2.28614616, -0.89729089, -2.77882195, -6.09740543, -5.29890108]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.54231256]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0056 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0684 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 36, vnnlib ID: 36 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-2.26436710, -5.76788616, -1.08416247,  0.26655820, -2.02816391,
         -0.65419853, -1.94119561, -0.85351741, -4.12531948, -3.61707258]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [746]; unstable size 746; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 148, 1, 746] with unstable size 147 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 746] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 746] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [147]; unstable size 147; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 147] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 147] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.37818599,  3.92298722, -0.56011510, -1.79689837,  0.44506049,
         -0.89399910,  0.06454611,  2.27980328,  1.70670176]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.26436710, -5.76788616, -1.08416247,  0.26655820, -2.02816391,
         -0.65419853, -1.94119561, -0.85351741, -4.12531948, -3.61707258]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.26436663, -5.76788521, -1.08416212,  0.26655802, -2.02816391,
          -0.65419877, -1.94119525, -0.85351765, -4.12531900, -3.61707306],
         [-2.26436663, -5.76788521, -1.08416212,  0.26655802, -2.02816391,
          -0.65419877, -1.94119525, -0.85351765, -4.12531900, -3.61707306]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.23064446, -1.12007570, -0.19931889]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 1.85238123,  1.91587329,  1.88412726,  ...,  1.93174624,
             1.96349227,  1.90000021],
           [ 1.82063520,  1.88412726,  1.86825418,  ...,  1.90000021,
             1.93174624,  1.86825418],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  1.91587329,
             1.94761932,  1.90000021],
           ...,
           [ 1.85238123,  1.91587329,  1.88412726,  ..., -0.94126981,
            -1.13174593, -1.14761901],
           [ 1.85238123,  1.90000021,  1.88412726,  ..., -0.43333322,
            -0.90952379, -1.11587298],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  0.56666672,
            -0.44920623, -0.95714283]],

          [[ 1.90016127,  1.96457350,  1.93236744,  ...,  1.99677968,
             2.02898574,  1.96457350],
           [ 1.86795521,  1.93236744,  1.91626441,  ...,  1.96457350,
             1.99677968,  1.93236744],
           [ 1.88405824,  1.94847047,  1.91626441,  ...,  1.98067665,
             2.01288271,  1.96457350],
           ...,
           [ 1.91626441,  1.98067665,  1.94847047,  ..., -1.35265696,
            -1.44927526, -1.40096617],
           [ 1.91626441,  1.96457350,  1.94847047,  ..., -0.80515295,
            -1.32045078, -1.41706920],
           [ 1.90016127,  1.96457350,  1.93236744,  ...,  0.37037048,
            -0.88566822, -1.30434775]],

          [[ 1.98051023,  2.04048014,  2.01049519,  ...,  2.02548766,
             2.05547261,  1.99550271],
           [ 1.95052516,  2.01049519,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.96551764],
           [ 1.96551764,  2.02548766,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.99550271],
           ...,
           [ 1.95052516,  2.01049519,  1.98051023,  ..., -1.51274371,
            -1.55772126, -1.54272878],
           [ 1.95052516,  1.99550271,  1.98051023,  ..., -1.01799107,
            -1.55772126, -1.52773619],
           [ 1.93553269,  1.99550271,  1.96551764,  ...,  0.27136448,
            -1.21289361, -1.48275876]]],


         [[[ 1.85238123,  1.91587329,  1.88412726,  ...,  1.93174624,
             1.96349227,  1.90000021],
           [ 1.82063520,  1.88412726,  1.86825418,  ...,  1.90000021,
             1.93174624,  1.86825418],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  1.91587329,
             1.94761932,  1.90000021],
           ...,
           [ 1.85238123,  1.91587329,  1.88412726,  ..., -0.94126981,
            -1.13174593, -1.14761901],
           [ 1.85238123,  1.90000021,  1.88412726,  ..., -0.43333322,
            -0.90952379, -1.11587298],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  0.56666672,
            -0.44920623, -0.95714283]],

          [[ 1.90016127,  1.96457350,  1.93236744,  ...,  1.99677968,
             2.02898574,  1.96457350],
           [ 1.86795521,  1.93236744,  1.91626441,  ...,  1.96457350,
             1.99677968,  1.93236744],
           [ 1.88405824,  1.94847047,  1.91626441,  ...,  1.98067665,
             2.01288271,  1.96457350],
           ...,
           [ 1.91626441,  1.98067665,  1.94847047,  ..., -1.35265696,
            -1.44927526, -1.40096617],
           [ 1.91626441,  1.96457350,  1.94847047,  ..., -0.80515295,
            -1.32045078, -1.41706920],
           [ 1.90016127,  1.96457350,  1.93236744,  ...,  0.37037048,
            -0.88566822, -1.30434775]],

          [[ 1.98051023,  2.04048014,  2.01049519,  ...,  2.02548766,
             2.05547261,  1.99550271],
           [ 1.95052516,  2.01049519,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.96551764],
           [ 1.96551764,  2.02548766,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.99550271],
           ...,
           [ 1.95052516,  2.01049519,  1.98051023,  ..., -1.51274371,
            -1.55772126, -1.54272878],
           [ 1.95052516,  1.99550271,  1.98051023,  ..., -1.01799107,
            -1.55772126, -1.52773619],
           [ 1.93553269,  1.99550271,  1.96551764,  ...,  0.27136448,
            -1.21289361, -1.48275876]]],


         [[[ 1.85238123,  1.91587329,  1.88412726,  ...,  1.93174624,
             1.96349227,  1.90000021],
           [ 1.82063520,  1.88412726,  1.86825418,  ...,  1.90000021,
             1.93174624,  1.86825418],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  1.91587329,
             1.94761932,  1.90000021],
           ...,
           [ 1.85238123,  1.91587329,  1.88412726,  ..., -0.94126981,
            -1.13174593, -1.14761901],
           [ 1.85238123,  1.90000021,  1.88412726,  ..., -0.43333322,
            -0.90952379, -1.11587298],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  0.56666672,
            -0.44920623, -0.95714283]],

          [[ 1.90016127,  1.96457350,  1.93236744,  ...,  1.99677968,
             2.02898574,  1.96457350],
           [ 1.86795521,  1.93236744,  1.91626441,  ...,  1.96457350,
             1.99677968,  1.93236744],
           [ 1.88405824,  1.94847047,  1.91626441,  ...,  1.98067665,
             2.01288271,  1.96457350],
           ...,
           [ 1.91626441,  1.98067665,  1.94847047,  ..., -1.35265696,
            -1.44927526, -1.40096617],
           [ 1.91626441,  1.96457350,  1.94847047,  ..., -0.80515295,
            -1.32045078, -1.41706920],
           [ 1.90016127,  1.96457350,  1.93236744,  ...,  0.37037048,
            -0.88566822, -1.30434775]],

          [[ 1.98051023,  2.04048014,  2.01049519,  ...,  2.02548766,
             2.05547261,  1.99550271],
           [ 1.95052516,  2.01049519,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.96551764],
           [ 1.96551764,  2.02548766,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.99550271],
           ...,
           [ 1.95052516,  2.01049519,  1.98051023,  ..., -1.51274371,
            -1.55772126, -1.54272878],
           [ 1.95052516,  1.99550271,  1.98051023,  ..., -1.01799107,
            -1.55772126, -1.52773619],
           [ 1.93553269,  1.99550271,  1.96551764,  ...,  0.27136448,
            -1.21289361, -1.48275876]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0494 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 37, vnnlib ID: 37 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.01291561, -12.13928890, -12.98730183, -15.90724564, -13.82077122,
         -17.84158707, -17.88521957, -16.36121368, -11.50735950, -12.93546104]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [566]; unstable size 566; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 181, 1, 566] with unstable size 180 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 566] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 566] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [180]; unstable size 180; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 180] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 180] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.04726744, 2.13469362, 4.88873768, 2.78446722, 6.62359476, 6.58985186,
         4.87536240, 0.22735929, 1.88157797]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0622 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 38, vnnlib ID: 38 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-7.67120075, -8.34336758, -2.96194768, -3.20485783, -2.59110832,
         -3.43676805, -1.38701296, -4.13833094, -8.45190620, -6.74960279]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [421]; unstable size 421; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 250, 1, 421] with unstable size 249 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 421] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 421] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [249]; unstable size 249; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 249] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 249] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.48716259,  5.17507648,  0.09683514,  0.57209611, -0.21805692,
          0.58378100,  1.18988431,  5.01148224,  3.44507051]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-7.67120075, -8.34336758, -2.96194768, -3.20485783, -2.59110832,
         -3.43676805, -1.38701296, -4.13833094, -8.45190620, -6.74960279]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.98it/s]100%|██████████| 1/1 [00:00<00:00,  8.97it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.36143351, -8.27827263, -2.67933655, -3.03170109, -2.11203384,
          -3.19349098, -1.59651995, -3.84145784, -8.13518906, -6.71451759]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.51551390]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1139 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 20.92751693725586
alpha/beta optimization time: 1.1420304775238037
initial alpha-crown bounds: tensor([[ 4.54304790,  5.26645184,  0.14525318,  0.62453997, -0.16246271,
          0.64612162,  1.25836921,  5.08361483,  3.52258205]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.16246271133422852
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.67756867408752
Verifying property 0 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.543047904968262.

Properties batch 1, size 1
Remaining timeout: 198.5198187828064
Verifying property 1 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.266451835632324.

Properties batch 2, size 1
Remaining timeout: 198.41711163520813
Verifying property 2 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.14525318145751953.

Properties batch 3, size 1
Remaining timeout: 198.32031393051147
Verifying property 3 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6245399713516235.

Properties batch 4, size 1
Remaining timeout: 198.22400999069214
Verifying property 4 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.16246271]], device='cuda:0') need to verify.
Model prediction is: tensor([-7.67120075, -8.34336758, -2.96194768, -3.20485783, -2.59110832,
        -3.43676805, -1.38701296, -4.13833094, -8.45190620, -6.74960279],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.16246271]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 421
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 246
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 688
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 41] 
split level 1: [/input-12, 60] 
split level 2: [/input-12, 35] 
split level 3: [/input-12, 92] 
split level 4: [/input-12, 29] 
split level 5: [/input-12, 11] 
split level 6: [/input-12, 17] 
split level 7: [/input-12, 46] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.3392181396484375e-05
Time: prepare 0.0018    bound 0.0041    transfer 0.0011    finalize 0.0017    func 0.0087    
Accumulated time: func 0.0087    prepare 0.0022    bound 0.0041    transfer 0.0011    finalize 0.0017    
all_split False
Length of domains: 0
Time: pickout 0.0004    decision 0.0226    set_bounds 0.0162    solve 0.0088    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0226    set_bounds 0.0162    solve 0.0088    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05499672889709473


Properties batch 5, size 1
Remaining timeout: 198.03295874595642
Verifying property 5 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.646121621131897.

Properties batch 6, size 1
Remaining timeout: 197.93089699745178
Verifying property 6 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.2583692073822021.

Properties batch 7, size 1
Remaining timeout: 197.82563400268555
Verifying property 7 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.083614826202393.

Properties batch 8, size 1
Remaining timeout: 197.727605342865
Verifying property 8 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.5225820541381836.
Result: safe in 2.3691 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 39, vnnlib ID: 39 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.08262920, -10.85117626,  -6.26876736,  -6.31408882,  -5.73352718,
          -6.74807501,  -3.77881598,  -7.22824049, -11.69428158, -10.35355473]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [375]; unstable size 375; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 209, 1, 375] with unstable size 208 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 375] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 375] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [208]; unstable size 208; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 208] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 208] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.36300087, 4.89374208, 1.18320310, 1.43400931, 0.60667610, 1.79556453,
         1.70379806, 5.56933069, 4.72802067]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0690 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 40, vnnlib ID: 40 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -5.55409622,  -9.96810532,  -6.92626286,  -8.56464005,  -8.43423653,
          -9.26128197, -10.86567974,  -8.56524467,  -8.85235691, -11.04646587]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [508]; unstable size 508; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 169, 1, 508] with unstable size 168 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 508] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 508] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [168]; unstable size 168; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 168] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 168] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.94185495, 0.70694846, 2.04573965, 1.92763710, 2.63131213, 4.18971443,
         1.79439902, 2.23234749, 4.28507853]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0369 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 41, vnnlib ID: 41 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.03971958, -11.64941406, -10.00275898,  -8.47386932,  -9.92812920,
          -8.93652153, -10.23073101, -10.63002968,  -4.10415173,  -9.58254910]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [504]; unstable size 504; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 207, 1, 504] with unstable size 206 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 504] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 504] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [206]; unstable size 206; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 206] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 206] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.82665896, 6.09783554, 4.47349691, 3.14197636, 4.34114504, 3.46894169,
         4.61985540, 4.88829088, 4.12811470]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0604 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 42, vnnlib ID: 42 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.23514986, -9.22857761, -3.75808716, -3.27435327, -4.29405165,
         -3.58545446, -2.41056466, -6.29414511, -6.66572762, -8.34386063]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [590]; unstable size 590; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 245, 1, 590] with unstable size 244 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 590] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 590] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [244]; unstable size 244; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 244] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 244] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.87620592,  4.30693913, -0.06645846, -0.26148707,  0.30728054,
         -0.24854952,  2.13002610,  1.88156366,  3.71216297]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.23514986, -9.22857761, -3.75808716, -3.27435327, -4.29405165,
         -3.58545446, -2.41056466, -6.29414511, -6.66572762, -8.34386063]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.40it/s]100%|██████████| 1/1 [00:00<00:00,  7.40it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.03449631, -9.09223366, -3.54179525, -2.84015751, -4.05080748,
          -3.00110483, -2.64081597, -5.93490744, -6.32542515, -8.11971188],
         [-6.03449631, -9.09223366, -3.54179525, -2.84015751, -4.05080748,
          -3.00110483, -2.64081597, -5.93490744, -6.32542515, -8.11971188]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.90097928, 0.19934154, 0.36028886]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1395 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 14.594409942626953
alpha/beta optimization time: 1.1438119411468506
initial alpha-crown bounds: tensor([[ 1.98166192,  4.46373224,  0.01902962, -0.21572936,  0.40181971,
         -0.18405646,  2.22683024,  2.03213978,  3.86898184]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.21572935581207275
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.63992953300476
Verifying property 0 with 1 instances.
##### Instance 42 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9816619157791138.

Properties batch 1, size 1
Remaining timeout: 198.497882604599
Verifying property 1 with 1 instances.
##### Instance 42 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.4637322425842285.

Properties batch 2, size 1
Remaining timeout: 198.39783334732056
Verifying property 2 with 1 instances.
##### Instance 42 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.019029617309570312.

Properties batch 3, size 1
Remaining timeout: 198.30162477493286
Verifying property 3 with 1 instances.
##### Instance 42 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.21572936]], device='cuda:0') need to verify.
Model prediction is: tensor([-6.23514986, -9.22857761, -3.75808716, -3.27435327, -4.29405165,
        -3.58545446, -2.41056466, -6.29414511, -6.66572762, -8.34386063],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.21572936]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 590
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 242
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 853
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 33] 
split level 1: [/input-12, 1] 
split level 2: [/input-12, 11] 
split level 3: [/input-12, 51] 
split level 4: [/input-12, 41] 
split level 5: [/input-12, 13] 
split level 6: [/input-12, 45] 
split level 7: [/input-12, 82] 
pruning_in_iteration open status: True
ratio of positive domain = 248 / 256 = 0.96875
pruning-in-iteration extra time: 0.004584789276123047
Time: prepare 0.0018    bound 0.1204    transfer 0.0014    finalize 0.0018    func 0.1254    
Accumulated time: func 0.1254    prepare 0.0022    bound 0.1204    transfer 0.0014    finalize 0.0018    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09066 (8), -0.08842 (8), -0.04857 (8), -0.04744 (8), -0.03315 (8), -0.03088 (8), -0.02837 (8), -0.02376 (8), 
Length of domains: 8
Time: pickout 0.0004    decision 0.0225    set_bounds 0.0163    solve 0.1255    add 0.0362    
Accumulated time: pickout 0.0004    decision 0.0225    set_bounds 0.0163    solve 0.1255    add 0.0362    
Current (lb-rhs): -0.09065961837768555
8 domains visited
Cumulative time: 0.20875048637390137

BaB round 2
batch: 8
splitting decisions: 
split level 0: [/input-8, 1308] [/input-8, 1308] [/input-8, 1308] [/input-8, 1308] [/input-8, 1308] [/input-8, 850] [/input-8, 850] [/input-8, 850] 
split level 1: [/input-8, 92] [/input-8, 92] [/input-8, 117] [/input-8, 1909] [/input-8, 117] [/input-8, 1308] [/input-8, 92] [/input-8, 92] 
split level 2: [/input-8, 483] [/input-8, 483] [/input-8, 92] [/input-8, 483] [/input-8, 1909] [/input-8, 1909] [/input-8, 484] [/input-8, 484] 
split level 3: [/input-8, 94] [/input-8, 94] [/input-8, 1909] [/input-8, 94] [/input-8, 92] [/input-8, 483] [/input-8, 654] [/input-8, 654] 
split level 4: [/input-8, 1468] [/input-8, 1468] [/input-8, 483] [/input-8, 484] [/input-8, 620] [/input-8, 94] [/input-8, 620] [/input-8, 620] 
pruning_in_iteration open status: True
ratio of positive domain = 168 / 256 = 0.65625
pruning-in-iteration extra time: 0.004833221435546875
Time: prepare 0.0048    bound 0.1577    transfer 0.0012    finalize 0.0015    func 0.1652    
Accumulated time: func 0.2906    prepare 0.0073    bound 0.2781    transfer 0.0026    finalize 0.0033    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06357 (13), -0.06043 (13), -0.06042 (13), -0.05925 (13), -0.05897 (13), -0.05796 (13), -0.05730 (13), -0.05713 (13), -0.05610 (13), -0.05604 (13), -0.05547 (13), -0.05512 (13), -0.05445 (13), -0.05429 (13), -0.05367 (13), -0.05319 (13), -0.05290 (13), -0.05169 (13), -0.05168 (13), -0.05112 (13), 
Length of domains: 88
Time: pickout 0.0010    decision 0.0184    set_bounds 0.0104    solve 0.1653    add 0.0094    
Accumulated time: pickout 0.0013    decision 0.0409    set_bounds 0.0266    solve 0.2908    add 0.0456    
Current (lb-rhs): -0.0635683536529541
96 domains visited
Cumulative time: 0.4143228530883789

BaB round 3
batch: 88
splitting decisions: 
split level 0: [/input-8, 850] [/input-8, 92] [/input-8, 850] [/input-8, 92] [/input-8, 1453] [/input-8, 1453] [/input-8, 850] [/input-8, 92] [/input-8, 484] [/input-8, 1453] 
split level 1: [/input-8, 92] [/input-8, 654] [/input-8, 92] [/input-8, 654] [/input-8, 654] [/input-8, 654] [/input-8, 92] [/input-8, 484] [/input-8, 654] [/input-8, 654] 
pruning_in_iteration open status: True
ratio of positive domain = 108 / 352 = 0.30681818181818177
pruning-in-iteration extra time: 0.00458979606628418
Time: prepare 0.0066    bound 0.1466    transfer 0.0017    finalize 0.0020    func 0.1573    
Accumulated time: func 0.4479    prepare 0.0141    bound 0.4247    transfer 0.0042    finalize 0.0053    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05294 (15), -0.05214 (15), -0.05066 (15), -0.04955 (15), -0.04931 (15), -0.04873 (15), -0.04843 (15), -0.04834 (15), -0.04756 (15), -0.04736 (15), -0.04727 (15), -0.04590 (15), -0.04567 (15), -0.04558 (15), -0.04542 (15), -0.04494 (15), -0.04481 (15), -0.04473 (15), -0.04413 (15), -0.04363 (15), 
Length of domains: 244
Time: pickout 0.0019    decision 0.0186    set_bounds 0.0090    solve 0.1574    add 0.0022    
Accumulated time: pickout 0.0032    decision 0.0596    set_bounds 0.0357    solve 0.4481    add 0.0477    
Current (lb-rhs): -0.052935004234313965
340 domains visited
Cumulative time: 0.6040136814117432

BaB round 4
batch: 244
splitting decisions: 
split level 0: [/input-8, 654] [/input-8, 979] [/input-8, 979] [/input-8, 654] [/input-8, 979] [/input-8, 654] [/input-8, 979] [/input-8, 979] [/input-8, 654] [/input-8, 979] 
pruning_in_iteration open status: False
ratio of positive domain = 60 / 488 = 0.12295081967213117
pruning-in-iteration extra time: 5.1975250244140625e-05
Time: prepare 0.0091    bound 0.0991    transfer 0.0013    finalize 0.0027    func 0.1123    
Accumulated time: func 0.5602    prepare 0.0234    bound 0.5238    transfer 0.0055    finalize 0.0080    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04736 (16), -0.04681 (16), -0.04531 (16), -0.04467 (16), -0.04419 (16), -0.04375 (16), -0.04374 (16), -0.04318 (16), -0.04278 (16), -0.04278 (16), -0.04272 (16), -0.04256 (16), -0.04220 (16), -0.04183 (16), -0.04162 (16), -0.04158 (16), -0.04104 (16), -0.04052 (16), -0.04051 (16), -0.04042 (16), 
Length of domains: 427
Time: pickout 0.0037    decision 0.0237    set_bounds 0.0100    solve 0.1124    add 0.0027    
Accumulated time: pickout 0.0069    decision 0.0833    set_bounds 0.0457    solve 0.5605    add 0.0505    
Current (lb-rhs): -0.04735565185546875
767 domains visited
Cumulative time: 0.7572505474090576

BaB round 5
batch: 427
splitting decisions: 
split level 0: [/input-8, 475] [/input-8, 484] [/input-8, 484] [/input-8, 979] [/input-8, 654] [/input-8, 484] [/input-8, 484] [/input-8, 654] [/input-8, 475] [/input-8, 654] 
pruning_in_iteration open status: False
ratio of positive domain = 99 / 854 = 0.11592505854800939
pruning-in-iteration extra time: 5.125999450683594e-05
Time: prepare 0.0161    bound 0.0999    transfer 0.0039    finalize 0.0042    func 0.1242    
Accumulated time: func 0.6844    prepare 0.0397    bound 0.6237    transfer 0.0094    finalize 0.0122    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04148 (17), -0.04090 (17), -0.04056 (17), -0.04013 (17), -0.03908 (17), -0.03886 (17), -0.03851 (17), -0.03824 (17), -0.03790 (17), -0.03781 (17), -0.03781 (17), -0.03752 (17), -0.03735 (17), -0.03731 (17), -0.03693 (17), -0.03691 (17), -0.03689 (17), -0.03678 (17), -0.03639 (17), -0.03636 (17), 
Length of domains: 754
Time: pickout 0.0053    decision 0.0330    set_bounds 0.0174    solve 0.1243    add 0.0077    
Accumulated time: pickout 0.0122    decision 0.1163    set_bounds 0.0631    solve 0.6849    add 0.0582    
Current (lb-rhs): -0.04148375988006592
1521 domains visited
Cumulative time: 0.9459977149963379

BaB round 6
batch: 754
splitting decisions: 
split level 0: [/input-8, 979] [/input-8, 475] [/input-8, 475] [/input-8, 475] [/input-8, 475] [/input-8, 979] [/input-8, 475] [/input-8, 475] [/input-8, 475] [/input-8, 475] 
pruning_in_iteration open status: True
ratio of positive domain = 315 / 1508 = 0.2088859416445623
pruning-in-iteration extra time: 0.0028417110443115234
Time: prepare 0.0280    bound 0.1575    transfer 0.0048    finalize 0.0078    func 0.1983    
Accumulated time: func 0.8827    prepare 0.0679    bound 0.7813    transfer 0.0142    finalize 0.0200    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03570 (18), -0.03525 (18), -0.03494 (18), -0.03489 (18), -0.03450 (18), -0.03449 (18), -0.03377 (18), -0.03335 (18), -0.03286 (18), -0.03280 (18), -0.03263 (18), -0.03260 (18), -0.03255 (18), -0.03251 (18), -0.03223 (18), -0.03222 (18), -0.03217 (18), -0.03202 (18), -0.03180 (18), -0.03178 (18), 
Length of domains: 1193
Time: pickout 0.0096    decision 0.0510    set_bounds 0.0303    solve 0.1986    add 0.0319    
Accumulated time: pickout 0.0218    decision 0.1673    set_bounds 0.0934    solve 0.8834    add 0.0900    
Current (lb-rhs): -0.03569835424423218
2714 domains visited
Cumulative time: 1.2695732116699219

BaB round 7
batch: 1193
splitting decisions: 
split level 0: [/input-8, 1468] [/input-8, 1468] [/input-8, 878] [/input-8, 878] [/input-8, 878] [/input-8, 1468] [/input-8, 1468] [/input-8, 878] [/input-8, 878] [/input-8, 117] 
pruning_in_iteration open status: True
ratio of positive domain = 597 / 2386 = 0.25020955574182735
pruning-in-iteration extra time: 0.004755973815917969
Time: prepare 0.0446    bound 0.2076    transfer 0.0077    finalize 0.0110    func 0.2712    
Accumulated time: func 1.1539    prepare 0.1128    bound 0.9889    transfer 0.0219    finalize 0.0311    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03220 (19), -0.03161 (19), -0.03144 (19), -0.03136 (19), -0.03095 (19), -0.03086 (19), -0.03021 (19), -0.02996 (19), -0.02979 (19), -0.02956 (19), -0.02933 (19), -0.02920 (19), -0.02916 (19), -0.02910 (19), -0.02907 (19), -0.02907 (19), -0.02885 (19), -0.02882 (19), -0.02876 (19), -0.02860 (19), 
Length of domains: 1789
Time: pickout 0.0156    decision 0.0754    set_bounds 0.0474    solve 0.2716    add 0.0073    
Accumulated time: pickout 0.0373    decision 0.2427    set_bounds 0.1408    solve 1.1551    add 0.0973    
Current (lb-rhs): -0.032202959060668945
4503 domains visited
Cumulative time: 1.6901202201843262

BaB round 8
batch: 1789
splitting decisions: 
split level 0: [/input-8, 117] [/input-8, 117] [/input-8, 1468] [/input-8, 117] [/input-8, 117] [/input-8, 1468] [/input-8, 117] [/input-8, 117] [/input-8, 117] [/input-8, 117] 
pruning_in_iteration open status: True
ratio of positive domain = 1788 / 3578 = 0.49972051425377306
pruning-in-iteration extra time: 0.004851341247558594
Time: prepare 0.0666    bound 0.1857    transfer 0.0164    finalize 0.0166    func 0.2855    
Accumulated time: func 1.4394    prepare 0.1797    bound 1.1746    transfer 0.0382    finalize 0.0476    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03015 (20), -0.02954 (20), -0.02939 (20), -0.02934 (20), -0.02889 (20), -0.02878 (20), -0.02817 (20), -0.02797 (20), -0.02774 (20), -0.02756 (20), -0.02724 (20), -0.02721 (20), -0.02715 (20), -0.02709 (20), -0.02699 (20), -0.02697 (20), -0.02681 (20), -0.02680 (20), -0.02673 (20), -0.02651 (20), 
Length of domains: 1790
Time: pickout 0.0237    decision 0.2597    set_bounds 0.0724    solve 0.2864    add 0.0058    
Accumulated time: pickout 0.0611    decision 0.5024    set_bounds 0.2132    solve 1.4415    add 0.1031    
Current (lb-rhs): -0.03014516830444336
6293 domains visited
Cumulative time: 2.3455448150634766

BaB round 9
batch: 1790
splitting decisions: 
split level 0: [/input-8, 485] [/input-8, 485] [/input-8, 485] [/input-8, 485] [/input-8, 485] [/input-8, 485] [/input-8, 485] [/input-8, 485] [/input-8, 485] [/input-8, 485] 
pruning_in_iteration open status: True
ratio of positive domain = 1715 / 3580 = 0.479050279329609
pruning-in-iteration extra time: 0.0047664642333984375
Time: prepare 0.0671    bound 0.2221    transfer 0.0170    finalize 0.1339    func 0.4405    
Accumulated time: func 1.8798    prepare 0.2471    bound 1.3967    transfer 0.0553    finalize 0.1815    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02637 (21), -0.02583 (21), -0.02569 (21), -0.02557 (21), -0.02528 (21), -0.02493 (21), -0.02471 (21), -0.02422 (21), -0.02417 (21), -0.02373 (21), -0.02366 (21), -0.02345 (21), -0.02345 (21), -0.02333 (21), -0.02328 (21), -0.02322 (21), -0.02321 (21), -0.02297 (21), -0.02283 (21), -0.02269 (21), 
Length of domains: 1865
Time: pickout 0.0271    decision 0.1054    set_bounds 0.0732    solve 0.4411    add 0.0131    
Accumulated time: pickout 0.0881    decision 0.6078    set_bounds 0.2864    solve 1.8825    add 0.1162    
Current (lb-rhs): -0.02637237310409546
8158 domains visited
Cumulative time: 3.0135722160339355

BaB round 10
batch: 1865
splitting decisions: 
split level 0: [/input-8, 878] [/input-8, 878] [/input-8, 620] [/input-8, 878] [/input-8, 620] [/input-8, 485] [/input-8, 485] [/input-8, 878] [/input-8, 620] [/input-8, 1468] 
pruning_in_iteration open status: True
ratio of positive domain = 1627 / 3730 = 0.43619302949061667
pruning-in-iteration extra time: 0.004760026931762695
Time: prepare 0.0726    bound 0.2146    transfer 0.0216    finalize 0.0212    func 0.3305    
Accumulated time: func 2.2103    prepare 0.3199    bound 1.6114    transfer 0.0769    finalize 0.2027    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02369 (22), -0.02320 (22), -0.02290 (22), -0.02244 (22), -0.02209 (22), -0.02202 (22), -0.02091 (22), -0.02079 (22), -0.02074 (22), -0.02065 (22), -0.02055 (22), -0.02054 (22), -0.02020 (22), -0.02006 (22), -0.02003 (22), -0.01997 (22), -0.01996 (22), -0.01986 (22), -0.01958 (22), -0.01958 (22), 
Length of domains: 2103
Time: pickout 0.0297    decision 0.1112    set_bounds 0.0768    solve 0.3316    add 0.0139    
Accumulated time: pickout 0.1178    decision 0.7189    set_bounds 0.3632    solve 2.2141    add 0.1301    
Current (lb-rhs): -0.02369159460067749
10261 domains visited
Cumulative time: 3.58612322807312

BaB round 11
batch: 2103
splitting decisions: 
split level 0: [/input-8, 620] [/input-8, 620] [/input-8, 620] [/input-8, 507] [/input-8, 620] [/input-8, 620] [/input-8, 878] [/input-8, 620] [/input-8, 507] [/input-8, 828] 
pruning_in_iteration open status: True
ratio of positive domain = 1997 / 4206 = 0.4747979077508322
pruning-in-iteration extra time: 0.004856586456298828
Time: prepare 0.0829    bound 0.2280    transfer 0.0214    finalize 0.0228    func 0.3554    
Accumulated time: func 2.5657    prepare 0.4030    bound 1.8394    transfer 0.0983    finalize 0.2255    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01836 (23), -0.01811 (23), -0.01781 (23), -0.01760 (23), -0.01759 (23), -0.01752 (23), -0.01738 (23), -0.01714 (23), -0.01698 (23), -0.01695 (23), -0.01694 (23), -0.01684 (23), -0.01677 (23), -0.01676 (23), -0.01667 (23), -0.01665 (23), -0.01649 (23), -0.01648 (23), -0.01647 (23), -0.01624 (23), 
Length of domains: 2209
Time: pickout 0.0308    decision 0.1243    set_bounds 0.2184    solve 0.3565    add 0.0488    
Accumulated time: pickout 0.1486    decision 0.8432    set_bounds 0.5817    solve 2.5706    add 0.1789    
Current (lb-rhs): -0.0183640718460083
12470 domains visited
Cumulative time: 4.375408172607422

BaB round 12
batch: 2209
splitting decisions: 
split level 0: [/input-8, 507] [/input-8, 507] [/input-8, 507] [/input-8, 507] [/input-8, 507] [/input-8, 507] [/input-8, 507] [/input-8, 507] [/input-8, 507] [/input-8, 507] 
pruning_in_iteration open status: True
ratio of positive domain = 2390 / 4418 = 0.5409687641466727
pruning-in-iteration extra time: 0.004832744598388672
Time: prepare 0.0860    bound 0.2253    transfer 0.0208    finalize 0.1680    func 0.5004    
Accumulated time: func 3.0662    prepare 0.4892    bound 2.0647    transfer 0.1191    finalize 0.3935    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01401 (24), -0.01382 (24), -0.01356 (24), -0.01336 (24), -0.01316 (24), -0.01294 (24), -0.01293 (24), -0.01277 (24), -0.01272 (24), -0.01243 (24), -0.01242 (24), -0.01240 (24), -0.01225 (24), -0.01220 (24), -0.01220 (24), -0.01218 (24), -0.01203 (24), -0.01198 (24), -0.01196 (24), -0.01181 (24), 
Length of domains: 2028
Time: pickout 0.0337    decision 0.1297    set_bounds 0.0916    solve 0.5015    add 0.0070    
Accumulated time: pickout 0.1823    decision 0.9729    set_bounds 0.6733    solve 3.0721    add 0.1860    
Current (lb-rhs): -0.014011859893798828
14498 domains visited
Cumulative time: 5.151264667510986

BaB round 13
batch: 2028
splitting decisions: 
split level 0: [/input-8, 307] [/input-8, 307] [/input-8, 307] [/input-8, 307] [/input-8, 307] [/input-8, 307] [/input-8, 507] [/input-8, 828] [/input-8, 307] [/input-8, 307] 
pruning_in_iteration open status: True
ratio of positive domain = 2883 / 4056 = 0.7107988165680473
pruning-in-iteration extra time: 0.004764556884765625
Time: prepare 0.0807    bound 0.1978    transfer 0.0190    finalize 0.0227    func 0.3205    
Accumulated time: func 3.3866    prepare 0.5701    bound 2.2625    transfer 0.1381    finalize 0.4162    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01187 (25), -0.01165 (25), -0.01139 (25), -0.01122 (25), -0.01099 (25), -0.01084 (25), -0.01080 (25), -0.01062 (25), -0.01057 (25), -0.01029 (25), -0.01023 (25), -0.01008 (25), -0.01007 (25), -0.01006 (25), -0.01005 (25), -0.00988 (25), -0.00983 (25), -0.00982 (25), -0.00970 (25), -0.00948 (25), 
Length of domains: 1173
Time: pickout 0.0330    decision 0.1192    set_bounds 0.0846    solve 0.3217    add 0.0045    
Accumulated time: pickout 0.2153    decision 1.0922    set_bounds 0.7579    solve 3.3938    add 0.1905    
Current (lb-rhs): -0.01187354326248169
15671 domains visited
Cumulative time: 5.725641250610352

BaB round 14
batch: 1173
splitting decisions: 
split level 0: [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] 
pruning_in_iteration open status: True
ratio of positive domain = 1753 / 2346 = 0.7472293265132139
pruning-in-iteration extra time: 0.0048024654388427734
Time: prepare 0.0475    bound 0.2110    transfer 0.0084    finalize 0.0143    func 0.2814    
Accumulated time: func 3.6680    prepare 0.6178    bound 2.4735    transfer 0.1464    finalize 0.4306    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00957 (26), -0.00937 (26), -0.00869 (26), -0.00869 (26), -0.00839 (26), -0.00831 (26), -0.00813 (26), -0.00807 (26), -0.00793 (26), -0.00793 (26), -0.00791 (26), -0.00779 (26), -0.00765 (26), -0.00757 (26), -0.00756 (26), -0.00750 (26), -0.00720 (26), -0.00716 (26), -0.00716 (26), -0.00702 (26), 
Length of domains: 593
Time: pickout 0.0215    decision 0.0733    set_bounds 0.0475    solve 0.2818    add 0.0044    
Accumulated time: pickout 0.2368    decision 1.1655    set_bounds 0.8054    solve 3.6756    add 0.1949    
Current (lb-rhs): -0.009566009044647217
16264 domains visited
Cumulative time: 6.161319971084595

BaB round 15
batch: 593
splitting decisions: 
split level 0: [/input-8, 878] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 1940] [/input-8, 1453] [/input-8, 1940] [/input-8, 1453] [/input-8, 1453] [/input, 391] 
pruning_in_iteration open status: True
ratio of positive domain = 957 / 1186 = 0.8069139966273187
pruning-in-iteration extra time: 0.004613637924194336
Time: prepare 0.0240    bound 0.1447    transfer 0.0033    finalize 0.0068    func 0.1789    
Accumulated time: func 3.8469    prepare 0.6420    bound 2.6182    transfer 0.1497    finalize 0.4374    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00637 (27), -0.00635 (27), -0.00606 (27), -0.00598 (27), -0.00522 (27), -0.00515 (27), -0.00488 (27), -0.00483 (27), -0.00447 (27), -0.00443 (27), -0.00429 (27), -0.00429 (27), -0.00428 (27), -0.00424 (27), -0.00424 (27), -0.00416 (27), -0.00407 (27), -0.00406 (27), -0.00402 (27), -0.00393 (27), 
Length of domains: 229
Time: pickout 0.0121    decision 0.1525    set_bounds 0.0253    solve 0.1791    add 0.0034    
Accumulated time: pickout 0.2489    decision 1.3180    set_bounds 0.8307    solve 3.8547    add 0.1982    
Current (lb-rhs): -0.0063651204109191895
16493 domains visited
Cumulative time: 6.537028789520264

BaB round 16
batch: 229
splitting decisions: 
split level 0: [/input-8, 124] [/input-8, 124] [/input-8, 124] [/input-8, 124] [/input-8, 124] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 124] 
pruning_in_iteration open status: True
ratio of positive domain = 408 / 458 = 0.8908296943231441
pruning-in-iteration extra time: 0.004809379577636719
Time: prepare 0.0091    bound 0.1245    transfer 0.0014    finalize 0.0025    func 0.1376    
Accumulated time: func 3.9844    prepare 0.6513    bound 2.7427    transfer 0.1511    finalize 0.4399    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00414 (28), -0.00412 (28), -0.00383 (28), -0.00375 (28), -0.00299 (28), -0.00292 (28), -0.00263 (28), -0.00258 (28), -0.00232 (28), -0.00230 (28), -0.00220 (28), -0.00215 (28), -0.00208 (28), -0.00204 (28), -0.00190 (28), -0.00188 (28), -0.00188 (28), -0.00177 (28), -0.00172 (28), -0.00169 (28), 
Length of domains: 50
Time: pickout 0.0067    decision 0.0232    set_bounds 0.0095    solve 0.1376    add 0.0020    
Accumulated time: pickout 0.2556    decision 1.3413    set_bounds 0.8402    solve 3.9924    add 0.2002    
Current (lb-rhs): -0.004139423370361328
16543 domains visited
Cumulative time: 6.717422246932983

BaB round 17
batch: 50
splitting decisions: 
split level 0: [/input, 391] [/input, 391] [/input, 391] [/input, 391] [/input, 391] [/input-8, 828] [/input-8, 828] [/input-8, 828] [/input-8, 878] [/input-8, 878] 
split level 1: [/input-8, 1348] [/input-8, 1348] [/input-8, 1348] [/input-8, 1348] [/input-8, 1348] [/input, 391] [/input, 391] [/input, 391] [/input, 391] [/input, 391] 
split level 2: [/input-8, 1467] [/input-8, 1467] [/input-8, 1467] [/input-8, 1467] [/input-8, 1467] [/input-8, 1348] [/input-8, 1348] [/input-8, 1348] [/input-8, 1348] [/input-8, 1348] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 400 / 400 = 1.0
pruning-in-iteration extra time: 4.267692565917969e-05
Time: prepare 0.0098    bound 0.0065    transfer 0.0015    finalize 0.0021    func 0.0202    
Accumulated time: func 4.0046    prepare 0.6613    bound 2.7492    transfer 0.1526    finalize 0.4420    
all_split False
Length of domains: 0
Time: pickout 0.0015    decision 0.0146    set_bounds 0.0140    solve 0.0203    add 0.0001    
Accumulated time: pickout 0.2571    decision 1.3558    set_bounds 0.8543    solve 4.0126    add 0.2003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
16543 domains visited
Cumulative time: 6.769000768661499


Properties batch 4, size 1
Remaining timeout: 191.38510751724243
Verifying property 4 with 1 instances.
##### Instance 42 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.40181970596313477.

Properties batch 5, size 1
Remaining timeout: 191.2678780555725
Verifying property 5 with 1 instances.
##### Instance 42 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.18405646]], device='cuda:0') need to verify.
Model prediction is: tensor([-6.23514986, -9.22857761, -3.75808716, -3.27435327, -4.29405165,
        -3.58545446, -2.41056466, -6.29414511, -6.66572762, -8.34386063],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.18405646]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 590
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 242
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 853
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 33] 
split level 1: [/input-12, 41] 
split level 2: [/input-12, 51] 
split level 3: [/input-12, 11] 
split level 4: [/input-12, 13] 
split level 5: [/input-12, 45] 
split level 6: [/input-8, 483] 
split level 7: [/input-8, 475] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.363059997558594e-05
Time: prepare 0.0031    bound 0.0039    transfer 0.0008    finalize 0.0016    func 0.0095    
Accumulated time: func 0.0095    prepare 0.0035    bound 0.0039    transfer 0.0008    finalize 0.0016    
all_split False
Length of domains: 0
Time: pickout 0.0003    decision 0.0224    set_bounds 0.0169    solve 0.0096    add 0.0001    
Accumulated time: pickout 0.0003    decision 0.0224    set_bounds 0.0169    solve 0.0096    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05319476127624512


Properties batch 6, size 1
Remaining timeout: 191.05420565605164
Verifying property 6 with 1 instances.
##### Instance 42 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.226830244064331.

Properties batch 7, size 1
Remaining timeout: 190.94143223762512
Verifying property 7 with 1 instances.
##### Instance 42 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.032139778137207.

Properties batch 8, size 1
Remaining timeout: 190.8434865474701
Verifying property 8 with 1 instances.
##### Instance 42 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.8689818382263184.
Result: safe in 9.2644 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 43, vnnlib ID: 43 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.89999580, -8.55049229, -2.24591589, -3.50618315, -2.26213169,
         -3.34141207, -2.12596679, -3.44707155, -7.70838165, -6.43066359]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [559]; unstable size 559; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 276, 1, 559] with unstable size 275 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 559] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 559] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [275]; unstable size 275; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 275] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 275] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.40751857,  2.20469332, -2.32452035, -0.32005554, -2.33795691,
         -2.70371652, -1.07307470,  1.97626221,  0.69333458]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.89999580, -8.55049229, -2.24591589, -3.50618315, -2.26213169,
         -3.34141207, -2.12596679, -3.44707155, -7.70838165, -6.43066359]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.89999676, -8.55049229, -2.24591589, -3.50618315, -2.26213217,
          -3.34141254, -2.12596703, -3.44707155, -7.70838165, -6.43066359],
         [-5.89999676, -8.55049229, -2.24591589, -3.50618315, -2.26213217,
          -3.34141254, -2.12596703, -3.44707155, -7.70838165, -6.43066359]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-1.09549665,  0.16477060, -1.07928038, -1.21544552,  0.10565901]]],
       device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]]]],
       device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0736 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 44, vnnlib ID: 44 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.03364277, -19.56793976, -11.80023479, -14.44734001, -11.96190071,
         -15.16267776, -13.56670475, -14.41914845, -17.25975418, -18.72661972]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [579]; unstable size 579; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 366, 1, 579] with unstable size 365 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 579] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 579] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [365]; unstable size 365; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 365] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 365] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.44665480,  4.78385878,  1.24888515, -0.92591423,  1.73357129,
          0.40172100,  0.80255318,  3.31306171,  4.20044708]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.03364277, -19.56793976, -11.80023479, -14.44734001, -11.96190071,
         -15.16267776, -13.56670475, -14.41914845, -17.25975418, -18.72661972]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.04666615, -19.50651550, -11.78564644, -14.38106823, -11.57203579,
          -15.05305195, -13.48137379, -14.08794785, -17.24640465, -18.64059067]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.21361065]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0059 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0748 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 45, vnnlib ID: 45 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.78477669, -6.78171825, -6.26888752, -6.35238361, -6.19891071,
         -6.76594496, -7.28494310, -7.20223379, -6.12016869, -6.41277218]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [523]; unstable size 523; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 204, 1, 523] with unstable size 203 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 523] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 523] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [203]; unstable size 203; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 203] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 203] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.61079025, -2.42233276, -2.06717396, -2.44244194, -1.87546444,
         -1.27228260, -1.18069935, -2.12183714, -1.19985104]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.78477669, -6.78171825, -6.26888752, -6.35238361, -6.19891071,
         -6.76594496, -7.28494310, -7.20223379, -6.12016869, -6.41277218]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.78477764, -6.78171730, -6.26888752, -6.35238314, -6.19891167,
          -6.76594448, -7.28494167, -7.20223379, -6.12016869, -6.41277170],
         [-6.78477764, -6.78171730, -6.26888752, -6.35238314, -6.19891167,
          -6.76594448, -7.28494167, -7.20223379, -6.12016869, -6.41277170]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.00306034, -0.51282978, -0.42933416, -0.58280563, -0.01577282,
           0.50322437,  0.42051649, -0.66154861, -0.36894560]]],
       device='cuda:0')
number of violation:  6
clean attack image tensor([[[[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         ...,


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]]]], device='cuda:0') torch.Size([1, 9, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0821 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 46, vnnlib ID: 46 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.35317993, -10.05822277,  -5.70741463,  -5.30954361,  -5.77602005,
          -5.75247955,  -5.90963793,  -7.28197336,  -9.95428562,  -8.67804050]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [767]; unstable size 767; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 280, 1, 767] with unstable size 279 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 767] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 767] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [279]; unstable size 279; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 279] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 279] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.12624168,  2.47288227, -1.31481647, -0.78547329, -1.26456141,
         -0.82690167,  0.44953927,  2.35486054,  1.43794274]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.35317993, -10.05822277,  -5.70741463,  -5.30954361,  -5.77602005,
          -5.75247955,  -5.90963793,  -7.28197336,  -9.95428562,  -8.67804050]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.35317993, -10.05822277,  -5.70741367,  -5.30954361,  -5.77602053,
           -5.75248098,  -5.90963840,  -7.28197336,  -9.95428562,  -8.67804050],
         [ -7.35317993, -10.05822277,  -5.70741367,  -5.30954361,  -5.77602053,
           -5.75248098,  -5.90963840,  -7.28197336,  -9.95428562,  -8.67804050]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.04506731, -0.44293737,  0.02353954,  0.15715742]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]],


         [[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]],


         [[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]],


         [[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]]]],
       device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0750 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 47, vnnlib ID: 47 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.96445751, -13.95264721, -11.88872242, -12.43732738, -11.28103065,
         -13.65725136, -13.27398205, -14.68500137,  -4.78945637, -13.98094654]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [407]; unstable size 407; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 136, 1, 407] with unstable size 135 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 407] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 407] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [135]; unstable size 135; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 135] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 135] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.02164316, 7.83872128, 5.93336439, 6.63180113, 5.40730762, 7.70184708,
         7.39634609, 8.62479115, 8.04601097]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0328 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 48, vnnlib ID: 48 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.38742971, -8.09583473, -4.17398930, -2.21849561, -4.56612682,
         -1.60451329, -3.84133196, -3.18707657, -8.22775269, -6.31927729]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [525]; unstable size 525; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 227, 1, 525] with unstable size 226 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 525] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 525] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [226]; unstable size 226; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 226] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 226] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.95492125, 4.49830723, 1.13714671, 0.18978065, 1.74934673, 0.88679475,
         0.59362936, 4.57968760, 2.70802212]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0556 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 49, vnnlib ID: 49 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.61658096,  -4.85169363, -11.21480465, -12.01975822, -10.98789406,
         -12.65254879, -10.85314465, -10.63402939,  -8.40850830,  -8.61452770]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [603]; unstable size 603; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 215, 1, 603] with unstable size 214 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 603] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 603] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [214]; unstable size 214; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 214] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 214] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.89015675, 3.85943222, 4.84163761, 3.92533016, 5.16841984, 3.74945736,
         3.27850199, 1.93241072, 2.38752627]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0651 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 50, vnnlib ID: 50 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-14.94205475, -17.04773521, -14.67247200, -15.90819740, -14.60353470,
         -15.82103157, -16.25810432, -18.06786919, -16.98810387, -17.41020012]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [822]; unstable size 822; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 273, 1, 822] with unstable size 272 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 822] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 822] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [272]; unstable size 272; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 272] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 272] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.36523771, -0.94602156, -2.17604685, -0.24087638, -2.33651757,
         -0.49621749,  0.76373535, -0.90574324, -0.11941814]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-14.94205475, -17.04773521, -14.67247200, -15.90819740, -14.60353470,
         -15.82103157, -16.25810432, -18.06786919, -16.98810387, -17.41020012]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-14.94205666, -17.04773521, -14.67247486, -15.90820122, -14.60353661,
          -15.82103348, -16.25810814, -18.06787491, -16.98810387, -17.41019821],
         [-14.94205666, -17.04773521, -14.67247486, -15.90820122, -14.60353661,
          -15.82103348, -16.25810814, -18.06787491, -16.98810387, -17.41019821]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.87897682,  1.22670174, -1.14855862,  0.08716774, -1.21749687,
           0.43707466,  1.16707039,  1.58916473]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         ...,


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]]]], device='cuda:0') torch.Size([1, 8, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0827 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 51, vnnlib ID: 51 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -5.99211121, -14.04107761,  -7.31353474,  -9.89678955,  -8.41009998,
         -10.75332451, -10.63476658, -14.15501976,  -8.49472427, -14.58970451]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [584]; unstable size 584; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 141, 1, 584] with unstable size 140 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 584] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 584] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [140]; unstable size 140; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 140] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 140] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.93474388, 0.60455775, 3.06741548, 1.66697335, 3.81926012, 3.66227555,
         7.25833178, 1.59742737, 7.46314812]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0694 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 52, vnnlib ID: 52 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-7.61421394, -9.33402538, -5.16767883, -2.64045858, -3.99503326,
         -2.02855682, -4.62166262, -4.60086203, -9.98200893, -8.04814816]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [560]; unstable size 560; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 250, 1, 560] with unstable size 249 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 560] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 560] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [249]; unstable size 249; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 249] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 249] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.83084679, 5.06325245, 1.78347707, 0.29397523, 0.66198206, 1.20087099,
         1.58306253, 5.80479622, 4.18815994]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0673 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 53, vnnlib ID: 53 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.78492880, -7.88765907, -5.16387463, -4.98481178, -5.33830261,
         -5.60749578, -4.95262003, -5.78874540, -8.26618099, -6.25775003]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [600]; unstable size 600; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 170, 1, 600] with unstable size 169 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 600] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 600] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [169]; unstable size 169; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 169] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 169] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.27218688,  1.68873811, -0.96977448, -0.89153790, -0.69919324,
         -0.37939474, -0.73812276,  2.16678596,  0.28935480]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.78492880, -7.88765907, -5.16387463, -4.98481178, -5.33830261,
         -5.60749578, -4.95262003, -5.78874540, -8.26618099, -6.25775003]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.78492785, -7.88765907, -5.16387367, -4.98481131, -5.33830214,
          -5.60749578, -4.95261955, -5.78874445, -8.26618099, -6.25774956],
         [-4.78492785, -7.88765907, -5.16387367, -4.98481131, -5.33830214,
          -5.60749578, -4.95261955, -5.78874445, -8.26618099, -6.25774956]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.16769171,  0.21125412,  0.03219175,  0.38568258,  0.65487623,
           0.83612490]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.53492093,  1.47142887,  1.45555580,  ..., -0.78253967,
            -0.78253967, -0.51269841],
           [ 1.56666696,  1.53492093,  1.50317490,  ..., -0.73492062,
            -0.70317459, -0.36984116],
           [ 1.63015902,  1.59841299,  1.56666696,  ..., -0.63968253,
            -0.56031746, -0.14761895],
           ...,
           [ 1.48730183,  1.21746063,  1.09047651,  ...,  1.40793681,
             1.37619078,  1.34444475],
           [ 1.45555580,  1.28095269,  1.28095269,  ...,  1.45555580,
             1.40793681,  1.37619078],
           [ 1.39206374,  1.37619078,  1.37619078,  ...,  1.51904786,
             1.47142887,  1.42380977]],

          [[ 1.67471850,  1.61030626,  1.59420323,  ..., -0.48309177,
            -0.48309177, -0.24154577],
           [ 1.70692456,  1.65861547,  1.62640929,  ..., -0.43478248,
            -0.41867942, -0.08051517],
           [ 1.75523376,  1.72302771,  1.69082153,  ..., -0.33816412,
            -0.25764883,  0.12882459],
           ...,
           [ 1.65861547,  1.41706955,  1.22383285,  ...,  1.57810009,
             1.54589403,  1.52979100],
           [ 1.59420323,  1.43317258,  1.41706955,  ...,  1.61030626,
             1.57810009,  1.54589403],
           [ 1.52979100,  1.49758482,  1.52979100,  ...,  1.65861547,
             1.62640929,  1.59420323]],

          [[ 1.39580250,  1.33583248,  1.32084000,  ..., -0.97301346,
            -0.92803597, -0.61319339],
           [ 1.45577252,  1.41079497,  1.38081002,  ..., -0.94302845,
            -0.85307342, -0.46326834],
           [ 1.54572761,  1.51574254,  1.48575759,  ..., -0.83808094,
            -0.70314842, -0.26836565],
           ...,
           [ 1.51574254,  1.23088503,  0.91604215,  ...,  1.41079497,
             1.30584753,  1.29085493],
           [ 1.47076499,  1.26086998,  1.17091501,  ...,  1.53073502,
             1.39580250,  1.33583248],
           [ 1.32084000,  1.26086998,  1.29085493,  ...,  1.68066013,
             1.51574254,  1.42578757]]],


         [[[ 1.53492093,  1.47142887,  1.45555580,  ..., -0.78253967,
            -0.78253967, -0.51269841],
           [ 1.56666696,  1.53492093,  1.50317490,  ..., -0.73492062,
            -0.70317459, -0.36984116],
           [ 1.63015902,  1.59841299,  1.56666696,  ..., -0.63968253,
            -0.56031746, -0.14761895],
           ...,
           [ 1.48730183,  1.21746063,  1.09047651,  ...,  1.40793681,
             1.37619078,  1.34444475],
           [ 1.45555580,  1.28095269,  1.28095269,  ...,  1.45555580,
             1.40793681,  1.37619078],
           [ 1.39206374,  1.37619078,  1.37619078,  ...,  1.51904786,
             1.47142887,  1.42380977]],

          [[ 1.67471850,  1.61030626,  1.59420323,  ..., -0.48309177,
            -0.48309177, -0.24154577],
           [ 1.70692456,  1.65861547,  1.62640929,  ..., -0.43478248,
            -0.41867942, -0.08051517],
           [ 1.75523376,  1.72302771,  1.69082153,  ..., -0.33816412,
            -0.25764883,  0.12882459],
           ...,
           [ 1.65861547,  1.41706955,  1.22383285,  ...,  1.57810009,
             1.54589403,  1.52979100],
           [ 1.59420323,  1.43317258,  1.41706955,  ...,  1.61030626,
             1.57810009,  1.54589403],
           [ 1.52979100,  1.49758482,  1.52979100,  ...,  1.65861547,
             1.62640929,  1.59420323]],

          [[ 1.39580250,  1.33583248,  1.32084000,  ..., -0.97301346,
            -0.92803597, -0.61319339],
           [ 1.45577252,  1.41079497,  1.38081002,  ..., -0.94302845,
            -0.85307342, -0.46326834],
           [ 1.54572761,  1.51574254,  1.48575759,  ..., -0.83808094,
            -0.70314842, -0.26836565],
           ...,
           [ 1.51574254,  1.23088503,  0.91604215,  ...,  1.41079497,
             1.30584753,  1.29085493],
           [ 1.47076499,  1.26086998,  1.17091501,  ...,  1.53073502,
             1.39580250,  1.33583248],
           [ 1.32084000,  1.26086998,  1.29085493,  ...,  1.68066013,
             1.51574254,  1.42578757]]],


         [[[ 1.53492093,  1.47142887,  1.45555580,  ..., -0.78253967,
            -0.78253967, -0.51269841],
           [ 1.56666696,  1.53492093,  1.50317490,  ..., -0.73492062,
            -0.70317459, -0.36984116],
           [ 1.63015902,  1.59841299,  1.56666696,  ..., -0.63968253,
            -0.56031746, -0.14761895],
           ...,
           [ 1.48730183,  1.21746063,  1.09047651,  ...,  1.40793681,
             1.37619078,  1.34444475],
           [ 1.45555580,  1.28095269,  1.28095269,  ...,  1.45555580,
             1.40793681,  1.37619078],
           [ 1.39206374,  1.37619078,  1.37619078,  ...,  1.51904786,
             1.47142887,  1.42380977]],

          [[ 1.67471850,  1.61030626,  1.59420323,  ..., -0.48309177,
            -0.48309177, -0.24154577],
           [ 1.70692456,  1.65861547,  1.62640929,  ..., -0.43478248,
            -0.41867942, -0.08051517],
           [ 1.75523376,  1.72302771,  1.69082153,  ..., -0.33816412,
            -0.25764883,  0.12882459],
           ...,
           [ 1.65861547,  1.41706955,  1.22383285,  ...,  1.57810009,
             1.54589403,  1.52979100],
           [ 1.59420323,  1.43317258,  1.41706955,  ...,  1.61030626,
             1.57810009,  1.54589403],
           [ 1.52979100,  1.49758482,  1.52979100,  ...,  1.65861547,
             1.62640929,  1.59420323]],

          [[ 1.39580250,  1.33583248,  1.32084000,  ..., -0.97301346,
            -0.92803597, -0.61319339],
           [ 1.45577252,  1.41079497,  1.38081002,  ..., -0.94302845,
            -0.85307342, -0.46326834],
           [ 1.54572761,  1.51574254,  1.48575759,  ..., -0.83808094,
            -0.70314842, -0.26836565],
           ...,
           [ 1.51574254,  1.23088503,  0.91604215,  ...,  1.41079497,
             1.30584753,  1.29085493],
           [ 1.47076499,  1.26086998,  1.17091501,  ...,  1.53073502,
             1.39580250,  1.33583248],
           [ 1.32084000,  1.26086998,  1.29085493,  ...,  1.68066013,
             1.51574254,  1.42578757]]],


         [[[ 1.53492093,  1.47142887,  1.45555580,  ..., -0.78253967,
            -0.78253967, -0.51269841],
           [ 1.56666696,  1.53492093,  1.50317490,  ..., -0.73492062,
            -0.70317459, -0.36984116],
           [ 1.63015902,  1.59841299,  1.56666696,  ..., -0.63968253,
            -0.56031746, -0.14761895],
           ...,
           [ 1.48730183,  1.21746063,  1.09047651,  ...,  1.40793681,
             1.37619078,  1.34444475],
           [ 1.45555580,  1.28095269,  1.28095269,  ...,  1.45555580,
             1.40793681,  1.37619078],
           [ 1.39206374,  1.37619078,  1.37619078,  ...,  1.51904786,
             1.47142887,  1.42380977]],

          [[ 1.67471850,  1.61030626,  1.59420323,  ..., -0.48309177,
            -0.48309177, -0.24154577],
           [ 1.70692456,  1.65861547,  1.62640929,  ..., -0.43478248,
            -0.41867942, -0.08051517],
           [ 1.75523376,  1.72302771,  1.69082153,  ..., -0.33816412,
            -0.25764883,  0.12882459],
           ...,
           [ 1.65861547,  1.41706955,  1.22383285,  ...,  1.57810009,
             1.54589403,  1.52979100],
           [ 1.59420323,  1.43317258,  1.41706955,  ...,  1.61030626,
             1.57810009,  1.54589403],
           [ 1.52979100,  1.49758482,  1.52979100,  ...,  1.65861547,
             1.62640929,  1.59420323]],

          [[ 1.39580250,  1.33583248,  1.32084000,  ..., -0.97301346,
            -0.92803597, -0.61319339],
           [ 1.45577252,  1.41079497,  1.38081002,  ..., -0.94302845,
            -0.85307342, -0.46326834],
           [ 1.54572761,  1.51574254,  1.48575759,  ..., -0.83808094,
            -0.70314842, -0.26836565],
           ...,
           [ 1.51574254,  1.23088503,  0.91604215,  ...,  1.41079497,
             1.30584753,  1.29085493],
           [ 1.47076499,  1.26086998,  1.17091501,  ...,  1.53073502,
             1.39580250,  1.33583248],
           [ 1.32084000,  1.26086998,  1.29085493,  ...,  1.68066013,
             1.51574254,  1.42578757]]],


         [[[ 1.53492093,  1.47142887,  1.45555580,  ..., -0.78253967,
            -0.78253967, -0.51269841],
           [ 1.56666696,  1.53492093,  1.50317490,  ..., -0.73492062,
            -0.70317459, -0.36984116],
           [ 1.63015902,  1.59841299,  1.56666696,  ..., -0.63968253,
            -0.56031746, -0.14761895],
           ...,
           [ 1.48730183,  1.21746063,  1.09047651,  ...,  1.40793681,
             1.37619078,  1.34444475],
           [ 1.45555580,  1.28095269,  1.28095269,  ...,  1.45555580,
             1.40793681,  1.37619078],
           [ 1.39206374,  1.37619078,  1.37619078,  ...,  1.51904786,
             1.47142887,  1.42380977]],

          [[ 1.67471850,  1.61030626,  1.59420323,  ..., -0.48309177,
            -0.48309177, -0.24154577],
           [ 1.70692456,  1.65861547,  1.62640929,  ..., -0.43478248,
            -0.41867942, -0.08051517],
           [ 1.75523376,  1.72302771,  1.69082153,  ..., -0.33816412,
            -0.25764883,  0.12882459],
           ...,
           [ 1.65861547,  1.41706955,  1.22383285,  ...,  1.57810009,
             1.54589403,  1.52979100],
           [ 1.59420323,  1.43317258,  1.41706955,  ...,  1.61030626,
             1.57810009,  1.54589403],
           [ 1.52979100,  1.49758482,  1.52979100,  ...,  1.65861547,
             1.62640929,  1.59420323]],

          [[ 1.39580250,  1.33583248,  1.32084000,  ..., -0.97301346,
            -0.92803597, -0.61319339],
           [ 1.45577252,  1.41079497,  1.38081002,  ..., -0.94302845,
            -0.85307342, -0.46326834],
           [ 1.54572761,  1.51574254,  1.48575759,  ..., -0.83808094,
            -0.70314842, -0.26836565],
           ...,
           [ 1.51574254,  1.23088503,  0.91604215,  ...,  1.41079497,
             1.30584753,  1.29085493],
           [ 1.47076499,  1.26086998,  1.17091501,  ...,  1.53073502,
             1.39580250,  1.33583248],
           [ 1.32084000,  1.26086998,  1.29085493,  ...,  1.68066013,
             1.51574254,  1.42578757]]],


         [[[ 1.53492093,  1.47142887,  1.45555580,  ..., -0.78253967,
            -0.78253967, -0.51269841],
           [ 1.56666696,  1.53492093,  1.50317490,  ..., -0.73492062,
            -0.70317459, -0.36984116],
           [ 1.63015902,  1.59841299,  1.56666696,  ..., -0.63968253,
            -0.56031746, -0.14761895],
           ...,
           [ 1.48730183,  1.21746063,  1.09047651,  ...,  1.40793681,
             1.37619078,  1.34444475],
           [ 1.45555580,  1.28095269,  1.28095269,  ...,  1.45555580,
             1.40793681,  1.37619078],
           [ 1.39206374,  1.37619078,  1.37619078,  ...,  1.51904786,
             1.47142887,  1.42380977]],

          [[ 1.67471850,  1.61030626,  1.59420323,  ..., -0.48309177,
            -0.48309177, -0.24154577],
           [ 1.70692456,  1.65861547,  1.62640929,  ..., -0.43478248,
            -0.41867942, -0.08051517],
           [ 1.75523376,  1.72302771,  1.69082153,  ..., -0.33816412,
            -0.25764883,  0.12882459],
           ...,
           [ 1.65861547,  1.41706955,  1.22383285,  ...,  1.57810009,
             1.54589403,  1.52979100],
           [ 1.59420323,  1.43317258,  1.41706955,  ...,  1.61030626,
             1.57810009,  1.54589403],
           [ 1.52979100,  1.49758482,  1.52979100,  ...,  1.65861547,
             1.62640929,  1.59420323]],

          [[ 1.39580250,  1.33583248,  1.32084000,  ..., -0.97301346,
            -0.92803597, -0.61319339],
           [ 1.45577252,  1.41079497,  1.38081002,  ..., -0.94302845,
            -0.85307342, -0.46326834],
           [ 1.54572761,  1.51574254,  1.48575759,  ..., -0.83808094,
            -0.70314842, -0.26836565],
           ...,
           [ 1.51574254,  1.23088503,  0.91604215,  ...,  1.41079497,
             1.30584753,  1.29085493],
           [ 1.47076499,  1.26086998,  1.17091501,  ...,  1.53073502,
             1.39580250,  1.33583248],
           [ 1.32084000,  1.26086998,  1.29085493,  ...,  1.68066013,
             1.51574254,  1.42578757]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0785 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 54, vnnlib ID: 54 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-8.60030365, -9.18505859, -6.79131508, -6.88497829, -7.22082901,
         -7.05521584, -7.65325308, -6.61295652, -4.71676254, -8.33832359]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [638]; unstable size 638; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 201, 1, 638] with unstable size 200 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 638] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 638] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [200]; unstable size 200; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 200] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 200] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.26122427,  2.70693874, -0.04236507,  0.30218863,  0.55264974,
          0.28326595,  0.97746277, -0.14264691,  2.10263681]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-8.60030365, -9.18505859, -6.79131508, -6.88497829, -7.22082901,
         -7.05521584, -7.65325308, -6.61295652, -4.71676254, -8.33832359]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.92it/s]100%|██████████| 1/1 [00:00<00:00,  8.92it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-8.18685913, -9.02146721, -6.04399967, -6.18254805, -6.46242762,
          -6.28525734, -6.96298456, -5.72760868, -4.99939823, -8.02779961],
         [-8.18685913, -9.02146721, -6.04399967, -6.18254805, -6.46242762,
          -6.28525734, -6.96298456, -5.72760868, -4.99939823, -8.02779961]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.04460144, 0.72821045]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1149 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 9.889851570129395
alpha/beta optimization time: 1.1382267475128174
initial alpha-crown bounds: tensor([[ 2.37169099,  2.83057666,  0.08211136,  0.37143350,  0.65308666,
          0.37245631,  1.04918623, -0.03270292,  2.19201255]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.03270292282104492
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.67634558677673
Verifying property 0 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.3716909885406494.

Properties batch 1, size 1
Remaining timeout: 198.5377480983734
Verifying property 1 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.8305766582489014.

Properties batch 2, size 1
Remaining timeout: 198.44075679779053
Verifying property 2 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.08211135864257812.

Properties batch 3, size 1
Remaining timeout: 198.3450644016266
Verifying property 3 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3714334964752197.

Properties batch 4, size 1
Remaining timeout: 198.24933099746704
Verifying property 4 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6530866622924805.

Properties batch 5, size 1
Remaining timeout: 198.1536991596222
Verifying property 5 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.37245631217956543.

Properties batch 6, size 1
Remaining timeout: 198.05806255340576
Verifying property 6 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.0491862297058105.

Properties batch 7, size 1
Remaining timeout: 197.96241760253906
Verifying property 7 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.03270292]], device='cuda:0') need to verify.
Model prediction is: tensor([-8.60030365, -9.18505859, -6.79131508, -6.88497829, -7.22082901,
        -7.05521584, -7.65325308, -6.61295652, -4.71676254, -8.33832359],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.03270292]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 638
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 196
Node /15 input 0: size torch.Size([100]) unstable 20
-----------------
# of unstable neurons: 854
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 31] 
split level 1: [/input-12, 18] 
split level 2: [/input-12, 36] 
split level 3: [/input-12, 4] 
split level 4: [/input-12, 51] 
split level 5: [/input-12, 26] 
split level 6: [/input-8, 1892] 
split level 7: [/input-8, 875] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.172325134277344e-05
Time: prepare 0.0031    bound 0.0040    transfer 0.0015    finalize 0.0019    func 0.0106    
Accumulated time: func 0.0106    prepare 0.0035    bound 0.0040    transfer 0.0015    finalize 0.0019    
all_split False
Length of domains: 0
Time: pickout 0.0004    decision 0.0226    set_bounds 0.0175    solve 0.0106    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0226    set_bounds 0.0175    solve 0.0106    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.055693626403808594


Properties batch 8, size 1
Remaining timeout: 197.74795031547546
Verifying property 8 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.1920125484466553.
Result: safe in 2.3530 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 55, vnnlib ID: 55 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.89316845, -11.06601906,  -5.14806175,  -6.90553761,  -5.56315517,
          -7.37682629,  -4.56512213,  -8.62777042, -10.82919407, -11.60672951]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [553]; unstable size 553; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 289, 1, 553] with unstable size 288 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 553] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 553] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [288]; unstable size 288; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 288] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 288] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.69567013,  4.02234983, -0.46736050,  1.18290854, -0.48098481,
          1.44691181,  2.02048278,  4.17298126,  4.86422586]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.89316845, -11.06601906,  -5.14806175,  -6.90553761,  -5.56315517,
          -7.37682629,  -4.56512213,  -8.62777042, -10.82919407, -11.60672951]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.97it/s]100%|██████████| 1/1 [00:00<00:00,  8.96it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.66092777, -10.91280365,  -4.69080067,  -6.58803511,  -5.26302862,
           -6.99822426,  -4.68125200,  -8.21521473, -10.48723888, -11.44526005],
         [ -8.66092777, -10.91280365,  -4.69080067,  -6.58803511,  -5.26302862,
           -6.99822426,  -4.68125200,  -8.21521473, -10.48723888, -11.44526005]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.00954866, 0.58177662]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1149 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 20.36388397216797
alpha/beta optimization time: 1.1249017715454102
initial alpha-crown bounds: tensor([[ 2.79173708,  4.12782001, -0.40548480,  1.27908897, -0.38319325,
          1.54761934,  2.13196659,  4.29718494,  4.97714710]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.40548479557037354
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.71118259429932
Verifying property 0 with 1 instances.
##### Instance 55 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.7917370796203613.

Properties batch 1, size 1
Remaining timeout: 198.5742712020874
Verifying property 1 with 1 instances.
##### Instance 55 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.127820014953613.

Properties batch 2, size 1
Remaining timeout: 198.47754669189453
Verifying property 2 with 1 instances.
##### Instance 55 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.40548480]], device='cuda:0') need to verify.
Model prediction is: tensor([ -8.89316845, -11.06601906,  -5.14806175,  -6.90553761,  -5.56315517,
         -7.37682629,  -4.56512213,  -8.62777042, -10.82919407, -11.60672951],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.40548480]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 553
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 283
Node /15 input 0: size torch.Size([100]) unstable 20
-----------------
# of unstable neurons: 856
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 60] 
split level 1: [/input-12, 11] 
split level 2: [/input-12, 58] 
split level 3: [/input-12, 65] 
split level 4: [/input-12, 35] 
split level 5: [/input-8, 1902] 
split level 6: [/input-8, 1563] 
split level 7: [/input-8, 1903] 
pruning_in_iteration open status: True
ratio of positive domain = 192 / 256 = 0.75
pruning-in-iteration extra time: 0.004961729049682617
Time: prepare 0.0030    bound 0.1087    transfer 0.0009    finalize 0.0016    func 0.1142    
Accumulated time: func 0.1142    prepare 0.0034    bound 0.1087    transfer 0.0009    finalize 0.0016    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.23587 (8), -0.23479 (8), -0.23203 (8), -0.23121 (8), -0.23087 (8), -0.23056 (8), -0.22738 (8), -0.22664 (8), -0.22378 (8), -0.22358 (8), -0.22343 (8), -0.22225 (8), -0.22190 (8), -0.22103 (8), -0.22011 (8), -0.21997 (8), -0.21966 (8), -0.21909 (8), -0.21842 (8), -0.21798 (8), 
Length of domains: 64
Time: pickout 0.0004    decision 0.0227    set_bounds 0.0173    solve 0.1143    add 0.0250    
Accumulated time: pickout 0.0004    decision 0.0227    set_bounds 0.0173    solve 0.1143    add 0.0250    
Current (lb-rhs): -0.23586583137512207
64 domains visited
Cumulative time: 0.18457651138305664

BaB round 2
batch: 64
splitting decisions: 
split level 0: [/input-8, 1371] [/input-8, 1371] [/input-8, 1370] [/input-8, 1371] [/input-8, 147] [/input-8, 1371] [/input-8, 1370] [/input-8, 1371] [/input-8, 1371] [/input-8, 1371] 
split level 1: [/input-8, 924] [/input-8, 924] [/input-8, 1371] [/input-8, 1020] [/input-8, 924] [/input-8, 924] [/input-8, 1371] [/input-8, 1020] [/input-8, 924] [/input-8, 924] 
pruning_in_iteration open status: True
ratio of positive domain = 66 / 256 = 0.2578125
pruning-in-iteration extra time: 0.0029342174530029297
Time: prepare 0.0048    bound 0.1382    transfer 0.0012    finalize 0.0013    func 0.1456    
Accumulated time: func 0.2598    prepare 0.0084    bound 0.2469    transfer 0.0021    finalize 0.0029    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.22516 (10), -0.22401 (10), -0.22133 (10), -0.22053 (10), -0.22006 (10), -0.21973 (10), -0.21825 (10), -0.21756 (10), -0.21671 (10), -0.21578 (10), -0.21442 (10), -0.21433 (10), -0.21362 (10), -0.21361 (10), -0.21353 (10), -0.21331 (10), -0.21329 (10), -0.21297 (10), -0.21265 (10), -0.21162 (10), 
Length of domains: 190
Time: pickout 0.0019    decision 0.0140    set_bounds 0.0067    solve 0.1457    add 0.0020    
Accumulated time: pickout 0.0023    decision 0.0368    set_bounds 0.0240    solve 0.2600    add 0.0269    
Current (lb-rhs): -0.22515684366226196
254 domains visited
Cumulative time: 0.3553791046142578

BaB round 3
batch: 190
splitting decisions: 
split level 0: [/input-8, 1436] [/input-8, 1370] [/input-8, 650] [/input-8, 1370] [/input-8, 1436] [/input-8, 1370] [/input-8, 650] [/input-8, 1370] [/input-8, 1436] [/input-8, 1370] 
pruning_in_iteration open status: True
ratio of positive domain = 86 / 380 = 0.22631578947368425
pruning-in-iteration extra time: 0.0017764568328857422
Time: prepare 0.0072    bound 0.1283    transfer 0.0021    finalize 0.0026    func 0.1402    
Accumulated time: func 0.4001    prepare 0.0158    bound 0.3752    transfer 0.0042    finalize 0.0055    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.22107 (11), -0.22022 (11), -0.21731 (11), -0.21643 (11), -0.21631 (11), -0.21591 (11), -0.21420 (11), -0.21377 (11), -0.21266 (11), -0.21201 (11), -0.21050 (11), -0.21040 (11), -0.20998 (11), -0.20985 (11), -0.20952 (11), -0.20947 (11), -0.20875 (11), -0.20874 (11), -0.20871 (11), -0.20759 (11), 
Length of domains: 294
Time: pickout 0.0029    decision 0.0209    set_bounds 0.0079    solve 0.1403    add 0.0026    
Accumulated time: pickout 0.0052    decision 0.0577    set_bounds 0.0319    solve 0.4003    add 0.0295    
Current (lb-rhs): -0.22107183933258057
548 domains visited
Cumulative time: 0.5305919647216797

BaB round 4
batch: 294
splitting decisions: 
split level 0: [/input-8, 933] [/input-8, 933] [/input-8, 1436] [/input-8, 933] [/input-8, 933] [/input-8, 1436] [/input-8, 1436] [/input-8, 933] [/input-8, 1020] [/input-8, 1436] 
pruning_in_iteration open status: False
ratio of positive domain = 62 / 588 = 0.1054421768707483
pruning-in-iteration extra time: 5.14984130859375e-05
Time: prepare 0.0111    bound 0.0995    transfer 0.0020    finalize 0.0028    func 0.1154    
Accumulated time: func 0.5155    prepare 0.0271    bound 0.4746    transfer 0.0062    finalize 0.0083    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21711 (12), -0.21319 (12), -0.21289 (12), -0.21246 (12), -0.21160 (12), -0.21021 (12), -0.20920 (12), -0.20884 (12), -0.20825 (12), -0.20771 (12), -0.20726 (12), -0.20674 (12), -0.20595 (12), -0.20587 (12), -0.20569 (12), -0.20554 (12), -0.20515 (12), -0.20485 (12), -0.20468 (12), -0.20363 (12), 
Length of domains: 525
Time: pickout 0.0047    decision 0.0262    set_bounds 0.0123    solve 0.1156    add 0.0058    
Accumulated time: pickout 0.0099    decision 0.0839    set_bounds 0.0443    solve 0.5159    add 0.0353    
Current (lb-rhs): -0.21711277961730957
1073 domains visited
Cumulative time: 0.6958777904510498

BaB round 5
batch: 525
splitting decisions: 
split level 0: [/input-8, 650] [/input-8, 1436] [/input-8, 933] [/input-8, 1436] [/input-8, 650] [/input-8, 933] [/input-8, 933] [/input-8, 1436] [/input-8, 650] [/input-8, 933] 
pruning_in_iteration open status: False
ratio of positive domain = 25 / 1050 = 0.023809523809523836
pruning-in-iteration extra time: 7.05718994140625e-05
Time: prepare 0.0199    bound 0.1038    transfer 0.0050    finalize 0.0048    func 0.1342    
Accumulated time: func 0.6497    prepare 0.0472    bound 0.5785    transfer 0.0113    finalize 0.0131    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21013 (13), -0.20932 (13), -0.20844 (13), -0.20752 (13), -0.20587 (13), -0.20546 (13), -0.20495 (13), -0.20486 (13), -0.20423 (13), -0.20380 (13), -0.20317 (13), -0.20317 (13), -0.20315 (13), -0.20286 (13), -0.20150 (13), -0.20119 (13), -0.20106 (13), -0.20050 (13), -0.19959 (13), -0.19892 (13), 
Length of domains: 1024
Time: pickout 0.0058    decision 0.0395    set_bounds 0.0219    solve 0.1344    add 0.0188    
Accumulated time: pickout 0.0157    decision 0.1234    set_bounds 0.0662    solve 0.6503    add 0.0541    
Current (lb-rhs): -0.21012932062149048
2097 domains visited
Cumulative time: 0.9172492027282715

BaB round 6
batch: 1024
splitting decisions: 
split level 0: [/input-8, 1020] [/input-8, 1018] [/input-8, 1020] [/input-8, 1018] [/input-8, 1020] [/input-8, 1018] [/input-8, 1020] [/input-8, 1018] [/input-8, 933] [/input-8, 1018] 
pruning_in_iteration open status: False
ratio of positive domain = 0 / 2048 = 0.0
pruning-in-iteration extra time: 7.200241088867188e-05
Time: prepare 0.0384    bound 0.1244    transfer 0.0121    finalize 0.0089    func 0.1847    
Accumulated time: func 0.8344    prepare 0.0857    bound 0.7029    transfer 0.0234    finalize 0.0220    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.20810 (14), -0.20716 (14), -0.20642 (14), -0.20537 (14), -0.20383 (14), -0.20342 (14), -0.20278 (14), -0.20270 (14), -0.20219 (14), -0.20177 (14), -0.20101 (14), -0.20099 (14), -0.20096 (14), -0.20050 (14), -0.19927 (14), -0.19914 (14), -0.19870 (14), -0.19832 (14), -0.19756 (14), -0.19678 (14), 
Length of domains: 2048
Time: pickout 0.0102    decision 0.0656    set_bounds 0.0413    solve 0.1850    add 0.0126    
Accumulated time: pickout 0.0259    decision 0.1890    set_bounds 0.1075    solve 0.8352    add 0.0668    
Current (lb-rhs): -0.20809990167617798
4145 domains visited
Cumulative time: 1.2336268424987793

BaB round 7
batch: 2048
splitting decisions: 
split level 0: [/input-8, 1292] [/input-8, 1340] [/input-8, 1131] [/input-8, 650] [/input-8, 1292] [/input-8, 1340] [/input-8, 1131] [/input-8, 650] [/input-8, 1292] [/input-8, 1340] 
pruning_in_iteration open status: False
ratio of positive domain = 0 / 4096 = 0.0
pruning-in-iteration extra time: 6.628036499023438e-05
Time: prepare 0.0827    bound 0.2046    transfer 0.0185    finalize 0.0196    func 0.3257    
Accumulated time: func 1.1601    prepare 0.1687    bound 0.9075    transfer 0.0419    finalize 0.0417    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.20146 (15), -0.20053 (15), -0.19978 (15), -0.19952 (15), -0.19874 (15), -0.19855 (15), -0.19784 (15), -0.19718 (15), -0.19678 (15), -0.19676 (15), -0.19615 (15), -0.19606 (15), -0.19555 (15), -0.19524 (15), -0.19512 (15), -0.19484 (15), -0.19439 (15), -0.19438 (15), -0.19422 (15), -0.19417 (15), 
Length of domains: 4096
Time: pickout 0.0215    decision 0.1186    set_bounds 0.2096    solve 0.3266    add 0.0419    
Accumulated time: pickout 0.0474    decision 0.3076    set_bounds 0.3171    solve 1.1619    add 0.1086    
Current (lb-rhs): -0.20146280527114868
8241 domains visited
Cumulative time: 1.9549906253814697

BaB round 8
batch: 4096
splitting decisions: 
split level 0: [/input-8, 84] [/input-8, 650] [/input-8, 1340] [/input-8, 1340] [/input-8, 84] [/input-8, 650] [/input-8, 1340] [/input-8, 1340] [/input-8, 84] [/input-8, 650] 
pruning_in_iteration open status: False
ratio of positive domain = 0 / 8192 = 0.0
pruning-in-iteration extra time: 5.698204040527344e-05
Time: prepare 0.1599    bound 0.3596    transfer 0.0454    finalize 0.0392    func 0.6051    
Accumulated time: func 1.7652    prepare 0.3288    bound 1.2670    transfer 0.0873    finalize 0.0809    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.19636 (16), -0.19501 (16), -0.19470 (16), -0.19440 (16), -0.19424 (16), -0.19322 (16), -0.19306 (16), -0.19302 (16), -0.19274 (16), -0.19251 (16), -0.19230 (16), -0.19204 (16), -0.19167 (16), -0.19127 (16), -0.19124 (16), -0.19106 (16), -0.19063 (16), -0.19059 (16), -0.19058 (16), -0.19047 (16), 
Length of domains: 8192
Time: pickout 0.0428    decision 0.2266    set_bounds 0.3144    solve 0.6066    add 0.0339    
Accumulated time: pickout 0.0902    decision 0.5342    set_bounds 0.6315    solve 1.7685    add 0.1426    
Current (lb-rhs): -0.19635647535324097
16433 domains visited
current_vram/total_varm: 9.2GB/99.9GB, batch_size increase to 8192
Cumulative time: 3.1873342990875244

BaB round 9
batch: 8192
splitting decisions: 
split level 0: [/input-8, 1291] [/input-8, 795] [/input-8, 1018] [/input-8, 795] [/input-8, 1291] [/input-8, 795] [/input-8, 1018] [/input-8, 795] [/input-8, 1291] [/input-8, 795] 
pruning_in_iteration open status: False
ratio of positive domain = 0 / 16384 = 0.0
pruning-in-iteration extra time: 8.487701416015625e-05
Time: prepare 0.3253    bound 0.6757    transfer 0.0912    finalize 0.0725    func 1.1665    
Accumulated time: func 2.9317    prepare 0.6544    bound 1.9427    transfer 0.1784    finalize 0.1534    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.19114 (17), -0.18983 (17), -0.18959 (17), -0.18947 (17), -0.18919 (17), -0.18897 (17), -0.18818 (17), -0.18789 (17), -0.18783 (17), -0.18760 (17), -0.18755 (17), -0.18752 (17), -0.18744 (17), -0.18743 (17), -0.18719 (17), -0.18699 (17), -0.18696 (17), -0.18646 (17), -0.18621 (17), -0.18584 (17), 
Length of domains: 16384
Time: pickout 0.0833    decision 0.5870    set_bounds 0.5063    solve 1.1691    add 0.0659    
Accumulated time: pickout 0.1735    decision 1.1212    set_bounds 1.1378    solve 2.9376    add 0.2084    
Current (lb-rhs): -0.19113779067993164
32817 domains visited
current_vram/total_varm: 23.9GB/99.9GB, batch_size increase to 16384
Cumulative time: 5.610102653503418

BaB round 10
batch: 16384
splitting decisions: 
split level 0: [/input-8, 1018] [/input-8, 1131] [/input-8, 1292] [/input-8, 1131] [/input-8, 1018] [/input-8, 1131] [/input-8, 1292] [/input-8, 1131] [/input-8, 1018] [/input-8, 1131] 
pruning_in_iteration open status: False
ratio of positive domain = 0 / 32768 = 0.0
pruning-in-iteration extra time: 0.00021147727966308594
Time: prepare 0.6277    bound 1.3051    transfer 0.1827    finalize 0.3766    func 2.4947    
Accumulated time: func 5.4264    prepare 1.2824    bound 3.2478    transfer 0.3612    finalize 0.5300    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18856 (18), -0.18715 (18), -0.18700 (18), -0.18689 (18), -0.18634 (18), -0.18606 (18), -0.18550 (18), -0.18523 (18), -0.18484 (18), -0.18473 (18), -0.18470 (18), -0.18467 (18), -0.18459 (18), -0.18447 (18), -0.18440 (18), -0.18437 (18), -0.18388 (18), -0.18385 (18), -0.18308 (18), -0.18300 (18), 
Length of domains: 32768
Time: pickout 0.1658    decision 1.7972    set_bounds 0.8775    solve 2.4998    add 0.1158    
Accumulated time: pickout 0.3394    decision 2.9184    set_bounds 2.0153    solve 5.4374    add 0.3242    
Current (lb-rhs): -0.18855774402618408
65585 domains visited
current_vram/total_varm: 27.2GB/99.9GB, batch_size increase to 32768
Cumulative time: 11.089427947998047

BaB round 11
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1340] [/input-8, 1291] [/input-8, 989] [/input-8, 1886] [/input-8, 1340] [/input-8, 1291] [/input-8, 989] [/input-8, 1886] [/input-8, 1340] [/input-8, 1291] 
pruning_in_iteration open status: False
ratio of positive domain = 0 / 65536 = 0.0
pruning-in-iteration extra time: 0.0004105567932128906
Time: prepare 1.2536    bound 7.7590    transfer 0.4341    finalize 0.3888    func 9.8389    
Accumulated time: func 15.2653    prepare 2.5365    bound 11.0068    transfer 0.7952    finalize 0.9188    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18549 (19), -0.18408 (19), -0.18382 (19), -0.18382 (19), -0.18328 (19), -0.18263 (19), -0.18242 (19), -0.18241 (19), -0.18206 (19), -0.18188 (19), -0.18162 (19), -0.18158 (19), -0.18151 (19), -0.18151 (19), -0.18136 (19), -0.18130 (19), -0.18099 (19), -0.18097 (19), -0.18094 (19), -0.18081 (19), 
Length of domains: 65536
Time: pickout 0.3456    decision 3.7339    set_bounds 1.9498    solve 10.1836    add 0.2086    
Accumulated time: pickout 0.6850    decision 6.6524    set_bounds 3.9651    solve 15.6210    add 0.5328    
Current (lb-rhs): -0.1854928731918335
131121 domains visited
Cumulative time: 27.557074546813965

BaB round 12
batch: 32768
splitting decisions: 
split level 0: [/input-8, 893] [/input-8, 1292] [/input-8, 795] [/input-8, 893] [/input-8, 893] [/input-8, 1292] [/input-8, 795] [/input-8, 893] [/input-8, 893] [/input-8, 1292] 
pruning_in_iteration open status: False
ratio of positive domain = 0 / 65536 = 0.0
pruning-in-iteration extra time: 0.00040340423583984375
Time: prepare 1.2962    bound 7.7623    transfer 0.4276    finalize 0.8411    func 10.3311    
Accumulated time: func 25.5964    prepare 3.8332    bound 18.7691    transfer 1.2228    finalize 1.7599    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18549 (19), -0.18408 (19), -0.18382 (19), -0.18382 (19), -0.18328 (19), -0.18241 (19), -0.18206 (19), -0.18162 (19), -0.18158 (19), -0.18151 (19), -0.18151 (19), -0.18130 (19), -0.18081 (19), -0.17987 (19), -0.17984 (19), -0.17983 (19), -0.17982 (19), -0.17966 (19), -0.17962 (19), -0.17953 (19), 
Length of domains: 98304
Time: pickout 0.4214    decision 3.2873    set_bounds 1.8221    solve 10.3397    add 19.5818    
Accumulated time: pickout 1.1064    decision 9.9397    set_bounds 5.7871    solve 25.9607    add 20.1146    
Current (lb-rhs): -0.1854928731918335
196657 domains visited
Cumulative time: 63.06043720245361

BaB round 13
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1131] [/input-8, 84] [/input-8, 84] [/input-8, 924] [/input-8, 1131] [/input-8, 84] [/input-8, 893] [/input-8, 924] [/input-8, 1131] [/input-8, 84] 
pruning_in_iteration open status: False
ratio of positive domain = 0 / 65536 = 0.0
pruning-in-iteration extra time: 0.00040602684020996094
Time: prepare 1.3234    bound 7.7668    transfer 0.4370    finalize 0.4223    func 9.9528    
Accumulated time: func 35.5492    prepare 5.1573    bound 26.5359    transfer 1.6598    finalize 2.1822    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18549 (19), -0.18408 (19), -0.18382 (19), -0.18382 (19), -0.18328 (19), -0.18241 (19), -0.18206 (19), -0.18162 (19), -0.18158 (19), -0.18151 (19), -0.18151 (19), -0.18130 (19), -0.18081 (19), -0.17987 (19), -0.17984 (19), -0.17983 (19), -0.17982 (19), -0.17966 (19), -0.17962 (19), -0.17953 (19), 
Length of domains: 131072
Time: pickout 0.4358    decision 3.4497    set_bounds 2.0097    solve 10.5755    add 0.3060    
Accumulated time: pickout 1.5422    decision 13.3893    set_bounds 7.7968    solve 36.5362    add 20.4206    
Current (lb-rhs): -0.1854928731918335
262193 domains visited
Cumulative time: 79.90421724319458

BaB round 14
batch: 32768
splitting decisions: 
split level 0: [/input-8, 795] [/input-8, 893] [/input-8, 893] [/input-8, 1868] [/input-8, 795] [/input-8, 893] [/input-8, 84] [/input-8, 1868] [/input-8, 795] [/input-8, 893] 
pruning_in_iteration open status: False
ratio of positive domain = 0 / 65536 = 0.0
pruning-in-iteration extra time: 0.0004067420959472656
Time: prepare 1.3262    bound 7.7635    transfer 0.4554    finalize 1.1261    func 10.6745    
Accumulated time: func 46.2237    prepare 6.4841    bound 34.2994    transfer 2.1152    finalize 3.3082    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18549 (19), -0.18408 (19), -0.18382 (19), -0.18382 (19), -0.18328 (19), -0.18241 (19), -0.18206 (19), -0.18162 (19), -0.18158 (19), -0.18151 (19), -0.18151 (19), -0.18130 (19), -0.18081 (19), -0.17987 (19), -0.17984 (19), -0.17983 (19), -0.17982 (19), -0.17966 (19), -0.17962 (19), -0.17953 (19), 
Length of domains: 163840
Time: pickout 0.5201    decision 3.4252    set_bounds 2.3075    solve 10.6829    add 0.3970    
Accumulated time: pickout 2.0622    decision 16.8146    set_bounds 10.1043    solve 47.2191    add 20.8177    
Current (lb-rhs): -0.1854928731918335
327729 domains visited
Cumulative time: 97.31357336044312

BaB round 15
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1562] [/input-8, 924] [/input-8, 1562] [/input-8, 1292] [/input-8, 1562] [/input-8, 924] [/input-8, 1562] [/input-8, 1386] [/input-8, 1562] [/input-8, 1886] 
pruning_in_iteration open status: False
ratio of positive domain = 0 / 65536 = 0.0
pruning-in-iteration extra time: 0.0004029273986816406
Time: prepare 1.3656    bound 7.7659    transfer 0.4608    finalize 0.4186    func 10.0135    
Accumulated time: func 56.2372    prepare 7.8503    bound 42.0653    transfer 2.5761    finalize 3.7268    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18549 (19), -0.18408 (19), -0.18382 (19), -0.18382 (19), -0.18328 (19), -0.18241 (19), -0.18206 (19), -0.18162 (19), -0.18158 (19), -0.18151 (19), -0.18151 (19), -0.18130 (19), -0.18081 (19), -0.17987 (19), -0.17984 (19), -0.17983 (19), -0.17982 (19), -0.17966 (19), -0.17962 (19), -0.17953 (19), 
Length of domains: 196608
Time: pickout 0.4528    decision 3.3631    set_bounds 2.3754    solve 10.0227    add 0.2579    
Accumulated time: pickout 2.5151    decision 20.1777    set_bounds 12.4797    solve 57.2418    add 21.0756    
Current (lb-rhs): -0.1854928731918335
393265 domains visited
Cumulative time: 113.85513138771057

BaB round 16
batch: 32768
splitting decisions: 
split level 0: [/input-8, 485] [/input-8, 1386] [/input-8, 485] [/input-8, 1386] [/input-8, 989] [/input-8, 1386] [/input-8, 485] [/input-8, 1292] [/input-8, 485] [/input-8, 1386] 
pruning_in_iteration open status: False
ratio of positive domain = 0 / 65536 = 0.0
pruning-in-iteration extra time: 0.0003979206085205078
Time: prepare 1.3466    bound 7.7714    transfer 0.4793    finalize 0.4115    func 10.0118    
Accumulated time: func 66.2490    prepare 9.1975    bound 49.8367    transfer 3.0554    finalize 4.1383    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18549 (19), -0.18408 (19), -0.18382 (19), -0.18382 (19), -0.18328 (19), -0.18241 (19), -0.18206 (19), -0.18162 (19), -0.18158 (19), -0.18151 (19), -0.18151 (19), -0.18130 (19), -0.18081 (19), -0.17987 (19), -0.17984 (19), -0.17983 (19), -0.17982 (19), -0.17966 (19), -0.17962 (19), -0.17953 (19), 
Length of domains: 229376
Time: pickout 0.4967    decision 4.3736    set_bounds 2.4710    solve 10.0211    add 0.2595    
Accumulated time: pickout 3.0118    decision 24.5513    set_bounds 14.9507    solve 67.2629    add 21.3350    
Current (lb-rhs): -0.1854928731918335
458801 domains visited
Cumulative time: 131.5452754497528

BaB round 17
batch: 32768
splitting decisions: 
split level 0: [/input-8, 989] [/input-8, 1886] [/input-8, 147] [/input-8, 989] [/input-8, 1444] [/input-8, 1886] [/input-8, 147] [/input-8, 989] [/input-8, 989] [/input-8, 924] 
pruning_in_iteration open status: False
ratio of positive domain = 130 / 65536 = 0.001983642578125
pruning-in-iteration extra time: 0.00037741661071777344
Time: prepare 1.3222    bound 7.7682    transfer 0.4939    finalize 0.4455    func 10.0332    
Accumulated time: func 76.2821    prepare 10.5203    bound 57.6049    transfer 3.5492    finalize 4.5838    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18549 (19), -0.18408 (19), -0.18382 (19), -0.18382 (19), -0.18328 (19), -0.18241 (19), -0.18206 (19), -0.18162 (19), -0.18158 (19), -0.18151 (19), -0.18151 (19), -0.18130 (19), -0.18081 (19), -0.17987 (19), -0.17984 (19), -0.17983 (19), -0.17982 (19), -0.17966 (19), -0.17962 (19), -0.17953 (19), 
Length of domains: 262008
Time: pickout 0.5102    decision 3.4184    set_bounds 2.6052    solve 10.0425    add 0.2392    
Accumulated time: pickout 3.5220    decision 27.9697    set_bounds 17.5559    solve 77.3054    add 21.5742    
Current (lb-rhs): -0.1854928731918335
524201 domains visited
Cumulative time: 148.43500900268555

BaB round 18
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1421] [/input-8, 924] [/input-8, 878] [/input-8, 1562] [/input-8, 1421] [/input-8, 924] [/input-8, 924] [/input-8, 893] [/input-8, 1421] [/input-8, 924] 
pruning_in_iteration open status: False
ratio of positive domain = 349 / 65536 = 0.0053253173828125
pruning-in-iteration extra time: 0.0004143714904785156
Time: prepare 1.4435    bound 7.7685    transfer 0.5360    finalize 1.6557    func 11.4065    
Accumulated time: func 87.6887    prepare 11.9643    bound 65.3734    transfer 4.0852    finalize 6.2395    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18549 (19), -0.18408 (19), -0.18382 (19), -0.18382 (19), -0.18328 (19), -0.18241 (19), -0.18206 (19), -0.18162 (19), -0.18158 (19), -0.18151 (19), -0.18151 (19), -0.18130 (19), -0.18081 (19), -0.17987 (19), -0.17984 (19), -0.17983 (19), -0.17982 (19), -0.17966 (19), -0.17962 (19), -0.17953 (19), 
Length of domains: 294406
Time: pickout 0.5352    decision 4.5468    set_bounds 1.5341    solve 11.4143    add 0.4689    
Accumulated time: pickout 4.0572    decision 32.5165    set_bounds 19.0900    solve 88.7197    add 22.0431    
Current (lb-rhs): -0.1854928731918335
589367 domains visited
Cumulative time: 167.0614092350006

BaB round 19
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1828] [/input-8, 923] [/input-8, 1589] [/input-8, 84] [/input-8, 1828] [/input-8, 878] [/input-8, 1291] [/input-8, 84] [/input-8, 1828] [/input-8, 1868] 
pruning_in_iteration open status: False
ratio of positive domain = 1094 / 65536 = 0.016693115234375
pruning-in-iteration extra time: 0.00040268898010253906
Time: prepare 1.3175    bound 7.7702    transfer 0.5639    finalize 0.4367    func 10.0918    
Accumulated time: func 97.7805    prepare 13.2823    bound 73.1436    transfer 4.6492    finalize 6.6762    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18549 (19), -0.18408 (19), -0.18382 (19), -0.18382 (19), -0.18328 (19), -0.18241 (19), -0.18206 (19), -0.18162 (19), -0.18158 (19), -0.18151 (19), -0.18151 (19), -0.18130 (19), -0.18081 (19), -0.17987 (19), -0.17984 (19), -0.17983 (19), -0.17982 (19), -0.17966 (19), -0.17962 (19), -0.17953 (19), 
Length of domains: 326048
Time: pickout 0.5012    decision 3.4062    set_bounds 3.1747    solve 10.1007    add 0.4092    
Accumulated time: pickout 4.5584    decision 35.9226    set_bounds 22.2647    solve 98.8205    add 22.4523    
Current (lb-rhs): -0.1854928731918335
653777 domains visited
Cumulative time: 184.80395078659058

BaB round 20
batch: 32768
splitting decisions: 
split level 0: [/input-8, 77] [/input-8, 1828] [/input-8, 1291] [/input-8, 1589] [/input-8, 77] [/input-8, 1291] [/input-8, 878] [/input-8, 1589] [/input-8, 77] [/input-8, 1828] 
pruning_in_iteration open status: False
ratio of positive domain = 2701 / 65536 = 0.0412139892578125
pruning-in-iteration extra time: 0.0004677772521972656
Time: prepare 1.3339    bound 7.7710    transfer 0.6068    finalize 0.4512    func 10.1657    
Accumulated time: func 107.9462    prepare 14.6168    bound 80.9146    transfer 5.2559    finalize 7.1273    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18549 (19), -0.18408 (19), -0.18382 (19), -0.18382 (19), -0.18328 (19), -0.18241 (19), -0.18206 (19), -0.18162 (19), -0.18158 (19), -0.18151 (19), -0.18151 (19), -0.18130 (19), -0.18081 (19), -0.17987 (19), -0.17984 (19), -0.17983 (19), -0.17982 (19), -0.17966 (19), -0.17962 (19), -0.17953 (19), 
Length of domains: 356044
Time: pickout 0.5332    decision 3.3976    set_bounds 3.3063    solve 10.1751    add 0.3705    
Accumulated time: pickout 5.0916    decision 39.3202    set_bounds 25.5710    solve 108.9956    add 22.8228    
Current (lb-rhs): -0.1854928731918335
716541 domains visited
Time out!!!!!!!!
Result: unknown in 205.8589 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 56, vnnlib ID: 56 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.88202381, -15.77611637, -13.39399529, -17.09332085, -13.82697010,
         -18.11546516, -17.38292885, -15.74606514,  -9.08050442, -14.54284763]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [579]; unstable size 579; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 192, 1, 579] with unstable size 191 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 579] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 579] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [191]; unstable size 191; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 191] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 191] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.80924940,  2.66314459,  6.04740047,  2.98685741,  6.92152977,
          6.10498810,  4.46677589, -1.73226357,  3.55088139]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.88202381, -15.77611637, -13.39399529, -17.09332085, -13.82697010,
         -18.11546516, -17.38292885, -15.74606514,  -9.08050442, -14.54284763]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.88202381, -15.77611637, -13.39399529, -17.09332085, -13.82697010,
          -18.11546516, -17.38292885, -15.74606514,  -9.08050442, -14.54284763]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.80151939]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.24920666e+00,  1.67777801e+00,  1.32857168e+00,  ...,
             2.80952454e-01,  1.06349289e-01, -5.23808524e-02],
           [ 9.79365110e-01,  1.39206374e+00,  1.24920666e+00,  ...,
            -1.95237994e-01, -1.79364979e-01, -1.31745934e-01],
           [ 1.28095269e+00,  1.39206374e+00,  9.15873051e-01,  ...,
            -2.06348225e-02,  1.11112073e-02,  2.17460394e-01],
           ...,
           [-4.96825397e-01, -4.80952382e-01, -4.33333218e-01,  ...,
            -4.80952382e-01, -4.96825397e-01, -4.96825397e-01],
           [-4.33333218e-01, -4.65079248e-01, -4.80952382e-01,  ...,
            -4.65079248e-01, -4.49206233e-01, -4.49206233e-01],
           [-4.33333218e-01, -4.65079248e-01, -4.96825397e-01,  ...,
            -4.65079248e-01, -4.49206233e-01, -4.49206233e-01]],

          [[ 1.91626441e+00,  2.06119204e+00,  1.70692456e+00,  ...,
             1.27214205e+00,  1.15942061e+00,  1.06280196e+00],
           [ 1.72302771e+00,  1.88405824e+00,  1.83574903e+00,  ...,
             1.07890511e+00,  1.06280196e+00,  1.04669893e+00],
           [ 1.94847047e+00,  1.91626441e+00,  1.69082153e+00,  ...,
             1.19162667e+00,  1.20772982e+00,  1.30434811e+00],
           ...,
           [-3.22059989e-02, -4.83090580e-02, -3.22059989e-02,  ...,
            -6.44121096e-02, -8.05151686e-02, -8.05151686e-02],
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -3.22059989e-02, -1.61029361e-02, -3.22059989e-02],
           [-6.44121096e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -3.22059989e-02, -1.61029361e-02, -1.61029361e-02]],

          [[ 2.10045004e+00,  2.08545780e+00,  1.81559265e+00,  ...,
             1.84557760e+00,  1.80060017e+00,  1.74063015e+00],
           [ 1.96551764e+00,  1.92054021e+00,  1.96551764e+00,  ...,
             1.87556267e+00,  1.86057019e+00,  1.81559265e+00],
           [ 2.08545780e+00,  1.96551764e+00,  1.96551764e+00,  ...,
             1.95052516e+00,  1.95052516e+00,  1.96551764e+00],
           ...,
           [ 2.11394474e-01,  1.21439442e-01,  1.81409463e-01,  ...,
             2.11394474e-01,  2.11394474e-01,  2.11394474e-01],
           [ 2.26386964e-01,  1.51424453e-01,  1.81409463e-01,  ...,
             2.26386964e-01,  2.26386964e-01,  2.41379470e-01],
           [ 1.81409463e-01,  1.66416958e-01,  1.96401969e-01,  ...,
             1.96401969e-01,  2.11394474e-01,  2.26386964e-01]]]]],
       device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0446 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 57, vnnlib ID: 57 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.99673080, -8.42243385, -3.26751232, -2.50442123, -3.13881588,
         -2.46149969, -4.81901884, -3.50631714, -8.64563560, -7.38313150]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [561]; unstable size 561; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 250, 1, 561] with unstable size 249 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 561] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 561] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [249]; unstable size 249; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 249] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 249] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.82033253,  4.02014828, -0.46752262, -0.34412289, -0.36842322,
          1.16381466, -0.08054891,  4.18153286,  2.90686536]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.99673080, -8.42243385, -3.26751232, -2.50442123, -3.13881588,
         -2.46149969, -4.81901884, -3.50631714, -8.64563560, -7.38313150]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.66181135, -8.20787239, -3.11358619, -2.42211366, -2.97288847,
          -2.58318949, -4.48878956, -3.49081755, -8.25464249, -7.20841789],
         [-6.66181135, -8.20787239, -3.11358619, -2.42211366, -2.97288847,
          -2.58318949, -4.48878956, -3.49081755, -8.25464249, -7.20841789]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.53039670, -0.16107583,  0.38969898,  0.90762806]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0180 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0875 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 58, vnnlib ID: 58 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.83774090, -5.62437820, -5.73738670, -5.16293812, -7.36110210,
         -6.22037792, -5.42629576, -7.85859919, -5.66585159, -6.29455137]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [486]; unstable size 486; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 198, 1, 486] with unstable size 197 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 9, 1, 486] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 486] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [197]; unstable size 197; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 9, 1, 197] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 197] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.56799006, -1.02534294, -0.31647977,  1.51819468,  0.67600739,
         -0.32146615,  2.05102563, -1.13650227, -0.20026422]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.83774090, -5.62437820, -5.73738670, -5.16293812, -7.36110210,
         -6.22037792, -5.42629576, -7.85859919, -5.66585159, -6.29455137]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.00282240, -5.31585503, -6.18742752, -5.74986649, -7.84297562,
          -6.85040140, -5.90831709, -8.36210918, -5.61094189, -6.28945971],
         [-6.00282240, -5.31585503, -6.18742752, -5.74986649, -7.84297562,
          -6.85040140, -5.90831709, -8.36210918, -5.61094189, -6.28945971]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.25295591, -0.43401146,  0.43756104,  0.15845060, -0.13892460,
           0.53959322]]], device='cuda:0')
number of violation:  2
Attack finished in 0.0121 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0634 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 59, vnnlib ID: 59 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.93982983, -9.67457962, -3.81645751, -4.62450838, -3.47099352,
         -5.53091383, -3.97788739, -6.31543112, -7.47973061, -9.39750957]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [610]; unstable size 610; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 203, 1, 610] with unstable size 202 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 610] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 610] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [202]; unstable size 202; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 202] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 202] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.79685736,  4.36240864, -0.97976065, -0.08943772, -1.19198728,
          0.69136393,  1.47140551,  2.15872169,  4.19818211]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.93982983, -9.67457962, -3.81645751, -4.62450838, -3.47099352,
         -5.53091383, -3.97788739, -6.31543112, -7.47973061, -9.39750957]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.93982983, -9.67457867, -3.81645751, -4.62450838, -3.47099352,
          -5.53091431, -3.97788668, -6.31543159, -7.47973061, -9.39750862],
         [-6.93982983, -9.67457867, -3.81645751, -4.62450838, -3.47099352,
          -5.53091431, -3.97788668, -6.31543159, -7.47973061, -9.39750862]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.16142917,  0.64662170, -0.50689316]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-1.44920623, -1.36984122, -1.52857137,  ..., -1.43333328,
            -1.35396814, -1.33809519],
           [-1.41746020, -1.40158725, -1.51269829,  ..., -1.38571417,
            -1.44920623, -1.33809519],
           [-1.57619035, -1.46507931, -1.48095226,  ..., -1.46507931,
            -1.51269829, -1.30634916],
           ...,
           [-1.78253973, -1.83015871, -1.84603179,  ..., -1.41746020,
            -1.33809519, -1.35396814],
           [-1.83015871, -1.86190474, -1.86190474,  ..., -1.65555561,
            -1.43333328, -1.46507931],
           [-1.87777781, -1.84603179, -1.83015871,  ..., -1.73492062,
            -1.43333328, -1.48095226]],

          [[-1.49758446, -1.41706920, -1.54589367,  ..., -1.49758446,
            -1.38486302, -1.32045078],
           [-1.43317223, -1.41706920, -1.49758446,  ..., -1.46537840,
            -1.49758446, -1.30434775],
           [-1.59420288, -1.48148143, -1.48148143,  ..., -1.54589367,
            -1.54589367, -1.23993552],
           ...,
           [-1.75523353, -1.81964576, -1.81964576,  ..., -1.41706920,
            -1.38486302, -1.36875999],
           [-1.78743970, -1.81964576, -1.83574879,  ..., -1.62640905,
            -1.46537840, -1.46537840],
           [-1.80354273, -1.78743970, -1.80354273,  ..., -1.69082129,
            -1.48148143, -1.46537840]],

          [[-1.31784117, -1.42278874, -1.40779614,  ..., -1.36281872,
            -1.21289361, -1.07796109],
           [-1.21289361, -1.33283365, -1.37781119,  ..., -1.39280367,
            -1.27286363, -1.06296861],
           [-1.36281872, -1.34782624, -1.39280367,  ..., -1.45277369,
            -1.31784117, -1.04797614],
           ...,
           [-1.42278874, -1.48275876, -1.46776617,  ..., -1.18290865,
            -1.30284870, -1.31784117],
           [-1.40779614, -1.43778121, -1.45277369,  ..., -1.27286363,
            -1.33283365, -1.36281872],
           [-1.42278874, -1.39280367, -1.45277369,  ..., -1.30284870,
            -1.30284870, -1.37781119]]],


         [[[-1.44920623, -1.36984122, -1.52857137,  ..., -1.43333328,
            -1.35396814, -1.33809519],
           [-1.41746020, -1.40158725, -1.51269829,  ..., -1.38571417,
            -1.44920623, -1.33809519],
           [-1.57619035, -1.46507931, -1.48095226,  ..., -1.46507931,
            -1.51269829, -1.30634916],
           ...,
           [-1.78253973, -1.83015871, -1.84603179,  ..., -1.41746020,
            -1.33809519, -1.35396814],
           [-1.83015871, -1.86190474, -1.86190474,  ..., -1.65555561,
            -1.43333328, -1.46507931],
           [-1.87777781, -1.84603179, -1.83015871,  ..., -1.73492062,
            -1.43333328, -1.48095226]],

          [[-1.49758446, -1.41706920, -1.54589367,  ..., -1.49758446,
            -1.38486302, -1.32045078],
           [-1.43317223, -1.41706920, -1.49758446,  ..., -1.46537840,
            -1.49758446, -1.30434775],
           [-1.59420288, -1.48148143, -1.48148143,  ..., -1.54589367,
            -1.54589367, -1.23993552],
           ...,
           [-1.75523353, -1.81964576, -1.81964576,  ..., -1.41706920,
            -1.38486302, -1.36875999],
           [-1.78743970, -1.81964576, -1.83574879,  ..., -1.62640905,
            -1.46537840, -1.46537840],
           [-1.80354273, -1.78743970, -1.80354273,  ..., -1.69082129,
            -1.48148143, -1.46537840]],

          [[-1.31784117, -1.42278874, -1.40779614,  ..., -1.36281872,
            -1.21289361, -1.07796109],
           [-1.21289361, -1.33283365, -1.37781119,  ..., -1.39280367,
            -1.27286363, -1.06296861],
           [-1.36281872, -1.34782624, -1.39280367,  ..., -1.45277369,
            -1.31784117, -1.04797614],
           ...,
           [-1.42278874, -1.48275876, -1.46776617,  ..., -1.18290865,
            -1.30284870, -1.31784117],
           [-1.40779614, -1.43778121, -1.45277369,  ..., -1.27286363,
            -1.33283365, -1.36281872],
           [-1.42278874, -1.39280367, -1.45277369,  ..., -1.30284870,
            -1.30284870, -1.37781119]]],


         [[[-1.44920623, -1.36984122, -1.52857137,  ..., -1.43333328,
            -1.35396814, -1.33809519],
           [-1.41746020, -1.40158725, -1.51269829,  ..., -1.38571417,
            -1.44920623, -1.33809519],
           [-1.57619035, -1.46507931, -1.48095226,  ..., -1.46507931,
            -1.51269829, -1.30634916],
           ...,
           [-1.78253973, -1.83015871, -1.84603179,  ..., -1.41746020,
            -1.33809519, -1.35396814],
           [-1.83015871, -1.86190474, -1.86190474,  ..., -1.65555561,
            -1.43333328, -1.46507931],
           [-1.87777781, -1.84603179, -1.83015871,  ..., -1.73492062,
            -1.43333328, -1.48095226]],

          [[-1.49758446, -1.41706920, -1.54589367,  ..., -1.49758446,
            -1.38486302, -1.32045078],
           [-1.43317223, -1.41706920, -1.49758446,  ..., -1.46537840,
            -1.49758446, -1.30434775],
           [-1.59420288, -1.48148143, -1.48148143,  ..., -1.54589367,
            -1.54589367, -1.23993552],
           ...,
           [-1.75523353, -1.81964576, -1.81964576,  ..., -1.41706920,
            -1.38486302, -1.36875999],
           [-1.78743970, -1.81964576, -1.83574879,  ..., -1.62640905,
            -1.46537840, -1.46537840],
           [-1.80354273, -1.78743970, -1.80354273,  ..., -1.69082129,
            -1.48148143, -1.46537840]],

          [[-1.31784117, -1.42278874, -1.40779614,  ..., -1.36281872,
            -1.21289361, -1.07796109],
           [-1.21289361, -1.33283365, -1.37781119,  ..., -1.39280367,
            -1.27286363, -1.06296861],
           [-1.36281872, -1.34782624, -1.39280367,  ..., -1.45277369,
            -1.31784117, -1.04797614],
           ...,
           [-1.42278874, -1.48275876, -1.46776617,  ..., -1.18290865,
            -1.30284870, -1.31784117],
           [-1.40779614, -1.43778121, -1.45277369,  ..., -1.27286363,
            -1.33283365, -1.36281872],
           [-1.42278874, -1.39280367, -1.45277369,  ..., -1.30284870,
            -1.30284870, -1.37781119]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0733 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 60, vnnlib ID: 60 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-13.75205898, -10.95473385, -15.05265713, -14.31469154, -16.47543526,
         -15.42162323, -16.59076691, -16.32046509, -12.06099701, -12.79094601]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [842]; unstable size 842; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 125, 1, 842] with unstable size 124 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 842] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 842] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [124]; unstable size 124; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 124] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 124] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.70171309,  2.55571365,  1.94688368,  4.01660681,  2.85764217,
          4.14926767,  3.74387670, -0.07238436,  1.06150913]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-13.75205898, -10.95473385, -15.05265713, -14.31469154, -16.47543526,
         -15.42162323, -16.59076691, -16.32046509, -12.06099701, -12.79094601]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.92it/s]100%|██████████| 1/1 [00:00<00:00,  8.91it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-13.24346066, -10.83120537, -14.41449451, -13.75822830, -15.91536617,
          -14.81918240, -15.97666645, -15.75282669, -11.26206684, -12.42083168]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.43086147]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1148 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 22.353851318359375
alpha/beta optimization time: 1.132871150970459
initial alpha-crown bounds: tensor([[ 1.73520660,  2.60585356,  1.99403715,  4.06510210,  2.91426325,
          4.19391012,  3.79336429, -0.03199387,  1.08410871]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.031993865966796875
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.70325589179993
Verifying property 0 with 1 instances.
##### Instance 60 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.7352066040039062.

Properties batch 1, size 1
Remaining timeout: 198.55047369003296
Verifying property 1 with 1 instances.
##### Instance 60 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.60585355758667.

Properties batch 2, size 1
Remaining timeout: 198.45103073120117
Verifying property 2 with 1 instances.
##### Instance 60 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.99403715133667.

Properties batch 3, size 1
Remaining timeout: 198.34806036949158
Verifying property 3 with 1 instances.
##### Instance 60 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.0651021003723145.

Properties batch 4, size 1
Remaining timeout: 198.2472140789032
Verifying property 4 with 1 instances.
##### Instance 60 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.9142632484436035.

Properties batch 5, size 1
Remaining timeout: 198.15110754966736
Verifying property 5 with 1 instances.
##### Instance 60 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.193910121917725.

Properties batch 6, size 1
Remaining timeout: 198.05507111549377
Verifying property 6 with 1 instances.
##### Instance 60 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.7933642864227295.

Properties batch 7, size 1
Remaining timeout: 197.95884227752686
Verifying property 7 with 1 instances.
##### Instance 60 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.03199387]], device='cuda:0') need to verify.
Model prediction is: tensor([-13.75205898, -10.95473385, -15.05265713, -14.31469154, -16.47543526,
        -15.42162323, -16.59076691, -16.32046509, -12.06099701, -12.79094601],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.03199387]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 842
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 121
Node /15 input 0: size torch.Size([100]) unstable 11
-----------------
# of unstable neurons: 974
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 82] 
split level 1: [/input-12, 35] 
split level 2: [/input-12, 11] 
split level 3: [/input-12, 54] 
split level 4: [/input-12, 51] 
split level 5: [/input-12, 37] 
split level 6: [/input-8, 817] 
split level 7: [/input-8, 865] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.2438507080078125e-05
Time: prepare 0.0031    bound 0.0040    transfer 0.0014    finalize 0.0017    func 0.0103    
Accumulated time: func 0.0103    prepare 0.0035    bound 0.0040    transfer 0.0014    finalize 0.0017    
all_split False
Length of domains: 0
Time: pickout 0.0004    decision 0.0233    set_bounds 0.0172    solve 0.0103    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0233    set_bounds 0.0172    solve 0.0103    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.055364131927490234


Properties batch 8, size 1
Remaining timeout: 197.74577736854553
Verifying property 8 with 1 instances.
##### Instance 60 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.0841087102890015.
Result: safe in 2.3584 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 61, vnnlib ID: 61 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.10208607, -11.41786957, -13.13540363, -14.61515522, -12.72880554,
         -15.42352676, -14.81626129, -14.02141857, -10.58820438, -11.90863419]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [689]; unstable size 689; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 287, 1, 689] with unstable size 286 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 689] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 689] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [286]; unstable size 286; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 286] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 286] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.29984093, -0.42210960,  0.77767426, -0.92977929,  1.27496111,
          0.91095698, -0.04363668, -2.54635882, -1.79969788]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.10208607, -11.41786957, -13.13540363, -14.61515522, -12.72880554,
         -15.42352676, -14.81626129, -14.02141857, -10.58820438, -11.90863419]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-12.10208607, -11.41786957, -13.13540268, -14.61515522, -12.72880459,
          -15.42352581, -14.81626034, -14.02141666, -10.58820248, -11.90863228],
         [-12.10208607, -11.41786957, -13.13540268, -14.61515522, -12.72880459,
          -15.42352581, -14.81626034, -14.02141666, -10.58820248, -11.90863228]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.68421650,  1.03331661,  0.62671852,  1.91933060, -1.51388359,
          -0.19345379]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0916 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 62, vnnlib ID: 62 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.22134018, -15.56860352, -14.70451355, -17.13485336, -15.30204296,
         -19.28796387, -19.05625916, -17.42904091,  -7.39751339, -15.77822590]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [638]; unstable size 638; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 143, 1, 638] with unstable size 142 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 638] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 638] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [142]; unstable size 142; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 142] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 142] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.70733380,  6.82938242,  6.02555180,  8.45529366,  6.40188885,
         10.40295410, 10.22137833,  8.17284584,  6.93548441]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0537 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 63, vnnlib ID: 63 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.89003658, -14.52937984,  -8.65657139, -11.09509850,  -9.84154129,
         -10.49578381, -11.10558414, -12.61307526, -14.24301243, -14.45481777]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [532]; unstable size 532; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 158, 1, 532] with unstable size 157 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 9, 1, 532] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 532] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [157]; unstable size 157; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 9, 1, 157] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 157] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.66265583,  2.43688107, -3.43360949, -0.71080714, -2.08376074,
         -1.43809283,  0.69530237,  2.01353717,  2.55464029]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.89003658, -14.52937984,  -8.65657139, -11.09509850,  -9.84154129,
         -10.49578381, -11.10558414, -12.61307526, -14.24301243, -14.45481777]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-12.89003754, -14.52938080,  -8.65657139, -11.09509850,  -9.84154224,
          -10.49578571, -11.10558605, -12.61307430, -14.24301243, -14.45481777],
         [-12.89003754, -14.52938080,  -8.65657139, -11.09509850,  -9.84154224,
          -10.49578571, -11.10558605, -12.61307430, -14.24301243, -14.45481777]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-2.44901466, -0.01048756, -1.26404381, -0.60980034]]],
       device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]],


         [[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]],


         [[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]],


         [[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]]]],
       device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0764 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 64, vnnlib ID: 64 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -6.45442581, -10.84073353,  -2.11443281,  -5.11572742,  -2.45199776,
          -5.34400368,  -5.73184919,  -6.24624300,  -8.44986820, -10.21909809]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [540]; unstable size 540; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 217, 1, 540] with unstable size 216 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 540] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 540] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [216]; unstable size 216; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 216] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 216] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.34607959,  7.68123960,  1.94801557, -0.41767788,  2.08386660,
          2.53074312,  2.96769238,  4.98291540,  6.93700266]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.45442581, -10.84073353,  -2.11443281,  -5.11572742,  -2.45199776,
          -5.34400368,  -5.73184919,  -6.24624300,  -8.44986820, -10.21909809]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.50799370, -10.83770275,  -2.31181240,  -5.03916931,  -2.23600197,
           -5.28817987,  -5.62893534,  -6.05531979,  -8.43694019, -10.15128231]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.07581043]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0058 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0752 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 65, vnnlib ID: 65 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.03724480, -11.18434811,  -9.06159973,  -6.82672215,  -8.31060886,
          -7.42542219,  -7.49326038,  -8.39577389,  -8.11735439,  -9.31811810]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [540]; unstable size 540; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 166, 1, 540] with unstable size 165 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 540] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 540] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [165]; unstable size 165; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 165] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 165] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.06153670,  2.03039980,  0.34189314, -1.49903512, -0.37442601,
         -0.95892560, -0.33254981, -0.89728749,  0.12400293]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.03724480, -11.18434811,  -9.06159973,  -6.82672215,  -8.31060886,
          -7.42542219,  -7.49326038,  -8.39577389,  -8.11735439,  -9.31811810]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.03724575, -11.18434811,  -9.06159973,  -6.82672262,  -8.31061077,
           -7.42542219,  -7.49326038,  -8.39577389,  -8.11735439,  -9.31811714],
         [ -9.03724575, -11.18434811,  -9.06159973,  -6.82672262,  -8.31061077,
           -7.42542219,  -7.49326038,  -8.39577389,  -8.11735439,  -9.31811714]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.66653776,  0.81735039, -0.06783819,  0.90251350,  0.62409401]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]],


         [[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]],


         [[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]],


         [[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]],


         [[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0800 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 66, vnnlib ID: 66 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.38867235, -7.83663368, -1.97538805, -3.76285219, -1.67582381,
         -3.71006250, -2.32488132, -4.60400915, -6.09743786, -7.12869167]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [547]; unstable size 547; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 271, 1, 547] with unstable size 270 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 547] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 547] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [270]; unstable size 270; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 270] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 270] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.79902196,  3.61575794, -1.01848125,  0.80863690,  0.56699324,
         -0.88418818,  1.54361439,  1.63250875,  3.27348614]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.38867235, -7.83663368, -1.97538805, -3.76285219, -1.67582381,
         -3.71006250, -2.32488132, -4.60400915, -6.09743786, -7.12869167]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.28951979, -7.94430733, -1.78465533, -3.82200527, -2.04371023,
          -3.80613995, -2.29286313, -4.79971743, -6.22282410, -7.35304642],
         [-4.28951979, -7.94430733, -1.78465533, -3.82200527, -2.04371023,
          -3.80613995, -2.29286313, -4.79971743, -6.22282410, -7.35304642]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.25905490,  0.24915290]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0059 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0698 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 67, vnnlib ID: 67 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.84932995, -17.33446884,  -8.64849091, -12.04424667,  -9.06044197,
         -11.72052956, -11.48574638, -12.39857960, -14.52266598, -15.66392040]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [629]; unstable size 629; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 205, 1, 629] with unstable size 204 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 629] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 629] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [204]; unstable size 204; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 204] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 204] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.34933949,  7.33656406,  2.46383572, -0.40431595,  2.07216501,
          1.93970644,  2.30366516,  4.55638123,  5.68612194]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.84932995, -17.33446884,  -8.64849091, -12.04424667,  -9.06044197,
         -11.72052956, -11.48574638, -12.39857960, -14.52266598, -15.66392040]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-13.19249630, -17.56005859,  -9.06513023, -12.28880787,  -9.06449413,
          -11.96904278, -11.70427704, -12.37436962, -14.73856831, -15.87618923]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.00063610]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0089 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0623 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 68, vnnlib ID: 68 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.69871712, -20.69267273, -15.76616573, -14.43220711, -12.67657566,
         -14.10208035, -15.81092930,  -9.57836342, -21.12655640, -18.97427750]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [565]; unstable size 565; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 220, 1, 565] with unstable size 219 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 565] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 565] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [219]; unstable size 219; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 219] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 219] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.13234711, 8.93222618, 4.50618649, 3.55561543, 1.94738889, 3.30281425,
         4.49555826, 9.35066795, 7.40655804]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0680 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 69, vnnlib ID: 69 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.06598377, -12.28655052, -10.90278053, -11.53813744,  -9.47263813,
         -13.18623543, -12.00863743, -11.38340187,  -8.27437782, -11.53199673]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [870]; unstable size 870; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 185, 1, 870] with unstable size 184 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 870] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 870] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [184]; unstable size 184; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 184] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 184] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.42442572,  2.45793104,  1.12414598,  1.64930105, -0.25776535,
          3.05331540,  2.07846904,  1.21149325,  1.63006783]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.06598377, -12.28655052, -10.90278053, -11.53813744,  -9.47263813,
         -13.18623543, -12.00863743, -11.38340187,  -8.27437782, -11.53199673]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.06598473, -12.28655148, -10.90278149, -11.53813839,  -9.47263718,
          -13.18623447, -12.00863838, -11.38340282,  -8.27437973, -11.53199673],
         [ -8.06598473, -12.28655148, -10.90278149, -11.53813839,  -9.47263718,
          -13.18623447, -12.00863838, -11.38340282,  -8.27437973, -11.53199673]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.20839500,  1.19825745]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.80476213,  1.80476213,  1.80476213,  ...,  1.78888917,
             1.78888917,  1.78888917],
           [ 1.80476213,  1.80476213,  1.80476213,  ...,  1.78888917,
             1.78888917,  1.78888917],
           [ 1.80476213,  1.80476213,  1.80476213,  ...,  1.78888917,
             1.78888917,  1.78888917],
           ...,
           [-0.29047608, -0.46507925, -0.11587292,  ...,  0.13809532,
             0.02698422, -0.13174593],
           [ 0.97936511,  0.94761908,  0.99523818,  ...,  0.67777783,
             0.63015878,  0.67777783],
           [ 1.31269872,  1.29682565,  1.26507962,  ..., -0.09999990,
             0.01111121,  0.02698422]],

          [[ 1.86795521,  1.86795521,  1.86795521,  ...,  1.78743994,
             1.78743994,  1.78743994],
           [ 1.86795521,  1.86795521,  1.86795521,  ...,  1.78743994,
             1.78743994,  1.78743994],
           [ 1.86795521,  1.86795521,  1.86795521,  ...,  1.78743994,
             1.78743994,  1.78743994],
           ...,
           [-0.27375188, -0.46698871, -0.12882435,  ..., -0.27375188,
            -0.32206106, -0.53140092],
           [ 0.95008057,  0.88566834,  0.91787446,  ...,  0.12882459,
             0.12882459,  0.11272153],
           [ 1.20772982,  1.17552364,  1.14331758,  ..., -0.40257636,
            -0.25764883, -0.30595800]],

          [[ 1.87556267,  1.87556267,  1.87556267,  ...,  1.81559265,
             1.81559265,  1.81559265],
           [ 1.87556267,  1.87556267,  1.87556267,  ...,  1.81559265,
             1.81559265,  1.81559265],
           [ 1.87556267,  1.87556267,  1.87556267,  ...,  1.81559265,
             1.81559265,  1.81559265],
           ...,
           [-0.26836565, -0.44827583, -0.11844061,  ..., -0.64317840,
            -0.68815589, -0.85307342],
           [ 0.82608712,  0.79610211,  0.82608712,  ..., -0.46326834,
            -0.44827583, -0.44827583],
           [ 1.09595215,  1.06596720,  1.03598225,  ..., -0.73313338,
            -0.61319339, -0.65817088]]],


         [[[ 1.80476213,  1.80476213,  1.80476213,  ...,  1.78888917,
             1.78888917,  1.78888917],
           [ 1.80476213,  1.80476213,  1.80476213,  ...,  1.78888917,
             1.78888917,  1.78888917],
           [ 1.80476213,  1.80476213,  1.80476213,  ...,  1.78888917,
             1.78888917,  1.78888917],
           ...,
           [-0.29047608, -0.46507925, -0.11587292,  ...,  0.13809532,
             0.02698422, -0.13174593],
           [ 0.97936511,  0.94761908,  0.99523818,  ...,  0.67777783,
             0.63015878,  0.67777783],
           [ 1.31269872,  1.29682565,  1.26507962,  ..., -0.09999990,
             0.01111121,  0.02698422]],

          [[ 1.86795521,  1.86795521,  1.86795521,  ...,  1.78743994,
             1.78743994,  1.78743994],
           [ 1.86795521,  1.86795521,  1.86795521,  ...,  1.78743994,
             1.78743994,  1.78743994],
           [ 1.86795521,  1.86795521,  1.86795521,  ...,  1.78743994,
             1.78743994,  1.78743994],
           ...,
           [-0.27375188, -0.46698871, -0.12882435,  ..., -0.27375188,
            -0.32206106, -0.53140092],
           [ 0.95008057,  0.88566834,  0.91787446,  ...,  0.12882459,
             0.12882459,  0.11272153],
           [ 1.20772982,  1.17552364,  1.14331758,  ..., -0.40257636,
            -0.25764883, -0.30595800]],

          [[ 1.87556267,  1.87556267,  1.87556267,  ...,  1.81559265,
             1.81559265,  1.81559265],
           [ 1.87556267,  1.87556267,  1.87556267,  ...,  1.81559265,
             1.81559265,  1.81559265],
           [ 1.87556267,  1.87556267,  1.87556267,  ...,  1.81559265,
             1.81559265,  1.81559265],
           ...,
           [-0.26836565, -0.44827583, -0.11844061,  ..., -0.64317840,
            -0.68815589, -0.85307342],
           [ 0.82608712,  0.79610211,  0.82608712,  ..., -0.46326834,
            -0.44827583, -0.44827583],
           [ 1.09595215,  1.06596720,  1.03598225,  ..., -0.73313338,
            -0.61319339, -0.65817088]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0514 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 70, vnnlib ID: 70 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.38531876,  -9.15226841,  -4.51170063,  -6.71956348,  -3.59781837,
          -7.57347631,  -2.96594071,  -8.17208290,  -9.44402599, -10.74759960]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [479]; unstable size 479; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 181, 1, 479] with unstable size 180 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 479] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 479] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [180]; unstable size 180; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 180] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 180] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.27840686,  4.92119694,  0.44460011,  2.50914288, -0.39846015,
          3.07961321,  3.62197232,  4.85315371,  6.55421734]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.38531876,  -9.15226841,  -4.51170063,  -6.71956348,  -3.59781837,
          -7.57347631,  -2.96594071,  -8.17208290,  -9.44402599, -10.74759960]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.95it/s]100%|██████████| 1/1 [00:00<00:00,  8.94it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.24103546,  -9.04660034,  -4.27138662,  -6.51826477,  -3.25499344,
           -7.24183655,  -3.20547986,  -7.74103117,  -9.34854984, -10.61530590]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.04951358]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1145 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 29.3553466796875
alpha/beta optimization time: 1.1387481689453125
initial alpha-crown bounds: tensor([[ 3.32722807,  4.96577835,  0.48747396,  2.55623007, -0.35164094,
          3.13634491,  3.69880366,  4.92325544,  6.61187315]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.3516409397125244
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.68030714988708
Verifying property 0 with 1 instances.
##### Instance 70 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.32722806930542.

Properties batch 1, size 1
Remaining timeout: 198.53042483329773
Verifying property 1 with 1 instances.
##### Instance 70 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.965778350830078.

Properties batch 2, size 1
Remaining timeout: 198.4161024093628
Verifying property 2 with 1 instances.
##### Instance 70 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.4874739646911621.

Properties batch 3, size 1
Remaining timeout: 198.31587934494019
Verifying property 3 with 1 instances.
##### Instance 70 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.556230068206787.

Properties batch 4, size 1
Remaining timeout: 198.22091007232666
Verifying property 4 with 1 instances.
##### Instance 70 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.35164094]], device='cuda:0') need to verify.
Model prediction is: tensor([ -7.38531876,  -9.15226841,  -4.51170063,  -6.71956348,  -3.59781837,
         -7.57347631,  -2.96594071,  -8.17208290,  -9.44402599, -10.74759960],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.35164094]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 479
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 180
Node /15 input 0: size torch.Size([100]) unstable 14
-----------------
# of unstable neurons: 673
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 51] 
split level 1: [/input-12, 11] 
split level 2: [/input-12, 45] 
split level 3: [/input-12, 46] 
split level 4: [/input-12, 26] 
split level 5: [/input-12, 37] 
split level 6: [/input-12, 33] 
split level 7: [/input-8, 101] 
pruning_in_iteration open status: True
ratio of positive domain = 192 / 256 = 0.75
pruning-in-iteration extra time: 0.007466793060302734
Time: prepare 0.0031    bound 0.1199    transfer 0.0012    finalize 0.0017    func 0.1260    
Accumulated time: func 0.1260    prepare 0.0035    bound 0.1199    transfer 0.0012    finalize 0.0017    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14618 (8), -0.14253 (8), -0.13945 (8), -0.13572 (8), -0.12755 (8), -0.12351 (8), -0.12004 (8), -0.11880 (8), -0.11640 (8), -0.11465 (8), -0.11412 (8), -0.10877 (8), -0.10664 (8), -0.10537 (8), -0.10348 (8), -0.10120 (8), -0.10111 (8), -0.09954 (8), -0.09920 (8), -0.09525 (8), 
Length of domains: 64
Time: pickout 0.0004    decision 0.0227    set_bounds 0.0172    solve 0.1261    add 0.0051    
Accumulated time: pickout 0.0004    decision 0.0227    set_bounds 0.0172    solve 0.1261    add 0.0051    
Current (lb-rhs): -0.14618492126464844
64 domains visited
Cumulative time: 0.17554950714111328

BaB round 2
batch: 64
splitting decisions: 
split level 0: [/input-8, 100] [/input-8, 100] [/input-8, 100] [/input-8, 100] [/input-8, 100] [/input-8, 100] [/input-8, 100] [/input-8, 100] [/input-8, 100] [/input-8, 100] 
split level 1: [/input-8, 614] [/input-8, 613] [/input-8, 859] [/input-8, 613] [/input-8, 614] [/input-8, 613] [/input-8, 859] [/input-8, 613] [/input-8, 614] [/input-8, 604] 
pruning_in_iteration open status: False
ratio of positive domain = 25 / 256 = 0.09765625
pruning-in-iteration extra time: 6.699562072753906e-05
Time: prepare 0.0048    bound 0.0923    transfer 0.0007    finalize 0.0014    func 0.0994    
Accumulated time: func 0.2254    prepare 0.0085    bound 0.2122    transfer 0.0020    finalize 0.0032    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.13257 (10), -0.12871 (10), -0.12358 (10), -0.12188 (10), -0.12149 (10), -0.11970 (10), -0.11840 (10), -0.11789 (10), -0.11578 (10), -0.11489 (10), -0.11478 (10), -0.11392 (10), -0.11183 (10), -0.11149 (10), -0.11074 (10), -0.11054 (10), -0.10873 (10), -0.10688 (10), -0.10571 (10), -0.10550 (10), 
Length of domains: 228
Time: pickout 0.0015    decision 0.0139    set_bounds 0.0067    solve 0.0994    add 0.0018    
Accumulated time: pickout 0.0019    decision 0.0366    set_bounds 0.0239    solve 0.2255    add 0.0069    
Current (lb-rhs): -0.1325688362121582
292 domains visited
Cumulative time: 0.2992556095123291

BaB round 3
batch: 228
splitting decisions: 
split level 0: [/input-8, 106] [/input-8, 614] [/input-8, 106] [/input-8, 102] [/input-8, 604] [/input-8, 614] [/input-8, 859] [/input-8, 604] [/input-8, 614] [/input-8, 614] 
pruning_in_iteration open status: False
ratio of positive domain = 39 / 456 = 0.08552631578947367
pruning-in-iteration extra time: 5.221366882324219e-05
Time: prepare 0.0087    bound 0.0993    transfer 0.0014    finalize 0.0026    func 0.1121    
Accumulated time: func 0.3374    prepare 0.0174    bound 0.3115    transfer 0.0034    finalize 0.0057    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12370 (11), -0.12283 (11), -0.12030 (11), -0.11863 (11), -0.11715 (11), -0.11352 (11), -0.11330 (11), -0.11223 (11), -0.11148 (11), -0.11103 (11), -0.10915 (11), -0.10915 (11), -0.10894 (11), -0.10861 (11), -0.10834 (11), -0.10786 (11), -0.10782 (11), -0.10643 (11), -0.10591 (11), -0.10559 (11), 
Length of domains: 416
Time: pickout 0.0028    decision 0.0235    set_bounds 0.0095    solve 0.1122    add 0.0022    
Accumulated time: pickout 0.0047    decision 0.0601    set_bounds 0.0335    solve 0.3376    add 0.0092    
Current (lb-rhs): -0.12370157241821289
708 domains visited
Cumulative time: 0.4499781131744385

BaB round 4
batch: 416
splitting decisions: 
split level 0: [/input-8, 102] [/input-8, 604] [/input-8, 614] [/input-8, 613] [/input-8, 614] [/input-8, 102] [/input-8, 820] [/input-8, 102] [/input-8, 613] [/input-8, 106] 
pruning_in_iteration open status: False
ratio of positive domain = 84 / 832 = 0.10096153846153844
pruning-in-iteration extra time: 9.822845458984375e-05
Time: prepare 0.0158    bound 0.1011    transfer 0.0051    finalize 0.0050    func 0.1271    
Accumulated time: func 0.4645    prepare 0.0334    bound 0.4126    transfer 0.0084    finalize 0.0108    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11773 (12), -0.11704 (12), -0.11403 (12), -0.11395 (12), -0.11247 (12), -0.11237 (12), -0.11081 (12), -0.10855 (12), -0.10830 (12), -0.10787 (12), -0.10760 (12), -0.10630 (12), -0.10536 (12), -0.10433 (12), -0.10421 (12), -0.10382 (12), -0.10294 (12), -0.10280 (12), -0.10274 (12), -0.10227 (12), 
Length of domains: 740
Time: pickout 0.0047    decision 0.0335    set_bounds 0.0174    solve 0.1272    add 0.0050    
Accumulated time: pickout 0.0094    decision 0.0936    set_bounds 0.0509    solve 0.4649    add 0.0142    
Current (lb-rhs): -0.11773276329040527
1448 domains visited
Cumulative time: 0.6389355659484863

BaB round 5
batch: 740
splitting decisions: 
split level 0: [/input-8, 613] [/input-8, 859] [/input-8, 102] [/input-8, 859] [/input-8, 859] [/input-8, 613] [/input-8, 614] [/input-8, 613] [/input-8, 820] [/input-8, 102] 
pruning_in_iteration open status: False
ratio of positive domain = 244 / 1480 = 0.16486486486486485
pruning-in-iteration extra time: 7.843971252441406e-05
Time: prepare 0.0280    bound 0.1132    transfer 0.0080    finalize 0.0070    func 0.1562    
Accumulated time: func 0.6207    prepare 0.0616    bound 0.5258    transfer 0.0164    finalize 0.0178    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11238 (13), -0.11166 (13), -0.10949 (13), -0.10877 (13), -0.10860 (13), -0.10834 (13), -0.10691 (13), -0.10668 (13), -0.10571 (13), -0.10540 (13), -0.10515 (13), -0.10399 (13), -0.10350 (13), -0.10295 (13), -0.10286 (13), -0.10250 (13), -0.10217 (13), -0.10059 (13), -0.10003 (13), -0.09998 (13), 
Length of domains: 1225
Time: pickout 0.0107    decision 0.0517    set_bounds 0.0303    solve 0.1565    add 0.0095    
Accumulated time: pickout 0.0202    decision 0.1453    set_bounds 0.0812    solve 0.6213    add 0.0237    
Current (lb-rhs): -0.11237645149230957
2673 domains visited
Cumulative time: 0.8994336128234863

BaB round 6
batch: 1225
splitting decisions: 
split level 0: [/input-8, 820] [/input-8, 820] [/input-8, 820] [/input-8, 820] [/input-8, 820] [/input-8, 820] [/input-8, 106] [/input-8, 820] [/input-8, 820] [/input-8, 820] 
pruning_in_iteration open status: False
ratio of positive domain = 389 / 2450 = 0.15877551020408165
pruning-in-iteration extra time: 6.556510925292969e-05
Time: prepare 0.0462    bound 0.1394    transfer 0.0105    finalize 0.0104    func 0.2067    
Accumulated time: func 0.8274    prepare 0.1080    bound 0.6652    transfer 0.0269    finalize 0.0282    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.10616 (14), -0.10571 (14), -0.10388 (14), -0.10332 (14), -0.10295 (14), -0.10285 (14), -0.10194 (14), -0.10156 (14), -0.10125 (14), -0.10101 (14), -0.10014 (14), -0.10010 (14), -0.10000 (14), -0.09961 (14), -0.09909 (14), -0.09850 (14), -0.09848 (14), -0.09837 (14), -0.09833 (14), -0.09826 (14), 
Length of domains: 2037
Time: pickout 0.0144    decision 0.0772    set_bounds 0.0514    solve 0.2071    add 0.0150    
Accumulated time: pickout 0.0346    decision 0.2225    set_bounds 0.1326    solve 0.8284    add 0.0387    
Current (lb-rhs): -0.10616183280944824
4710 domains visited
Cumulative time: 1.2677412033081055

BaB round 7
batch: 2037
splitting decisions: 
split level 0: [/input-8, 290] [/input-8, 821] [/input-8, 821] [/input-8, 821] [/input-8, 106] [/input-8, 821] [/input-8, 821] [/input-8, 859] [/input-8, 604] [/input-8, 821] 
pruning_in_iteration open status: False
ratio of positive domain = 655 / 4074 = 0.1607756504663721
pruning-in-iteration extra time: 5.698204040527344e-05
Time: prepare 0.0764    bound 0.2023    transfer 0.0122    finalize 0.0179    func 0.3090    
Accumulated time: func 1.1364    prepare 0.1846    bound 0.8675    transfer 0.0392    finalize 0.0461    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.10448 (15), -0.10400 (15), -0.10207 (15), -0.10131 (15), -0.10041 (15), -0.10022 (15), -0.09972 (15), -0.09954 (15), -0.09846 (15), -0.09828 (15), -0.09818 (15), -0.09758 (15), -0.09660 (15), -0.09659 (15), -0.09653 (15), -0.09643 (15), -0.09584 (15), -0.09507 (15), -0.09440 (15), -0.09437 (15), 
Length of domains: 3379
Time: pickout 0.0236    decision 0.2727    set_bounds 0.0824    solve 0.3099    add 0.0165    
Accumulated time: pickout 0.0582    decision 0.4952    set_bounds 0.2151    solve 1.1384    add 0.0551    
Current (lb-rhs): -0.10448145866394043
8089 domains visited
Cumulative time: 1.9796254634857178

BaB round 8
batch: 3379
splitting decisions: 
split level 0: [/input-8, 1827] [/input-8, 1827] [/input-8, 106] [/input-8, 859] [/input-8, 867] [/input-8, 1827] [/input-8, 106] [/input-8, 1827] [/input-8, 106] [/input-8, 426] 
pruning_in_iteration open status: True
ratio of positive domain = 1509 / 6758 = 0.2232909144717372
pruning-in-iteration extra time: 0.0018341541290283203
Time: prepare 0.1302    bound 0.3072    transfer 0.0377    finalize 0.0327    func 0.5087    
Accumulated time: func 1.6452    prepare 0.3151    bound 1.1747    transfer 0.0769    finalize 0.0788    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.10149 (16), -0.10106 (16), -0.09909 (16), -0.09835 (16), -0.09748 (16), -0.09681 (16), -0.09611 (16), -0.09603 (16), -0.09551 (16), -0.09485 (16), -0.09382 (16), -0.09354 (16), -0.09307 (16), -0.09285 (16), -0.09269 (16), -0.09195 (16), -0.09176 (16), -0.09092 (16), -0.09059 (16), -0.09039 (16), 
Length of domains: 5249
Time: pickout 0.0407    decision 0.1942    set_bounds 0.2645    solve 0.5101    add 0.0223    
Accumulated time: pickout 0.0988    decision 0.6894    set_bounds 0.4795    solve 1.6485    add 0.0774    
Current (lb-rhs): -0.1014871597290039
13338 domains visited
Cumulative time: 3.0214381217956543

BaB round 9
batch: 4096
splitting decisions: 
split level 0: [/input-8, 426] [/input-8, 821] [/input-8, 1828] [/input-8, 1819] [/input-8, 1389] [/input-8, 867] [/input-8, 604] [/input-8, 801] [/input-8, 106] [/input-8, 859] 
pruning_in_iteration open status: True
ratio of positive domain = 1989 / 8192 = 0.2427978515625
pruning-in-iteration extra time: 0.0031349658966064453
Time: prepare 0.1581    bound 0.3473    transfer 0.0442    finalize 0.0408    func 0.5912    
Accumulated time: func 2.2363    prepare 0.4734    bound 1.5220    transfer 0.1211    finalize 0.1196    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.10149 (16), -0.10106 (16), -0.09909 (16), -0.09835 (16), -0.09681 (16), -0.09611 (16), -0.09551 (16), -0.09485 (17), -0.09485 (16), -0.09382 (16), -0.09307 (16), -0.09195 (16), -0.09176 (16), -0.09091 (17), -0.09039 (16), -0.09029 (17), -0.08947 (17), -0.08888 (16), -0.08888 (16), -0.08878 (16), 
Length of domains: 7356
Time: pickout 0.0547    decision 0.2297    set_bounds 0.3347    solve 0.5930    add 0.0293    
Accumulated time: pickout 0.1535    decision 0.9190    set_bounds 0.8142    solve 2.2414    add 0.1068    
Current (lb-rhs): -0.1014871597290039
19541 domains visited
current_vram/total_varm: 10.9GB/99.9GB, batch_size increase to 8192
Cumulative time: 4.27747106552124

BaB round 10
batch: 7356
splitting decisions: 
split level 0: [/input-8, 290] [/input-8, 801] [/input-8, 290] [/input-8, 426] [/input-8, 801] [/input-8, 821] [/input-8, 1828] [/input-8, 1389] [/input-8, 867] [/input-8, 1827] 
pruning_in_iteration open status: False
ratio of positive domain = 2901 / 14712 = 0.19718597063621535
pruning-in-iteration extra time: 9.34600830078125e-05
Time: prepare 0.2879    bound 0.6060    transfer 0.0827    finalize 0.0697    func 1.0472    
Accumulated time: func 3.2836    prepare 0.7617    bound 2.1280    transfer 0.2037    finalize 0.1892    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09841 (17), -0.09645 (17), -0.09473 (17), -0.09414 (17), -0.09334 (17), -0.09289 (17), -0.09220 (17), -0.09155 (17), -0.09061 (17), -0.09018 (17), -0.08952 (17), -0.08935 (17), -0.08931 (17), -0.08851 (18), -0.08821 (18), -0.08818 (17), -0.08797 (17), -0.08745 (18), -0.08719 (17), -0.08713 (18), 
Length of domains: 11728
Time: pickout 0.0959    decision 0.5792    set_bounds 0.4620    solve 1.0500    add 0.0720    
Accumulated time: pickout 0.2494    decision 1.4982    set_bounds 1.2762    solve 3.2915    add 0.1788    
Current (lb-rhs): -0.09841060638427734
31269 domains visited
Cumulative time: 6.561291694641113

BaB round 11
batch: 8192
splitting decisions: 
split level 0: [/input-8, 801] [/input-8, 102] [/input-8, 1827] [/input-8, 1828] [/input-8, 821] [/input-8, 1828] [/input-8, 1828] [/input-8, 290] [/input-8, 106] [/input-8, 1828] 
pruning_in_iteration open status: False
ratio of positive domain = 2732 / 16384 = 0.166748046875
pruning-in-iteration extra time: 9.632110595703125e-05
Time: prepare 0.3251    bound 0.6718    transfer 0.0928    finalize 0.0806    func 1.1714    
Accumulated time: func 4.4549    prepare 1.0871    bound 2.7999    transfer 0.2966    finalize 0.2698    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09841 (17), -0.09645 (17), -0.09414 (17), -0.09334 (17), -0.09289 (17), -0.09220 (17), -0.09207 (18), -0.09061 (17), -0.09018 (17), -0.08931 (17), -0.08890 (18), -0.08851 (18), -0.08821 (18), -0.08797 (17), -0.08719 (17), -0.08713 (18), -0.08665 (18), -0.08622 (17), -0.08612 (17), -0.08598 (17), 
Length of domains: 17106
Time: pickout 0.1034    decision 0.6348    set_bounds 0.5230    solve 1.3890    add 0.0736    
Accumulated time: pickout 0.3529    decision 2.1330    set_bounds 1.7993    solve 4.6804    add 0.2524    
Current (lb-rhs): -0.09841060638427734
44839 domains visited
current_vram/total_varm: 22.6GB/99.9GB, batch_size increase to 16384
Cumulative time: 9.308130502700806

BaB round 12
batch: 16384
splitting decisions: 
split level 0: [/input-8, 1827] [/input-8, 426] [/input-8, 290] [/input-8, 1389] [/input-8, 1827] [/input-8, 106] [/input-8, 1827] [/input-8, 821] [/input-8, 106] [/input-8, 1828] 
pruning_in_iteration open status: False
ratio of positive domain = 5822 / 32768 = 0.17767333984375
pruning-in-iteration extra time: 0.00018739700317382812
Time: prepare 0.6463    bound 1.2922    transfer 0.1855    finalize 0.4183    func 2.5438    
Accumulated time: func 6.9987    prepare 1.7337    bound 4.0921    transfer 0.4821    finalize 0.6882    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09841 (17), -0.09645 (17), -0.09414 (17), -0.09334 (17), -0.09289 (17), -0.09220 (17), -0.09061 (17), -0.09018 (17), -0.08931 (17), -0.08845 (19), -0.08797 (17), -0.08719 (17), -0.08612 (17), -0.08598 (17), -0.08523 (19), -0.08515 (17), -0.08488 (17), -0.08487 (19), -0.08458 (19), -0.08443 (17), 
Length of domains: 27418
Time: pickout 0.2160    decision 1.8405    set_bounds 0.9438    solve 2.5497    add 0.1578    
Accumulated time: pickout 0.5689    decision 3.9735    set_bounds 2.7431    solve 7.2301    add 0.4103    
Current (lb-rhs): -0.09841060638427734
71535 domains visited
current_vram/total_varm: 32.5GB/99.9GB, batch_size increase to 32768
Cumulative time: 15.063777446746826

BaB round 13
batch: 27418
splitting decisions: 
split level 0: [/input-8, 604] [/input-8, 106] [/input-8, 604] [/input-8, 106] [/input-8, 1828] [/input-8, 106] [/input-8, 106] [/input-8, 604] [/input-8, 102] [/input-8, 1827] 
pruning_in_iteration open status: True
ratio of positive domain = 12909 / 54836 = 0.23541104383981326
pruning-in-iteration extra time: 0.0035474300384521484
Time: prepare 1.0901    bound 2.0212    transfer 0.3975    finalize 0.5819    func 4.0926    
Accumulated time: func 11.0913    prepare 2.8242    bound 6.1133    transfer 0.8795    finalize 1.2701    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09178 (18), -0.09102 (18), -0.09050 (18), -0.08979 (18), -0.08909 (18), -0.08738 (18), -0.08737 (18), -0.08698 (18), -0.08691 (18), -0.08621 (18), -0.08553 (18), -0.08540 (18), -0.08510 (18), -0.08499 (18), -0.08386 (18), -0.08346 (20), -0.08331 (18), -0.08261 (18), -0.08228 (18), -0.08221 (20), 
Length of domains: 41927
Time: pickout 0.3509    decision 2.7752    set_bounds 1.7631    solve 4.1020    add 0.1477    
Accumulated time: pickout 0.9197    decision 6.7487    set_bounds 4.5061    solve 11.3321    add 0.5580    
Current (lb-rhs): -0.0917823314666748
113462 domains visited
Cumulative time: 24.315462350845337

BaB round 14
batch: 32768
splitting decisions: 
split level 0: [/input-8, 801] [/input-8, 979] [/input-8, 1828] [/input-8, 106] [/input-8, 867] [/input-8, 801] [/input-8, 979] [/input-8, 106] [/input-8, 1828] [/input-8, 867] 
pruning_in_iteration open status: True
ratio of positive domain = 18984 / 65536 = 0.2896728515625
pruning-in-iteration extra time: 0.005461692810058594
Time: prepare 1.3135    bound 3.2785    transfer 0.3640    finalize 0.3657    func 5.3253    
Accumulated time: func 16.4166    prepare 4.1381    bound 9.3917    transfer 1.2435    finalize 1.6358    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09178 (18), -0.09050 (18), -0.08979 (18), -0.08738 (18), -0.08737 (18), -0.08737 (19), -0.08698 (18), -0.08621 (18), -0.08544 (19), -0.08540 (18), -0.08510 (18), -0.08331 (18), -0.08315 (19), -0.08261 (18), -0.08228 (18), -0.08186 (19), -0.08186 (18), -0.08167 (18), -0.08157 (18), -0.08122 (19), 
Length of domains: 55711
Time: pickout 0.4411    decision 3.6599    set_bounds 2.3239    solve 5.8220    add 0.1691    
Accumulated time: pickout 1.3609    decision 10.4086    set_bounds 6.8300    solve 17.1541    add 0.7271    
Current (lb-rhs): -0.0917823314666748
160014 domains visited
Cumulative time: 36.849628925323486

BaB round 15
batch: 32768
splitting decisions: 
split level 0: [/input-8, 801] [/input-8, 979] [/input-8, 426] [/input-8, 426] [/input-8, 979] [/input-8, 801] [/input-8, 106] [/input-8, 801] [/input-8, 801] [/input-8, 801] 
pruning_in_iteration open status: True
ratio of positive domain = 20262 / 65536 = 0.309173583984375
pruning-in-iteration extra time: 0.0053174495697021484
Time: prepare 1.3702    bound 3.2404    transfer 0.3674    finalize 0.9784    func 5.9593    
Accumulated time: func 22.3759    prepare 5.5087    bound 12.6322    transfer 1.6109    finalize 2.6142    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09178 (18), -0.09050 (18), -0.08979 (18), -0.08738 (18), -0.08737 (18), -0.08698 (18), -0.08621 (18), -0.08540 (18), -0.08510 (18), -0.08331 (18), -0.08261 (18), -0.08242 (20), -0.08228 (18), -0.08186 (18), -0.08167 (18), -0.08157 (18), -0.08093 (20), -0.08050 (20), -0.07976 (18), -0.07974 (18), 
Length of domains: 68217
Time: pickout 0.4657    decision 3.3587    set_bounds 2.5594    solve 5.9723    add 0.2357    
Accumulated time: pickout 1.8265    decision 13.7673    set_bounds 9.3894    solve 23.1264    add 0.9628    
Current (lb-rhs): -0.0917823314666748
205288 domains visited
Cumulative time: 49.58864712715149

BaB round 16
batch: 32768
splitting decisions: 
split level 0: [/input-8, 979] [/input-8, 1828] [/input-8, 1389] [/input-8, 1819] [/input-8, 114] [/input-8, 1389] [/input-8, 1819] [/input-8, 979] [/input-8, 114] [/input-8, 1819] 
pruning_in_iteration open status: True
ratio of positive domain = 26259 / 65536 = 0.4006805419921875
pruning-in-iteration extra time: 0.006220340728759766
Time: prepare 1.3919    bound 2.5168    transfer 0.3571    finalize 0.4388    func 4.7084    
Accumulated time: func 27.0842    prepare 6.9011    bound 15.1490    transfer 1.9681    finalize 3.0530    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09178 (18), -0.09050 (18), -0.08979 (18), -0.08738 (18), -0.08737 (18), -0.08698 (18), -0.08621 (18), -0.08540 (18), -0.08510 (18), -0.08331 (18), -0.08261 (18), -0.08228 (18), -0.08186 (18), -0.08167 (18), -0.08157 (18), -0.07976 (18), -0.07974 (18), -0.07943 (21), -0.07894 (18), -0.07891 (18), 
Length of domains: 74726
Time: pickout 0.4937    decision 3.6372    set_bounds 3.1032    solve 4.7252    add 0.1707    
Accumulated time: pickout 2.3202    decision 17.4045    set_bounds 12.4926    solve 27.8516    add 1.1335    
Current (lb-rhs): -0.0917823314666748
244565 domains visited
Cumulative time: 61.918641567230225

BaB round 17
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1819] [/input-8, 1299] [/input-8, 1389] [/input-8, 979] [/input-8, 988] [/input-8, 1819] [/input-8, 473] [/input-8, 596] [/input-8, 1007] [/input-8, 1007] 
pruning_in_iteration open status: True
ratio of positive domain = 24142 / 65536 = 0.368377685546875
pruning-in-iteration extra time: 0.005931854248046875
Time: prepare 1.4784    bound 2.5879    transfer 0.3686    finalize 1.1662    func 5.6042    
Accumulated time: func 32.6884    prepare 8.3801    bound 17.7369    transfer 2.3367    finalize 4.2193    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09178 (18), -0.09050 (18), -0.08979 (18), -0.08738 (18), -0.08737 (18), -0.08698 (18), -0.08621 (18), -0.08540 (18), -0.08510 (18), -0.08331 (18), -0.08261 (18), -0.08228 (18), -0.08186 (18), -0.08167 (18), -0.08157 (18), -0.07976 (18), -0.07974 (18), -0.07894 (18), -0.07891 (18), -0.07886 (21), 
Length of domains: 83352
Time: pickout 0.5223    decision 3.8206    set_bounds 2.5172    solve 5.6201    add 0.1450    
Accumulated time: pickout 2.8425    decision 21.2251    set_bounds 15.0098    solve 33.4717    add 1.2785    
Current (lb-rhs): -0.0917823314666748
285959 domains visited
Cumulative time: 74.74122190475464

BaB round 18
batch: 32768
splitting decisions: 
split level 0: [/input-8, 82] [/input-8, 82] [/input-8, 82] [/input-8, 82] [/input-8, 1007] [/input-8, 851] [/input-8, 1389] [/input-8, 82] [/input-8, 82] [/input-8, 1007] 
pruning_in_iteration open status: True
ratio of positive domain = 19657 / 65536 = 0.2999420166015625
pruning-in-iteration extra time: 0.006075143814086914
Time: prepare 1.4404    bound 2.7102    transfer 0.3701    finalize 1.3104    func 5.8386    
Accumulated time: func 38.5270    prepare 9.8209    bound 20.4471    transfer 2.7068    finalize 5.5296    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09178 (18), -0.09050 (18), -0.08979 (18), -0.08738 (18), -0.08737 (18), -0.08698 (18), -0.08621 (18), -0.08540 (18), -0.08510 (18), -0.08331 (18), -0.08261 (18), -0.08228 (18), -0.08186 (18), -0.08167 (18), -0.08157 (18), -0.07976 (18), -0.07974 (18), -0.07894 (18), -0.07891 (18), -0.07886 (21), 
Length of domains: 96463
Time: pickout 0.5263    decision 3.8599    set_bounds 2.5528    solve 5.8666    add 0.2086    
Accumulated time: pickout 3.3688    decision 25.0850    set_bounds 17.5627    solve 39.3383    add 1.4871    
Current (lb-rhs): -0.0917823314666748
331838 domains visited
Cumulative time: 88.100759267807

BaB round 19
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1007] [/input-8, 82] [/input-8, 1007] [/input-8, 988] [/input-8, 82] [/input-8, 1007] [/input-8, 82] [/input-8, 988] [/input-8, 1007] [/input-8, 988] 
pruning_in_iteration open status: True
ratio of positive domain = 21891 / 65536 = 0.3340301513671875
pruning-in-iteration extra time: 0.006322383880615234
Time: prepare 1.5175    bound 2.6319    transfer 0.3637    finalize 0.4687    func 4.9863    
Accumulated time: func 43.5133    prepare 11.3390    bound 23.0790    transfer 3.0705    finalize 5.9983    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09178 (18), -0.09050 (18), -0.08979 (18), -0.08738 (18), -0.08737 (18), -0.08698 (18), -0.08621 (18), -0.08540 (18), -0.08510 (18), -0.08331 (18), -0.08261 (18), -0.08228 (18), -0.08186 (18), -0.08167 (18), -0.08157 (18), -0.07976 (18), -0.07974 (18), -0.07894 (18), -0.07891 (18), -0.07886 (21), 
Length of domains: 107340
Time: pickout 0.6020    decision 4.3683    set_bounds 2.8606    solve 5.0071    add 0.2301    
Accumulated time: pickout 3.9708    decision 29.4533    set_bounds 20.4233    solve 44.3455    add 1.7172    
Current (lb-rhs): -0.0917823314666748
375483 domains visited
Cumulative time: 101.35765552520752

BaB round 20
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1389] [/input-8, 82] [/input-8, 1007] [/input-8, 1389] [/input-8, 1389] [/input-8, 1389] [/input-8, 1389] [/input-8, 1389] [/input-8, 1299] [/input-8, 1389] 
pruning_in_iteration open status: True
ratio of positive domain = 23488 / 65536 = 0.3583984375
pruning-in-iteration extra time: 0.006084442138671875
Time: prepare 2.5605    bound 2.5763    transfer 0.3693    finalize 0.4670    func 5.9783    
Accumulated time: func 49.4916    prepare 13.9000    bound 25.6553    transfer 3.4398    finalize 6.4653    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09178 (18), -0.09050 (18), -0.08979 (18), -0.08738 (18), -0.08737 (18), -0.08698 (18), -0.08621 (18), -0.08540 (18), -0.08510 (18), -0.08331 (18), -0.08261 (18), -0.08228 (18), -0.08186 (18), -0.08167 (18), -0.08157 (18), -0.07976 (18), -0.07974 (18), -0.07894 (18), -0.07891 (18), -0.07886 (21), 
Length of domains: 116620
Time: pickout 0.5561    decision 4.5236    set_bounds 2.7446    solve 5.9998    add 0.2394    
Accumulated time: pickout 4.5270    decision 33.9769    set_bounds 23.1679    solve 50.3453    add 1.9566    
Current (lb-rhs): -0.0917823314666748
417531 domains visited
Cumulative time: 115.63017082214355

BaB round 21
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1299] [/input-8, 1007] [/input-8, 1299] [/input-8, 1007] [/input-8, 1007] [/input-8, 867] [/input-8, 988] [/input-8, 1389] [/input-8, 1007] [/input-8, 1007] 
pruning_in_iteration open status: True
ratio of positive domain = 23175 / 65536 = 0.3536224365234375
pruning-in-iteration extra time: 0.006287336349487305
Time: prepare 1.4586    bound 2.5777    transfer 0.3706    finalize 0.4547    func 4.8673    
Accumulated time: func 54.3589    prepare 15.3593    bound 28.2329    transfer 3.8105    finalize 6.9200    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09178 (18), -0.09050 (18), -0.08979 (18), -0.08738 (18), -0.08737 (18), -0.08698 (18), -0.08621 (18), -0.08540 (18), -0.08510 (18), -0.08331 (18), -0.08261 (18), -0.08228 (18), -0.08186 (18), -0.08167 (18), -0.08157 (18), -0.07976 (18), -0.07974 (18), -0.07894 (18), -0.07891 (18), -0.07886 (21), 
Length of domains: 126213
Time: pickout 0.5633    decision 4.3146    set_bounds 2.9129    solve 4.8897    add 0.1591    
Accumulated time: pickout 5.0903    decision 38.2915    set_bounds 26.0808    solve 55.2350    add 2.1157    
Current (lb-rhs): -0.0917823314666748
459892 domains visited
Cumulative time: 128.68000626564026

BaB round 22
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1389] [/input-8, 1007] [/input-8, 1007] [/input-8, 988] [/input, 1368] [/input-8, 82] [/input-8, 82] [/input-8, 938] [/input-8, 82] [/input-8, 82] 
pruning_in_iteration open status: True
ratio of positive domain = 22921 / 65536 = 0.3497467041015625
pruning-in-iteration extra time: 0.006426572799682617
Time: prepare 1.4930    bound 2.5840    transfer 0.3680    finalize 0.4733    func 4.9240    
Accumulated time: func 59.2829    prepare 16.8528    bound 30.8170    transfer 4.1785    finalize 7.3933    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09178 (18), -0.09050 (18), -0.08979 (18), -0.08738 (18), -0.08737 (18), -0.08698 (18), -0.08621 (18), -0.08540 (18), -0.08510 (18), -0.08331 (18), -0.08261 (18), -0.08228 (18), -0.08186 (18), -0.08167 (18), -0.08157 (18), -0.07976 (18), -0.07974 (18), -0.07894 (18), -0.07891 (18), -0.07886 (21), 
Length of domains: 136060
Time: pickout 0.5734    decision 4.3599    set_bounds 3.0831    solve 4.9468    add 0.1759    
Accumulated time: pickout 5.6637    decision 42.6514    set_bounds 29.1639    solve 60.1818    add 2.2915    
Current (lb-rhs): -0.0917823314666748
502507 domains visited
Cumulative time: 142.03428030014038

BaB round 23
batch: 32768
splitting decisions: 
split level 0: [/input-8, 82] [/input-8, 1910] [/input-8, 1299] [/input-8, 1299] [/input-8, 82] [/input-8, 596] [/input-8, 82] [/input-8, 1007] [/input-8, 82] [/input-8, 938] 
pruning_in_iteration open status: True
ratio of positive domain = 23652 / 65536 = 0.36090087890625
pruning-in-iteration extra time: 0.006274700164794922
Time: prepare 1.5070    bound 2.5536    transfer 0.3664    finalize 0.4671    func 4.8996    
Accumulated time: func 64.1825    prepare 18.3603    bound 33.3706    transfer 4.5449    finalize 7.8604    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09178 (18), -0.09050 (18), -0.08979 (18), -0.08738 (18), -0.08737 (18), -0.08698 (18), -0.08621 (18), -0.08540 (18), -0.08510 (18), -0.08331 (18), -0.08261 (18), -0.08228 (18), -0.08186 (18), -0.08167 (18), -0.08157 (18), -0.07976 (18), -0.07974 (18), -0.07894 (18), -0.07891 (18), -0.07886 (21), 
Length of domains: 145176
Time: pickout 0.6008    decision 4.9062    set_bounds 3.1806    solve 4.9222    add 0.1949    
Accumulated time: pickout 6.2644    decision 47.5576    set_bounds 32.3446    solve 65.1040    add 2.4864    
Current (lb-rhs): -0.0917823314666748
544391 domains visited
Cumulative time: 156.18923664093018

BaB round 24
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1300] [/input-8, 1300] [/input-8, 1300] [/input-8, 1300] [/input-8, 1300] [/input, 1368] [/input-8, 1300] [/input, 1368] [/input-8, 1300] [/input-8, 931] 
pruning_in_iteration open status: True
ratio of positive domain = 24868 / 65536 = 0.37945556640625
pruning-in-iteration extra time: 0.006695270538330078
Time: prepare 1.5045    bound 2.5084    transfer 0.3752    finalize 0.4737    func 4.8691    
Accumulated time: func 69.0516    prepare 19.8652    bound 35.8790    transfer 4.9200    finalize 8.3342    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09178 (18), -0.09050 (18), -0.08979 (18), -0.08738 (18), -0.08737 (18), -0.08698 (18), -0.08621 (18), -0.08540 (18), -0.08510 (18), -0.08331 (18), -0.08261 (18), -0.08228 (18), -0.08186 (18), -0.08167 (18), -0.08157 (18), -0.07976 (18), -0.07974 (18), -0.07894 (18), -0.07891 (18), -0.07886 (21), 
Length of domains: 153076
Time: pickout 0.7227    decision 5.1306    set_bounds 3.3771    solve 4.8927    add 0.1592    
Accumulated time: pickout 6.9872    decision 52.6882    set_bounds 35.7217    solve 69.9966    add 2.6457    
Current (lb-rhs): -0.0917823314666748
585059 domains visited
Cumulative time: 170.6980001926422

BaB round 25
batch: 32768
splitting decisions: 
split level 0: [/input, 3543] [/input-8, 1300] [/input-8, 931] [/input-8, 1300] [/input-8, 1299] [/input-8, 988] [/input-8, 988] [/input-8, 988] [/input-8, 1299] [/input-8, 988] 
pruning_in_iteration open status: True
ratio of positive domain = 28538 / 65536 = 0.435455322265625
pruning-in-iteration extra time: 0.0063669681549072266
Time: prepare 1.5950    bound 2.3696    transfer 0.3688    finalize 0.4774    func 4.8188    
Accumulated time: func 73.8705    prepare 21.4608    bound 38.2486    transfer 5.2888    finalize 8.8116    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09178 (18), -0.09050 (18), -0.08979 (18), -0.08738 (18), -0.08737 (18), -0.08698 (18), -0.08621 (18), -0.08540 (18), -0.08510 (18), -0.08331 (18), -0.08261 (18), -0.08228 (18), -0.08186 (18), -0.08167 (18), -0.08157 (18), -0.07976 (18), -0.07974 (18), -0.07894 (18), -0.07891 (18), -0.07886 (21), 
Length of domains: 157306
Time: pickout 0.6175    decision 5.1813    set_bounds 3.4099    solve 4.8426    add 0.2035    
Accumulated time: pickout 7.6047    decision 57.8695    set_bounds 39.1316    solve 74.8393    add 2.8491    
Current (lb-rhs): -0.0917823314666748
622057 domains visited
Cumulative time: 185.19408798217773

BaB round 26
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1300] [/input-8, 1300] [/input-8, 1300] [/input-8, 1300] [/input-8, 1300] [/input-8, 473] [/input-8, 1300] [/input-8, 473] [/input-8, 1300] [/input-8, 1300] 
pruning_in_iteration open status: True
ratio of positive domain = 26062 / 65536 = 0.397674560546875
pruning-in-iteration extra time: 0.006333112716674805
Time: prepare 1.6313    bound 2.4600    transfer 0.3574    finalize 0.4857    func 4.9425    
Accumulated time: func 78.8129    prepare 23.0926    bound 40.7086    transfer 5.6463    finalize 9.2973    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09178 (18), -0.09050 (18), -0.08979 (18), -0.08738 (18), -0.08737 (18), -0.08698 (18), -0.08621 (18), -0.08540 (18), -0.08510 (18), -0.08331 (18), -0.08261 (18), -0.08228 (18), -0.08186 (18), -0.08167 (18), -0.08157 (18), -0.07976 (18), -0.07974 (18), -0.07894 (18), -0.07891 (18), -0.07886 (21), 
Length of domains: 164012
Time: pickout 0.6305    decision 4.8525    set_bounds 3.6410    solve 4.9694    add 0.2201    
Accumulated time: pickout 8.2351    decision 62.7220    set_bounds 42.7725    solve 79.8087    add 3.0693    
Current (lb-rhs): -0.0917823314666748
661531 domains visited
Time out!!!!!!!!
Result: unknown in 202.5285 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 71, vnnlib ID: 71 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-2.23181081, -6.13865471, -5.08255959, -5.81894684, -5.10377789,
         -6.43214750, -5.88667679, -5.84751606, -6.03846073, -6.48124504]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [600]; unstable size 600; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 134, 1, 600] with unstable size 133 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 600] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 600] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [133]; unstable size 133; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 133] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 133] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.68216181, 2.01670480, 2.51456118, 1.81788015, 2.98190999, 2.39753604,
         2.20995569, 2.77434301, 3.16959405]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0837 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 72, vnnlib ID: 72 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.04805279, -11.81328869,  -6.59518147,  -6.36475563,  -7.03116512,
          -6.60425329,  -7.20965433,  -8.31397438,  -8.97400188, -10.04430199]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [644]; unstable size 644; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 218, 1, 644] with unstable size 217 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 644] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 644] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [217]; unstable size 217; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 217] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 217] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.59573555,  3.84289026, -0.66203922, -0.35017097, -0.20632455,
          0.11054754,  0.49438119,  0.95489413,  1.85776663]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.04805279, -11.81328869,  -6.59518147,  -6.36475563,  -7.03116512,
          -6.60425329,  -7.20965433,  -8.31397438,  -8.97400188, -10.04430199]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.45969152, -12.50387001,  -6.75212955,  -7.02717876,  -7.47408676,
           -7.30156040,  -7.84784174,  -8.79535866,  -9.60956287, -10.84120369],
         [ -7.45969152, -12.50387001,  -6.75212955,  -7.02717876,  -7.47408676,
           -7.30156040,  -7.84784174,  -8.79535866,  -9.60956287, -10.84120369]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.43251276, -0.27504921,  0.44690800,  0.27438164]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0096 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0797 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 73, vnnlib ID: 73 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.91584206, -11.23733044,  -4.95584011,  -5.17609406,  -4.67090321,
          -5.68216658,  -2.94505668,  -7.65497255, -10.49558067, -10.30911922]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [530]; unstable size 530; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 286, 1, 530] with unstable size 285 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 530] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 530] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [285]; unstable size 285; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 285] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 285] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.01592350, 5.78018904, 0.67337537, 0.94682026, 0.40892124, 1.18366742,
         2.78911233, 4.93772984, 4.91414499]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0568 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 74, vnnlib ID: 74 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.75821781, -13.33421040,  -9.89368343,  -9.90017796,  -8.64980602,
          -9.78042221,  -9.99710751,  -4.75752258, -13.64687443, -11.43529987]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [557]; unstable size 557; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 217, 1, 557] with unstable size 216 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 557] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 557] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [216]; unstable size 216; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 216] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 216] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.65111065, 6.98895836, 3.93457913, 3.96870136, 2.90565801, 3.92689180,
         3.80601025, 7.22786188, 5.19847107]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0379 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 75, vnnlib ID: 75 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.29954243, -11.45261860, -13.34986973, -13.67515564, -13.40554333,
         -14.42231846, -13.27403164, -13.71299839, -10.82265949, -11.58751392]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [682]; unstable size 682; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 185, 1, 682] with unstable size 184 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 10, 1, 682] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 682] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [184]; unstable size 184; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 10, 1, 184] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 184] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.10945821,  1.98779678,  2.28032875,  1.90550256,  2.75677037,
          1.69960523,  1.94380987, -0.60779339, -0.09704113]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.29954243, -11.45261860, -13.34986973, -13.67515564, -13.40554333,
         -14.42231846, -13.27403164, -13.71299839, -10.82265949, -11.58751392]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.56808662, -11.42974663, -13.45270157, -13.65275669, -13.48646450,
          -14.33638859, -13.28952789, -13.75271511, -10.36225224, -11.49094582],
         [-10.56808662, -11.42974663, -13.45270157, -13.65275669, -13.48646450,
          -14.33638859, -13.28952789, -13.75271511, -10.36225224, -11.49094582]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.86166000, -0.20583439,  0.92285919]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0069 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0665 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 76, vnnlib ID: 76 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.85307121, -8.24333668, -2.96728778, -1.66786790, -3.85206652,
         -1.00410879, -4.09244967, -4.12650394, -7.75833988, -6.65997744]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [554]; unstable size 554; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 227, 1, 554] with unstable size 226 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 554] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 554] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [226]; unstable size 226; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 226] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 226] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.37778521, 5.08529711, 0.43795562, 0.25316501, 1.50299859, 1.94422317,
         2.22069502, 4.52716446, 3.75112343]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0562 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 77, vnnlib ID: 77 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.27097034, -11.59263897, -13.77681637, -13.17456245, -13.49902725,
         -13.92919827, -14.42542553, -14.19969749,  -9.72965145,  -9.57371902]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [484]; unstable size 484; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 175, 1, 484] with unstable size 174 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 484] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 484] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [174]; unstable size 174; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 174] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 174] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.28471613,  1.18307233,  2.52050495,  2.22602797,  2.26000166,
          2.91944122,  3.25191593,  3.06435513, -1.13768911]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.27097034, -11.59263897, -13.77681637, -13.17456245, -13.49902725,
         -13.92919827, -14.42542553, -14.19969749,  -9.72965145,  -9.57371902]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.00729084, -11.61149406, -13.44780445, -12.92614937, -13.19767094,
          -13.75501728, -14.04838467, -14.12834930,  -9.19971180,  -9.85693741]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.65722561]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0072 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0571 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 78, vnnlib ID: 78 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.73918152, -8.53411102, -3.85345960, -3.82583189, -3.55089569,
         -4.12887335, -4.16478586, -5.91378498, -8.29353142, -8.77650642]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [613]; unstable size 613; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 281, 1, 613] with unstable size 280 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 613] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 613] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [280]; unstable size 280; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 280] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 280] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.07348055,  1.60172272, -1.32437372, -1.43540192, -0.22906247,
         -0.94617903,  0.48511839,  2.09677720,  2.21030140]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.73918152, -8.53411102, -3.85345960, -3.82583189, -3.55089569,
         -4.12887335, -4.16478586, -5.91378498, -8.29353142, -8.77650642]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.73918104, -8.53411007, -3.85345936, -3.82583237, -3.55089521,
          -4.12887335, -4.16478539, -5.91378498, -8.29353142, -8.77650642],
         [-5.73918104, -8.53411007, -3.85345936, -3.82583237, -3.55089521,
          -4.12887335, -4.16478539, -5.91378498, -8.29353142, -8.77650642]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.91334867,  0.02762699, -0.27493715,  0.30304098,  0.33895302]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.00476181,  0.01111121,  0.02698422,  ..., -0.51269841,
            -0.56031746, -0.62380952],
           [ 0.04285724, -0.00476181,  0.05873025,  ..., -0.59206349,
            -0.63968253, -0.71904761],
           [ 0.01111121, -0.05238085,  0.09047628,  ..., -0.71904761,
            -0.73492062, -0.71904761],
           ...,
           [ 0.02698422, -0.00476181,  0.10634929,  ..., -1.02063489,
            -1.08412695, -1.51269829],
           [-0.02063482, -0.00476181,  0.05873025,  ..., -0.95714283,
            -1.11587298, -1.48095226],
           [ 0.01111121,  0.02698422,  0.05873025,  ..., -0.94126981,
            -1.19523799, -1.48095226]],

          [[-0.90177131, -0.96618354, -0.96618354,  ..., -1.33655393,
            -1.33655393, -1.36875999],
           [-0.91787434, -0.98228657, -0.86956519,  ..., -1.35265696,
            -1.38486302, -1.43317223],
           [-1.01449275, -1.04669881, -0.80515295,  ..., -1.44927526,
            -1.44927526, -1.44927526],
           ...,
           [-0.99838966, -0.96618354, -0.96618354,  ..., -1.38486302,
            -1.41706920, -1.78743970],
           [-1.03059578, -0.99838966, -1.04669881,  ..., -1.32045078,
            -1.44927526, -1.75523353],
           [-0.99838966, -1.01449275, -1.07890499,  ..., -1.27214170,
            -1.49758446, -1.73913050]],

          [[-1.00299859, -1.03298354, -1.03298354,  ..., -1.27286363,
            -1.27286363, -1.30284870],
           [-1.00299859, -1.03298354, -0.91304344,  ..., -1.28785622,
            -1.31784117, -1.33283365],
           [-1.09295356, -1.07796109, -0.82308841,  ..., -1.39280367,
            -1.37781119, -1.31784117],
           ...,
           [-1.06296861, -1.12293863, -1.09295356,  ..., -1.12293863,
            -1.13793111, -1.43778121],
           [-1.12293863, -1.13793111, -1.12293863,  ..., -1.04797614,
            -1.16791618, -1.43778121],
           [-1.09295356, -1.10794616, -1.09295356,  ..., -1.00299859,
            -1.21289361, -1.46776617]]],


         [[[-0.00476181,  0.01111121,  0.02698422,  ..., -0.51269841,
            -0.56031746, -0.62380952],
           [ 0.04285724, -0.00476181,  0.05873025,  ..., -0.59206349,
            -0.63968253, -0.71904761],
           [ 0.01111121, -0.05238085,  0.09047628,  ..., -0.71904761,
            -0.73492062, -0.71904761],
           ...,
           [ 0.02698422, -0.00476181,  0.10634929,  ..., -1.02063489,
            -1.08412695, -1.51269829],
           [-0.02063482, -0.00476181,  0.05873025,  ..., -0.95714283,
            -1.11587298, -1.48095226],
           [ 0.01111121,  0.02698422,  0.05873025,  ..., -0.94126981,
            -1.19523799, -1.48095226]],

          [[-0.90177131, -0.96618354, -0.96618354,  ..., -1.33655393,
            -1.33655393, -1.36875999],
           [-0.91787434, -0.98228657, -0.86956519,  ..., -1.35265696,
            -1.38486302, -1.43317223],
           [-1.01449275, -1.04669881, -0.80515295,  ..., -1.44927526,
            -1.44927526, -1.44927526],
           ...,
           [-0.99838966, -0.96618354, -0.96618354,  ..., -1.38486302,
            -1.41706920, -1.78743970],
           [-1.03059578, -0.99838966, -1.04669881,  ..., -1.32045078,
            -1.44927526, -1.75523353],
           [-0.99838966, -1.01449275, -1.07890499,  ..., -1.27214170,
            -1.49758446, -1.73913050]],

          [[-1.00299859, -1.03298354, -1.03298354,  ..., -1.27286363,
            -1.27286363, -1.30284870],
           [-1.00299859, -1.03298354, -0.91304344,  ..., -1.28785622,
            -1.31784117, -1.33283365],
           [-1.09295356, -1.07796109, -0.82308841,  ..., -1.39280367,
            -1.37781119, -1.31784117],
           ...,
           [-1.06296861, -1.12293863, -1.09295356,  ..., -1.12293863,
            -1.13793111, -1.43778121],
           [-1.12293863, -1.13793111, -1.12293863,  ..., -1.04797614,
            -1.16791618, -1.43778121],
           [-1.09295356, -1.10794616, -1.09295356,  ..., -1.00299859,
            -1.21289361, -1.46776617]]],


         [[[-0.00476181,  0.01111121,  0.02698422,  ..., -0.51269841,
            -0.56031746, -0.62380952],
           [ 0.04285724, -0.00476181,  0.05873025,  ..., -0.59206349,
            -0.63968253, -0.71904761],
           [ 0.01111121, -0.05238085,  0.09047628,  ..., -0.71904761,
            -0.73492062, -0.71904761],
           ...,
           [ 0.02698422, -0.00476181,  0.10634929,  ..., -1.02063489,
            -1.08412695, -1.51269829],
           [-0.02063482, -0.00476181,  0.05873025,  ..., -0.95714283,
            -1.11587298, -1.48095226],
           [ 0.01111121,  0.02698422,  0.05873025,  ..., -0.94126981,
            -1.19523799, -1.48095226]],

          [[-0.90177131, -0.96618354, -0.96618354,  ..., -1.33655393,
            -1.33655393, -1.36875999],
           [-0.91787434, -0.98228657, -0.86956519,  ..., -1.35265696,
            -1.38486302, -1.43317223],
           [-1.01449275, -1.04669881, -0.80515295,  ..., -1.44927526,
            -1.44927526, -1.44927526],
           ...,
           [-0.99838966, -0.96618354, -0.96618354,  ..., -1.38486302,
            -1.41706920, -1.78743970],
           [-1.03059578, -0.99838966, -1.04669881,  ..., -1.32045078,
            -1.44927526, -1.75523353],
           [-0.99838966, -1.01449275, -1.07890499,  ..., -1.27214170,
            -1.49758446, -1.73913050]],

          [[-1.00299859, -1.03298354, -1.03298354,  ..., -1.27286363,
            -1.27286363, -1.30284870],
           [-1.00299859, -1.03298354, -0.91304344,  ..., -1.28785622,
            -1.31784117, -1.33283365],
           [-1.09295356, -1.07796109, -0.82308841,  ..., -1.39280367,
            -1.37781119, -1.31784117],
           ...,
           [-1.06296861, -1.12293863, -1.09295356,  ..., -1.12293863,
            -1.13793111, -1.43778121],
           [-1.12293863, -1.13793111, -1.12293863,  ..., -1.04797614,
            -1.16791618, -1.43778121],
           [-1.09295356, -1.10794616, -1.09295356,  ..., -1.00299859,
            -1.21289361, -1.46776617]]],


         [[[-0.00476181,  0.01111121,  0.02698422,  ..., -0.51269841,
            -0.56031746, -0.62380952],
           [ 0.04285724, -0.00476181,  0.05873025,  ..., -0.59206349,
            -0.63968253, -0.71904761],
           [ 0.01111121, -0.05238085,  0.09047628,  ..., -0.71904761,
            -0.73492062, -0.71904761],
           ...,
           [ 0.02698422, -0.00476181,  0.10634929,  ..., -1.02063489,
            -1.08412695, -1.51269829],
           [-0.02063482, -0.00476181,  0.05873025,  ..., -0.95714283,
            -1.11587298, -1.48095226],
           [ 0.01111121,  0.02698422,  0.05873025,  ..., -0.94126981,
            -1.19523799, -1.48095226]],

          [[-0.90177131, -0.96618354, -0.96618354,  ..., -1.33655393,
            -1.33655393, -1.36875999],
           [-0.91787434, -0.98228657, -0.86956519,  ..., -1.35265696,
            -1.38486302, -1.43317223],
           [-1.01449275, -1.04669881, -0.80515295,  ..., -1.44927526,
            -1.44927526, -1.44927526],
           ...,
           [-0.99838966, -0.96618354, -0.96618354,  ..., -1.38486302,
            -1.41706920, -1.78743970],
           [-1.03059578, -0.99838966, -1.04669881,  ..., -1.32045078,
            -1.44927526, -1.75523353],
           [-0.99838966, -1.01449275, -1.07890499,  ..., -1.27214170,
            -1.49758446, -1.73913050]],

          [[-1.00299859, -1.03298354, -1.03298354,  ..., -1.27286363,
            -1.27286363, -1.30284870],
           [-1.00299859, -1.03298354, -0.91304344,  ..., -1.28785622,
            -1.31784117, -1.33283365],
           [-1.09295356, -1.07796109, -0.82308841,  ..., -1.39280367,
            -1.37781119, -1.31784117],
           ...,
           [-1.06296861, -1.12293863, -1.09295356,  ..., -1.12293863,
            -1.13793111, -1.43778121],
           [-1.12293863, -1.13793111, -1.12293863,  ..., -1.04797614,
            -1.16791618, -1.43778121],
           [-1.09295356, -1.10794616, -1.09295356,  ..., -1.00299859,
            -1.21289361, -1.46776617]]],


         [[[-0.00476181,  0.01111121,  0.02698422,  ..., -0.51269841,
            -0.56031746, -0.62380952],
           [ 0.04285724, -0.00476181,  0.05873025,  ..., -0.59206349,
            -0.63968253, -0.71904761],
           [ 0.01111121, -0.05238085,  0.09047628,  ..., -0.71904761,
            -0.73492062, -0.71904761],
           ...,
           [ 0.02698422, -0.00476181,  0.10634929,  ..., -1.02063489,
            -1.08412695, -1.51269829],
           [-0.02063482, -0.00476181,  0.05873025,  ..., -0.95714283,
            -1.11587298, -1.48095226],
           [ 0.01111121,  0.02698422,  0.05873025,  ..., -0.94126981,
            -1.19523799, -1.48095226]],

          [[-0.90177131, -0.96618354, -0.96618354,  ..., -1.33655393,
            -1.33655393, -1.36875999],
           [-0.91787434, -0.98228657, -0.86956519,  ..., -1.35265696,
            -1.38486302, -1.43317223],
           [-1.01449275, -1.04669881, -0.80515295,  ..., -1.44927526,
            -1.44927526, -1.44927526],
           ...,
           [-0.99838966, -0.96618354, -0.96618354,  ..., -1.38486302,
            -1.41706920, -1.78743970],
           [-1.03059578, -0.99838966, -1.04669881,  ..., -1.32045078,
            -1.44927526, -1.75523353],
           [-0.99838966, -1.01449275, -1.07890499,  ..., -1.27214170,
            -1.49758446, -1.73913050]],

          [[-1.00299859, -1.03298354, -1.03298354,  ..., -1.27286363,
            -1.27286363, -1.30284870],
           [-1.00299859, -1.03298354, -0.91304344,  ..., -1.28785622,
            -1.31784117, -1.33283365],
           [-1.09295356, -1.07796109, -0.82308841,  ..., -1.39280367,
            -1.37781119, -1.31784117],
           ...,
           [-1.06296861, -1.12293863, -1.09295356,  ..., -1.12293863,
            -1.13793111, -1.43778121],
           [-1.12293863, -1.13793111, -1.12293863,  ..., -1.04797614,
            -1.16791618, -1.43778121],
           [-1.09295356, -1.10794616, -1.09295356,  ..., -1.00299859,
            -1.21289361, -1.46776617]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0607 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 79, vnnlib ID: 79 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.05248165, -11.65894604, -12.25777149, -10.95008183,  -9.94209957,
         -10.12332249, -11.05361462,  -6.32633877, -14.71703625, -10.15004635]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [432]; unstable size 432; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 201, 1, 432] with unstable size 200 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 432] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 432] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [200]; unstable size 200; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 200] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 200] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.82437634, 2.96819687, 4.11948061, 3.11231089, 2.39884830, 2.32052016,
         2.91186976, 6.36293173, 1.88987505]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0366 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 80, vnnlib ID: 80 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.44930172, -15.25463963,  -9.82252502, -12.00500107,  -9.42480278,
         -12.67968750, -10.39871120, -11.85678768, -11.46559906, -13.09015942]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [742]; unstable size 742; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 301, 1, 742] with unstable size 300 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 742] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 742] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [300]; unstable size 300; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 300] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 300] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.98650312, -1.78932285,  0.26673213, -2.52717829,  0.69541496,
         -1.41547835, -0.58254147, -0.39011657,  1.13849306]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.44930172, -15.25463963,  -9.82252502, -12.00500107,  -9.42480278,
         -12.67968750, -10.39871120, -11.85678768, -11.46559906, -13.09015942]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.44930172, -15.25463867,  -9.82252502, -12.00500011,  -9.42480087,
          -12.67968464, -10.39871025, -11.85678864, -11.46559906, -13.09015942],
         [-10.44930172, -15.25463867,  -9.82252502, -12.00500011,  -9.42480087,
          -12.67968464, -10.39871025, -11.85678864, -11.46559906, -13.09015942]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.62677670, -1.02450085, -0.05059147,  1.40748692,  1.01629734]]],
       device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]],


         [[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]],


         [[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]],


         [[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]],


         [[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0526 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 81, vnnlib ID: 81 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.10813904, -15.89954853,  -7.31516552, -10.82333755,  -8.54076099,
         -10.33981800, -11.38731098, -12.22146320, -14.46312428, -15.25714493]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [595]; unstable size 595; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 191, 1, 595] with unstable size 190 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 10, 1, 595] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 595] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [190]; unstable size 190; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 10, 1, 190] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 190] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.01580000, 7.21389246, 2.88120985, 0.47409207, 2.25944805, 3.19084311,
         3.74374318, 5.93748713, 6.55921412]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0649 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 82, vnnlib ID: 82 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.24675894, -8.88183308, -4.39334679, -3.84514856, -4.41373539,
         -4.05639076, -4.91783571, -6.25871420, -9.17700768, -7.08661222]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [586]; unstable size 586; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 303, 1, 586] with unstable size 302 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 586] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 586] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [302]; unstable size 302; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 302] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 302] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.48434663,  2.69666767, -0.88318038, -0.67275083, -1.05266690,
         -0.60235131,  1.16763580,  2.82550168,  1.08651733]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.24675894, -8.88183308, -4.39334679, -3.84514856, -4.41373539,
         -4.05639076, -4.91783571, -6.25871420, -9.17700768, -7.08661222]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.24675846, -8.88183308, -4.39334631, -3.84514809, -4.41373491,
          -4.05638981, -4.91783571, -6.25871420, -9.17700863, -7.08661318],
         [-6.24675846, -8.88183308, -4.39334631, -3.84514809, -4.41373491,
          -4.05638981, -4.91783571, -6.25871420, -9.17700863, -7.08661318]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.33695650, -0.21124172,  0.35734510,  0.86144590]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.42380959,  0.39206356,  0.47142863,  ..., -0.57619047,
             0.16984135,  0.28095245],
           [ 0.29682547,  0.36031753,  0.53492069,  ..., -0.81428570,
            -0.43333322,  0.34444451],
           [ 0.20158738,  0.39206356,  0.55079371,  ..., -0.76666665,
            -0.79841268, -0.27460307],
           ...,
           [ 0.34444451,  0.50317466,  0.36031753,  ...,  0.36031753,
             0.40793657,  0.28095245],
           [ 0.48730165,  0.58253974,  0.43968260,  ...,  0.69365084,
             0.59841275,  0.50317466],
           [ 0.55079371,  0.61428577,  0.48730165,  ...,  0.80476195,
             0.67777783,  0.66190481]],

          [[ 0.48309189,  0.46698883,  0.57971025,  ..., -0.66022539,
             0.22544295,  0.37037048],
           [ 0.33816436,  0.41867965,  0.64412248,  ..., -1.01449275,
            -0.53140092,  0.35426742],
           [ 0.22544295,  0.45088577,  0.64412248,  ..., -0.95008045,
            -0.96618354, -0.32206106],
           ...,
           [ 0.66022551,  0.82125610,  0.66022551,  ...,  0.70853472,
             0.74074084,  0.59581327],
           [ 0.80515307,  0.90177143,  0.74074084,  ...,  1.06280196,
             0.96618366,  0.86956531],
           [ 0.86956531,  0.93397754,  0.78904998,  ...,  1.20772982,
             1.07890511,  1.06280196]],

          [[ 0.54122955,  0.54122955,  0.67616212,  ..., -0.64317840,
             0.31634200,  0.58620709],
           [ 0.37631202,  0.49625200,  0.69115460,  ..., -1.12293863,
            -0.52323836,  0.51124454],
           [ 0.27136448,  0.49625200,  0.67616212,  ..., -1.13793111,
            -1.04797614, -0.26836565],
           ...,
           [ 0.99100471,  1.14092970,  0.97601217,  ...,  1.05097473,
             1.11094475,  1.00599718],
           [ 1.14092970,  1.21589243,  1.06596720,  ...,  1.36581755,
             1.32084000,  1.26086998],
           [ 1.18590748,  1.24587750,  1.11094475,  ...,  1.54572761,
             1.45577252,  1.47076499]]],


         [[[ 0.42380959,  0.39206356,  0.47142863,  ..., -0.57619047,
             0.16984135,  0.28095245],
           [ 0.29682547,  0.36031753,  0.53492069,  ..., -0.81428570,
            -0.43333322,  0.34444451],
           [ 0.20158738,  0.39206356,  0.55079371,  ..., -0.76666665,
            -0.79841268, -0.27460307],
           ...,
           [ 0.34444451,  0.50317466,  0.36031753,  ...,  0.36031753,
             0.40793657,  0.28095245],
           [ 0.48730165,  0.58253974,  0.43968260,  ...,  0.69365084,
             0.59841275,  0.50317466],
           [ 0.55079371,  0.61428577,  0.48730165,  ...,  0.80476195,
             0.67777783,  0.66190481]],

          [[ 0.48309189,  0.46698883,  0.57971025,  ..., -0.66022539,
             0.22544295,  0.37037048],
           [ 0.33816436,  0.41867965,  0.64412248,  ..., -1.01449275,
            -0.53140092,  0.35426742],
           [ 0.22544295,  0.45088577,  0.64412248,  ..., -0.95008045,
            -0.96618354, -0.32206106],
           ...,
           [ 0.66022551,  0.82125610,  0.66022551,  ...,  0.70853472,
             0.74074084,  0.59581327],
           [ 0.80515307,  0.90177143,  0.74074084,  ...,  1.06280196,
             0.96618366,  0.86956531],
           [ 0.86956531,  0.93397754,  0.78904998,  ...,  1.20772982,
             1.07890511,  1.06280196]],

          [[ 0.54122955,  0.54122955,  0.67616212,  ..., -0.64317840,
             0.31634200,  0.58620709],
           [ 0.37631202,  0.49625200,  0.69115460,  ..., -1.12293863,
            -0.52323836,  0.51124454],
           [ 0.27136448,  0.49625200,  0.67616212,  ..., -1.13793111,
            -1.04797614, -0.26836565],
           ...,
           [ 0.99100471,  1.14092970,  0.97601217,  ...,  1.05097473,
             1.11094475,  1.00599718],
           [ 1.14092970,  1.21589243,  1.06596720,  ...,  1.36581755,
             1.32084000,  1.26086998],
           [ 1.18590748,  1.24587750,  1.11094475,  ...,  1.54572761,
             1.45577252,  1.47076499]]],


         [[[ 0.42380959,  0.39206356,  0.47142863,  ..., -0.57619047,
             0.16984135,  0.28095245],
           [ 0.29682547,  0.36031753,  0.53492069,  ..., -0.81428570,
            -0.43333322,  0.34444451],
           [ 0.20158738,  0.39206356,  0.55079371,  ..., -0.76666665,
            -0.79841268, -0.27460307],
           ...,
           [ 0.34444451,  0.50317466,  0.36031753,  ...,  0.36031753,
             0.40793657,  0.28095245],
           [ 0.48730165,  0.58253974,  0.43968260,  ...,  0.69365084,
             0.59841275,  0.50317466],
           [ 0.55079371,  0.61428577,  0.48730165,  ...,  0.80476195,
             0.67777783,  0.66190481]],

          [[ 0.48309189,  0.46698883,  0.57971025,  ..., -0.66022539,
             0.22544295,  0.37037048],
           [ 0.33816436,  0.41867965,  0.64412248,  ..., -1.01449275,
            -0.53140092,  0.35426742],
           [ 0.22544295,  0.45088577,  0.64412248,  ..., -0.95008045,
            -0.96618354, -0.32206106],
           ...,
           [ 0.66022551,  0.82125610,  0.66022551,  ...,  0.70853472,
             0.74074084,  0.59581327],
           [ 0.80515307,  0.90177143,  0.74074084,  ...,  1.06280196,
             0.96618366,  0.86956531],
           [ 0.86956531,  0.93397754,  0.78904998,  ...,  1.20772982,
             1.07890511,  1.06280196]],

          [[ 0.54122955,  0.54122955,  0.67616212,  ..., -0.64317840,
             0.31634200,  0.58620709],
           [ 0.37631202,  0.49625200,  0.69115460,  ..., -1.12293863,
            -0.52323836,  0.51124454],
           [ 0.27136448,  0.49625200,  0.67616212,  ..., -1.13793111,
            -1.04797614, -0.26836565],
           ...,
           [ 0.99100471,  1.14092970,  0.97601217,  ...,  1.05097473,
             1.11094475,  1.00599718],
           [ 1.14092970,  1.21589243,  1.06596720,  ...,  1.36581755,
             1.32084000,  1.26086998],
           [ 1.18590748,  1.24587750,  1.11094475,  ...,  1.54572761,
             1.45577252,  1.47076499]]],


         [[[ 0.42380959,  0.39206356,  0.47142863,  ..., -0.57619047,
             0.16984135,  0.28095245],
           [ 0.29682547,  0.36031753,  0.53492069,  ..., -0.81428570,
            -0.43333322,  0.34444451],
           [ 0.20158738,  0.39206356,  0.55079371,  ..., -0.76666665,
            -0.79841268, -0.27460307],
           ...,
           [ 0.34444451,  0.50317466,  0.36031753,  ...,  0.36031753,
             0.40793657,  0.28095245],
           [ 0.48730165,  0.58253974,  0.43968260,  ...,  0.69365084,
             0.59841275,  0.50317466],
           [ 0.55079371,  0.61428577,  0.48730165,  ...,  0.80476195,
             0.67777783,  0.66190481]],

          [[ 0.48309189,  0.46698883,  0.57971025,  ..., -0.66022539,
             0.22544295,  0.37037048],
           [ 0.33816436,  0.41867965,  0.64412248,  ..., -1.01449275,
            -0.53140092,  0.35426742],
           [ 0.22544295,  0.45088577,  0.64412248,  ..., -0.95008045,
            -0.96618354, -0.32206106],
           ...,
           [ 0.66022551,  0.82125610,  0.66022551,  ...,  0.70853472,
             0.74074084,  0.59581327],
           [ 0.80515307,  0.90177143,  0.74074084,  ...,  1.06280196,
             0.96618366,  0.86956531],
           [ 0.86956531,  0.93397754,  0.78904998,  ...,  1.20772982,
             1.07890511,  1.06280196]],

          [[ 0.54122955,  0.54122955,  0.67616212,  ..., -0.64317840,
             0.31634200,  0.58620709],
           [ 0.37631202,  0.49625200,  0.69115460,  ..., -1.12293863,
            -0.52323836,  0.51124454],
           [ 0.27136448,  0.49625200,  0.67616212,  ..., -1.13793111,
            -1.04797614, -0.26836565],
           ...,
           [ 0.99100471,  1.14092970,  0.97601217,  ...,  1.05097473,
             1.11094475,  1.00599718],
           [ 1.14092970,  1.21589243,  1.06596720,  ...,  1.36581755,
             1.32084000,  1.26086998],
           [ 1.18590748,  1.24587750,  1.11094475,  ...,  1.54572761,
             1.45577252,  1.47076499]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0772 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 83, vnnlib ID: 83 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.36881924, -3.89865160, -7.93544197, -6.23400021, -6.74230671,
         -6.96568727, -8.17397594, -6.56449556, -5.37149715, -2.30208302]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [592]; unstable size 592; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 220, 1, 592] with unstable size 219 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 28, 1, 592] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 592] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [219]; unstable size 219; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 28, 1, 219] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 219] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.89441204, 0.29969531, 2.93556023, 1.68636417, 1.92623091, 2.15194607,
         3.21918106, 1.75679493, 0.56472874]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0635 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 84, vnnlib ID: 84 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.80086327, -15.88022327,  -7.39093113,  -9.48237228,  -6.51979351,
          -9.19186211,  -7.76570368, -10.53886223, -14.64324093, -15.33413029]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [570]; unstable size 570; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 179, 1, 570] with unstable size 178 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 570] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 570] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [178]; unstable size 178; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 178] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 178] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.99768209,  7.91173935, -0.14131740,  2.21972227,  1.75214744,
          0.21274042,  3.05064726,  6.73370552,  7.60544586]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.80086327, -15.88022327,  -7.39093113,  -9.48237228,  -6.51979351,
          -9.19186211,  -7.76570368, -10.53886223, -14.64324093, -15.33413029]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.85it/s]100%|██████████| 1/1 [00:00<00:00,  8.84it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.14176750, -15.39953613,  -6.68415260,  -9.07587337,  -6.41280174,
           -8.82754326,  -7.32056284, -10.51403236, -14.15463734, -15.02766609]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.27135086]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1160 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 33.62461471557617
alpha/beta optimization time: 1.1529061794281006
initial alpha-crown bounds: tensor([[ 4.04458475,  7.94689751, -0.11414802,  2.23972201,  1.77452970,
          0.24281144,  3.07658243,  6.77713585,  7.63649893]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.11414802074432373
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.68878388404846
Verifying property 0 with 1 instances.
##### Instance 84 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.04458475112915.

Properties batch 1, size 1
Remaining timeout: 198.5327651500702
Verifying property 1 with 1 instances.
##### Instance 84 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.946897506713867.

Properties batch 2, size 1
Remaining timeout: 198.4098780155182
Verifying property 2 with 1 instances.
##### Instance 84 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.11414802]], device='cuda:0') need to verify.
Model prediction is: tensor([-11.80086327, -15.88022327,  -7.39093113,  -9.48237228,  -6.51979351,
         -9.19186211,  -7.76570368, -10.53886223, -14.64324093, -15.33413029],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.11414802]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 570
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 175
Node /15 input 0: size torch.Size([100]) unstable 11
-----------------
# of unstable neurons: 756
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 1] 
split level 1: [/input-12, 15] 
split level 2: [/input-12, 26] 
split level 3: [/input-12, 6] 
split level 4: [/input-12, 11] 
split level 5: [/input-12, 68] 
split level 6: [/input-8, 1884] 
split level 7: [/input-8, 1901] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.458427429199219e-05
Time: prepare 0.0031    bound 0.0041    transfer 0.0015    finalize 0.0017    func 0.0104    
Accumulated time: func 0.0104    prepare 0.0035    bound 0.0041    transfer 0.0015    finalize 0.0017    
all_split False
Length of domains: 0
Time: pickout 0.0004    decision 0.0229    set_bounds 0.0175    solve 0.0105    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0229    set_bounds 0.0175    solve 0.0105    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06224846839904785


Properties batch 3, size 1
Remaining timeout: 198.1915864944458
Verifying property 3 with 1 instances.
##### Instance 84 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.2397220134735107.

Properties batch 4, size 1
Remaining timeout: 198.08349561691284
Verifying property 4 with 1 instances.
##### Instance 84 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.7745296955108643.

Properties batch 5, size 1
Remaining timeout: 197.975665807724
Verifying property 5 with 1 instances.
##### Instance 84 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2428114414215088.

Properties batch 6, size 1
Remaining timeout: 197.87944793701172
Verifying property 6 with 1 instances.
##### Instance 84 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.076582431793213.

Properties batch 7, size 1
Remaining timeout: 197.783917427063
Verifying property 7 with 1 instances.
##### Instance 84 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.777135848999023.

Properties batch 8, size 1
Remaining timeout: 197.68826699256897
Verifying property 8 with 1 instances.
##### Instance 84 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.636498928070068.
Result: safe in 2.4069 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 85, vnnlib ID: 85 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-14.42035007, -11.01566029, -16.78618240, -17.08073235, -15.94405842,
         -18.31308746, -16.60547638, -16.45758438, -12.49265862, -13.06334209]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [534]; unstable size 534; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 198, 1, 534] with unstable size 197 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 534] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 534] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [197]; unstable size 197; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 197] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 197] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.66741276, 3.53291893, 4.23365259, 2.83012962, 5.27459431, 3.79739332,
         3.37451887, 0.14124155, 1.17811871]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0929 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 86, vnnlib ID: 86 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.28128910, -17.14933395, -11.40331554, -14.08204365, -14.06262875,
         -13.41378117, -16.03304672, -13.62230492, -16.91720581, -17.59583473]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [674]; unstable size 674; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 194, 1, 674] with unstable size 193 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 10, 1, 674] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 674] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [193]; unstable size 193; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 10, 1, 193] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 193] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.10949612, 4.45416069, 2.07507992, 2.01375389, 1.43745148, 3.63756847,
         1.59498572, 4.70254755, 5.05546284]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0510 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 87, vnnlib ID: 87 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-7.75811863, -7.24076557, -3.96754313, -3.75479078, -2.71305084,
         -3.64833927, -3.95274568, -3.04537916, -8.23825359, -5.63892746]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [434]; unstable size 434; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 222, 1, 434] with unstable size 221 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 27, 1, 434] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 434] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [221]; unstable size 221; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 27, 1, 221] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 221] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [26]; unstable size 26; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.55352426,  1.36358547, -0.76676691, -0.70900577, -1.60512829,
         -0.78009796, -1.31760645,  2.84528351,  0.56516695]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-7.75811863, -7.24076557, -3.96754313, -3.75479078, -2.71305084,
         -3.64833927, -3.95274568, -3.04537916, -8.23825359, -5.63892746]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.75811815, -7.24076557, -3.96754289, -3.75479031, -2.71305084,
          -3.64833879, -3.95274591, -3.04537868, -8.23825359, -5.63892746],
         [-7.75811815, -7.24076557, -3.96754289, -3.75479031, -2.71305084,
          -3.64833879, -3.95274591, -3.04537868, -8.23825359, -5.63892746]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.92216420,  0.70941162, -0.33232784,  0.60296011,  0.90736723]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.06825387e+00, -1.29047608e+00, -9.25396800e-01,  ...,
            -6.55555546e-01, -8.14285696e-01, -7.50793636e-01],
           [-9.88888860e-01, -1.02063489e+00, -1.00476182e+00,  ...,
            -7.34920621e-01, -1.17936504e+00, -1.02063489e+00],
           [-1.00476182e+00, -7.66666651e-01, -8.14285696e-01,  ...,
            -1.00476182e+00, -1.17936504e+00, -1.09999990e+00],
           ...,
           [-1.51269829e+00, -2.90476084e-01,  9.00000036e-01,  ...,
             5.66666722e-01,  6.77777827e-01,  6.14285767e-01],
           [-7.66666651e-01,  5.98412752e-01,  9.31746066e-01,  ...,
             2.17460394e-01,  2.65079439e-01,  5.50793707e-01],
           [-1.79364979e-01,  9.63492095e-01,  8.84127021e-01,  ...,
             2.96825469e-01,  2.17460394e-01,  5.98412752e-01]],

          [[-9.33977425e-01, -1.27214170e+00, -9.33977425e-01,  ...,
            -7.08534598e-01, -8.85668218e-01, -8.21255982e-01],
           [-8.37359071e-01, -9.98389661e-01, -1.01449275e+00,  ...,
            -7.56843746e-01, -1.20772946e+00, -1.06280184e+00],
           [-8.53462100e-01, -7.40740716e-01, -8.21255982e-01,  ...,
            -9.82286572e-01, -1.15942025e+00, -1.09500802e+00],
           ...,
           [-1.65861523e+00, -5.15297890e-01,  5.95813274e-01,  ...,
             1.93236828e-01,  2.89855182e-01,  1.93236828e-01],
           [-9.17874336e-01,  3.70370477e-01,  6.11916363e-01,  ...,
            -1.93236589e-01, -1.44927412e-01,  1.61030710e-01],
           [-4.18679416e-01,  6.44122481e-01,  5.15298009e-01,  ...,
            -1.28824353e-01, -1.93236589e-01,  1.93236828e-01]],

          [[-6.28185868e-01, -1.06296861e+00, -8.38080943e-01,  ...,
            -5.53223372e-01, -6.88155890e-01, -5.98200858e-01],
           [-6.73163414e-01, -8.68065953e-01, -8.83058429e-01,  ...,
            -5.08245826e-01, -8.98050964e-01, -7.18140900e-01],
           [-6.28185868e-01, -6.13193393e-01, -7.18140900e-01,  ...,
            -7.93103397e-01, -9.28035975e-01, -8.23088408e-01],
           ...,
           [-1.48275876e+00, -7.48125911e-01,  2.11394474e-01,  ...,
             1.49940979e-03,  1.06446937e-01, -1.34930937e-02],
           [-8.98050964e-01,  1.49940979e-03,  1.81409463e-01,  ...,
            -3.73313308e-01, -3.58320802e-01, -1.18440613e-01],
           [-4.63268340e-01,  3.16341996e-01,  1.36431947e-01,  ...,
            -2.83358276e-01, -3.73313308e-01, -4.34781015e-02]]],


         [[[-1.06825387e+00, -1.29047608e+00, -9.25396800e-01,  ...,
            -6.55555546e-01, -8.14285696e-01, -7.50793636e-01],
           [-9.88888860e-01, -1.02063489e+00, -1.00476182e+00,  ...,
            -7.34920621e-01, -1.17936504e+00, -1.02063489e+00],
           [-1.00476182e+00, -7.66666651e-01, -8.14285696e-01,  ...,
            -1.00476182e+00, -1.17936504e+00, -1.09999990e+00],
           ...,
           [-1.51269829e+00, -2.90476084e-01,  9.00000036e-01,  ...,
             5.66666722e-01,  6.77777827e-01,  6.14285767e-01],
           [-7.66666651e-01,  5.98412752e-01,  9.31746066e-01,  ...,
             2.17460394e-01,  2.65079439e-01,  5.50793707e-01],
           [-1.79364979e-01,  9.63492095e-01,  8.84127021e-01,  ...,
             2.96825469e-01,  2.17460394e-01,  5.98412752e-01]],

          [[-9.33977425e-01, -1.27214170e+00, -9.33977425e-01,  ...,
            -7.08534598e-01, -8.85668218e-01, -8.21255982e-01],
           [-8.37359071e-01, -9.98389661e-01, -1.01449275e+00,  ...,
            -7.56843746e-01, -1.20772946e+00, -1.06280184e+00],
           [-8.53462100e-01, -7.40740716e-01, -8.21255982e-01,  ...,
            -9.82286572e-01, -1.15942025e+00, -1.09500802e+00],
           ...,
           [-1.65861523e+00, -5.15297890e-01,  5.95813274e-01,  ...,
             1.93236828e-01,  2.89855182e-01,  1.93236828e-01],
           [-9.17874336e-01,  3.70370477e-01,  6.11916363e-01,  ...,
            -1.93236589e-01, -1.44927412e-01,  1.61030710e-01],
           [-4.18679416e-01,  6.44122481e-01,  5.15298009e-01,  ...,
            -1.28824353e-01, -1.93236589e-01,  1.93236828e-01]],

          [[-6.28185868e-01, -1.06296861e+00, -8.38080943e-01,  ...,
            -5.53223372e-01, -6.88155890e-01, -5.98200858e-01],
           [-6.73163414e-01, -8.68065953e-01, -8.83058429e-01,  ...,
            -5.08245826e-01, -8.98050964e-01, -7.18140900e-01],
           [-6.28185868e-01, -6.13193393e-01, -7.18140900e-01,  ...,
            -7.93103397e-01, -9.28035975e-01, -8.23088408e-01],
           ...,
           [-1.48275876e+00, -7.48125911e-01,  2.11394474e-01,  ...,
             1.49940979e-03,  1.06446937e-01, -1.34930937e-02],
           [-8.98050964e-01,  1.49940979e-03,  1.81409463e-01,  ...,
            -3.73313308e-01, -3.58320802e-01, -1.18440613e-01],
           [-4.63268340e-01,  3.16341996e-01,  1.36431947e-01,  ...,
            -2.83358276e-01, -3.73313308e-01, -4.34781015e-02]]],


         [[[-1.06825387e+00, -1.29047608e+00, -9.25396800e-01,  ...,
            -6.55555546e-01, -8.14285696e-01, -7.50793636e-01],
           [-9.88888860e-01, -1.02063489e+00, -1.00476182e+00,  ...,
            -7.34920621e-01, -1.17936504e+00, -1.02063489e+00],
           [-1.00476182e+00, -7.66666651e-01, -8.14285696e-01,  ...,
            -1.00476182e+00, -1.17936504e+00, -1.09999990e+00],
           ...,
           [-1.51269829e+00, -2.90476084e-01,  9.00000036e-01,  ...,
             5.66666722e-01,  6.77777827e-01,  6.14285767e-01],
           [-7.66666651e-01,  5.98412752e-01,  9.31746066e-01,  ...,
             2.17460394e-01,  2.65079439e-01,  5.50793707e-01],
           [-1.79364979e-01,  9.63492095e-01,  8.84127021e-01,  ...,
             2.96825469e-01,  2.17460394e-01,  5.98412752e-01]],

          [[-9.33977425e-01, -1.27214170e+00, -9.33977425e-01,  ...,
            -7.08534598e-01, -8.85668218e-01, -8.21255982e-01],
           [-8.37359071e-01, -9.98389661e-01, -1.01449275e+00,  ...,
            -7.56843746e-01, -1.20772946e+00, -1.06280184e+00],
           [-8.53462100e-01, -7.40740716e-01, -8.21255982e-01,  ...,
            -9.82286572e-01, -1.15942025e+00, -1.09500802e+00],
           ...,
           [-1.65861523e+00, -5.15297890e-01,  5.95813274e-01,  ...,
             1.93236828e-01,  2.89855182e-01,  1.93236828e-01],
           [-9.17874336e-01,  3.70370477e-01,  6.11916363e-01,  ...,
            -1.93236589e-01, -1.44927412e-01,  1.61030710e-01],
           [-4.18679416e-01,  6.44122481e-01,  5.15298009e-01,  ...,
            -1.28824353e-01, -1.93236589e-01,  1.93236828e-01]],

          [[-6.28185868e-01, -1.06296861e+00, -8.38080943e-01,  ...,
            -5.53223372e-01, -6.88155890e-01, -5.98200858e-01],
           [-6.73163414e-01, -8.68065953e-01, -8.83058429e-01,  ...,
            -5.08245826e-01, -8.98050964e-01, -7.18140900e-01],
           [-6.28185868e-01, -6.13193393e-01, -7.18140900e-01,  ...,
            -7.93103397e-01, -9.28035975e-01, -8.23088408e-01],
           ...,
           [-1.48275876e+00, -7.48125911e-01,  2.11394474e-01,  ...,
             1.49940979e-03,  1.06446937e-01, -1.34930937e-02],
           [-8.98050964e-01,  1.49940979e-03,  1.81409463e-01,  ...,
            -3.73313308e-01, -3.58320802e-01, -1.18440613e-01],
           [-4.63268340e-01,  3.16341996e-01,  1.36431947e-01,  ...,
            -2.83358276e-01, -3.73313308e-01, -4.34781015e-02]]],


         [[[-1.06825387e+00, -1.29047608e+00, -9.25396800e-01,  ...,
            -6.55555546e-01, -8.14285696e-01, -7.50793636e-01],
           [-9.88888860e-01, -1.02063489e+00, -1.00476182e+00,  ...,
            -7.34920621e-01, -1.17936504e+00, -1.02063489e+00],
           [-1.00476182e+00, -7.66666651e-01, -8.14285696e-01,  ...,
            -1.00476182e+00, -1.17936504e+00, -1.09999990e+00],
           ...,
           [-1.51269829e+00, -2.90476084e-01,  9.00000036e-01,  ...,
             5.66666722e-01,  6.77777827e-01,  6.14285767e-01],
           [-7.66666651e-01,  5.98412752e-01,  9.31746066e-01,  ...,
             2.17460394e-01,  2.65079439e-01,  5.50793707e-01],
           [-1.79364979e-01,  9.63492095e-01,  8.84127021e-01,  ...,
             2.96825469e-01,  2.17460394e-01,  5.98412752e-01]],

          [[-9.33977425e-01, -1.27214170e+00, -9.33977425e-01,  ...,
            -7.08534598e-01, -8.85668218e-01, -8.21255982e-01],
           [-8.37359071e-01, -9.98389661e-01, -1.01449275e+00,  ...,
            -7.56843746e-01, -1.20772946e+00, -1.06280184e+00],
           [-8.53462100e-01, -7.40740716e-01, -8.21255982e-01,  ...,
            -9.82286572e-01, -1.15942025e+00, -1.09500802e+00],
           ...,
           [-1.65861523e+00, -5.15297890e-01,  5.95813274e-01,  ...,
             1.93236828e-01,  2.89855182e-01,  1.93236828e-01],
           [-9.17874336e-01,  3.70370477e-01,  6.11916363e-01,  ...,
            -1.93236589e-01, -1.44927412e-01,  1.61030710e-01],
           [-4.18679416e-01,  6.44122481e-01,  5.15298009e-01,  ...,
            -1.28824353e-01, -1.93236589e-01,  1.93236828e-01]],

          [[-6.28185868e-01, -1.06296861e+00, -8.38080943e-01,  ...,
            -5.53223372e-01, -6.88155890e-01, -5.98200858e-01],
           [-6.73163414e-01, -8.68065953e-01, -8.83058429e-01,  ...,
            -5.08245826e-01, -8.98050964e-01, -7.18140900e-01],
           [-6.28185868e-01, -6.13193393e-01, -7.18140900e-01,  ...,
            -7.93103397e-01, -9.28035975e-01, -8.23088408e-01],
           ...,
           [-1.48275876e+00, -7.48125911e-01,  2.11394474e-01,  ...,
             1.49940979e-03,  1.06446937e-01, -1.34930937e-02],
           [-8.98050964e-01,  1.49940979e-03,  1.81409463e-01,  ...,
            -3.73313308e-01, -3.58320802e-01, -1.18440613e-01],
           [-4.63268340e-01,  3.16341996e-01,  1.36431947e-01,  ...,
            -2.83358276e-01, -3.73313308e-01, -4.34781015e-02]]],


         [[[-1.06825387e+00, -1.29047608e+00, -9.25396800e-01,  ...,
            -6.55555546e-01, -8.14285696e-01, -7.50793636e-01],
           [-9.88888860e-01, -1.02063489e+00, -1.00476182e+00,  ...,
            -7.34920621e-01, -1.17936504e+00, -1.02063489e+00],
           [-1.00476182e+00, -7.66666651e-01, -8.14285696e-01,  ...,
            -1.00476182e+00, -1.17936504e+00, -1.09999990e+00],
           ...,
           [-1.51269829e+00, -2.90476084e-01,  9.00000036e-01,  ...,
             5.66666722e-01,  6.77777827e-01,  6.14285767e-01],
           [-7.66666651e-01,  5.98412752e-01,  9.31746066e-01,  ...,
             2.17460394e-01,  2.65079439e-01,  5.50793707e-01],
           [-1.79364979e-01,  9.63492095e-01,  8.84127021e-01,  ...,
             2.96825469e-01,  2.17460394e-01,  5.98412752e-01]],

          [[-9.33977425e-01, -1.27214170e+00, -9.33977425e-01,  ...,
            -7.08534598e-01, -8.85668218e-01, -8.21255982e-01],
           [-8.37359071e-01, -9.98389661e-01, -1.01449275e+00,  ...,
            -7.56843746e-01, -1.20772946e+00, -1.06280184e+00],
           [-8.53462100e-01, -7.40740716e-01, -8.21255982e-01,  ...,
            -9.82286572e-01, -1.15942025e+00, -1.09500802e+00],
           ...,
           [-1.65861523e+00, -5.15297890e-01,  5.95813274e-01,  ...,
             1.93236828e-01,  2.89855182e-01,  1.93236828e-01],
           [-9.17874336e-01,  3.70370477e-01,  6.11916363e-01,  ...,
            -1.93236589e-01, -1.44927412e-01,  1.61030710e-01],
           [-4.18679416e-01,  6.44122481e-01,  5.15298009e-01,  ...,
            -1.28824353e-01, -1.93236589e-01,  1.93236828e-01]],

          [[-6.28185868e-01, -1.06296861e+00, -8.38080943e-01,  ...,
            -5.53223372e-01, -6.88155890e-01, -5.98200858e-01],
           [-6.73163414e-01, -8.68065953e-01, -8.83058429e-01,  ...,
            -5.08245826e-01, -8.98050964e-01, -7.18140900e-01],
           [-6.28185868e-01, -6.13193393e-01, -7.18140900e-01,  ...,
            -7.93103397e-01, -9.28035975e-01, -8.23088408e-01],
           ...,
           [-1.48275876e+00, -7.48125911e-01,  2.11394474e-01,  ...,
             1.49940979e-03,  1.06446937e-01, -1.34930937e-02],
           [-8.98050964e-01,  1.49940979e-03,  1.81409463e-01,  ...,
            -3.73313308e-01, -3.58320802e-01, -1.18440613e-01],
           [-4.63268340e-01,  3.16341996e-01,  1.36431947e-01,  ...,
            -2.83358276e-01, -3.73313308e-01, -4.34781015e-02]]]]],
       device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0478 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 88, vnnlib ID: 88 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.13618565, -7.95294571, -3.64413977, -3.37936306, -3.17752457,
         -3.15863037, -5.09549570, -2.59429359, -6.38139343, -5.47579718]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [416]; unstable size 416; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 168, 1, 416] with unstable size 167 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 416] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 416] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [167]; unstable size 167; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 167] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 167] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.65106153,  3.34274721, -0.95804214, -1.22589207, -1.23296690,
          0.48913836, -2.05695343,  1.96782160,  0.53511190]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.13618565, -7.95294571, -3.64413977, -3.37936306, -3.17752457,
         -3.15863037, -5.09549570, -2.59429359, -6.38139343, -5.47579718]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.13618565, -7.95294476, -3.64413953, -3.37936282, -3.17752457,
          -3.15863037, -5.09549522, -2.59429312, -6.38139343, -5.47579718],
         [-6.13618565, -7.95294476, -3.64413953, -3.37936282, -3.17752457,
          -3.15863037, -5.09549522, -2.59429312, -6.38139343, -5.47579718]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.26477671, -0.46661496, -0.48550916, -1.04984641]]],
       device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0706 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 89, vnnlib ID: 89 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.58886576, -2.20369244, -8.07431412, -7.83337307, -7.94223309,
         -9.24308968, -8.43767738, -8.89227295, -3.14519000, -4.67166090]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [472]; unstable size 472; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 211, 1, 472] with unstable size 210 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 472] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 472] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [210]; unstable size 210; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 210] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 210] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.69297838,  3.94914818,  3.92555094,  4.07342052,  5.17004490,
          4.61110878,  4.71607876, -0.48206568,  1.52207363]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.58886576, -2.20369244, -8.07431412, -7.83337307, -7.94223309,
         -9.24308968, -8.43767738, -8.89227295, -3.14519000, -4.67166090]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.92it/s]100%|██████████| 1/1 [00:00<00:00,  8.91it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.60659981, -2.84582663, -8.02860737, -7.76232910, -7.95765686,
          -9.17981625, -8.46953678, -8.89545727, -2.92662191, -5.02388382]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.08079529]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1147 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 29.900596618652344
alpha/beta optimization time: 1.1575076580047607
initial alpha-crown bounds: tensor([[ 1.81915092,  4.04639435,  4.01018715,  4.15022945,  5.26251221,
          4.67265797,  4.80006599, -0.42642784,  1.56582618]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.42642784118652344
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.68634557724
Verifying property 0 with 1 instances.
##### Instance 89 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.8191509246826172.

Properties batch 1, size 1
Remaining timeout: 198.54611706733704
Verifying property 1 with 1 instances.
##### Instance 89 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.046394348144531.

Properties batch 2, size 1
Remaining timeout: 198.4488823413849
Verifying property 2 with 1 instances.
##### Instance 89 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.010187149047852.

Properties batch 3, size 1
Remaining timeout: 198.3529109954834
Verifying property 3 with 1 instances.
##### Instance 89 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.150229454040527.

Properties batch 4, size 1
Remaining timeout: 198.25740146636963
Verifying property 4 with 1 instances.
##### Instance 89 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.26251220703125.

Properties batch 5, size 1
Remaining timeout: 198.16198420524597
Verifying property 5 with 1 instances.
##### Instance 89 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.6726579666137695.

Properties batch 6, size 1
Remaining timeout: 198.0665180683136
Verifying property 6 with 1 instances.
##### Instance 89 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.800065994262695.

Properties batch 7, size 1
Remaining timeout: 197.97088265419006
Verifying property 7 with 1 instances.
##### Instance 89 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.42642784]], device='cuda:0') need to verify.
Model prediction is: tensor([-5.58886576, -2.20369244, -8.07431412, -7.83337307, -7.94223309,
        -9.24308968, -8.43767738, -8.89227295, -3.14519000, -4.67166090],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.42642784]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 472
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 206
Node /15 input 0: size torch.Size([100]) unstable 18
-----------------
# of unstable neurons: 696
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 21] 
split level 1: [/input-12, 35] 
split level 2: [/input-12, 74] 
split level 3: [/input-12, 10] 
split level 4: [/input-12, 11] 
split level 5: [/input-12, 60] 
split level 6: [/input-12, 1] 
split level 7: [/input-12, 6] 
pruning_in_iteration open status: True
ratio of positive domain = 250 / 256 = 0.9765625
pruning-in-iteration extra time: 0.00456690788269043
Time: prepare 0.0018    bound 0.1336    transfer 0.0016    finalize 0.0018    func 0.1388    
Accumulated time: func 0.1388    prepare 0.0022    bound 0.1336    transfer 0.0016    finalize 0.0018    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12683 (8), -0.08570 (8), -0.06540 (8), -0.04592 (8), -0.03566 (8), -0.03055 (8), 
Length of domains: 6
Time: pickout 0.0004    decision 0.0228    set_bounds 0.0165    solve 0.1390    add 0.0118    
Accumulated time: pickout 0.0004    decision 0.0228    set_bounds 0.0165    solve 0.1390    add 0.0118    
Current (lb-rhs): -0.1268305778503418
6 domains visited
Cumulative time: 0.19460606575012207

BaB round 2
batch: 6
splitting decisions: 
split level 0: [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] 
split level 1: [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] 
split level 2: [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] 
split level 3: [/input-8, 684] [/input-8, 1075] [/input-8, 684] [/input-8, 684] [/input-8, 1075] [/input-8, 827] 
split level 4: [/input-8, 812] [/input-8, 684] [/input-8, 812] [/input-8, 812] [/input-8, 684] [/input-8, 684] 
split level 5: [/input-8, 106] [/input-8, 1074] [/input-8, 106] [/input-8, 106] [/input-8, 812] [/input-8, 812] 
pruning_in_iteration open status: True
ratio of positive domain = 372 / 384 = 0.96875
pruning-in-iteration extra time: 0.0045928955078125
Time: prepare 0.0075    bound 0.1134    transfer 0.0022    finalize 0.0021    func 0.1253    
Accumulated time: func 0.2641    prepare 0.0100    bound 0.2470    transfer 0.0039    finalize 0.0039    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06556 (14), -0.05903 (14), -0.05758 (14), -0.05583 (14), -0.05218 (14), -0.04476 (14), -0.04398 (14), -0.04120 (14), -0.02553 (14), -0.02155 (14), -0.01943 (14), -0.01884 (14), 
Length of domains: 12
Time: pickout 0.0010    decision 0.0237    set_bounds 0.0216    solve 0.1254    add 0.0010    
Accumulated time: pickout 0.0014    decision 0.0465    set_bounds 0.0382    solve 0.2643    add 0.0128    
Current (lb-rhs): -0.06556177139282227
18 domains visited
Cumulative time: 0.3683779239654541

BaB round 3
batch: 12
splitting decisions: 
split level 0: [/input-8, 827] [/input-8, 827] [/input-8, 827] [/input-8, 827] [/input-8, 827] [/input-8, 827] [/input-8, 827] [/input-8, 827] [/input-8, 827] [/input-8, 827] 
split level 1: [/input-8, 1075] [/input-8, 1075] [/input-8, 106] [/input-8, 1075] [/input-8, 1075] [/input-8, 106] [/input-8, 1075] [/input-8, 1075] [/input-8, 106] [/input-8, 1075] 
split level 2: [/input-8, 1074] [/input-8, 1074] [/input-8, 1074] [/input-8, 1074] [/input-8, 1074] [/input-8, 1074] [/input-8, 1074] [/input-8, 1074] [/input-8, 1074] [/input-8, 1074] 
split level 3: [/input-8, 1332] [/input-8, 1332] [/input-8, 1332] [/input-8, 1332] [/input-8, 1332] [/input-8, 1332] [/input-8, 108] [/input-8, 1332] [/input-8, 1332] [/input-8, 1332] 
split level 4: [/input-8, 108] [/input-8, 108] [/input-8, 861] [/input-8, 108] [/input-8, 108] [/input-8, 861] [/input-8, 1332] [/input-8, 108] [/input-8, 861] [/input-8, 108] 
pruning_in_iteration open status: True
ratio of positive domain = 317 / 384 = 0.8255208333333334
pruning-in-iteration extra time: 0.00480198860168457
Time: prepare 0.0072    bound 0.1721    transfer 0.0011    finalize 0.0018    func 0.1823    
Accumulated time: func 0.4463    prepare 0.0175    bound 0.4191    transfer 0.0050    finalize 0.0056    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04691 (19), -0.04526 (19), -0.04310 (19), -0.04191 (19), -0.03989 (19), -0.03904 (19), -0.03823 (19), -0.03580 (19), -0.03570 (19), -0.03531 (19), -0.03520 (19), -0.03462 (19), -0.03433 (19), -0.03381 (19), -0.03350 (19), -0.03338 (19), -0.03276 (19), -0.03250 (19), -0.03229 (19), -0.03109 (19), 
Length of domains: 67
Time: pickout 0.0013    decision 0.0204    set_bounds 0.0171    solve 0.1823    add 0.0014    
Accumulated time: pickout 0.0026    decision 0.0669    set_bounds 0.0553    solve 0.4467    add 0.0142    
Current (lb-rhs): -0.04690980911254883
85 domains visited
Cumulative time: 0.5917313098907471

BaB round 4
batch: 67
splitting decisions: 
split level 0: [/input-8, 817] [/input-8, 817] [/input-8, 817] [/input-8, 817] [/input-8, 403] [/input-8, 403] [/input-8, 403] [/input-8, 403] [/input-8, 817] [/input-8, 817] 
split level 1: [/input-8, 270] [/input-8, 270] [/input-8, 270] [/input-8, 270] [/input-8, 270] [/input-8, 270] [/input-8, 270] [/input-8, 270] [/input-8, 270] [/input-8, 270] 
pruning_in_iteration open status: True
ratio of positive domain = 73 / 268 = 0.2723880597014925
pruning-in-iteration extra time: 0.0034606456756591797
Time: prepare 0.0051    bound 0.1635    transfer 0.0009    finalize 0.0015    func 0.1711    
Accumulated time: func 0.6174    prepare 0.0228    bound 0.5826    transfer 0.0058    finalize 0.0071    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04079 (21), -0.03900 (21), -0.03830 (21), -0.03698 (21), -0.03650 (21), -0.03560 (21), -0.03448 (21), -0.03391 (21), -0.03388 (21), -0.03311 (21), -0.03295 (21), -0.03222 (21), -0.03208 (21), -0.03141 (21), -0.03137 (21), -0.03046 (21), -0.03006 (21), -0.02983 (21), -0.02973 (21), -0.02957 (21), 
Length of domains: 195
Time: pickout 0.0016    decision 0.0145    set_bounds 0.0069    solve 0.1711    add 0.0029    
Accumulated time: pickout 0.0043    decision 0.0814    set_bounds 0.0622    solve 0.6178    add 0.0171    
Current (lb-rhs): -0.04079389572143555
280 domains visited
Cumulative time: 0.7893757820129395

BaB round 5
batch: 195
splitting decisions: 
split level 0: [/input-8, 403] [/input-8, 64] [/input-8, 64] [/input-8, 64] [/input-8, 64] [/input-8, 64] [/input-8, 403] [/input-8, 64] [/input-8, 64] [/input-8, 64] 
pruning_in_iteration open status: True
ratio of positive domain = 112 / 390 = 0.28717948717948716
pruning-in-iteration extra time: 0.0037093162536621094
Time: prepare 0.0076    bound 0.1724    transfer 0.0012    finalize 0.0021    func 0.1834    
Accumulated time: func 0.8008    prepare 0.0305    bound 0.7551    transfer 0.0071    finalize 0.0092    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03946 (22), -0.03755 (22), -0.03696 (22), -0.03568 (22), -0.03505 (22), -0.03418 (22), -0.03318 (22), -0.03272 (22), -0.03198 (22), -0.03170 (22), -0.03168 (22), -0.03101 (22), -0.03022 (22), -0.03007 (22), -0.02945 (22), -0.02919 (22), -0.02864 (22), -0.02851 (22), -0.02824 (22), -0.02822 (22), 
Length of domains: 278
Time: pickout 0.0035    decision 0.0226    set_bounds 0.0092    solve 0.1835    add 0.0020    
Accumulated time: pickout 0.0078    decision 0.1040    set_bounds 0.0714    solve 0.8013    add 0.0191    
Current (lb-rhs): -0.03946256637573242
558 domains visited
Cumulative time: 1.0109784603118896

BaB round 6
batch: 278
splitting decisions: 
split level 0: [/input-8, 817] [/input-8, 817] [/input-8, 817] [/input-8, 817] [/input-8, 403] [/input-8, 64] [/input-8, 403] [/input-8, 403] [/input-8, 817] [/input-8, 817] 
pruning_in_iteration open status: True
ratio of positive domain = 199 / 556 = 0.3579136690647482
pruning-in-iteration extra time: 0.004308462142944336
Time: prepare 0.0108    bound 0.2539    transfer 0.0034    finalize 0.0032    func 0.2713    
Accumulated time: func 1.0721    prepare 0.0415    bound 1.0089    transfer 0.0104    finalize 0.0124    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03754 (23), -0.03552 (23), -0.03504 (23), -0.03378 (23), -0.03301 (23), -0.03214 (23), -0.03128 (23), -0.03088 (23), -0.02986 (23), -0.02979 (23), -0.02963 (23), -0.02915 (23), -0.02838 (23), -0.02784 (23), -0.02732 (23), -0.02729 (23), -0.02680 (23), -0.02665 (23), -0.02633 (23), -0.02610 (23), 
Length of domains: 357
Time: pickout 0.0045    decision 0.0289    set_bounds 0.0119    solve 0.2714    add 0.0046    
Accumulated time: pickout 0.0123    decision 0.1330    set_bounds 0.0833    solve 1.0727    add 0.0237    
Current (lb-rhs): -0.03754281997680664
915 domains visited
Cumulative time: 1.3334105014801025

BaB round 7
batch: 357
splitting decisions: 
split level 0: [/input, 2133] [/input, 2133] [/input, 2133] [/input, 2133] [/input, 2133] [/input, 2133] [/input, 2133] [/input, 2133] [/input, 2133] [/input, 2133] 
pruning_in_iteration open status: True
ratio of positive domain = 155 / 714 = 0.21708683473389356
pruning-in-iteration extra time: 0.004569530487060547
Time: prepare 0.0174    bound 0.2042    transfer 0.0077    finalize 0.0039    func 0.2332    
Accumulated time: func 1.3053    prepare 0.0591    bound 1.2131    transfer 0.0181    finalize 0.0162    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03450 (24), -0.03385 (24), -0.03236 (24), -0.03205 (24), -0.03171 (24), -0.03112 (24), -0.03069 (24), -0.03004 (24), -0.02991 (24), -0.02897 (24), -0.02892 (24), -0.02827 (24), -0.02824 (24), -0.02784 (24), -0.02731 (24), -0.02719 (24), -0.02674 (24), -0.02666 (24), -0.02646 (24), -0.02609 (24), 
Length of domains: 559
Time: pickout 0.0062    decision 0.0339    set_bounds 0.0061    solve 0.2334    add 0.0036    
Accumulated time: pickout 0.0185    decision 0.1669    set_bounds 0.0894    solve 1.3061    add 0.0273    
Current (lb-rhs): -0.0344996452331543
1474 domains visited
Cumulative time: 1.6178960800170898

BaB round 8
batch: 559
splitting decisions: 
split level 0: [/input, 424] [/input, 424] [/input, 424] [/input-8, 1331] [/input, 424] [/input, 481] [/input-8, 1618] [/input, 481] [/input-8, 1618] [/input-8, 1331] 
pruning_in_iteration open status: True
ratio of positive domain = 282 / 1118 = 0.2522361359570662
pruning-in-iteration extra time: 0.004737377166748047
Time: prepare 0.0277    bound 0.2531    transfer 0.0065    finalize 0.0072    func 0.2947    
Accumulated time: func 1.6000    prepare 0.0870    bound 1.4663    transfer 0.0246    finalize 0.0234    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03218 (25), -0.03155 (25), -0.02992 (25), -0.02973 (25), -0.02967 (25), -0.02928 (25), -0.02904 (25), -0.02881 (25), -0.02779 (25), -0.02748 (25), -0.02742 (25), -0.02723 (25), -0.02716 (25), -0.02678 (25), -0.02655 (25), -0.02630 (25), -0.02597 (25), -0.02552 (25), -0.02535 (25), -0.02533 (25), 
Length of domains: 836
Time: pickout 0.0117    decision 0.0387    set_bounds 0.0220    solve 0.2949    add 0.0092    
Accumulated time: pickout 0.0302    decision 0.2055    set_bounds 0.1114    solve 1.6010    add 0.0365    
Current (lb-rhs): -0.032176971435546875
2310 domains visited
Cumulative time: 1.9961867332458496

BaB round 9
batch: 836
splitting decisions: 
split level 0: [/input, 481] [/input-8, 1331] [/input, 481] [/input-8, 861] [/input-8, 1331] [/input, 481] [/input-8, 1331] [/input-8, 861] [/input, 481] [/input-8, 861] 
pruning_in_iteration open status: True
ratio of positive domain = 489 / 1672 = 0.29246411483253587
pruning-in-iteration extra time: 0.004744768142700195
Time: prepare 0.0405    bound 0.1731    transfer 0.0062    finalize 0.0096    func 0.2296    
Accumulated time: func 1.8296    prepare 0.1278    bound 1.6394    transfer 0.0308    finalize 0.0330    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02963 (26), -0.02901 (26), -0.02866 (26), -0.02804 (26), -0.02733 (26), -0.02720 (26), -0.02712 (26), -0.02671 (26), -0.02650 (26), -0.02636 (26), -0.02627 (26), -0.02623 (26), -0.02614 (26), -0.02574 (26), -0.02552 (26), -0.02539 (26), -0.02530 (26), -0.02490 (26), -0.02482 (26), -0.02477 (26), 
Length of domains: 1183
Time: pickout 0.0150    decision 0.0608    set_bounds 0.0324    solve 0.2300    add 0.0072    
Accumulated time: pickout 0.0452    decision 0.2663    set_bounds 0.1438    solve 1.8310    add 0.0436    
Current (lb-rhs): -0.02963113784790039
3493 domains visited
Cumulative time: 2.34421443939209

BaB round 10
batch: 1183
splitting decisions: 
split level 0: [/input-8, 861] [/input-8, 75] [/input-8, 861] [/input, 449] [/input-8, 861] [/input, 449] [/input-8, 75] [/input-8, 861] [/input-8, 861] [/input-8, 861] 
pruning_in_iteration open status: True
ratio of positive domain = 1103 / 2366 = 0.4661876584953508
pruning-in-iteration extra time: 0.0048656463623046875
Time: prepare 0.0577    bound 0.2374    transfer 0.0150    finalize 0.0142    func 0.3253    
Accumulated time: func 2.1549    prepare 0.1857    bound 1.8768    transfer 0.0459    finalize 0.0472    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02834 (27), -0.02773 (27), -0.02738 (27), -0.02676 (27), -0.02592 (27), -0.02587 (27), -0.02581 (27), -0.02525 (27), -0.02521 (27), -0.02499 (27), -0.02496 (27), -0.02491 (27), -0.02486 (27), -0.02430 (27), -0.02424 (27), -0.02403 (27), -0.02344 (27), -0.02339 (27), -0.02334 (27), -0.02285 (27), 
Length of domains: 1263
Time: pickout 0.0208    decision 0.0792    set_bounds 0.0455    solve 0.3258    add 0.0084    
Accumulated time: pickout 0.0660    decision 0.3455    set_bounds 0.1893    solve 2.1568    add 0.0520    
Current (lb-rhs): -0.02834033966064453
4756 domains visited
Cumulative time: 2.829669952392578

BaB round 11
batch: 1263
splitting decisions: 
split level 0: [/input, 2726] [/input, 2726] [/input-8, 75] [/input-8, 75] [/input-8, 1629] [/input-8, 1629] [/input, 2726] [/input, 2726] [/input-8, 75] [/input, 2726] 
pruning_in_iteration open status: True
ratio of positive domain = 1206 / 2526 = 0.4774346793349169
pruning-in-iteration extra time: 0.004815816879272461
Time: prepare 0.0657    bound 0.2637    transfer 0.0198    finalize 0.0155    func 0.3649    
Accumulated time: func 2.5198    prepare 0.2516    bound 2.1405    transfer 0.0657    finalize 0.0627    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02669 (28), -0.02608 (28), -0.02573 (28), -0.02512 (28), -0.02426 (28), -0.02415 (28), -0.02354 (28), -0.02333 (28), -0.02330 (28), -0.02320 (28), -0.02274 (28), -0.02265 (28), -0.02259 (28), -0.02239 (28), -0.02237 (28), -0.02199 (28), -0.02178 (28), -0.02172 (28), -0.02170 (28), -0.02145 (28), 
Length of domains: 1320
Time: pickout 0.0236    decision 0.0836    set_bounds 0.2020    solve 0.3660    add 0.0099    
Accumulated time: pickout 0.0896    decision 0.4290    set_bounds 0.3913    solve 2.5228    add 0.0619    
Current (lb-rhs): -0.02669382095336914
6076 domains visited
Cumulative time: 3.5207712650299072

BaB round 12
batch: 1320
splitting decisions: 
split level 0: [/input-8, 1629] [/input-8, 1629] [/input-8, 75] [/input-8, 1618] [/input-8, 1629] [/input, 2726] [/input, 3994] [/input-8, 1629] [/input-8, 970] [/input-8, 970] 
pruning_in_iteration open status: True
ratio of positive domain = 1080 / 2640 = 0.40909090909090906
pruning-in-iteration extra time: 0.004885435104370117
Time: prepare 0.0655    bound 0.2640    transfer 0.0127    finalize 0.0153    func 0.3578    
Accumulated time: func 2.8776    prepare 0.3173    bound 2.4045    transfer 0.0783    finalize 0.0780    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02358 (29), -0.02349 (29), -0.02323 (29), -0.02283 (29), -0.02262 (29), -0.02253 (29), -0.02227 (29), -0.02188 (29), -0.02124 (29), -0.02110 (29), -0.02105 (29), -0.02103 (29), -0.02101 (29), -0.02094 (29), -0.02074 (29), -0.02068 (29), -0.02063 (29), -0.02034 (29), -0.02029 (29), -0.02028 (29), 
Length of domains: 1560
Time: pickout 0.0251    decision 0.0871    set_bounds 0.0526    solve 0.3589    add 0.0190    
Accumulated time: pickout 0.1147    decision 0.5161    set_bounds 0.4439    solve 2.8817    add 0.0810    
Current (lb-rhs): -0.023582935333251953
7636 domains visited
Cumulative time: 4.069277763366699

BaB round 13
batch: 1560
splitting decisions: 
split level 0: [/input-8, 678] [/input, 2726] [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input, 2726] [/input-8, 678] [/input, 2726] [/input-8, 75] [/input-8, 75] 
pruning_in_iteration open status: True
ratio of positive domain = 1183 / 3120 = 0.37916666666666665
pruning-in-iteration extra time: 0.004922151565551758
Time: prepare 0.0782    bound 0.2795    transfer 0.0083    finalize 0.0182    func 0.3853    
Accumulated time: func 3.2628    prepare 0.3957    bound 2.6841    transfer 0.0866    finalize 0.0962    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02157 (30), -0.02149 (30), -0.02121 (30), -0.02082 (30), -0.02061 (30), -0.02053 (30), -0.02025 (30), -0.01986 (30), -0.01953 (30), -0.01945 (30), -0.01931 (30), -0.01909 (30), -0.01901 (30), -0.01899 (30), -0.01893 (30), -0.01871 (30), -0.01868 (30), -0.01865 (30), -0.01857 (30), -0.01849 (30), 
Length of domains: 1937
Time: pickout 0.0315    decision 0.0927    set_bounds 0.0614    solve 0.3859    add 0.0088    
Accumulated time: pickout 0.1462    decision 0.6089    set_bounds 0.5053    solve 3.2676    add 0.0898    
Current (lb-rhs): -0.02157306671142578
9573 domains visited
Cumulative time: 4.6569390296936035

BaB round 14
batch: 1937
splitting decisions: 
split level 0: [/input, 2726] [/input, 3994] [/input, 2726] [/input-8, 1629] [/input, 2726] [/input, 3994] [/input-8, 1629] [/input, 2726] [/input, 3994] [/input, 2726] 
pruning_in_iteration open status: True
ratio of positive domain = 1549 / 3874 = 0.3998451213216314
pruning-in-iteration extra time: 0.004925966262817383
Time: prepare 0.0989    bound 0.3115    transfer 0.0133    finalize 0.0226    func 0.4467    
Accumulated time: func 3.7095    prepare 0.4949    bound 2.9956    transfer 0.0999    finalize 0.1188    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01858 (31), -0.01849 (31), -0.01844 (31), -0.01836 (31), -0.01821 (31), -0.01808 (31), -0.01783 (31), -0.01768 (31), -0.01762 (31), -0.01754 (31), -0.01748 (31), -0.01740 (31), -0.01725 (31), -0.01712 (31), -0.01686 (31), -0.01679 (31), -0.01672 (31), -0.01648 (31), -0.01640 (31), -0.01636 (31), 
Length of domains: 2325
Time: pickout 0.0374    decision 0.1200    set_bounds 0.2264    solve 0.4478    add 0.0088    
Accumulated time: pickout 0.1836    decision 0.7289    set_bounds 0.7317    solve 3.7154    add 0.0986    
Current (lb-rhs): -0.01857614517211914
11898 domains visited
Cumulative time: 5.506328344345093

BaB round 15
batch: 2325
splitting decisions: 
split level 0: [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 1618] [/input, 2726] [/input-8, 678] [/input-8, 1618] 
pruning_in_iteration open status: True
ratio of positive domain = 2547 / 4650 = 0.547741935483871
pruning-in-iteration extra time: 0.004908084869384766
Time: prepare 0.1170    bound 0.2939    transfer 0.0162    finalize 0.0273    func 0.4556    
Accumulated time: func 4.1651    prepare 0.6121    bound 3.2894    transfer 0.1162    finalize 0.1461    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01736 (32), -0.01728 (32), -0.01726 (32), -0.01718 (32), -0.01700 (32), -0.01690 (32), -0.01660 (32), -0.01651 (32), -0.01641 (32), -0.01632 (32), -0.01630 (32), -0.01622 (32), -0.01603 (32), -0.01594 (32), -0.01564 (32), -0.01555 (32), -0.01523 (32), -0.01516 (32), -0.01516 (32), -0.01509 (32), 
Length of domains: 2103
Time: pickout 0.0501    decision 0.1414    set_bounds 0.0948    solve 0.4564    add 0.0145    
Accumulated time: pickout 0.2337    decision 0.8703    set_bounds 0.8264    solve 4.1718    add 0.1131    
Current (lb-rhs): -0.017358779907226562
14001 domains visited
Cumulative time: 6.277951717376709

BaB round 16
batch: 2103
splitting decisions: 
split level 0: [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input, 2726] [/input, 2726] [/input, 2726] [/input, 2726] [/input-8, 678] [/input-8, 678] [/input-8, 678] 
pruning_in_iteration open status: True
ratio of positive domain = 2342 / 4206 = 0.5568235853542558
pruning-in-iteration extra time: 0.004922151565551758
Time: prepare 0.1038    bound 0.2936    transfer 0.0210    finalize 0.1407    func 0.5603    
Accumulated time: func 4.7254    prepare 0.7161    bound 3.5831    transfer 0.1371    finalize 0.2868    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01643 (33), -0.01633 (33), -0.01612 (33), -0.01606 (33), -0.01603 (33), -0.01597 (33), -0.01567 (33), -0.01558 (33), -0.01538 (33), -0.01538 (33), -0.01529 (33), -0.01525 (33), -0.01511 (33), -0.01479 (33), -0.01471 (33), -0.01439 (33), -0.01428 (33), -0.01421 (33), -0.01415 (33), -0.01407 (33), 
Length of domains: 1864
Time: pickout 0.0430    decision 0.1257    set_bounds 0.0839    solve 0.5612    add 0.0129    
Accumulated time: pickout 0.2767    decision 0.9960    set_bounds 0.9103    solve 4.7330    add 0.1260    
Current (lb-rhs): -0.01642894744873047
15865 domains visited
Cumulative time: 7.116432189941406

BaB round 17
batch: 1864
splitting decisions: 
split level 0: [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 844] 
pruning_in_iteration open status: True
ratio of positive domain = 2099 / 3728 = 0.5630364806866952
pruning-in-iteration extra time: 0.004870414733886719
Time: prepare 0.0942    bound 0.2768    transfer 0.0095    finalize 0.0221    func 0.4033    
Accumulated time: func 5.1287    prepare 0.8105    bound 3.8598    transfer 0.1466    finalize 0.3088    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01527 (34), -0.01519 (34), -0.01518 (34), -0.01510 (34), -0.01491 (34), -0.01482 (34), -0.01452 (34), -0.01442 (34), -0.01431 (34), -0.01423 (34), -0.01422 (34), -0.01414 (34), -0.01395 (34), -0.01385 (34), -0.01356 (34), -0.01346 (34), -0.01312 (34), -0.01307 (34), -0.01304 (34), -0.01299 (34), 
Length of domains: 1629
Time: pickout 0.0394    decision 0.1160    set_bounds 0.0766    solve 0.4041    add 0.0066    
Accumulated time: pickout 0.3161    decision 1.1120    set_bounds 0.9869    solve 5.1371    add 0.1326    
Current (lb-rhs): -0.0152740478515625
17494 domains visited
Cumulative time: 7.769163131713867

BaB round 18
batch: 1629
splitting decisions: 
split level 0: [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input, 424] [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input, 424] [/input-8, 970] 
pruning_in_iteration open status: True
ratio of positive domain = 1939 / 3258 = 0.5951503990178023
pruning-in-iteration extra time: 0.004792213439941406
Time: prepare 0.0807    bound 0.2277    transfer 0.0083    finalize 0.0186    func 0.3357    
Accumulated time: func 5.4644    prepare 0.8915    bound 4.0875    transfer 0.1549    finalize 0.3275    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01394 (35), -0.01386 (35), -0.01384 (35), -0.01376 (35), -0.01357 (35), -0.01348 (35), -0.01318 (35), -0.01308 (35), -0.01297 (35), -0.01290 (35), -0.01289 (35), -0.01280 (35), -0.01261 (35), -0.01253 (35), -0.01222 (35), -0.01213 (35), -0.01178 (35), -0.01173 (35), -0.01170 (35), -0.01165 (35), 
Length of domains: 1319
Time: pickout 0.0353    decision 0.1031    set_bounds 0.0653    solve 0.3363    add 0.0082    
Accumulated time: pickout 0.3515    decision 1.2151    set_bounds 1.0522    solve 5.4735    add 0.1408    
Current (lb-rhs): -0.01393890380859375
18813 domains visited
Cumulative time: 8.326902389526367

BaB round 19
batch: 1319
splitting decisions: 
split level 0: [/input-8, 67] [/input-8, 67] [/input-8, 67] [/input-8, 67] [/input-8, 67] [/input-8, 67] [/input-8, 67] [/input-8, 67] [/input-8, 844] [/input-8, 844] 
pruning_in_iteration open status: True
ratio of positive domain = 1594 / 2638 = 0.6042456406368462
pruning-in-iteration extra time: 0.0047299861907958984
Time: prepare 0.0666    bound 0.1880    transfer 0.0067    finalize 0.0145    func 0.2760    
Accumulated time: func 5.7404    prepare 0.9583    bound 4.2755    transfer 0.1616    finalize 0.3419    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01310 (36), -0.01303 (36), -0.01298 (36), -0.01291 (36), -0.01275 (36), -0.01263 (36), -0.01234 (36), -0.01222 (36), -0.01214 (36), -0.01206 (36), -0.01202 (36), -0.01195 (36), -0.01179 (36), -0.01167 (36), -0.01138 (36), -0.01127 (36), -0.01090 (36), -0.01085 (36), -0.01079 (36), -0.01075 (36), 
Length of domains: 1044
Time: pickout 0.0282    decision 0.0868    set_bounds 0.2002    solve 0.2770    add 0.0059    
Accumulated time: pickout 0.3797    decision 1.3019    set_bounds 1.2524    solve 5.7504    add 0.1468    
Current (lb-rhs): -0.01310110092163086
19857 domains visited
Cumulative time: 8.933363676071167

BaB round 20
batch: 1044
splitting decisions: 
split level 0: [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input-8, 67] [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input-8, 67] 
pruning_in_iteration open status: True
ratio of positive domain = 1155 / 2088 = 0.5531609195402298
pruning-in-iteration extra time: 0.004893302917480469
Time: prepare 0.0519    bound 0.2799    transfer 0.0053    finalize 0.0131    func 0.3504    
Accumulated time: func 6.0908    prepare 1.0103    bound 4.5554    transfer 0.1669    finalize 0.3551    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01100 (37), -0.01088 (37), -0.01088 (37), -0.01076 (37), -0.01061 (37), -0.01050 (37), -0.01026 (37), -0.01014 (37), -0.01004 (37), -0.00992 (37), -0.00992 (37), -0.00980 (37), -0.00977 (37), -0.00967 (37), -0.00966 (37), -0.00965 (37), -0.00957 (37), -0.00955 (37), -0.00954 (37), -0.00945 (37), 
Length of domains: 933
Time: pickout 0.0227    decision 0.0713    set_bounds 0.0416    solve 0.3508    add 0.0031    
Accumulated time: pickout 0.4024    decision 1.3732    set_bounds 1.2940    solve 6.1013    add 0.1498    
Current (lb-rhs): -0.010999202728271484
20790 domains visited
Cumulative time: 9.428543329238892

BaB round 21
batch: 933
splitting decisions: 
split level 0: [/input, 3994] [/input-8, 67] [/input, 3994] [/input-8, 67] [/input, 3994] [/input-8, 67] [/input-8, 67] [/input, 3994] [/input-8, 67] [/input, 3994] 
pruning_in_iteration open status: True
ratio of positive domain = 1003 / 1866 = 0.537513397642015
pruning-in-iteration extra time: 0.004854440689086914
Time: prepare 0.0466    bound 0.2904    transfer 0.0048    finalize 0.0109    func 0.3540    
Accumulated time: func 6.4449    prepare 1.0571    bound 4.8459    transfer 0.1718    finalize 0.3660    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00925 (38), -0.00913 (38), -0.00912 (38), -0.00900 (38), -0.00885 (38), -0.00873 (38), -0.00850 (38), -0.00839 (38), -0.00828 (38), -0.00817 (38), -0.00816 (38), -0.00804 (38), -0.00795 (38), -0.00788 (38), -0.00787 (38), -0.00783 (38), -0.00777 (38), -0.00776 (38), -0.00775 (38), -0.00764 (38), 
Length of domains: 863
Time: pickout 0.0205    decision 0.0653    set_bounds 0.0366    solve 0.3545    add 0.0041    
Accumulated time: pickout 0.4229    decision 1.4385    set_bounds 1.3306    solve 6.4557    add 0.1540    
Current (lb-rhs): -0.009246349334716797
21653 domains visited
Cumulative time: 9.915576457977295

BaB round 22
batch: 863
splitting decisions: 
split level 0: [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input-8, 1847] [/input-8, 1847] [/input-8, 1847] [/input-8, 1847] 
pruning_in_iteration open status: True
ratio of positive domain = 846 / 1726 = 0.4901506373117034
pruning-in-iteration extra time: 0.004800319671630859
Time: prepare 0.0425    bound 0.2421    transfer 0.0045    finalize 0.0115    func 0.3008    
Accumulated time: func 6.7456    prepare 1.0998    bound 5.0880    transfer 0.1762    finalize 0.3775    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00784 (39), -0.00773 (39), -0.00772 (39), -0.00760 (39), -0.00745 (39), -0.00733 (39), -0.00709 (39), -0.00698 (39), -0.00689 (39), -0.00677 (39), -0.00676 (39), -0.00665 (39), -0.00655 (39), -0.00649 (39), -0.00647 (39), -0.00643 (39), -0.00637 (39), -0.00635 (39), -0.00635 (39), -0.00623 (39), 
Length of domains: 880
Time: pickout 0.0199    decision 0.0618    set_bounds 0.0343    solve 0.3011    add 0.0030    
Accumulated time: pickout 0.4428    decision 1.5003    set_bounds 1.3649    solve 6.7569    add 0.1570    
Current (lb-rhs): -0.00784444808959961
22533 domains visited
Cumulative time: 10.340374231338501

BaB round 23
batch: 880
splitting decisions: 
split level 0: [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] 
pruning_in_iteration open status: True
ratio of positive domain = 1115 / 1760 = 0.6335227272727273
pruning-in-iteration extra time: 0.004741668701171875
Time: prepare 0.0436    bound 0.1819    transfer 0.0046    finalize 0.0102    func 0.2403    
Accumulated time: func 6.9860    prepare 1.1436    bound 5.2699    transfer 0.1808    finalize 0.3876    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00700 (40), -0.00689 (40), -0.00688 (40), -0.00676 (40), -0.00660 (40), -0.00648 (40), -0.00624 (40), -0.00611 (40), -0.00605 (40), -0.00593 (40), -0.00592 (40), -0.00581 (40), -0.00564 (40), -0.00558 (40), -0.00552 (40), -0.00550 (40), -0.00547 (40), -0.00540 (40), -0.00538 (40), -0.00538 (40), 
Length of domains: 645
Time: pickout 0.0202    decision 0.0627    set_bounds 0.0348    solve 0.2407    add 0.0061    
Accumulated time: pickout 0.4630    decision 1.5629    set_bounds 1.3997    solve 6.9975    add 0.1631    
Current (lb-rhs): -0.007000923156738281
23178 domains visited
Cumulative time: 10.709439516067505

BaB round 24
batch: 645
splitting decisions: 
split level 0: [/input-8, 1935] [/input-8, 1935] [/input, 424] [/input-8, 1935] [/input, 424] [/input-8, 1935] [/input-8, 1935] [/input-8, 1935] [/input-8, 1935] [/input, 424] 
pruning_in_iteration open status: True
ratio of positive domain = 891 / 1290 = 0.6906976744186046
pruning-in-iteration extra time: 0.004868745803833008
Time: prepare 0.0325    bound 0.3869    transfer 0.0068    finalize 0.0075    func 0.4338    
Accumulated time: func 7.4198    prepare 1.1763    bound 5.6568    transfer 0.1876    finalize 0.3952    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00530 (41), -0.00517 (41), -0.00517 (41), -0.00505 (41), -0.00489 (41), -0.00477 (41), -0.00453 (41), -0.00441 (41), -0.00434 (41), -0.00422 (41), -0.00422 (41), -0.00410 (41), -0.00393 (41), -0.00388 (41), -0.00381 (41), -0.00379 (41), -0.00376 (41), -0.00369 (41), -0.00367 (41), -0.00366 (41), 
Length of domains: 399
Time: pickout 0.0171    decision 0.0500    set_bounds 0.0252    solve 0.4341    add 0.0030    
Accumulated time: pickout 0.4800    decision 1.6130    set_bounds 1.4248    solve 7.4316    add 0.1661    
Current (lb-rhs): -0.0052967071533203125
23577 domains visited
Cumulative time: 11.24337363243103

BaB round 25
batch: 399
splitting decisions: 
split level 0: [/input-8, 1734] [/input-8, 1734] [/input-8, 1734] [/input-8, 1734] [/input-8, 1734] [/input-8, 1734] [/input-8, 1734] [/input-8, 1734] [/input-8, 1734] [/input-8, 1734] 
pruning_in_iteration open status: True
ratio of positive domain = 627 / 798 = 0.7857142857142857
pruning-in-iteration extra time: 0.004839181900024414
Time: prepare 0.0197    bound 0.2447    transfer 0.0024    finalize 0.0048    func 0.2717    
Accumulated time: func 7.6915    prepare 1.1962    bound 5.9014    transfer 0.1899    finalize 0.4000    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00408 (42), -0.00396 (42), -0.00396 (42), -0.00384 (42), -0.00368 (42), -0.00356 (42), -0.00332 (42), -0.00319 (42), -0.00313 (42), -0.00301 (42), -0.00300 (42), -0.00289 (42), -0.00272 (42), -0.00267 (42), -0.00260 (42), -0.00258 (42), -0.00255 (42), -0.00247 (42), -0.00246 (42), -0.00245 (42), 
Length of domains: 171
Time: pickout 0.0112    decision 0.0363    set_bounds 0.0159    solve 0.2718    add 0.0025    
Accumulated time: pickout 0.4912    decision 1.6493    set_bounds 1.4407    solve 7.7035    add 0.1686    
Current (lb-rhs): -0.004083156585693359
23748 domains visited
Cumulative time: 11.583475828170776

BaB round 26
batch: 171
splitting decisions: 
split level 0: [/input, 3192] [/input, 3192] [/input, 3192] [/input, 3192] [/input, 3192] [/input, 3192] [/input, 3192] [/input, 3192] [/input, 3192] [/input, 3192] 
pruning_in_iteration open status: True
ratio of positive domain = 290 / 342 = 0.847953216374269
pruning-in-iteration extra time: 0.004861593246459961
Time: prepare 0.0085    bound 0.1402    transfer 0.0018    finalize 0.0020    func 0.1526    
Accumulated time: func 7.8440    prepare 1.2049    bound 6.0417    transfer 0.1917    finalize 0.4020    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00238 (43), -0.00227 (43), -0.00226 (43), -0.00214 (43), -0.00198 (43), -0.00186 (43), -0.00161 (43), -0.00149 (43), -0.00143 (43), -0.00133 (43), -0.00131 (43), -0.00130 (43), -0.00123 (43), -0.00121 (43), -0.00118 (43), -0.00111 (43), -0.00102 (43), -0.00097 (43), -0.00093 (43), -0.00089 (43), 
Length of domains: 52
Time: pickout 0.0049    decision 0.0241    set_bounds 0.0068    solve 0.1527    add 0.0018    
Accumulated time: pickout 0.4961    decision 1.6734    set_bounds 1.4474    solve 7.8561    add 0.1705    
Current (lb-rhs): -0.0023832321166992188
23800 domains visited
Cumulative time: 11.774957656860352

BaB round 27
batch: 52
splitting decisions: 
split level 0: [/input-8, 1861] [/input-8, 1861] [/input-8, 1861] [/input-8, 1861] [/input-8, 1861] [/input-8, 1861] [/input-8, 1861] [/input-8, 1861] [/input-8, 1861] [/input-8, 1861] 
split level 1: [/input, 424] [/input, 424] [/input, 424] [/input, 424] [/input, 424] [/input, 424] [/input, 424] [/input, 424] [/input, 424] [/input, 424] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 208 / 208 = 1.0
pruning-in-iteration extra time: 4.291534423828125e-05
Time: prepare 0.0055    bound 0.0038    transfer 0.0010    finalize 0.0011    func 0.0115    
Accumulated time: func 7.8556    prepare 1.2106    bound 6.0455    transfer 0.1927    finalize 0.4031    
all_split False
Length of domains: 0
Time: pickout 0.0023    decision 0.0193    set_bounds 0.0075    solve 0.0116    add 0.0001    
Accumulated time: pickout 0.4983    decision 1.6927    set_bounds 1.4550    solve 7.8677    add 0.1705    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
23800 domains visited
Cumulative time: 11.816219091415405


Properties batch 8, size 1
Remaining timeout: 185.98535084724426
Verifying property 8 with 1 instances.
##### Instance 89 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.565826177597046.
Result: safe in 14.1241 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 90, vnnlib ID: 90 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-3.92437601, -4.53821707, -1.81814766, -0.89523673, -2.18286943,
         -1.50445235, -2.81978679, -2.90949965, -4.78050327, -3.54446316]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [640]; unstable size 640; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 228, 1, 640] with unstable size 227 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 640] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 640] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [227]; unstable size 227; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 227] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 227] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.54901522, -0.55123281, -2.14694476, -2.65342474, -1.82377028,
         -2.15827703, -1.06202722,  0.01771551, -1.15435910]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.92437601, -4.53821707, -1.81814766, -0.89523673, -2.18286943,
         -1.50445235, -2.81978679, -2.90949965, -4.78050327, -3.54446316]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.92437601, -4.53821659, -1.81814742, -0.89523673, -2.18286896,
          -1.50445259, -2.81978631, -2.90949917, -4.78050327, -3.54446268],
         [-3.92437601, -4.53821659, -1.81814742, -0.89523673, -2.18286896,
          -1.50445259, -2.81978631, -2.90949917, -4.78050327, -3.54446268]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.10458970,  1.71843028, -1.00163889, -1.92454958, -0.63691735,
          -1.31533372,  0.08971286,  0.72467637]]], device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         ...,


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]]]], device='cuda:0') torch.Size([1, 8, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0893 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 91, vnnlib ID: 91 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.28595638,  -5.88002491, -13.45972347, -12.72046280, -11.91884041,
         -13.39254284, -13.69190216, -11.92345619, -11.07378769,  -5.33333635]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [628]; unstable size 628; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 195, 1, 628] with unstable size 194 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 628] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 628] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [194]; unstable size 194; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 194] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 194] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.77330160,  5.60239220,  4.83423901,  3.93323135,  5.32919073,
          5.82401466,  3.69637489,  3.85418415, -1.36576080]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.28595638,  -5.88002491, -13.45972347, -12.72046280, -11.91884041,
         -13.39254284, -13.69190216, -11.92345619, -11.07378769,  -5.33333635]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.28595638,  -5.88002491, -13.45972347, -12.72046280, -11.91884041,
          -13.39254284, -13.69190216, -11.92345619, -11.07378769,  -5.33333635]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.54668856]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.32222211, -1.24285710, -1.14761901,  ..., -1.32222211,
            -1.32222211, -1.21111107],
           [-1.25873005, -1.24285710, -1.16349196,  ..., -1.32222211,
            -1.32222211, -1.32222211],
           [-1.22698402, -1.22698402, -1.21111107,  ..., -1.33809519,
            -1.32222211, -1.21111107],
           ...,
           [ 0.97936511,  0.99523818,  0.99523818,  ...,  1.04285717,
             1.05873048,  1.04285717],
           [ 1.04285717,  1.04285717,  1.02698421,  ...,  1.05873048,
             1.10634947,  1.13809550],
           [ 1.04285717,  1.04285717,  1.04285717,  ...,  1.01111114,
             1.07460344,  1.07460344]],

          [[-1.56199670, -1.48148143, -1.38486302,  ..., -1.46537840,
            -1.46537840, -1.35265696],
           [-1.44927526, -1.43317223, -1.35265696,  ..., -1.46537840,
            -1.46537840, -1.46537840],
           [-1.40096617, -1.40096617, -1.38486302,  ..., -1.48148143,
            -1.46537840, -1.35265696],
           ...,
           [ 0.72463775,  0.74074084,  0.74074084,  ...,  0.86956531,
             0.88566834,  0.86956531],
           [ 0.78904998,  0.78904998,  0.77294695,  ...,  0.88566834,
             0.93397754,  0.96618366],
           [ 0.78904998,  0.78904998,  0.78904998,  ...,  0.83735919,
             0.90177143,  0.90177143]],

          [[-1.30284870, -1.22788620, -1.13793111,  ..., -1.25787115,
            -1.25787115, -1.15292358],
           [-1.21289361, -1.19790113, -1.12293863,  ..., -1.25787115,
            -1.25787115, -1.25787115],
           [-1.16791618, -1.16791618, -1.15292358,  ..., -1.27286363,
            -1.25787115, -1.15292358],
           ...,
           [ 0.84107965,  0.85607213,  0.85607213,  ...,  0.94602716,
             0.96101969,  0.94602716],
           [ 0.90104967,  0.90104967,  0.88605714,  ...,  0.96101969,
             1.00599718,  1.03598225],
           [ 0.90104967,  0.90104967,  0.90104967,  ...,  0.91604215,
             0.97601217,  0.97601217]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0744 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 92, vnnlib ID: 92 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.22173882,  -9.89736652,  -4.68373394,  -3.01329088,  -4.28179979,
          -2.86711979,  -5.53003645,  -5.05347300, -11.67127705,  -7.88633108]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [485]; unstable size 485; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 197, 1, 485] with unstable size 196 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 485] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 485] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [196]; unstable size 196; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 196] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 196] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.00222683,  5.24682617,  0.82175827, -0.20462823,  0.32712030,
          1.14493608,  1.33189178,  7.36666679,  3.64896536]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.22173882,  -9.89736652,  -4.68373394,  -3.01329088,  -4.28179979,
          -2.86711979,  -5.53003645,  -5.05347300, -11.67127705,  -7.88633108]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.24767017,  -9.97193718,  -4.73787022,  -3.23425245,  -4.31496525,
           -3.29052877,  -5.42143679,  -5.31018877, -11.66250134,  -7.98117399]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.05627632]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0059 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0745 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 93, vnnlib ID: 93 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.15195465,  -9.58116150, -14.61256504, -15.32470417, -14.07134438,
         -16.02833176, -16.91090012, -13.49322128, -10.77580357, -11.62801266]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [531]; unstable size 531; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 185, 1, 531] with unstable size 184 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 531] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 531] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [184]; unstable size 184; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 184] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 184] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.31977201, 3.21350312, 3.97968531, 2.74568701, 4.38296223, 5.60134411,
         1.73482788, 0.05008960, 1.12907422]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0661 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 94, vnnlib ID: 94 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -6.19431782, -14.89802456,  -8.13741684,  -9.92391682,  -9.58477306,
          -9.65702534, -11.04900360, -13.72198963,  -7.17759037, -14.95812511]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [488]; unstable size 488; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 144, 1, 488] with unstable size 143 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 488] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 488] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [143]; unstable size 143; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 143] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 143] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.41919065,  6.05724716,  1.13111079,  0.98754275,  0.83572423,
          2.28893924,  4.95927334, -1.78601420,  6.10188103]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.19431782, -14.89802456,  -8.13741684,  -9.92391682,  -9.58477306,
          -9.65702534, -11.04900360, -13.72198963,  -7.17759037, -14.95812511]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.19431925, -14.89802551,  -8.13741779,  -9.92391777,  -9.58477402,
           -9.65702629, -11.04900360, -13.72199059,  -7.17759132, -14.95812702],
         [ -6.19431925, -14.89802551,  -8.13741779,  -9.92391777,  -9.58477402,
           -9.65702629, -11.04900360, -13.72199059,  -7.17759132, -14.95812702]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-1.94309855, -0.95982647]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-9.88888860e-01, -8.93650770e-01, -7.66666651e-01,  ...,
            -5.12698412e-01, -2.26984024e-01,  1.36031771e+00],
           [-9.73015904e-01, -9.09523785e-01, -8.14285696e-01,  ...,
            -5.76190472e-01, -4.33333218e-01,  1.53968334e-01],
           [-8.77777755e-01, -8.61904740e-01, -7.82539666e-01,  ...,
            -5.12698412e-01, -4.49206233e-01, -6.82538673e-02],
           ...,
           [-1.27460313e+00, -1.16349196e+00, -1.09999990e+00,  ...,
            -1.14761901e+00, -9.73015904e-01, -8.41268823e-02],
           [-9.73015904e-01, -9.25396800e-01, -8.93650770e-01,  ...,
            -9.25396800e-01, -7.66666651e-01, -6.82538673e-02],
           [ 8.84127021e-01, -1.31745934e-01, -1.95237994e-01,  ...,
            -2.26984024e-01, -2.11111009e-01,  1.53968334e-01]],

          [[ 1.93236828e-01,  3.54267418e-01,  4.34782714e-01,  ...,
             6.60225511e-01,  6.44122481e-01,  1.57810009e+00],
           [ 3.22061300e-01,  4.34782714e-01,  4.83091891e-01,  ...,
             6.76328599e-01,  5.79710245e-01,  4.66988832e-01],
           [ 3.38164359e-01,  4.18679655e-01,  4.50885773e-01,  ...,
             6.44122481e-01,  5.31401038e-01,  2.25442946e-01],
           ...,
           [ 1.22934580e-07,  1.12721533e-01,  1.28824592e-01,  ...,
             2.41546005e-01,  1.12721533e-01,  1.44927651e-01],
           [ 3.22062373e-02, -1.61029361e-02,  1.61031820e-02,  ...,
             1.28824592e-01,  1.61031820e-02,  1.12721533e-01],
           [ 1.30434811e+00,  1.12721533e-01,  9.66184735e-02,  ...,
             1.44927651e-01,  9.66184735e-02,  1.44927651e-01]],

          [[ 1.11094475e+00,  1.24587750e+00,  1.23088503e+00,  ...,
             1.47076499e+00,  1.33583248e+00,  1.84557760e+00],
           [ 1.23088503e+00,  1.32084000e+00,  1.29085493e+00,  ...,
             1.54572761e+00,  1.45577252e+00,  1.00599718e+00],
           [ 1.15592217e+00,  1.21589243e+00,  1.17091501e+00,  ...,
             1.47076499e+00,  1.41079497e+00,  8.11094642e-01],
           ...,
           [ 7.81109631e-01,  1.06596720e+00,  1.06596720e+00,  ...,
             1.06596720e+00,  9.46027160e-01,  8.26087117e-01],
           [ 6.91154599e-01,  8.56072128e-01,  8.56072128e-01,  ...,
             8.86057138e-01,  7.81109631e-01,  7.81109631e-01],
           [ 1.59070504e+00,  7.81109631e-01,  7.06147075e-01,  ...,
             7.21139610e-01,  6.61169589e-01,  7.06147075e-01]]],


         [[[-9.88888860e-01, -8.93650770e-01, -7.66666651e-01,  ...,
            -5.12698412e-01, -2.26984024e-01,  1.36031771e+00],
           [-9.73015904e-01, -9.09523785e-01, -8.14285696e-01,  ...,
            -5.76190472e-01, -4.33333218e-01,  1.53968334e-01],
           [-8.77777755e-01, -8.61904740e-01, -7.82539666e-01,  ...,
            -5.12698412e-01, -4.49206233e-01, -6.82538673e-02],
           ...,
           [-1.27460313e+00, -1.16349196e+00, -1.09999990e+00,  ...,
            -1.14761901e+00, -9.73015904e-01, -8.41268823e-02],
           [-9.73015904e-01, -9.25396800e-01, -8.93650770e-01,  ...,
            -9.25396800e-01, -7.66666651e-01, -6.82538673e-02],
           [ 8.84127021e-01, -1.31745934e-01, -1.95237994e-01,  ...,
            -2.26984024e-01, -2.11111009e-01,  1.53968334e-01]],

          [[ 1.93236828e-01,  3.54267418e-01,  4.34782714e-01,  ...,
             6.60225511e-01,  6.44122481e-01,  1.57810009e+00],
           [ 3.22061300e-01,  4.34782714e-01,  4.83091891e-01,  ...,
             6.76328599e-01,  5.79710245e-01,  4.66988832e-01],
           [ 3.38164359e-01,  4.18679655e-01,  4.50885773e-01,  ...,
             6.44122481e-01,  5.31401038e-01,  2.25442946e-01],
           ...,
           [ 1.22934580e-07,  1.12721533e-01,  1.28824592e-01,  ...,
             2.41546005e-01,  1.12721533e-01,  1.44927651e-01],
           [ 3.22062373e-02, -1.61029361e-02,  1.61031820e-02,  ...,
             1.28824592e-01,  1.61031820e-02,  1.12721533e-01],
           [ 1.30434811e+00,  1.12721533e-01,  9.66184735e-02,  ...,
             1.44927651e-01,  9.66184735e-02,  1.44927651e-01]],

          [[ 1.11094475e+00,  1.24587750e+00,  1.23088503e+00,  ...,
             1.47076499e+00,  1.33583248e+00,  1.84557760e+00],
           [ 1.23088503e+00,  1.32084000e+00,  1.29085493e+00,  ...,
             1.54572761e+00,  1.45577252e+00,  1.00599718e+00],
           [ 1.15592217e+00,  1.21589243e+00,  1.17091501e+00,  ...,
             1.47076499e+00,  1.41079497e+00,  8.11094642e-01],
           ...,
           [ 7.81109631e-01,  1.06596720e+00,  1.06596720e+00,  ...,
             1.06596720e+00,  9.46027160e-01,  8.26087117e-01],
           [ 6.91154599e-01,  8.56072128e-01,  8.56072128e-01,  ...,
             8.86057138e-01,  7.81109631e-01,  7.81109631e-01],
           [ 1.59070504e+00,  7.81109631e-01,  7.06147075e-01,  ...,
             7.21139610e-01,  6.61169589e-01,  7.06147075e-01]]]]],
       device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0764 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 95, vnnlib ID: 95 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.28730583,  -6.10024929,  -9.28009796,  -8.44915771,  -9.51987553,
          -8.47933578,  -8.97727776, -11.69865417,  -9.80428314,  -9.38548374]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [510]; unstable size 510; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 179, 1, 510] with unstable size 178 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 510] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 510] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [178]; unstable size 178; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 178] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 178] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.50108588,  1.35111046,  0.54155302,  1.42685127,  0.50430536,
          1.14256883,  3.30734301,  2.23950052,  2.31573200]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.28730583,  -6.10024929,  -9.28009796,  -8.44915771,  -9.51987553,
          -8.47933578,  -8.97727776, -11.69865417,  -9.80428314,  -9.38548374]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.95it/s]100%|██████████| 1/1 [00:00<00:00,  8.94it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.63890123,  -6.32812786,  -8.66560364,  -7.82581139,  -8.96019840,
           -7.87306643,  -8.56936741, -11.11590290,  -9.56170082,  -9.26755810]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.31077337]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1144 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 12.919254302978516
alpha/beta optimization time: 1.1301720142364502
initial alpha-crown bounds: tensor([[-0.44015920,  1.42102623,  0.61154652,  1.51242924,  0.57645798,
          1.21278667,  3.40189838,  2.28027153,  2.34299731]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.4401592016220093
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6858196258545
Verifying property 0 with 1 instances.
##### Instance 95 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.44015920]], device='cuda:0') need to verify.
Model prediction is: tensor([ -7.28730583,  -6.10024929,  -9.28009796,  -8.44915771,  -9.51987553,
         -8.47933578,  -8.97727776, -11.69865417,  -9.80428314,  -9.38548374],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.44015920]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 510
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 175
Node /15 input 0: size torch.Size([100]) unstable 18
-----------------
# of unstable neurons: 703
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 10] 
split level 1: [/input-12, 28] 
split level 2: [/input-12, 6] 
split level 3: [/input-12, 15] 
split level 4: [/input-12, 58] 
split level 5: [/input-12, 29] 
split level 6: [/input-12, 35] 
split level 7: [/input-12, 82] 
pruning_in_iteration open status: True
ratio of positive domain = 253 / 256 = 0.98828125
pruning-in-iteration extra time: 0.004603147506713867
Time: prepare 0.0018    bound 0.1200    transfer 0.0013    finalize 0.0015    func 0.1246    
Accumulated time: func 0.1246    prepare 0.0022    bound 0.1200    transfer 0.0013    finalize 0.0015    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01434 (8), -0.00939 (8), -0.00767 (8), 
Length of domains: 3
Time: pickout 0.0004    decision 0.0232    set_bounds 0.0162    solve 0.1247    add 0.0257    
Accumulated time: pickout 0.0004    decision 0.0232    set_bounds 0.0162    solve 0.1247    add 0.0257    
Current (lb-rhs): -0.014340102672576904
3 domains visited
Cumulative time: 0.2011432647705078

BaB round 2
batch: 3
splitting decisions: 
split level 0: [/input-12, 45] [/input-12, 93] [/input-12, 93] 
split level 1: [/input-12, 93] [/input-8, 1428] [/input-8, 1428] 
split level 2: [/input-8, 1428] [/input-8, 173] [/input-8, 173] 
split level 3: [/input-8, 893] [/input-8, 893] [/input-8, 893] 
split level 4: [/input-8, 894] [/input-8, 894] [/input-8, 894] 
split level 5: [/input-8, 173] [/input-8, 661] [/input-8, 661] 
split level 6: [/input-8, 672] [/input-8, 793] [/input-8, 793] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 384 / 384 = 1.0
pruning-in-iteration extra time: 4.482269287109375e-05
Time: prepare 0.0074    bound 0.0038    transfer 0.0033    finalize 0.0024    func 0.0170    
Accumulated time: func 0.1417    prepare 0.0100    bound 0.1238    transfer 0.0046    finalize 0.0039    
all_split False
Length of domains: 0
Time: pickout 0.0008    decision 0.0199    set_bounds 0.0244    solve 0.0171    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0431    set_bounds 0.0407    solve 0.1418    add 0.0257    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
3 domains visited
Cumulative time: 0.2644157409667969


Properties batch 1, size 1
Remaining timeout: 198.21593737602234
Verifying property 1 with 1 instances.
##### Instance 95 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.4210262298583984.

Properties batch 2, size 1
Remaining timeout: 198.10978364944458
Verifying property 2 with 1 instances.
##### Instance 95 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.611546516418457.

Properties batch 3, size 1
Remaining timeout: 198.01341342926025
Verifying property 3 with 1 instances.
##### Instance 95 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.5124292373657227.

Properties batch 4, size 1
Remaining timeout: 197.91785788536072
Verifying property 4 with 1 instances.
##### Instance 95 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5764579772949219.

Properties batch 5, size 1
Remaining timeout: 197.82275199890137
Verifying property 5 with 1 instances.
##### Instance 95 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.2127866744995117.

Properties batch 6, size 1
Remaining timeout: 197.72752141952515
Verifying property 6 with 1 instances.
##### Instance 95 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.4018983840942383.

Properties batch 7, size 1
Remaining timeout: 197.6321985721588
Verifying property 7 with 1 instances.
##### Instance 95 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.280271530151367.

Properties batch 8, size 1
Remaining timeout: 197.52631187438965
Verifying property 8 with 1 instances.
##### Instance 95 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.3429973125457764.
Result: safe in 2.5740 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 96, vnnlib ID: 96 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -5.44995165, -10.24393463,  -3.02499723,  -5.52738094,  -3.64600706,
          -4.67218781,  -4.64619398,  -5.73077822, -10.13163280,  -9.56945515]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [457]; unstable size 457; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 224, 1, 457] with unstable size 223 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 457] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 457] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [223]; unstable size 223; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 223] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 223] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.06982219,  3.56651115, -3.10427237, -0.30050778, -2.24185658,
         -1.43835664, -0.57025671,  3.45370126,  3.13693810]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -5.44995165, -10.24393463,  -3.02499723,  -5.52738094,  -3.64600706,
          -4.67218781,  -4.64619398,  -5.73077822, -10.13163280,  -9.56945515]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -5.44995213, -10.24393463,  -3.02499771,  -5.52738142,  -3.64600754,
           -4.67218828,  -4.64619493,  -5.73077869, -10.13163280,  -9.56945324],
         [ -5.44995213, -10.24393463,  -3.02499771,  -5.52738142,  -3.64600754,
           -4.67218828,  -4.64619493,  -5.73077869, -10.13163280,  -9.56945324]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.80375719, -1.62119722,  0.88118649, -1.00018740,  0.02599335,
           1.08458376]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]],


         [[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]],


         [[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]],


         [[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]],


         [[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]],


         [[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0864 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 97, vnnlib ID: 97 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.42443323, -12.86629391,  -5.06406689,  -6.59175348,  -5.65273857,
          -7.37562561,  -6.97437239,  -7.97660685,  -9.45366764, -11.25179768]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [815]; unstable size 815; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 348, 1, 815] with unstable size 347 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 815] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 815] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [347]; unstable size 347; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 347] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 347] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.99483001,  5.88476753,  0.52514827, -0.25146756,  1.10865986,
          0.87214220,  1.88426137,  2.11473489,  4.06170130]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.42443323, -12.86629391,  -5.06406689,  -6.59175348,  -5.65273857,
          -7.37562561,  -6.97437239,  -7.97660685,  -9.45366764, -11.25179768]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.91it/s]100%|██████████| 1/1 [00:00<00:00,  8.91it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.91634750, -12.22560024,  -4.62670612,  -5.97058296,  -4.77927256,
           -6.74498940,  -6.27670527,  -7.29330587,  -8.81531429, -10.70232105]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.15256643]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1150 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 18.199153900146484
alpha/beta optimization time: 1.141533613204956
initial alpha-crown bounds: tensor([[ 1.10888267,  6.06384850,  0.59163451, -0.20346960,  1.20185685,
          0.91255510,  1.97026229,  2.29743648,  4.25614882]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.20346960425376892
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6668028831482
Verifying property 0 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[-1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.1088826656341553.

Properties batch 1, size 1
Remaining timeout: 198.54253602027893
Verifying property 1 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.063848495483398.

Properties batch 2, size 1
Remaining timeout: 198.44559955596924
Verifying property 2 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5916345119476318.

Properties batch 3, size 1
Remaining timeout: 198.3496072292328
Verifying property 3 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.20346960]], device='cuda:0') need to verify.
Model prediction is: tensor([ -7.42443323, -12.86629391,  -5.06406689,  -6.59175348,  -5.65273857,
         -7.37562561,  -6.97437239,  -7.97660685,  -9.45366764, -11.25179768],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.20346960]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 815
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 334
Node /15 input 0: size torch.Size([100]) unstable 18
-----------------
# of unstable neurons: 1167
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 41] 
split level 1: [/input-12, 46] 
split level 2: [/input-12, 32] 
split level 3: [/input-12, 33] 
split level 4: [/input-8, 289] 
split level 5: [/input-8, 290] 
split level 6: [/input-8, 1748] 
split level 7: [/input-8, 429] 
pruning_in_iteration open status: True
ratio of positive domain = 204 / 256 = 0.796875
pruning-in-iteration extra time: 0.005040407180786133
Time: prepare 0.0030    bound 0.1212    transfer 0.0016    finalize 0.0017    func 0.1276    
Accumulated time: func 0.1276    prepare 0.0034    bound 0.1212    transfer 0.0016    finalize 0.0017    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09788 (8), -0.09690 (8), -0.09450 (8), -0.09399 (8), -0.09351 (8), -0.09290 (8), -0.09261 (8), -0.09195 (8), -0.09165 (8), -0.09039 (8), -0.08952 (8), -0.08904 (8), -0.08856 (8), -0.08764 (8), -0.08672 (8), -0.08544 (8), -0.08108 (8), -0.08080 (8), -0.08011 (8), -0.07984 (8), 
Length of domains: 52
Time: pickout 0.0004    decision 0.0227    set_bounds 0.0174    solve 0.1276    add 0.0697    
Accumulated time: pickout 0.0004    decision 0.0227    set_bounds 0.0174    solve 0.1276    add 0.0697    
Current (lb-rhs): -0.09788408875465393
52 domains visited
Cumulative time: 0.2484421730041504

BaB round 2
batch: 52
splitting decisions: 
split level 0: [/input-8, 457] [/input-8, 457] [/input-8, 457] [/input-8, 457] [/input-8, 457] [/input-8, 457] [/input-8, 457] [/input-8, 457] [/input-8, 457] [/input-8, 457] 
split level 1: [/input-8, 421] [/input-8, 421] [/input-8, 1749] [/input-8, 421] [/input-8, 116] [/input-8, 421] [/input-8, 421] [/input-8, 421] [/input-8, 1749] [/input-8, 421] 
pruning_in_iteration open status: True
ratio of positive domain = 65 / 208 = 0.3125
pruning-in-iteration extra time: 0.004693508148193359
Time: prepare 0.0040    bound 0.1781    transfer 0.0019    finalize 0.0013    func 0.1854    
Accumulated time: func 0.3129    prepare 0.0076    bound 0.2993    transfer 0.0035    finalize 0.0030    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09320 (10), -0.09264 (10), -0.08976 (10), -0.08921 (10), -0.08904 (10), -0.08871 (10), -0.08824 (10), -0.08805 (10), -0.08771 (10), -0.08766 (10), -0.08641 (10), -0.08561 (10), -0.08536 (10), -0.08479 (10), -0.08463 (10), -0.08433 (10), -0.08427 (10), -0.08409 (10), -0.08373 (10), -0.08312 (10), 
Length of domains: 143
Time: pickout 0.0145    decision 0.0132    set_bounds 0.0057    solve 0.1854    add 0.0168    
Accumulated time: pickout 0.0149    decision 0.0359    set_bounds 0.0231    solve 0.3131    add 0.0865    
Current (lb-rhs): -0.09319999814033508
195 domains visited
Cumulative time: 0.48459887504577637

BaB round 3
batch: 143
splitting decisions: 
split level 0: [/input-8, 1003] [/input-8, 1749] [/input-8, 1003] [/input-8, 1749] [/input-8, 1003] [/input-8, 1749] [/input-8, 1003] [/input-8, 1749] [/input-8, 1003] [/input-8, 1749] 
pruning_in_iteration open status: False
ratio of positive domain = 22 / 286 = 0.07692307692307687
pruning-in-iteration extra time: 5.626678466796875e-05
Time: prepare 0.0056    bound 0.1017    transfer 0.0008    finalize 0.0016    func 0.1098    
Accumulated time: func 0.4227    prepare 0.0134    bound 0.4011    transfer 0.0043    finalize 0.0046    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09083 (11), -0.09038 (11), -0.08738 (11), -0.08693 (11), -0.08667 (11), -0.08661 (11), -0.08597 (11), -0.08579 (11), -0.08553 (11), -0.08550 (11), -0.08385 (11), -0.08318 (11), -0.08283 (11), -0.08254 (11), -0.08237 (11), -0.08210 (11), -0.08207 (11), -0.08172 (11), -0.08171 (11), -0.08149 (11), 
Length of domains: 264
Time: pickout 0.0025    decision 0.0222    set_bounds 0.0062    solve 0.1098    add 0.0088    
Accumulated time: pickout 0.0174    decision 0.0581    set_bounds 0.0293    solve 0.4229    add 0.0952    
Current (lb-rhs): -0.09082576632499695
459 domains visited
Cumulative time: 0.634556770324707

BaB round 4
batch: 264
splitting decisions: 
split level 0: [/input-8, 1749] [/input-8, 1003] [/input-8, 1749] [/input-8, 1003] [/input-8, 1749] [/input-8, 1003] [/input-8, 1749] [/input-8, 1003] [/input-8, 1749] [/input-8, 843] 
pruning_in_iteration open status: False
ratio of positive domain = 10 / 528 = 0.018939393939393923
pruning-in-iteration extra time: 5.221366882324219e-05
Time: prepare 0.0101    bound 0.1059    transfer 0.0038    finalize 0.0028    func 0.1227    
Accumulated time: func 0.5454    prepare 0.0236    bound 0.5070    transfer 0.0081    finalize 0.0074    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08876 (12), -0.08835 (12), -0.08487 (12), -0.08466 (12), -0.08455 (12), -0.08447 (12), -0.08390 (12), -0.08382 (12), -0.08357 (12), -0.08348 (12), -0.08199 (12), -0.08100 (12), -0.08081 (12), -0.08008 (12), -0.08002 (12), -0.08000 (12), -0.07976 (12), -0.07963 (12), -0.07948 (12), -0.07901 (12), 
Length of domains: 518
Time: pickout 0.0034    decision 0.0289    set_bounds 0.0112    solve 0.1233    add 0.0203    
Accumulated time: pickout 0.0208    decision 0.0870    set_bounds 0.0404    solve 0.5463    add 0.1155    
Current (lb-rhs): -0.0887552797794342
977 domains visited
Cumulative time: 0.8223543167114258

BaB round 5
batch: 518
splitting decisions: 
split level 0: [/input-8, 1490] [/input-8, 843] [/input-8, 1859] [/input-8, 843] [/input-8, 1490] [/input-8, 843] [/input-8, 1490] [/input-8, 843] [/input-8, 1490] [/input-8, 1003] 
pruning_in_iteration open status: False
ratio of positive domain = 9 / 1036 = 0.008687258687258725
pruning-in-iteration extra time: 7.700920104980469e-05
Time: prepare 0.0198    bound 0.1105    transfer 0.0057    finalize 0.0056    func 0.1417    
Accumulated time: func 0.6870    prepare 0.0436    bound 0.6175    transfer 0.0138    finalize 0.0130    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08681 (13), -0.08642 (13), -0.08290 (13), -0.08274 (13), -0.08252 (13), -0.08250 (13), -0.08213 (13), -0.08189 (13), -0.08189 (13), -0.08170 (13), -0.08151 (13), -0.08077 (13), -0.07968 (13), -0.07949 (13), -0.07885 (13), -0.07876 (13), -0.07862 (13), -0.07843 (13), -0.07834 (13), -0.07817 (13), 
Length of domains: 1027
Time: pickout 0.0067    decision 0.0413    set_bounds 0.0221    solve 0.1419    add 0.0054    
Accumulated time: pickout 0.0275    decision 0.1283    set_bounds 0.0625    solve 0.6881    add 0.1209    
Current (lb-rhs): -0.08681458234786987
2004 domains visited
Cumulative time: 1.0407052040100098

BaB round 6
batch: 1027
splitting decisions: 
split level 0: [/input-8, 1859] [/input-8, 1859] [/input-8, 1490] [/input-8, 1859] [/input-8, 1859] [/input-8, 1859] [/input-8, 1859] [/input-8, 1859] [/input-8, 1859] [/input-8, 1859] 
pruning_in_iteration open status: False
ratio of positive domain = 24 / 2054 = 0.011684518013631906
pruning-in-iteration extra time: 5.4836273193359375e-05
Time: prepare 0.0390    bound 0.1307    transfer 0.0106    finalize 0.0102    func 0.1907    
Accumulated time: func 0.8777    prepare 0.0828    bound 0.7483    transfer 0.0244    finalize 0.0231    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08402 (14), -0.08363 (14), -0.08208 (14), -0.08169 (14), -0.08011 (14), -0.07994 (14), -0.07970 (14), -0.07968 (14), -0.07946 (14), -0.07929 (14), -0.07908 (14), -0.07907 (14), -0.07869 (14), -0.07850 (14), -0.07812 (14), -0.07802 (14), -0.07779 (14), -0.07771 (14), -0.07741 (14), -0.07720 (14), 
Length of domains: 2028
Time: pickout 0.0148    decision 0.0734    set_bounds 0.0438    solve 0.1909    add 0.0081    
Accumulated time: pickout 0.0423    decision 0.2017    set_bounds 0.1064    solve 0.8791    add 0.1290    
Current (lb-rhs): -0.08401757478713989
4032 domains visited
Cumulative time: 1.3737289905548096

BaB round 7
batch: 2028
splitting decisions: 
split level 0: [/input, 620] [/input, 620] [/input, 620] [/input, 620] [/input, 620] [/input, 620] [/input, 620] [/input, 620] [/input, 620] [/input, 620] 
pruning_in_iteration open status: False
ratio of positive domain = 91 / 4056 = 0.022435897435897467
pruning-in-iteration extra time: 7.05718994140625e-05
Time: prepare 0.0923    bound 0.2079    transfer 0.0175    finalize 0.0217    func 0.3397    
Accumulated time: func 1.2173    prepare 0.1752    bound 0.9562    transfer 0.0419    finalize 0.0448    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08369 (15), -0.08330 (15), -0.08175 (15), -0.08136 (15), -0.07978 (15), -0.07939 (15), -0.07935 (15), -0.07895 (15), -0.07873 (15), -0.07834 (15), -0.07779 (15), -0.07742 (15), -0.07741 (15), -0.07728 (15), -0.07707 (15), -0.07705 (15), -0.07680 (15), -0.07647 (15), -0.07642 (15), -0.07636 (15), 
Length of domains: 3958
Time: pickout 0.0291    decision 0.1247    set_bounds 0.2124    solve 0.3407    add 0.1351    
Accumulated time: pickout 0.0714    decision 0.3264    set_bounds 0.3188    solve 1.2197    add 0.2642    
Current (lb-rhs): -0.08369395136833191
7990 domains visited
Cumulative time: 2.219360113143921

BaB round 8
batch: 3958
splitting decisions: 
split level 0: [/input-8, 995] [/input, 330] [/input-8, 995] [/input, 330] [/input-8, 473] [/input, 330] [/input-8, 473] [/input, 330] [/input-8, 995] [/input, 330] 
pruning_in_iteration open status: False
ratio of positive domain = 477 / 7916 = 0.0602577059120768
pruning-in-iteration extra time: 5.698204040527344e-05
Time: prepare 0.1743    bound 0.3613    transfer 0.0434    finalize 0.0503    func 0.6304    
Accumulated time: func 1.8478    prepare 0.3498    bound 1.3175    transfer 0.0854    finalize 0.0951    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08148 (16), -0.08109 (16), -0.07965 (16), -0.07955 (16), -0.07926 (16), -0.07916 (16), -0.07774 (16), -0.07758 (16), -0.07735 (16), -0.07718 (16), -0.07644 (16), -0.07607 (16), -0.07590 (16), -0.07575 (16), -0.07562 (16), -0.07559 (16), -0.07552 (16), -0.07550 (16), -0.07535 (16), -0.07532 (16), 
Length of domains: 7411
Time: pickout 0.0544    decision 0.2467    set_bounds 0.3199    solve 0.6322    add 0.0379    
Accumulated time: pickout 0.1258    decision 0.5731    set_bounds 0.6387    solve 1.8519    add 0.3020    
Current (lb-rhs): -0.08147916197776794
15401 domains visited
Cumulative time: 3.5203094482421875

BaB round 9
batch: 4096
splitting decisions: 
split level 0: [/input-8, 116] [/input-8, 617] [/input-8, 116] [/input-8, 617] [/input-8, 617] [/input-8, 995] [/input-8, 617] [/input-8, 617] [/input-8, 473] [/input-8, 617] 
pruning_in_iteration open status: False
ratio of positive domain = 772 / 8192 = 0.09423828125
pruning-in-iteration extra time: 8.368492126464844e-05
Time: prepare 0.1973    bound 0.3702    transfer 0.0455    finalize 0.0575    func 0.6713    
Accumulated time: func 2.5190    prepare 0.5473    bound 1.6876    transfer 0.1309    finalize 0.1525    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08148 (16), -0.08109 (16), -0.07955 (16), -0.07916 (16), -0.07817 (17), -0.07778 (17), -0.07758 (16), -0.07718 (16), -0.07615 (17), -0.07590 (16), -0.07576 (17), -0.07562 (16), -0.07559 (16), -0.07552 (16), -0.07550 (16), -0.07532 (16), -0.07520 (16), -0.07505 (16), -0.07491 (17), -0.07479 (16), 
Length of domains: 10710
Time: pickout 0.0556    decision 0.2420    set_bounds 0.3153    solve 0.6727    add 0.0555    
Accumulated time: pickout 0.1815    decision 0.8151    set_bounds 0.9540    solve 2.5247    add 0.3576    
Current (lb-rhs): -0.08147916197776794
22796 domains visited
current_vram/total_varm: 12.3GB/99.9GB, batch_size increase to 8192
Cumulative time: 4.871026039123535

BaB round 10
batch: 8192
splitting decisions: 
split level 0: [/input-8, 843] [/input-8, 477] [/input-8, 843] [/input, 330] [/input-8, 843] [/input, 330] [/input-8, 843] [/input, 330] [/input-8, 843] [/input, 330] 
pruning_in_iteration open status: False
ratio of positive domain = 2106 / 16384 = 0.1285400390625
pruning-in-iteration extra time: 0.00012874603271484375
Time: prepare 0.4084    bound 0.6891    transfer 0.0928    finalize 0.1241    func 1.3162    
Accumulated time: func 3.8352    prepare 0.9561    bound 2.3767    transfer 0.2237    finalize 0.2767    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08148 (16), -0.08109 (16), -0.07955 (16), -0.07916 (16), -0.07758 (16), -0.07718 (16), -0.07590 (16), -0.07569 (18), -0.07562 (16), -0.07559 (16), -0.07552 (16), -0.07550 (16), -0.07532 (16), -0.07529 (18), -0.07520 (16), -0.07505 (16), -0.07479 (16), -0.07441 (16), -0.07434 (16), -0.07398 (16), 
Length of domains: 16742
Time: pickout 0.1133    decision 0.6266    set_bounds 0.4728    solve 1.3197    add 0.1077    
Accumulated time: pickout 0.2948    decision 1.4417    set_bounds 1.4268    solve 3.8444    add 0.4653    
Current (lb-rhs): -0.08147916197776794
37020 domains visited
current_vram/total_varm: 19.6GB/99.9GB, batch_size increase to 16384
Cumulative time: 7.535805940628052

BaB round 11
batch: 16384
splitting decisions: 
split level 0: [/input-8, 617] [/input-8, 617] [/input-8, 617] [/input-8, 477] [/input-8, 617] [/input-8, 995] [/input-8, 617] [/input-8, 473] [/input-8, 617] [/input-8, 477] 
pruning_in_iteration open status: False
ratio of positive domain = 4772 / 32768 = 0.1456298828125
pruning-in-iteration extra time: 0.000274658203125
Time: prepare 0.8584    bound 1.3286    transfer 0.1828    finalize 0.4373    func 2.8097    
Accumulated time: func 6.6449    prepare 1.8149    bound 3.7053    transfer 0.4065    finalize 0.7139    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08148 (16), -0.08109 (16), -0.07801 (17), -0.07762 (17), -0.07758 (16), -0.07718 (16), -0.07590 (16), -0.07552 (16), -0.07537 (17), -0.07532 (16), -0.07454 (17), -0.07441 (16), -0.07434 (16), -0.07408 (17), -0.07396 (17), -0.07385 (19), -0.07371 (17), -0.07351 (17), -0.07346 (19), -0.07323 (16), 
Length of domains: 28259
Time: pickout 0.2403    decision 1.6678    set_bounds 0.8374    solve 2.8159    add 0.1121    
Accumulated time: pickout 0.5350    decision 3.1095    set_bounds 2.2642    solve 6.6603    add 0.5773    
Current (lb-rhs): -0.08147916197776794
64921 domains visited
current_vram/total_varm: 28.2GB/99.9GB, batch_size increase to 32768
Cumulative time: 13.251509666442871

BaB round 12
batch: 28259
splitting decisions: 
split level 0: [/input-8, 843] [/input-8, 477] [/input-8, 843] [/input-8, 477] [/input-8, 843] [/input-8, 477] [/input-8, 843] [/input-8, 477] [/input-8, 843] [/input-8, 116] 
pruning_in_iteration open status: False
ratio of positive domain = 10393 / 56518 = 0.183888318765703
pruning-in-iteration extra time: 0.0004870891571044922
Time: prepare 1.5266    bound 2.2639    transfer 0.3152    finalize 0.7167    func 4.8258    
Accumulated time: func 11.4707    prepare 3.3420    bound 5.9692    transfer 0.7216    finalize 1.4306    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08003 (17), -0.07964 (17), -0.07611 (17), -0.07571 (17), -0.07555 (18), -0.07515 (18), -0.07445 (17), -0.07406 (17), -0.07378 (18), -0.07341 (18), -0.07294 (17), -0.07290 (18), -0.07258 (17), -0.07219 (17), -0.07209 (20), -0.07207 (18), -0.07166 (17), -0.07153 (18), -0.07150 (18), -0.07149 (17), 
Length of domains: 45901
Time: pickout 0.4378    decision 3.1553    set_bounds 1.3969    solve 4.8361    add 0.2012    
Accumulated time: pickout 0.9728    decision 6.2648    set_bounds 3.6611    solve 11.4963    add 0.7785    
Current (lb-rhs): -0.0800255835056305
110822 domains visited
Cumulative time: 23.355276584625244

BaB round 13
batch: 32768
splitting decisions: 
split level 0: [/input-8, 473] [/input-12, 60] [/input-8, 473] [/input-12, 60] [/input-12, 60] [/input, 330] [/input-12, 60] [/input, 458] [/input-8, 995] [/input, 458] 
pruning_in_iteration open status: True
ratio of positive domain = 17621 / 65536 = 0.2688751220703125
pruning-in-iteration extra time: 0.005932807922363281
Time: prepare 1.7977    bound 3.1155    transfer 0.3687    finalize 0.9403    func 6.2263    
Accumulated time: func 17.6970    prepare 5.1401    bound 9.0848    transfer 1.0904    finalize 2.3710    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08003 (17), -0.07964 (17), -0.07611 (17), -0.07571 (17), -0.07445 (17), -0.07406 (17), -0.07378 (18), -0.07372 (19), -0.07341 (18), -0.07333 (19), -0.07294 (17), -0.07225 (18), -0.07219 (17), -0.07209 (20), -0.07134 (18), -0.07114 (18), -0.07108 (19), -0.07103 (17), -0.07052 (17), -0.07052 (17), 
Length of domains: 61048
Time: pickout 0.5326    decision 3.7345    set_bounds 1.7594    solve 6.2385    add 0.2160    
Accumulated time: pickout 1.5054    decision 9.9993    set_bounds 5.4205    solve 17.7348    add 0.9945    
Current (lb-rhs): -0.0800255835056305
158737 domains visited
Cumulative time: 36.03944730758667

BaB round 14
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1490] [/input-12, 60] [/input-8, 995] [/input-12, 60] [/input-8, 874] [/input-8, 995] [/input-12, 60] [/input, 458] [/input, 475] [/input-8, 874] 
pruning_in_iteration open status: True
ratio of positive domain = 15435 / 65536 = 0.2355194091796875
pruning-in-iteration extra time: 0.0062749385833740234
Time: prepare 1.9386    bound 3.2006    transfer 0.3737    finalize 1.0522    func 6.5686    
Accumulated time: func 24.2657    prepare 7.0791    bound 12.2854    transfer 1.4641    finalize 3.4232    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08003 (17), -0.07964 (17), -0.07611 (17), -0.07571 (17), -0.07445 (17), -0.07406 (17), -0.07378 (18), -0.07372 (19), -0.07341 (18), -0.07333 (19), -0.07294 (17), -0.07225 (18), -0.07219 (17), -0.07209 (20), -0.07134 (18), -0.07114 (18), -0.07108 (19), -0.07103 (17), -0.07052 (17), -0.07052 (17), 
Length of domains: 78381
Time: pickout 0.7496    decision 3.5927    set_bounds 2.0856    solve 6.5809    add 0.2448    
Accumulated time: pickout 2.2550    decision 13.5920    set_bounds 7.5061    solve 24.3157    add 1.2394    
Current (lb-rhs): -0.0800255835056305
208838 domains visited
Cumulative time: 49.443769693374634

BaB round 15
batch: 32768
splitting decisions: 
split level 0: [/input, 460] [/input, 460] [/input-8, 116] [/input, 460] [/input-8, 473] [/input, 458] [/input, 460] [/input, 460] [/input, 330] [/input, 330] 
pruning_in_iteration open status: True
ratio of positive domain = 15856 / 65536 = 0.241943359375
pruning-in-iteration extra time: 0.00649714469909668
Time: prepare 1.9629    bound 3.1847    transfer 0.3729    finalize 0.4770    func 6.7800    
Accumulated time: func 31.0457    prepare 9.0424    bound 15.4701    transfer 1.8369    finalize 3.9002    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08003 (17), -0.07964 (17), -0.07611 (17), -0.07571 (17), -0.07445 (17), -0.07406 (17), -0.07378 (18), -0.07372 (19), -0.07341 (18), -0.07333 (19), -0.07294 (17), -0.07225 (18), -0.07219 (17), -0.07209 (20), -0.07134 (18), -0.07114 (18), -0.07108 (19), -0.07103 (17), -0.07052 (17), -0.07052 (17), 
Length of domains: 95293
Time: pickout 0.6333    decision 3.7083    set_bounds 2.1953    solve 6.7957    add 0.2537    
Accumulated time: pickout 2.8883    decision 17.3003    set_bounds 9.7014    solve 31.1115    add 1.4931    
Current (lb-rhs): -0.0800255835056305
258518 domains visited
Cumulative time: 63.139806032180786

BaB round 16
batch: 32768
splitting decisions: 
split level 0: [/input, 330] [/input-8, 116] [/input, 475] [/input-8, 995] [/input, 475] [/input, 460] [/input-8, 473] [/input, 460] [/input, 460] [/input, 330] 
pruning_in_iteration open status: False
ratio of positive domain = 12873 / 65536 = 0.1964263916015625
pruning-in-iteration extra time: 0.0006160736083984375
Time: prepare 1.9973    bound 7.8063    transfer 0.3559    finalize 1.3830    func 11.5458    
Accumulated time: func 42.5915    prepare 11.0404    bound 23.2764    transfer 2.1929    finalize 5.2832    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08003 (17), -0.07964 (17), -0.07611 (17), -0.07571 (17), -0.07445 (17), -0.07406 (17), -0.07378 (18), -0.07372 (19), -0.07341 (18), -0.07333 (19), -0.07294 (17), -0.07225 (18), -0.07219 (17), -0.07209 (20), -0.07134 (18), -0.07114 (18), -0.07108 (19), -0.07103 (17), -0.07052 (17), -0.07052 (17), 
Length of domains: 114937
Time: pickout 0.6272    decision 3.4723    set_bounds 2.4193    solve 11.5583    add 0.2101    
Accumulated time: pickout 3.5155    decision 20.7726    set_bounds 12.1207    solve 42.6698    add 1.7032    
Current (lb-rhs): -0.0800255835056305
310930 domains visited
Cumulative time: 81.54834485054016

BaB round 17
batch: 32768
splitting decisions: 
split level 0: [/input-8, 473] [/input-8, 995] [/input-8, 473] [/input-8, 1460] [/input, 458] [/input-8, 473] [/input-8, 473] [/input-8, 473] [/input-8, 473] [/input-8, 473] 
pruning_in_iteration open status: False
ratio of positive domain = 12453 / 65536 = 0.1900177001953125
pruning-in-iteration extra time: 0.0005521774291992188
Time: prepare 1.9752    bound 7.8086    transfer 0.3638    finalize 1.5317    func 11.6820    
Accumulated time: func 54.2735    prepare 13.0161    bound 31.0849    transfer 2.5566    finalize 6.8148    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08003 (17), -0.07964 (17), -0.07611 (17), -0.07571 (17), -0.07445 (17), -0.07406 (17), -0.07378 (18), -0.07372 (19), -0.07341 (18), -0.07333 (19), -0.07294 (17), -0.07225 (18), -0.07219 (17), -0.07209 (20), -0.07134 (18), -0.07114 (18), -0.07108 (19), -0.07103 (17), -0.07052 (17), -0.07052 (17), 
Length of domains: 134986
Time: pickout 0.6982    decision 4.1327    set_bounds 1.5559    solve 11.6950    add 0.2480    
Accumulated time: pickout 4.2137    decision 24.9053    set_bounds 13.6766    solve 54.3648    add 1.9512    
Current (lb-rhs): -0.0800255835056305
363747 domains visited
Cumulative time: 100.00362014770508

BaB round 18
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1460] [/input, 460] [/input, 460] [/input-8, 1460] [/input-8, 619] [/input-8, 619] [/input-8, 1460] [/input, 458] [/input, 476] [/input-8, 1460] 
pruning_in_iteration open status: False
ratio of positive domain = 12644 / 65536 = 0.19293212890625
pruning-in-iteration extra time: 0.0005900859832763672
Time: prepare 1.9878    bound 7.8074    transfer 0.3544    finalize 0.4562    func 10.6099    
Accumulated time: func 64.8833    prepare 15.0046    bound 38.8924    transfer 2.9110    finalize 7.2711    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08003 (17), -0.07964 (17), -0.07611 (17), -0.07571 (17), -0.07445 (17), -0.07406 (17), -0.07378 (18), -0.07372 (19), -0.07341 (18), -0.07333 (19), -0.07294 (17), -0.07225 (18), -0.07219 (17), -0.07209 (20), -0.07134 (18), -0.07114 (18), -0.07108 (19), -0.07103 (17), -0.07052 (17), -0.07052 (17), 
Length of domains: 154744
Time: pickout 0.6953    decision 3.4418    set_bounds 2.7773    solve 11.8568    add 0.2050    
Accumulated time: pickout 4.9090    decision 28.3470    set_bounds 16.4539    solve 66.2215    add 2.1562    
Current (lb-rhs): -0.0800255835056305
416273 domains visited
Cumulative time: 119.10235118865967

BaB round 19
batch: 32768
splitting decisions: 
split level 0: [/input-8, 473] [/input-8, 473] [/input, 426] [/input, 460] [/input, 426] [/input, 426] [/input, 460] [/input-8, 1460] [/input, 460] [/input-8, 473] 
pruning_in_iteration open status: True
ratio of positive domain = 15023 / 65536 = 0.2292327880859375
pruning-in-iteration extra time: 0.005312204360961914
Time: prepare 1.9694    bound 4.5850    transfer 0.3781    finalize 0.4697    func 7.4052    
Accumulated time: func 72.2885    prepare 16.9746    bound 43.4773    transfer 3.2891    finalize 7.7408    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08003 (17), -0.07964 (17), -0.07611 (17), -0.07571 (17), -0.07445 (17), -0.07406 (17), -0.07378 (18), -0.07372 (19), -0.07341 (18), -0.07333 (19), -0.07294 (17), -0.07225 (18), -0.07219 (17), -0.07209 (20), -0.07134 (18), -0.07114 (18), -0.07108 (19), -0.07103 (17), -0.07052 (17), -0.07052 (17), 
Length of domains: 172489
Time: pickout 0.6643    decision 3.4581    set_bounds 3.0695    solve 7.4217    add 0.2086    
Accumulated time: pickout 5.5732    decision 31.8051    set_bounds 19.5235    solve 73.6432    add 2.3648    
Current (lb-rhs): -0.0800255835056305
466786 domains visited
Cumulative time: 134.0809416770935

BaB round 20
batch: 32768
splitting decisions: 
split level 0: [/input, 476] [/input-8, 1460] [/input, 458] [/input, 460] [/input, 458] [/input-8, 874] [/input-8, 619] [/input-8, 619] [/input-8, 1460] [/input-8, 1460] 
pruning_in_iteration open status: True
ratio of positive domain = 16846 / 65536 = 0.257049560546875
pruning-in-iteration extra time: 0.006075382232666016
Time: prepare 1.9411    bound 3.4519    transfer 0.3669    finalize 1.9430    func 7.7064    
Accumulated time: func 79.9950    prepare 18.9162    bound 46.9293    transfer 3.6560    finalize 9.6837    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08003 (17), -0.07964 (17), -0.07611 (17), -0.07571 (17), -0.07445 (17), -0.07406 (17), -0.07378 (18), -0.07372 (19), -0.07341 (18), -0.07333 (19), -0.07294 (17), -0.07225 (18), -0.07219 (17), -0.07209 (20), -0.07134 (18), -0.07114 (18), -0.07108 (19), -0.07103 (17), -0.07052 (17), -0.07052 (17), 
Length of domains: 188411
Time: pickout 0.7072    decision 4.5766    set_bounds 1.5926    solve 7.7205    add 0.2086    
Accumulated time: pickout 6.2804    decision 36.3818    set_bounds 21.1161    solve 81.3637    add 2.5734    
Current (lb-rhs): -0.0800255835056305
515476 domains visited
Cumulative time: 149.02512526512146

BaB round 21
batch: 32768
splitting decisions: 
split level 0: [/input-8, 874] [/input, 2137] [/input-8, 1460] [/input, 2137] [/input, 460] [/input-8, 1490] [/input-8, 618] [/input-8, 618] [/input, 2137] [/input-8, 874] 
pruning_in_iteration open status: True
ratio of positive domain = 17646 / 65536 = 0.269256591796875
pruning-in-iteration extra time: 0.006433963775634766
Time: prepare 1.8676    bound 2.8859    transfer 0.3612    finalize 0.4923    func 5.6095    
Accumulated time: func 85.6045    prepare 20.7843    bound 49.8151    transfer 4.0173    finalize 10.1760    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08003 (17), -0.07964 (17), -0.07611 (17), -0.07571 (17), -0.07445 (17), -0.07406 (17), -0.07378 (18), -0.07372 (19), -0.07341 (18), -0.07333 (19), -0.07294 (17), -0.07225 (18), -0.07219 (17), -0.07209 (20), -0.07134 (18), -0.07114 (18), -0.07108 (19), -0.07103 (17), -0.07052 (17), -0.07052 (17), 
Length of domains: 203533
Time: pickout 0.6717    decision 3.4221    set_bounds 3.2879    solve 5.6271    add 0.1972    
Accumulated time: pickout 6.9521    decision 39.8039    set_bounds 24.4040    solve 86.9907    add 2.7706    
Current (lb-rhs): -0.0800255835056305
563366 domains visited
Cumulative time: 162.40670371055603

BaB round 22
batch: 32768
splitting decisions: 
split level 0: [/input-8, 619] [/input-8, 619] [/input-8, 1490] [/input-8, 619] [/input-8, 619] [/input-8, 619] [/input, 475] [/input-8, 619] [/input-8, 1490] [/input, 475] 
pruning_in_iteration open status: True
ratio of positive domain = 19201 / 65536 = 0.2929840087890625
pruning-in-iteration extra time: 0.00628352165222168
Time: prepare 1.8819    bound 2.8288    transfer 0.3632    finalize 0.4850    func 5.5622    
Accumulated time: func 91.1667    prepare 22.6668    bound 52.6439    transfer 4.3805    finalize 10.6610    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08003 (17), -0.07964 (17), -0.07611 (17), -0.07571 (17), -0.07445 (17), -0.07406 (17), -0.07378 (18), -0.07372 (19), -0.07341 (18), -0.07333 (19), -0.07294 (17), -0.07225 (18), -0.07219 (17), -0.07209 (20), -0.07134 (18), -0.07114 (18), -0.07108 (19), -0.07103 (17), -0.07052 (17), -0.07052 (17), 
Length of domains: 217100
Time: pickout 0.7114    decision 3.4311    set_bounds 3.3636    solve 5.5801    add 0.1801    
Accumulated time: pickout 7.6635    decision 43.2349    set_bounds 27.7676    solve 92.5708    add 2.9507    
Current (lb-rhs): -0.0800255835056305
609701 domains visited
Cumulative time: 175.854487657547

BaB round 23
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1490] [/input-8, 1490] [/input, 476] [/input-8, 619] [/input-8, 1490] [/input-8, 619] [/input-8, 1490] [/input, 476] [/input, 476] [/input-8, 1490] 
pruning_in_iteration open status: True
ratio of positive domain = 21002 / 65536 = 0.320465087890625
pruning-in-iteration extra time: 0.006452083587646484
Time: prepare 1.8710    bound 2.7652    transfer 0.3706    finalize 0.4998    func 5.5096    
Accumulated time: func 96.6763    prepare 24.5383    bound 55.4091    transfer 4.7511    finalize 11.1608    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08003 (17), -0.07964 (17), -0.07611 (17), -0.07571 (17), -0.07445 (17), -0.07406 (17), -0.07378 (18), -0.07372 (19), -0.07341 (18), -0.07333 (19), -0.07294 (17), -0.07225 (18), -0.07219 (17), -0.07209 (20), -0.07134 (18), -0.07114 (18), -0.07108 (19), -0.07103 (17), -0.07052 (17), -0.07052 (17), 
Length of domains: 228866
Time: pickout 0.6878    decision 5.0009    set_bounds 1.5468    solve 7.3470    add 0.1993    
Accumulated time: pickout 8.3514    decision 48.2358    set_bounds 29.3144    solve 99.9178    add 3.1500    
Current (lb-rhs): -0.0800255835056305
654235 domains visited
Cumulative time: 190.7888321876526

BaB round 24
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1490] [/input, 458] [/input-8, 456] [/input, 458] [/input-8, 414] [/input, 458] [/input, 458] [/input-8, 414] [/input-8, 1322] [/input-8, 414] 
pruning_in_iteration open status: True
ratio of positive domain = 22365 / 65536 = 0.3412628173828125
pruning-in-iteration extra time: 0.0063266754150390625
Time: prepare 1.8252    bound 2.7073    transfer 0.3652    finalize 2.5966    func 7.4969    
Accumulated time: func 104.1732    prepare 26.3639    bound 58.1164    transfer 5.1163    finalize 13.7573    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08003 (17), -0.07964 (17), -0.07611 (17), -0.07571 (17), -0.07445 (17), -0.07406 (17), -0.07378 (18), -0.07372 (19), -0.07341 (18), -0.07333 (19), -0.07294 (17), -0.07225 (18), -0.07219 (17), -0.07209 (20), -0.07134 (18), -0.07114 (18), -0.07108 (19), -0.07103 (17), -0.07052 (17), -0.07052 (17), 
Length of domains: 239269
Time: pickout 0.6852    decision 3.4226    set_bounds 1.5719    solve 7.5119    add 0.1846    
Accumulated time: pickout 9.0365    decision 51.6584    set_bounds 30.8863    solve 107.4297    add 3.3346    
Current (lb-rhs): -0.0800255835056305
697406 domains visited
Time out!!!!!!!!
Result: unknown in 207.6185 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 98, vnnlib ID: 98 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.97282171, -9.59043694, -6.44806576, -4.78952980, -4.97297287,
         -4.42642069, -6.68016386, -6.68106413, -7.70960140, -9.47742367]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [664]; unstable size 664; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 240, 1, 664] with unstable size 239 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 664] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 664] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [239]; unstable size 239; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 239] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 239] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.04075205,  2.86903501,  0.75436544,  0.06829160, -0.61994451,
          1.08730936,  0.85343814,  1.25660872,  3.10610723]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.97282171, -9.59043694, -6.44806576, -4.78952980, -4.97297287,
         -4.42642069, -6.68016386, -6.68106413, -7.70960140, -9.47742367]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.18765354, -9.77073288, -6.59089756, -5.29431868, -4.97382355,
          -4.98171186, -7.01910067, -6.92423296, -7.98603344, -9.82796764]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.00788832]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0084 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0876 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 99, vnnlib ID: 99 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.23901796, -6.11622238, -0.89747995, -2.37960625, -1.48292530,
         -3.00284576, -1.44222963, -3.95331812, -5.41394901, -6.03653765]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [445]; unstable size 445; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 180, 1, 445] with unstable size 179 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 445] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 445] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [179]; unstable size 179; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 179] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 179] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.11019540,  3.76489067, -1.18024397,  0.25222462, -0.68485928,
          0.81499958,  1.69955873,  2.79094577,  3.59716249]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.23901796, -6.11622238, -0.89747995, -2.37960625, -1.48292530,
         -3.00284576, -1.44222963, -3.95331812, -5.41394901, -6.03653765]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.23901796, -6.11622334, -0.89747965, -2.37960601, -1.48292530,
          -3.00284576, -1.44222927, -3.95331812, -5.41394997, -6.03653717],
         [-4.23901796, -6.11622334, -0.89747965, -2.37960601, -1.48292530,
          -3.00284576, -1.44222927, -3.95331812, -5.41394997, -6.03653717]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.54474962,  0.04069602]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.05873025,  0.34444451,  0.05873025,  ..., -1.52857137,
            -1.48095226, -1.48095226],
           [ 0.04285724, -0.30634910, -0.44920623,  ..., -1.54444432,
            -1.56031740, -1.52857137],
           [-0.25873005, -0.63968253, -0.94126981,  ..., -1.54444432,
            -1.56031740, -1.54444432],
           ...,
           [-1.92539680, -1.92539680, -1.95714283,  ..., -1.73492062,
            -1.73492062, -1.75079370],
           [-1.90952384, -1.95714283, -1.96507931,  ..., -1.73492062,
            -1.75079370, -1.76666665],
           [-1.89365077, -1.90952384, -1.92539680,  ..., -1.76666665,
            -1.78253973, -1.78253973]],

          [[-0.16103047,  0.11272153, -0.20933965,  ..., -1.41706920,
            -1.36875999, -1.36875999],
           [-0.25764883, -0.56360704, -0.64412236,  ..., -1.43317223,
            -1.44927526, -1.41706920],
           [-0.51529789, -0.80515295, -1.03059578,  ..., -1.43317223,
            -1.44927526, -1.41706920],
           ...,
           [-1.88405800, -1.90016103, -1.91626418,  ..., -1.88405800,
            -1.90016103, -1.88405800],
           [-1.88405800, -1.93236721, -1.94847023,  ..., -1.90016103,
            -1.90016103, -1.90016103],
           [-1.91626418, -1.94847023, -1.95652175,  ..., -1.88405800,
            -1.91626418, -1.91626418]],

          [[-0.92803597, -0.65817088, -0.97301346,  ..., -1.68515754,
            -1.64767623, -1.64767623],
           [-1.00299859, -1.27286363, -1.34782624,  ..., -1.69265378,
            -1.68515754, -1.68515754],
           [-1.25787115, -1.48275876, -1.61769128,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.68515754, -1.68515754, -1.69265378,  ..., -1.64767623,
            -1.66266882, -1.67766130],
           [-1.68515754, -1.69265378, -1.69265378,  ..., -1.66266882,
            -1.67766130, -1.67766130],
           [-1.69265378, -1.68515754, -1.68515754,  ..., -1.66266882,
            -1.67766130, -1.68515754]]],


         [[[ 0.05873025,  0.34444451,  0.05873025,  ..., -1.52857137,
            -1.48095226, -1.48095226],
           [ 0.04285724, -0.30634910, -0.44920623,  ..., -1.54444432,
            -1.56031740, -1.52857137],
           [-0.25873005, -0.63968253, -0.94126981,  ..., -1.54444432,
            -1.56031740, -1.54444432],
           ...,
           [-1.92539680, -1.92539680, -1.95714283,  ..., -1.73492062,
            -1.73492062, -1.75079370],
           [-1.90952384, -1.95714283, -1.96507931,  ..., -1.73492062,
            -1.75079370, -1.76666665],
           [-1.89365077, -1.90952384, -1.92539680,  ..., -1.76666665,
            -1.78253973, -1.78253973]],

          [[-0.16103047,  0.11272153, -0.20933965,  ..., -1.41706920,
            -1.36875999, -1.36875999],
           [-0.25764883, -0.56360704, -0.64412236,  ..., -1.43317223,
            -1.44927526, -1.41706920],
           [-0.51529789, -0.80515295, -1.03059578,  ..., -1.43317223,
            -1.44927526, -1.41706920],
           ...,
           [-1.88405800, -1.90016103, -1.91626418,  ..., -1.88405800,
            -1.90016103, -1.88405800],
           [-1.88405800, -1.93236721, -1.94847023,  ..., -1.90016103,
            -1.90016103, -1.90016103],
           [-1.91626418, -1.94847023, -1.95652175,  ..., -1.88405800,
            -1.91626418, -1.91626418]],

          [[-0.92803597, -0.65817088, -0.97301346,  ..., -1.68515754,
            -1.64767623, -1.64767623],
           [-1.00299859, -1.27286363, -1.34782624,  ..., -1.69265378,
            -1.68515754, -1.68515754],
           [-1.25787115, -1.48275876, -1.61769128,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.68515754, -1.68515754, -1.69265378,  ..., -1.64767623,
            -1.66266882, -1.67766130],
           [-1.68515754, -1.69265378, -1.69265378,  ..., -1.66266882,
            -1.67766130, -1.67766130],
           [-1.69265378, -1.68515754, -1.68515754,  ..., -1.66266882,
            -1.67766130, -1.68515754]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0782 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 100, vnnlib ID: 100 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.53976345, -13.16501808,  -7.78616238,  -7.53348351,  -7.22956753,
          -7.13146210,  -9.51203918,  -8.66154480, -12.44145298, -11.93621635]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [583]; unstable size 583; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 279, 1, 583] with unstable size 278 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 583] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 583] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [278]; unstable size 278; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 278] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 278] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.95121855,  2.65530014, -1.12760639, -1.74681830, -0.90773940,
          0.75648630, -0.87717187,  2.33981371,  1.64043427]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.53976345, -13.16501808,  -7.78616238,  -7.53348351,  -7.22956753,
          -7.13146210,  -9.51203918,  -8.66154480, -12.44145298, -11.93621635]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.53976154, -13.16501617,  -7.78616142,  -7.53348160,  -7.22956657,
           -7.13146067,  -9.51203918,  -8.66154480, -12.44145107, -11.93621540],
         [-10.53976154, -13.16501617,  -7.78616142,  -7.53348160,  -7.22956657,
           -7.13146067,  -9.51203918,  -8.66154480, -12.44145107, -11.93621540]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.25267982, -0.30391502, -0.40202093,  1.12806320]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]],


         [[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]],


         [[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]],


         [[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0744 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 101, vnnlib ID: 101 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.08083820, -14.74164295, -15.41894627, -16.35571480, -15.69711781,
         -17.93531990, -17.23896980, -18.14307785, -10.66590214, -14.52196217]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [682]; unstable size 682; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 178, 1, 682] with unstable size 177 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 682] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 682] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [177]; unstable size 177; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 177] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 177] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.62306976,  3.08736992,  3.49406052,  4.42359114,  3.72971249,
          5.79383564,  5.18702221,  5.91974688,  2.72902703]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.08083820, -14.74164295, -15.41894627, -16.35571480, -15.69711781,
         -17.93531990, -17.23896980, -18.14307785, -10.66590214, -14.52196217]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.86083126, -14.65515518, -15.32081318, -16.32747269, -15.65061283,
          -17.88081551, -17.16146469, -17.99161720, -10.98882198, -14.44098759]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.12799072]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0055 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0768 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 102, vnnlib ID: 102 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.08662319, -10.92296124,  -4.84066486,  -5.63669729,  -5.64046621,
          -5.76534128,  -7.64309168,  -7.17506170,  -8.36095524,  -9.82923794]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [704]; unstable size 704; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 251, 1, 704] with unstable size 250 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 704] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 704] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [250]; unstable size 250; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 250] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 250] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.20884323,  3.62872171, -1.65299881, -0.98555762, -1.01563978,
          0.82072127,  0.33104575,  1.38739491,  2.34938717]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.08662319, -10.92296124,  -4.84066486,  -5.63669729,  -5.64046621,
          -5.76534128,  -7.64309168,  -7.17506170,  -8.36095524,  -9.82923794]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.08662319, -10.92296028,  -4.84066582,  -5.63669777,  -5.64046764,
           -5.76534081,  -7.64309168,  -7.17506170,  -8.36095524,  -9.82923794],
         [ -7.08662319, -10.92296028,  -4.84066582,  -5.63669777,  -5.64046764,
           -5.76534081,  -7.64309168,  -7.17506170,  -8.36095524,  -9.82923794]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.79980183, -0.00376987,  0.12487316]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 1.05873048,  1.48730183,  1.43968284,  ...,  1.12222254,
             0.82063496,  1.02698421],
           [ 1.29682565,  1.50317490,  1.55079389,  ...,  0.70952386,
             1.01111114,  1.37619078],
           [ 1.24920666,  1.50317490,  1.63015902,  ...,  0.58253974,
             1.04285717,  1.15396857],
           ...,
           [ 0.47142863,  0.64603180,  0.37619054,  ..., -0.35396814,
            -0.43333322, -0.44920623],
           [ 0.23333341,  0.42380959,  0.28095245,  ..., -0.48095238,
            -0.44920623, -0.52857143],
           [ 0.15396833,  0.32857150,  0.21746039,  ..., -0.49682540,
            -0.44920623, -0.54444444]],

          [[ 1.06280196,  1.51368785,  1.48148179,  ...,  1.07890511,
             0.78904998,  0.99838978],
           [ 1.32045114,  1.52979100,  1.57810009,  ...,  0.66022551,
             0.98228669,  1.35265732],
           [ 1.27214205,  1.52979100,  1.67471850,  ...,  0.54750413,
             0.99838978,  1.11111140],
           ...,
           [ 0.43478271,  0.61191636,  0.32206130,  ..., -0.48309177,
            -0.49919480, -0.49919480],
           [ 0.20933989,  0.40257660,  0.24154601,  ..., -0.56360704,
            -0.51529789, -0.57971013],
           [ 0.11272153,  0.30595824,  0.17713377,  ..., -0.56360704,
            -0.51529789, -0.61191624]],

          [[ 0.99100471,  1.36581755,  1.29085493,  ...,  0.76611710,
             0.54122955,  0.73613209],
           [ 1.20089996,  1.35082495,  1.36581755,  ...,  0.37631202,
             0.75112462,  1.11094475],
           [ 1.12593722,  1.33583248,  1.41079497,  ...,  0.24137947,
             0.79610211,  0.91604215],
           ...,
           [ 0.07646193,  0.25637197,  0.06146942,  ..., -0.52323836,
            -0.61319339, -0.61319339],
           [-0.16341813,  0.01649191, -0.07346311,  ..., -0.62818587,
            -0.59820086, -0.64317840],
           [-0.25337315, -0.11844061, -0.16341813,  ..., -0.62818587,
            -0.58320838, -0.65817088]]],


         [[[ 1.05873048,  1.48730183,  1.43968284,  ...,  1.12222254,
             0.82063496,  1.02698421],
           [ 1.29682565,  1.50317490,  1.55079389,  ...,  0.70952386,
             1.01111114,  1.37619078],
           [ 1.24920666,  1.50317490,  1.63015902,  ...,  0.58253974,
             1.04285717,  1.15396857],
           ...,
           [ 0.47142863,  0.64603180,  0.37619054,  ..., -0.35396814,
            -0.43333322, -0.44920623],
           [ 0.23333341,  0.42380959,  0.28095245,  ..., -0.48095238,
            -0.44920623, -0.52857143],
           [ 0.15396833,  0.32857150,  0.21746039,  ..., -0.49682540,
            -0.44920623, -0.54444444]],

          [[ 1.06280196,  1.51368785,  1.48148179,  ...,  1.07890511,
             0.78904998,  0.99838978],
           [ 1.32045114,  1.52979100,  1.57810009,  ...,  0.66022551,
             0.98228669,  1.35265732],
           [ 1.27214205,  1.52979100,  1.67471850,  ...,  0.54750413,
             0.99838978,  1.11111140],
           ...,
           [ 0.43478271,  0.61191636,  0.32206130,  ..., -0.48309177,
            -0.49919480, -0.49919480],
           [ 0.20933989,  0.40257660,  0.24154601,  ..., -0.56360704,
            -0.51529789, -0.57971013],
           [ 0.11272153,  0.30595824,  0.17713377,  ..., -0.56360704,
            -0.51529789, -0.61191624]],

          [[ 0.99100471,  1.36581755,  1.29085493,  ...,  0.76611710,
             0.54122955,  0.73613209],
           [ 1.20089996,  1.35082495,  1.36581755,  ...,  0.37631202,
             0.75112462,  1.11094475],
           [ 1.12593722,  1.33583248,  1.41079497,  ...,  0.24137947,
             0.79610211,  0.91604215],
           ...,
           [ 0.07646193,  0.25637197,  0.06146942,  ..., -0.52323836,
            -0.61319339, -0.61319339],
           [-0.16341813,  0.01649191, -0.07346311,  ..., -0.62818587,
            -0.59820086, -0.64317840],
           [-0.25337315, -0.11844061, -0.16341813,  ..., -0.62818587,
            -0.58320838, -0.65817088]]],


         [[[ 1.05873048,  1.48730183,  1.43968284,  ...,  1.12222254,
             0.82063496,  1.02698421],
           [ 1.29682565,  1.50317490,  1.55079389,  ...,  0.70952386,
             1.01111114,  1.37619078],
           [ 1.24920666,  1.50317490,  1.63015902,  ...,  0.58253974,
             1.04285717,  1.15396857],
           ...,
           [ 0.47142863,  0.64603180,  0.37619054,  ..., -0.35396814,
            -0.43333322, -0.44920623],
           [ 0.23333341,  0.42380959,  0.28095245,  ..., -0.48095238,
            -0.44920623, -0.52857143],
           [ 0.15396833,  0.32857150,  0.21746039,  ..., -0.49682540,
            -0.44920623, -0.54444444]],

          [[ 1.06280196,  1.51368785,  1.48148179,  ...,  1.07890511,
             0.78904998,  0.99838978],
           [ 1.32045114,  1.52979100,  1.57810009,  ...,  0.66022551,
             0.98228669,  1.35265732],
           [ 1.27214205,  1.52979100,  1.67471850,  ...,  0.54750413,
             0.99838978,  1.11111140],
           ...,
           [ 0.43478271,  0.61191636,  0.32206130,  ..., -0.48309177,
            -0.49919480, -0.49919480],
           [ 0.20933989,  0.40257660,  0.24154601,  ..., -0.56360704,
            -0.51529789, -0.57971013],
           [ 0.11272153,  0.30595824,  0.17713377,  ..., -0.56360704,
            -0.51529789, -0.61191624]],

          [[ 0.99100471,  1.36581755,  1.29085493,  ...,  0.76611710,
             0.54122955,  0.73613209],
           [ 1.20089996,  1.35082495,  1.36581755,  ...,  0.37631202,
             0.75112462,  1.11094475],
           [ 1.12593722,  1.33583248,  1.41079497,  ...,  0.24137947,
             0.79610211,  0.91604215],
           ...,
           [ 0.07646193,  0.25637197,  0.06146942,  ..., -0.52323836,
            -0.61319339, -0.61319339],
           [-0.16341813,  0.01649191, -0.07346311,  ..., -0.62818587,
            -0.59820086, -0.64317840],
           [-0.25337315, -0.11844061, -0.16341813,  ..., -0.62818587,
            -0.58320838, -0.65817088]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0744 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 103, vnnlib ID: 103 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.82976532, -12.37597370,  -4.80148506,  -8.27321815,  -4.32335472,
          -8.39564705,  -7.14005709,  -8.87581921, -10.65055561, -11.85609341]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [682]; unstable size 682; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 257, 1, 682] with unstable size 256 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 682] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 682] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [256]; unstable size 256; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 256] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 256] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.48958635,  6.85282898, -0.38445073,  3.19247031,  3.10144305,
          1.89875472,  3.66963410,  5.16848564,  6.31332350]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.82976532, -12.37597370,  -4.80148506,  -8.27321815,  -4.32335472,
          -8.39564705,  -7.14005709,  -8.87581921, -10.65055561, -11.85609341]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.88it/s]100%|██████████| 1/1 [00:00<00:00,  8.87it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.09303856, -12.88755322,  -4.96290588,  -8.65058517,  -4.84228325,
           -8.76727962,  -7.62690067,  -9.28729725, -11.05305099, -12.33880711]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.12062263]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1152 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 32.900123596191406
alpha/beta optimization time: 1.146538496017456
initial alpha-crown bounds: tensor([[ 2.57451057,  6.94005251, -0.32821006,  3.23324513,  3.14501977,
          1.95601845,  3.71171665,  5.26033783,  6.40743351]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.3282100558280945
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.66955184936523
Verifying property 0 with 1 instances.
##### Instance 103 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.5745105743408203.

Properties batch 1, size 1
Remaining timeout: 198.51400780677795
Verifying property 1 with 1 instances.
##### Instance 103 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.940052509307861.

Properties batch 2, size 1
Remaining timeout: 198.41046261787415
Verifying property 2 with 1 instances.
##### Instance 103 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.32821006]], device='cuda:0') need to verify.
Model prediction is: tensor([ -7.82976532, -12.37597370,  -4.80148506,  -8.27321815,  -4.32335472,
         -8.39564705,  -7.14005709,  -8.87581921, -10.65055561, -11.85609341],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.32821006]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 682
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 253
Node /15 input 0: size torch.Size([100]) unstable 14
-----------------
# of unstable neurons: 949
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 54] 
split level 1: [/input-12, 1] 
split level 2: [/input-12, 37] 
split level 3: [/input-12, 26] 
split level 4: [/input-12, 44] 
split level 5: [/input-12, 51] 
split level 6: [/input-8, 1892] 
split level 7: [/input-8, 1364] 
pruning_in_iteration open status: True
ratio of positive domain = 237 / 256 = 0.92578125
pruning-in-iteration extra time: 0.00464320182800293
Time: prepare 0.0030    bound 0.1437    transfer 0.0015    finalize 0.0017    func 0.1500    
Accumulated time: func 0.1500    prepare 0.0035    bound 0.1437    transfer 0.0015    finalize 0.0017    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11384 (8), -0.11067 (8), -0.09425 (8), -0.09116 (8), -0.07239 (8), -0.07087 (8), -0.06181 (8), -0.05896 (8), -0.05566 (8), -0.05411 (8), -0.04707 (8), -0.04411 (8), -0.04410 (8), -0.04334 (8), -0.03042 (8), -0.02961 (8), -0.00810 (8), -0.00784 (8), -0.00381 (8), 
Length of domains: 19
Time: pickout 0.0004    decision 0.0230    set_bounds 0.0175    solve 0.1500    add 0.0093    
Accumulated time: pickout 0.0004    decision 0.0230    set_bounds 0.0175    solve 0.1500    add 0.0093    
Current (lb-rhs): -0.11384159326553345
19 domains visited
Cumulative time: 0.21206402778625488

BaB round 2
batch: 19
splitting decisions: 
split level 0: [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-8, 542] [/input-12, 72] [/input-12, 72] 
split level 1: [/input-8, 1363] [/input-8, 1363] [/input-8, 1363] [/input-8, 1363] [/input-8, 1891] [/input-8, 1363] [/input-8, 1891] [/input-8, 1891] [/input-8, 1363] [/input-8, 1363] 
split level 2: [/input-8, 1891] [/input-8, 1886] [/input-8, 1891] [/input-8, 1886] [/input-8, 539] [/input-8, 1886] [/input-8, 1373] [/input-8, 1894] [/input-8, 1886] [/input-8, 1886] 
split level 3: [/input-8, 1373] [/input-8, 1373] [/input-8, 1373] [/input-8, 1373] [/input-8, 1373] [/input-8, 1373] [/input-8, 1381] [/input-8, 1893] [/input-8, 1373] [/input-8, 1373] 
pruning_in_iteration open status: True
ratio of positive domain = 192 / 304 = 0.631578947368421
pruning-in-iteration extra time: 0.004834175109863281
Time: prepare 0.0060    bound 0.1782    transfer 0.0018    finalize 0.0019    func 0.1878    
Accumulated time: func 0.3378    prepare 0.0097    bound 0.3219    transfer 0.0032    finalize 0.0036    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09104 (12), -0.08892 (12), -0.08721 (12), -0.08533 (12), -0.08341 (12), -0.08092 (12), -0.08065 (12), -0.07998 (12), -0.07850 (12), -0.07690 (12), -0.07381 (12), -0.07231 (12), -0.07197 (12), -0.07114 (12), -0.07057 (12), -0.06981 (12), -0.06811 (12), -0.06606 (12), -0.06539 (12), -0.06422 (12), 
Length of domains: 112
Time: pickout 0.0013    decision 0.0221    set_bounds 0.0147    solve 0.1879    add 0.0014    
Accumulated time: pickout 0.0016    decision 0.0451    set_bounds 0.0322    solve 0.3379    add 0.0107    
Current (lb-rhs): -0.09103626012802124
131 domains visited
Cumulative time: 0.44056177139282227

BaB round 3
batch: 112
splitting decisions: 
split level 0: [/input-8, 1886] [/input-8, 1052] [/input-8, 1356] [/input-8, 1363] [/input-8, 1356] [/input-8, 1052] [/input-8, 1356] [/input-8, 1363] [/input-8, 1052] [/input-8, 1356] 
pruning_in_iteration open status: False
ratio of positive domain = 35 / 224 = 0.15625
pruning-in-iteration extra time: 7.963180541992188e-05
Time: prepare 0.0044    bound 0.0973    transfer 0.0012    finalize 0.0012    func 0.1042    
Accumulated time: func 0.4420    prepare 0.0143    bound 0.4192    transfer 0.0044    finalize 0.0048    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08665 (13), -0.08345 (13), -0.08274 (13), -0.08006 (13), -0.07891 (13), -0.07856 (13), -0.07660 (13), -0.07645 (13), -0.07540 (13), -0.07514 (13), -0.07392 (13), -0.07311 (13), -0.07277 (13), -0.07271 (13), -0.07080 (13), -0.07001 (13), -0.06920 (13), -0.06894 (13), -0.06750 (13), -0.06647 (13), 
Length of domains: 187
Time: pickout 0.0023    decision 0.0210    set_bounds 0.0048    solve 0.1043    add 0.0018    
Accumulated time: pickout 0.0039    decision 0.0661    set_bounds 0.0370    solve 0.4422    add 0.0125    
Current (lb-rhs): -0.08665382862091064
318 domains visited
Cumulative time: 0.5752289295196533

BaB round 4
batch: 187
splitting decisions: 
split level 0: [/input-8, 1886] [/input-8, 1067] [/input-8, 1357] [/input-8, 1828] [/input-8, 1891] [/input-8, 1067] [/input-8, 1357] [/input-8, 1356] [/input-8, 1067] [/input-8, 1357] 
pruning_in_iteration open status: True
ratio of positive domain = 83 / 374 = 0.22192513368983957
pruning-in-iteration extra time: 0.003010272979736328
Time: prepare 0.0071    bound 0.1548    transfer 0.0022    finalize 0.0021    func 0.1662    
Accumulated time: func 0.6082    prepare 0.0216    bound 0.5740    transfer 0.0067    finalize 0.0069    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08281 (14), -0.08226 (14), -0.07825 (14), -0.07583 (14), -0.07465 (14), -0.07443 (14), -0.07442 (14), -0.07281 (14), -0.07209 (14), -0.07192 (14), -0.07138 (14), -0.06919 (14), -0.06884 (14), -0.06878 (14), -0.06810 (14), -0.06682 (14), -0.06672 (14), -0.06629 (14), -0.06500 (14), -0.06445 (14), 
Length of domains: 291
Time: pickout 0.0028    decision 0.0246    set_bounds 0.0079    solve 0.1664    add 0.0021    
Accumulated time: pickout 0.0068    decision 0.0907    set_bounds 0.0449    solve 0.6086    add 0.0146    
Current (lb-rhs): -0.08281317353248596
609 domains visited
Cumulative time: 0.7798025608062744

BaB round 5
batch: 291
splitting decisions: 
split level 0: [/input-8, 1356] [/input-8, 1828] [/input-8, 1886] [/input-8, 1067] [/input-8, 1828] [/input-8, 1886] [/input-8, 1828] [/input-8, 1356] [/input-8, 1067] [/input-8, 1828] 
pruning_in_iteration open status: True
ratio of positive domain = 199 / 582 = 0.34192439862542956
pruning-in-iteration extra time: 0.0047147274017333984
Time: prepare 0.0114    bound 0.1966    transfer 0.0023    finalize 0.0036    func 0.2140    
Accumulated time: func 0.8222    prepare 0.0331    bound 0.7706    transfer 0.0089    finalize 0.0105    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07905 (15), -0.07876 (15), -0.07502 (15), -0.07212 (15), -0.07123 (15), -0.07031 (15), -0.07030 (15), -0.06883 (15), -0.06873 (15), -0.06872 (15), -0.06775 (15), -0.06704 (15), -0.06573 (15), -0.06523 (15), -0.06511 (15), -0.06478 (15), -0.06370 (15), -0.06274 (15), -0.06243 (15), -0.06239 (15), 
Length of domains: 383
Time: pickout 0.0041    decision 0.0320    set_bounds 0.0124    solve 0.2141    add 0.0028    
Accumulated time: pickout 0.0108    decision 0.1227    set_bounds 0.0573    solve 0.8227    add 0.0175    
Current (lb-rhs): -0.07904627919197083
992 domains visited
Cumulative time: 1.046353816986084

BaB round 6
batch: 383
splitting decisions: 
split level 0: [/input-8, 1357] [/input-8, 1356] [/input-8, 1357] [/input-8, 1357] [/input-8, 1886] [/input-8, 1357] [/input-8, 1067] [/input-8, 1357] [/input-8, 539] [/input-8, 1891] 
pruning_in_iteration open status: True
ratio of positive domain = 178 / 766 = 0.2323759791122716
pruning-in-iteration extra time: 0.0046732425689697266
Time: prepare 0.0149    bound 0.1994    transfer 0.0035    finalize 0.0042    func 0.2227    
Accumulated time: func 1.0449    prepare 0.0482    bound 0.9701    transfer 0.0124    finalize 0.0146    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07513 (16), -0.07359 (16), -0.06986 (16), -0.06758 (16), -0.06688 (16), -0.06663 (16), -0.06608 (16), -0.06574 (16), -0.06559 (16), -0.06357 (16), -0.06350 (16), -0.06282 (16), -0.06281 (16), -0.06223 (16), -0.06114 (16), -0.06052 (16), -0.06050 (16), -0.06033 (16), -0.06011 (16), -0.05898 (16), 
Length of domains: 588
Time: pickout 0.0058    decision 0.0361    set_bounds 0.0159    solve 0.2229    add 0.0027    
Accumulated time: pickout 0.0166    decision 0.1588    set_bounds 0.0732    solve 1.0456    add 0.0202    
Current (lb-rhs): -0.07513433694839478
1580 domains visited
Cumulative time: 1.3310120105743408

BaB round 7
batch: 588
splitting decisions: 
split level 0: [/input-8, 1067] [/input-8, 539] [/input-8, 1067] [/input-8, 1891] [/input-8, 542] [/input-8, 542] [/input-8, 542] [/input-8, 542] [/input-8, 1357] [/input-8, 1891] 
pruning_in_iteration open status: True
ratio of positive domain = 377 / 1176 = 0.32057823129251706
pruning-in-iteration extra time: 0.0043277740478515625
Time: prepare 0.0226    bound 0.2528    transfer 0.0050    finalize 0.0060    func 0.2866    
Accumulated time: func 1.3315    prepare 0.0710    bound 1.2229    transfer 0.0174    finalize 0.0206    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07159 (17), -0.07061 (17), -0.06797 (17), -0.06577 (17), -0.06369 (17), -0.06352 (17), -0.06343 (17), -0.06203 (17), -0.06160 (17), -0.06088 (17), -0.06063 (17), -0.06022 (17), -0.05970 (17), -0.05900 (17), -0.05863 (17), -0.05859 (17), -0.05844 (17), -0.05832 (17), -0.05794 (17), -0.05746 (17), 
Length of domains: 799
Time: pickout 0.0078    decision 0.0408    set_bounds 0.0244    solve 0.2868    add 0.0078    
Accumulated time: pickout 0.0245    decision 0.1996    set_bounds 0.0976    solve 1.3324    add 0.0280    
Current (lb-rhs): -0.07158571481704712
2379 domains visited
Cumulative time: 1.7012181282043457

BaB round 8
batch: 799
splitting decisions: 
split level 0: [/input-8, 542] [/input-8, 542] [/input-8, 542] [/input-8, 542] [/input-8, 1356] [/input-8, 1356] [/input-8, 1067] [/input-8, 539] [/input-8, 542] [/input-8, 542] 
pruning_in_iteration open status: True
ratio of positive domain = 533 / 1598 = 0.3335419274092616
pruning-in-iteration extra time: 0.004877567291259766
Time: prepare 0.0310    bound 0.2880    transfer 0.0048    finalize 0.0078    func 0.3318    
Accumulated time: func 1.6633    prepare 0.1022    bound 1.5108    transfer 0.0222    finalize 0.0284    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07117 (18), -0.06863 (18), -0.06324 (18), -0.06220 (18), -0.06141 (18), -0.06002 (18), -0.05995 (18), -0.05978 (18), -0.05892 (18), -0.05774 (18), -0.05748 (18), -0.05701 (18), -0.05697 (18), -0.05674 (18), -0.05588 (18), -0.05563 (18), -0.05548 (18), -0.05457 (18), -0.05428 (18), -0.05372 (18), 
Length of domains: 1065
Time: pickout 0.0124    decision 0.0591    set_bounds 0.0347    solve 0.3331    add 0.0156    
Accumulated time: pickout 0.0369    decision 0.2587    set_bounds 0.1323    solve 1.6655    add 0.0436    
Current (lb-rhs): -0.07116994261741638
3444 domains visited
Cumulative time: 2.1593263149261475

BaB round 9
batch: 1065
splitting decisions: 
split level 0: [/input-8, 539] [/input-8, 1356] [/input-8, 539] [/input-8, 539] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] [/input-8, 1356] [/input-8, 1828] 
pruning_in_iteration open status: True
ratio of positive domain = 889 / 2130 = 0.4173708920187793
pruning-in-iteration extra time: 0.004832029342651367
Time: prepare 0.0422    bound 0.2829    transfer 0.0060    finalize 0.0122    func 0.3435    
Accumulated time: func 2.0068    prepare 0.1447    bound 1.7937    transfer 0.0282    finalize 0.0406    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06542 (19), -0.06285 (19), -0.06190 (19), -0.06012 (19), -0.05965 (19), -0.05756 (19), -0.05740 (19), -0.05655 (19), -0.05634 (19), -0.05557 (19), -0.05550 (19), -0.05507 (19), -0.05430 (19), -0.05418 (19), -0.05407 (19), -0.05380 (19), -0.05278 (19), -0.05253 (19), -0.05248 (19), -0.05230 (19), 
Length of domains: 1241
Time: pickout 0.0167    decision 0.0733    set_bounds 0.1934    solve 0.3439    add 0.0123    
Accumulated time: pickout 0.0535    decision 0.3320    set_bounds 0.3258    solve 2.0094    add 0.0560    
Current (lb-rhs): -0.0654161274433136
4685 domains visited
Cumulative time: 2.809812545776367

BaB round 10
batch: 1241
splitting decisions: 
split level 0: [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] 
pruning_in_iteration open status: True
ratio of positive domain = 1084 / 2482 = 0.4367445608380338
pruning-in-iteration extra time: 0.0055696964263916016
Time: prepare 0.0535    bound 0.3374    transfer 0.0058    finalize 0.0169    func 0.4150    
Accumulated time: func 2.4218    prepare 0.1985    bound 2.1312    transfer 0.0341    finalize 0.0575    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06513 (20), -0.06256 (20), -0.06146 (20), -0.05974 (20), -0.05920 (20), -0.05727 (20), -0.05703 (20), -0.05609 (20), -0.05595 (20), -0.05523 (20), -0.05484 (20), -0.05402 (20), -0.05378 (20), -0.05367 (20), -0.05334 (20), -0.05250 (20), -0.05221 (20), -0.05191 (20), -0.05148 (20), -0.05116 (20), 
Length of domains: 1398
Time: pickout 0.0235    decision 0.0913    set_bounds 0.0737    solve 0.4157    add 0.0073    
Accumulated time: pickout 0.0770    decision 0.4233    set_bounds 0.3994    solve 2.4251    add 0.0633    
Current (lb-rhs): -0.06513357162475586
6083 domains visited
Cumulative time: 3.430129051208496

BaB round 11
batch: 1398
splitting decisions: 
split level 0: [/input-8, 1292] [/input-8, 1292] [/input-8, 1292] [/input-8, 1292] [/input-8, 1292] [/input-8, 1292] [/input-8, 1292] [/input-8, 1292] [/input-8, 1292] [/input-8, 1901] 
pruning_in_iteration open status: True
ratio of positive domain = 791 / 2796 = 0.28290414878397707
pruning-in-iteration extra time: 0.005470991134643555
Time: prepare 0.0599    bound 0.3322    transfer 0.0140    finalize 0.0226    func 0.4290    
Accumulated time: func 2.8509    prepare 0.2586    bound 2.4633    transfer 0.0481    finalize 0.0801    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05950 (21), -0.05835 (21), -0.05748 (21), -0.05643 (21), -0.05531 (21), -0.05452 (21), -0.05417 (21), -0.05404 (21), -0.05287 (21), -0.05189 (21), -0.05187 (21), -0.05160 (21), -0.05105 (21), -0.05095 (21), -0.05057 (21), -0.05039 (21), -0.04971 (21), -0.04959 (21), -0.04922 (21), -0.04907 (21), 
Length of domains: 2005
Time: pickout 0.0235    decision 0.1058    set_bounds 0.0658    solve 0.4298    add 0.0083    
Accumulated time: pickout 0.1005    decision 0.5291    set_bounds 0.4652    solve 2.8549    add 0.0715    
Current (lb-rhs): -0.05950450897216797
8088 domains visited
Cumulative time: 4.071279287338257

BaB round 12
batch: 2005
splitting decisions: 
split level 0: [/input-8, 542] [/input-8, 542] [/input-8, 1901] [/input-8, 542] [/input-8, 1292] [/input-8, 1893] [/input-8, 1893] [/input-8, 1893] [/input-8, 1893] [/input-8, 1893] 
pruning_in_iteration open status: True
ratio of positive domain = 941 / 4010 = 0.23466334164588531
pruning-in-iteration extra time: 0.005521297454833984
Time: prepare 0.0882    bound 0.3412    transfer 0.0177    finalize 0.0259    func 0.4744    
Accumulated time: func 3.3253    prepare 0.3471    bound 2.8045    transfer 0.0658    finalize 0.1060    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05428 (22), -0.05307 (22), -0.05291 (22), -0.05291 (22), -0.05218 (22), -0.05170 (22), -0.05071 (22), -0.04991 (22), -0.04905 (22), -0.04887 (22), -0.04882 (22), -0.04875 (22), -0.04844 (22), -0.04776 (22), -0.04754 (22), -0.04747 (22), -0.04734 (22), -0.04716 (22), -0.04668 (22), -0.04660 (22), 
Length of domains: 3069
Time: pickout 0.0357    decision 0.3098    set_bounds 0.0953    solve 0.4755    add 0.0171    
Accumulated time: pickout 0.1362    decision 0.8389    set_bounds 0.5605    solve 3.3304    add 0.0886    
Current (lb-rhs): -0.0542791485786438
11157 domains visited
Cumulative time: 5.0171897411346436

BaB round 13
batch: 3069
splitting decisions: 
split level 0: [/input-8, 1891] [/input-8, 1891] [/input, 2455] [/input-8, 542] [/input-8, 1893] [/input-8, 1893] [/input-8, 1893] [/input-8, 1893] [/input-8, 1893] [/input-8, 1381] 
pruning_in_iteration open status: True
ratio of positive domain = 1504 / 6138 = 0.2450309547083741
pruning-in-iteration extra time: 0.005023956298828125
Time: prepare 0.1398    bound 0.3580    transfer 0.0377    finalize 0.0350    func 0.5710    
Accumulated time: func 3.8963    prepare 0.4872    bound 3.1625    transfer 0.1035    finalize 0.1410    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05040 (23), -0.04918 (23), -0.04827 (23), -0.04782 (23), -0.04751 (23), -0.04724 (23), -0.04718 (23), -0.04660 (23), -0.04628 (23), -0.04614 (23), -0.04596 (23), -0.04596 (23), -0.04574 (23), -0.04542 (23), -0.04530 (23), -0.04509 (23), -0.04502 (23), -0.04483 (23), -0.04392 (23), -0.04363 (23), 
Length of domains: 4634
Time: pickout 0.0515    decision 0.1998    set_bounds 0.3031    solve 0.5725    add 0.0267    
Accumulated time: pickout 0.1878    decision 1.0386    set_bounds 0.8636    solve 3.9028    add 0.1152    
Current (lb-rhs): -0.05039653182029724
15791 domains visited
Cumulative time: 6.183729410171509

BaB round 14
batch: 4096
splitting decisions: 
split level 0: [/input-8, 1894] [/input-8, 1044] [/input-8, 1894] [/input-8, 931] [/input-8, 1044] [/input-8, 1044] [/input-8, 1894] [/input-8, 1894] [/input-8, 1894] [/input-8, 1894] 
pruning_in_iteration open status: True
ratio of positive domain = 2646 / 8192 = 0.322998046875
pruning-in-iteration extra time: 0.00500178337097168
Time: prepare 0.1695    bound 0.3805    transfer 0.0465    finalize 0.0464    func 0.6438    
Accumulated time: func 4.5401    prepare 0.6569    bound 3.5431    transfer 0.1500    finalize 0.1874    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04751 (23), -0.04627 (24), -0.04560 (24), -0.04530 (23), -0.04509 (23), -0.04475 (24), -0.04474 (24), -0.04404 (24), -0.04372 (24), -0.04340 (24), -0.04337 (24), -0.04336 (24), -0.04328 (23), -0.04302 (24), -0.04271 (24), -0.04219 (24), -0.04192 (23), -0.04156 (24), -0.04107 (24), -0.04094 (24), 
Length of domains: 6084
Time: pickout 0.0612    decision 0.2356    set_bounds 0.3228    solve 0.6457    add 0.0210    
Accumulated time: pickout 0.2489    decision 1.2742    set_bounds 1.1864    solve 4.5486    add 0.1363    
Current (lb-rhs): -0.04750588536262512
21337 domains visited
current_vram/total_varm: 25.2GB/99.9GB, batch_size increase to 8192
Cumulative time: 7.490731716156006

BaB round 15
batch: 6084
splitting decisions: 
split level 0: [/input-8, 1891] [/input-8, 1894] [/input-8, 1894] [/input-8, 1044] [/input-8, 1044] [/input-8, 1044] [/input-8, 1381] [/input-8, 1894] [/input-8, 1894] [/input-8, 1381] 
pruning_in_iteration open status: True
ratio of positive domain = 4255 / 12168 = 0.34968770545693617
pruning-in-iteration extra time: 0.005046844482421875
Time: prepare 0.2576    bound 0.4729    transfer 0.0684    finalize 0.0749    func 0.8754    
Accumulated time: func 5.4155    prepare 0.9149    bound 4.0159    transfer 0.2183    finalize 0.2624    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04438 (24), -0.04253 (25), -0.04193 (24), -0.04160 (25), -0.04151 (25), -0.04093 (24), -0.04061 (25), -0.04021 (25), -0.04019 (25), -0.04000 (24), -0.03992 (25), -0.03960 (25), -0.03945 (25), -0.03919 (25), -0.03906 (25), -0.03890 (25), -0.03881 (24), -0.03871 (25), -0.03859 (25), -0.03858 (25), 
Length of domains: 7913
Time: pickout 0.0904    decision 0.5112    set_bounds 0.4249    solve 0.8784    add 0.0291    
Accumulated time: pickout 0.3393    decision 1.7854    set_bounds 1.6113    solve 5.4270    add 0.1654    
Current (lb-rhs): -0.044378817081451416
29250 domains visited
Cumulative time: 9.453622102737427

BaB round 16
batch: 7913
splitting decisions: 
split level 0: [/input-8, 1044] [/input-8, 1044] [/input-8, 1894] [/input-8, 1894] [/input-8, 1044] [/input-8, 1044] [/input-8, 1044] [/input-8, 1044] [/input-8, 1044] [/input-8, 931] 
pruning_in_iteration open status: True
ratio of positive domain = 5347 / 15826 = 0.3378617464931126
pruning-in-iteration extra time: 0.005098819732666016
Time: prepare 0.3368    bound 0.5839    transfer 0.0915    finalize 0.0880    func 1.1020    
Accumulated time: func 6.5174    prepare 1.2519    bound 4.5998    transfer 0.3098    finalize 0.3503    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03961 (25), -0.03903 (25), -0.03812 (26), -0.03771 (25), -0.03724 (26), -0.03713 (26), -0.03710 (26), -0.03677 (25), -0.03650 (25), -0.03626 (26), -0.03622 (26), -0.03620 (26), -0.03618 (25), -0.03611 (26), -0.03588 (26), -0.03573 (26), -0.03549 (26), -0.03532 (26), -0.03526 (26), -0.03524 (26), 
Length of domains: 10479
Time: pickout 0.1292    decision 0.6226    set_bounds 0.5440    solve 1.1058    add 0.0496    
Accumulated time: pickout 0.4685    decision 2.4079    set_bounds 2.1552    solve 6.5328    add 0.2150    
Current (lb-rhs): -0.03960636258125305
39729 domains visited
Cumulative time: 11.943325757980347

BaB round 17
batch: 8192
splitting decisions: 
split level 0: [/input-8, 1358] [/input-8, 1358] [/input-8, 571] [/input-8, 931] [/input-8, 1358] [/input-8, 1358] [/input-8, 1358] [/input-8, 571] [/input-8, 571] [/input-8, 1358] 
pruning_in_iteration open status: True
ratio of positive domain = 6194 / 16384 = 0.3780517578125
pruning-in-iteration extra time: 0.005059957504272461
Time: prepare 0.3432    bound 0.5720    transfer 0.0924    finalize 0.0996    func 1.1089    
Accumulated time: func 7.6263    prepare 1.5959    bound 5.1718    transfer 0.4022    finalize 0.4499    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03961 (25), -0.03724 (26), -0.03677 (25), -0.03650 (25), -0.03622 (26), -0.03592 (26), -0.03543 (27), -0.03532 (26), -0.03526 (26), -0.03498 (26), -0.03486 (26), -0.03461 (26), -0.03459 (25), -0.03448 (26), -0.03443 (27), -0.03441 (27), -0.03431 (26), -0.03375 (27), -0.03359 (26), -0.03359 (26), 
Length of domains: 12477
Time: pickout 0.1275    decision 0.6743    set_bounds 0.5721    solve 1.1132    add 0.0410    
Accumulated time: pickout 0.5960    decision 3.0823    set_bounds 2.7273    solve 7.6460    add 0.2560    
Current (lb-rhs): -0.03960636258125305
49919 domains visited
current_vram/total_varm: 40.5GB/99.9GB, batch_size increase to 16384
Cumulative time: 14.511327266693115

BaB round 18
batch: 12477
splitting decisions: 
split level 0: [/input-8, 1381] [/input-8, 931] [/input-8, 931] [/input-8, 1894] [/input-8, 1901] [/input-8, 1901] [/input-8, 1901] [/input-8, 1901] [/input-8, 1901] [/input-8, 1901] 
pruning_in_iteration open status: True
ratio of positive domain = 11095 / 24954 = 0.44461809729903023
pruning-in-iteration extra time: 0.0053021907806396484
Time: prepare 0.5237    bound 0.7672    transfer 0.1413    finalize 0.1554    func 1.5898    
Accumulated time: func 9.2161    prepare 2.1199    bound 5.9390    transfer 0.5435    finalize 0.6053    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03628 (26), -0.03452 (27), -0.03430 (26), -0.03354 (26), -0.03350 (27), -0.03306 (26), -0.03287 (27), -0.03281 (27), -0.03262 (28), -0.03226 (27), -0.03217 (27), -0.03214 (27), -0.03204 (27), -0.03191 (27), -0.03185 (27), -0.03174 (28), -0.03160 (28), -0.03141 (27), -0.03134 (26), -0.03123 (26), 
Length of domains: 13859
Time: pickout 0.2003    decision 0.9260    set_bounds 1.0096    solve 1.5956    add 0.0564    
Accumulated time: pickout 0.7964    decision 4.0083    set_bounds 3.7369    solve 9.2416    add 0.3124    
Current (lb-rhs): -0.036277562379837036
63778 domains visited
Cumulative time: 18.369685649871826

BaB round 19
batch: 13859
splitting decisions: 
split level 0: [/input-8, 931] [/input-8, 1910] [/input-8, 1910] [/input-8, 1910] [/input-8, 1910] [/input-8, 1358] [/input-8, 1358] [/input-8, 1910] [/input-8, 1901] [/input-8, 1358] 
pruning_in_iteration open status: True
ratio of positive domain = 11977 / 27718 = 0.4321018832527599
pruning-in-iteration extra time: 0.005375385284423828
Time: prepare 0.5905    bound 0.8558    transfer 0.1572    finalize 0.1758    func 1.7817    
Accumulated time: func 10.9978    prepare 2.7108    bound 6.7947    transfer 0.7007    finalize 0.7811    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03383 (27), -0.03170 (28), -0.03109 (27), -0.03105 (27), -0.03082 (28), -0.03062 (27), -0.03045 (29), -0.03010 (28), -0.03001 (28), -0.02983 (27), -0.02957 (29), -0.02943 (29), -0.02935 (28), -0.02934 (28), -0.02922 (28), -0.02914 (28), -0.02910 (28), -0.02897 (27), -0.02895 (28), -0.02870 (29), 
Length of domains: 15741
Time: pickout 0.2287    decision 1.0115    set_bounds 1.1135    solve 1.7882    add 0.0604    
Accumulated time: pickout 1.0251    decision 5.0197    set_bounds 4.8504    solve 11.0298    add 0.3728    
Current (lb-rhs): -0.033830076456069946
79519 domains visited
Cumulative time: 22.649664163589478

BaB round 20
batch: 15741
splitting decisions: 
split level 0: [/input-8, 1358] [/input-8, 1358] [/input-8, 1358] [/input-8, 1358] [/input-8, 1358] [/input-8, 1381] [/input-8, 1358] [/input-8, 1358] [/input-8, 1358] [/input-8, 1358] 
pruning_in_iteration open status: True
ratio of positive domain = 14235 / 31482 = 0.4521631408423862
pruning-in-iteration extra time: 0.005307674407958984
Time: prepare 0.6799    bound 0.9316    transfer 0.1833    finalize 0.2006    func 1.9994    
Accumulated time: func 12.9972    prepare 3.3910    bound 7.7263    transfer 0.8840    finalize 0.9817    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03098 (28), -0.02968 (29), -0.02880 (29), -0.02824 (28), -0.02800 (28), -0.02796 (29), -0.02796 (29), -0.02775 (28), -0.02734 (29), -0.02732 (29), -0.02720 (29), -0.02709 (29), -0.02708 (29), -0.02701 (28), -0.02675 (29), -0.02646 (29), -0.02642 (30), -0.02641 (29), -0.02620 (29), -0.02615 (28), 
Length of domains: 17247
Time: pickout 0.2728    decision 1.1554    set_bounds 1.2657    solve 2.0083    add 0.0945    
Accumulated time: pickout 1.2978    decision 6.1751    set_bounds 6.1161    solve 13.0380    add 0.4673    
Current (lb-rhs): -0.03097665309906006
96766 domains visited
Cumulative time: 27.536009311676025

BaB round 21
batch: 16384
splitting decisions: 
split level 0: [/input-8, 1308] [/input-8, 1374] [/input-8, 1308] [/input-8, 1308] [/input-8, 1308] [/input-8, 1308] [/input-8, 1308] [/input-8, 1308] [/input-8, 1910] [/input-8, 931] 
pruning_in_iteration open status: True
ratio of positive domain = 18156 / 32768 = 0.5540771484375
pruning-in-iteration extra time: 0.0055010318756103516
Time: prepare 0.7334    bound 0.8401    transfer 0.1850    finalize 0.5394    func 2.3009    
Accumulated time: func 15.2981    prepare 4.1249    bound 8.5664    transfer 1.0690    finalize 1.5211    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02884 (29), -0.02614 (29), -0.02594 (29), -0.02566 (30), -0.02561 (29), -0.02523 (30), -0.02502 (30), -0.02499 (31), -0.02486 (29), -0.02478 (30), -0.02454 (29), -0.02439 (31), -0.02438 (31), -0.02435 (30), -0.02423 (31), -0.02414 (29), -0.02413 (30), -0.02412 (31), -0.02394 (30), -0.02358 (28), 
Length of domains: 15475
Time: pickout 0.2924    decision 2.2057    set_bounds 1.0522    solve 2.3086    add 0.0699    
Accumulated time: pickout 1.5902    decision 8.3808    set_bounds 7.1683    solve 15.3467    add 0.5372    
Current (lb-rhs): -0.028841376304626465
111378 domains visited
Cumulative time: 33.567004442214966

BaB round 22
batch: 15475
splitting decisions: 
split level 0: [/input-8, 1910] [/input-8, 1369] [/input-8, 1369] [/input-8, 1369] [/input-8, 1369] [/input-8, 1910] [/input-8, 1910] [/input-8, 1369] [/input-8, 1369] [/input-8, 1910] 
pruning_in_iteration open status: True
ratio of positive domain = 17980 / 30950 = 0.5809369951534733
pruning-in-iteration extra time: 0.005395412445068359
Time: prepare 0.7049    bound 0.7673    transfer 0.1798    finalize 0.5173    func 2.1724    
Accumulated time: func 17.4705    prepare 4.8302    bound 9.3337    transfer 1.2488    finalize 2.0384    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02428 (30), -0.02413 (31), -0.02401 (32), -0.02360 (30), -0.02355 (31), -0.02350 (31), -0.02339 (32), -0.02339 (32), -0.02325 (32), -0.02325 (31), -0.02302 (32), -0.02268 (31), -0.02262 (31), -0.02242 (32), -0.02241 (32), -0.02239 (32), -0.02230 (31), -0.02226 (32), -0.02222 (32), -0.02218 (30), 
Length of domains: 12970
Time: pickout 0.2871    decision 1.1787    set_bounds 0.9893    solve 2.1794    add 0.0823    
Accumulated time: pickout 1.8773    decision 9.5595    set_bounds 8.1576    solve 17.5261    add 0.6195    
Current (lb-rhs): -0.024276256561279297
124348 domains visited
Cumulative time: 38.391571044921875

BaB round 23
batch: 12970
splitting decisions: 
split level 0: [/input-8, 1381] [/input-8, 1381] [/input-8, 571] [/input-8, 1308] [/input-8, 1910] [/input-8, 1308] [/input-8, 931] [/input-8, 931] [/input-8, 1910] [/input-8, 1308] 
pruning_in_iteration open status: True
ratio of positive domain = 15777 / 25940 = 0.6082112567463377
pruning-in-iteration extra time: 0.005414009094238281
Time: prepare 0.5860    bound 0.6394    transfer 0.1485    finalize 0.1757    func 1.5527    
Accumulated time: func 19.0232    prepare 5.4166    bound 9.9731    transfer 1.3973    finalize 2.2141    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02314 (32), -0.02273 (31), -0.02255 (32), -0.02215 (32), -0.02191 (31), -0.02176 (33), -0.02157 (32), -0.02130 (32), -0.02123 (32), -0.02114 (33), -0.02113 (33), -0.02090 (32), -0.02087 (33), -0.02085 (32), -0.02076 (33), -0.02075 (32), -0.02073 (32), -0.02062 (31), -0.02048 (32), -0.02034 (32), 
Length of domains: 10163
Time: pickout 0.2427    decision 0.7771    set_bounds 1.0974    solve 1.5599    add 0.0421    
Accumulated time: pickout 2.1200    decision 10.3367    set_bounds 9.2550    solve 19.0860    add 0.6615    
Current (lb-rhs): -0.023142516613006592
134511 domains visited
Cumulative time: 42.215696811676025

BaB round 24
batch: 10163
splitting decisions: 
split level 0: [/input-8, 1308] [/input-8, 1308] [/input-8, 1308] [/input-8, 1308] [/input-8, 1308] [/input-8, 533] [/input-8, 1308] [/input-8, 1308] [/input-8, 533] [/input-8, 1308] 
pruning_in_iteration open status: True
ratio of positive domain = 11632 / 20326 = 0.572271966938896
pruning-in-iteration extra time: 0.00533604621887207
Time: prepare 0.4741    bound 0.5473    transfer 0.1173    finalize 0.3664    func 1.5075    
Accumulated time: func 20.5306    prepare 5.8910    bound 10.5205    transfer 1.5146    finalize 2.5805    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02172 (32), -0.02090 (32), -0.02090 (33), -0.02030 (33), -0.02023 (33), -0.01990 (33), -0.01962 (32), -0.01932 (33), -0.01923 (34), -0.01923 (33), -0.01913 (33), -0.01899 (32), -0.01889 (34), -0.01877 (32), -0.01875 (33), -0.01861 (33), -0.01861 (33), -0.01860 (33), -0.01835 (32), -0.01831 (34), 
Length of domains: 8694
Time: pickout 0.2019    decision 0.8309    set_bounds 0.6955    solve 1.5124    add 0.0774    
Accumulated time: pickout 2.3219    decision 11.1676    set_bounds 9.9506    solve 20.5984    add 0.7390    
Current (lb-rhs): -0.021718084812164307
143205 domains visited
Cumulative time: 45.61544990539551

BaB round 25
batch: 8694
splitting decisions: 
split level 0: [/input-8, 533] [/input-8, 533] [/input-8, 533] [/input-8, 533] [/input-8, 533] [/input-8, 533] [/input-8, 1374] [/input-8, 533] [/input-8, 533] [/input-8, 1374] 
pruning_in_iteration open status: True
ratio of positive domain = 10754 / 17388 = 0.6184725097768575
pruning-in-iteration extra time: 0.0051877498626708984
Time: prepare 0.3896    bound 0.4628    transfer 0.1011    finalize 0.3380    func 1.2941    
Accumulated time: func 21.8248    prepare 6.2810    bound 10.9832    transfer 1.6156    finalize 2.9185    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01960 (33), -0.01878 (33), -0.01837 (34), -0.01801 (34), -0.01752 (33), -0.01736 (34), -0.01712 (35), -0.01687 (33), -0.01682 (35), -0.01681 (34), -0.01667 (33), -0.01642 (34), -0.01640 (33), -0.01625 (35), -0.01623 (34), -0.01613 (33), -0.01612 (34), -0.01606 (34), -0.01605 (33), -0.01604 (35), 
Length of domains: 6634
Time: pickout 0.1675    decision 0.5153    set_bounds 0.5862    solve 1.2986    add 0.0289    
Accumulated time: pickout 2.4894    decision 11.6829    set_bounds 10.5368    solve 21.8970    add 0.7679    
Current (lb-rhs): -0.019602596759796143
149839 domains visited
Cumulative time: 48.28068423271179

BaB round 26
batch: 6634
splitting decisions: 
split level 0: [/input-8, 1374] [/input-8, 571] [/input-8, 1374] [/input-8, 1374] [/input-8, 1374] [/input-8, 1374] [/input-8, 1374] [/input-8, 1374] [/input-8, 1374] [/input-8, 571] 
pruning_in_iteration open status: True
ratio of positive domain = 8171 / 13268 = 0.6158426288815195
pruning-in-iteration extra time: 0.00510406494140625
Time: prepare 0.3063    bound 0.4019    transfer 0.0760    finalize 0.2713    func 1.0577    
Accumulated time: func 22.8825    prepare 6.5876    bound 11.3851    transfer 1.6916    finalize 3.1898    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01689 (34), -0.01625 (35), -0.01606 (34), -0.01595 (35), -0.01528 (34), -0.01516 (35), -0.01482 (36), -0.01467 (35), -0.01459 (34), -0.01453 (36), -0.01444 (34), -0.01439 (35), -0.01416 (34), -0.01414 (35), -0.01409 (35), -0.01400 (36), -0.01395 (35), -0.01388 (35), -0.01379 (35), -0.01376 (34), 
Length of domains: 5097
Time: pickout 0.1336    decision 0.3878    set_bounds 0.4877    solve 1.0609    add 0.0283    
Accumulated time: pickout 2.6230    decision 12.0707    set_bounds 11.0245    solve 22.9579    add 0.7961    
Current (lb-rhs): -0.01689407229423523
154936 domains visited
Cumulative time: 50.432318449020386

BaB round 27
batch: 5097
splitting decisions: 
split level 0: [/input, 2455] [/input-8, 1374] [/input-8, 1374] [/input-8, 1890] [/input-8, 1890] [/input-8, 1374] [/input-8, 1374] [/input-8, 1861] [/input-8, 1890] [/input-8, 1861] 
pruning_in_iteration open status: True
ratio of positive domain = 6554 / 10194 = 0.6429272120855405
pruning-in-iteration extra time: 0.005024909973144531
Time: prepare 0.2295    bound 0.3625    transfer 0.0588    finalize 0.0629    func 0.7154    
Accumulated time: func 23.5979    prepare 6.8174    bound 11.7476    transfer 1.7504    finalize 3.2527    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01486 (35), -0.01405 (36), -0.01401 (35), -0.01372 (36), -0.01322 (35), -0.01296 (36), -0.01260 (37), -0.01253 (35), -0.01244 (36), -0.01238 (35), -0.01216 (36), -0.01213 (35), -0.01200 (36), -0.01193 (36), -0.01177 (36), -0.01176 (36), -0.01175 (37), -0.01173 (35), -0.01169 (35), -0.01169 (35), 
Length of domains: 3640
Time: pickout 0.1024    decision 0.2998    set_bounds 0.3911    solve 0.7183    add 0.0196    
Accumulated time: pickout 2.7254    decision 12.3705    set_bounds 11.4156    solve 23.6762    add 0.8157    
Current (lb-rhs): -0.014855772256851196
158576 domains visited
Cumulative time: 52.003068923950195

BaB round 28
batch: 3640
splitting decisions: 
split level 0: [/input-8, 1374] [/input-8, 1861] [/input-8, 1876] [/input-8, 1876] [/input-8, 1876] [/input-8, 1861] [/input-8, 1861] [/input, 1687] [/input-8, 1861] [/input-8, 1861] 
pruning_in_iteration open status: True
ratio of positive domain = 5079 / 7280 = 0.6976648351648351
pruning-in-iteration extra time: 0.005019664764404297
Time: prepare 0.1659    bound 0.3268    transfer 0.0430    finalize 0.0479    func 0.5852    
Accumulated time: func 24.1831    prepare 6.9835    bound 12.0744    transfer 1.7933    finalize 3.3005    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01263 (36), -0.01189 (36), -0.01183 (37), -0.01053 (37), -0.01028 (36), -0.01026 (36), -0.01012 (38), -0.01004 (36), -0.00999 (37), -0.00995 (37), -0.00990 (36), -0.00977 (37), -0.00969 (37), -0.00956 (36), -0.00956 (37), -0.00953 (37), -0.00950 (36), -0.00947 (36), -0.00936 (37), -0.00935 (36), 
Length of domains: 2201
Time: pickout 0.0737    decision 0.2174    set_bounds 0.3428    solve 0.5870    add 0.0157    
Accumulated time: pickout 2.7990    decision 12.5879    set_bounds 11.7584    solve 24.2632    add 0.8314    
Current (lb-rhs): -0.012625545263290405
160777 domains visited
Cumulative time: 53.27523398399353

BaB round 29
batch: 2201
splitting decisions: 
split level 0: [/input-8, 1876] [/input-8, 1876] [/input-8, 1861] [/input-8, 1876] [/input-8, 1876] [/input-8, 1876] [/input-8, 1876] [/input-8, 1876] [/input-8, 1890] [/input-8, 1876] 
pruning_in_iteration open status: True
ratio of positive domain = 3361 / 4402 = 0.7635165833711949
pruning-in-iteration extra time: 0.004914522171020508
Time: prepare 0.0948    bound 0.2969    transfer 0.0242    finalize 0.0303    func 0.4467    
Accumulated time: func 24.6298    prepare 7.0785    bound 12.3713    transfer 1.8175    finalize 3.3309    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01038 (37), -0.00965 (37), -0.00934 (38), -0.00808 (38), -0.00805 (37), -0.00772 (37), -0.00766 (37), -0.00751 (38), -0.00742 (38), -0.00734 (37), -0.00730 (37), -0.00729 (38), -0.00724 (37), -0.00721 (38), -0.00715 (38), -0.00710 (37), -0.00704 (38), -0.00703 (37), -0.00702 (37), -0.00694 (37), 
Length of domains: 1041
Time: pickout 0.0509    decision 0.1358    set_bounds 0.2295    solve 0.4480    add 0.0079    
Accumulated time: pickout 2.8500    decision 12.7237    set_bounds 11.9880    solve 24.7112    add 0.8393    
Current (lb-rhs): -0.010376155376434326
161818 domains visited
Cumulative time: 54.16704988479614

BaB round 30
batch: 1041
splitting decisions: 
split level 0: [/input-8, 1910] [/input-8, 1861] [/input-8, 1861] [/input-8, 1861] [/input-8, 1890] [/input-8, 1890] [/input-8, 1876] [/input-8, 1876] [/input-8, 1876] [/input-8, 1910] 
pruning_in_iteration open status: True
ratio of positive domain = 1683 / 2082 = 0.80835734870317
pruning-in-iteration extra time: 0.004751920700073242
Time: prepare 0.0455    bound 0.1742    transfer 0.0061    finalize 0.0137    func 0.2407    
Accumulated time: func 24.8705    prepare 7.1242    bound 12.5455    transfer 1.8236    finalize 3.3446    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00787 (38), -0.00716 (38), -0.00589 (39), -0.00574 (39), -0.00557 (38), -0.00527 (39), -0.00520 (38), -0.00516 (38), -0.00504 (40), -0.00495 (40), -0.00486 (38), -0.00480 (38), -0.00480 (38), -0.00470 (39), -0.00461 (38), -0.00456 (38), -0.00453 (39), -0.00451 (38), -0.00445 (38), -0.00436 (40), 
Length of domains: 399
Time: pickout 0.0238    decision 0.0724    set_bounds 0.0441    solve 0.2411    add 0.0062    
Accumulated time: pickout 2.8738    decision 12.7961    set_bounds 12.0321    solve 24.9523    add 0.8455    
Current (lb-rhs): -0.00787341594696045
162217 domains visited
Cumulative time: 54.56372618675232

BaB round 31
batch: 399
splitting decisions: 
split level 0: [/input-8, 1890] [/input-8, 1890] [/input-8, 1876] [/input, 2475] [/input, 2475] [/input-8, 1876] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] 
pruning_in_iteration open status: True
ratio of positive domain = 660 / 798 = 0.8270676691729324
pruning-in-iteration extra time: 0.004706621170043945
Time: prepare 0.0164    bound 0.1481    transfer 0.0024    finalize 0.0054    func 0.1724    
Accumulated time: func 25.0429    prepare 7.1408    bound 12.6936    transfer 1.8260    finalize 3.3500    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00441 (39), -0.00426 (40), -0.00411 (40), -0.00379 (39), -0.00370 (39), -0.00362 (41), -0.00359 (40), -0.00350 (41), -0.00312 (40), -0.00308 (39), -0.00293 (40), -0.00290 (41), -0.00272 (41), -0.00256 (40), -0.00249 (41), -0.00233 (41), -0.00228 (40), -0.00224 (40), -0.00220 (40), -0.00218 (41), 
Length of domains: 138
Time: pickout 0.0102    decision 0.0353    set_bounds 0.0166    solve 0.1726    add 0.0091    
Accumulated time: pickout 2.8840    decision 12.8314    set_bounds 12.0486    solve 25.1249    add 0.8546    
Current (lb-rhs): -0.004413574934005737
162355 domains visited
Cumulative time: 54.811036348342896

BaB round 32
batch: 138
splitting decisions: 
split level 0: [/input-8, 1366] [/input, 2475] [/input, 2475] [/input, 2475] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1068] [/input-8, 1366] 
pruning_in_iteration open status: True
ratio of positive domain = 237 / 276 = 0.8586956521739131
pruning-in-iteration extra time: 0.004595756530761719
Time: prepare 0.0059    bound 0.1231    transfer 0.0010    finalize 0.0017    func 0.1317    
Accumulated time: func 25.1746    prepare 7.1469    bound 12.8167    transfer 1.8270    finalize 3.3517    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00286 (41), -0.00278 (40), -0.00270 (41), -0.00215 (41), -0.00210 (40), -0.00207 (40), -0.00190 (41), -0.00173 (41), -0.00153 (41), -0.00140 (40), -0.00119 (41), -0.00119 (41), -0.00118 (41), -0.00085 (41), -0.00079 (41), -0.00075 (41), -0.00072 (41), -0.00070 (41), -0.00058 (41), -0.00048 (40), 
Length of domains: 39
Time: pickout 0.0034    decision 0.0226    set_bounds 0.0059    solve 0.1318    add 0.0013    
Accumulated time: pickout 2.8875    decision 12.8540    set_bounds 12.0545    solve 25.2567    add 0.8559    
Current (lb-rhs): -0.0028600096702575684
162394 domains visited
Cumulative time: 54.977245807647705

BaB round 33
batch: 39
splitting decisions: 
split level 0: [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1019] [/input-8, 944] [/input-8, 1068] [/input-8, 1902] 
split level 1: [/input-8, 1019] [/input-8, 1019] [/input-8, 1019] [/input-8, 1019] [/input-8, 1019] [/input-8, 1019] [/input-8, 1902] [/input-8, 1902] [/input-8, 1902] [/input-8, 1019] 
split level 2: [/input, 1689] [/input, 1689] [/input, 1689] [/input, 1689] [/input, 1689] [/input, 1689] [/input-8, 1361] [/input-8, 1361] [/input-8, 1019] [/input-8, 868] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 312 / 312 = 1.0
pruning-in-iteration extra time: 4.172325134277344e-05
Time: prepare 0.0067    bound 0.0094    transfer 0.0013    finalize 0.0020    func 0.0195    
Accumulated time: func 25.1941    prepare 7.1538    bound 12.8261    transfer 1.8283    finalize 3.3537    
all_split False
Length of domains: 0
Time: pickout 0.0015    decision 0.0194    set_bounds 0.0107    solve 0.0196    add 0.0001    
Accumulated time: pickout 2.8890    decision 12.8734    set_bounds 12.0652    solve 25.2762    add 0.8560    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
162394 domains visited
Cumulative time: 55.02951002120972


Properties batch 3, size 1
Remaining timeout: 143.19581007957458
Verifying property 3 with 1 instances.
##### Instance 103 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.2332451343536377.

Properties batch 4, size 1
Remaining timeout: 143.04013538360596
Verifying property 4 with 1 instances.
##### Instance 103 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.145019769668579.

Properties batch 5, size 1
Remaining timeout: 142.92495703697205
Verifying property 5 with 1 instances.
##### Instance 103 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9560184478759766.

Properties batch 6, size 1
Remaining timeout: 142.81946182250977
Verifying property 6 with 1 instances.
##### Instance 103 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.711716651916504.

Properties batch 7, size 1
Remaining timeout: 142.71442651748657
Verifying property 7 with 1 instances.
##### Instance 103 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.260337829589844.

Properties batch 8, size 1
Remaining timeout: 142.6091113090515
Verifying property 8 with 1 instances.
##### Instance 103 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.40743350982666.
Result: safe in 57.4964 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 104, vnnlib ID: 104 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-3.93376207, -6.71706390, -2.45791340, -1.94786179, -3.43069839,
         -0.01497591, -4.77984476, -2.99772120, -6.68260002, -5.67084932]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [775]; unstable size 775; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 265, 1, 775] with unstable size 264 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 775] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 775] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [264]; unstable size 264; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 264] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 264] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.31793857, 4.18651581, 1.24683022, 1.51535189, 1.97004509, 3.30763960,
         1.65014255, 4.22078037, 3.37990808]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0721 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 105, vnnlib ID: 105 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -6.58880043, -10.13493252,  -4.93114376,  -6.19413185,  -6.14457750,
          -6.40420198,  -6.35660315,  -6.51874971,  -8.22681046,  -9.13034344]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [623]; unstable size 623; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 253, 1, 623] with unstable size 252 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 623] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 623] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [252]; unstable size 252; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 252] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 252] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.65812576,  1.61883962, -2.82501459, -1.14642096, -1.45474672,
         -0.98869812, -1.28088367, -0.29947948,  0.88783288]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.58880043, -10.13493252,  -4.93114376,  -6.19413185,  -6.14457750,
          -6.40420198,  -6.35660315,  -6.51874971,  -8.22681046,  -9.13034344]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.58880091, -10.13493347,  -4.93114376,  -6.19413280,  -6.14457798,
           -6.40420198,  -6.35660315,  -6.51874971,  -8.22680950,  -9.13034534],
         [ -6.58880091, -10.13493347,  -4.93114376,  -6.19413280,  -6.14457798,
           -6.40420198,  -6.35660315,  -6.51874971,  -8.22680950,  -9.13034534]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.07005119, -1.58760595, -0.32461691, -0.37417173, -0.11454773,
          -0.16214657,  1.70805979]]], device='cuda:0')
number of violation:  5
clean attack image tensor([[[[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         ...,


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]]]], device='cuda:0') torch.Size([1, 7, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0842 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 106, vnnlib ID: 106 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -6.73701859,  -4.31693745,  -8.52546501,  -9.33157349,  -8.00366402,
         -10.34507942,  -9.10334110,  -9.12430954,  -4.68865204,  -6.33631182]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [549]; unstable size 549; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 168, 1, 549] with unstable size 167 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 549] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 549] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [167]; unstable size 167; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 167] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 167] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.18721008,  2.73353958,  3.30611277,  2.10224724,  4.03056717,
          3.46064472,  2.85602856, -0.83577108,  1.03666818]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.73701859,  -4.31693745,  -8.52546501,  -9.33157349,  -8.00366402,
         -10.34507942,  -9.10334110,  -9.12430954,  -4.68865204,  -6.33631182]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.89133787,  -4.93664169,  -8.66371727,  -9.56306934,  -8.16865921,
          -10.62470722,  -9.37549400,  -9.37268066,  -4.54248905,  -6.85806894]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.39415264]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0060 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0755 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 107, vnnlib ID: 107 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.25630188, -18.41019440, -14.19659901, -16.87197685, -15.07205296,
         -17.43015480, -17.99939728, -16.44446564, -13.78191662, -17.80060196]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [636]; unstable size 636; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 232, 1, 636] with unstable size 231 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 636] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 636] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [231]; unstable size 231; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 231] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 231] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.34137440,  0.70376444,  3.10112047,  1.09246922,  3.41379404,
          3.82853627,  1.99575412, -0.16639996,  3.65535498]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.25630188, -18.41019440, -14.19659901, -16.87197685, -15.07205296,
         -17.43015480, -17.99939728, -16.44446564, -13.78191662, -17.80060196]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.84it/s]100%|██████████| 1/1 [00:00<00:00,  8.83it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.98635578, -17.72829819, -13.82835865, -16.31543732, -14.73994732,
          -16.84854698, -17.46200371, -16.24205780, -12.71058083, -17.06022263]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.72422504]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1157 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 22.566566467285156
alpha/beta optimization time: 1.1424427032470703
initial alpha-crown bounds: tensor([[ 4.41341591,  0.78251958,  3.14730644,  1.16422844,  3.46807456,
          3.87461972,  2.07521486, -0.08283946,  3.72402549]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.08283945918083191
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.69519901275635
Verifying property 0 with 1 instances.
##### Instance 107 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.413415908813477.

Properties batch 1, size 1
Remaining timeout: 198.57408022880554
Verifying property 1 with 1 instances.
##### Instance 107 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.7825195789337158.

Properties batch 2, size 1
Remaining timeout: 198.46734261512756
Verifying property 2 with 1 instances.
##### Instance 107 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.147306442260742.

Properties batch 3, size 1
Remaining timeout: 198.3616132736206
Verifying property 3 with 1 instances.
##### Instance 107 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.1642284393310547.

Properties batch 4, size 1
Remaining timeout: 198.2315821647644
Verifying property 4 with 1 instances.
##### Instance 107 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.4680745601654053.

Properties batch 5, size 1
Remaining timeout: 198.12541794776917
Verifying property 5 with 1 instances.
##### Instance 107 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.874619722366333.

Properties batch 6, size 1
Remaining timeout: 198.01644039154053
Verifying property 6 with 1 instances.
##### Instance 107 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.0752148628234863.

Properties batch 7, size 1
Remaining timeout: 197.90279603004456
Verifying property 7 with 1 instances.
##### Instance 107 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.08283946]], device='cuda:0') need to verify.
Model prediction is: tensor([-12.25630188, -18.41019440, -14.19659901, -16.87197685, -15.07205296,
        -17.43015480, -17.99939728, -16.44446564, -13.78191662, -17.80060196],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.08283946]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 636
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 225
Node /15 input 0: size torch.Size([100]) unstable 18
-----------------
# of unstable neurons: 879
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 44] 
split level 1: [/input-12, 17] 
split level 2: [/input-12, 46] 
split level 3: [/input-12, 78] 
split level 4: [/input-12, 9] 
split level 5: [/input-8, 1388] 
split level 6: [/input-8, 1323] 
split level 7: [/input-8, 1077] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.2438507080078125e-05
Time: prepare 0.0031    bound 0.0041    transfer 0.0029    finalize 0.0016    func 0.0118    
Accumulated time: func 0.0118    prepare 0.0035    bound 0.0041    transfer 0.0029    finalize 0.0016    
all_split False
Length of domains: 0
Time: pickout 0.0004    decision 0.0229    set_bounds 0.0172    solve 0.0118    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0229    set_bounds 0.0172    solve 0.0118    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05694079399108887


Properties batch 8, size 1
Remaining timeout: 197.6786024570465
Verifying property 8 with 1 instances.
##### Instance 107 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.7240254878997803.
Result: safe in 2.4310 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 108, vnnlib ID: 108 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.67031240,  -9.52653027,  -5.79421425,  -5.15730333,  -5.24825621,
          -5.88681936,  -4.92760229,  -6.80504274, -10.24907398,  -9.07698536]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [634]; unstable size 634; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 245, 1, 634] with unstable size 244 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 634] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 634] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [244]; unstable size 244; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 244] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 244] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.24761426,  2.93305993, -0.23562002, -0.90710092,  0.36504617,
         -1.18999696,  0.08451003,  3.42949867,  2.57326078]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.67031240,  -9.52653027,  -5.79421425,  -5.15730333,  -5.24825621,
          -5.88681936,  -4.92760229,  -6.80504274, -10.24907398,  -9.07698536]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.67031288,  -9.52653027,  -5.79421329,  -5.15730429,  -5.24825621,
           -5.88681889,  -4.92760229,  -6.80504179, -10.24907398,  -9.07698536],
         [ -7.67031288,  -9.52653027,  -5.79421329,  -5.15730429,  -5.24825621,
           -5.88681889,  -4.92760229,  -6.80504179, -10.24907398,  -9.07698536]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.63690901,  0.09095192, -0.22970200]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.97301590, -1.03650784, -1.13174593,  ..., -0.84603173,
            -0.46507925, -0.29047608],
           [-0.97301590, -1.03650784, -1.14761901,  ..., -0.94126981,
            -0.41746020, -0.03650784],
           [-0.95714283, -1.02063489, -1.13174593,  ..., -1.06825387,
            -0.25873005,  0.09047628],
           ...,
           [-0.43333322,  0.15396833,  0.13809532,  ..., -1.63968253,
            -0.83015871, -0.09999990],
           [-0.16349196,  0.10634929, -0.13174593,  ..., -1.40158725,
            -0.79841268, -0.09999990],
           [-0.06825387,  0.05873025,  0.09047628,  ..., -1.00476182,
            -0.73492062, -0.09999990]],

          [[-1.49758446, -1.52979064, -1.54589367,  ..., -1.12721407,
            -0.88566822, -0.77294683],
           [-1.49758446, -1.52979064, -1.57809973,  ..., -1.20772946,
            -0.82125598, -0.53140092],
           [-1.48148143, -1.49758446, -1.54589367,  ..., -1.35265696,
            -0.64412236, -0.40257636],
           ...,
           [-1.11111104, -0.37037024, -0.48309177,  ..., -1.78743970,
            -0.90177131, -0.28985494],
           [-0.90177131, -0.43478248, -0.75684375,  ..., -1.64251208,
            -0.88566822, -0.27375188],
           [-0.83735907, -0.49919480, -0.51529789,  ..., -1.35265696,
            -0.83735907, -0.25764883]],

          [[-0.23838064, -0.38830581, -0.40329832,  ..., -1.00299859,
            -1.03298354, -1.03298354],
           [-0.25337315, -0.40329832, -0.43328333,  ..., -1.06296861,
            -0.95802099, -0.80809593],
           [-0.23838064, -0.37331331, -0.41829082,  ..., -1.22788620,
            -0.76311839, -0.68815589],
           ...,
           [ 0.07646193, -0.01349309, -0.44827583,  ..., -1.07796109,
            -0.67316341, -0.35832080],
           [ 0.25637197, -0.07346311, -0.65817088,  ..., -0.86806595,
            -0.64317840, -0.34332830],
           [ 0.31634200, -0.04347810, -0.29835078,  ..., -0.52323836,
            -0.58320838, -0.34332830]]],


         [[[-0.97301590, -1.03650784, -1.13174593,  ..., -0.84603173,
            -0.46507925, -0.29047608],
           [-0.97301590, -1.03650784, -1.14761901,  ..., -0.94126981,
            -0.41746020, -0.03650784],
           [-0.95714283, -1.02063489, -1.13174593,  ..., -1.06825387,
            -0.25873005,  0.09047628],
           ...,
           [-0.43333322,  0.15396833,  0.13809532,  ..., -1.63968253,
            -0.83015871, -0.09999990],
           [-0.16349196,  0.10634929, -0.13174593,  ..., -1.40158725,
            -0.79841268, -0.09999990],
           [-0.06825387,  0.05873025,  0.09047628,  ..., -1.00476182,
            -0.73492062, -0.09999990]],

          [[-1.49758446, -1.52979064, -1.54589367,  ..., -1.12721407,
            -0.88566822, -0.77294683],
           [-1.49758446, -1.52979064, -1.57809973,  ..., -1.20772946,
            -0.82125598, -0.53140092],
           [-1.48148143, -1.49758446, -1.54589367,  ..., -1.35265696,
            -0.64412236, -0.40257636],
           ...,
           [-1.11111104, -0.37037024, -0.48309177,  ..., -1.78743970,
            -0.90177131, -0.28985494],
           [-0.90177131, -0.43478248, -0.75684375,  ..., -1.64251208,
            -0.88566822, -0.27375188],
           [-0.83735907, -0.49919480, -0.51529789,  ..., -1.35265696,
            -0.83735907, -0.25764883]],

          [[-0.23838064, -0.38830581, -0.40329832,  ..., -1.00299859,
            -1.03298354, -1.03298354],
           [-0.25337315, -0.40329832, -0.43328333,  ..., -1.06296861,
            -0.95802099, -0.80809593],
           [-0.23838064, -0.37331331, -0.41829082,  ..., -1.22788620,
            -0.76311839, -0.68815589],
           ...,
           [ 0.07646193, -0.01349309, -0.44827583,  ..., -1.07796109,
            -0.67316341, -0.35832080],
           [ 0.25637197, -0.07346311, -0.65817088,  ..., -0.86806595,
            -0.64317840, -0.34332830],
           [ 0.31634200, -0.04347810, -0.29835078,  ..., -0.52323836,
            -0.58320838, -0.34332830]]],


         [[[-0.97301590, -1.03650784, -1.13174593,  ..., -0.84603173,
            -0.46507925, -0.29047608],
           [-0.97301590, -1.03650784, -1.14761901,  ..., -0.94126981,
            -0.41746020, -0.03650784],
           [-0.95714283, -1.02063489, -1.13174593,  ..., -1.06825387,
            -0.25873005,  0.09047628],
           ...,
           [-0.43333322,  0.15396833,  0.13809532,  ..., -1.63968253,
            -0.83015871, -0.09999990],
           [-0.16349196,  0.10634929, -0.13174593,  ..., -1.40158725,
            -0.79841268, -0.09999990],
           [-0.06825387,  0.05873025,  0.09047628,  ..., -1.00476182,
            -0.73492062, -0.09999990]],

          [[-1.49758446, -1.52979064, -1.54589367,  ..., -1.12721407,
            -0.88566822, -0.77294683],
           [-1.49758446, -1.52979064, -1.57809973,  ..., -1.20772946,
            -0.82125598, -0.53140092],
           [-1.48148143, -1.49758446, -1.54589367,  ..., -1.35265696,
            -0.64412236, -0.40257636],
           ...,
           [-1.11111104, -0.37037024, -0.48309177,  ..., -1.78743970,
            -0.90177131, -0.28985494],
           [-0.90177131, -0.43478248, -0.75684375,  ..., -1.64251208,
            -0.88566822, -0.27375188],
           [-0.83735907, -0.49919480, -0.51529789,  ..., -1.35265696,
            -0.83735907, -0.25764883]],

          [[-0.23838064, -0.38830581, -0.40329832,  ..., -1.00299859,
            -1.03298354, -1.03298354],
           [-0.25337315, -0.40329832, -0.43328333,  ..., -1.06296861,
            -0.95802099, -0.80809593],
           [-0.23838064, -0.37331331, -0.41829082,  ..., -1.22788620,
            -0.76311839, -0.68815589],
           ...,
           [ 0.07646193, -0.01349309, -0.44827583,  ..., -1.07796109,
            -0.67316341, -0.35832080],
           [ 0.25637197, -0.07346311, -0.65817088,  ..., -0.86806595,
            -0.64317840, -0.34332830],
           [ 0.31634200, -0.04347810, -0.29835078,  ..., -0.52323836,
            -0.58320838, -0.34332830]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0820 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 109, vnnlib ID: 109 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -4.68137455, -11.11765766,  -8.01337242,  -9.71148872,  -8.79326439,
         -10.48354340, -10.25170231, -11.03672123,  -9.45322895, -10.81242466]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [555]; unstable size 555; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 118, 1, 555] with unstable size 117 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 555] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 555] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [117]; unstable size 117; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 117] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 117] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.02142048, 2.59467483, 4.01387119, 3.15092111, 4.53091240, 4.70333385,
         4.88892984, 3.85758591, 5.04689884]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0707 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 110, vnnlib ID: 110 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.59310770, -8.98699856, -1.98446643, -1.86275947, -2.02259350,
         -2.92739010,  0.91057259, -5.46356249, -8.21526527, -9.22765255]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [455]; unstable size 455; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 269, 1, 455] with unstable size 268 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 455] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 455] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [268]; unstable size 268; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 268] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 268] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.81164694, 7.72943830, 1.56485271, 1.38150620, 1.52279806, 2.12491870,
         4.28514624, 7.13579178, 8.30116081]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0680 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 111, vnnlib ID: 111 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.92330647, -14.34430218,  -7.27562428, -10.29554081,  -6.15860891,
         -10.20837307,  -9.93119907,  -8.65463638, -13.25779629, -14.20930576]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [611]; unstable size 611; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 254, 1, 611] with unstable size 253 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 611] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 611] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [253]; unstable size 253; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 253] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 253] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.99095178,  5.73210239, -0.06892407,  3.12794542,  2.97227120,
          2.38821363,  1.26657963,  4.99652863,  5.76884413]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.92330647, -14.34430218,  -7.27562428, -10.29554081,  -6.15860891,
         -10.20837307,  -9.93119907,  -8.65463638, -13.25779629, -14.20930576]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.72it/s]100%|██████████| 1/1 [00:00<00:00,  8.71it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.49070644, -14.02054882,  -6.77474308, -10.01947308,  -6.14811516,
           -9.94418907,  -9.79620838,  -8.69151878, -12.92936230, -13.88387489]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.62662792]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1174 seconds.
PGD attack failed
verified_status unknown
verified_success False

all verified at 9th iter
best_l after optimization: 29.920612335205078
alpha/beta optimization time: 0.11292529106140137
initial alpha-crown bounds: tensor([[3.09697342e+00, 5.84763908e+00, 1.91971660e-03, 3.17881060e+00,
         3.02511477e+00, 2.45539451e+00, 1.32388163e+00, 5.10637712e+00,
         5.88450003e+00]], device='cuda:0')
Number of class (without rhs): 0 ; Worst class: (+ rhs) 0.0019197165966033936
verified with init bound!
Result: safe-incomplete in 0.2940 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 112, vnnlib ID: 112 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.39937687, -6.31978703, -7.08044434, -6.31649590, -8.13005733,
         -7.18079948, -7.62912607, -6.36020851, -5.32509041, -4.25607824]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [646]; unstable size 646; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 172, 1, 646] with unstable size 171 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 646] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 646] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [171]; unstable size 171; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 171] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 171] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.06740320,  0.96642971,  1.28222084,  0.65053368,  2.26329398,
          1.44973588,  2.01239896,  0.51637983, -0.32224584]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.39937687, -6.31978703, -7.08044434, -6.31649590, -8.13005733,
         -7.18079948, -7.62912607, -6.36020851, -5.32509041, -4.25607824]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.92it/s]100%|██████████| 1/1 [00:00<00:00,  8.91it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.57936287, -6.66815186, -7.30564022, -6.68102264, -8.49092770,
          -7.56898642, -7.92801905, -6.75226736, -5.11898041, -4.89544821]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.22353220]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1147 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 10.232050895690918
alpha/beta optimization time: 1.135516881942749
initial alpha-crown bounds: tensor([[ 1.09233904,  1.00209773,  1.32075119,  0.68928719,  2.30610132,
          1.48740530,  2.04873037,  0.55730653, -0.27196789]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.27196788787841797
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.67529773712158
Verifying property 0 with 1 instances.
##### Instance 112 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.092339038848877.

Properties batch 1, size 1
Remaining timeout: 198.5275321006775
Verifying property 1 with 1 instances.
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.002097725868225.

Properties batch 2, size 1
Remaining timeout: 198.42065572738647
Verifying property 2 with 1 instances.
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.3207511901855469.

Properties batch 3, size 1
Remaining timeout: 198.31436467170715
Verifying property 3 with 1 instances.
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6892871856689453.

Properties batch 4, size 1
Remaining timeout: 198.2081000804901
Verifying property 4 with 1 instances.
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.3061013221740723.

Properties batch 5, size 1
Remaining timeout: 198.1019582748413
Verifying property 5 with 1 instances.
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.4874053001403809.

Properties batch 6, size 1
Remaining timeout: 197.9957377910614
Verifying property 6 with 1 instances.
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.0487303733825684.

Properties batch 7, size 1
Remaining timeout: 197.88971257209778
Verifying property 7 with 1 instances.
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5573065280914307.

Properties batch 8, size 1
Remaining timeout: 197.7837586402893
Verifying property 8 with 1 instances.
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.27196789]], device='cuda:0') need to verify.
Model prediction is: tensor([-6.39937687, -6.31978703, -7.08044434, -6.31649590, -8.13005733,
        -7.18079948, -7.62912607, -6.36020851, -5.32509041, -4.25607824],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.27196789]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 646
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 166
Node /15 input 0: size torch.Size([100]) unstable 15
-----------------
# of unstable neurons: 827
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 21] 
split level 1: [/input-12, 68] 
split level 2: [/input-12, 78] 
split level 3: [/input-12, 1] 
split level 4: [/input-8, 1890] 
split level 5: [/input-8, 1131] 
split level 6: [/input-8, 1898] 
split level 7: [/input-8, 932] 

all verified at 3th iter
pruning_in_iteration open status: True
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 0.0007293224334716797
Time: prepare 0.0030    bound 0.0375    transfer 0.0017    finalize 0.0017    func 0.0440    
Accumulated time: func 0.0440    prepare 0.0035    bound 0.0375    transfer 0.0017    finalize 0.0017    
all_split False
Length of domains: 0
Time: pickout 0.0004    decision 0.0233    set_bounds 0.0178    solve 0.0441    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0233    set_bounds 0.0178    solve 0.0441    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08984184265136719

Result: safe in 2.4804 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 113, vnnlib ID: 113 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.78284311, -8.25498867, -3.91874337, -1.90788758, -4.97474670,
         -1.46400177, -6.09554291, -3.89886856, -8.36994171, -6.97793961]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [667]; unstable size 667; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 214, 1, 667] with unstable size 213 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 667] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 667] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [213]; unstable size 213; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 213] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 213] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.60612798,  4.23385620,  0.99936342,  2.04068351, -0.70643765,
          3.00155067,  1.31167328,  4.90406227,  3.47214937]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.78284311, -8.25498867, -3.91874337, -1.90788758, -4.97474670,
         -1.46400177, -6.09554291, -3.89886856, -8.36994171, -6.97793961]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.78284311, -8.25498867, -3.91874337, -1.90788758, -4.97474670,
          -1.46400177, -6.09554291, -3.89886856, -8.36994171, -6.97793961]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.44388580]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.03650784, -1.00476182, -0.75079364,  ..., -0.68730158,
            -0.90952379, -1.62380958],
           [-0.44920623, -0.95714283, -0.67142856,  ..., -0.32222211,
            -0.65555555, -1.62380958],
           [-0.09999990, -0.92539680, -0.63968253,  ..., -0.22698402,
            -0.57619047, -1.63968253],
           ...,
           [-0.27460307, -0.29047608, -0.33809513,  ..., -0.87777776,
            -0.51269841, -0.48095238],
           [-0.30634910, -0.30634910, -0.33809513,  ..., -1.09999990,
            -0.65555555, -0.49682540],
           [-0.40158719, -0.40158719, -0.41746020,  ..., -1.29047608,
            -0.87777776, -0.62380952]],

          [[-1.62640905, -1.72302747, -1.65861523,  ..., -1.49758446,
            -1.57809973, -1.75523353],
           [-1.38486302, -1.77133656, -1.61030602,  ..., -1.35265696,
            -1.49758446, -1.75523353],
           [-1.09500802, -1.80354273, -1.62640905,  ..., -1.22383249,
            -1.40096617, -1.75523353],
           ...,
           [-1.25603855, -1.25603855, -1.28824472,  ..., -0.72463763,
            -0.43478248, -0.51529789],
           [-1.28824472, -1.25603855, -1.28824472,  ..., -0.88566822,
            -0.48309177, -0.45088565],
           [-1.33655393, -1.33655393, -1.33655393,  ..., -1.12721407,
            -0.67632848, -0.46698871]],

          [[-1.48275876, -1.52773619, -1.49775124,  ..., -1.28785622,
            -1.34782624, -1.42278874],
           [-1.15292358, -1.55772126, -1.54272878,  ..., -1.12293863,
            -1.19790113, -1.42278874],
           [-0.89805096, -1.54272878, -1.51274371,  ..., -1.06296861,
            -1.13793111, -1.43778121],
           ...,
           [-0.94302845, -0.94302845, -0.95802099,  ..., -0.61319339,
            -0.38830581, -0.52323836],
           [-0.94302845, -0.94302845, -0.94302845,  ..., -0.70314842,
            -0.34332830, -0.38830581],
           [-0.98800600, -1.00299859, -1.00299859,  ..., -0.89805096,
            -0.52323836, -0.31334329]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0570 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 114, vnnlib ID: 114 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.20003605, -18.01286888, -15.99082375, -17.43127060, -15.99804783,
         -18.05647850, -17.26184273, -18.19654465, -14.18293667, -18.52462387]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [575]; unstable size 575; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 278, 1, 575] with unstable size 277 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 575] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 575] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [277]; unstable size 277; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 277] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 277] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.64699364, 2.80865240, 4.23958683, 2.61277151, 4.73358536, 3.88175774,
         4.35204315, 1.01147723, 5.09978485]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0698 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 115, vnnlib ID: 115 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.36256695, -13.41296291,  -7.44461441,  -8.80130768,  -6.03208971,
          -9.45968819,  -8.73321247,  -9.01270103, -12.02322006, -13.37573814]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [544]; unstable size 544; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 300, 1, 544] with unstable size 299 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 544] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 544] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [299]; unstable size 299; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 299] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 299] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.81327701, 5.48521566, 0.46946728, 1.82796884, 2.35864878, 1.48084807,
         1.92163324, 4.35953045, 5.34309292]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0411 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 116, vnnlib ID: 116 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.81765366, -7.31970978, -3.61689496, -2.33775973, -4.04815769,
         -1.70513523, -4.43761539, -2.28235054, -5.83187103, -5.49887180]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [659]; unstable size 659; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 163, 1, 659] with unstable size 162 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 659] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 659] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [162]; unstable size 162; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 162] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 162] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.62464428,  3.89426231,  0.79460704,  0.29400682,  1.47056699,
          1.78599703, -0.22968006,  2.20870376,  2.15642929]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.81765366, -7.31970978, -3.61689496, -2.33775973, -4.04815769,
         -1.70513523, -4.43761539, -2.28235054, -5.83187103, -5.49887180]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.97it/s]100%|██████████| 1/1 [00:00<00:00,  8.96it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.89979172, -7.36104774, -3.67233706, -2.66874647, -4.12950802,
          -2.08822346, -4.72593451, -2.15821362, -6.01429844, -5.55949211]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.06999016]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1143 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 16.392478942871094
alpha/beta optimization time: 1.1536755561828613
initial alpha-crown bounds: tensor([[ 3.67620087,  3.94920158,  0.83800328,  0.30350503,  1.50146961,
          1.81741762, -0.19317865,  2.29632831,  2.20353127]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.19317865371704102
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.68361020088196
Verifying property 0 with 1 instances.
##### Instance 116 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.6762008666992188.

Properties batch 1, size 1
Remaining timeout: 198.53410720825195
Verifying property 1 with 1 instances.
##### Instance 116 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.9492015838623047.

Properties batch 2, size 1
Remaining timeout: 198.4276738166809
Verifying property 2 with 1 instances.
##### Instance 116 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.8380032777786255.

Properties batch 3, size 1
Remaining timeout: 198.322039604187
Verifying property 3 with 1 instances.
##### Instance 116 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3035050332546234.

Properties batch 4, size 1
Remaining timeout: 198.21619820594788
Verifying property 4 with 1 instances.
##### Instance 116 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.501469612121582.

Properties batch 5, size 1
Remaining timeout: 198.11099910736084
Verifying property 5 with 1 instances.
##### Instance 116 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.8174176216125488.

Properties batch 6, size 1
Remaining timeout: 198.00567936897278
Verifying property 6 with 1 instances.
##### Instance 116 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.19317865]], device='cuda:0') need to verify.
Model prediction is: tensor([-6.81765366, -7.31970978, -3.61689496, -2.33775973, -4.04815769,
        -1.70513523, -4.43761539, -2.28235054, -5.83187103, -5.49887180],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.19317865]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 659
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 159
Node /15 input 0: size torch.Size([100]) unstable 16
-----------------
# of unstable neurons: 834
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 11] 
split level 1: [/input-12, 6] 
split level 2: [/input-12, 1] 
split level 3: [/input-12, 68] 
split level 4: [/input-12, 10] 
split level 5: [/input-12, 53] 
split level 6: [/input-8, 1460] 
split level 7: [/input-8, 1506] 
pruning_in_iteration open status: True
ratio of positive domain = 224 / 256 = 0.875
pruning-in-iteration extra time: 0.004714012145996094
Time: prepare 0.0031    bound 0.1227    transfer 0.0015    finalize 0.0016    func 0.1290    
Accumulated time: func 0.1290    prepare 0.0035    bound 0.1227    transfer 0.0015    finalize 0.0016    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09815 (8), -0.09185 (8), -0.08992 (8), -0.08727 (8), -0.08355 (8), -0.07996 (8), -0.07937 (8), -0.07619 (8), -0.07223 (8), -0.07211 (8), -0.07128 (8), -0.06606 (8), -0.06553 (8), -0.06295 (8), -0.06215 (8), -0.06197 (8), -0.06012 (8), -0.05599 (8), -0.05427 (8), -0.05142 (8), 
Length of domains: 32
Time: pickout 0.0004    decision 0.0229    set_bounds 0.0174    solve 0.1291    add 0.0643    
Accumulated time: pickout 0.0004    decision 0.0229    set_bounds 0.0174    solve 0.1291    add 0.0643    
Current (lb-rhs): -0.09814798831939697
32 domains visited
Cumulative time: 0.24683856964111328

BaB round 2
batch: 32
splitting decisions: 
split level 0: [/input-8, 926] [/input-8, 926] [/input-8, 1058] [/input-8, 926] [/input-8, 926] [/input-8, 926] [/input-8, 926] [/input-8, 926] [/input-8, 926] [/input-8, 926] 
split level 1: [/input-8, 1453] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-8, 162] [/input-8, 1461] [/input-12, 64] [/input-12, 64] [/input-8, 1453] [/input-12, 64] 
split level 2: [/input-8, 1461] [/input-8, 1461] [/input-8, 1461] [/input-8, 1461] [/input-8, 1461] [/input-8, 993] [/input-8, 993] [/input-8, 993] [/input-8, 1461] [/input-8, 1461] 
pruning_in_iteration open status: True
ratio of positive domain = 88 / 256 = 0.34375
pruning-in-iteration extra time: 0.0048482418060302734
Time: prepare 0.0055    bound 0.1944    transfer 0.0009    finalize 0.0017    func 0.2026    
Accumulated time: func 0.3316    prepare 0.0092    bound 0.3171    transfer 0.0024    finalize 0.0034    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08994 (11), -0.08777 (11), -0.08334 (11), -0.08172 (11), -0.08112 (11), -0.07950 (11), -0.07936 (11), -0.07840 (11), -0.07501 (11), -0.07274 (11), -0.07208 (11), -0.07123 (11), -0.07098 (11), -0.07032 (11), -0.06898 (11), -0.06852 (11), -0.06756 (11), -0.06681 (11), -0.06649 (11), -0.06625 (11), 
Length of domains: 168
Time: pickout 0.0115    decision 0.0279    set_bounds 0.0113    solve 0.2027    add 0.0086    
Accumulated time: pickout 0.0118    decision 0.0507    set_bounds 0.0287    solve 0.3317    add 0.0728    
Current (lb-rhs): -0.08994090557098389
200 domains visited
Cumulative time: 0.5099501609802246

BaB round 3
batch: 168
splitting decisions: 
split level 0: [/input-8, 162] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] 
pruning_in_iteration open status: True
ratio of positive domain = 103 / 336 = 0.30654761904761907
pruning-in-iteration extra time: 0.0048770904541015625
Time: prepare 0.0073    bound 0.2422    transfer 0.0021    finalize 0.0040    func 0.2570    
Accumulated time: func 0.5886    prepare 0.0167    bound 0.5593    transfer 0.0045    finalize 0.0073    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08740 (12), -0.08525 (12), -0.08076 (12), -0.07921 (12), -0.07854 (12), -0.07712 (12), -0.07698 (12), -0.07613 (12), -0.07245 (12), -0.07013 (12), -0.06987 (12), -0.06877 (12), -0.06844 (12), -0.06785 (12), -0.06616 (12), -0.06588 (12), -0.06461 (12), -0.06402 (12), -0.06391 (12), -0.06361 (12), 
Length of domains: 233
Time: pickout 0.0045    decision 0.0274    set_bounds 0.0079    solve 0.2572    add 0.0130    
Accumulated time: pickout 0.0163    decision 0.0781    set_bounds 0.0366    solve 0.5889    add 0.0858    
Current (lb-rhs): -0.0874032974243164
433 domains visited
Cumulative time: 0.822113037109375

BaB round 4
batch: 233
splitting decisions: 
split level 0: [/input-8, 1058] [/input-8, 1453] [/input-8, 1265] [/input-8, 162] [/input-8, 1453] [/input-8, 1265] [/input-8, 162] [/input-8, 1453] [/input-8, 1265] [/input-8, 162] 
pruning_in_iteration open status: False
ratio of positive domain = 62 / 466 = 0.1330472103004292
pruning-in-iteration extra time: 6.103515625e-05
Time: prepare 0.0218    bound 0.1363    transfer 0.0060    finalize 0.0065    func 0.1717    
Accumulated time: func 0.7603    prepare 0.0387    bound 0.6956    transfer 0.0105    finalize 0.0138    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08514 (13), -0.08273 (13), -0.07904 (13), -0.07850 (13), -0.07783 (13), -0.07675 (13), -0.07602 (13), -0.07601 (13), -0.07494 (13), -0.07413 (13), -0.07236 (13), -0.07172 (13), -0.07108 (13), -0.07077 (13), -0.06999 (13), -0.06871 (13), -0.06762 (13), -0.06727 (13), -0.06722 (13), -0.06660 (13), 
Length of domains: 399
Time: pickout 0.0071    decision 0.0309    set_bounds 0.0114    solve 0.1719    add 0.0209    
Accumulated time: pickout 0.0234    decision 0.1090    set_bounds 0.0480    solve 0.7608    add 0.1067    
Current (lb-rhs): -0.08514344692230225
832 domains visited
Cumulative time: 1.0681264400482178

BaB round 5
batch: 399
splitting decisions: 
split level 0: [/input-12, 64] [/input-8, 1329] [/input, 2430] [/input-8, 1058] [/input-8, 1329] [/input, 2430] [/input-8, 1058] [/input-8, 1329] [/input, 2430] [/input-8, 1058] 
pruning_in_iteration open status: False
ratio of positive domain = 91 / 798 = 0.11403508771929827
pruning-in-iteration extra time: 6.842613220214844e-05
Time: prepare 0.0208    bound 0.1123    transfer 0.0130    finalize 0.0089    func 0.1551    
Accumulated time: func 0.9154    prepare 0.0597    bound 0.8079    transfer 0.0235    finalize 0.0227    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08288 (14), -0.08047 (14), -0.07676 (14), -0.07617 (14), -0.07612 (14), -0.07553 (14), -0.07452 (14), -0.07371 (14), -0.07369 (14), -0.07335 (14), -0.07227 (14), -0.07193 (14), -0.07066 (14), -0.06999 (14), -0.06997 (14), -0.06995 (14), -0.06958 (14), -0.06943 (14), -0.06873 (14), -0.06872 (14), 
Length of domains: 705
Time: pickout 0.0089    decision 0.0326    set_bounds 0.0218    solve 0.1554    add 0.0036    
Accumulated time: pickout 0.0323    decision 0.1416    set_bounds 0.0698    solve 0.9162    add 0.1103    
Current (lb-rhs): -0.08288180828094482
1537 domains visited
Cumulative time: 1.2920584678649902

BaB round 6
batch: 705
splitting decisions: 
split level 0: [/input-8, 1329] [/input, 436] [/input-8, 1467] [/input-8, 1329] [/input, 436] [/input-8, 1453] [/input-8, 1329] [/input, 436] [/input-8, 1467] [/input-8, 1329] 
pruning_in_iteration open status: False
ratio of positive domain = 108 / 1410 = 0.07659574468085106
pruning-in-iteration extra time: 5.6743621826171875e-05
Time: prepare 0.0342    bound 0.1195    transfer 0.0047    finalize 0.0109    func 0.1708    
Accumulated time: func 1.0862    prepare 0.0941    bound 0.9273    transfer 0.0282    finalize 0.0336    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08161 (15), -0.07920 (15), -0.07825 (15), -0.07582 (15), -0.07547 (15), -0.07425 (15), -0.07414 (15), -0.07408 (15), -0.07346 (15), -0.07325 (15), -0.07241 (15), -0.07209 (15), -0.07174 (15), -0.07159 (15), -0.07142 (15), -0.07103 (15), -0.07083 (15), -0.07063 (15), -0.07037 (15), -0.06989 (15), 
Length of domains: 1295
Time: pickout 0.0142    decision 0.0614    set_bounds 0.0271    solve 0.1712    add 0.0078    
Accumulated time: pickout 0.0465    decision 0.2030    set_bounds 0.0968    solve 1.0874    add 0.1180    
Current (lb-rhs): -0.08161473274230957
2832 domains visited
Cumulative time: 1.5766472816467285

BaB round 7
batch: 1295
splitting decisions: 
split level 0: [/input, 436] [/input-8, 993] [/input-8, 1453] [/input, 436] [/input-8, 993] [/input-8, 1467] [/input, 436] [/input-8, 993] [/input, 2748] [/input, 436] 
pruning_in_iteration open status: False
ratio of positive domain = 234 / 2590 = 0.09034749034749034
pruning-in-iteration extra time: 7.128715515136719e-05
Time: prepare 0.0698    bound 0.1632    transfer 0.0091    finalize 0.0190    func 0.2624    
Accumulated time: func 1.3486    prepare 0.1641    bound 1.0905    transfer 0.0374    finalize 0.0527    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07819 (16), -0.07774 (16), -0.07578 (16), -0.07533 (16), -0.07467 (16), -0.07454 (16), -0.07224 (16), -0.07212 (16), -0.07203 (16), -0.07159 (16), -0.07124 (16), -0.07080 (16), -0.07072 (16), -0.07064 (16), -0.07036 (16), -0.07022 (16), -0.07001 (16), -0.06996 (16), -0.06983 (16), -0.06974 (16), 
Length of domains: 2339
Time: pickout 0.0202    decision 0.0943    set_bounds 0.0505    solve 0.2630    add 0.0956    
Accumulated time: pickout 0.0667    decision 0.2973    set_bounds 0.1473    solve 1.3504    add 0.2137    
Current (lb-rhs): -0.07818567752838135
5171 domains visited
Cumulative time: 2.105623483657837

BaB round 8
batch: 2339
splitting decisions: 
split level 0: [/input-8, 598] [/input-8, 1009] [/input, 2748] [/input-8, 598] [/input, 2748] [/input, 2748] [/input, 2430] [/input-8, 1009] [/input-8, 479] [/input, 2430] 
pruning_in_iteration open status: False
ratio of positive domain = 442 / 4678 = 0.09448482257374946
pruning-in-iteration extra time: 0.00010132789611816406
Time: prepare 0.1218    bound 0.2278    transfer 0.0222    finalize 0.0370    func 0.4093    
Accumulated time: func 1.7579    prepare 0.2862    bound 1.3183    transfer 0.0596    finalize 0.0897    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07622 (17), -0.07578 (17), -0.07363 (17), -0.07319 (17), -0.07285 (17), -0.07273 (17), -0.07159 (17), -0.07115 (17), -0.07009 (17), -0.07001 (17), -0.06997 (17), -0.06957 (17), -0.06938 (17), -0.06892 (17), -0.06887 (17), -0.06880 (17), -0.06865 (17), -0.06844 (17), -0.06821 (17), -0.06814 (17), 
Length of domains: 4193
Time: pickout 0.0388    decision 0.1488    set_bounds 0.2612    solve 0.4101    add 0.0160    
Accumulated time: pickout 0.1056    decision 0.4461    set_bounds 0.4086    solve 1.7605    add 0.2297    
Current (lb-rhs): -0.07622289657592773
9364 domains visited
Cumulative time: 2.9904937744140625

BaB round 9
batch: 4096
splitting decisions: 
split level 0: [/input-8, 1009] [/input-8, 1453] [/input-8, 598] [/input-8, 598] [/input-8, 993] [/input-8, 1009] [/input-8, 1265] [/input-8, 598] [/input-8, 479] [/input-8, 93] 
pruning_in_iteration open status: False
ratio of positive domain = 971 / 8192 = 0.1185302734375
pruning-in-iteration extra time: 7.987022399902344e-05
Time: prepare 0.2152    bound 0.3636    transfer 0.0468    finalize 0.0544    func 0.6812    
Accumulated time: func 2.4391    prepare 0.5017    bound 1.6819    transfer 0.1064    finalize 0.1441    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07367 (18), -0.07322 (18), -0.07302 (18), -0.07258 (18), -0.07167 (18), -0.07124 (18), -0.07029 (18), -0.07018 (18), -0.06963 (18), -0.06963 (18), -0.06957 (17), -0.06952 (18), -0.06919 (18), -0.06828 (18), -0.06821 (17), -0.06816 (18), -0.06805 (18), -0.06669 (18), -0.06665 (18), -0.06654 (18), 
Length of domains: 7233
Time: pickout 0.0638    decision 0.2381    set_bounds 0.3046    solve 0.6827    add 0.0565    
Accumulated time: pickout 0.1694    decision 0.6842    set_bounds 0.7132    solve 2.4432    add 0.2862    
Current (lb-rhs): -0.07366681098937988
16500 domains visited
current_vram/total_varm: 9.5GB/99.9GB, batch_size increase to 8192
Cumulative time: 4.354535102844238

BaB round 10
batch: 7233
splitting decisions: 
split level 0: [/input, 2430] [/input, 2748] [/input-8, 479] [/input, 2430] [/input-8, 1009] [/input-8, 479] [/input-8, 598] [/input, 2748] [/input-8, 1453] [/input-8, 598] 
pruning_in_iteration open status: False
ratio of positive domain = 1944 / 14466 = 0.13438407299875565
pruning-in-iteration extra time: 8.225440979003906e-05
Time: prepare 0.3845    bound 0.6160    transfer 0.0794    finalize 0.0964    func 1.1778    
Accumulated time: func 3.6170    prepare 0.8865    bound 2.2979    transfer 0.1859    finalize 0.2405    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07241 (19), -0.07197 (19), -0.07177 (19), -0.07133 (19), -0.06911 (19), -0.06904 (19), -0.06892 (19), -0.06868 (19), -0.06847 (19), -0.06838 (19), -0.06827 (19), -0.06803 (19), -0.06760 (18), -0.06708 (19), -0.06664 (19), -0.06643 (19), -0.06625 (18), -0.06599 (19), -0.06572 (19), -0.06561 (19), 
Length of domains: 12378
Time: pickout 0.1190    decision 0.6571    set_bounds 0.3090    solve 1.1808    add 0.0474    
Accumulated time: pickout 0.2884    decision 1.3413    set_bounds 1.0222    solve 3.6240    add 0.3336    
Current (lb-rhs): -0.0724109411239624
28878 domains visited
Cumulative time: 6.693721055984497

BaB round 11
batch: 8192
splitting decisions: 
split level 0: [/input, 2748] [/input-8, 1009] [/input, 2430] [/input, 1642] [/input-8, 969] [/input-8, 564] [/input, 455] [/input, 2446] [/input-8, 479] [/input-8, 1265] 
pruning_in_iteration open status: False
ratio of positive domain = 2460 / 16384 = 0.150146484375
pruning-in-iteration extra time: 0.00011944770812988281
Time: prepare 0.4421    bound 0.6803    transfer 0.0946    finalize 0.1095    func 1.3282    
Accumulated time: func 4.9452    prepare 1.3289    bound 2.9783    transfer 0.2805    finalize 0.3500    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07241 (19), -0.07197 (19), -0.07133 (19), -0.06985 (20), -0.06911 (19), -0.06904 (19), -0.06892 (19), -0.06868 (19), -0.06827 (19), -0.06811 (20), -0.06760 (18), -0.06722 (20), -0.06708 (19), -0.06678 (20), -0.06664 (19), -0.06646 (20), -0.06625 (18), -0.06572 (19), -0.06561 (19), -0.06545 (19), 
Length of domains: 17941
Time: pickout 0.1289    decision 0.6644    set_bounds 0.5436    solve 1.3320    add 0.0800    
Accumulated time: pickout 0.4173    decision 2.0057    set_bounds 1.5658    solve 4.9560    add 0.4135    
Current (lb-rhs): -0.0724109411239624
42633 domains visited
current_vram/total_varm: 22.5GB/99.9GB, batch_size increase to 16384
Cumulative time: 9.47307801246643

BaB round 12
batch: 16384
splitting decisions: 
split level 0: [/input-8, 1009] [/input-8, 1017] [/input-8, 1009] [/input-8, 93] [/input-8, 1009] [/input-8, 598] [/input, 455] [/input, 2430] [/input-8, 93] [/input-8, 598] 
pruning_in_iteration open status: False
ratio of positive domain = 5851 / 32768 = 0.178558349609375
pruning-in-iteration extra time: 0.00020694732666015625
Time: prepare 0.8734    bound 1.3060    transfer 0.1848    finalize 0.4732    func 2.8395    
Accumulated time: func 7.7847    prepare 2.2027    bound 4.2842    transfer 0.4653    finalize 0.8232    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07241 (19), -0.07197 (19), -0.06941 (20), -0.06911 (19), -0.06904 (19), -0.06892 (19), -0.06868 (19), -0.06824 (21), -0.06767 (20), -0.06760 (18), -0.06647 (21), -0.06634 (20), -0.06625 (18), -0.06583 (20), -0.06580 (21), -0.06572 (19), -0.06561 (21), -0.06561 (19), -0.06545 (19), -0.06539 (20), 
Length of domains: 28088
Time: pickout 0.2641    decision 1.9048    set_bounds 0.8831    solve 2.8461    add 0.0933    
Accumulated time: pickout 0.6814    decision 3.9105    set_bounds 2.4489    solve 7.8021    add 0.5068    
Current (lb-rhs): -0.0724109411239624
69164 domains visited
current_vram/total_varm: 32.4GB/99.9GB, batch_size increase to 32768
Cumulative time: 15.512600183486938

BaB round 13
batch: 28088
splitting decisions: 
split level 0: [/input-8, 993] [/input-8, 93] [/input-8, 1009] [/input-8, 993] [/input-8, 479] [/input-8, 1466] [/input-8, 993] [/input-8, 93] [/input-8, 1466] [/input-8, 993] 
pruning_in_iteration open status: False
ratio of positive domain = 11129 / 56176 = 0.19810951295927082
pruning-in-iteration extra time: 0.00034928321838378906
Time: prepare 1.5167    bound 2.2125    transfer 0.3213    finalize 0.7242    func 4.7789    
Accumulated time: func 12.5637    prepare 3.7198    bound 6.4967    transfer 0.7866    finalize 1.5473    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07049 (20), -0.07005 (20), -0.06874 (20), -0.06830 (20), -0.06787 (20), -0.06779 (21), -0.06743 (20), -0.06712 (20), -0.06700 (20), -0.06693 (22), -0.06604 (21), -0.06538 (20), -0.06536 (21), -0.06527 (20), -0.06520 (22), -0.06501 (19), -0.06474 (21), -0.06453 (21), -0.06449 (22), -0.06447 (20), 
Length of domains: 44399
Time: pickout 0.4592    decision 3.1580    set_bounds 1.5377    solve 4.7894    add 0.1570    
Accumulated time: pickout 1.1406    decision 7.0685    set_bounds 3.9866    solve 12.5915    add 0.6639    
Current (lb-rhs): -0.07049274444580078
113563 domains visited
Cumulative time: 25.731040000915527

BaB round 14
batch: 32768
splitting decisions: 
split level 0: [/input-8, 479] [/input-8, 1467] [/input, 2430] [/input-8, 110] [/input-8, 1467] [/input-8, 1009] [/input-8, 1466] [/input-8, 1017] [/input-8, 1058] [/input-8, 1467] 
pruning_in_iteration open status: True
ratio of positive domain = 17395 / 65536 = 0.2654266357421875
pruning-in-iteration extra time: 0.00479435920715332
Time: prepare 1.8304    bound 4.1981    transfer 0.3757    finalize 0.9052    func 7.3131    
Accumulated time: func 19.8768    prepare 5.5508    bound 10.6948    transfer 1.1624    finalize 2.4526    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07049 (20), -0.07005 (20), -0.06787 (20), -0.06743 (21), -0.06743 (20), -0.06712 (20), -0.06700 (20), -0.06698 (21), -0.06648 (22), -0.06536 (21), -0.06524 (23), -0.06501 (19), -0.06473 (22), -0.06453 (21), -0.06449 (22), -0.06447 (20), -0.06435 (20), -0.06418 (20), -0.06408 (21), -0.06404 (21), 
Length of domains: 59772
Time: pickout 0.5511    decision 3.7694    set_bounds 1.9246    solve 7.3253    add 0.1792    
Accumulated time: pickout 1.6918    decision 10.8379    set_bounds 5.9112    solve 19.9168    add 0.8431    
Current (lb-rhs): -0.07049274444580078
161704 domains visited
Cumulative time: 39.628270626068115

BaB round 15
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1467] [/input-8, 1466] [/input, 2430] [/input-8, 564] [/input-8, 479] [/input-8, 479] [/input, 2430] [/input, 2748] [/input, 2430] [/input-8, 1467] 
pruning_in_iteration open status: True
ratio of positive domain = 19937 / 65536 = 0.3042144775390625
pruning-in-iteration extra time: 0.0064754486083984375
Time: prepare 1.8167    bound 2.7515    transfer 0.3703    finalize 1.0134    func 5.9562    
Accumulated time: func 25.8330    prepare 7.3680    bound 13.4463    transfer 1.5326    finalize 3.4660    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07049 (20), -0.07005 (20), -0.06787 (20), -0.06743 (21), -0.06743 (20), -0.06712 (20), -0.06700 (20), -0.06698 (21), -0.06648 (22), -0.06536 (21), -0.06501 (19), -0.06453 (21), -0.06449 (22), -0.06447 (20), -0.06435 (20), -0.06425 (24), -0.06418 (20), -0.06408 (21), -0.06404 (21), -0.06393 (21), 
Length of domains: 72603
Time: pickout 0.5871    decision 3.4804    set_bounds 2.0438    solve 5.9693    add 0.2961    
Accumulated time: pickout 2.2789    decision 14.3183    set_bounds 7.9549    solve 25.8861    add 1.1392    
Current (lb-rhs): -0.07049274444580078
207303 domains visited
Cumulative time: 52.16891026496887

BaB round 16
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1467] [/input-8, 479] [/input-8, 1467] [/input-8, 1329] [/input-8, 619] [/input-8, 1329] [/input-8, 1466] [/input-8, 1467] [/input, 1642] [/input, 455] 
pruning_in_iteration open status: True
ratio of positive domain = 20361 / 65536 = 0.3106842041015625
pruning-in-iteration extra time: 0.006417274475097656
Time: prepare 1.8422    bound 2.7265    transfer 0.3668    finalize 1.1209    func 6.0597    
Accumulated time: func 31.8928    prepare 9.2107    bound 16.1728    transfer 1.8994    finalize 4.5869    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07049 (20), -0.07005 (20), -0.06787 (20), -0.06743 (21), -0.06743 (20), -0.06712 (20), -0.06700 (20), -0.06698 (21), -0.06648 (22), -0.06536 (21), -0.06501 (19), -0.06453 (21), -0.06449 (22), -0.06447 (20), -0.06435 (20), -0.06425 (24), -0.06418 (20), -0.06408 (21), -0.06404 (21), -0.06393 (21), 
Length of domains: 85010
Time: pickout 0.6164    decision 3.6484    set_bounds 2.1760    solve 6.0730    add 0.1787    
Accumulated time: pickout 2.8952    decision 17.9667    set_bounds 10.1310    solve 31.9592    add 1.3178    
Current (lb-rhs): -0.07049274444580078
252478 domains visited
Cumulative time: 64.98756122589111

BaB round 17
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1018] [/input-8, 93] [/input-8, 1058] [/input-8, 1467] [/input, 1642] [/input-8, 969] [/input-8, 1329] [/input-8, 93] [/input, 2273] [/input-8, 479] 
pruning_in_iteration open status: True
ratio of positive domain = 22814 / 65536 = 0.348114013671875
pruning-in-iteration extra time: 0.006535530090332031
Time: prepare 1.8563    bound 2.6391    transfer 0.3599    finalize 1.1906    func 6.0492    
Accumulated time: func 37.9420    prepare 11.0675    bound 18.8119    transfer 2.2593    finalize 5.7775    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07049 (20), -0.07005 (20), -0.06787 (20), -0.06743 (21), -0.06743 (20), -0.06712 (20), -0.06700 (20), -0.06698 (21), -0.06648 (22), -0.06536 (21), -0.06501 (19), -0.06453 (21), -0.06449 (22), -0.06447 (20), -0.06435 (20), -0.06425 (24), -0.06418 (20), -0.06408 (21), -0.06404 (21), -0.06393 (21), 
Length of domains: 94964
Time: pickout 0.6088    decision 3.7824    set_bounds 1.5575    solve 6.0629    add 0.1746    
Accumulated time: pickout 3.5040    decision 21.7491    set_bounds 11.6885    solve 38.0221    add 1.4925    
Current (lb-rhs): -0.07049274444580078
295200 domains visited
Cumulative time: 77.31877756118774

BaB round 18
batch: 32768
splitting decisions: 
split level 0: [/input, 497] [/input, 497] [/input-8, 1466] [/input, 2273] [/input, 497] [/input, 497] [/input, 497] [/input-8, 598] [/input, 497] [/input-8, 1009] 
pruning_in_iteration open status: True
ratio of positive domain = 21848 / 65536 = 0.3333740234375
pruning-in-iteration extra time: 0.00654149055480957
Time: prepare 1.8849    bound 2.6726    transfer 0.3618    finalize 1.3459    func 6.2693    
Accumulated time: func 44.2112    prepare 12.9530    bound 21.4845    transfer 2.6211    finalize 7.1234    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07049 (20), -0.07005 (20), -0.06787 (20), -0.06743 (21), -0.06743 (20), -0.06712 (20), -0.06700 (20), -0.06698 (21), -0.06648 (22), -0.06536 (21), -0.06501 (19), -0.06453 (21), -0.06449 (22), -0.06447 (20), -0.06435 (20), -0.06425 (24), -0.06418 (20), -0.06408 (21), -0.06404 (21), -0.06393 (21), 
Length of domains: 105884
Time: pickout 0.6397    decision 4.3030    set_bounds 2.4530    solve 6.2835    add 0.1855    
Accumulated time: pickout 4.1438    decision 26.0520    set_bounds 14.1415    solve 44.3056    add 1.6779    
Current (lb-rhs): -0.07049274444580078
338888 domains visited
Cumulative time: 91.33904504776001

BaB round 19
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1860] [/input-8, 924] [/input-8, 1329] [/input-8, 1329] [/input-8, 1329] [/input-8, 1329] [/input-8, 1018] [/input-8, 93] [/input-8, 1329] [/input-8, 1018] 
pruning_in_iteration open status: True
ratio of positive domain = 22015 / 65536 = 0.3359222412109375
pruning-in-iteration extra time: 0.006333589553833008
Time: prepare 1.9246    bound 2.6673    transfer 0.3598    finalize 1.4289    func 6.3845    
Accumulated time: func 50.5957    prepare 14.8782    bound 24.1519    transfer 2.9810    finalize 8.5523    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07049 (20), -0.07005 (20), -0.06787 (20), -0.06743 (21), -0.06743 (20), -0.06712 (20), -0.06700 (20), -0.06698 (21), -0.06648 (22), -0.06536 (21), -0.06501 (19), -0.06453 (21), -0.06449 (22), -0.06447 (20), -0.06435 (20), -0.06425 (24), -0.06418 (20), -0.06408 (21), -0.06404 (21), -0.06393 (21), 
Length of domains: 116637
Time: pickout 0.6416    decision 3.4397    set_bounds 2.5324    solve 6.3989    add 0.1682    
Accumulated time: pickout 4.7853    decision 29.4918    set_bounds 16.6739    solve 50.7045    add 1.8461    
Current (lb-rhs): -0.07049274444580078
382409 domains visited
Cumulative time: 104.66483306884766

BaB round 20
batch: 32768
splitting decisions: 
split level 0: [/input-8, 969] [/input, 497] [/input, 497] [/input-8, 1466] [/input-8, 924] [/input-8, 598] [/input-8, 598] [/input-8, 1466] [/input-8, 924] [/input-8, 979] 
pruning_in_iteration open status: True
ratio of positive domain = 25154 / 65536 = 0.383819580078125
pruning-in-iteration extra time: 0.006289243698120117
Time: prepare 1.8929    bound 2.5507    transfer 0.3653    finalize 1.4607    func 6.2726    
Accumulated time: func 56.8683    prepare 16.7716    bound 26.7026    transfer 3.3462    finalize 10.0130    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07049 (20), -0.07005 (20), -0.06787 (20), -0.06743 (21), -0.06743 (20), -0.06712 (20), -0.06700 (20), -0.06698 (21), -0.06648 (22), -0.06536 (21), -0.06501 (19), -0.06453 (21), -0.06449 (22), -0.06447 (20), -0.06435 (20), -0.06425 (24), -0.06418 (20), -0.06408 (21), -0.06404 (21), -0.06393 (21), 
Length of domains: 124251
Time: pickout 0.6690    decision 4.1442    set_bounds 1.6451    solve 6.2876    add 0.1741    
Accumulated time: pickout 5.4544    decision 33.6359    set_bounds 18.3190    solve 56.9921    add 2.0202    
Current (lb-rhs): -0.07049274444580078
422791 domains visited
Cumulative time: 117.74162530899048

BaB round 21
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1466] [/input-8, 1466] [/input-8, 1265] [/input-8, 1265] [/input-8, 110] [/input, 2446] [/input, 2446] [/input-8, 1265] [/input-8, 1265] [/input, 2446] 
pruning_in_iteration open status: True
ratio of positive domain = 24487 / 65536 = 0.3736419677734375
pruning-in-iteration extra time: 0.006591796875
Time: prepare 1.9215    bound 2.5717    transfer 0.3645    finalize 1.5705    func 6.4311    
Accumulated time: func 63.2993    prepare 18.6936    bound 29.2742    transfer 3.7107    finalize 11.5835    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07049 (20), -0.07005 (20), -0.06787 (20), -0.06743 (21), -0.06743 (20), -0.06712 (20), -0.06700 (20), -0.06698 (21), -0.06648 (22), -0.06536 (21), -0.06501 (19), -0.06453 (21), -0.06449 (22), -0.06447 (20), -0.06435 (20), -0.06425 (24), -0.06418 (20), -0.06408 (21), -0.06404 (21), -0.06393 (21), 
Length of domains: 132532
Time: pickout 0.6805    decision 4.2141    set_bounds 1.6200    solve 6.4457    add 0.1491    
Accumulated time: pickout 6.1348    decision 37.8500    set_bounds 19.9390    solve 63.4378    add 2.1693    
Current (lb-rhs): -0.07049274444580078
463840 domains visited
Cumulative time: 131.01126074790955

BaB round 22
batch: 32768
splitting decisions: 
split level 0: [/input-8, 979] [/input-8, 1265] [/input-8, 1265] [/input-8, 1265] [/input-8, 1265] [/input-8, 979] [/input-8, 979] [/input, 2748] [/input-8, 1265] [/input-8, 979] 
pruning_in_iteration open status: True
ratio of positive domain = 25400 / 65536 = 0.3875732421875
pruning-in-iteration extra time: 0.006343841552734375
Time: prepare 1.8588    bound 2.5368    transfer 0.3697    finalize 1.6508    func 6.4194    
Accumulated time: func 69.7188    prepare 20.5530    bound 31.8110    transfer 4.0804    finalize 13.2343    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07049 (20), -0.07005 (20), -0.06787 (20), -0.06743 (21), -0.06743 (20), -0.06712 (20), -0.06700 (20), -0.06698 (21), -0.06648 (22), -0.06536 (21), -0.06501 (19), -0.06453 (21), -0.06449 (22), -0.06447 (20), -0.06435 (20), -0.06425 (24), -0.06418 (20), -0.06408 (21), -0.06404 (21), -0.06393 (21), 
Length of domains: 139900
Time: pickout 0.6856    decision 4.3158    set_bounds 1.6134    solve 6.4346    add 0.1836    
Accumulated time: pickout 6.8204    decision 42.1658    set_bounds 21.5524    solve 69.8723    add 2.3529    
Current (lb-rhs): -0.07049274444580078
503976 domains visited
Cumulative time: 144.40620732307434

BaB round 23
batch: 32768
splitting decisions: 
split level 0: [/input-8, 924] [/input-8, 1018] [/input-8, 979] [/input-8, 979] [/input-8, 1018] [/input-8, 924] [/input-8, 979] [/input-8, 969] [/input, 196] [/input-8, 924] 
pruning_in_iteration open status: True
ratio of positive domain = 23957 / 65536 = 0.3655548095703125
pruning-in-iteration extra time: 0.006750583648681641
Time: prepare 1.9178    bound 2.5797    transfer 0.3708    finalize 1.7783    func 6.6497    
Accumulated time: func 76.3685    prepare 22.4713    bound 34.3907    transfer 4.4512    finalize 15.0126    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07049 (20), -0.07005 (20), -0.06787 (20), -0.06743 (21), -0.06743 (20), -0.06712 (20), -0.06700 (20), -0.06698 (21), -0.06648 (22), -0.06536 (21), -0.06501 (19), -0.06453 (21), -0.06449 (22), -0.06447 (20), -0.06435 (20), -0.06425 (24), -0.06418 (20), -0.06408 (21), -0.06404 (21), -0.06393 (21), 
Length of domains: 148711
Time: pickout 0.6932    decision 4.8102    set_bounds 1.5907    solve 6.6689    add 0.1952    
Accumulated time: pickout 7.5136    decision 46.9760    set_bounds 23.1431    solve 76.5412    add 2.5481    
Current (lb-rhs): -0.07049274444580078
545555 domains visited
Cumulative time: 158.5330514907837

BaB round 24
batch: 32768
splitting decisions: 
split level 0: [/input, 455] [/input-8, 924] [/input, 455] [/input-8, 924] [/input, 455] [/input-8, 924] [/input-8, 564] [/input-8, 110] [/input-8, 924] [/input-8, 979] 
pruning_in_iteration open status: True
ratio of positive domain = 22175 / 65536 = 0.3383636474609375
pruning-in-iteration extra time: 0.0062732696533203125
Time: prepare 1.9131    bound 2.6374    transfer 0.3584    finalize 0.4931    func 5.4049    
Accumulated time: func 81.7733    prepare 24.3849    bound 37.0281    transfer 4.8096    finalize 15.5058    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07049 (20), -0.07005 (20), -0.06787 (20), -0.06743 (21), -0.06743 (20), -0.06712 (20), -0.06700 (20), -0.06698 (21), -0.06648 (22), -0.06536 (21), -0.06501 (19), -0.06453 (21), -0.06449 (22), -0.06447 (20), -0.06435 (20), -0.06425 (24), -0.06418 (20), -0.06408 (21), -0.06404 (21), -0.06393 (21), 
Length of domains: 159304
Time: pickout 0.6761    decision 3.4404    set_bounds 3.0607    solve 5.4242    add 0.2320    
Accumulated time: pickout 8.1897    decision 50.4164    set_bounds 26.2038    solve 81.9654    add 2.7802    
Current (lb-rhs): -0.07049274444580078
588916 domains visited
Cumulative time: 171.56834363937378

BaB round 25
batch: 32768
splitting decisions: 
split level 0: [/input-8, 486] [/input-8, 969] [/input-8, 1466] [/input-8, 486] [/input-8, 1466] [/input-8, 1466] [/input-8, 969] [/input-8, 486] [/input, 2446] [/input-8, 1466] 
pruning_in_iteration open status: True
ratio of positive domain = 24009 / 65536 = 0.3663482666015625
pruning-in-iteration extra time: 0.006333827972412109
Time: prepare 1.9130    bound 2.5697    transfer 0.3610    finalize 0.4706    func 5.3178    
Accumulated time: func 87.0911    prepare 26.2984    bound 39.5978    transfer 5.1705    finalize 15.9763    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07049 (20), -0.07005 (20), -0.06787 (20), -0.06743 (21), -0.06743 (20), -0.06712 (20), -0.06700 (20), -0.06698 (21), -0.06648 (22), -0.06536 (21), -0.06501 (19), -0.06453 (21), -0.06449 (22), -0.06447 (20), -0.06435 (20), -0.06425 (24), -0.06418 (20), -0.06408 (21), -0.06404 (21), -0.06393 (21), 
Length of domains: 168063
Time: pickout 0.7261    decision 4.9068    set_bounds 3.1000    solve 5.3371    add 0.2143    
Accumulated time: pickout 8.9158    decision 55.3232    set_bounds 29.3038    solve 87.3026    add 2.9945    
Current (lb-rhs): -0.07049274444580078
630443 domains visited
Cumulative time: 186.0854148864746

BaB round 26
batch: 32768
splitting decisions: 
split level 0: [/input-8, 486] [/input-8, 78] [/input, 455] [/input-8, 486] [/input, 196] [/input-8, 486] [/input-8, 2039] [/input-8, 2039] [/input-8, 486] [/input, 455] 
pruning_in_iteration open status: True
ratio of positive domain = 28081 / 65536 = 0.4284820556640625
pruning-in-iteration extra time: 0.0061893463134765625
Time: prepare 1.8136    bound 2.4126    transfer 0.3619    finalize 1.8828    func 6.4743    
Accumulated time: func 93.5654    prepare 28.1126    bound 42.0103    transfer 5.5325    finalize 17.8591    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07049 (20), -0.07005 (20), -0.06787 (20), -0.06743 (21), -0.06743 (20), -0.06712 (20), -0.06700 (20), -0.06698 (21), -0.06648 (22), -0.06536 (21), -0.06501 (19), -0.06453 (21), -0.06449 (22), -0.06447 (20), -0.06435 (20), -0.06425 (24), -0.06418 (20), -0.06408 (21), -0.06404 (21), -0.06393 (21), 
Length of domains: 172750
Time: pickout 0.7335    decision 4.5775    set_bounds 1.6102    solve 6.4892    add 0.1430    
Accumulated time: pickout 9.6494    decision 59.9007    set_bounds 30.9140    solve 93.7918    add 3.1375    
Current (lb-rhs): -0.07049274444580078
667898 domains visited
Time out!!!!!!!!
Result: unknown in 203.0608 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 117, vnnlib ID: 117 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -5.05410433,  -7.98528099,  -7.76803017,  -8.62869644,  -7.58290386,
          -9.83789062,  -8.41322899, -10.12581921,  -1.82107425,  -8.20621872]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [462]; unstable size 462; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 196, 1, 462] with unstable size 195 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 462] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 462] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [195]; unstable size 195; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 195] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 195] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.12438440, 5.28402185, 4.66859150, 5.64474773, 4.65305614, 6.76825380,
         5.48563194, 7.03934669, 5.25850201]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0840 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 118, vnnlib ID: 118 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.12188244,  -7.11672592, -10.05889606, -10.35688305, -11.79731369,
          -9.88283920, -13.23313427,  -9.69955254,  -9.69626141,  -8.79122162]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [485]; unstable size 485; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 133, 1, 485] with unstable size 132 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 485] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 485] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [132]; unstable size 132; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 132] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 132] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.78854370, 1.30756664, 1.88601005, 3.26214099, 1.25751078, 4.64157391,
         1.15222788, 1.10766840, 0.93016064]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0760 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 119, vnnlib ID: 119 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.32807446, -12.10395241,  -6.98160744,  -7.09187889,  -7.17572021,
          -7.24349356,  -7.85012865,  -8.02880383, -10.09511280, -10.98221016]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [818]; unstable size 818; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 292, 1, 818] with unstable size 291 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 818] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 818] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [291]; unstable size 291; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 291] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 291] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.75854403,  3.26663160, -1.20437765, -1.10650229, -0.29332355,
         -0.34117436, -0.69933492,  1.05337346,  1.86989951]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.32807446, -12.10395241,  -6.98160744,  -7.09187889,  -7.17572021,
          -7.24349356,  -7.85012865,  -8.02880383, -10.09511280, -10.98221016]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.32807541, -12.10395432,  -6.98160744,  -7.09188032,  -7.17572117,
           -7.24349451,  -7.85012913,  -8.02880478, -10.09511280, -10.98221016],
         [ -9.32807541, -12.10395432,  -6.98160744,  -7.09188032,  -7.17572117,
           -7.24349451,  -7.85012913,  -8.02880478, -10.09511280, -10.98221016]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.11027288,  0.08384085,  0.15161419,  0.75824881,  0.93692446]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.11587298, -1.08412695, -0.89365077,  ..., -1.14761901,
            -1.21111107, -1.29047608],
           [-1.05238092, -1.00476182, -0.84603173,  ..., -0.51269841,
            -0.56031746, -0.63968253],
           [-0.41746020, -0.33809513, -0.29047608,  ...,  0.01111121,
            -0.06825387, -0.19523799],
           ...,
           [-0.48095238, -0.49682540, -0.49682540,  ..., -0.68730158,
            -0.71904761, -0.78253967],
           [-0.46507925, -0.48095238, -0.46507925,  ..., -0.60793650,
            -0.63968253, -0.71904761],
           [-0.38571417, -0.36984116, -0.35396814,  ..., -0.46507925,
            -0.49682540, -0.56031746]],

          [[-0.90177131, -0.93397743, -0.72463763,  ..., -1.17552328,
            -1.25603855, -1.36875999],
           [-0.88566822, -0.88566822, -0.67632848,  ..., -0.57971013,
            -0.64412236, -0.75684375],
           [-0.37037024, -0.28985494, -0.17713353,  ..., -0.09661824,
            -0.19323659, -0.35426718],
           ...,
           [-0.59581316, -0.61191624, -0.61191624,  ..., -0.98228657,
            -0.98228657, -0.98228657],
           [-0.59581316, -0.61191624, -0.59581316,  ..., -0.99838966,
            -0.95008045, -1.03059578],
           [-0.59581316, -0.57971013, -0.54750401,  ..., -0.70853460,
            -0.67632848, -0.75684375]],

          [[-0.49325335, -0.52323836, -0.28335828,  ..., -0.86806595,
            -0.95802099, -1.07796109],
           [-0.53823084, -0.52323836, -0.28335828,  ..., -0.34332830,
            -0.43328333, -0.55322337],
           [-0.14842562, -0.05847061,  0.10644694,  ...,  0.04647692,
            -0.05847061, -0.20839565],
           ...,
           [-0.55322337, -0.56821585, -0.56821585,  ..., -0.92803597,
            -0.91304344, -0.91304344],
           [-0.55322337, -0.56821585, -0.55322337,  ..., -0.86806595,
            -0.85307342, -0.92803597],
           [-0.53823084, -0.50824583, -0.49325335,  ..., -0.58320838,
            -0.58320838, -0.67316341]]],


         [[[-1.11587298, -1.08412695, -0.89365077,  ..., -1.14761901,
            -1.21111107, -1.29047608],
           [-1.05238092, -1.00476182, -0.84603173,  ..., -0.51269841,
            -0.56031746, -0.63968253],
           [-0.41746020, -0.33809513, -0.29047608,  ...,  0.01111121,
            -0.06825387, -0.19523799],
           ...,
           [-0.48095238, -0.49682540, -0.49682540,  ..., -0.68730158,
            -0.71904761, -0.78253967],
           [-0.46507925, -0.48095238, -0.46507925,  ..., -0.60793650,
            -0.63968253, -0.71904761],
           [-0.38571417, -0.36984116, -0.35396814,  ..., -0.46507925,
            -0.49682540, -0.56031746]],

          [[-0.90177131, -0.93397743, -0.72463763,  ..., -1.17552328,
            -1.25603855, -1.36875999],
           [-0.88566822, -0.88566822, -0.67632848,  ..., -0.57971013,
            -0.64412236, -0.75684375],
           [-0.37037024, -0.28985494, -0.17713353,  ..., -0.09661824,
            -0.19323659, -0.35426718],
           ...,
           [-0.59581316, -0.61191624, -0.61191624,  ..., -0.98228657,
            -0.98228657, -0.98228657],
           [-0.59581316, -0.61191624, -0.59581316,  ..., -0.99838966,
            -0.95008045, -1.03059578],
           [-0.59581316, -0.57971013, -0.54750401,  ..., -0.70853460,
            -0.67632848, -0.75684375]],

          [[-0.49325335, -0.52323836, -0.28335828,  ..., -0.86806595,
            -0.95802099, -1.07796109],
           [-0.53823084, -0.52323836, -0.28335828,  ..., -0.34332830,
            -0.43328333, -0.55322337],
           [-0.14842562, -0.05847061,  0.10644694,  ...,  0.04647692,
            -0.05847061, -0.20839565],
           ...,
           [-0.55322337, -0.56821585, -0.56821585,  ..., -0.92803597,
            -0.91304344, -0.91304344],
           [-0.55322337, -0.56821585, -0.55322337,  ..., -0.86806595,
            -0.85307342, -0.92803597],
           [-0.53823084, -0.50824583, -0.49325335,  ..., -0.58320838,
            -0.58320838, -0.67316341]]],


         [[[-1.11587298, -1.08412695, -0.89365077,  ..., -1.14761901,
            -1.21111107, -1.29047608],
           [-1.05238092, -1.00476182, -0.84603173,  ..., -0.51269841,
            -0.56031746, -0.63968253],
           [-0.41746020, -0.33809513, -0.29047608,  ...,  0.01111121,
            -0.06825387, -0.19523799],
           ...,
           [-0.48095238, -0.49682540, -0.49682540,  ..., -0.68730158,
            -0.71904761, -0.78253967],
           [-0.46507925, -0.48095238, -0.46507925,  ..., -0.60793650,
            -0.63968253, -0.71904761],
           [-0.38571417, -0.36984116, -0.35396814,  ..., -0.46507925,
            -0.49682540, -0.56031746]],

          [[-0.90177131, -0.93397743, -0.72463763,  ..., -1.17552328,
            -1.25603855, -1.36875999],
           [-0.88566822, -0.88566822, -0.67632848,  ..., -0.57971013,
            -0.64412236, -0.75684375],
           [-0.37037024, -0.28985494, -0.17713353,  ..., -0.09661824,
            -0.19323659, -0.35426718],
           ...,
           [-0.59581316, -0.61191624, -0.61191624,  ..., -0.98228657,
            -0.98228657, -0.98228657],
           [-0.59581316, -0.61191624, -0.59581316,  ..., -0.99838966,
            -0.95008045, -1.03059578],
           [-0.59581316, -0.57971013, -0.54750401,  ..., -0.70853460,
            -0.67632848, -0.75684375]],

          [[-0.49325335, -0.52323836, -0.28335828,  ..., -0.86806595,
            -0.95802099, -1.07796109],
           [-0.53823084, -0.52323836, -0.28335828,  ..., -0.34332830,
            -0.43328333, -0.55322337],
           [-0.14842562, -0.05847061,  0.10644694,  ...,  0.04647692,
            -0.05847061, -0.20839565],
           ...,
           [-0.55322337, -0.56821585, -0.56821585,  ..., -0.92803597,
            -0.91304344, -0.91304344],
           [-0.55322337, -0.56821585, -0.55322337,  ..., -0.86806595,
            -0.85307342, -0.92803597],
           [-0.53823084, -0.50824583, -0.49325335,  ..., -0.58320838,
            -0.58320838, -0.67316341]]],


         [[[-1.11587298, -1.08412695, -0.89365077,  ..., -1.14761901,
            -1.21111107, -1.29047608],
           [-1.05238092, -1.00476182, -0.84603173,  ..., -0.51269841,
            -0.56031746, -0.63968253],
           [-0.41746020, -0.33809513, -0.29047608,  ...,  0.01111121,
            -0.06825387, -0.19523799],
           ...,
           [-0.48095238, -0.49682540, -0.49682540,  ..., -0.68730158,
            -0.71904761, -0.78253967],
           [-0.46507925, -0.48095238, -0.46507925,  ..., -0.60793650,
            -0.63968253, -0.71904761],
           [-0.38571417, -0.36984116, -0.35396814,  ..., -0.46507925,
            -0.49682540, -0.56031746]],

          [[-0.90177131, -0.93397743, -0.72463763,  ..., -1.17552328,
            -1.25603855, -1.36875999],
           [-0.88566822, -0.88566822, -0.67632848,  ..., -0.57971013,
            -0.64412236, -0.75684375],
           [-0.37037024, -0.28985494, -0.17713353,  ..., -0.09661824,
            -0.19323659, -0.35426718],
           ...,
           [-0.59581316, -0.61191624, -0.61191624,  ..., -0.98228657,
            -0.98228657, -0.98228657],
           [-0.59581316, -0.61191624, -0.59581316,  ..., -0.99838966,
            -0.95008045, -1.03059578],
           [-0.59581316, -0.57971013, -0.54750401,  ..., -0.70853460,
            -0.67632848, -0.75684375]],

          [[-0.49325335, -0.52323836, -0.28335828,  ..., -0.86806595,
            -0.95802099, -1.07796109],
           [-0.53823084, -0.52323836, -0.28335828,  ..., -0.34332830,
            -0.43328333, -0.55322337],
           [-0.14842562, -0.05847061,  0.10644694,  ...,  0.04647692,
            -0.05847061, -0.20839565],
           ...,
           [-0.55322337, -0.56821585, -0.56821585,  ..., -0.92803597,
            -0.91304344, -0.91304344],
           [-0.55322337, -0.56821585, -0.55322337,  ..., -0.86806595,
            -0.85307342, -0.92803597],
           [-0.53823084, -0.50824583, -0.49325335,  ..., -0.58320838,
            -0.58320838, -0.67316341]]],


         [[[-1.11587298, -1.08412695, -0.89365077,  ..., -1.14761901,
            -1.21111107, -1.29047608],
           [-1.05238092, -1.00476182, -0.84603173,  ..., -0.51269841,
            -0.56031746, -0.63968253],
           [-0.41746020, -0.33809513, -0.29047608,  ...,  0.01111121,
            -0.06825387, -0.19523799],
           ...,
           [-0.48095238, -0.49682540, -0.49682540,  ..., -0.68730158,
            -0.71904761, -0.78253967],
           [-0.46507925, -0.48095238, -0.46507925,  ..., -0.60793650,
            -0.63968253, -0.71904761],
           [-0.38571417, -0.36984116, -0.35396814,  ..., -0.46507925,
            -0.49682540, -0.56031746]],

          [[-0.90177131, -0.93397743, -0.72463763,  ..., -1.17552328,
            -1.25603855, -1.36875999],
           [-0.88566822, -0.88566822, -0.67632848,  ..., -0.57971013,
            -0.64412236, -0.75684375],
           [-0.37037024, -0.28985494, -0.17713353,  ..., -0.09661824,
            -0.19323659, -0.35426718],
           ...,
           [-0.59581316, -0.61191624, -0.61191624,  ..., -0.98228657,
            -0.98228657, -0.98228657],
           [-0.59581316, -0.61191624, -0.59581316,  ..., -0.99838966,
            -0.95008045, -1.03059578],
           [-0.59581316, -0.57971013, -0.54750401,  ..., -0.70853460,
            -0.67632848, -0.75684375]],

          [[-0.49325335, -0.52323836, -0.28335828,  ..., -0.86806595,
            -0.95802099, -1.07796109],
           [-0.53823084, -0.52323836, -0.28335828,  ..., -0.34332830,
            -0.43328333, -0.55322337],
           [-0.14842562, -0.05847061,  0.10644694,  ...,  0.04647692,
            -0.05847061, -0.20839565],
           ...,
           [-0.55322337, -0.56821585, -0.56821585,  ..., -0.92803597,
            -0.91304344, -0.91304344],
           [-0.55322337, -0.56821585, -0.55322337,  ..., -0.86806595,
            -0.85307342, -0.92803597],
           [-0.53823084, -0.50824583, -0.49325335,  ..., -0.58320838,
            -0.58320838, -0.67316341]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0808 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 120, vnnlib ID: 120 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -3.83905172, -12.57908535,  -3.68583417,  -3.78964639,  -5.75812435,
          -4.08564281,  -7.30590010,  -4.61561012, -11.22108173, -10.78313065]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [686]; unstable size 686; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 99, 1, 686] with unstable size 98 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 6, 1, 686] with unstable size 5 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 686] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [98]; unstable size 98; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 6, 1, 98] with unstable size 5 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 98] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [5]; unstable size 5; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 7.90750742, -0.64292037, -0.82822919,  1.19824719, -0.54596639,
          2.64874315, -0.17078555,  6.71303511,  6.26933956]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -3.83905172, -12.57908535,  -3.68583417,  -3.78964639,  -5.75812435,
          -4.08564281,  -7.30590010,  -4.61561012, -11.22108173, -10.78313065]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -3.83905125, -12.57908630,  -3.68583441,  -3.78964591,  -5.75812483,
           -4.08564281,  -7.30589867,  -4.61561012, -11.22108078, -10.78313160],
         [ -3.83905125, -12.57908630,  -3.68583441,  -3.78964591,  -5.75812483,
           -4.08564281,  -7.30589867,  -4.61561012, -11.22108078, -10.78313160]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.15321684, -0.04940534,  0.24659157,  0.77655888]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[1.51904786, 1.48730183, 1.48730183,  ..., 1.53492093,
            1.55079389, 1.56666696],
           [1.55079389, 1.53492093, 1.51904786,  ..., 1.58253992,
            1.61428595, 1.63015902],
           [1.58253992, 1.56666696, 1.56666696,  ..., 1.67777801,
            1.70952404, 1.72539711],
           ...,
           [1.51904786, 1.45555580, 1.45555580,  ..., 1.67777801,
            1.66190505, 1.66190505],
           [1.48730183, 1.42380977, 1.42380977,  ..., 1.69365108,
            1.66190505, 1.66190505],
           [1.50317490, 1.43968284, 1.43968284,  ..., 1.72539711,
            1.69365108, 1.67777801]],

          [[1.51368785, 1.48148179, 1.48148179,  ..., 1.51368785,
            1.51368785, 1.54589403],
           [1.54589403, 1.51368785, 1.51368785,  ..., 1.57810009,
            1.61030626, 1.62640929],
           [1.57810009, 1.56199706, 1.57810009,  ..., 1.72302771,
            1.73913074, 1.75523376],
           ...,
           [1.44927561, 1.38486338, 1.38486338,  ..., 1.72302771,
            1.72302771, 1.72302771],
           [1.41706955, 1.35265732, 1.36876035,  ..., 1.72302771,
            1.72302771, 1.72302771],
           [1.43317258, 1.36876035, 1.38486338,  ..., 1.75523376,
            1.73913074, 1.73913074]],

          [[1.36581755, 1.33583248, 1.33583248,  ..., 1.36581755,
            1.36581755, 1.39580250],
           [1.39580250, 1.38081002, 1.36581755,  ..., 1.42578757,
            1.45577252, 1.47076499],
           [1.41079497, 1.41079497, 1.41079497,  ..., 1.54572761,
            1.56072009, 1.57571256],
           ...,
           [1.29085493, 1.23088503, 1.23088503,  ..., 1.54572761,
            1.56072009, 1.56072009],
           [1.26086998, 1.20089996, 1.20089996,  ..., 1.56072009,
            1.56072009, 1.56072009],
           [1.27586246, 1.21589243, 1.21589243,  ..., 1.57571256,
            1.57571256, 1.57571256]]],


         [[[1.51904786, 1.48730183, 1.48730183,  ..., 1.53492093,
            1.55079389, 1.56666696],
           [1.55079389, 1.53492093, 1.51904786,  ..., 1.58253992,
            1.61428595, 1.63015902],
           [1.58253992, 1.56666696, 1.56666696,  ..., 1.67777801,
            1.70952404, 1.72539711],
           ...,
           [1.51904786, 1.45555580, 1.45555580,  ..., 1.67777801,
            1.66190505, 1.66190505],
           [1.48730183, 1.42380977, 1.42380977,  ..., 1.69365108,
            1.66190505, 1.66190505],
           [1.50317490, 1.43968284, 1.43968284,  ..., 1.72539711,
            1.69365108, 1.67777801]],

          [[1.51368785, 1.48148179, 1.48148179,  ..., 1.51368785,
            1.51368785, 1.54589403],
           [1.54589403, 1.51368785, 1.51368785,  ..., 1.57810009,
            1.61030626, 1.62640929],
           [1.57810009, 1.56199706, 1.57810009,  ..., 1.72302771,
            1.73913074, 1.75523376],
           ...,
           [1.44927561, 1.38486338, 1.38486338,  ..., 1.72302771,
            1.72302771, 1.72302771],
           [1.41706955, 1.35265732, 1.36876035,  ..., 1.72302771,
            1.72302771, 1.72302771],
           [1.43317258, 1.36876035, 1.38486338,  ..., 1.75523376,
            1.73913074, 1.73913074]],

          [[1.36581755, 1.33583248, 1.33583248,  ..., 1.36581755,
            1.36581755, 1.39580250],
           [1.39580250, 1.38081002, 1.36581755,  ..., 1.42578757,
            1.45577252, 1.47076499],
           [1.41079497, 1.41079497, 1.41079497,  ..., 1.54572761,
            1.56072009, 1.57571256],
           ...,
           [1.29085493, 1.23088503, 1.23088503,  ..., 1.54572761,
            1.56072009, 1.56072009],
           [1.26086998, 1.20089996, 1.20089996,  ..., 1.56072009,
            1.56072009, 1.56072009],
           [1.27586246, 1.21589243, 1.21589243,  ..., 1.57571256,
            1.57571256, 1.57571256]]],


         [[[1.51904786, 1.48730183, 1.48730183,  ..., 1.53492093,
            1.55079389, 1.56666696],
           [1.55079389, 1.53492093, 1.51904786,  ..., 1.58253992,
            1.61428595, 1.63015902],
           [1.58253992, 1.56666696, 1.56666696,  ..., 1.67777801,
            1.70952404, 1.72539711],
           ...,
           [1.51904786, 1.45555580, 1.45555580,  ..., 1.67777801,
            1.66190505, 1.66190505],
           [1.48730183, 1.42380977, 1.42380977,  ..., 1.69365108,
            1.66190505, 1.66190505],
           [1.50317490, 1.43968284, 1.43968284,  ..., 1.72539711,
            1.69365108, 1.67777801]],

          [[1.51368785, 1.48148179, 1.48148179,  ..., 1.51368785,
            1.51368785, 1.54589403],
           [1.54589403, 1.51368785, 1.51368785,  ..., 1.57810009,
            1.61030626, 1.62640929],
           [1.57810009, 1.56199706, 1.57810009,  ..., 1.72302771,
            1.73913074, 1.75523376],
           ...,
           [1.44927561, 1.38486338, 1.38486338,  ..., 1.72302771,
            1.72302771, 1.72302771],
           [1.41706955, 1.35265732, 1.36876035,  ..., 1.72302771,
            1.72302771, 1.72302771],
           [1.43317258, 1.36876035, 1.38486338,  ..., 1.75523376,
            1.73913074, 1.73913074]],

          [[1.36581755, 1.33583248, 1.33583248,  ..., 1.36581755,
            1.36581755, 1.39580250],
           [1.39580250, 1.38081002, 1.36581755,  ..., 1.42578757,
            1.45577252, 1.47076499],
           [1.41079497, 1.41079497, 1.41079497,  ..., 1.54572761,
            1.56072009, 1.57571256],
           ...,
           [1.29085493, 1.23088503, 1.23088503,  ..., 1.54572761,
            1.56072009, 1.56072009],
           [1.26086998, 1.20089996, 1.20089996,  ..., 1.56072009,
            1.56072009, 1.56072009],
           [1.27586246, 1.21589243, 1.21589243,  ..., 1.57571256,
            1.57571256, 1.57571256]]],


         [[[1.51904786, 1.48730183, 1.48730183,  ..., 1.53492093,
            1.55079389, 1.56666696],
           [1.55079389, 1.53492093, 1.51904786,  ..., 1.58253992,
            1.61428595, 1.63015902],
           [1.58253992, 1.56666696, 1.56666696,  ..., 1.67777801,
            1.70952404, 1.72539711],
           ...,
           [1.51904786, 1.45555580, 1.45555580,  ..., 1.67777801,
            1.66190505, 1.66190505],
           [1.48730183, 1.42380977, 1.42380977,  ..., 1.69365108,
            1.66190505, 1.66190505],
           [1.50317490, 1.43968284, 1.43968284,  ..., 1.72539711,
            1.69365108, 1.67777801]],

          [[1.51368785, 1.48148179, 1.48148179,  ..., 1.51368785,
            1.51368785, 1.54589403],
           [1.54589403, 1.51368785, 1.51368785,  ..., 1.57810009,
            1.61030626, 1.62640929],
           [1.57810009, 1.56199706, 1.57810009,  ..., 1.72302771,
            1.73913074, 1.75523376],
           ...,
           [1.44927561, 1.38486338, 1.38486338,  ..., 1.72302771,
            1.72302771, 1.72302771],
           [1.41706955, 1.35265732, 1.36876035,  ..., 1.72302771,
            1.72302771, 1.72302771],
           [1.43317258, 1.36876035, 1.38486338,  ..., 1.75523376,
            1.73913074, 1.73913074]],

          [[1.36581755, 1.33583248, 1.33583248,  ..., 1.36581755,
            1.36581755, 1.39580250],
           [1.39580250, 1.38081002, 1.36581755,  ..., 1.42578757,
            1.45577252, 1.47076499],
           [1.41079497, 1.41079497, 1.41079497,  ..., 1.54572761,
            1.56072009, 1.57571256],
           ...,
           [1.29085493, 1.23088503, 1.23088503,  ..., 1.54572761,
            1.56072009, 1.56072009],
           [1.26086998, 1.20089996, 1.20089996,  ..., 1.56072009,
            1.56072009, 1.56072009],
           [1.27586246, 1.21589243, 1.21589243,  ..., 1.57571256,
            1.57571256, 1.57571256]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0838 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 121, vnnlib ID: 121 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.86313248,  -8.44097900, -13.20821190, -13.39188290, -12.26532078,
         -13.55902863, -14.16451168, -12.10001564, -14.36103153, -11.35003471]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [533]; unstable size 533; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 226, 1, 533] with unstable size 225 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 533] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 533] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [225]; unstable size 225; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 225] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 225] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.58184528, 2.47264957, 2.70894527, 1.52923870, 2.67172623, 3.54394722,
         1.39659882, 3.88951111, 1.85305715]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0537 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 122, vnnlib ID: 122 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.28887367,  -8.90356731, -12.90353107, -13.19761372, -12.63090992,
         -13.74266148, -14.50664043, -13.25693512,  -8.36382961, -11.89731884]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [470]; unstable size 470; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 191, 1, 470] with unstable size 190 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 470] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 470] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [190]; unstable size 190; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 190] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 190] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.83597231,  1.88928604,  2.30730438,  1.75963211,  2.61177826,
          3.72314739,  2.18467283, -1.76713800,  1.99258840]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.28887367,  -8.90356731, -12.90353107, -13.19761372, -12.63090992,
         -13.74266148, -14.50664043, -13.25693512,  -8.36382961, -11.89731884]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.28887367,  -8.90356731, -12.90353107, -13.19761372, -12.63090992,
          -13.74266148, -14.50664043, -13.25693512,  -8.36382961, -11.89731884]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.53973770]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.17936504, -0.97301590, -0.90952379,  ..., -1.27460313,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.83015871,  ..., -1.56031740,
            -1.65555561, -1.41746020],
           [-1.19523799, -1.17936504, -1.03650784,  ..., -1.44920623,
            -1.65555561, -1.52857137],
           ...,
           [ 0.69365084,  0.70952386,  0.72539687,  ..., -1.38571417,
            -1.43333328, -1.44920623],
           [ 0.74126989,  0.75714290,  0.77301592,  ..., -1.35396814,
            -1.41746020, -1.44920623],
           [ 0.77301592,  0.75714290,  0.72539687,  ..., -1.33809519,
            -1.38571417, -1.40158725]],

          [[-1.25603855, -0.91787434, -0.70853460,  ..., -0.91787434,
            -1.11111104, -0.91787434],
           [-1.20772946, -1.03059578, -0.67632848,  ..., -1.25603855,
            -1.38486302, -1.09500802],
           [-1.27214170, -1.23993552, -0.98228657,  ..., -1.17552328,
            -1.38486302, -1.23993552],
           ...,
           [ 0.53140104,  0.54750413,  0.56360716,  ..., -1.27214170,
            -1.32045078, -1.33655393],
           [ 0.57971025,  0.59581327,  0.61191636,  ..., -1.23993552,
            -1.30434775, -1.32045078],
           [ 0.61191636,  0.59581327,  0.57971025,  ..., -1.22383249,
            -1.28824472, -1.28824472]],

          [[-1.28785622, -1.07796109, -1.01799107,  ..., -1.37781119,
            -1.51274371, -1.42278874],
           [-1.22788620, -1.15292358, -0.92803597,  ..., -1.52773619,
            -1.55772126, -1.43778121],
           [-1.27286363, -1.28785622, -1.10794616,  ..., -1.21289361,
            -1.34782624, -1.36281872],
           ...,
           [ 0.54122955,  0.55622208,  0.57121456,  ..., -0.86806595,
            -0.91304344, -0.92803597],
           [ 0.58620709,  0.60119957,  0.60119957,  ..., -0.83808094,
            -0.89805096, -0.92803597],
           [ 0.61619210,  0.60119957,  0.58620709,  ..., -0.82308841,
            -0.88305843, -0.89805096]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0429 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 123, vnnlib ID: 123 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.10229683, -25.38055038, -21.73574066, -24.28678703, -25.19532585,
         -24.57376480, -24.21175194, -26.78511238, -20.36679649, -26.62832260]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [535]; unstable size 535; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 289, 1, 535] with unstable size 288 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 535] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 535] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [288]; unstable size 288; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 288] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 288] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.20215023,  3.29560661, -0.48173285,  2.02198029,  2.71108150,
          2.06479025,  1.99369431,  3.83842278,  4.76781845]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.10229683, -25.38055038, -21.73574066, -24.28678703, -25.19532585,
         -24.57376480, -24.21175194, -26.78511238, -20.36679649, -26.62832260]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.90987015, -24.70122147, -20.82708359, -23.43597221, -24.32200050,
          -23.68591499, -23.38396645, -25.73447037, -20.12191963, -25.80022812],
         [-19.90987015, -24.70122147, -20.82708359, -23.43597221, -24.32200050,
          -23.68591499, -23.38396645, -25.73447037, -20.12191963, -25.80022812]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.21204948,  0.70516396]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0124 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0804 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 124, vnnlib ID: 124 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-7.82584620, -7.63018703, -7.73003864, -7.25304461, -6.31065321,
         -8.23791885, -6.43050718, -6.84701109, -9.17996407, -7.64501524]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [632]; unstable size 632; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 261, 1, 632] with unstable size 260 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 632] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 632] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [260]; unstable size 260; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 260] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 260] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.27221322, -1.34621930, -1.80931950, -2.15861130, -2.98624659,
         -1.27028847, -2.80886650, -2.57974577, -0.39991617]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-7.82584620, -7.63018703, -7.73003864, -7.25304461, -6.31065321,
         -8.23791885, -6.43050718, -6.84701109, -9.17996407, -7.64501524]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.82584524, -7.63018608, -7.73003769, -7.25304365, -6.31065226,
          -8.23791599, -6.43050575, -6.84701014, -9.17996311, -7.64501333],
         [-7.82584524, -7.63018608, -7.73003769, -7.25304365, -6.31065226,
          -8.23791599, -6.43050575, -6.84701014, -9.17996311, -7.64501333]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.18083191, -0.01482725,  0.08502436, -0.39196968, -1.33436108,
           0.59290266, -1.21450758, -0.79800320,  1.53494978]]],
       device='cuda:0')
number of violation:  5
clean attack image tensor([[[[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         ...,


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]]]], device='cuda:0') torch.Size([1, 9, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0812 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 125, vnnlib ID: 125 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.10437679,  -8.96013069,  -8.69070339,  -8.62474823,  -9.76555538,
          -8.77996826, -10.66582012,  -9.75414944,  -7.47076607,  -8.44103909]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [743]; unstable size 743; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 170, 1, 743] with unstable size 169 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 743] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 743] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [169]; unstable size 169; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 169] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 169] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.60137367, -0.36385405, -1.25714588, -1.13711548, -0.05323458,
         -1.18301010,  0.78644753, -0.01430035, -2.42923403]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.10437679,  -8.96013069,  -8.69070339,  -8.62474823,  -9.76555538,
          -8.77996826, -10.66582012,  -9.75414944,  -7.47076607,  -8.44103909]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.10437679,  -8.96013069,  -8.69070339,  -8.62474823,  -9.76555729,
           -8.77996826, -10.66582012,  -9.75414848,  -7.47076511,  -8.44103909],
         [ -8.10437679,  -8.96013069,  -8.69070339,  -8.62474823,  -9.76555729,
           -8.77996826, -10.66582012,  -9.75414848,  -7.47076511,  -8.44103909]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.33666229,  0.51909161,  0.24966431,  0.18370914,  1.32451820,
           0.33892918,  1.31310940, -0.97027397]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         ...,


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]]]], device='cuda:0') torch.Size([1, 8, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0441 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 126, vnnlib ID: 126 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.85289669, -8.00897789, -3.25385118, -4.58932209, -3.74074745,
         -4.14678431, -4.96510458, -4.05580473, -7.93344116, -6.89174938]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [508]; unstable size 508; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 186, 1, 508] with unstable size 185 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 508] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 508] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [185]; unstable size 185; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 185] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 185] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.07057714,  2.60909176, -1.19970727,  0.02767622, -0.45064342,
          0.08406520, -0.38396740,  2.78343749,  1.49663746]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.85289669, -8.00897789, -3.25385118, -4.58932209, -3.74074745,
         -4.14678431, -4.96510458, -4.05580473, -7.93344116, -6.89174938]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.85289764, -8.00897884, -3.25385094, -4.58932209, -3.74074745,
          -4.14678431, -4.96510506, -4.05580473, -7.93344021, -6.89175034],
         [-6.85289764, -8.00897884, -3.25385094, -4.58932209, -3.74074745,
          -4.14678431, -4.96510506, -4.05580473, -7.93344021, -6.89175034]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.48689651,  0.40603685,  0.31505728]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.15872920e-01, -8.41268823e-02, -1.15872920e-01,  ...,
             4.71428633e-01, -5.44444442e-01, -7.82539666e-01],
           [ 5.03174663e-01,  2.01587379e-01,  5.87302521e-02,  ...,
             7.09523857e-01, -5.12698412e-01, -8.30158710e-01],
           [ 8.20634961e-01,  5.03174663e-01,  2.96825469e-01,  ...,
             7.57142901e-01, -6.39682531e-01, -8.46031725e-01],
           ...,
           [-4.96825397e-01, -4.96825397e-01, -5.44444442e-01,  ...,
            -9.73015904e-01, -9.57142830e-01, -8.93650770e-01],
           [-5.76190472e-01, -6.23809516e-01, -6.07936502e-01,  ...,
            -7.66666651e-01, -9.25396800e-01, -9.57142830e-01],
           [-4.17460203e-01, -7.19047606e-01, -6.71428561e-01,  ...,
            -8.46031725e-01, -9.41269815e-01, -9.25396800e-01]],

          [[ 6.44122481e-01,  4.66988832e-01,  1.44927651e-01,  ...,
             9.82286692e-01, -5.79710126e-01, -8.69565189e-01],
           [ 1.14331758e+00,  8.69565308e-01,  4.34782714e-01,  ...,
             1.03059590e+00, -5.47504008e-01, -9.33977425e-01],
           [ 1.35265732e+00,  1.01449287e+00,  4.34782714e-01,  ...,
             7.72946954e-01, -6.92431509e-01, -9.50080454e-01],
           ...,
           [-9.66182351e-02,  1.22934580e-07,  1.22934580e-07,  ...,
            -1.51368749e+00, -1.35265696e+00, -1.09500802e+00],
           [-3.38164121e-01, -3.38164121e-01, -2.41545767e-01,  ...,
            -1.04669881e+00, -1.14331722e+00, -1.17552328e+00],
           [-3.22061062e-01, -4.83091772e-01, -3.22061062e-01,  ...,
            -9.33977425e-01, -1.06280184e+00, -1.07890499e+00]],

          [[-5.98200858e-01, -7.78110921e-01, -9.73013461e-01,  ...,
            -5.83208382e-01, -1.21289361e+00, -1.34782624e+00],
           [-2.38380641e-01, -4.78260815e-01, -5.53223372e-01,  ...,
            -4.33283329e-01, -1.27286363e+00, -1.28785622e+00],
           [-1.63418129e-01, -3.58320802e-01, -4.63268340e-01,  ...,
             1.51424453e-01, -1.42278874e+00, -1.34782624e+00],
           ...,
           [-8.08095932e-01, -7.03148425e-01, -9.88005996e-01,  ...,
            -1.49775124e+00, -1.43778121e+00, -1.40779614e+00],
           [-8.08095932e-01, -4.78260815e-01, -5.53223372e-01,  ...,
            -1.22788620e+00, -1.34782624e+00, -1.40779614e+00],
           [-7.48125911e-01, -8.83058429e-01, -1.04797614e+00,  ...,
            -1.24287868e+00, -1.30284870e+00, -1.24287868e+00]]],


         [[[-1.15872920e-01, -8.41268823e-02, -1.15872920e-01,  ...,
             4.71428633e-01, -5.44444442e-01, -7.82539666e-01],
           [ 5.03174663e-01,  2.01587379e-01,  5.87302521e-02,  ...,
             7.09523857e-01, -5.12698412e-01, -8.30158710e-01],
           [ 8.20634961e-01,  5.03174663e-01,  2.96825469e-01,  ...,
             7.57142901e-01, -6.39682531e-01, -8.46031725e-01],
           ...,
           [-4.96825397e-01, -4.96825397e-01, -5.44444442e-01,  ...,
            -9.73015904e-01, -9.57142830e-01, -8.93650770e-01],
           [-5.76190472e-01, -6.23809516e-01, -6.07936502e-01,  ...,
            -7.66666651e-01, -9.25396800e-01, -9.57142830e-01],
           [-4.17460203e-01, -7.19047606e-01, -6.71428561e-01,  ...,
            -8.46031725e-01, -9.41269815e-01, -9.25396800e-01]],

          [[ 6.44122481e-01,  4.66988832e-01,  1.44927651e-01,  ...,
             9.82286692e-01, -5.79710126e-01, -8.69565189e-01],
           [ 1.14331758e+00,  8.69565308e-01,  4.34782714e-01,  ...,
             1.03059590e+00, -5.47504008e-01, -9.33977425e-01],
           [ 1.35265732e+00,  1.01449287e+00,  4.34782714e-01,  ...,
             7.72946954e-01, -6.92431509e-01, -9.50080454e-01],
           ...,
           [-9.66182351e-02,  1.22934580e-07,  1.22934580e-07,  ...,
            -1.51368749e+00, -1.35265696e+00, -1.09500802e+00],
           [-3.38164121e-01, -3.38164121e-01, -2.41545767e-01,  ...,
            -1.04669881e+00, -1.14331722e+00, -1.17552328e+00],
           [-3.22061062e-01, -4.83091772e-01, -3.22061062e-01,  ...,
            -9.33977425e-01, -1.06280184e+00, -1.07890499e+00]],

          [[-5.98200858e-01, -7.78110921e-01, -9.73013461e-01,  ...,
            -5.83208382e-01, -1.21289361e+00, -1.34782624e+00],
           [-2.38380641e-01, -4.78260815e-01, -5.53223372e-01,  ...,
            -4.33283329e-01, -1.27286363e+00, -1.28785622e+00],
           [-1.63418129e-01, -3.58320802e-01, -4.63268340e-01,  ...,
             1.51424453e-01, -1.42278874e+00, -1.34782624e+00],
           ...,
           [-8.08095932e-01, -7.03148425e-01, -9.88005996e-01,  ...,
            -1.49775124e+00, -1.43778121e+00, -1.40779614e+00],
           [-8.08095932e-01, -4.78260815e-01, -5.53223372e-01,  ...,
            -1.22788620e+00, -1.34782624e+00, -1.40779614e+00],
           [-7.48125911e-01, -8.83058429e-01, -1.04797614e+00,  ...,
            -1.24287868e+00, -1.30284870e+00, -1.24287868e+00]]],


         [[[-1.15872920e-01, -8.41268823e-02, -1.15872920e-01,  ...,
             4.71428633e-01, -5.44444442e-01, -7.82539666e-01],
           [ 5.03174663e-01,  2.01587379e-01,  5.87302521e-02,  ...,
             7.09523857e-01, -5.12698412e-01, -8.30158710e-01],
           [ 8.20634961e-01,  5.03174663e-01,  2.96825469e-01,  ...,
             7.57142901e-01, -6.39682531e-01, -8.46031725e-01],
           ...,
           [-4.96825397e-01, -4.96825397e-01, -5.44444442e-01,  ...,
            -9.73015904e-01, -9.57142830e-01, -8.93650770e-01],
           [-5.76190472e-01, -6.23809516e-01, -6.07936502e-01,  ...,
            -7.66666651e-01, -9.25396800e-01, -9.57142830e-01],
           [-4.17460203e-01, -7.19047606e-01, -6.71428561e-01,  ...,
            -8.46031725e-01, -9.41269815e-01, -9.25396800e-01]],

          [[ 6.44122481e-01,  4.66988832e-01,  1.44927651e-01,  ...,
             9.82286692e-01, -5.79710126e-01, -8.69565189e-01],
           [ 1.14331758e+00,  8.69565308e-01,  4.34782714e-01,  ...,
             1.03059590e+00, -5.47504008e-01, -9.33977425e-01],
           [ 1.35265732e+00,  1.01449287e+00,  4.34782714e-01,  ...,
             7.72946954e-01, -6.92431509e-01, -9.50080454e-01],
           ...,
           [-9.66182351e-02,  1.22934580e-07,  1.22934580e-07,  ...,
            -1.51368749e+00, -1.35265696e+00, -1.09500802e+00],
           [-3.38164121e-01, -3.38164121e-01, -2.41545767e-01,  ...,
            -1.04669881e+00, -1.14331722e+00, -1.17552328e+00],
           [-3.22061062e-01, -4.83091772e-01, -3.22061062e-01,  ...,
            -9.33977425e-01, -1.06280184e+00, -1.07890499e+00]],

          [[-5.98200858e-01, -7.78110921e-01, -9.73013461e-01,  ...,
            -5.83208382e-01, -1.21289361e+00, -1.34782624e+00],
           [-2.38380641e-01, -4.78260815e-01, -5.53223372e-01,  ...,
            -4.33283329e-01, -1.27286363e+00, -1.28785622e+00],
           [-1.63418129e-01, -3.58320802e-01, -4.63268340e-01,  ...,
             1.51424453e-01, -1.42278874e+00, -1.34782624e+00],
           ...,
           [-8.08095932e-01, -7.03148425e-01, -9.88005996e-01,  ...,
            -1.49775124e+00, -1.43778121e+00, -1.40779614e+00],
           [-8.08095932e-01, -4.78260815e-01, -5.53223372e-01,  ...,
            -1.22788620e+00, -1.34782624e+00, -1.40779614e+00],
           [-7.48125911e-01, -8.83058429e-01, -1.04797614e+00,  ...,
            -1.24287868e+00, -1.30284870e+00, -1.24287868e+00]]]]],
       device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0763 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 127, vnnlib ID: 127 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.57729053, -10.22089481,  -8.00115299,  -7.89926720,  -8.22076607,
          -9.08212662,  -9.97586060,  -9.23946381,  -7.82561684,  -9.45760345]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [685]; unstable size 685; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 209, 1, 685] with unstable size 208 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 685] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 685] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [208]; unstable size 208; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 208] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 208] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.39561689,  1.13157225, -1.32989621, -1.52063787, -1.36703992,
         -0.59409899,  0.40751338, -0.57752180,  0.47539330]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.57729053, -10.22089481,  -8.00115299,  -7.89926720,  -8.22076607,
          -9.08212662,  -9.97586060,  -9.23946381,  -7.82561684,  -9.45760345]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.57729101, -10.22089481,  -8.00115299,  -7.89926624,  -8.22076702,
           -9.08212757,  -9.97586155,  -9.23946476,  -7.82561779,  -9.45760345],
         [ -7.57729101, -10.22089481,  -8.00115299,  -7.89926624,  -8.22076702,
           -9.08212757,  -9.97586155,  -9.23946476,  -7.82561779,  -9.45760345]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.24832678,  0.17553520,  0.07364845,  0.39514923,  1.25650978,
           1.41384697]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[1.09047651, 1.07460344, 1.10634947,  ..., 0.94761908,
            0.90000004, 0.88412702],
           [1.16984153, 1.12222254, 1.12222254,  ..., 0.97936511,
            0.93174607, 0.91587305],
           [1.16984153, 1.10634947, 1.10634947,  ..., 0.93174607,
            0.90000004, 0.88412702],
           ...,
           [0.70952386, 0.66190481, 0.67777783,  ..., 0.50317466,
            0.47142863, 0.45555562],
           [0.77301592, 0.72539687, 0.72539687,  ..., 0.58253974,
            0.56666672, 0.53492069],
           [0.82063496, 0.75714290, 0.72539687,  ..., 0.64603180,
            0.59841275, 0.51904768]],

          [[1.01449287, 1.01449287, 1.03059590,  ..., 0.88566834,
            0.83735919, 0.82125610],
           [1.09500813, 1.04669893, 1.04669893,  ..., 0.90177143,
            0.86956531, 0.85346222],
           [1.09500813, 1.03059590, 1.03059590,  ..., 0.86956531,
            0.83735919, 0.80515307],
           ...,
           [0.69243163, 0.64412248, 0.66022551,  ..., 0.46698883,
            0.43478271, 0.41867965],
           [0.74074084, 0.69243163, 0.70853472,  ..., 0.51529801,
            0.49919492, 0.45088577],
           [0.75684386, 0.67632860, 0.69243163,  ..., 0.59581327,
            0.54750413, 0.48309189]],

          [[0.91604215, 0.91604215, 0.93103468,  ..., 0.84107965,
            0.79610211, 0.78110963],
           [0.99100471, 0.94602716, 0.94602716,  ..., 0.85607213,
            0.82608712, 0.81109464],
           [0.99100471, 0.93103468, 0.93103468,  ..., 0.82608712,
            0.79610211, 0.76611710],
           ...,
           [0.72113961, 0.69115460, 0.70614707,  ..., 0.52623707,
            0.49625200, 0.48125952],
           [0.78110963, 0.73613209, 0.75112462,  ..., 0.58620709,
            0.55622208, 0.52623707],
           [0.81109464, 0.73613209, 0.73613209,  ..., 0.64617711,
            0.60119957, 0.54122955]]],


         [[[1.09047651, 1.07460344, 1.10634947,  ..., 0.94761908,
            0.90000004, 0.88412702],
           [1.16984153, 1.12222254, 1.12222254,  ..., 0.97936511,
            0.93174607, 0.91587305],
           [1.16984153, 1.10634947, 1.10634947,  ..., 0.93174607,
            0.90000004, 0.88412702],
           ...,
           [0.70952386, 0.66190481, 0.67777783,  ..., 0.50317466,
            0.47142863, 0.45555562],
           [0.77301592, 0.72539687, 0.72539687,  ..., 0.58253974,
            0.56666672, 0.53492069],
           [0.82063496, 0.75714290, 0.72539687,  ..., 0.64603180,
            0.59841275, 0.51904768]],

          [[1.01449287, 1.01449287, 1.03059590,  ..., 0.88566834,
            0.83735919, 0.82125610],
           [1.09500813, 1.04669893, 1.04669893,  ..., 0.90177143,
            0.86956531, 0.85346222],
           [1.09500813, 1.03059590, 1.03059590,  ..., 0.86956531,
            0.83735919, 0.80515307],
           ...,
           [0.69243163, 0.64412248, 0.66022551,  ..., 0.46698883,
            0.43478271, 0.41867965],
           [0.74074084, 0.69243163, 0.70853472,  ..., 0.51529801,
            0.49919492, 0.45088577],
           [0.75684386, 0.67632860, 0.69243163,  ..., 0.59581327,
            0.54750413, 0.48309189]],

          [[0.91604215, 0.91604215, 0.93103468,  ..., 0.84107965,
            0.79610211, 0.78110963],
           [0.99100471, 0.94602716, 0.94602716,  ..., 0.85607213,
            0.82608712, 0.81109464],
           [0.99100471, 0.93103468, 0.93103468,  ..., 0.82608712,
            0.79610211, 0.76611710],
           ...,
           [0.72113961, 0.69115460, 0.70614707,  ..., 0.52623707,
            0.49625200, 0.48125952],
           [0.78110963, 0.73613209, 0.75112462,  ..., 0.58620709,
            0.55622208, 0.52623707],
           [0.81109464, 0.73613209, 0.73613209,  ..., 0.64617711,
            0.60119957, 0.54122955]]],


         [[[1.09047651, 1.07460344, 1.10634947,  ..., 0.94761908,
            0.90000004, 0.88412702],
           [1.16984153, 1.12222254, 1.12222254,  ..., 0.97936511,
            0.93174607, 0.91587305],
           [1.16984153, 1.10634947, 1.10634947,  ..., 0.93174607,
            0.90000004, 0.88412702],
           ...,
           [0.70952386, 0.66190481, 0.67777783,  ..., 0.50317466,
            0.47142863, 0.45555562],
           [0.77301592, 0.72539687, 0.72539687,  ..., 0.58253974,
            0.56666672, 0.53492069],
           [0.82063496, 0.75714290, 0.72539687,  ..., 0.64603180,
            0.59841275, 0.51904768]],

          [[1.01449287, 1.01449287, 1.03059590,  ..., 0.88566834,
            0.83735919, 0.82125610],
           [1.09500813, 1.04669893, 1.04669893,  ..., 0.90177143,
            0.86956531, 0.85346222],
           [1.09500813, 1.03059590, 1.03059590,  ..., 0.86956531,
            0.83735919, 0.80515307],
           ...,
           [0.69243163, 0.64412248, 0.66022551,  ..., 0.46698883,
            0.43478271, 0.41867965],
           [0.74074084, 0.69243163, 0.70853472,  ..., 0.51529801,
            0.49919492, 0.45088577],
           [0.75684386, 0.67632860, 0.69243163,  ..., 0.59581327,
            0.54750413, 0.48309189]],

          [[0.91604215, 0.91604215, 0.93103468,  ..., 0.84107965,
            0.79610211, 0.78110963],
           [0.99100471, 0.94602716, 0.94602716,  ..., 0.85607213,
            0.82608712, 0.81109464],
           [0.99100471, 0.93103468, 0.93103468,  ..., 0.82608712,
            0.79610211, 0.76611710],
           ...,
           [0.72113961, 0.69115460, 0.70614707,  ..., 0.52623707,
            0.49625200, 0.48125952],
           [0.78110963, 0.73613209, 0.75112462,  ..., 0.58620709,
            0.55622208, 0.52623707],
           [0.81109464, 0.73613209, 0.73613209,  ..., 0.64617711,
            0.60119957, 0.54122955]]],


         [[[1.09047651, 1.07460344, 1.10634947,  ..., 0.94761908,
            0.90000004, 0.88412702],
           [1.16984153, 1.12222254, 1.12222254,  ..., 0.97936511,
            0.93174607, 0.91587305],
           [1.16984153, 1.10634947, 1.10634947,  ..., 0.93174607,
            0.90000004, 0.88412702],
           ...,
           [0.70952386, 0.66190481, 0.67777783,  ..., 0.50317466,
            0.47142863, 0.45555562],
           [0.77301592, 0.72539687, 0.72539687,  ..., 0.58253974,
            0.56666672, 0.53492069],
           [0.82063496, 0.75714290, 0.72539687,  ..., 0.64603180,
            0.59841275, 0.51904768]],

          [[1.01449287, 1.01449287, 1.03059590,  ..., 0.88566834,
            0.83735919, 0.82125610],
           [1.09500813, 1.04669893, 1.04669893,  ..., 0.90177143,
            0.86956531, 0.85346222],
           [1.09500813, 1.03059590, 1.03059590,  ..., 0.86956531,
            0.83735919, 0.80515307],
           ...,
           [0.69243163, 0.64412248, 0.66022551,  ..., 0.46698883,
            0.43478271, 0.41867965],
           [0.74074084, 0.69243163, 0.70853472,  ..., 0.51529801,
            0.49919492, 0.45088577],
           [0.75684386, 0.67632860, 0.69243163,  ..., 0.59581327,
            0.54750413, 0.48309189]],

          [[0.91604215, 0.91604215, 0.93103468,  ..., 0.84107965,
            0.79610211, 0.78110963],
           [0.99100471, 0.94602716, 0.94602716,  ..., 0.85607213,
            0.82608712, 0.81109464],
           [0.99100471, 0.93103468, 0.93103468,  ..., 0.82608712,
            0.79610211, 0.76611710],
           ...,
           [0.72113961, 0.69115460, 0.70614707,  ..., 0.52623707,
            0.49625200, 0.48125952],
           [0.78110963, 0.73613209, 0.75112462,  ..., 0.58620709,
            0.55622208, 0.52623707],
           [0.81109464, 0.73613209, 0.73613209,  ..., 0.64617711,
            0.60119957, 0.54122955]]],


         [[[1.09047651, 1.07460344, 1.10634947,  ..., 0.94761908,
            0.90000004, 0.88412702],
           [1.16984153, 1.12222254, 1.12222254,  ..., 0.97936511,
            0.93174607, 0.91587305],
           [1.16984153, 1.10634947, 1.10634947,  ..., 0.93174607,
            0.90000004, 0.88412702],
           ...,
           [0.70952386, 0.66190481, 0.67777783,  ..., 0.50317466,
            0.47142863, 0.45555562],
           [0.77301592, 0.72539687, 0.72539687,  ..., 0.58253974,
            0.56666672, 0.53492069],
           [0.82063496, 0.75714290, 0.72539687,  ..., 0.64603180,
            0.59841275, 0.51904768]],

          [[1.01449287, 1.01449287, 1.03059590,  ..., 0.88566834,
            0.83735919, 0.82125610],
           [1.09500813, 1.04669893, 1.04669893,  ..., 0.90177143,
            0.86956531, 0.85346222],
           [1.09500813, 1.03059590, 1.03059590,  ..., 0.86956531,
            0.83735919, 0.80515307],
           ...,
           [0.69243163, 0.64412248, 0.66022551,  ..., 0.46698883,
            0.43478271, 0.41867965],
           [0.74074084, 0.69243163, 0.70853472,  ..., 0.51529801,
            0.49919492, 0.45088577],
           [0.75684386, 0.67632860, 0.69243163,  ..., 0.59581327,
            0.54750413, 0.48309189]],

          [[0.91604215, 0.91604215, 0.93103468,  ..., 0.84107965,
            0.79610211, 0.78110963],
           [0.99100471, 0.94602716, 0.94602716,  ..., 0.85607213,
            0.82608712, 0.81109464],
           [0.99100471, 0.93103468, 0.93103468,  ..., 0.82608712,
            0.79610211, 0.76611710],
           ...,
           [0.72113961, 0.69115460, 0.70614707,  ..., 0.52623707,
            0.49625200, 0.48125952],
           [0.78110963, 0.73613209, 0.75112462,  ..., 0.58620709,
            0.55622208, 0.52623707],
           [0.81109464, 0.73613209, 0.73613209,  ..., 0.64617711,
            0.60119957, 0.54122955]]],


         [[[1.09047651, 1.07460344, 1.10634947,  ..., 0.94761908,
            0.90000004, 0.88412702],
           [1.16984153, 1.12222254, 1.12222254,  ..., 0.97936511,
            0.93174607, 0.91587305],
           [1.16984153, 1.10634947, 1.10634947,  ..., 0.93174607,
            0.90000004, 0.88412702],
           ...,
           [0.70952386, 0.66190481, 0.67777783,  ..., 0.50317466,
            0.47142863, 0.45555562],
           [0.77301592, 0.72539687, 0.72539687,  ..., 0.58253974,
            0.56666672, 0.53492069],
           [0.82063496, 0.75714290, 0.72539687,  ..., 0.64603180,
            0.59841275, 0.51904768]],

          [[1.01449287, 1.01449287, 1.03059590,  ..., 0.88566834,
            0.83735919, 0.82125610],
           [1.09500813, 1.04669893, 1.04669893,  ..., 0.90177143,
            0.86956531, 0.85346222],
           [1.09500813, 1.03059590, 1.03059590,  ..., 0.86956531,
            0.83735919, 0.80515307],
           ...,
           [0.69243163, 0.64412248, 0.66022551,  ..., 0.46698883,
            0.43478271, 0.41867965],
           [0.74074084, 0.69243163, 0.70853472,  ..., 0.51529801,
            0.49919492, 0.45088577],
           [0.75684386, 0.67632860, 0.69243163,  ..., 0.59581327,
            0.54750413, 0.48309189]],

          [[0.91604215, 0.91604215, 0.93103468,  ..., 0.84107965,
            0.79610211, 0.78110963],
           [0.99100471, 0.94602716, 0.94602716,  ..., 0.85607213,
            0.82608712, 0.81109464],
           [0.99100471, 0.93103468, 0.93103468,  ..., 0.82608712,
            0.79610211, 0.76611710],
           ...,
           [0.72113961, 0.69115460, 0.70614707,  ..., 0.52623707,
            0.49625200, 0.48125952],
           [0.78110963, 0.73613209, 0.75112462,  ..., 0.58620709,
            0.55622208, 0.52623707],
           [0.81109464, 0.73613209, 0.73613209,  ..., 0.64617711,
            0.60119957, 0.54122955]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0470 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 128, vnnlib ID: 128 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.12257195, -8.18585014, -3.72392344, -4.82489967, -3.27657938,
         -4.91832876, -4.09014797, -4.34730959, -7.98648739, -6.16137838]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [563]; unstable size 563; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 239, 1, 563] with unstable size 238 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 563] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 563] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [238]; unstable size 238; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 238] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 238] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.90272880,  1.91782308, -1.66059613, -0.46604246, -2.21083927,
         -0.55527323, -1.51988935,  1.75675285, -0.03911448]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.12257195, -8.18585014, -3.72392344, -4.82489967, -3.27657938,
         -4.91832876, -4.09014797, -4.34730959, -7.98648739, -6.16137838]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.12257195, -8.18585014, -3.72392321, -4.82489920, -3.27657890,
          -4.91832876, -4.09014797, -4.34730911, -7.98648739, -6.16137838],
         [-5.12257195, -8.18585014, -3.72392321, -4.82489920, -3.27657890,
          -4.91832876, -4.09014797, -4.34730911, -7.98648739, -6.16137838]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.03242397, -0.36622477,  0.73475122, -0.81356907,  0.82818079,
           0.25716114,  2.07123041]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 4.28572372e-02,  5.87302521e-02, -4.76180762e-03,  ...,
            -1.15872920e-01, -4.76180762e-03,  2.01587379e-01],
           [ 2.17460394e-01,  1.53968334e-01,  1.85714364e-01,  ...,
            -1.95237994e-01, -8.41268823e-02,  4.28572372e-02],
           [ 1.11112073e-02,  1.69841349e-01,  5.34920692e-01,  ...,
            -2.90476084e-01, -8.41268823e-02, -1.15872920e-01],
           ...,
           [ 5.34920692e-01, -1.16349196e+00, -1.95714283e+00,  ...,
            -4.49206233e-01, -5.28571427e-01, -3.85714173e-01],
           [ 1.69841349e-01, -1.05238092e+00, -1.63968253e+00,  ...,
            -2.74603069e-01, -6.07936502e-01, -4.80952382e-01],
           [ 7.46032670e-02, -5.28571427e-01, -9.73015904e-01,  ...,
            -2.74603069e-01, -3.85714173e-01, -3.69841158e-01]],

          [[ 1.93236828e-01,  1.61030710e-01,  4.83092964e-02,  ...,
            -1.28824353e-01, -1.61029361e-02,  1.61030710e-01],
           [ 3.05958241e-01,  2.09339887e-01,  2.41546005e-01,  ...,
            -1.28824353e-01, -3.22059989e-02,  6.44123554e-02],
           [ 4.83092964e-02,  1.77133769e-01,  6.11916363e-01,  ...,
            -1.77133530e-01,  3.22062373e-02, -4.83090580e-02],
           ...,
           [ 4.66988832e-01, -1.22383249e+00, -1.95652175e+00,  ...,
            -5.79710126e-01, -7.08534598e-01, -5.79710126e-01],
           [ 1.12721533e-01, -1.11111104e+00, -1.65861523e+00,  ...,
            -4.02576357e-01, -7.89049864e-01, -6.60225391e-01],
           [ 3.22062373e-02, -5.95813155e-01, -1.03059578e+00,  ...,
            -4.34782475e-01, -5.63607037e-01, -4.99194801e-01]],

          [[ 2.86356986e-01,  1.81409463e-01,  9.14544314e-02,  ...,
             1.49940979e-03, -4.34781015e-02,  4.64769229e-02],
           [ 2.86356986e-01,  1.36431947e-01,  2.56371975e-01,  ...,
             3.14844176e-02, -1.34930937e-02,  3.14844176e-02],
           [-2.98350781e-01, -1.93403140e-01,  3.91304523e-01,  ...,
            -1.34930937e-02,  6.14694245e-02, -2.84855980e-02],
           ...,
           [ 1.96401969e-01, -1.12293863e+00, -1.69265378e+00,  ...,
            -9.43028450e-01, -9.13043439e-01, -8.68065953e-01],
           [-1.33433133e-01, -1.06296861e+00, -1.52773619e+00,  ...,
            -7.48125911e-01, -1.01799107e+00, -9.88005996e-01],
           [-1.93403140e-01, -6.43178403e-01, -1.07796109e+00,  ...,
            -7.33133376e-01, -9.28035975e-01, -8.68065953e-01]]],


         [[[ 4.28572372e-02,  5.87302521e-02, -4.76180762e-03,  ...,
            -1.15872920e-01, -4.76180762e-03,  2.01587379e-01],
           [ 2.17460394e-01,  1.53968334e-01,  1.85714364e-01,  ...,
            -1.95237994e-01, -8.41268823e-02,  4.28572372e-02],
           [ 1.11112073e-02,  1.69841349e-01,  5.34920692e-01,  ...,
            -2.90476084e-01, -8.41268823e-02, -1.15872920e-01],
           ...,
           [ 5.34920692e-01, -1.16349196e+00, -1.95714283e+00,  ...,
            -4.49206233e-01, -5.28571427e-01, -3.85714173e-01],
           [ 1.69841349e-01, -1.05238092e+00, -1.63968253e+00,  ...,
            -2.74603069e-01, -6.07936502e-01, -4.80952382e-01],
           [ 7.46032670e-02, -5.28571427e-01, -9.73015904e-01,  ...,
            -2.74603069e-01, -3.85714173e-01, -3.69841158e-01]],

          [[ 1.93236828e-01,  1.61030710e-01,  4.83092964e-02,  ...,
            -1.28824353e-01, -1.61029361e-02,  1.61030710e-01],
           [ 3.05958241e-01,  2.09339887e-01,  2.41546005e-01,  ...,
            -1.28824353e-01, -3.22059989e-02,  6.44123554e-02],
           [ 4.83092964e-02,  1.77133769e-01,  6.11916363e-01,  ...,
            -1.77133530e-01,  3.22062373e-02, -4.83090580e-02],
           ...,
           [ 4.66988832e-01, -1.22383249e+00, -1.95652175e+00,  ...,
            -5.79710126e-01, -7.08534598e-01, -5.79710126e-01],
           [ 1.12721533e-01, -1.11111104e+00, -1.65861523e+00,  ...,
            -4.02576357e-01, -7.89049864e-01, -6.60225391e-01],
           [ 3.22062373e-02, -5.95813155e-01, -1.03059578e+00,  ...,
            -4.34782475e-01, -5.63607037e-01, -4.99194801e-01]],

          [[ 2.86356986e-01,  1.81409463e-01,  9.14544314e-02,  ...,
             1.49940979e-03, -4.34781015e-02,  4.64769229e-02],
           [ 2.86356986e-01,  1.36431947e-01,  2.56371975e-01,  ...,
             3.14844176e-02, -1.34930937e-02,  3.14844176e-02],
           [-2.98350781e-01, -1.93403140e-01,  3.91304523e-01,  ...,
            -1.34930937e-02,  6.14694245e-02, -2.84855980e-02],
           ...,
           [ 1.96401969e-01, -1.12293863e+00, -1.69265378e+00,  ...,
            -9.43028450e-01, -9.13043439e-01, -8.68065953e-01],
           [-1.33433133e-01, -1.06296861e+00, -1.52773619e+00,  ...,
            -7.48125911e-01, -1.01799107e+00, -9.88005996e-01],
           [-1.93403140e-01, -6.43178403e-01, -1.07796109e+00,  ...,
            -7.33133376e-01, -9.28035975e-01, -8.68065953e-01]]],


         [[[ 4.28572372e-02,  5.87302521e-02, -4.76180762e-03,  ...,
            -1.15872920e-01, -4.76180762e-03,  2.01587379e-01],
           [ 2.17460394e-01,  1.53968334e-01,  1.85714364e-01,  ...,
            -1.95237994e-01, -8.41268823e-02,  4.28572372e-02],
           [ 1.11112073e-02,  1.69841349e-01,  5.34920692e-01,  ...,
            -2.90476084e-01, -8.41268823e-02, -1.15872920e-01],
           ...,
           [ 5.34920692e-01, -1.16349196e+00, -1.95714283e+00,  ...,
            -4.49206233e-01, -5.28571427e-01, -3.85714173e-01],
           [ 1.69841349e-01, -1.05238092e+00, -1.63968253e+00,  ...,
            -2.74603069e-01, -6.07936502e-01, -4.80952382e-01],
           [ 7.46032670e-02, -5.28571427e-01, -9.73015904e-01,  ...,
            -2.74603069e-01, -3.85714173e-01, -3.69841158e-01]],

          [[ 1.93236828e-01,  1.61030710e-01,  4.83092964e-02,  ...,
            -1.28824353e-01, -1.61029361e-02,  1.61030710e-01],
           [ 3.05958241e-01,  2.09339887e-01,  2.41546005e-01,  ...,
            -1.28824353e-01, -3.22059989e-02,  6.44123554e-02],
           [ 4.83092964e-02,  1.77133769e-01,  6.11916363e-01,  ...,
            -1.77133530e-01,  3.22062373e-02, -4.83090580e-02],
           ...,
           [ 4.66988832e-01, -1.22383249e+00, -1.95652175e+00,  ...,
            -5.79710126e-01, -7.08534598e-01, -5.79710126e-01],
           [ 1.12721533e-01, -1.11111104e+00, -1.65861523e+00,  ...,
            -4.02576357e-01, -7.89049864e-01, -6.60225391e-01],
           [ 3.22062373e-02, -5.95813155e-01, -1.03059578e+00,  ...,
            -4.34782475e-01, -5.63607037e-01, -4.99194801e-01]],

          [[ 2.86356986e-01,  1.81409463e-01,  9.14544314e-02,  ...,
             1.49940979e-03, -4.34781015e-02,  4.64769229e-02],
           [ 2.86356986e-01,  1.36431947e-01,  2.56371975e-01,  ...,
             3.14844176e-02, -1.34930937e-02,  3.14844176e-02],
           [-2.98350781e-01, -1.93403140e-01,  3.91304523e-01,  ...,
            -1.34930937e-02,  6.14694245e-02, -2.84855980e-02],
           ...,
           [ 1.96401969e-01, -1.12293863e+00, -1.69265378e+00,  ...,
            -9.43028450e-01, -9.13043439e-01, -8.68065953e-01],
           [-1.33433133e-01, -1.06296861e+00, -1.52773619e+00,  ...,
            -7.48125911e-01, -1.01799107e+00, -9.88005996e-01],
           [-1.93403140e-01, -6.43178403e-01, -1.07796109e+00,  ...,
            -7.33133376e-01, -9.28035975e-01, -8.68065953e-01]]],


         ...,


         [[[ 4.28572372e-02,  5.87302521e-02, -4.76180762e-03,  ...,
            -1.15872920e-01, -4.76180762e-03,  2.01587379e-01],
           [ 2.17460394e-01,  1.53968334e-01,  1.85714364e-01,  ...,
            -1.95237994e-01, -8.41268823e-02,  4.28572372e-02],
           [ 1.11112073e-02,  1.69841349e-01,  5.34920692e-01,  ...,
            -2.90476084e-01, -8.41268823e-02, -1.15872920e-01],
           ...,
           [ 5.34920692e-01, -1.16349196e+00, -1.95714283e+00,  ...,
            -4.49206233e-01, -5.28571427e-01, -3.85714173e-01],
           [ 1.69841349e-01, -1.05238092e+00, -1.63968253e+00,  ...,
            -2.74603069e-01, -6.07936502e-01, -4.80952382e-01],
           [ 7.46032670e-02, -5.28571427e-01, -9.73015904e-01,  ...,
            -2.74603069e-01, -3.85714173e-01, -3.69841158e-01]],

          [[ 1.93236828e-01,  1.61030710e-01,  4.83092964e-02,  ...,
            -1.28824353e-01, -1.61029361e-02,  1.61030710e-01],
           [ 3.05958241e-01,  2.09339887e-01,  2.41546005e-01,  ...,
            -1.28824353e-01, -3.22059989e-02,  6.44123554e-02],
           [ 4.83092964e-02,  1.77133769e-01,  6.11916363e-01,  ...,
            -1.77133530e-01,  3.22062373e-02, -4.83090580e-02],
           ...,
           [ 4.66988832e-01, -1.22383249e+00, -1.95652175e+00,  ...,
            -5.79710126e-01, -7.08534598e-01, -5.79710126e-01],
           [ 1.12721533e-01, -1.11111104e+00, -1.65861523e+00,  ...,
            -4.02576357e-01, -7.89049864e-01, -6.60225391e-01],
           [ 3.22062373e-02, -5.95813155e-01, -1.03059578e+00,  ...,
            -4.34782475e-01, -5.63607037e-01, -4.99194801e-01]],

          [[ 2.86356986e-01,  1.81409463e-01,  9.14544314e-02,  ...,
             1.49940979e-03, -4.34781015e-02,  4.64769229e-02],
           [ 2.86356986e-01,  1.36431947e-01,  2.56371975e-01,  ...,
             3.14844176e-02, -1.34930937e-02,  3.14844176e-02],
           [-2.98350781e-01, -1.93403140e-01,  3.91304523e-01,  ...,
            -1.34930937e-02,  6.14694245e-02, -2.84855980e-02],
           ...,
           [ 1.96401969e-01, -1.12293863e+00, -1.69265378e+00,  ...,
            -9.43028450e-01, -9.13043439e-01, -8.68065953e-01],
           [-1.33433133e-01, -1.06296861e+00, -1.52773619e+00,  ...,
            -7.48125911e-01, -1.01799107e+00, -9.88005996e-01],
           [-1.93403140e-01, -6.43178403e-01, -1.07796109e+00,  ...,
            -7.33133376e-01, -9.28035975e-01, -8.68065953e-01]]],


         [[[ 4.28572372e-02,  5.87302521e-02, -4.76180762e-03,  ...,
            -1.15872920e-01, -4.76180762e-03,  2.01587379e-01],
           [ 2.17460394e-01,  1.53968334e-01,  1.85714364e-01,  ...,
            -1.95237994e-01, -8.41268823e-02,  4.28572372e-02],
           [ 1.11112073e-02,  1.69841349e-01,  5.34920692e-01,  ...,
            -2.90476084e-01, -8.41268823e-02, -1.15872920e-01],
           ...,
           [ 5.34920692e-01, -1.16349196e+00, -1.95714283e+00,  ...,
            -4.49206233e-01, -5.28571427e-01, -3.85714173e-01],
           [ 1.69841349e-01, -1.05238092e+00, -1.63968253e+00,  ...,
            -2.74603069e-01, -6.07936502e-01, -4.80952382e-01],
           [ 7.46032670e-02, -5.28571427e-01, -9.73015904e-01,  ...,
            -2.74603069e-01, -3.85714173e-01, -3.69841158e-01]],

          [[ 1.93236828e-01,  1.61030710e-01,  4.83092964e-02,  ...,
            -1.28824353e-01, -1.61029361e-02,  1.61030710e-01],
           [ 3.05958241e-01,  2.09339887e-01,  2.41546005e-01,  ...,
            -1.28824353e-01, -3.22059989e-02,  6.44123554e-02],
           [ 4.83092964e-02,  1.77133769e-01,  6.11916363e-01,  ...,
            -1.77133530e-01,  3.22062373e-02, -4.83090580e-02],
           ...,
           [ 4.66988832e-01, -1.22383249e+00, -1.95652175e+00,  ...,
            -5.79710126e-01, -7.08534598e-01, -5.79710126e-01],
           [ 1.12721533e-01, -1.11111104e+00, -1.65861523e+00,  ...,
            -4.02576357e-01, -7.89049864e-01, -6.60225391e-01],
           [ 3.22062373e-02, -5.95813155e-01, -1.03059578e+00,  ...,
            -4.34782475e-01, -5.63607037e-01, -4.99194801e-01]],

          [[ 2.86356986e-01,  1.81409463e-01,  9.14544314e-02,  ...,
             1.49940979e-03, -4.34781015e-02,  4.64769229e-02],
           [ 2.86356986e-01,  1.36431947e-01,  2.56371975e-01,  ...,
             3.14844176e-02, -1.34930937e-02,  3.14844176e-02],
           [-2.98350781e-01, -1.93403140e-01,  3.91304523e-01,  ...,
            -1.34930937e-02,  6.14694245e-02, -2.84855980e-02],
           ...,
           [ 1.96401969e-01, -1.12293863e+00, -1.69265378e+00,  ...,
            -9.43028450e-01, -9.13043439e-01, -8.68065953e-01],
           [-1.33433133e-01, -1.06296861e+00, -1.52773619e+00,  ...,
            -7.48125911e-01, -1.01799107e+00, -9.88005996e-01],
           [-1.93403140e-01, -6.43178403e-01, -1.07796109e+00,  ...,
            -7.33133376e-01, -9.28035975e-01, -8.68065953e-01]]],


         [[[ 4.28572372e-02,  5.87302521e-02, -4.76180762e-03,  ...,
            -1.15872920e-01, -4.76180762e-03,  2.01587379e-01],
           [ 2.17460394e-01,  1.53968334e-01,  1.85714364e-01,  ...,
            -1.95237994e-01, -8.41268823e-02,  4.28572372e-02],
           [ 1.11112073e-02,  1.69841349e-01,  5.34920692e-01,  ...,
            -2.90476084e-01, -8.41268823e-02, -1.15872920e-01],
           ...,
           [ 5.34920692e-01, -1.16349196e+00, -1.95714283e+00,  ...,
            -4.49206233e-01, -5.28571427e-01, -3.85714173e-01],
           [ 1.69841349e-01, -1.05238092e+00, -1.63968253e+00,  ...,
            -2.74603069e-01, -6.07936502e-01, -4.80952382e-01],
           [ 7.46032670e-02, -5.28571427e-01, -9.73015904e-01,  ...,
            -2.74603069e-01, -3.85714173e-01, -3.69841158e-01]],

          [[ 1.93236828e-01,  1.61030710e-01,  4.83092964e-02,  ...,
            -1.28824353e-01, -1.61029361e-02,  1.61030710e-01],
           [ 3.05958241e-01,  2.09339887e-01,  2.41546005e-01,  ...,
            -1.28824353e-01, -3.22059989e-02,  6.44123554e-02],
           [ 4.83092964e-02,  1.77133769e-01,  6.11916363e-01,  ...,
            -1.77133530e-01,  3.22062373e-02, -4.83090580e-02],
           ...,
           [ 4.66988832e-01, -1.22383249e+00, -1.95652175e+00,  ...,
            -5.79710126e-01, -7.08534598e-01, -5.79710126e-01],
           [ 1.12721533e-01, -1.11111104e+00, -1.65861523e+00,  ...,
            -4.02576357e-01, -7.89049864e-01, -6.60225391e-01],
           [ 3.22062373e-02, -5.95813155e-01, -1.03059578e+00,  ...,
            -4.34782475e-01, -5.63607037e-01, -4.99194801e-01]],

          [[ 2.86356986e-01,  1.81409463e-01,  9.14544314e-02,  ...,
             1.49940979e-03, -4.34781015e-02,  4.64769229e-02],
           [ 2.86356986e-01,  1.36431947e-01,  2.56371975e-01,  ...,
             3.14844176e-02, -1.34930937e-02,  3.14844176e-02],
           [-2.98350781e-01, -1.93403140e-01,  3.91304523e-01,  ...,
            -1.34930937e-02,  6.14694245e-02, -2.84855980e-02],
           ...,
           [ 1.96401969e-01, -1.12293863e+00, -1.69265378e+00,  ...,
            -9.43028450e-01, -9.13043439e-01, -8.68065953e-01],
           [-1.33433133e-01, -1.06296861e+00, -1.52773619e+00,  ...,
            -7.48125911e-01, -1.01799107e+00, -9.88005996e-01],
           [-1.93403140e-01, -6.43178403e-01, -1.07796109e+00,  ...,
            -7.33133376e-01, -9.28035975e-01, -8.68065953e-01]]]]],
       device='cuda:0') torch.Size([1, 7, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0716 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 129, vnnlib ID: 129 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.31356716, -13.91007519,  -9.13539219,  -8.59541893,  -8.22070026,
          -8.21194839, -10.18828583, -10.88986969, -10.20756531, -12.20699596]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [584]; unstable size 584; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 263, 1, 584] with unstable size 262 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 584] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 584] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [262]; unstable size 262; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 262] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 262] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.54147208,  3.51588058, -0.48492050, -0.11444473, -1.27845144,
          0.64233291,  1.06292784,  0.06253448,  1.78522754]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.31356716, -13.91007519,  -9.13539219,  -8.59541893,  -8.22070026,
          -8.21194839, -10.18828583, -10.88986969, -10.20756531, -12.20699596]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.32136536, -13.92663002,  -9.13717842,  -8.60724545,  -8.21953201,
           -8.22270298, -10.20281887, -10.89065933, -10.21816635, -12.22472954],
         [ -9.32136536, -13.92663002,  -9.13717842,  -8.60724545,  -8.21953201,
           -8.22270298, -10.20281887, -10.89065933, -10.21816635, -12.22472954]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.09866238,  0.91447544,  0.38454247, -0.00317097]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0066 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0452 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 130, vnnlib ID: 130 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.37966061, -10.86174870,  -6.27118492,  -7.18504333,  -4.88041210,
          -7.02919436,  -7.02008009,  -5.68175220, -12.22475624,  -9.74924088]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [468]; unstable size 468; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 198, 1, 468] with unstable size 197 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 468] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 468] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [197]; unstable size 197; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 197] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 197] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.92446542,  1.83843064, -1.80397654, -0.25452477, -3.28706455,
         -1.12619352, -2.72712851,  3.37554073,  1.23327684]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.37966061, -10.86174870,  -6.27118492,  -7.18504333,  -4.88041210,
          -7.02919436,  -7.02008009,  -5.68175220, -12.22475624,  -9.74924088]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.37965965, -10.86174679,  -6.27118492,  -7.18504381,  -4.88041258,
           -7.02919531,  -7.02007914,  -5.68175268, -12.22475624,  -9.74924088],
         [ -9.37965965, -10.86174679,  -6.27118492,  -7.18504381,  -4.88041258,
           -7.02919531,  -7.02007914,  -5.68175268, -12.22475624,  -9.74924088]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.75801039,  0.15584850, -2.14878273, -0.00911617, -1.34744263]]],
       device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]],


         [[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]],


         [[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]],


         [[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]],


         [[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0486 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 131, vnnlib ID: 131 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.35881138, -13.11242390,  -9.13916874, -10.32992744,  -9.78460979,
         -10.37751198, -11.98755741, -12.49197388,  -5.29605007, -12.74240780]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [574]; unstable size 574; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 193, 1, 574] with unstable size 192 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 574] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 574] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [192]; unstable size 192; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 192] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 192] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.78351939, 6.23856306, 2.09941578, 3.41462398, 2.79624486, 3.32998943,
         5.10516262, 5.41959763, 6.04746437]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0638 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 132, vnnlib ID: 132 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.14653015,  -8.83935356, -17.06118393, -16.39709473, -15.91677952,
         -18.22977066, -16.70629501, -16.62640762, -11.32539654,  -9.82044125]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [660]; unstable size 660; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 143, 1, 660] with unstable size 142 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 660] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 660] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [142]; unstable size 142; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 142] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 142] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.91259718,  6.46374798,  5.83736563,  5.29915905,  7.56130886,
          6.20057392,  5.96402264,  1.06313705, -0.07201385]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.14653015,  -8.83935356, -17.06118393, -16.39709473, -15.91677952,
         -18.22977066, -16.70629501, -16.62640762, -11.32539654,  -9.82044125]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.83it/s]100%|██████████| 1/1 [00:00<00:00,  8.83it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.66808319,  -8.80762291, -16.54941559, -15.81319427, -15.26967907,
          -17.61644936, -16.17386246, -15.95940590, -11.03059864,  -9.22308636]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.41546345]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1158 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 39.909873962402344
alpha/beta optimization time: 1.1569983959197998
initial alpha-crown bounds: tensor([[ 0.98155403,  6.54999352,  5.92336082,  5.37160492,  7.64936495,
          6.28047085,  6.04217720,  1.13449478, -0.02314675]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.023146748542785645
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.67968559265137
Verifying property 0 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.9815540313720703.

Properties batch 1, size 1
Remaining timeout: 198.5177767276764
Verifying property 1 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.549993515014648.

Properties batch 2, size 1
Remaining timeout: 198.39998650550842
Verifying property 2 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.923360824584961.

Properties batch 3, size 1
Remaining timeout: 198.28017115592957
Verifying property 3 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.371604919433594.

Properties batch 4, size 1
Remaining timeout: 198.16490054130554
Verifying property 4 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.649364948272705.

Properties batch 5, size 1
Remaining timeout: 198.06019496917725
Verifying property 5 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.280470848083496.

Properties batch 6, size 1
Remaining timeout: 197.95588207244873
Verifying property 6 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.042177200317383.

Properties batch 7, size 1
Remaining timeout: 197.85111927986145
Verifying property 7 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.1344947814941406.

Properties batch 8, size 1
Remaining timeout: 197.74643445014954
Verifying property 8 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.02314675]], device='cuda:0') need to verify.
Model prediction is: tensor([-11.14653015,  -8.83935356, -17.06118393, -16.39709473, -15.91677952,
        -18.22977066, -16.70629501, -16.62640762, -11.32539654,  -9.82044125],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.02314675]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 660
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 139
Node /15 input 0: size torch.Size([100]) unstable 12
-----------------
# of unstable neurons: 811
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 32] 
split level 1: [/input-12, 37] 
split level 2: [/input-8, 1436] 
split level 3: [/input-12, 25] 
split level 4: [/input-8, 987] 
split level 5: [/input-12, 90] 
split level 6: [/input-12, 11] 
split level 7: [/input-8, 690] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 5.316734313964844e-05
Time: prepare 0.0031    bound 0.0044    transfer 0.0014    finalize 0.0017    func 0.0106    
Accumulated time: func 0.0106    prepare 0.0035    bound 0.0044    transfer 0.0014    finalize 0.0017    
all_split False
Length of domains: 0
Time: pickout 0.0004    decision 0.0240    set_bounds 0.0180    solve 0.0107    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0240    set_bounds 0.0180    solve 0.0107    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06427907943725586

Result: safe in 2.4847 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 133, vnnlib ID: 133 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.25358391, -24.01944351, -13.62016106, -15.25064659, -19.34745598,
         -15.90201569, -19.20198250, -17.42230415, -21.89736557, -21.49999237]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [554]; unstable size 554; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 98, 1, 554] with unstable size 97 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 3, 1, 554] with unstable size 2 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 554] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [97]; unstable size 97; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 3, 1, 97] with unstable size 2 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 97] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [2]; unstable size 2; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 2] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.17918015, 9.69885063, 1.01258552, 5.11244965, 1.56947911, 4.91068316,
         3.15387392, 7.60085869, 7.21997833]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0771 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 134, vnnlib ID: 134 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.00686455, -14.29141140, -14.37695026, -15.86271286, -15.28532314,
         -17.60468292, -14.91024494, -17.65866089, -10.37097645, -14.77221203]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [752]; unstable size 752; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 224, 1, 752] with unstable size 223 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 752] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 752] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [223]; unstable size 223; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 223] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 223] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.77094507,  1.88772738,  3.21973848,  2.86656475,  4.79594183,
          2.18563199,  4.89809704, -1.79894876,  2.22324061]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.00686455, -14.29141140, -14.37695026, -15.86271286, -15.28532314,
         -17.60468292, -14.91024494, -17.65866089, -10.37097645, -14.77221203]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.00686455, -14.29141140, -14.37695026, -15.86271286, -15.28532314,
          -17.60468292, -14.91024494, -17.65866089, -10.37097645, -14.77221203]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.63588810]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.15396857,  1.01111114,  1.01111114,  ...,  1.02698421,
             1.04285717,  1.10634947],
           [ 1.02698421,  0.94761908,  0.94761908,  ...,  1.12222254,
             1.12222254,  1.16984153],
           [ 0.99523818,  0.91587305,  0.86825401,  ...,  1.12222254,
             1.13809550,  1.16984153],
           ...,
           [-0.14761895, -0.41746020, -0.43333322,  ..., -0.36984116,
            -0.33809513, -0.41746020],
           [-0.30634910, -0.56031746, -0.57619047,  ..., -0.68730158,
            -0.54444444, -0.36984116],
           [-0.22698402, -0.33809513, -0.40158719,  ..., -0.59206349,
            -0.32222211, -0.14761895]],

          [[ 1.20772982,  1.06280196,  1.06280196,  ...,  1.07890511,
             1.09500813,  1.15942061],
           [ 1.07890511,  0.99838978,  0.99838978,  ...,  1.17552364,
             1.17552364,  1.22383285],
           [ 1.04669893,  0.96618366,  0.91787446,  ...,  1.17552364,
             1.19162667,  1.22383285],
           ...,
           [-0.11272129, -0.38647330, -0.40257636,  ..., -0.33816412,
            -0.30595800, -0.38647330],
           [-0.27375188, -0.53140092, -0.54750401,  ..., -0.66022539,
            -0.51529789, -0.33816412],
           [-0.19323659, -0.30595800, -0.37037024,  ..., -0.56360704,
            -0.28985494, -0.11272129]],

          [[ 1.26086998,  1.12593722,  1.12593722,  ...,  1.14092970,
             1.15592217,  1.21589243],
           [ 1.14092970,  1.06596720,  1.06596720,  ...,  1.23088503,
             1.23088503,  1.27586246],
           [ 1.11094475,  1.03598225,  0.99100471,  ...,  1.23088503,
             1.24587750,  1.27586246],
           ...,
           [ 0.03148442, -0.22338814, -0.23838064,  ..., -0.17841063,
            -0.14842562, -0.22338814],
           [-0.11844061, -0.35832080, -0.37331331,  ..., -0.47826082,
            -0.34332830, -0.17841063],
           [-0.04347810, -0.14842562, -0.20839565,  ..., -0.38830581,
            -0.13343313,  0.03148442]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0699 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 135, vnnlib ID: 135 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.44892406,  -4.04770756, -11.04793358,  -9.86121178,  -9.30945015,
         -10.61656761, -11.13577747,  -9.78641891,  -8.20079136,  -4.34282255]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [511]; unstable size 511; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 204, 1, 511] with unstable size 203 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 511] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 511] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [203]; unstable size 203; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 203] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 203] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.79137230,  4.81029129,  3.58750868,  3.09708118,  4.12102699,
          5.00578547,  3.13694286,  2.81165600, -0.60362840]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.44892406,  -4.04770756, -11.04793358,  -9.86121178,  -9.30945015,
         -10.61656761, -11.13577747,  -9.78641891,  -8.20079136,  -4.34282255]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-8.17292595, -3.44921255, -9.58248615, -8.45668793, -7.94491386,
          -9.12796783, -9.80561256, -8.33679199, -7.18043041, -3.17307949]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.27613306]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0059 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0709 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 136, vnnlib ID: 136 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.25000286, -9.54972458, -6.18170929, -5.75074911, -6.05999041,
         -5.86923456, -7.27043962, -7.67426729, -6.16280842, -8.88309860]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [683]; unstable size 683; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 150, 1, 683] with unstable size 149 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 683] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 683] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [149]; unstable size 149; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 149] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 149] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.00514317, 1.08236074, 0.27113527, 0.77234662, 0.24157727, 1.78406572,
         1.89451563, 0.67536879, 3.36466622]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0722 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 137, vnnlib ID: 137 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.10846710, -8.76792812, -2.56949711, -3.15299773, -2.80712223,
         -3.16891909, -2.61646676, -4.73773241, -8.38235092, -7.32381153]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [508]; unstable size 508; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 298, 1, 508] with unstable size 297 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 508] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 508] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [297]; unstable size 297; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 297] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 297] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.63653517,  3.73463702, -1.26144516, -0.64267182, -1.08236969,
         -0.74575424,  0.71406746,  3.06178951,  2.80589008]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.10846710, -8.76792812, -2.56949711, -3.15299773, -2.80712223,
         -3.16891909, -2.61646676, -4.73773241, -8.38235092, -7.32381153]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.10846806, -8.76792812, -2.56949711, -3.15299821, -2.80712175,
          -3.16891956, -2.61646700, -4.73773289, -8.38235092, -7.32381201],
         [-6.10846806, -8.76792812, -2.56949711, -3.15299821, -2.80712175,
          -3.16891956, -2.61646700, -4.73773289, -8.38235092, -7.32381201]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.04696989,  0.53653121,  0.19065475,  0.55245256]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.24285710, -1.30634916, -1.09999990,  ...,  0.05873025,
            -0.46507925, -0.57619047],
           [-1.11587298, -1.16349196, -1.09999990,  ..., -0.24285704,
            -0.65555555, -0.79841268],
           [-1.19523799, -1.13174593, -0.84603173,  ..., -0.14761895,
            -0.84603173, -0.75079364],
           ...,
           [ 1.15396857, -0.57619047, -1.44920623,  ..., -0.70317459,
            -0.68730158, -0.48095238],
           [ 1.63015902,  0.58253974, -0.02063482,  ..., -0.86190474,
            -0.79841268, -0.43333322],
           [ 1.67777801,  1.39206374,  1.16984153,  ..., -1.03650784,
            -1.08412695, -0.89365077]],

          [[-1.11111104, -1.20772946, -1.01449275,  ...,  0.08051541,
            -0.53140092, -0.62801927],
           [-1.01449275, -1.06280184, -0.98228657,  ..., -0.22544271,
            -0.64412236, -0.77294683],
           [-1.11111104, -1.01449275, -0.72463763,  ..., -0.11272129,
            -0.77294683, -0.72463763],
           ...,
           [ 0.99838978, -0.66022539, -1.30434775,  ..., -0.78904986,
            -0.85346210, -0.66022539],
           [ 1.52979100,  0.43478271, -0.06441211,  ..., -0.80515295,
            -0.77294683, -0.57971013],
           [ 1.64251232,  1.27214205,  0.95008057,  ..., -0.93397743,
            -1.04669881, -0.96618354]],

          [[-0.55322337, -0.70314842, -0.55322337,  ...,  0.60119957,
            -0.17841063, -0.23838064],
           [-0.52323836, -0.55322337, -0.46326834,  ...,  0.33133450,
            -0.17841063, -0.35832080],
           [-0.64317840, -0.58320838, -0.22338814,  ...,  0.40629703,
            -0.20839565, -0.28335828],
           ...,
           [ 1.08095968, -0.31334329, -0.65817088,  ..., -0.35832080,
            -0.56821585, -0.38830581],
           [ 1.53073502,  0.60119957,  0.40629703,  ..., -0.26836565,
            -0.35832080, -0.22338814],
           [ 1.66566753,  1.26086998,  1.03598225,  ..., -0.31334329,
            -0.55322337, -0.52323836]]],


         [[[-1.24285710, -1.30634916, -1.09999990,  ...,  0.05873025,
            -0.46507925, -0.57619047],
           [-1.11587298, -1.16349196, -1.09999990,  ..., -0.24285704,
            -0.65555555, -0.79841268],
           [-1.19523799, -1.13174593, -0.84603173,  ..., -0.14761895,
            -0.84603173, -0.75079364],
           ...,
           [ 1.15396857, -0.57619047, -1.44920623,  ..., -0.70317459,
            -0.68730158, -0.48095238],
           [ 1.63015902,  0.58253974, -0.02063482,  ..., -0.86190474,
            -0.79841268, -0.43333322],
           [ 1.67777801,  1.39206374,  1.16984153,  ..., -1.03650784,
            -1.08412695, -0.89365077]],

          [[-1.11111104, -1.20772946, -1.01449275,  ...,  0.08051541,
            -0.53140092, -0.62801927],
           [-1.01449275, -1.06280184, -0.98228657,  ..., -0.22544271,
            -0.64412236, -0.77294683],
           [-1.11111104, -1.01449275, -0.72463763,  ..., -0.11272129,
            -0.77294683, -0.72463763],
           ...,
           [ 0.99838978, -0.66022539, -1.30434775,  ..., -0.78904986,
            -0.85346210, -0.66022539],
           [ 1.52979100,  0.43478271, -0.06441211,  ..., -0.80515295,
            -0.77294683, -0.57971013],
           [ 1.64251232,  1.27214205,  0.95008057,  ..., -0.93397743,
            -1.04669881, -0.96618354]],

          [[-0.55322337, -0.70314842, -0.55322337,  ...,  0.60119957,
            -0.17841063, -0.23838064],
           [-0.52323836, -0.55322337, -0.46326834,  ...,  0.33133450,
            -0.17841063, -0.35832080],
           [-0.64317840, -0.58320838, -0.22338814,  ...,  0.40629703,
            -0.20839565, -0.28335828],
           ...,
           [ 1.08095968, -0.31334329, -0.65817088,  ..., -0.35832080,
            -0.56821585, -0.38830581],
           [ 1.53073502,  0.60119957,  0.40629703,  ..., -0.26836565,
            -0.35832080, -0.22338814],
           [ 1.66566753,  1.26086998,  1.03598225,  ..., -0.31334329,
            -0.55322337, -0.52323836]]],


         [[[-1.24285710, -1.30634916, -1.09999990,  ...,  0.05873025,
            -0.46507925, -0.57619047],
           [-1.11587298, -1.16349196, -1.09999990,  ..., -0.24285704,
            -0.65555555, -0.79841268],
           [-1.19523799, -1.13174593, -0.84603173,  ..., -0.14761895,
            -0.84603173, -0.75079364],
           ...,
           [ 1.15396857, -0.57619047, -1.44920623,  ..., -0.70317459,
            -0.68730158, -0.48095238],
           [ 1.63015902,  0.58253974, -0.02063482,  ..., -0.86190474,
            -0.79841268, -0.43333322],
           [ 1.67777801,  1.39206374,  1.16984153,  ..., -1.03650784,
            -1.08412695, -0.89365077]],

          [[-1.11111104, -1.20772946, -1.01449275,  ...,  0.08051541,
            -0.53140092, -0.62801927],
           [-1.01449275, -1.06280184, -0.98228657,  ..., -0.22544271,
            -0.64412236, -0.77294683],
           [-1.11111104, -1.01449275, -0.72463763,  ..., -0.11272129,
            -0.77294683, -0.72463763],
           ...,
           [ 0.99838978, -0.66022539, -1.30434775,  ..., -0.78904986,
            -0.85346210, -0.66022539],
           [ 1.52979100,  0.43478271, -0.06441211,  ..., -0.80515295,
            -0.77294683, -0.57971013],
           [ 1.64251232,  1.27214205,  0.95008057,  ..., -0.93397743,
            -1.04669881, -0.96618354]],

          [[-0.55322337, -0.70314842, -0.55322337,  ...,  0.60119957,
            -0.17841063, -0.23838064],
           [-0.52323836, -0.55322337, -0.46326834,  ...,  0.33133450,
            -0.17841063, -0.35832080],
           [-0.64317840, -0.58320838, -0.22338814,  ...,  0.40629703,
            -0.20839565, -0.28335828],
           ...,
           [ 1.08095968, -0.31334329, -0.65817088,  ..., -0.35832080,
            -0.56821585, -0.38830581],
           [ 1.53073502,  0.60119957,  0.40629703,  ..., -0.26836565,
            -0.35832080, -0.22338814],
           [ 1.66566753,  1.26086998,  1.03598225,  ..., -0.31334329,
            -0.55322337, -0.52323836]]],


         [[[-1.24285710, -1.30634916, -1.09999990,  ...,  0.05873025,
            -0.46507925, -0.57619047],
           [-1.11587298, -1.16349196, -1.09999990,  ..., -0.24285704,
            -0.65555555, -0.79841268],
           [-1.19523799, -1.13174593, -0.84603173,  ..., -0.14761895,
            -0.84603173, -0.75079364],
           ...,
           [ 1.15396857, -0.57619047, -1.44920623,  ..., -0.70317459,
            -0.68730158, -0.48095238],
           [ 1.63015902,  0.58253974, -0.02063482,  ..., -0.86190474,
            -0.79841268, -0.43333322],
           [ 1.67777801,  1.39206374,  1.16984153,  ..., -1.03650784,
            -1.08412695, -0.89365077]],

          [[-1.11111104, -1.20772946, -1.01449275,  ...,  0.08051541,
            -0.53140092, -0.62801927],
           [-1.01449275, -1.06280184, -0.98228657,  ..., -0.22544271,
            -0.64412236, -0.77294683],
           [-1.11111104, -1.01449275, -0.72463763,  ..., -0.11272129,
            -0.77294683, -0.72463763],
           ...,
           [ 0.99838978, -0.66022539, -1.30434775,  ..., -0.78904986,
            -0.85346210, -0.66022539],
           [ 1.52979100,  0.43478271, -0.06441211,  ..., -0.80515295,
            -0.77294683, -0.57971013],
           [ 1.64251232,  1.27214205,  0.95008057,  ..., -0.93397743,
            -1.04669881, -0.96618354]],

          [[-0.55322337, -0.70314842, -0.55322337,  ...,  0.60119957,
            -0.17841063, -0.23838064],
           [-0.52323836, -0.55322337, -0.46326834,  ...,  0.33133450,
            -0.17841063, -0.35832080],
           [-0.64317840, -0.58320838, -0.22338814,  ...,  0.40629703,
            -0.20839565, -0.28335828],
           ...,
           [ 1.08095968, -0.31334329, -0.65817088,  ..., -0.35832080,
            -0.56821585, -0.38830581],
           [ 1.53073502,  0.60119957,  0.40629703,  ..., -0.26836565,
            -0.35832080, -0.22338814],
           [ 1.66566753,  1.26086998,  1.03598225,  ..., -0.31334329,
            -0.55322337, -0.52323836]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0616 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 138, vnnlib ID: 138 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.98990536, -11.53243732,  -9.55218792,  -9.34306908,  -9.59223843,
         -10.21041489,  -9.89879131, -10.73451996, -10.49936199,  -8.82808018]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [578]; unstable size 578; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 189, 1, 578] with unstable size 188 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 578] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 578] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [188]; unstable size 188; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 188] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 188] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 9.28026736e-01, -4.45045948e-01, -7.57262230e-01, -6.84045315e-01,
         -8.52108002e-04, -3.69360447e-01,  3.41860056e-01,  4.21400309e-01,
         -1.54338717e+00]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.98990536, -11.53243732,  -9.55218792,  -9.34306908,  -9.59223843,
         -10.21041489,  -9.89879131, -10.73451996, -10.49936199,  -8.82808018]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.98990536, -11.53243637,  -9.55218792,  -9.34306812,  -9.59223938,
          -10.21041393,  -9.89879227, -10.73451996, -10.49936199,  -8.82808018],
         [ -8.98990536, -11.53243637,  -9.55218792,  -9.34306812,  -9.59223938,
          -10.21041393,  -9.89879227, -10.73451996, -10.49936199,  -8.82808018]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.56228256,  0.35316277,  0.60233402,  1.22050858,  0.90888691,
          -0.16182518]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.81428570, -0.87777776, -0.94126981,  ...,  0.16984135,
             0.72539687,  1.91587329],
           [-0.94126981, -1.06825387, -1.11587298,  ...,  0.10634929,
             0.67777783,  1.88412726],
           [-1.03650784, -1.11587298, -1.08412695,  ...,  0.09047628,
             0.66190481,  1.90000021],
           ...,
           [ 1.21746063,  1.29682565,  1.40793681,  ...,  0.70952386,
             1.15396857,  1.96349227],
           [ 1.93174624,  1.86825418,  1.86825418,  ...,  1.83650815,
             1.93174624,  2.03492069],
           [ 2.04285717,  2.04285717,  2.04285717,  ...,  2.04285717,
             2.04285717,  2.04285717]],

          [[-0.38647330, -0.41867942, -0.43478248,  ...,  0.59581327,
             0.96618366,  2.01288271],
           [-0.45088565, -0.49919480, -0.51529789,  ...,  0.54750413,
             0.93397754,  1.99677968],
           [-0.49919480, -0.53140092, -0.54750401,  ...,  0.51529801,
             0.91787446,  2.01288271],
           ...,
           [ 1.30434811,  1.38486338,  1.49758482,  ...,  0.98228669,
             1.28824508,  2.02898574],
           [ 1.99677968,  1.93236744,  1.93236744,  ...,  1.98067665,
             1.99677968,  2.07729483],
           [ 2.10950065,  2.10950065,  2.10950065,  ...,  2.10950065,
             2.10950065,  2.10950065]],

          [[ 0.25637197,  0.27136448,  0.21139447,  ...,  1.05097473,
             1.21589243,  2.02548766],
           [ 0.18140946,  0.24137947,  0.16641696,  ...,  0.99100471,
             1.17091501,  2.01049519],
           [ 0.13643195,  0.21139447,  0.06146942,  ...,  0.97601217,
             1.17091501,  2.01049519],
           ...,
           [ 1.45577252,  1.53073502,  1.65067506,  ...,  1.24587750,
             1.42578757,  2.04048014],
           [ 2.02548766,  1.98051023,  1.98051023,  ...,  2.01049519,
             2.01049519,  2.08545780],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  2.10045004,
             2.09295392,  2.09295392]]],


         [[[-0.81428570, -0.87777776, -0.94126981,  ...,  0.16984135,
             0.72539687,  1.91587329],
           [-0.94126981, -1.06825387, -1.11587298,  ...,  0.10634929,
             0.67777783,  1.88412726],
           [-1.03650784, -1.11587298, -1.08412695,  ...,  0.09047628,
             0.66190481,  1.90000021],
           ...,
           [ 1.21746063,  1.29682565,  1.40793681,  ...,  0.70952386,
             1.15396857,  1.96349227],
           [ 1.93174624,  1.86825418,  1.86825418,  ...,  1.83650815,
             1.93174624,  2.03492069],
           [ 2.04285717,  2.04285717,  2.04285717,  ...,  2.04285717,
             2.04285717,  2.04285717]],

          [[-0.38647330, -0.41867942, -0.43478248,  ...,  0.59581327,
             0.96618366,  2.01288271],
           [-0.45088565, -0.49919480, -0.51529789,  ...,  0.54750413,
             0.93397754,  1.99677968],
           [-0.49919480, -0.53140092, -0.54750401,  ...,  0.51529801,
             0.91787446,  2.01288271],
           ...,
           [ 1.30434811,  1.38486338,  1.49758482,  ...,  0.98228669,
             1.28824508,  2.02898574],
           [ 1.99677968,  1.93236744,  1.93236744,  ...,  1.98067665,
             1.99677968,  2.07729483],
           [ 2.10950065,  2.10950065,  2.10950065,  ...,  2.10950065,
             2.10950065,  2.10950065]],

          [[ 0.25637197,  0.27136448,  0.21139447,  ...,  1.05097473,
             1.21589243,  2.02548766],
           [ 0.18140946,  0.24137947,  0.16641696,  ...,  0.99100471,
             1.17091501,  2.01049519],
           [ 0.13643195,  0.21139447,  0.06146942,  ...,  0.97601217,
             1.17091501,  2.01049519],
           ...,
           [ 1.45577252,  1.53073502,  1.65067506,  ...,  1.24587750,
             1.42578757,  2.04048014],
           [ 2.02548766,  1.98051023,  1.98051023,  ...,  2.01049519,
             2.01049519,  2.08545780],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  2.10045004,
             2.09295392,  2.09295392]]],


         [[[-0.81428570, -0.87777776, -0.94126981,  ...,  0.16984135,
             0.72539687,  1.91587329],
           [-0.94126981, -1.06825387, -1.11587298,  ...,  0.10634929,
             0.67777783,  1.88412726],
           [-1.03650784, -1.11587298, -1.08412695,  ...,  0.09047628,
             0.66190481,  1.90000021],
           ...,
           [ 1.21746063,  1.29682565,  1.40793681,  ...,  0.70952386,
             1.15396857,  1.96349227],
           [ 1.93174624,  1.86825418,  1.86825418,  ...,  1.83650815,
             1.93174624,  2.03492069],
           [ 2.04285717,  2.04285717,  2.04285717,  ...,  2.04285717,
             2.04285717,  2.04285717]],

          [[-0.38647330, -0.41867942, -0.43478248,  ...,  0.59581327,
             0.96618366,  2.01288271],
           [-0.45088565, -0.49919480, -0.51529789,  ...,  0.54750413,
             0.93397754,  1.99677968],
           [-0.49919480, -0.53140092, -0.54750401,  ...,  0.51529801,
             0.91787446,  2.01288271],
           ...,
           [ 1.30434811,  1.38486338,  1.49758482,  ...,  0.98228669,
             1.28824508,  2.02898574],
           [ 1.99677968,  1.93236744,  1.93236744,  ...,  1.98067665,
             1.99677968,  2.07729483],
           [ 2.10950065,  2.10950065,  2.10950065,  ...,  2.10950065,
             2.10950065,  2.10950065]],

          [[ 0.25637197,  0.27136448,  0.21139447,  ...,  1.05097473,
             1.21589243,  2.02548766],
           [ 0.18140946,  0.24137947,  0.16641696,  ...,  0.99100471,
             1.17091501,  2.01049519],
           [ 0.13643195,  0.21139447,  0.06146942,  ...,  0.97601217,
             1.17091501,  2.01049519],
           ...,
           [ 1.45577252,  1.53073502,  1.65067506,  ...,  1.24587750,
             1.42578757,  2.04048014],
           [ 2.02548766,  1.98051023,  1.98051023,  ...,  2.01049519,
             2.01049519,  2.08545780],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  2.10045004,
             2.09295392,  2.09295392]]],


         [[[-0.81428570, -0.87777776, -0.94126981,  ...,  0.16984135,
             0.72539687,  1.91587329],
           [-0.94126981, -1.06825387, -1.11587298,  ...,  0.10634929,
             0.67777783,  1.88412726],
           [-1.03650784, -1.11587298, -1.08412695,  ...,  0.09047628,
             0.66190481,  1.90000021],
           ...,
           [ 1.21746063,  1.29682565,  1.40793681,  ...,  0.70952386,
             1.15396857,  1.96349227],
           [ 1.93174624,  1.86825418,  1.86825418,  ...,  1.83650815,
             1.93174624,  2.03492069],
           [ 2.04285717,  2.04285717,  2.04285717,  ...,  2.04285717,
             2.04285717,  2.04285717]],

          [[-0.38647330, -0.41867942, -0.43478248,  ...,  0.59581327,
             0.96618366,  2.01288271],
           [-0.45088565, -0.49919480, -0.51529789,  ...,  0.54750413,
             0.93397754,  1.99677968],
           [-0.49919480, -0.53140092, -0.54750401,  ...,  0.51529801,
             0.91787446,  2.01288271],
           ...,
           [ 1.30434811,  1.38486338,  1.49758482,  ...,  0.98228669,
             1.28824508,  2.02898574],
           [ 1.99677968,  1.93236744,  1.93236744,  ...,  1.98067665,
             1.99677968,  2.07729483],
           [ 2.10950065,  2.10950065,  2.10950065,  ...,  2.10950065,
             2.10950065,  2.10950065]],

          [[ 0.25637197,  0.27136448,  0.21139447,  ...,  1.05097473,
             1.21589243,  2.02548766],
           [ 0.18140946,  0.24137947,  0.16641696,  ...,  0.99100471,
             1.17091501,  2.01049519],
           [ 0.13643195,  0.21139447,  0.06146942,  ...,  0.97601217,
             1.17091501,  2.01049519],
           ...,
           [ 1.45577252,  1.53073502,  1.65067506,  ...,  1.24587750,
             1.42578757,  2.04048014],
           [ 2.02548766,  1.98051023,  1.98051023,  ...,  2.01049519,
             2.01049519,  2.08545780],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  2.10045004,
             2.09295392,  2.09295392]]],


         [[[-0.81428570, -0.87777776, -0.94126981,  ...,  0.16984135,
             0.72539687,  1.91587329],
           [-0.94126981, -1.06825387, -1.11587298,  ...,  0.10634929,
             0.67777783,  1.88412726],
           [-1.03650784, -1.11587298, -1.08412695,  ...,  0.09047628,
             0.66190481,  1.90000021],
           ...,
           [ 1.21746063,  1.29682565,  1.40793681,  ...,  0.70952386,
             1.15396857,  1.96349227],
           [ 1.93174624,  1.86825418,  1.86825418,  ...,  1.83650815,
             1.93174624,  2.03492069],
           [ 2.04285717,  2.04285717,  2.04285717,  ...,  2.04285717,
             2.04285717,  2.04285717]],

          [[-0.38647330, -0.41867942, -0.43478248,  ...,  0.59581327,
             0.96618366,  2.01288271],
           [-0.45088565, -0.49919480, -0.51529789,  ...,  0.54750413,
             0.93397754,  1.99677968],
           [-0.49919480, -0.53140092, -0.54750401,  ...,  0.51529801,
             0.91787446,  2.01288271],
           ...,
           [ 1.30434811,  1.38486338,  1.49758482,  ...,  0.98228669,
             1.28824508,  2.02898574],
           [ 1.99677968,  1.93236744,  1.93236744,  ...,  1.98067665,
             1.99677968,  2.07729483],
           [ 2.10950065,  2.10950065,  2.10950065,  ...,  2.10950065,
             2.10950065,  2.10950065]],

          [[ 0.25637197,  0.27136448,  0.21139447,  ...,  1.05097473,
             1.21589243,  2.02548766],
           [ 0.18140946,  0.24137947,  0.16641696,  ...,  0.99100471,
             1.17091501,  2.01049519],
           [ 0.13643195,  0.21139447,  0.06146942,  ...,  0.97601217,
             1.17091501,  2.01049519],
           ...,
           [ 1.45577252,  1.53073502,  1.65067506,  ...,  1.24587750,
             1.42578757,  2.04048014],
           [ 2.02548766,  1.98051023,  1.98051023,  ...,  2.01049519,
             2.01049519,  2.08545780],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  2.10045004,
             2.09295392,  2.09295392]]],


         [[[-0.81428570, -0.87777776, -0.94126981,  ...,  0.16984135,
             0.72539687,  1.91587329],
           [-0.94126981, -1.06825387, -1.11587298,  ...,  0.10634929,
             0.67777783,  1.88412726],
           [-1.03650784, -1.11587298, -1.08412695,  ...,  0.09047628,
             0.66190481,  1.90000021],
           ...,
           [ 1.21746063,  1.29682565,  1.40793681,  ...,  0.70952386,
             1.15396857,  1.96349227],
           [ 1.93174624,  1.86825418,  1.86825418,  ...,  1.83650815,
             1.93174624,  2.03492069],
           [ 2.04285717,  2.04285717,  2.04285717,  ...,  2.04285717,
             2.04285717,  2.04285717]],

          [[-0.38647330, -0.41867942, -0.43478248,  ...,  0.59581327,
             0.96618366,  2.01288271],
           [-0.45088565, -0.49919480, -0.51529789,  ...,  0.54750413,
             0.93397754,  1.99677968],
           [-0.49919480, -0.53140092, -0.54750401,  ...,  0.51529801,
             0.91787446,  2.01288271],
           ...,
           [ 1.30434811,  1.38486338,  1.49758482,  ...,  0.98228669,
             1.28824508,  2.02898574],
           [ 1.99677968,  1.93236744,  1.93236744,  ...,  1.98067665,
             1.99677968,  2.07729483],
           [ 2.10950065,  2.10950065,  2.10950065,  ...,  2.10950065,
             2.10950065,  2.10950065]],

          [[ 0.25637197,  0.27136448,  0.21139447,  ...,  1.05097473,
             1.21589243,  2.02548766],
           [ 0.18140946,  0.24137947,  0.16641696,  ...,  0.99100471,
             1.17091501,  2.01049519],
           [ 0.13643195,  0.21139447,  0.06146942,  ...,  0.97601217,
             1.17091501,  2.01049519],
           ...,
           [ 1.45577252,  1.53073502,  1.65067506,  ...,  1.24587750,
             1.42578757,  2.04048014],
           [ 2.02548766,  1.98051023,  1.98051023,  ...,  2.01049519,
             2.01049519,  2.08545780],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  2.10045004,
             2.09295392,  2.09295392]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0785 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 139, vnnlib ID: 139 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-7.46985912, -9.78631687, -3.83598518, -5.51694536, -3.54354000,
         -5.34781790, -2.52311063, -5.68112326, -9.51543331, -9.21476460]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [439]; unstable size 439; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 276, 1, 439] with unstable size 275 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 439] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 439] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [275]; unstable size 275; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 275] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 275] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.63732100,  4.43945503, -0.32903957,  1.63714957, -0.59455585,
          1.22534406,  1.17066205,  4.56741381,  4.21444464]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-7.46985912, -9.78631687, -3.83598518, -5.51694536, -3.54354000,
         -5.34781790, -2.52311063, -5.68112326, -9.51543331, -9.21476460]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.79it/s]100%|██████████| 1/1 [00:00<00:00,  8.78it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.29665041, -9.85951042, -3.74907804, -5.51449394, -3.18303251,
          -5.30622292, -2.97571468, -5.53970671, -9.34093189, -9.30280685],
         [-7.29665041, -9.85951042, -3.74907804, -5.51449394, -3.18303251,
          -5.30622292, -2.97571468, -5.53970671, -9.34093189, -9.30280685]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.77336335, 0.20731783]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1165 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 19.83037567138672
alpha/beta optimization time: 1.1560795307159424
initial alpha-crown bounds: tensor([[ 2.76347351,  4.57243586, -0.24465704,  1.68950486, -0.50626087,
          1.28860450,  1.25143039,  4.69473410,  4.32110977]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.506260871887207
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6585602760315
Verifying property 0 with 1 instances.
##### Instance 139 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.7634735107421875.

Properties batch 1, size 1
Remaining timeout: 198.506854057312
Verifying property 1 with 1 instances.
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.5724358558654785.

Properties batch 2, size 1
Remaining timeout: 198.39493942260742
Verifying property 2 with 1 instances.
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.24465704]], device='cuda:0') need to verify.
Model prediction is: tensor([-7.46985912, -9.78631687, -3.83598518, -5.51694536, -3.54354000,
        -5.34781790, -2.52311063, -5.68112326, -9.51543331, -9.21476460],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.24465704]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 439
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 269
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 731
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 38] 
split level 1: [/input-12, 10] 
split level 2: [/input-12, 51] 
split level 3: [/input-12, 26] 
split level 4: [/input-12, 1] 
split level 5: [/input-12, 17] 
split level 6: [/input-12, 25] 
split level 7: [/input-12, 92] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.482269287109375e-05
Time: prepare 0.0018    bound 0.0041    transfer 0.0014    finalize 0.0017    func 0.0091    
Accumulated time: func 0.0091    prepare 0.0023    bound 0.0041    transfer 0.0014    finalize 0.0017    
all_split False
Length of domains: 0
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0165    solve 0.0092    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0231    set_bounds 0.0165    solve 0.0092    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05338907241821289


Properties batch 3, size 1
Remaining timeout: 198.18547368049622
Verifying property 3 with 1 instances.
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.689504861831665.

Properties batch 4, size 1
Remaining timeout: 198.0764274597168
Verifying property 4 with 1 instances.
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.50626087]], device='cuda:0') need to verify.
Model prediction is: tensor([-7.46985912, -9.78631687, -3.83598518, -5.51694536, -3.54354000,
        -5.34781790, -2.52311063, -5.68112326, -9.51543331, -9.21476460],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.50626087]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 439
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 269
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 731
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 51] 
split level 1: [/input-12, 41] 
split level 2: [/input-12, 92] 
split level 3: [/input-12, 1] 
split level 4: [/input-12, 17] 
split level 5: [/input-12, 46] 
split level 6: [/input-12, 33] 
split level 7: [/input-12, 10] 
pruning_in_iteration open status: True
ratio of positive domain = 243 / 256 = 0.94921875
pruning-in-iteration extra time: 0.004678964614868164
Time: prepare 0.0018    bound 0.1385    transfer 0.0008    finalize 0.0015    func 0.1426    
Accumulated time: func 0.1426    prepare 0.0022    bound 0.1385    transfer 0.0008    finalize 0.0015    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.10878 (8), -0.09340 (8), -0.06015 (8), -0.05488 (8), -0.05024 (8), -0.04479 (8), -0.03386 (8), -0.03310 (8), -0.02807 (8), -0.02468 (8), -0.01710 (8), -0.00790 (8), -0.00200 (8), 
Length of domains: 13
Time: pickout 0.0003    decision 0.0225    set_bounds 0.0160    solve 0.1427    add 0.0400    
Accumulated time: pickout 0.0003    decision 0.0225    set_bounds 0.0160    solve 0.1427    add 0.0400    
Current (lb-rhs): -0.10877609252929688
13 domains visited
Cumulative time: 0.2322847843170166

BaB round 2
batch: 13
splitting decisions: 
split level 0: [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] 
split level 1: [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] 
split level 2: [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] 
split level 3: [/input-8, 859] [/input-8, 859] [/input-8, 859] [/input-8, 859] [/input-8, 859] [/input-8, 859] [/input-8, 291] [/input-8, 859] [/input-8, 859] [/input-8, 859] 
pruning_in_iteration open status: True
ratio of positive domain = 194 / 208 = 0.9326923076923077
pruning-in-iteration extra time: 0.004593849182128906
Time: prepare 0.0042    bound 0.1160    transfer 0.0023    finalize 0.0012    func 0.1237    
Accumulated time: func 0.2664    prepare 0.0066    bound 0.2545    transfer 0.0031    finalize 0.0026    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08175 (12), -0.07596 (12), -0.06624 (12), -0.06008 (12), -0.03135 (12), -0.02669 (12), -0.02404 (12), -0.02244 (12), -0.01727 (12), -0.01602 (12), -0.01515 (12), -0.00806 (12), -0.00218 (12), -0.00006 (12), 
Length of domains: 14
Time: pickout 0.0009    decision 0.0178    set_bounds 0.0094    solve 0.1238    add 0.0151    
Accumulated time: pickout 0.0012    decision 0.0403    set_bounds 0.0254    solve 0.2665    add 0.0551    
Current (lb-rhs): -0.08175039291381836
27 domains visited
Cumulative time: 0.40018153190612793

BaB round 3
batch: 14
splitting decisions: 
split level 0: [/input-8, 988] [/input-8, 988] [/input-8, 988] [/input-8, 988] [/input-8, 291] [/input-8, 988] [/input-8, 988] [/input-8, 988] [/input-8, 988] [/input-8, 988] 
split level 1: [/input-8, 291] [/input-8, 291] [/input-8, 1873] [/input-8, 867] [/input-8, 858] [/input-8, 1873] [/input-8, 291] [/input-8, 867] [/input-8, 291] [/input-8, 1873] 
split level 2: [/input-8, 994] [/input-8, 858] [/input-8, 291] [/input-8, 858] [/input-8, 985] [/input-8, 291] [/input-8, 994] [/input-8, 858] [/input-8, 858] [/input-8, 291] 
split level 3: [/input-8, 858] [/input-8, 427] [/input-8, 858] [/input-12, 40] [/input-8, 85] [/input-8, 858] [/input-8, 858] [/input-8, 470] [/input-8, 427] [/input-8, 858] 
pruning_in_iteration open status: True
ratio of positive domain = 157 / 224 = 0.7008928571428572
pruning-in-iteration extra time: 0.004870176315307617
Time: prepare 0.0044    bound 0.1358    transfer 0.0017    finalize 0.0014    func 0.1433    
Accumulated time: func 0.4097    prepare 0.0112    bound 0.3903    transfer 0.0048    finalize 0.0040    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05612 (16), -0.05351 (16), -0.05299 (16), -0.04965 (16), -0.04903 (16), -0.04794 (16), -0.04597 (16), -0.04577 (16), -0.04367 (16), -0.04366 (16), -0.04230 (16), -0.04181 (16), -0.04128 (16), -0.03958 (16), -0.03922 (16), -0.03882 (16), -0.03869 (16), -0.03850 (16), -0.03680 (16), -0.03581 (16), 
Length of domains: 67
Time: pickout 0.0010    decision 0.0162    set_bounds 0.0091    solve 0.1433    add 0.0829    
Accumulated time: pickout 0.0022    decision 0.0564    set_bounds 0.0345    solve 0.4098    add 0.1380    
Current (lb-rhs): -0.05611610412597656
94 domains visited
Cumulative time: 0.6600732803344727

BaB round 4
batch: 67
splitting decisions: 
split level 0: [/input-8, 809] [/input-8, 809] [/input-8, 809] [/input-8, 809] [/input-8, 809] [/input-8, 809] [/input-8, 809] [/input-8, 809] [/input-8, 809] [/input-8, 809] 
split level 1: [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] 
pruning_in_iteration open status: True
ratio of positive domain = 169 / 268 = 0.6305970149253731
pruning-in-iteration extra time: 0.00452733039855957
Time: prepare 0.0053    bound 0.1974    transfer 0.0017    finalize 0.0018    func 0.2063    
Accumulated time: func 0.6160    prepare 0.0168    bound 0.5877    transfer 0.0065    finalize 0.0058    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04710 (18), -0.04482 (18), -0.04448 (18), -0.04330 (18), -0.04099 (18), -0.04052 (18), -0.03927 (18), -0.03736 (18), -0.03666 (18), -0.03496 (18), -0.03490 (18), -0.03359 (18), -0.03310 (18), -0.03296 (18), -0.03264 (18), -0.03087 (18), -0.03039 (18), -0.03007 (18), -0.02975 (18), -0.02933 (18), 
Length of domains: 99
Time: pickout 0.0152    decision 0.0173    set_bounds 0.0099    solve 0.2064    add 0.0481    
Accumulated time: pickout 0.0174    decision 0.0738    set_bounds 0.0444    solve 0.6162    add 0.1861    
Current (lb-rhs): -0.04709815979003906
193 domains visited
Cumulative time: 0.9580106735229492

BaB round 5
batch: 99
splitting decisions: 
split level 0: [/input-8, 994] [/input-8, 994] [/input-8, 994] [/input-8, 994] [/input-8, 994] [/input-8, 994] [/input-8, 994] [/input-8, 994] [/input-8, 994] [/input-8, 994] 
split level 1: [/input-8, 1428] [/input-8, 1428] [/input-8, 1428] [/input-8, 1428] [/input-8, 1428] [/input-8, 1428] [/input-8, 1428] [/input-8, 1428] [/input-8, 1428] [/input-8, 1428] 
pruning_in_iteration open status: True
ratio of positive domain = 213 / 396 = 0.5378787878787878
pruning-in-iteration extra time: 0.004677295684814453
Time: prepare 0.0075    bound 0.1582    transfer 0.0022    finalize 0.0029    func 0.1709    
Accumulated time: func 0.7869    prepare 0.0245    bound 0.7459    transfer 0.0088    finalize 0.0087    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03451 (20), -0.03184 (20), -0.03156 (20), -0.03136 (20), -0.03071 (20), -0.02863 (20), -0.02841 (20), -0.02818 (20), -0.02792 (20), -0.02791 (20), -0.02761 (20), -0.02713 (20), -0.02688 (20), -0.02517 (20), -0.02477 (20), -0.02472 (20), -0.02472 (20), -0.02405 (20), -0.02403 (20), -0.02387 (20), 
Length of domains: 183
Time: pickout 0.0024    decision 0.0213    set_bounds 0.0108    solve 0.1710    add 0.0021    
Accumulated time: pickout 0.0198    decision 0.0951    set_bounds 0.0552    solve 0.7873    add 0.1882    
Current (lb-rhs): -0.03451251983642578
376 domains visited
Cumulative time: 1.1669073104858398

BaB round 6
batch: 183
splitting decisions: 
split level 0: [/input-8, 867] [/input-8, 867] [/input-8, 867] [/input-8, 867] [/input-8, 867] [/input-8, 867] [/input-8, 867] [/input-8, 867] [/input-8, 867] [/input-8, 867] 
pruning_in_iteration open status: True
ratio of positive domain = 186 / 366 = 0.5081967213114754
pruning-in-iteration extra time: 0.0047359466552734375
Time: prepare 0.0071    bound 0.2052    transfer 0.0016    finalize 0.0020    func 0.2159    
Accumulated time: func 1.0028    prepare 0.0318    bound 0.9510    transfer 0.0104    finalize 0.0106    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02965 (21), -0.02751 (21), -0.02650 (21), -0.02646 (21), -0.02599 (21), -0.02431 (21), -0.02370 (21), -0.02369 (21), -0.02328 (21), -0.02320 (21), -0.02287 (21), -0.02286 (21), -0.02210 (21), -0.02063 (21), -0.02048 (21), -0.02004 (21), -0.01987 (21), -0.01972 (21), -0.01942 (21), -0.01901 (21), 
Length of domains: 180
Time: pickout 0.0036    decision 0.0249    set_bounds 0.0077    solve 0.2160    add 0.0059    
Accumulated time: pickout 0.0234    decision 0.1200    set_bounds 0.0629    solve 1.0033    add 0.1941    
Current (lb-rhs): -0.02965259552001953
556 domains visited
Cumulative time: 1.4269580841064453

BaB round 7
batch: 180
splitting decisions: 
split level 0: [/input-8, 973] [/input-8, 973] [/input-8, 973] [/input-8, 973] [/input-8, 973] [/input-8, 973] [/input-8, 973] [/input-8, 973] [/input-8, 973] [/input-8, 973] 
pruning_in_iteration open status: True
ratio of positive domain = 165 / 360 = 0.45833333333333337
pruning-in-iteration extra time: 0.004737377166748047
Time: prepare 0.0071    bound 0.1597    transfer 0.0024    finalize 0.0020    func 0.1712    
Accumulated time: func 1.1740    prepare 0.0390    bound 1.1107    transfer 0.0128    finalize 0.0126    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02452 (22), -0.02425 (22), -0.02236 (22), -0.02202 (22), -0.02132 (22), -0.02119 (22), -0.02102 (22), -0.02084 (22), -0.02062 (22), -0.01902 (22), -0.01855 (22), -0.01851 (22), -0.01844 (22), -0.01818 (22), -0.01810 (22), -0.01799 (22), -0.01774 (22), -0.01752 (22), -0.01750 (22), -0.01745 (22), 
Length of domains: 195
Time: pickout 0.0039    decision 0.0260    set_bounds 0.0077    solve 0.1713    add 0.0024    
Accumulated time: pickout 0.0273    decision 0.1460    set_bounds 0.0706    solve 1.1746    add 0.1965    
Current (lb-rhs): -0.024521350860595703
751 domains visited
Cumulative time: 1.6394250392913818

BaB round 8
batch: 195
splitting decisions: 
split level 0: [/input-8, 1865] [/input-8, 1865] [/input-8, 1865] [/input-8, 1865] [/input-8, 1865] [/input-8, 1865] [/input-8, 1865] [/input-8, 1865] [/input-8, 1865] [/input-8, 1865] 
pruning_in_iteration open status: True
ratio of positive domain = 174 / 390 = 0.4461538461538461
pruning-in-iteration extra time: 0.004631519317626953
Time: prepare 0.0078    bound 0.1514    transfer 0.0023    finalize 0.0020    func 0.1637    
Accumulated time: func 1.3377    prepare 0.0470    bound 1.2621    transfer 0.0151    finalize 0.0146    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02226 (23), -0.02009 (23), -0.01909 (23), -0.01895 (23), -0.01889 (23), -0.01856 (23), -0.01672 (23), -0.01663 (23), -0.01637 (23), -0.01637 (23), -0.01626 (23), -0.01575 (23), -0.01571 (23), -0.01563 (23), -0.01551 (23), -0.01545 (23), -0.01527 (23), -0.01526 (23), -0.01438 (23), -0.01416 (23), 
Length of domains: 216
Time: pickout 0.0036    decision 0.0226    set_bounds 0.0086    solve 0.1638    add 0.0034    
Accumulated time: pickout 0.0309    decision 0.1687    set_bounds 0.0792    solve 1.3384    add 0.1999    
Current (lb-rhs): -0.022261619567871094
967 domains visited
Cumulative time: 1.8425631523132324

BaB round 9
batch: 216
splitting decisions: 
split level 0: [/input-8, 985] [/input-8, 985] [/input-8, 985] [/input-8, 985] [/input-8, 985] [/input-8, 985] [/input-8, 985] [/input-8, 985] [/input-8, 985] [/input-8, 985] 
pruning_in_iteration open status: True
ratio of positive domain = 285 / 432 = 0.6597222222222222
pruning-in-iteration extra time: 0.004777193069458008
Time: prepare 0.0082    bound 0.1888    transfer 0.0027    finalize 0.0022    func 0.2021    
Accumulated time: func 1.5398    prepare 0.0555    bound 1.4509    transfer 0.0179    finalize 0.0169    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01829 (24), -0.01614 (24), -0.01498 (24), -0.01484 (24), -0.01484 (24), -0.01443 (24), -0.01274 (24), -0.01270 (24), -0.01242 (24), -0.01240 (24), -0.01212 (24), -0.01157 (24), -0.01151 (24), -0.01148 (24), -0.01148 (24), -0.01143 (24), -0.01119 (24), -0.01098 (24), -0.01021 (24), -0.00998 (24), 
Length of domains: 147
Time: pickout 0.0046    decision 0.0237    set_bounds 0.0096    solve 0.2022    add 0.0022    
Accumulated time: pickout 0.0355    decision 0.1923    set_bounds 0.0888    solve 1.5406    add 0.2021    
Current (lb-rhs): -0.018290042877197266
1114 domains visited
Cumulative time: 2.0861332416534424

BaB round 10
batch: 147
splitting decisions: 
split level 0: [/input-8, 850] [/input-8, 850] [/input-8, 850] [/input-8, 850] [/input-8, 850] [/input-8, 850] [/input-8, 850] [/input-8, 850] [/input-8, 850] [/input-8, 850] 
pruning_in_iteration open status: True
ratio of positive domain = 185 / 294 = 0.629251700680272
pruning-in-iteration extra time: 0.004674434661865234
Time: prepare 0.0058    bound 0.1538    transfer 0.0012    finalize 0.0016    func 0.1624    
Accumulated time: func 1.7022    prepare 0.0614    bound 1.6047    transfer 0.0191    finalize 0.0184    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01677 (25), -0.01463 (25), -0.01345 (25), -0.01340 (25), -0.01331 (25), -0.01287 (25), -0.01122 (25), -0.01114 (25), -0.01083 (25), -0.01078 (25), -0.01062 (25), -0.01006 (25), -0.00999 (25), -0.00993 (25), -0.00992 (25), -0.00984 (25), -0.00963 (25), -0.00944 (25), -0.00866 (25), -0.00855 (25), 
Length of domains: 109
Time: pickout 0.0038    decision 0.0204    set_bounds 0.0063    solve 0.1628    add 0.0015    
Accumulated time: pickout 0.0393    decision 0.2127    set_bounds 0.0951    solve 1.7034    add 0.2036    
Current (lb-rhs): -0.01677417755126953
1223 domains visited
Cumulative time: 2.281754732131958

BaB round 11
batch: 109
splitting decisions: 
split level 0: [/input-8, 817] [/input-8, 817] [/input-8, 1429] [/input-8, 817] [/input-8, 817] [/input-8, 1429] [/input-8, 817] [/input-8, 817] [/input-8, 817] [/input-8, 1429] 
pruning_in_iteration open status: True
ratio of positive domain = 144 / 218 = 0.6605504587155964
pruning-in-iteration extra time: 0.0047283172607421875
Time: prepare 0.0043    bound 0.1731    transfer 0.0009    finalize 0.0012    func 0.1796    
Accumulated time: func 1.8818    prepare 0.0659    bound 1.7779    transfer 0.0199    finalize 0.0197    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01381 (26), -0.01167 (26), -0.01050 (26), -0.01047 (26), -0.01033 (26), -0.01002 (26), -0.00826 (26), -0.00815 (26), -0.00787 (26), -0.00783 (26), -0.00777 (26), -0.00710 (26), -0.00706 (26), -0.00696 (26), -0.00695 (26), -0.00687 (26), -0.00678 (26), -0.00654 (26), -0.00647 (26), -0.00572 (26), 
Length of domains: 74
Time: pickout 0.0024    decision 0.0206    set_bounds 0.0047    solve 0.1797    add 0.0022    
Accumulated time: pickout 0.0417    decision 0.2333    set_bounds 0.0998    solve 1.8830    add 0.2058    
Current (lb-rhs): -0.013814926147460938
1297 domains visited
Cumulative time: 2.4920010566711426

BaB round 12
batch: 74
splitting decisions: 
split level 0: [/input-8, 972] [/input-8, 972] [/input-8, 972] [/input-8, 972] [/input-8, 972] [/input-8, 972] [/input-8, 972] [/input-8, 972] [/input-8, 972] [/input-8, 972] 
split level 1: [/input-8, 1421] [/input-8, 1421] [/input-8, 1421] [/input-8, 1421] [/input-8, 1421] [/input-8, 1421] [/input-8, 1421] [/input-8, 1421] [/input-8, 1421] [/input-8, 1421] 
pruning_in_iteration open status: True
ratio of positive domain = 289 / 296 = 0.9763513513513513
pruning-in-iteration extra time: 0.004648685455322266
Time: prepare 0.0057    bound 0.1179    transfer 0.0014    finalize 0.0016    func 0.1267    
Accumulated time: func 2.0085    prepare 0.0719    bound 1.8958    transfer 0.0213    finalize 0.0213    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00552 (28), -0.00335 (28), -0.00220 (28), -0.00208 (28), -0.00204 (28), -0.00170 (28), -0.00046 (28), 
Length of domains: 7
Time: pickout 0.0025    decision 0.0188    set_bounds 0.0077    solve 0.1271    add 0.0209    
Accumulated time: pickout 0.0442    decision 0.2521    set_bounds 0.1075    solve 2.0101    add 0.2268    
Current (lb-rhs): -0.005523204803466797
1304 domains visited
Cumulative time: 2.6698198318481445

BaB round 13
batch: 7
splitting decisions: 
split level 0: [/input-8, 989] [/input-8, 989] [/input-8, 989] [/input-8, 989] [/input-8, 989] [/input-8, 989] [/input-8, 989] 
split level 1: [/input-8, 1429] [/input, 1654] [/input-8, 1429] [/input-8, 1429] [/input-8, 1429] [/input-8, 1429] [/input-8, 1429] 
split level 2: [/input-8, 85] [/input-8, 1429] [/input-8, 85] [/input-8, 85] [/input-8, 85] [/input-8, 85] [/input-8, 85] 
split level 3: [/input-8, 1947] [/input-8, 85] [/input-8, 1947] [/input-8, 1947] [/input-8, 1947] [/input-8, 1947] [/input-8, 1947] 
split level 4: [/input-8, 470] [/input-8, 1947] [/input-8, 470] [/input, 1654] [/input-8, 470] [/input-8, 470] [/input-8, 470] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 224 / 224 = 1.0
pruning-in-iteration extra time: 4.124641418457031e-05
Time: prepare 0.0049    bound 0.0038    transfer 0.0007    finalize 0.0014    func 0.0108    
Accumulated time: func 2.0193    prepare 0.0770    bound 1.8996    transfer 0.0221    finalize 0.0227    
all_split False
Length of domains: 0
Time: pickout 0.0010    decision 0.0212    set_bounds 0.0106    solve 0.0109    add 0.0001    
Accumulated time: pickout 0.0451    decision 0.2734    set_bounds 0.1181    solve 2.0210    add 0.2269    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1304 domains visited
Cumulative time: 2.7140731811523438


Properties batch 5, size 1
Remaining timeout: 195.1914165019989
Verifying property 5 with 1 instances.
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.288604497909546.

Properties batch 6, size 1
Remaining timeout: 195.04270601272583
Verifying property 6 with 1 instances.
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.2514303922653198.

Properties batch 7, size 1
Remaining timeout: 194.9263846874237
Verifying property 7 with 1 instances.
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.6947340965271.

Properties batch 8, size 1
Remaining timeout: 194.81950688362122
Verifying property 8 with 1 instances.
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.321109771728516.
Result: safe in 5.2863 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 140, vnnlib ID: 140 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.70108557, -2.61450195, -7.88389778, -7.46980858, -7.10053349,
         -7.85311460, -7.32898045, -5.37792873, -5.26348686, -0.13527048]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [517]; unstable size 517; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 190, 1, 517] with unstable size 189 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 517] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 517] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [189]; unstable size 189; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 189] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 189] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.44307852, 1.46007848, 5.86254549, 5.68103218, 5.60793352, 5.96620178,
         5.60759068, 3.70175457, 3.77148294]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0855 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 141, vnnlib ID: 141 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.93660259, -3.64990735, -5.69686222, -5.46793270, -5.41355324,
         -6.32598066, -5.22664785, -6.09948301, -3.93378472, -2.67238760]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [480]; unstable size 480; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 193, 1, 480] with unstable size 192 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 480] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 480] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [192]; unstable size 192; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 192] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 192] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.12637210,  0.23386812,  0.06982803,  0.04919505,  0.70030731,
         -0.06877613,  0.36111903, -0.89804614, -1.82256591]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.93660259, -3.64990735, -5.69686222, -5.46793270, -5.41355324,
         -6.32598066, -5.22664785, -6.09948301, -3.93378472, -2.67238760]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.93660212, -3.64990807, -5.69686222, -5.46793365, -5.41355324,
          -6.32598066, -5.22664833, -6.09948254, -3.93378496, -2.67238760],
         [-4.93660212, -3.64990807, -5.69686222, -5.46793365, -5.41355324,
          -6.32598066, -5.22664833, -6.09948254, -3.93378496, -2.67238760]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.28669405,  1.57674026,  0.28387690, -0.97752047]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.90952384, -1.84603179, -1.76666665,  ..., -1.68730164,
            -1.09999990, -0.84603173],
           [-1.89365077, -1.90952384, -1.81428576,  ..., -1.71904767,
            -1.30634916, -1.25873005],
           [-1.89365077, -1.89365077, -1.67142856,  ..., -1.75079370,
            -1.51269829, -1.49682534],
           ...,
           [-0.57619047, -1.21111107, -1.22698402,  ..., -1.29047608,
            -1.17936504, -1.03650784],
           [-0.70317459, -1.06825387, -1.16349196,  ..., -1.02063489,
            -1.02063489, -1.00476182],
           [-0.76666665, -1.00476182, -1.00476182,  ..., -0.94126981,
            -1.02063489, -1.06825387]],

          [[-1.93236721, -1.86795497, -1.72302747,  ..., -1.70692432,
            -1.22383249, -0.98228657],
           [-1.91626418, -1.93236721, -1.83574879,  ..., -1.72302747,
            -1.41706920, -1.36875999],
           [-1.91626418, -1.91626418, -1.73913050,  ..., -1.78743970,
            -1.59420288, -1.57809973],
           ...,
           [-0.80515295, -1.49758446, -1.52979064,  ..., -1.46537840,
            -1.40096617, -1.23993552],
           [-0.91787434, -1.33655393, -1.44927526,  ..., -1.22383249,
            -1.23993552, -1.20772946],
           [-0.96618354, -1.27214170, -1.25603855,  ..., -1.12721407,
            -1.20772946, -1.27214170]],

          [[-1.64767623, -1.58770621, -1.51274371,  ..., -1.54272878,
            -1.15292358, -0.91304344],
           [-1.63268375, -1.64767623, -1.54272878,  ..., -1.52773619,
            -1.30284870, -1.25787115],
           [-1.63268375, -1.64767623, -1.43778121,  ..., -1.58770621,
            -1.42278874, -1.43778121],
           ...,
           [-0.70314842, -1.24287868, -1.22788620,  ..., -1.28785622,
            -1.24287868, -1.16791618],
           [-0.80809593, -1.12293863, -1.22788620,  ..., -1.12293863,
            -1.10794616, -1.15292358],
           [-0.82308841, -1.09295356, -1.07796109,  ..., -1.09295356,
            -1.15292358, -1.19790113]]],


         [[[-1.90952384, -1.84603179, -1.76666665,  ..., -1.68730164,
            -1.09999990, -0.84603173],
           [-1.89365077, -1.90952384, -1.81428576,  ..., -1.71904767,
            -1.30634916, -1.25873005],
           [-1.89365077, -1.89365077, -1.67142856,  ..., -1.75079370,
            -1.51269829, -1.49682534],
           ...,
           [-0.57619047, -1.21111107, -1.22698402,  ..., -1.29047608,
            -1.17936504, -1.03650784],
           [-0.70317459, -1.06825387, -1.16349196,  ..., -1.02063489,
            -1.02063489, -1.00476182],
           [-0.76666665, -1.00476182, -1.00476182,  ..., -0.94126981,
            -1.02063489, -1.06825387]],

          [[-1.93236721, -1.86795497, -1.72302747,  ..., -1.70692432,
            -1.22383249, -0.98228657],
           [-1.91626418, -1.93236721, -1.83574879,  ..., -1.72302747,
            -1.41706920, -1.36875999],
           [-1.91626418, -1.91626418, -1.73913050,  ..., -1.78743970,
            -1.59420288, -1.57809973],
           ...,
           [-0.80515295, -1.49758446, -1.52979064,  ..., -1.46537840,
            -1.40096617, -1.23993552],
           [-0.91787434, -1.33655393, -1.44927526,  ..., -1.22383249,
            -1.23993552, -1.20772946],
           [-0.96618354, -1.27214170, -1.25603855,  ..., -1.12721407,
            -1.20772946, -1.27214170]],

          [[-1.64767623, -1.58770621, -1.51274371,  ..., -1.54272878,
            -1.15292358, -0.91304344],
           [-1.63268375, -1.64767623, -1.54272878,  ..., -1.52773619,
            -1.30284870, -1.25787115],
           [-1.63268375, -1.64767623, -1.43778121,  ..., -1.58770621,
            -1.42278874, -1.43778121],
           ...,
           [-0.70314842, -1.24287868, -1.22788620,  ..., -1.28785622,
            -1.24287868, -1.16791618],
           [-0.80809593, -1.12293863, -1.22788620,  ..., -1.12293863,
            -1.10794616, -1.15292358],
           [-0.82308841, -1.09295356, -1.07796109,  ..., -1.09295356,
            -1.15292358, -1.19790113]]],


         [[[-1.90952384, -1.84603179, -1.76666665,  ..., -1.68730164,
            -1.09999990, -0.84603173],
           [-1.89365077, -1.90952384, -1.81428576,  ..., -1.71904767,
            -1.30634916, -1.25873005],
           [-1.89365077, -1.89365077, -1.67142856,  ..., -1.75079370,
            -1.51269829, -1.49682534],
           ...,
           [-0.57619047, -1.21111107, -1.22698402,  ..., -1.29047608,
            -1.17936504, -1.03650784],
           [-0.70317459, -1.06825387, -1.16349196,  ..., -1.02063489,
            -1.02063489, -1.00476182],
           [-0.76666665, -1.00476182, -1.00476182,  ..., -0.94126981,
            -1.02063489, -1.06825387]],

          [[-1.93236721, -1.86795497, -1.72302747,  ..., -1.70692432,
            -1.22383249, -0.98228657],
           [-1.91626418, -1.93236721, -1.83574879,  ..., -1.72302747,
            -1.41706920, -1.36875999],
           [-1.91626418, -1.91626418, -1.73913050,  ..., -1.78743970,
            -1.59420288, -1.57809973],
           ...,
           [-0.80515295, -1.49758446, -1.52979064,  ..., -1.46537840,
            -1.40096617, -1.23993552],
           [-0.91787434, -1.33655393, -1.44927526,  ..., -1.22383249,
            -1.23993552, -1.20772946],
           [-0.96618354, -1.27214170, -1.25603855,  ..., -1.12721407,
            -1.20772946, -1.27214170]],

          [[-1.64767623, -1.58770621, -1.51274371,  ..., -1.54272878,
            -1.15292358, -0.91304344],
           [-1.63268375, -1.64767623, -1.54272878,  ..., -1.52773619,
            -1.30284870, -1.25787115],
           [-1.63268375, -1.64767623, -1.43778121,  ..., -1.58770621,
            -1.42278874, -1.43778121],
           ...,
           [-0.70314842, -1.24287868, -1.22788620,  ..., -1.28785622,
            -1.24287868, -1.16791618],
           [-0.80809593, -1.12293863, -1.22788620,  ..., -1.12293863,
            -1.10794616, -1.15292358],
           [-0.82308841, -1.09295356, -1.07796109,  ..., -1.09295356,
            -1.15292358, -1.19790113]]],


         [[[-1.90952384, -1.84603179, -1.76666665,  ..., -1.68730164,
            -1.09999990, -0.84603173],
           [-1.89365077, -1.90952384, -1.81428576,  ..., -1.71904767,
            -1.30634916, -1.25873005],
           [-1.89365077, -1.89365077, -1.67142856,  ..., -1.75079370,
            -1.51269829, -1.49682534],
           ...,
           [-0.57619047, -1.21111107, -1.22698402,  ..., -1.29047608,
            -1.17936504, -1.03650784],
           [-0.70317459, -1.06825387, -1.16349196,  ..., -1.02063489,
            -1.02063489, -1.00476182],
           [-0.76666665, -1.00476182, -1.00476182,  ..., -0.94126981,
            -1.02063489, -1.06825387]],

          [[-1.93236721, -1.86795497, -1.72302747,  ..., -1.70692432,
            -1.22383249, -0.98228657],
           [-1.91626418, -1.93236721, -1.83574879,  ..., -1.72302747,
            -1.41706920, -1.36875999],
           [-1.91626418, -1.91626418, -1.73913050,  ..., -1.78743970,
            -1.59420288, -1.57809973],
           ...,
           [-0.80515295, -1.49758446, -1.52979064,  ..., -1.46537840,
            -1.40096617, -1.23993552],
           [-0.91787434, -1.33655393, -1.44927526,  ..., -1.22383249,
            -1.23993552, -1.20772946],
           [-0.96618354, -1.27214170, -1.25603855,  ..., -1.12721407,
            -1.20772946, -1.27214170]],

          [[-1.64767623, -1.58770621, -1.51274371,  ..., -1.54272878,
            -1.15292358, -0.91304344],
           [-1.63268375, -1.64767623, -1.54272878,  ..., -1.52773619,
            -1.30284870, -1.25787115],
           [-1.63268375, -1.64767623, -1.43778121,  ..., -1.58770621,
            -1.42278874, -1.43778121],
           ...,
           [-0.70314842, -1.24287868, -1.22788620,  ..., -1.28785622,
            -1.24287868, -1.16791618],
           [-0.80809593, -1.12293863, -1.22788620,  ..., -1.12293863,
            -1.10794616, -1.15292358],
           [-0.82308841, -1.09295356, -1.07796109,  ..., -1.09295356,
            -1.15292358, -1.19790113]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0852 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 142, vnnlib ID: 142 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-9.01175785, -9.22564220, -6.09865665, -6.68279839, -7.01091385,
         -7.66662741, -3.74865699, -8.93857002, -9.70948601, -9.36056805]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [415]; unstable size 415; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 290, 1, 415] with unstable size 289 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 415] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 415] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [289]; unstable size 289; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 289] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 289] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.92234278, 3.34474134, 0.83518028, 1.42703414, 1.62353659, 2.12632895,
         3.08041954, 3.64250827, 3.61395812]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0690 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 143, vnnlib ID: 143 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.98219585, -11.93984127,  -4.80098343,  -6.43815804,  -4.75239468,
          -5.96528244,  -6.83383131,  -6.40824652, -11.32667923, -10.02781868]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [464]; unstable size 464; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 196, 1, 464] with unstable size 195 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 464] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 464] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [195]; unstable size 195; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 195] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 195] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.50733924,  4.83027935, -1.04858804,  0.40518254, -0.05837464,
          0.48497450,  0.45264530,  4.44294167,  3.27292299]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.98219585, -11.93984127,  -4.80098343,  -6.43815804,  -4.75239468,
          -5.96528244,  -6.83383131,  -6.40824652, -11.32667923, -10.02781868]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.89328861, -11.87365723,  -4.72995949,  -6.58205509,  -5.11540079,
           -6.15687943,  -6.98943567,  -6.80347681, -11.29017735, -10.07491016],
         [ -7.89328861, -11.87365723,  -4.72995949,  -6.58205509,  -5.11540079,
           -6.15687943,  -6.98943567,  -6.80347681, -11.29017735, -10.07491016]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.38544130,  1.04147863]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0062 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0805 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 144, vnnlib ID: 144 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-8.60607052, -9.81349945, -5.86607075, -4.14033175, -5.51711655,
         -3.53696299, -6.38849020, -6.08620310, -7.73200989, -8.22923183]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [522]; unstable size 522; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 221, 1, 522] with unstable size 220 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 522] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 522] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [220]; unstable size 220; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 220] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 220] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.89997840, 4.68741703, 1.57923102, 0.30736449, 1.14825928, 1.82109797,
         1.72909081, 2.65290260, 3.25950551]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0678 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 145, vnnlib ID: 145 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-3.97581673, -7.36369705, -2.25391197, -0.90559614, -3.35363531,
         -0.93793738, -3.88091850, -3.94542360, -8.08611870, -6.59433222]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [686]; unstable size 686; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 215, 1, 686] with unstable size 214 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 686] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 686] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [214]; unstable size 214; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 214] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 214] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.63966477,  4.83987522,  0.26498580, -0.32372510,  1.13650537,
          1.87988913,  2.01293588,  5.47729683,  4.25807333]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.97581673, -7.36369705, -2.25391197, -0.90559614, -3.35363531,
         -0.93793738, -3.88091850, -3.94542360, -8.08611870, -6.59433222]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.97581673, -7.36369705, -2.25391197, -0.90559614, -3.35363531,
          -0.93793738, -3.88091850, -3.94542360, -8.08611870, -6.59433222]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.03234124]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-6.55555546e-01, -5.28571427e-01, -5.60317457e-01,  ...,
            -3.69841158e-01, -4.80952382e-01, -5.28571427e-01],
           [-6.55555546e-01, -5.44444442e-01, -5.28571427e-01,  ...,
            -1.47618949e-01, -3.85714173e-01, -4.65079248e-01],
           [-6.55555546e-01, -5.12698412e-01, -4.17460203e-01,  ...,
            -5.23808524e-02, -3.06349099e-01, -4.49206233e-01],
           ...,
           [-3.85714173e-01, -1.95237994e-01,  2.69842222e-02,  ...,
             7.41269886e-01,  5.82539737e-01,  4.23809588e-01],
           [-4.33333218e-01, -3.22222114e-01, -1.47618949e-01,  ...,
             6.14285767e-01,  5.50793707e-01,  4.07936573e-01],
           [-4.01587188e-01, -1.95237994e-01, -1.79364979e-01,  ...,
             6.93650842e-01,  6.14285767e-01,  5.03174663e-01]],

          [[-4.99194801e-01, -3.70370239e-01, -4.02576357e-01,  ...,
            -2.09339648e-01, -3.05958003e-01, -3.05958003e-01],
           [-4.50885653e-01, -3.54267180e-01, -3.38164121e-01,  ...,
             1.22934580e-07, -2.25442708e-01, -2.41545767e-01],
           [-4.18679416e-01, -2.73751885e-01, -1.77133530e-01,  ...,
             1.12721533e-01, -1.44927412e-01, -2.25442708e-01],
           ...,
           [-1.44927412e-01,  6.44123554e-02,  3.54267418e-01,  ...,
             1.19162667e+00,  1.12721443e+00,  1.01449287e+00],
           [-1.44927412e-01,  1.22934580e-07,  2.09339887e-01,  ...,
             1.17552364e+00,  1.22383285e+00,  1.11111140e+00],
           [-1.77133530e-01,  8.05154145e-02,  1.44927651e-01,  ...,
             1.14331758e+00,  1.15942061e+00,  1.11111140e+00]],

          [[-4.03298318e-01, -2.68365651e-01, -3.13343287e-01,  ...,
            -2.23388135e-01, -3.43328297e-01, -3.13343287e-01],
           [-3.73313308e-01, -2.83358276e-01, -2.53373146e-01,  ...,
            -2.84855980e-02, -2.53373146e-01, -2.38380641e-01],
           [-3.58320802e-01, -2.23388135e-01, -1.33433133e-01,  ...,
             6.14694245e-02, -1.93403140e-01, -2.38380641e-01],
           ...,
           [-5.84706068e-02,  1.21439442e-01,  3.91304523e-01,  ...,
             1.27586246e+00,  1.20089996e+00,  1.15592217e+00],
           [-8.84556174e-02,  4.64769229e-02,  2.41379470e-01,  ...,
             1.26086998e+00,  1.30584753e+00,  1.24587750e+00],
           [-8.84556174e-02,  1.36431947e-01,  1.81409463e-01,  ...,
             1.23088503e+00,  1.24587750e+00,  1.23088503e+00]]]]],
       device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0708 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 146, vnnlib ID: 146 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.88469028, -12.65882111, -12.62442398, -13.26971817, -13.08886814,
         -14.39622879, -13.06826305, -13.77910519,  -7.61941338, -13.15269947]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [474]; unstable size 474; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 183, 1, 474] with unstable size 182 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 474] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 474] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [182]; unstable size 182; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 182] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 182] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.66201383, 3.41532993, 3.31493235, 3.81620908, 3.48846340, 4.76713276,
         3.58373928, 3.89160681, 3.77728772]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0642 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 147, vnnlib ID: 147 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.95316505, -29.04301071, -22.88550568, -26.99249268, -26.92433929,
         -26.87813187, -26.17901230, -26.50130844, -27.15471458, -29.93289757]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [636]; unstable size 636; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 207, 1, 636] with unstable size 206 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 636] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 636] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [206]; unstable size 206; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 206] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 206] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.13847542, 4.55568981, 3.22048378, 3.02970314, 2.95622349, 2.20912457,
         2.32559443, 2.85925460, 5.64449787]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0769 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 148, vnnlib ID: 148 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-8.92584610, -7.42483807, -4.62941742, -4.01557446, -4.85893917,
         -3.11745501, -6.51985884, -2.25635386, -7.85682869, -5.87989426]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [573]; unstable size 573; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 165, 1, 573] with unstable size 164 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 10, 1, 573] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 573] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [164]; unstable size 164; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 10, 1, 164] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 164] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.58360815, 3.69630361, 1.62351370, 1.19872522, 1.87599468, 0.30902326,
         3.29060125, 4.20989132, 2.42179346]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0712 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 149, vnnlib ID: 149 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.82564068, -16.12564659,  -8.40596962, -11.14722919,  -8.84027576,
         -11.49166584,  -8.61030483, -12.62408161, -15.33834553, -15.51428890]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [612]; unstable size 612; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 318, 1, 612] with unstable size 317 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 612] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 612] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [317]; unstable size 317; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 317] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 317] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.89976621,  5.63465881,  1.31290960, -0.68691462,  1.36818075,
         -1.07342339,  2.11837912,  5.13911629,  5.00889111]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.82564068, -16.12564659,  -8.40596962, -11.14722919,  -8.84027576,
         -11.49166584,  -8.61030483, -12.62408161, -15.33834553, -15.51428890]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.90783310, -15.16053009,  -7.57349110,  -9.97743225,  -7.48518276,
          -10.30821037,  -7.42592621, -11.38831425, -14.43945026, -14.46265030],
         [-11.90783310, -15.16053009,  -7.57349110,  -9.97743225,  -7.48518276,
          -10.30821037,  -7.42592621, -11.38831425, -14.43945026, -14.46265030]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.08830833, -0.14756489]]], device='cuda:0')
number of violation:  2
Attack finished in 0.0059 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0648 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 150, vnnlib ID: 150 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.13626671, -12.95860291, -17.87646484, -18.21573448, -16.54766655,
         -19.77405167, -18.47913933, -17.13456726, -12.88059044, -12.20954704]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [659]; unstable size 659; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 227, 1, 659] with unstable size 226 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 659] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 659] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [226]; unstable size 226; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 226] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 226] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.12454128,  2.88798285,  3.24317932,  1.46328259,  4.59323931,
          3.30328608,  1.93248844, -1.68345642, -1.69870043]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.13626671, -12.95860291, -17.87646484, -18.21573448, -16.54766655,
         -19.77405167, -18.47913933, -17.13456726, -12.88059044, -12.20954704]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-12.13626671, -12.95860291, -17.87646675, -18.21573257, -16.54766655,
          -19.77405167, -18.47914314, -17.13456726, -12.88059235, -12.20954704],
         [-12.13626671, -12.95860291, -17.87646675, -18.21573257, -16.54766655,
          -19.77405167, -18.47914314, -17.13456726, -12.88059235, -12.20954704]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.82233620, -0.07801056, -0.74905586]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[ 4.87301648e-01,  5.50793707e-01,  7.41269886e-01,  ...,
            -1.95237994e-01, -2.11111009e-01, -2.26984024e-01],
           [ 8.20634961e-01,  8.84127021e-01,  1.04285717e+00,  ...,
            -8.41268823e-02, -9.99999046e-02, -1.31745934e-01],
           [ 1.01111114e+00,  1.02698421e+00,  1.16984153e+00,  ...,
             1.11112073e-02, -2.06348225e-02, -2.06348225e-02],
           ...,
           [ 4.23809588e-01,  4.23809588e-01,  3.92063558e-01,  ...,
             1.85714364e-01,  1.38095319e-01,  1.22222304e-01],
           [ 4.71428633e-01,  3.76190543e-01,  3.92063558e-01,  ...,
             2.96825469e-01,  2.49206424e-01,  2.01587379e-01],
           [ 6.14285767e-01,  3.28571498e-01,  3.44444513e-01,  ...,
             2.80952454e-01,  2.80952454e-01,  2.01587379e-01]],

          [[ 1.03059590e+00,  1.04669893e+00,  1.17552364e+00,  ...,
             7.40740836e-01,  7.24637747e-01,  7.08534718e-01],
           [ 1.23993587e+00,  1.27214205e+00,  1.38486338e+00,  ...,
             8.37359190e-01,  8.37359190e-01,  8.21256101e-01],
           [ 1.28824508e+00,  1.30434811e+00,  1.43317258e+00,  ...,
             9.01771426e-01,  8.85668337e-01,  8.53462219e-01],
           ...,
           [ 4.83092964e-02,  4.83092964e-02,  1.61031820e-02,  ...,
            -1.93236589e-01, -2.57648826e-01, -2.57648826e-01],
           [ 1.12721533e-01,  3.22062373e-02,  3.22062373e-02,  ...,
            -9.66182351e-02, -1.61030471e-01, -1.77133530e-01],
           [ 3.22061300e-01,  1.22934580e-07,  1.22934580e-07,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.77133530e-01]],

          [[ 1.56072009e+00,  1.50075006e+00,  1.56072009e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           [ 1.57571256e+00,  1.57571256e+00,  1.68066013e+00,  ...,
             1.68066013e+00,  1.66566753e+00,  1.65067506e+00],
           [ 1.41079497e+00,  1.45577252e+00,  1.60569763e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           ...,
           [ 7.64619336e-02,  7.64619336e-02,  4.64769229e-02,  ...,
            -1.48425624e-01, -2.23388135e-01, -1.93403140e-01],
           [ 1.36431947e-01,  4.64769229e-02,  6.14694245e-02,  ...,
            -5.84706068e-02, -1.18440613e-01, -1.33433133e-01],
           [ 3.01349491e-01,  1.64919142e-02,  3.14844176e-02,  ...,
            -5.84706068e-02, -7.34631121e-02, -1.18440613e-01]]],


         [[[ 4.87301648e-01,  5.50793707e-01,  7.41269886e-01,  ...,
            -1.95237994e-01, -2.11111009e-01, -2.26984024e-01],
           [ 8.20634961e-01,  8.84127021e-01,  1.04285717e+00,  ...,
            -8.41268823e-02, -9.99999046e-02, -1.31745934e-01],
           [ 1.01111114e+00,  1.02698421e+00,  1.16984153e+00,  ...,
             1.11112073e-02, -2.06348225e-02, -2.06348225e-02],
           ...,
           [ 4.23809588e-01,  4.23809588e-01,  3.92063558e-01,  ...,
             1.85714364e-01,  1.38095319e-01,  1.22222304e-01],
           [ 4.71428633e-01,  3.76190543e-01,  3.92063558e-01,  ...,
             2.96825469e-01,  2.49206424e-01,  2.01587379e-01],
           [ 6.14285767e-01,  3.28571498e-01,  3.44444513e-01,  ...,
             2.80952454e-01,  2.80952454e-01,  2.01587379e-01]],

          [[ 1.03059590e+00,  1.04669893e+00,  1.17552364e+00,  ...,
             7.40740836e-01,  7.24637747e-01,  7.08534718e-01],
           [ 1.23993587e+00,  1.27214205e+00,  1.38486338e+00,  ...,
             8.37359190e-01,  8.37359190e-01,  8.21256101e-01],
           [ 1.28824508e+00,  1.30434811e+00,  1.43317258e+00,  ...,
             9.01771426e-01,  8.85668337e-01,  8.53462219e-01],
           ...,
           [ 4.83092964e-02,  4.83092964e-02,  1.61031820e-02,  ...,
            -1.93236589e-01, -2.57648826e-01, -2.57648826e-01],
           [ 1.12721533e-01,  3.22062373e-02,  3.22062373e-02,  ...,
            -9.66182351e-02, -1.61030471e-01, -1.77133530e-01],
           [ 3.22061300e-01,  1.22934580e-07,  1.22934580e-07,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.77133530e-01]],

          [[ 1.56072009e+00,  1.50075006e+00,  1.56072009e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           [ 1.57571256e+00,  1.57571256e+00,  1.68066013e+00,  ...,
             1.68066013e+00,  1.66566753e+00,  1.65067506e+00],
           [ 1.41079497e+00,  1.45577252e+00,  1.60569763e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           ...,
           [ 7.64619336e-02,  7.64619336e-02,  4.64769229e-02,  ...,
            -1.48425624e-01, -2.23388135e-01, -1.93403140e-01],
           [ 1.36431947e-01,  4.64769229e-02,  6.14694245e-02,  ...,
            -5.84706068e-02, -1.18440613e-01, -1.33433133e-01],
           [ 3.01349491e-01,  1.64919142e-02,  3.14844176e-02,  ...,
            -5.84706068e-02, -7.34631121e-02, -1.18440613e-01]]],


         [[[ 4.87301648e-01,  5.50793707e-01,  7.41269886e-01,  ...,
            -1.95237994e-01, -2.11111009e-01, -2.26984024e-01],
           [ 8.20634961e-01,  8.84127021e-01,  1.04285717e+00,  ...,
            -8.41268823e-02, -9.99999046e-02, -1.31745934e-01],
           [ 1.01111114e+00,  1.02698421e+00,  1.16984153e+00,  ...,
             1.11112073e-02, -2.06348225e-02, -2.06348225e-02],
           ...,
           [ 4.23809588e-01,  4.23809588e-01,  3.92063558e-01,  ...,
             1.85714364e-01,  1.38095319e-01,  1.22222304e-01],
           [ 4.71428633e-01,  3.76190543e-01,  3.92063558e-01,  ...,
             2.96825469e-01,  2.49206424e-01,  2.01587379e-01],
           [ 6.14285767e-01,  3.28571498e-01,  3.44444513e-01,  ...,
             2.80952454e-01,  2.80952454e-01,  2.01587379e-01]],

          [[ 1.03059590e+00,  1.04669893e+00,  1.17552364e+00,  ...,
             7.40740836e-01,  7.24637747e-01,  7.08534718e-01],
           [ 1.23993587e+00,  1.27214205e+00,  1.38486338e+00,  ...,
             8.37359190e-01,  8.37359190e-01,  8.21256101e-01],
           [ 1.28824508e+00,  1.30434811e+00,  1.43317258e+00,  ...,
             9.01771426e-01,  8.85668337e-01,  8.53462219e-01],
           ...,
           [ 4.83092964e-02,  4.83092964e-02,  1.61031820e-02,  ...,
            -1.93236589e-01, -2.57648826e-01, -2.57648826e-01],
           [ 1.12721533e-01,  3.22062373e-02,  3.22062373e-02,  ...,
            -9.66182351e-02, -1.61030471e-01, -1.77133530e-01],
           [ 3.22061300e-01,  1.22934580e-07,  1.22934580e-07,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.77133530e-01]],

          [[ 1.56072009e+00,  1.50075006e+00,  1.56072009e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           [ 1.57571256e+00,  1.57571256e+00,  1.68066013e+00,  ...,
             1.68066013e+00,  1.66566753e+00,  1.65067506e+00],
           [ 1.41079497e+00,  1.45577252e+00,  1.60569763e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           ...,
           [ 7.64619336e-02,  7.64619336e-02,  4.64769229e-02,  ...,
            -1.48425624e-01, -2.23388135e-01, -1.93403140e-01],
           [ 1.36431947e-01,  4.64769229e-02,  6.14694245e-02,  ...,
            -5.84706068e-02, -1.18440613e-01, -1.33433133e-01],
           [ 3.01349491e-01,  1.64919142e-02,  3.14844176e-02,  ...,
            -5.84706068e-02, -7.34631121e-02, -1.18440613e-01]]]]],
       device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0723 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 151, vnnlib ID: 151 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.92925501, -7.14253235, -2.67746592, -1.64019978, -3.21286678,
         -2.15658951, -4.77550077, -2.71008253, -7.95267010, -6.10923672]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [509]; unstable size 509; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 191, 1, 509] with unstable size 190 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 509] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 509] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [190]; unstable size 190; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 190] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 190] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.62681043,  3.42381310, -0.43489385, -0.80544966,  0.11626768,
          1.46117401, -0.19169974,  4.37902212,  2.50552559]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.92925501, -7.14253235, -2.67746592, -1.64019978, -3.21286678,
         -2.15658951, -4.77550077, -2.71008253, -7.95267010, -6.10923672]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.92925453, -7.14253139, -2.67746544, -1.64019978, -3.21286583,
          -2.15658951, -4.77549982, -2.71008205, -7.95266914, -6.10923672],
         [-4.92925453, -7.14253139, -2.67746544, -1.64019978, -3.21286583,
          -2.15658951, -4.77549982, -2.71008205, -7.95266914, -6.10923672]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.52087593, -0.51638973,  0.55349255]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.95714283, -0.79841268, -0.98888886,  ...,  1.94761932,
             2.01111126,  1.96349227],
           [-0.78253967, -0.67142856, -0.83015871,  ...,  1.96349227,
             1.93174624,  1.82063520],
           [-0.89365077, -0.89365077, -0.97301590,  ...,  1.97936535,
             2.01111126,  1.97936535],
           ...,
           [-1.05238092, -1.02063489, -1.02063489,  ..., -0.22698402,
             0.15396833, -0.49682540],
           [-1.16349196, -1.13174593, -1.06825387,  ...,  0.09047628,
            -0.71904761, -0.75079364],
           [-1.22698402, -1.22698402, -1.19523799,  ...,  1.21746063,
             0.01111121, -0.65555555]],

          [[-1.04669881, -0.91787434, -0.98228657,  ...,  1.64251232,
             1.69082153,  1.57810009],
           [-0.83735907, -0.78904986, -0.82125598,  ...,  1.65861547,
             1.61030626,  1.54589403],
           [-0.88566822, -0.88566822, -0.91787434,  ...,  1.83574903,
             1.85185218,  1.81964600],
           ...,
           [-1.48148143, -1.46537840, -1.46537840,  ..., -0.51529789,
            -0.01610294, -0.72463763],
           [-1.54589367, -1.52979064, -1.49758446,  ..., -0.08051517,
            -0.93397743, -0.96618354],
           [-1.59420288, -1.57809973, -1.56199670,  ...,  1.30434811,
            -0.09661824, -0.95008045]],

          [[-1.16791618, -1.18290865, -1.10794616,  ...,  1.32084000,
             1.35082495,  1.24587750],
           [-1.01799107, -1.06296861, -0.98800600,  ...,  1.32084000,
             1.29085493,  1.24587750],
           [-0.98800600, -0.98800600, -1.00299859,  ...,  1.56072009,
             1.54572761,  1.53073502],
           ...,
           [-1.52773619, -1.54272878, -1.54272878,  ..., -0.59820086,
            -0.02848560, -0.70314842],
           [-1.57271373, -1.54272878, -1.52773619,  ..., -0.07346311,
            -0.91304344, -0.98800600],
           [-1.57271373, -1.55772126, -1.55772126,  ...,  1.33583248,
            -0.02848560, -0.95802099]]],


         [[[-0.95714283, -0.79841268, -0.98888886,  ...,  1.94761932,
             2.01111126,  1.96349227],
           [-0.78253967, -0.67142856, -0.83015871,  ...,  1.96349227,
             1.93174624,  1.82063520],
           [-0.89365077, -0.89365077, -0.97301590,  ...,  1.97936535,
             2.01111126,  1.97936535],
           ...,
           [-1.05238092, -1.02063489, -1.02063489,  ..., -0.22698402,
             0.15396833, -0.49682540],
           [-1.16349196, -1.13174593, -1.06825387,  ...,  0.09047628,
            -0.71904761, -0.75079364],
           [-1.22698402, -1.22698402, -1.19523799,  ...,  1.21746063,
             0.01111121, -0.65555555]],

          [[-1.04669881, -0.91787434, -0.98228657,  ...,  1.64251232,
             1.69082153,  1.57810009],
           [-0.83735907, -0.78904986, -0.82125598,  ...,  1.65861547,
             1.61030626,  1.54589403],
           [-0.88566822, -0.88566822, -0.91787434,  ...,  1.83574903,
             1.85185218,  1.81964600],
           ...,
           [-1.48148143, -1.46537840, -1.46537840,  ..., -0.51529789,
            -0.01610294, -0.72463763],
           [-1.54589367, -1.52979064, -1.49758446,  ..., -0.08051517,
            -0.93397743, -0.96618354],
           [-1.59420288, -1.57809973, -1.56199670,  ...,  1.30434811,
            -0.09661824, -0.95008045]],

          [[-1.16791618, -1.18290865, -1.10794616,  ...,  1.32084000,
             1.35082495,  1.24587750],
           [-1.01799107, -1.06296861, -0.98800600,  ...,  1.32084000,
             1.29085493,  1.24587750],
           [-0.98800600, -0.98800600, -1.00299859,  ...,  1.56072009,
             1.54572761,  1.53073502],
           ...,
           [-1.52773619, -1.54272878, -1.54272878,  ..., -0.59820086,
            -0.02848560, -0.70314842],
           [-1.57271373, -1.54272878, -1.52773619,  ..., -0.07346311,
            -0.91304344, -0.98800600],
           [-1.57271373, -1.55772126, -1.55772126,  ...,  1.33583248,
            -0.02848560, -0.95802099]]],


         [[[-0.95714283, -0.79841268, -0.98888886,  ...,  1.94761932,
             2.01111126,  1.96349227],
           [-0.78253967, -0.67142856, -0.83015871,  ...,  1.96349227,
             1.93174624,  1.82063520],
           [-0.89365077, -0.89365077, -0.97301590,  ...,  1.97936535,
             2.01111126,  1.97936535],
           ...,
           [-1.05238092, -1.02063489, -1.02063489,  ..., -0.22698402,
             0.15396833, -0.49682540],
           [-1.16349196, -1.13174593, -1.06825387,  ...,  0.09047628,
            -0.71904761, -0.75079364],
           [-1.22698402, -1.22698402, -1.19523799,  ...,  1.21746063,
             0.01111121, -0.65555555]],

          [[-1.04669881, -0.91787434, -0.98228657,  ...,  1.64251232,
             1.69082153,  1.57810009],
           [-0.83735907, -0.78904986, -0.82125598,  ...,  1.65861547,
             1.61030626,  1.54589403],
           [-0.88566822, -0.88566822, -0.91787434,  ...,  1.83574903,
             1.85185218,  1.81964600],
           ...,
           [-1.48148143, -1.46537840, -1.46537840,  ..., -0.51529789,
            -0.01610294, -0.72463763],
           [-1.54589367, -1.52979064, -1.49758446,  ..., -0.08051517,
            -0.93397743, -0.96618354],
           [-1.59420288, -1.57809973, -1.56199670,  ...,  1.30434811,
            -0.09661824, -0.95008045]],

          [[-1.16791618, -1.18290865, -1.10794616,  ...,  1.32084000,
             1.35082495,  1.24587750],
           [-1.01799107, -1.06296861, -0.98800600,  ...,  1.32084000,
             1.29085493,  1.24587750],
           [-0.98800600, -0.98800600, -1.00299859,  ...,  1.56072009,
             1.54572761,  1.53073502],
           ...,
           [-1.52773619, -1.54272878, -1.54272878,  ..., -0.59820086,
            -0.02848560, -0.70314842],
           [-1.57271373, -1.54272878, -1.52773619,  ..., -0.07346311,
            -0.91304344, -0.98800600],
           [-1.57271373, -1.55772126, -1.55772126,  ...,  1.33583248,
            -0.02848560, -0.95802099]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0732 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 152, vnnlib ID: 152 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.37253094, -15.35466290,  -8.84723759, -11.91200066,  -9.14601994,
         -12.22006512, -11.46233749, -11.63420105, -15.26982689, -14.99343395]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [511]; unstable size 511; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 247, 1, 511] with unstable size 246 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 511] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 511] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [246]; unstable size 246; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 246] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 246] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.05601645,  4.40511131,  1.92022467, -0.67723632,  2.14849806,
          1.43644238,  1.45348632,  4.22401047,  4.17532206]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.37253094, -15.35466290,  -8.84723759, -11.91200066,  -9.14601994,
         -12.22006512, -11.46233749, -11.63420105, -15.26982689, -14.99343395]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.95911980, -14.67740154,  -8.50276279, -11.15490532,  -8.22284317,
          -11.39343548, -10.70833683, -10.67666340, -14.70250797, -14.25697708]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.27991962]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0055 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0691 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 153, vnnlib ID: 153 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.36052370, -3.64754987, -8.43094254, -6.93587589, -8.07399559,
         -7.95548391, -8.76295853, -8.07159233, -4.37078619, -1.63098276]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [666]; unstable size 666; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 198, 1, 666] with unstable size 197 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 666] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 666] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [197]; unstable size 197; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 197] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 197] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.38331795, 0.85898757, 5.10982227, 3.81529808, 4.82118130, 4.66787195,
         5.43832874, 4.82864952, 1.05962610]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0644 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 154, vnnlib ID: 154 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.37273693, -13.41425037,  -7.99989891,  -7.64088869,  -7.68787098,
          -7.30278063,  -9.00737858,  -9.44757938, -11.26918030, -13.87256336]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [665]; unstable size 665; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 191, 1, 665] with unstable size 190 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 665] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 665] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [190]; unstable size 190; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 190] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 190] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.81563997,  4.79626942, -0.23131967,  0.04256070, -0.61334896,
          0.76331377,  1.09416676,  2.70510578,  5.43058109]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.37273693, -13.41425037,  -7.99989891,  -7.64088869,  -7.68787098,
          -7.30278063,  -9.00737858,  -9.44757938, -11.26918030, -13.87256336]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-12.39031887, -13.36584949,  -7.99200344,  -7.88567734,  -7.51200867,
           -7.59368086,  -9.04060841,  -9.48881340, -11.36435127, -13.91123199],
         [-12.39031887, -13.36584949,  -7.99200344,  -7.88567734,  -7.51200867,
           -7.59368086,  -9.04060841,  -9.48881340, -11.36435127, -13.91123199]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.39832258, -0.08167219]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0068 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0444 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 155, vnnlib ID: 155 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.79153347, -11.06904888,  -7.80160236,  -7.62448120,  -8.11459255,
          -8.06301022,  -7.22633886,  -9.50167847,  -7.88424015, -10.52373123]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [522]; unstable size 522; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 244, 1, 522] with unstable size 243 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 522] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 522] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [243]; unstable size 243; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 243] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 243] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.54438400,  1.50450659, -1.00405812, -0.75059634, -0.65832710,
         -0.60824066,  0.62780261, -1.52603483,  1.13424635]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.79153347, -11.06904888,  -7.80160236,  -7.62448120,  -8.11459255,
          -8.06301022,  -7.22633886,  -9.50167847,  -7.88424015, -10.52373123]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.39375973, -10.87876701,  -7.30129433,  -7.40815878,  -7.76286411,
           -7.76071310,  -7.42278099,  -9.15025520,  -7.50671482, -10.33001041],
         [ -9.39375973, -10.87876701,  -7.30129433,  -7.40815878,  -7.76286411,
           -7.76071310,  -7.42278099,  -9.15025520,  -7.50671482, -10.33001041]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.12148666, -0.01462221,  0.34008312,  0.33793211,  0.08393383]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.0174 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0637 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 156, vnnlib ID: 156 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.62991190, -8.22150135, -3.56266642, -2.64211535, -2.55210876,
         -3.17030573, -2.78596139, -4.91182852, -7.74587250, -7.17337656]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [520]; unstable size 520; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 185, 1, 520] with unstable size 184 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 520] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 520] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [184]; unstable size 184; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 184] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 184] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.35063863,  3.30825830, -0.56681466, -0.80880803, -1.41259122,
         -1.49340844,  0.91902596,  3.26092291,  2.75898957]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.62991190, -8.22150135, -3.56266642, -2.64211535, -2.55210876,
         -3.17030573, -2.78596139, -4.91182852, -7.74587250, -7.17337656]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.62991190, -8.22150135, -3.56266618, -2.64211535, -2.55210876,
          -3.17030573, -2.78596210, -4.91182852, -7.74587250, -7.17337751],
         [-6.62991190, -8.22150135, -3.56266618, -2.64211535, -2.55210876,
          -3.17030573, -2.78596210, -4.91182852, -7.74587250, -7.17337751]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.39236045, -0.52819037, -0.61819696, -0.38434362]]],
       device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]],


         [[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]],


         [[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]],


         [[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0670 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 157, vnnlib ID: 157 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.04801083,  -6.34156513, -11.41678429,  -9.62609482, -10.79650021,
         -10.91422462, -10.18493938,  -9.82091618,  -7.10640144,  -2.62643194]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [489]; unstable size 489; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 166, 1, 489] with unstable size 165 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 489] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 489] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [165]; unstable size 165; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 165] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 165] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.36141205, 2.37881160, 7.25882244, 5.68141222, 6.92046452, 6.83364058,
         6.18870258, 5.80481195, 3.38991737]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0618 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 158, vnnlib ID: 158 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.81927967,  -9.30375195, -10.87481976,  -8.97626114, -10.13474369,
          -8.76882172, -10.25335312,  -9.09837914,  -6.59457874, -10.58987808]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [517]; unstable size 517; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 192, 1, 517] with unstable size 191 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 517] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 517] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [191]; unstable size 191; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 191] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 191] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.71505976,  0.93900013,  2.11313200,  0.24073672,  1.31830502,
         -0.27658796,  1.65153790, -0.12757921,  2.09712553]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.81927967,  -9.30375195, -10.87481976,  -8.97626114, -10.13474369,
          -8.76882172, -10.25335312,  -9.09837914,  -6.59457874, -10.58987808]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.65it/s]100%|██████████| 1/1 [00:00<00:00,  8.64it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.51523590,  -9.07377148, -10.23342419,  -8.17811871,  -9.40123940,
           -7.79556513,  -9.75415516,  -8.18024349,  -6.82714367, -10.12567520],
         [ -9.51523590,  -9.07377148, -10.23342419,  -8.17811871,  -9.40123940,
           -7.79556513,  -9.75415516,  -8.18024349,  -6.82714367, -10.12567520]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.96842146, 1.35309982]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1187 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 10.416448593139648
alpha/beta optimization time: 1.1569154262542725
initial alpha-crown bounds: tensor([[ 1.76490676,  1.00492311,  2.20698881,  0.32836914,  1.41238642,
         -0.17884588,  1.72935688, -0.01777911,  2.16614223]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.17884588241577148
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.65463089942932
Verifying property 0 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.7649067640304565.

Properties batch 1, size 1
Remaining timeout: 198.50639486312866
Verifying property 1 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.0049231052398682.

Properties batch 2, size 1
Remaining timeout: 198.40171098709106
Verifying property 2 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.20698881149292.

Properties batch 3, size 1
Remaining timeout: 198.29692101478577
Verifying property 3 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.328369140625.

Properties batch 4, size 1
Remaining timeout: 198.19247102737427
Verifying property 4 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.412386417388916.

Properties batch 5, size 1
Remaining timeout: 198.08260488510132
Verifying property 5 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.17884588]], device='cuda:0') need to verify.
Model prediction is: tensor([ -9.81927967,  -9.30375195, -10.87481976,  -8.97626114, -10.13474369,
         -8.76882172, -10.25335312,  -9.09837914,  -6.59457874, -10.58987808],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.17884588]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 517
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 188
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 726
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 37] 
split level 1: [/input-12, 25] 
split level 2: [/input-12, 26] 
split level 3: [/input-12, 4] 
split level 4: [/input-12, 58] 
split level 5: [/input-12, 45] 
split level 6: [/input-12, 51] 
split level 7: [/input-12, 74] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.601478576660156e-05
Time: prepare 0.0018    bound 0.0040    transfer 0.0014    finalize 0.0016    func 0.0089    
Accumulated time: func 0.0089    prepare 0.0022    bound 0.0040    transfer 0.0014    finalize 0.0016    
all_split False
Length of domains: 0
Time: pickout 0.0004    decision 0.0228    set_bounds 0.0164    solve 0.0090    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0228    set_bounds 0.0164    solve 0.0090    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.052887678146362305


Properties batch 6, size 1
Remaining timeout: 197.8804850578308
Verifying property 6 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.7293568849563599.

Properties batch 7, size 1
Remaining timeout: 197.76670145988464
Verifying property 7 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.01777911]], device='cuda:0') need to verify.
Model prediction is: tensor([ -9.81927967,  -9.30375195, -10.87481976,  -8.97626114, -10.13474369,
         -8.76882172, -10.25335312,  -9.09837914,  -6.59457874, -10.58987808],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.01777911]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 517
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 188
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 726
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 58] 
split level 1: [/input-12, 45] 
split level 2: [/input-12, 37] 
split level 3: [/input-12, 4] 
split level 4: [/input-12, 51] 
split level 5: [/input-12, 25] 
split level 6: [/input-12, 26] 
split level 7: [/input, 1736] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.649162292480469e-05
Time: prepare 0.0032    bound 0.0041    transfer 0.0007    finalize 0.0016    func 0.0097    
Accumulated time: func 0.0097    prepare 0.0036    bound 0.0041    transfer 0.0007    finalize 0.0016    
all_split False
Length of domains: 0
Time: pickout 0.0003    decision 0.0228    set_bounds 0.0182    solve 0.0098    add 0.0001    
Accumulated time: pickout 0.0003    decision 0.0228    set_bounds 0.0182    solve 0.0098    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05554533004760742


Properties batch 8, size 1
Remaining timeout: 197.53718495368958
Verifying property 8 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.166142225265503.
Result: safe in 2.5721 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 159, vnnlib ID: 159 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.94552898, -11.88663006, -11.47941303,  -9.72749805, -12.11168003,
         -10.94520473,  -8.55705357, -13.68229103, -10.67903423, -11.17602921]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [836]; unstable size 836; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 189, 1, 836] with unstable size 188 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 836] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 836] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [188]; unstable size 188; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 188] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 188] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.05637705, 1.39599657, 1.75964928, 0.17517832, 2.39905357, 1.14613712,
         3.57038641, 0.74127996, 1.09699953]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0751 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 160, vnnlib ID: 160 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.69691086, -9.90914440, -3.04869223, -5.95901394, -2.41780186,
         -6.51351690, -5.05484104, -5.98770094, -7.13607407, -9.76951885]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [647]; unstable size 647; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 242, 1, 647] with unstable size 241 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 647] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 647] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [241]; unstable size 241; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 241] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 241] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.95681763,  5.94022369, -0.25544396,  2.46004224,  2.96836066,
          1.44257140,  2.64147139,  3.15622735,  5.52299976]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.69691086, -9.90914440, -3.04869223, -5.95901394, -2.41780186,
         -6.51351690, -5.05484104, -5.98770094, -7.13607407, -9.76951885]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.33it/s]100%|██████████| 1/1 [00:00<00:00,  7.32it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.53756809, -9.76719856, -2.86113811, -5.85877895, -2.57433796,
          -6.37398863, -5.08237123, -6.03231287, -7.07665539, -9.52616215]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.28680015]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1396 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 26.490989685058594
alpha/beta optimization time: 1.3134794235229492
initial alpha-crown bounds: tensor([[ 2.05517387,  6.03731155, -0.21251790,  2.50705242,  3.02221203,
          1.49958718,  2.69033098,  3.27446389,  5.61737490]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.2125179022550583
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.4677369594574
Verifying property 0 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.055173873901367.

Properties batch 1, size 1
Remaining timeout: 198.32286429405212
Verifying property 1 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.037311553955078.

Properties batch 2, size 1
Remaining timeout: 198.2167730331421
Verifying property 2 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.21251790]], device='cuda:0') need to verify.
Model prediction is: tensor([-5.69691086, -9.90914440, -3.04869223, -5.95901394, -2.41780186,
        -6.51351690, -5.05484104, -5.98770094, -7.13607407, -9.76951885],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.21251790]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 647
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 238
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 906
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 54] 
split level 1: [/input-12, 1] 
split level 2: [/input-12, 25] 
split level 3: [/input-12, 37] 
split level 4: [/input-12, 26] 
split level 5: [/input-12, 51] 
split level 6: [/input-12, 44] 
split level 7: [/input-12, 82] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.4345855712890625e-05
Time: prepare 0.0018    bound 0.0041    transfer 0.0015    finalize 0.0017    func 0.0092    
Accumulated time: func 0.0092    prepare 0.0022    bound 0.0041    transfer 0.0015    finalize 0.0017    
all_split False
Length of domains: 0
Time: pickout 0.0004    decision 0.0235    set_bounds 0.0165    solve 0.0092    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0235    set_bounds 0.0165    solve 0.0092    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05413031578063965


Properties batch 3, size 1
Remaining timeout: 197.99699234962463
Verifying property 3 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.507052421569824.

Properties batch 4, size 1
Remaining timeout: 197.8893232345581
Verifying property 4 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.022212028503418.

Properties batch 5, size 1
Remaining timeout: 197.78333568572998
Verifying property 5 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.4995871782302856.

Properties batch 6, size 1
Remaining timeout: 197.67937684059143
Verifying property 6 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.690330982208252.

Properties batch 7, size 1
Remaining timeout: 197.5759561061859
Verifying property 7 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.2744638919830322.

Properties batch 8, size 1
Remaining timeout: 197.47220706939697
Verifying property 8 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.617374897003174.
Result: safe in 2.6315 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 161, vnnlib ID: 161 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.37989235, -12.20897579,  -6.17734432,  -5.76625729,  -6.93807411,
          -3.77729273,  -8.37195778,  -7.49653196, -10.76665974, -11.58906174]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [456]; unstable size 456; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 195, 1, 456] with unstable size 194 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 456] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 456] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [194]; unstable size 194; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 194] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 194] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.38867855, 6.47063065, 1.48629022, 1.57262683, 2.21376371, 3.23497581,
         2.94880319, 5.30806828, 6.18771601]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0746 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 162, vnnlib ID: 162 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-13.11128426, -16.94595146,  -9.70340824, -12.93247986, -10.71098232,
         -13.59650612, -11.43742085, -14.93857956, -14.94828510, -17.84584045]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [429]; unstable size 429; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 211, 1, 429] with unstable size 210 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 429] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 429] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [210]; unstable size 210; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 210] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 210] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.12003708, 5.67749119, 2.36852098, 0.16531825, 2.94698143, 0.60729003,
         3.85684586, 3.46587324, 6.63982296]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0705 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 163, vnnlib ID: 163 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.02505970,  -9.52995014,  -8.17180538,  -8.71479893,  -8.61084557,
          -8.27292728,  -9.82778072,  -7.94948912, -11.30757618,  -9.90987301]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [638]; unstable size 638; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 260, 1, 638] with unstable size 259 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 638] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 638] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [259]; unstable size 259; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 259] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 259] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.64107972, -0.23480129, -1.33058929, -0.47275126, -0.46761560,
         -0.91006339,  0.31482792,  1.61070704,  0.12702441]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.02505970,  -9.52995014,  -8.17180538,  -8.71479893,  -8.61084557,
          -8.27292728,  -9.82778072,  -7.94948912, -11.30757618,  -9.90987301]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.50275230,  -9.31137848,  -7.50799370,  -8.29128933,  -8.19631863,
           -7.91926050,  -9.32222462,  -7.97495413, -10.89629650,  -9.75931168],
         [ -8.50275230,  -9.31137848,  -7.50799370,  -8.29128933,  -8.19631863,
           -7.91926050,  -9.32222462,  -7.97495413, -10.89629650,  -9.75931168]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.52779818,  1.33642435, -0.46696043,  0.31633520,  0.22136450,
          -0.05569363]]], device='cuda:0')
number of violation:  2
Attack finished in 0.0082 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0745 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 164, vnnlib ID: 164 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.41563416, -7.71300030, -2.86234260, -2.13727427, -3.26359797,
         -1.15524995, -3.90352178, -2.95602751, -6.72349644, -6.40303564]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [677]; unstable size 677; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 255, 1, 677] with unstable size 254 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 677] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 677] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [254]; unstable size 254; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 254] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 254] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.88557887, 4.58735847, 0.73231339, 0.69587111, 1.00518155, 1.60793138,
         0.80470562, 3.98152161, 3.66006422]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0629 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 165, vnnlib ID: 165 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.93124580, -13.00026798, -10.51418877, -11.34232426, -11.59994984,
         -12.09090137, -13.21082306, -11.37638664, -10.77716541, -12.72988605]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [678]; unstable size 678; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 229, 1, 678] with unstable size 228 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 678] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 678] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [228]; unstable size 228; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 228] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 228] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.97155714, -0.03237724, -1.84702158, -0.69079256, -0.48902321,
          0.04457062,  0.97582543, -2.07122684, -0.15928864]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.93124580, -13.00026798, -10.51418877, -11.34232426, -11.59994984,
         -12.09090137, -13.21082306, -11.37638664, -10.77716541, -12.72988605]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.93124771, -13.00026798, -10.51418972, -11.34232521, -11.59995174,
          -12.09090233, -13.21082497, -11.37638760, -10.77716732, -12.72988605],
         [-11.93124771, -13.00026798, -10.51418972, -11.34232521, -11.59995174,
          -12.09090233, -13.21082497, -11.37638760, -10.77716732, -12.72988605]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.55486012,  1.62388039, -0.86219788, -0.03406239,  0.22356415,
          -0.59922028,  1.35349846]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         ...,


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]]]], device='cuda:0') torch.Size([1, 7, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0757 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 166, vnnlib ID: 166 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-8.11835384, -8.97128582, -5.58492565, -4.69414091, -4.89179802,
         -5.64415693, -2.85636353, -6.39860678, -9.19930935, -7.69397116]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [551]; unstable size 551; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 328, 1, 551] with unstable size 327 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 551] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 551] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [327]; unstable size 327; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 327] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 327] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.57804918e+00,  3.19466448e+00,  7.62257576e-01,  2.92238951e-01,
         -4.13417816e-04,  8.40279341e-01,  1.08616173e+00,  3.18620467e+00,
          2.37681484e+00]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-8.11835384, -8.97128582, -5.58492565, -4.69414091, -4.89179802,
         -5.64415693, -2.85636353, -6.39860678, -9.19930935, -7.69397116]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.53it/s]100%|██████████| 1/1 [00:00<00:00,  8.52it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.55580521, -8.57808781, -5.04000854, -4.20195580, -4.09700203,
          -5.05925369, -2.93464255, -5.77540493, -8.65878296, -7.32569599]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.16235948]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1202 seconds.
PGD attack failed
verified_status unknown
verified_success False

all verified at 1th iter
best_l after optimization: 14.46798038482666
alpha/beta optimization time: 0.027098417282104492
initial alpha-crown bounds: tensor([[2.59561253, 3.21909356, 0.77398014, 0.30205703, 0.01444960, 0.85292125,
         1.10492134, 3.20971012, 2.39523530]], device='cuda:0')
Number of class (without rhs): 0 ; Worst class: (+ rhs) 0.014449596405029297
verified with init bound!
Result: safe-incomplete in 0.2189 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 167, vnnlib ID: 167 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.73988724, -9.75906086, -5.44053173, -6.54372168, -6.64882469,
         -6.77933979, -7.41226196, -7.94059706, -5.61829853, -8.84854412]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [625]; unstable size 625; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 289, 1, 625] with unstable size 288 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 625] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 625] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [288]; unstable size 288; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 288] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 288] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.12974215, -0.58860946,  0.22682786,  0.44695175,  0.33009392,
          0.98268521,  1.32415771, -0.52337825,  2.49502420]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.73988724, -9.75906086, -5.44053173, -6.54372168, -6.64882469,
         -6.77933979, -7.41226196, -7.94059706, -5.61829853, -8.84854412]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.83it/s]100%|██████████| 1/1 [00:00<00:00,  8.82it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.69770527, -9.33743763, -5.35973167, -6.24397135, -6.46449852,
          -6.50081301, -7.10666513, -7.71766424, -4.85390425, -8.43731594],
         [-4.69770527, -9.33743763, -5.35973167, -6.24397135, -6.46449852,
          -6.50081301, -7.10666513, -7.71766424, -4.85390425, -8.43731594]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.66202641, 0.15619898]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1161 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 8.481115341186523
alpha/beta optimization time: 1.1573631763458252
initial alpha-crown bounds: tensor([[ 3.24760485, -0.53066146,  0.27715933,  0.50497150,  0.39338547,
          1.04265249,  1.40458298, -0.43028849,  2.57170868]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.5306614637374878
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.64624047279358
Verifying property 0 with 1 instances.
##### Instance 167 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.2476048469543457.

Properties batch 1, size 1
Remaining timeout: 198.50141048431396
Verifying property 1 with 1 instances.
##### Instance 167 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.53066146]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.73988724, -9.75906086, -5.44053173, -6.54372168, -6.64882469,
        -6.77933979, -7.41226196, -7.94059706, -5.61829853, -8.84854412],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.53066146]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 625
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 280
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 926
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 54] 
split level 1: [/input-12, 31] 
split level 2: [/input-12, 1] 
split level 3: [/input-12, 26] 
split level 4: [/input-12, 4] 
split level 5: [/input-12, 41] 
split level 6: [/input-12, 10] 
split level 7: [/input-8, 1628] 
pruning_in_iteration open status: True
ratio of positive domain = 230 / 256 = 0.8984375
pruning-in-iteration extra time: 0.004830837249755859
Time: prepare 0.0031    bound 0.1662    transfer 0.0015    finalize 0.0019    func 0.1727    
Accumulated time: func 0.1727    prepare 0.0035    bound 0.1662    transfer 0.0015    finalize 0.0019    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08252 (8), -0.08070 (8), -0.07597 (8), -0.07450 (8), -0.06509 (8), -0.06371 (8), -0.05676 (8), -0.05555 (8), -0.04608 (8), -0.04510 (8), -0.04239 (8), -0.04158 (8), -0.02147 (8), -0.01951 (8), -0.01746 (8), -0.01740 (8), -0.01673 (8), -0.01634 (8), -0.01186 (8), -0.01125 (8), 
Length of domains: 26
Time: pickout 0.0004    decision 0.0227    set_bounds 0.0175    solve 0.1728    add 0.0139    
Accumulated time: pickout 0.0004    decision 0.0227    set_bounds 0.0175    solve 0.1728    add 0.0139    
Current (lb-rhs): -0.08252033591270447
26 domains visited
Cumulative time: 0.2316420078277588

BaB round 2
batch: 26
splitting decisions: 
split level 0: [/input-8, 1052] [/input-8, 1052] [/input-8, 1052] [/input-8, 413] [/input-8, 1052] [/input-8, 1052] [/input-8, 1620] [/input-8, 1052] [/input-8, 1620] [/input-8, 1052] 
split level 1: [/input-8, 1620] [/input-8, 1620] [/input-8, 1885] [/input-8, 1885] [/input-8, 1885] [/input-8, 1620] [/input-8, 845] [/input-8, 1620] [/input-8, 845] [/input-8, 1885] 
split level 2: [/input-8, 859] [/input-8, 1885] [/input-8, 1620] [/input-8, 1013] [/input-8, 1013] [/input-8, 859] [/input-8, 1885] [/input-8, 1885] [/input-8, 1885] [/input-8, 1620] 
pruning_in_iteration open status: True
ratio of positive domain = 105 / 208 = 0.5048076923076923
pruning-in-iteration extra time: 0.004817962646484375
Time: prepare 0.0040    bound 0.1136    transfer 0.0018    finalize 0.0012    func 0.1207    
Accumulated time: func 0.2934    prepare 0.0077    bound 0.2798    transfer 0.0033    finalize 0.0031    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06612 (11), -0.06488 (11), -0.06470 (11), -0.06362 (11), -0.06255 (11), -0.06194 (11), -0.06150 (11), -0.06078 (11), -0.06066 (11), -0.05978 (11), -0.05889 (11), -0.05827 (11), -0.05817 (11), -0.05796 (11), -0.05788 (11), -0.05721 (11), -0.05719 (11), -0.05697 (11), -0.05674 (11), -0.05599 (11), 
Length of domains: 103
Time: pickout 0.0017    decision 0.0123    set_bounds 0.0071    solve 0.1208    add 0.0014    
Accumulated time: pickout 0.0021    decision 0.0350    set_bounds 0.0246    solve 0.2936    add 0.0153    
Current (lb-rhs): -0.0661194920539856
129 domains visited
Cumulative time: 0.3752446174621582

BaB round 3
batch: 103
splitting decisions: 
split level 0: [/input-8, 413] [/input-8, 1437] [/input-8, 284] [/input-8, 845] [/input-8, 1437] [/input-8, 284] [/input-8, 413] [/input-8, 1437] [/input-8, 284] [/input-8, 845] 
pruning_in_iteration open status: True
ratio of positive domain = 46 / 206 = 0.22330097087378642
pruning-in-iteration extra time: 0.003310680389404297
Time: prepare 0.0040    bound 0.1306    transfer 0.0008    finalize 0.0012    func 0.1366    
Accumulated time: func 0.4301    prepare 0.0119    bound 0.4104    transfer 0.0042    finalize 0.0043    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06368 (12), -0.06255 (12), -0.06203 (12), -0.06100 (12), -0.05973 (12), -0.05924 (12), -0.05878 (12), -0.05820 (12), -0.05775 (12), -0.05697 (12), -0.05602 (12), -0.05548 (12), -0.05527 (12), -0.05517 (12), -0.05516 (12), -0.05453 (12), -0.05434 (12), -0.05419 (12), -0.05388 (12), -0.05322 (12), 
Length of domains: 160
Time: pickout 0.0018    decision 0.0218    set_bounds 0.0054    solve 0.1367    add 0.0476    
Accumulated time: pickout 0.0039    decision 0.0568    set_bounds 0.0301    solve 0.4303    add 0.0629    
Current (lb-rhs): -0.06367969512939453
289 domains visited
Cumulative time: 0.5892016887664795

BaB round 4
batch: 160
splitting decisions: 
split level 0: [/input-8, 845] [/input-8, 1656] [/input-8, 413] [/input-8, 413] [/input-8, 284] [/input-8, 413] [/input-8, 845] [/input-8, 413] [/input-8, 413] [/input-8, 413] 
pruning_in_iteration open status: False
ratio of positive domain = 5 / 320 = 0.015625
pruning-in-iteration extra time: 5.7697296142578125e-05
Time: prepare 0.0065    bound 0.1052    transfer 0.0010    finalize 0.0019    func 0.1147    
Accumulated time: func 0.5447    prepare 0.0186    bound 0.5156    transfer 0.0052    finalize 0.0062    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06128 (13), -0.05961 (13), -0.05823 (13), -0.05717 (13), -0.05690 (13), -0.05659 (13), -0.05596 (13), -0.05520 (13), -0.05418 (13), -0.05393 (13), -0.05385 (13), -0.05372 (13), -0.05360 (13), -0.05329 (13), -0.05308 (13), -0.05307 (13), -0.05241 (13), -0.05237 (13), -0.05190 (13), -0.05075 (13), 
Length of domains: 314
Time: pickout 0.0029    decision 0.0247    set_bounds 0.0076    solve 0.1148    add 0.0525    
Accumulated time: pickout 0.0068    decision 0.0814    set_bounds 0.0377    solve 0.5451    add 0.1154    
Current (lb-rhs): -0.06128394603729248
603 domains visited
Cumulative time: 0.7921311855316162

BaB round 5
batch: 314
splitting decisions: 
split level 0: [/input-8, 1011] [/input-8, 413] [/input-8, 1656] [/input-8, 1891] [/input-8, 1656] [/input-8, 1656] [/input-8, 1011] [/input-8, 284] [/input-8, 1620] [/input-8, 1891] 
pruning_in_iteration open status: False
ratio of positive domain = 54 / 628 = 0.0859872611464968
pruning-in-iteration extra time: 5.7220458984375e-05
Time: prepare 0.0119    bound 0.1051    transfer 0.0035    finalize 0.0039    func 0.1245    
Accumulated time: func 0.6692    prepare 0.0307    bound 0.6206    transfer 0.0086    finalize 0.0101    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05712 (14), -0.05638 (14), -0.05592 (14), -0.05542 (14), -0.05442 (14), -0.05440 (14), -0.05359 (14), -0.05268 (14), -0.05252 (14), -0.05233 (14), -0.05196 (14), -0.05166 (14), -0.05161 (14), -0.05143 (14), -0.05094 (14), -0.05092 (14), -0.05000 (14), -0.04997 (14), -0.04939 (14), -0.04890 (14), 
Length of domains: 573
Time: pickout 0.0048    decision 0.0321    set_bounds 0.0144    solve 0.1246    add 0.0041    
Accumulated time: pickout 0.0116    decision 0.1135    set_bounds 0.0521    solve 0.6697    add 0.1195    
Current (lb-rhs): -0.057119011878967285
1176 domains visited
Cumulative time: 0.9733109474182129

BaB round 6
batch: 573
splitting decisions: 
split level 0: [/input-8, 1013] [/input-8, 284] [/input-8, 1620] [/input-8, 1011] [/input-8, 845] [/input-8, 1620] [/input-8, 1013] [/input-8, 845] [/input-8, 1656] [/input-8, 1011] 
pruning_in_iteration open status: True
ratio of positive domain = 249 / 1146 = 0.2172774869109948
pruning-in-iteration extra time: 0.0008196830749511719
Time: prepare 0.0217    bound 0.1250    transfer 0.0031    finalize 0.0067    func 0.1567    
Accumulated time: func 0.8259    prepare 0.0526    bound 0.7456    transfer 0.0117    finalize 0.0169    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05646 (15), -0.05476 (15), -0.05330 (15), -0.05201 (15), -0.05201 (15), -0.05196 (15), -0.05184 (15), -0.05178 (15), -0.05092 (15), -0.05021 (15), -0.04944 (15), -0.04896 (15), -0.04885 (15), -0.04874 (15), -0.04865 (15), -0.04825 (15), -0.04786 (15), -0.04771 (15), -0.04767 (15), -0.04752 (15), 
Length of domains: 897
Time: pickout 0.0077    decision 0.0482    set_bounds 0.0245    solve 0.1569    add 0.0077    
Accumulated time: pickout 0.0193    decision 0.1617    set_bounds 0.0766    solve 0.8266    add 0.1272    
Current (lb-rhs): -0.05646038055419922
2073 domains visited
Cumulative time: 1.220921516418457

BaB round 7
batch: 897
splitting decisions: 
split level 0: [/input-8, 1891] [/input-8, 845] [/input-8, 1656] [/input-8, 413] [/input-8, 1891] [/input-8, 1438] [/input-8, 845] [/input-8, 1656] [/input-8, 413] [/input-8, 276] 
pruning_in_iteration open status: True
ratio of positive domain = 499 / 1794 = 0.278149386845039
pruning-in-iteration extra time: 0.004364728927612305
Time: prepare 0.0349    bound 0.2669    transfer 0.0090    finalize 0.0104    func 0.3223    
Accumulated time: func 1.1482    prepare 0.0878    bound 1.0126    transfer 0.0208    finalize 0.0273    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05396 (16), -0.05268 (16), -0.05237 (16), -0.05105 (16), -0.04928 (16), -0.04926 (16), -0.04925 (16), -0.04807 (16), -0.04804 (16), -0.04782 (16), -0.04781 (16), -0.04745 (16), -0.04685 (16), -0.04654 (16), -0.04632 (16), -0.04621 (16), -0.04577 (16), -0.04566 (16), -0.04561 (16), -0.04532 (16), 
Length of domains: 1295
Time: pickout 0.0143    decision 0.0652    set_bounds 0.0398    solve 0.3227    add 0.0687    
Accumulated time: pickout 0.0336    decision 0.2269    set_bounds 0.1164    solve 1.1493    add 0.1959    
Current (lb-rhs): -0.05395650863647461
3368 domains visited
Cumulative time: 1.735748052597046

BaB round 8
batch: 1295
splitting decisions: 
split level 0: [/input-8, 1656] [/input-8, 1438] [/input-8, 1438] [/input-8, 1656] [/input-8, 1656] [/input-8, 1013] [/input-8, 1438] [/input-8, 1010] [/input-8, 1438] [/input-8, 1438] 
pruning_in_iteration open status: True
ratio of positive domain = 930 / 2590 = 0.359073359073359
pruning-in-iteration extra time: 0.004926204681396484
Time: prepare 0.0521    bound 0.2978    transfer 0.0079    finalize 0.1908    func 0.5489    
Accumulated time: func 1.6971    prepare 0.1400    bound 1.3103    transfer 0.0287    finalize 0.2182    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05301 (17), -0.05140 (17), -0.05044 (17), -0.04839 (17), -0.04834 (17), -0.04830 (17), -0.04742 (17), -0.04740 (17), -0.04726 (17), -0.04721 (17), -0.04711 (17), -0.04682 (17), -0.04646 (17), -0.04594 (17), -0.04593 (17), -0.04572 (17), -0.04524 (17), -0.04515 (17), -0.04476 (17), -0.04441 (17), 
Length of domains: 1660
Time: pickout 0.0210    decision 0.0794    set_bounds 0.0545    solve 0.5498    add 0.0097    
Accumulated time: pickout 0.0546    decision 0.3063    set_bounds 0.1709    solve 1.6991    add 0.2056    
Current (lb-rhs): -0.05301320552825928
5028 domains visited
Cumulative time: 2.456181049346924

BaB round 9
batch: 1660
splitting decisions: 
split level 0: [/input-8, 1013] [/input-8, 1013] [/input-8, 1013] [/input-8, 1013] [/input-8, 1013] [/input-8, 1013] [/input-8, 276] [/input-8, 1013] [/input-8, 1889] [/input-8, 1013] 
pruning_in_iteration open status: True
ratio of positive domain = 977 / 3320 = 0.2942771084337349
pruning-in-iteration extra time: 0.004924297332763672
Time: prepare 0.0662    bound 0.2885    transfer 0.0088    finalize 0.0226    func 0.3865    
Accumulated time: func 2.0836    prepare 0.2065    bound 1.5989    transfer 0.0375    finalize 0.2407    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04785 (18), -0.04775 (18), -0.04649 (18), -0.04624 (18), -0.04619 (18), -0.04617 (18), -0.04519 (18), -0.04495 (18), -0.04322 (18), -0.04318 (18), -0.04314 (18), -0.04310 (18), -0.04308 (18), -0.04305 (18), -0.04214 (18), -0.04203 (18), -0.04193 (18), -0.04192 (18), -0.04179 (18), -0.04168 (18), 
Length of domains: 2343
Time: pickout 0.0242    decision 0.1065    set_bounds 0.0703    solve 0.3874    add 0.0112    
Accumulated time: pickout 0.0788    decision 0.4128    set_bounds 0.2412    solve 2.0865    add 0.2168    
Current (lb-rhs): -0.04785066843032837
7371 domains visited
Cumulative time: 3.065265417098999

BaB round 10
batch: 2343
splitting decisions: 
split level 0: [/input-8, 859] [/input-8, 859] [/input-8, 859] [/input-8, 859] [/input-8, 859] [/input-8, 859] [/input-8, 859] [/input-8, 859] [/input-8, 859] [/input-8, 859] 
pruning_in_iteration open status: True
ratio of positive domain = 1396 / 4686 = 0.29790866410584715
pruning-in-iteration extra time: 0.004920005798339844
Time: prepare 0.0956    bound 0.3292    transfer 0.0259    finalize 0.0294    func 0.4815    
Accumulated time: func 2.5650    prepare 0.3024    bound 1.9281    transfer 0.0633    finalize 0.2702    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04522 (19), -0.04511 (19), -0.04387 (19), -0.04361 (19), -0.04354 (19), -0.04353 (19), -0.04255 (19), -0.04229 (19), -0.04064 (19), -0.04056 (19), -0.04052 (19), -0.04045 (19), -0.04038 (19), -0.04028 (19), -0.03963 (19), -0.03952 (19), -0.03940 (19), -0.03938 (19), -0.03930 (19), -0.03913 (19), 
Length of domains: 3290
Time: pickout 0.0335    decision 0.1465    set_bounds 0.2541    solve 0.4825    add 0.0163    
Accumulated time: pickout 0.1123    decision 0.5592    set_bounds 0.4953    solve 2.5690    add 0.2331    
Current (lb-rhs): -0.04522186517715454
10661 domains visited
Cumulative time: 4.008786201477051

BaB round 11
batch: 3290
splitting decisions: 
split level 0: [/input-8, 1021] [/input-8, 276] [/input-8, 1021] [/input-8, 276] [/input-8, 1021] [/input-8, 276] [/input-8, 1021] [/input-8, 276] [/input-8, 1021] [/input-8, 1021] 
pruning_in_iteration open status: True
ratio of positive domain = 1664 / 6580 = 0.25288753799392094
pruning-in-iteration extra time: 0.0051195621490478516
Time: prepare 0.1430    bound 0.3654    transfer 0.0331    finalize 0.0370    func 0.5799    
Accumulated time: func 3.1449    prepare 0.4455    bound 2.2935    transfer 0.0964    finalize 0.3071    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04236 (20), -0.04210 (20), -0.04075 (20), -0.04058 (20), -0.04053 (20), -0.04052 (20), -0.04047 (20), -0.04036 (20), -0.03968 (20), -0.03956 (20), -0.03929 (20), -0.03929 (20), -0.03891 (20), -0.03849 (20), -0.03840 (20), -0.03778 (20), -0.03777 (20), -0.03771 (20), -0.03769 (20), -0.03762 (20), 
Length of domains: 4916
Time: pickout 0.0470    decision 0.1962    set_bounds 0.3009    solve 0.5814    add 0.0524    
Accumulated time: pickout 0.1593    decision 0.7554    set_bounds 0.7961    solve 3.1504    add 0.2855    
Current (lb-rhs): -0.04235553741455078
15577 domains visited
Cumulative time: 5.199988126754761

BaB round 12
batch: 4096
splitting decisions: 
split level 0: [/input-8, 1608] [/input-8, 1889] [/input-8, 1608] [/input-8, 1889] [/input-8, 1608] [/input-8, 1889] [/input-8, 1608] [/input-8, 1889] [/input-8, 1889] [/input-8, 276] 
pruning_in_iteration open status: True
ratio of positive domain = 2573 / 8192 = 0.3140869140625
pruning-in-iteration extra time: 0.005079030990600586
Time: prepare 0.1738    bound 0.3826    transfer 0.0474    finalize 0.0479    func 0.6531    
Accumulated time: func 3.7980    prepare 0.6196    bound 2.6761    transfer 0.1438    finalize 0.3550    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04069 (21), -0.04041 (21), -0.03908 (21), -0.03886 (21), -0.03879 (21), -0.03865 (21), -0.03788 (21), -0.03778 (21), -0.03776 (21), -0.03725 (21), -0.03708 (21), -0.03683 (21), -0.03642 (21), -0.03640 (20), -0.03637 (21), -0.03617 (21), -0.03613 (21), -0.03610 (21), -0.03608 (21), -0.03602 (21), 
Length of domains: 6439
Time: pickout 0.0573    decision 0.2363    set_bounds 0.3400    solve 0.6549    add 0.0221    
Accumulated time: pickout 0.2166    decision 0.9918    set_bounds 1.1361    solve 3.8053    add 0.3076    
Current (lb-rhs): -0.04068911075592041
21196 domains visited
current_vram/total_varm: 11.2GB/99.9GB, batch_size increase to 8192
Cumulative time: 6.530808687210083

BaB round 13
batch: 6439
splitting decisions: 
split level 0: [/input-8, 276] [/input-8, 1889] [/input-8, 276] [/input-8, 1889] [/input-8, 276] [/input-8, 1889] [/input-8, 276] [/input-8, 1889] [/input-8, 1608] [/input-8, 1889] 
pruning_in_iteration open status: True
ratio of positive domain = 3855 / 12878 = 0.2993477248019879
pruning-in-iteration extra time: 0.005165576934814453
Time: prepare 0.2725    bound 0.5138    transfer 0.0755    finalize 0.2556    func 1.1190    
Accumulated time: func 4.9170    prepare 0.8923    bound 3.1900    transfer 0.2193    finalize 0.6106    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03768 (22), -0.03737 (22), -0.03644 (22), -0.03599 (22), -0.03591 (22), -0.03586 (22), -0.03584 (22), -0.03579 (22), -0.03566 (22), -0.03560 (22), -0.03522 (22), -0.03490 (22), -0.03477 (22), -0.03473 (22), -0.03467 (22), -0.03467 (21), -0.03466 (22), -0.03439 (22), -0.03439 (22), -0.03409 (22), 
Length of domains: 9023
Time: pickout 0.0914    decision 0.5243    set_bounds 0.2856    solve 1.1217    add 0.1052    
Accumulated time: pickout 0.3080    decision 1.5161    set_bounds 1.4217    solve 4.9270    add 0.4127    
Current (lb-rhs): -0.03768235445022583
30219 domains visited
Cumulative time: 8.686584949493408

BaB round 14
batch: 8192
splitting decisions: 
split level 0: [/input-8, 1889] [/input-8, 678] [/input-8, 1011] [/input-8, 1608] [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 678] 
pruning_in_iteration open status: True
ratio of positive domain = 5527 / 16384 = 0.33734130859375
pruning-in-iteration extra time: 0.005190134048461914
Time: prepare 0.3434    bound 0.6024    transfer 0.0936    finalize 0.0975    func 1.1389    
Accumulated time: func 6.0559    prepare 1.2360    bound 3.7924    transfer 0.3129    finalize 0.7082    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03574 (23), -0.03540 (23), -0.03467 (21), -0.03446 (23), -0.03411 (23), -0.03407 (23), -0.03395 (23), -0.03393 (23), -0.03391 (23), -0.03370 (23), -0.03362 (23), -0.03323 (23), -0.03323 (23), -0.03279 (23), -0.03279 (23), -0.03276 (23), -0.03271 (23), -0.03268 (23), -0.03239 (23), -0.03213 (23), 
Length of domains: 11688
Time: pickout 0.1163    decision 0.4671    set_bounds 0.7125    solve 1.1425    add 0.0402    
Accumulated time: pickout 0.4243    decision 1.9832    set_bounds 2.1342    solve 6.0696    add 0.4529    
Current (lb-rhs): -0.035736262798309326
41076 domains visited
current_vram/total_varm: 21.3GB/99.9GB, batch_size increase to 16384
Cumulative time: 11.206929206848145

BaB round 15
batch: 11688
splitting decisions: 
split level 0: [/input-8, 678] [/input-8, 1021] [/input-8, 678] [/input-8, 1021] [/input-8, 678] [/input-8, 1021] [/input-8, 678] [/input-8, 1021] [/input-8, 630] [/input-8, 1608] 
pruning_in_iteration open status: True
ratio of positive domain = 8805 / 23376 = 0.3766683778234087
pruning-in-iteration extra time: 0.005274772644042969
Time: prepare 0.4959    bound 0.7896    transfer 0.1335    finalize 0.3802    func 1.8019    
Accumulated time: func 7.8578    prepare 1.7323    bound 4.5821    transfer 0.4463    finalize 1.0884    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03323 (24), -0.03289 (24), -0.03259 (24), -0.03255 (24), -0.03195 (24), -0.03168 (24), -0.03162 (22), -0.03153 (24), -0.03144 (24), -0.03140 (24), -0.03126 (24), -0.03119 (24), -0.03115 (24), -0.03112 (24), -0.03088 (24), -0.03080 (24), -0.03071 (22), -0.03051 (24), -0.03050 (24), -0.03036 (24), 
Length of domains: 14571
Time: pickout 0.1730    decision 0.8689    set_bounds 0.7136    solve 1.8068    add 0.0540    
Accumulated time: pickout 0.5973    decision 2.8521    set_bounds 2.8478    solve 7.8764    add 0.5069    
Current (lb-rhs): -0.033225059509277344
55647 domains visited
Cumulative time: 14.883059024810791

BaB round 16
batch: 14571
splitting decisions: 
split level 0: [/input-8, 1889] [/input-8, 678] [/input-8, 1889] [/input-8, 678] [/input-8, 1889] [/input-8, 678] [/input-8, 1889] [/input-8, 678] [/input-8, 678] [/input-8, 1063] 
pruning_in_iteration open status: True
ratio of positive domain = 13733 / 29142 = 0.4712442522819299
pruning-in-iteration extra time: 0.005613565444946289
Time: prepare 0.6318    bound 0.8629    transfer 0.1675    finalize 0.4499    func 2.1154    
Accumulated time: func 9.9732    prepare 2.3644    bound 5.4450    transfer 0.6138    finalize 1.5382    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03142 (25), -0.03108 (25), -0.03063 (25), -0.03040 (25), -0.03014 (25), -0.02986 (25), -0.02974 (25), -0.02965 (23), -0.02962 (25), -0.02960 (25), -0.02947 (25), -0.02930 (25), -0.02912 (25), -0.02905 (25), -0.02899 (25), -0.02886 (25), -0.02875 (25), -0.02870 (23), -0.02858 (25), -0.02856 (25), 
Length of domains: 15409
Time: pickout 0.2220    decision 1.0829    set_bounds 0.8876    solve 2.1218    add 0.0584    
Accumulated time: pickout 0.8193    decision 3.9350    set_bounds 3.7354    solve 9.9982    add 0.5654    
Current (lb-rhs): -0.03141742944717407
71056 domains visited
Cumulative time: 19.34777593612671

BaB round 17
batch: 15409
splitting decisions: 
split level 0: [/input-8, 1011] [/input-8, 549] [/input-8, 1011] [/input-8, 549] [/input-8, 1011] [/input-8, 549] [/input-8, 1011] [/input-8, 549] [/input-8, 1889] [/input-8, 678] 
pruning_in_iteration open status: True
ratio of positive domain = 15409 / 30818 = 0.5
pruning-in-iteration extra time: 0.0055370330810546875
Time: prepare 0.6851    bound 0.8757    transfer 0.1772    finalize 0.4916    func 2.2320    
Accumulated time: func 12.2052    prepare 3.0499    bound 6.3207    transfer 0.7910    finalize 2.0298    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02996 (26), -0.02962 (26), -0.02869 (26), -0.02858 (26), -0.02834 (26), -0.02829 (26), -0.02816 (26), -0.02813 (26), -0.02802 (26), -0.02785 (26), -0.02781 (26), -0.02753 (26), -0.02721 (26), -0.02712 (26), -0.02711 (24), -0.02709 (26), -0.02704 (26), -0.02692 (26), -0.02684 (26), -0.02673 (26), 
Length of domains: 15409
Time: pickout 0.2493    decision 1.1370    set_bounds 0.9450    solve 2.2394    add 0.0621    
Accumulated time: pickout 1.0687    decision 5.0720    set_bounds 4.6804    solve 12.2376    add 0.6275    
Current (lb-rhs): -0.02996361255645752
86465 domains visited
Cumulative time: 24.076212644577026

BaB round 18
batch: 15409
splitting decisions: 
split level 0: [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 1011] [/input-8, 549] [/input-8, 614] [/input-8, 1011] [/input-8, 614] [/input-8, 614] [/input-8, 1063] 
pruning_in_iteration open status: True
ratio of positive domain = 16859 / 30818 = 0.5470504250762541
pruning-in-iteration extra time: 0.005569934844970703
Time: prepare 0.7331    bound 0.8113    transfer 0.1754    finalize 0.5014    func 2.2247    
Accumulated time: func 14.4299    prepare 3.7834    bound 7.1320    transfer 0.9664    finalize 2.5312    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02860 (27), -0.02824 (27), -0.02732 (27), -0.02724 (27), -0.02698 (27), -0.02694 (27), -0.02682 (27), -0.02676 (27), -0.02665 (27), -0.02648 (27), -0.02645 (27), -0.02618 (27), -0.02586 (27), -0.02575 (27), -0.02572 (27), -0.02570 (27), -0.02555 (27), -0.02541 (27), -0.02530 (25), -0.02511 (27), 
Length of domains: 13959
Time: pickout 0.2590    decision 1.1371    set_bounds 0.9822    solve 2.2322    add 0.0691    
Accumulated time: pickout 1.3276    decision 6.2091    set_bounds 5.6626    solve 14.4699    add 0.6966    
Current (lb-rhs): -0.028599143028259277
100424 domains visited
Cumulative time: 28.860127687454224

BaB round 19
batch: 13959
splitting decisions: 
split level 0: [/input-8, 614] [/input-8, 1011] [/input-8, 1011] [/input-8, 614] [/input-8, 549] [/input-8, 549] [/input-8, 614] [/input-8, 614] [/input-8, 1011] [/input-8, 1011] 
pruning_in_iteration open status: True
ratio of positive domain = 15493 / 27918 = 0.5549466294147145
pruning-in-iteration extra time: 0.005469322204589844
Time: prepare 0.6588    bound 0.7394    transfer 0.1563    finalize 0.4845    func 2.0420    
Accumulated time: func 16.4719    prepare 4.4426    bound 7.8714    transfer 1.1228    finalize 3.0158    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02664 (28), -0.02628 (28), -0.02536 (28), -0.02507 (28), -0.02503 (28), -0.02489 (28), -0.02487 (28), -0.02480 (28), -0.02472 (28), -0.02453 (28), -0.02427 (28), -0.02425 (28), -0.02385 (26), -0.02383 (28), -0.02380 (28), -0.02366 (28), -0.02361 (28), -0.02357 (28), -0.02354 (28), -0.02334 (28), 
Length of domains: 12425
Time: pickout 0.2511    decision 1.0920    set_bounds 0.9293    solve 2.0489    add 0.0964    
Accumulated time: pickout 1.5788    decision 7.3011    set_bounds 6.5919    solve 16.5188    add 0.7930    
Current (lb-rhs): -0.026639044284820557
112849 domains visited
Cumulative time: 33.37753868103027

BaB round 20
batch: 12425
splitting decisions: 
split level 0: [/input-8, 630] [/input-8, 1889] [/input-8, 678] [/input-8, 678] [/input-8, 614] [/input-8, 276] [/input-12, 90] [/input-8, 549] [/input-8, 549] [/input-8, 996] 
pruning_in_iteration open status: True
ratio of positive domain = 13322 / 24850 = 0.5360965794768612
pruning-in-iteration extra time: 0.0053904056549072266
Time: prepare 0.5883    bound 0.6829    transfer 0.1421    finalize 0.1759    func 1.5918    
Accumulated time: func 18.0637    prepare 5.0313    bound 8.5544    transfer 1.2649    finalize 3.1917    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02342 (29), -0.02334 (29), -0.02317 (29), -0.02307 (29), -0.02272 (29), -0.02247 (27), -0.02242 (29), -0.02214 (29), -0.02189 (29), -0.02186 (29), -0.02178 (29), -0.02168 (29), -0.02167 (29), -0.02158 (29), -0.02155 (27), -0.02151 (29), -0.02149 (29), -0.02146 (29), -0.02132 (29), -0.02110 (29), 
Length of domains: 11528
Time: pickout 0.2280    decision 0.9942    set_bounds 0.8352    solve 1.5983    add 0.0517    
Accumulated time: pickout 1.8068    decision 8.2953    set_bounds 7.4271    solve 18.1171    add 0.8447    
Current (lb-rhs): -0.023424148559570312
124377 domains visited
Cumulative time: 37.182151794433594

BaB round 21
batch: 11528
splitting decisions: 
split level 0: [/input-8, 1011] [/input-8, 549] [/input-8, 549] [/input-8, 549] [/input-8, 549] [/input-12, 90] [/input-8, 1608] [/input-12, 90] [/input-8, 1608] [/input-8, 1063] 
pruning_in_iteration open status: True
ratio of positive domain = 12058 / 23056 = 0.5229875086745316
pruning-in-iteration extra time: 0.0054090023040771484
Time: prepare 0.5576    bound 0.6515    transfer 0.1307    finalize 0.1561    func 1.4984    
Accumulated time: func 19.5621    prepare 5.5892    bound 9.2058    transfer 1.3955    finalize 3.3477    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02123 (30), -0.02113 (30), -0.02095 (30), -0.02087 (30), -0.02053 (30), -0.02044 (28), -0.02023 (30), -0.01994 (30), -0.01978 (30), -0.01971 (30), -0.01966 (30), -0.01959 (30), -0.01954 (28), -0.01948 (30), -0.01947 (30), -0.01939 (30), -0.01932 (30), -0.01932 (30), -0.01931 (30), -0.01930 (30), 
Length of domains: 10998
Time: pickout 0.2191    decision 0.9126    set_bounds 1.0470    solve 1.5049    add 0.0714    
Accumulated time: pickout 2.0259    decision 9.2078    set_bounds 8.4740    solve 19.6220    add 0.9161    
Current (lb-rhs): -0.021232128143310547
135375 domains visited
Cumulative time: 41.02532696723938

BaB round 22
batch: 10998
splitting decisions: 
split level 0: [/input-8, 1608] [/input-8, 1063] [/input-8, 276] [/input-8, 630] [/input-8, 549] [/input-12, 90] [/input-8, 996] [/input-8, 549] [/input-8, 630] [/input-8, 1453] 
pruning_in_iteration open status: True
ratio of positive domain = 12120 / 21996 = 0.5510092744135298
pruning-in-iteration extra time: 0.005306720733642578
Time: prepare 0.5087    bound 0.6071    transfer 0.1276    finalize 0.4261    func 1.6725    
Accumulated time: func 21.2346    prepare 6.0983    bound 9.8129    transfer 1.5232    finalize 3.7738    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01932 (31), -0.01919 (31), -0.01862 (31), -0.01853 (31), -0.01831 (31), -0.01803 (31), -0.01781 (31), -0.01776 (31), -0.01766 (31), -0.01765 (31), -0.01764 (31), -0.01756 (31), -0.01744 (31), -0.01726 (31), -0.01723 (31), -0.01723 (29), -0.01715 (31), -0.01711 (31), -0.01710 (31), -0.01708 (31), 
Length of domains: 9876
Time: pickout 0.2165    decision 0.9046    set_bounds 0.7555    solve 1.6782    add 0.0470    
Accumulated time: pickout 2.2424    decision 10.1125    set_bounds 9.2295    solve 21.3001    add 0.9631    
Current (lb-rhs): -0.01932072639465332
145251 domains visited
Cumulative time: 44.71275806427002

BaB round 23
batch: 9876
splitting decisions: 
split level 0: [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 549] [/input-8, 614] [/input-8, 614] [/input-8, 614] 
pruning_in_iteration open status: True
ratio of positive domain = 11109 / 19752 = 0.5624240583232079
pruning-in-iteration extra time: 0.005236148834228516
Time: prepare 0.4801    bound 0.5497    transfer 0.1149    finalize 0.3363    func 1.4841    
Accumulated time: func 22.7186    prepare 6.5788    bound 10.3626    transfer 1.6381    finalize 4.1101    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01852 (32), -0.01786 (32), -0.01764 (32), -0.01737 (32), -0.01698 (32), -0.01697 (32), -0.01678 (32), -0.01649 (32), -0.01642 (32), -0.01630 (32), -0.01626 (32), -0.01621 (32), -0.01612 (32), -0.01609 (32), -0.01608 (32), -0.01604 (32), -0.01598 (32), -0.01590 (32), -0.01576 (32), -0.01563 (32), 
Length of domains: 8643
Time: pickout 0.1920    decision 0.5787    set_bounds 0.6730    solve 1.4904    add 0.0353    
Accumulated time: pickout 2.4344    decision 10.6911    set_bounds 9.9026    solve 22.7906    add 0.9984    
Current (lb-rhs): -0.01851886510848999
153894 domains visited
Cumulative time: 47.76023817062378

BaB round 24
batch: 8643
splitting decisions: 
split level 0: [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 276] [/input-8, 1063] [/input-8, 614] [/input-8, 614] [/input-8, 549] [/input-8, 614] [/input-8, 410] 
pruning_in_iteration open status: True
ratio of positive domain = 10037 / 17286 = 0.5806432951521463
pruning-in-iteration extra time: 0.005159854888916016
Time: prepare 0.4576    bound 0.4814    transfer 0.0979    finalize 0.1255    func 1.1642    
Accumulated time: func 23.8828    prepare 7.0368    bound 10.8440    transfer 1.7360    finalize 4.2356    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01590 (33), -0.01550 (33), -0.01502 (33), -0.01489 (33), -0.01481 (33), -0.01469 (33), -0.01459 (33), -0.01456 (33), -0.01455 (33), -0.01412 (33), -0.01410 (33), -0.01408 (33), -0.01407 (33), -0.01395 (33), -0.01393 (33), -0.01390 (33), -0.01387 (33), -0.01381 (33), -0.01375 (33), -0.01371 (33), 
Length of domains: 7249
Time: pickout 0.1784    decision 0.7230    set_bounds 0.6132    solve 1.1689    add 0.1303    
Accumulated time: pickout 2.6128    decision 11.4141    set_bounds 10.5158    solve 23.9594    add 1.1287    
Current (lb-rhs): -0.015900522470474243
161143 domains visited
Cumulative time: 50.699705839157104

BaB round 25
batch: 7249
splitting decisions: 
split level 0: [/input-8, 614] [/input-8, 549] [/input, 2235] [/input-8, 410] [/input-8, 410] [/input-8, 410] [/input-8, 410] [/input-8, 410] [/input-8, 410] [/input-8, 410] 
pruning_in_iteration open status: True
ratio of positive domain = 9232 / 14498 = 0.636777486549869
pruning-in-iteration extra time: 0.005212068557739258
Time: prepare 0.3980    bound 0.4155    transfer 0.0833    finalize 0.3402    func 1.2399    
Accumulated time: func 25.1227    prepare 7.4352    bound 11.2595    transfer 1.8193    finalize 4.5758    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01407 (34), -0.01338 (34), -0.01326 (34), -0.01312 (34), -0.01289 (34), -0.01269 (32), -0.01268 (34), -0.01266 (34), -0.01252 (34), -0.01249 (34), -0.01243 (34), -0.01241 (34), -0.01239 (34), -0.01233 (34), -0.01216 (34), -0.01207 (34), -0.01203 (32), -0.01201 (34), -0.01198 (34), -0.01197 (34), 
Length of domains: 5266
Time: pickout 0.1922    decision 0.7674    set_bounds 0.3473    solve 1.2443    add 0.0292    
Accumulated time: pickout 2.8051    decision 12.1815    set_bounds 10.8630    solve 25.2037    add 1.1578    
Current (lb-rhs): -0.014071732759475708
166409 domains visited
Cumulative time: 53.34868264198303

BaB round 26
batch: 5266
splitting decisions: 
split level 0: [/input-8, 410] [/input, 457] [/input, 442] [/input, 442] [/input, 457] [/input, 442] [/input, 442] [/input-8, 924] [/input-8, 630] [/input-8, 410] 
pruning_in_iteration open status: True
ratio of positive domain = 6817 / 10532 = 0.6472654766426129
pruning-in-iteration extra time: 0.0049664974212646484
Time: prepare 0.2761    bound 0.3599    transfer 0.0617    finalize 0.0725    func 0.7712    
Accumulated time: func 25.8939    prepare 7.7116    bound 11.6194    transfer 1.8810    finalize 4.6483    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01196 (35), -0.01140 (35), -0.01126 (35), -0.01126 (35), -0.01115 (35), -0.01095 (35), -0.01077 (35), -0.01072 (35), -0.01072 (35), -0.01058 (35), -0.01054 (35), -0.01039 (35), -0.01035 (35), -0.01026 (35), -0.01023 (33), -0.01022 (35), -0.01020 (35), -0.00999 (35), -0.00997 (35), -0.00985 (35), 
Length of domains: 3715
Time: pickout 0.1173    decision 0.3131    set_bounds 0.4019    solve 0.7742    add 0.0285    
Accumulated time: pickout 2.9224    decision 12.4946    set_bounds 11.2649    solve 25.9779    add 1.1864    
Current (lb-rhs): -0.011956751346588135
170124 domains visited
Cumulative time: 55.03157114982605

BaB round 27
batch: 3715
splitting decisions: 
split level 0: [/input, 457] [/input, 457] [/input, 2251] [/input, 457] [/input, 457] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input, 457] 
pruning_in_iteration open status: True
ratio of positive domain = 4979 / 7430 = 0.6701211305518169
pruning-in-iteration extra time: 0.0051021575927734375
Time: prepare 0.3807    bound 0.3373    transfer 0.0430    finalize 0.0549    func 0.8176    
Accumulated time: func 26.7114    prepare 8.0925    bound 11.9567    transfer 1.9240    finalize 4.7032    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01028 (36), -0.01023 (36), -0.00982 (36), -0.00964 (36), -0.00959 (36), -0.00955 (36), -0.00942 (36), -0.00930 (36), -0.00922 (36), -0.00913 (36), -0.00907 (36), -0.00883 (36), -0.00873 (36), -0.00867 (36), -0.00857 (36), -0.00855 (36), -0.00850 (36), -0.00843 (36), -0.00838 (36), -0.00832 (36), 
Length of domains: 2451
Time: pickout 0.0864    decision 0.2237    set_bounds 0.1602    solve 0.8196    add 0.0180    
Accumulated time: pickout 3.0088    decision 12.7183    set_bounds 11.4250    solve 26.7975    add 1.2044    
Current (lb-rhs): -0.010275840759277344
172575 domains visited
Cumulative time: 56.37432861328125

BaB round 28
batch: 2451
splitting decisions: 
split level 0: [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-8, 648] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] 
pruning_in_iteration open status: True
ratio of positive domain = 3428 / 4902 = 0.6993064055487557
pruning-in-iteration extra time: 0.00499415397644043
Time: prepare 0.1356    bound 0.2994    transfer 0.0238    finalize 0.0328    func 0.4922    
Accumulated time: func 27.2036    prepare 8.2284    bound 12.2561    transfer 1.9477    finalize 4.7360    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00910 (37), -0.00842 (37), -0.00830 (37), -0.00825 (37), -0.00816 (37), -0.00770 (37), -0.00765 (37), -0.00756 (37), -0.00754 (37), -0.00753 (37), -0.00748 (37), -0.00736 (37), -0.00723 (37), -0.00699 (37), -0.00699 (37), -0.00698 (37), -0.00695 (37), -0.00681 (37), -0.00674 (37), -0.00673 (37), 
Length of domains: 1474
Time: pickout 0.0637    decision 0.1519    set_bounds 0.1042    solve 0.4938    add 0.0090    
Accumulated time: pickout 3.0724    decision 12.8702    set_bounds 11.5292    solve 27.2913    add 1.2134    
Current (lb-rhs): -0.009104609489440918
174049 domains visited
Cumulative time: 57.223363161087036

BaB round 29
batch: 1474
splitting decisions: 
split level 0: [/input-8, 924] [/input-8, 924] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-8, 924] [/input-12, 45] [/input-8, 924] [/input-8, 924] [/input-8, 924] 
pruning_in_iteration open status: True
ratio of positive domain = 2124 / 2948 = 0.7204884667571234
pruning-in-iteration extra time: 0.004806995391845703
Time: prepare 0.0765    bound 0.2381    transfer 0.0094    finalize 0.0196    func 0.3439    
Accumulated time: func 27.5475    prepare 8.3052    bound 12.4942    transfer 1.9571    finalize 4.7556    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00753 (38), -0.00690 (38), -0.00685 (38), -0.00673 (38), -0.00664 (38), -0.00655 (38), -0.00617 (38), -0.00613 (38), -0.00604 (38), -0.00596 (38), -0.00596 (38), -0.00592 (38), -0.00587 (38), -0.00585 (38), -0.00580 (38), -0.00555 (38), -0.00549 (38), -0.00545 (38), -0.00542 (38), -0.00538 (38), 
Length of domains: 824
Time: pickout 0.0411    decision 0.0989    set_bounds 0.2333    solve 0.3445    add 0.0034    
Accumulated time: pickout 3.1135    decision 12.9691    set_bounds 11.7625    solve 27.6358    add 1.2168    
Current (lb-rhs): -0.007530331611633301
174873 domains visited
Cumulative time: 57.956774950027466

BaB round 30
batch: 824
splitting decisions: 
split level 0: [/input, 3468] [/input, 3468] [/input, 1626] [/input, 3468] [/input, 1675] [/input, 1626] [/input, 3468] [/input-8, 412] [/input, 1675] [/input, 1675] 
pruning_in_iteration open status: True
ratio of positive domain = 1217 / 1648 = 0.7384708737864077
pruning-in-iteration extra time: 0.004855155944824219
Time: prepare 0.0423    bound 0.2230    transfer 0.0067    finalize 0.0118    func 0.2839    
Accumulated time: func 27.8314    prepare 8.3477    bound 12.7172    transfer 1.9638    finalize 4.7674    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00596 (39), -0.00593 (39), -0.00528 (39), -0.00524 (39), -0.00522 (39), -0.00517 (39), -0.00512 (39), -0.00482 (39), -0.00461 (39), -0.00453 (39), -0.00452 (39), -0.00448 (39), -0.00424 (39), -0.00418 (39), -0.00417 (39), -0.00417 (39), -0.00415 (39), -0.00414 (39), -0.00412 (39), -0.00407 (39), 
Length of domains: 431
Time: pickout 0.0233    decision 0.0540    set_bounds 0.0317    solve 0.2851    add 0.0022    
Accumulated time: pickout 3.1368    decision 13.0231    set_bounds 11.7942    solve 27.9209    add 1.2190    
Current (lb-rhs): -0.005964219570159912
175304 domains visited
Cumulative time: 58.359740018844604

BaB round 31
batch: 431
splitting decisions: 
split level 0: [/input-8, 412] [/input-8, 412] [/input, 1626] [/input-8, 412] [/input-8, 412] [/input-8, 412] [/input-8, 412] [/input-8, 412] [/input-8, 412] [/input, 1626] 
pruning_in_iteration open status: True
ratio of positive domain = 680 / 862 = 0.7888631090487239
pruning-in-iteration extra time: 0.004631519317626953
Time: prepare 0.0223    bound 0.1109    transfer 0.0023    finalize 0.0053    func 0.1409    
Accumulated time: func 27.9723    prepare 8.3702    bound 12.8281    transfer 1.9661    finalize 4.7727    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00424 (40), -0.00419 (40), -0.00374 (40), -0.00355 (40), -0.00355 (40), -0.00351 (40), -0.00344 (40), -0.00339 (40), -0.00321 (40), -0.00305 (40), -0.00301 (40), -0.00294 (40), -0.00293 (40), -0.00292 (40), -0.00279 (40), -0.00279 (40), -0.00270 (40), -0.00256 (40), -0.00251 (40), -0.00250 (40), 
Length of domains: 182
Time: pickout 0.0155    decision 0.0400    set_bounds 0.0175    solve 0.1410    add 0.0020    
Accumulated time: pickout 3.1523    decision 13.0631    set_bounds 11.8117    solve 28.0620    add 1.2210    
Current (lb-rhs): -0.004235327243804932
175486 domains visited
Cumulative time: 58.578760385513306

BaB round 32
batch: 182
splitting decisions: 
split level 0: [/input-8, 412] [/input-8, 412] [/input-8, 412] [/input-8, 412] [/input-8, 412] [/input-8, 412] [/input, 1626] [/input, 1626] [/input-8, 1648] [/input-8, 1648] 
pruning_in_iteration open status: True
ratio of positive domain = 286 / 364 = 0.7857142857142857
pruning-in-iteration extra time: 0.004656076431274414
Time: prepare 0.0096    bound 0.1316    transfer 0.0015    finalize 0.0024    func 0.1453    
Accumulated time: func 28.1175    prepare 8.3800    bound 12.9598    transfer 1.9676    finalize 4.7751    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00297 (41), -0.00293 (41), -0.00292 (41), -0.00234 (41), -0.00231 (41), -0.00222 (41), -0.00217 (41), -0.00212 (41), -0.00200 (41), -0.00198 (41), -0.00192 (41), -0.00159 (41), -0.00158 (41), -0.00153 (41), -0.00145 (41), -0.00145 (41), -0.00143 (41), -0.00143 (41), -0.00136 (41), -0.00135 (41), 
Length of domains: 78
Time: pickout 0.0061    decision 0.0249    set_bounds 0.0075    solve 0.1454    add 0.0019    
Accumulated time: pickout 3.1584    decision 13.0881    set_bounds 11.8193    solve 28.2073    add 1.2229    
Current (lb-rhs): -0.002965986728668213
175564 domains visited
Cumulative time: 58.76595616340637

BaB round 33
batch: 78
splitting decisions: 
split level 0: [/input, 1626] [/input-8, 1069] [/input-8, 924] [/input-8, 924] [/input-8, 1640] [/input, 3468] [/input-8, 1069] [/input-8, 648] [/input-8, 1648] [/input-8, 1069] 
split level 1: [/input-8, 924] [/input-8, 924] [/input-8, 648] [/input-8, 648] [/input-8, 648] [/input-8, 648] [/input-8, 648] [/input-8, 1625] [/input-8, 648] [/input-8, 924] 
pruning_in_iteration open status: True
ratio of positive domain = 310 / 312 = 0.9935897435897436
pruning-in-iteration extra time: 0.004644632339477539
Time: prepare 0.0081    bound 0.1169    transfer 0.0013    finalize 0.0022    func 0.1286    
Accumulated time: func 28.2461    prepare 8.3882    bound 13.0767    transfer 1.9690    finalize 4.7773    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00053 (43), -0.00037 (43), 
Length of domains: 2
Time: pickout 0.0030    decision 0.0186    set_bounds 0.0089    solve 0.1287    add 0.0006    
Accumulated time: pickout 3.1614    decision 13.1067    set_bounds 11.8282    solve 28.3360    add 1.2235    
Current (lb-rhs): -0.0005317628383636475
175566 domains visited
Cumulative time: 58.92717170715332

BaB round 34
batch: 2
splitting decisions: 
split level 0: [/input-8, 1648] [/input-8, 1648] 
split level 1: [/input-8, 1071] [/input-8, 1071] 
split level 2: [/input-8, 1453] [/input-8, 1453] 
split level 3: [/input, 1769] [/input, 1769] 
split level 4: [/input-8, 1625] [/input-8, 1625] 
split level 5: [/input, 2537] [/input, 2537] 
split level 6: [/input, 3496] [/input, 3496] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.124641418457031e-05
Time: prepare 0.0065    bound 0.0039    transfer 0.0008    finalize 0.0013    func 0.0126    
Accumulated time: func 28.2587    prepare 8.3951    bound 13.0806    transfer 1.9697    finalize 4.7786    
all_split False
Length of domains: 0
Time: pickout 0.0014    decision 0.0197    set_bounds 0.0173    solve 0.0126    add 0.0001    
Accumulated time: pickout 3.1628    decision 13.1264    set_bounds 11.8455    solve 28.3486    add 1.2235    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
175566 domains visited
Cumulative time: 58.97897243499756


Properties batch 2, size 1
Remaining timeout: 139.3562994003296
Verifying property 2 with 1 instances.
##### Instance 167 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.27715933322906494.

Properties batch 3, size 1
Remaining timeout: 139.2181956768036
Verifying property 3 with 1 instances.
##### Instance 167 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5049715042114258.

Properties batch 4, size 1
Remaining timeout: 139.11272478103638
Verifying property 4 with 1 instances.
##### Instance 167 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.39338546991348267.

Properties batch 5, size 1
Remaining timeout: 139.00685834884644
Verifying property 5 with 1 instances.
##### Instance 167 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.0426524877548218.

Properties batch 6, size 1
Remaining timeout: 138.9011652469635
Verifying property 6 with 1 instances.
##### Instance 167 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.4045829772949219.

Properties batch 7, size 1
Remaining timeout: 138.7952845096588
Verifying property 7 with 1 instances.
##### Instance 167 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.43028849]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.73988724, -9.75906086, -5.44053173, -6.54372168, -6.64882469,
        -6.77933979, -7.41226196, -7.94059706, -5.61829853, -8.84854412],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.43028849]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 625
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 280
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 926
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 82] 
split level 1: [/input-12, 46] 
split level 2: [/input-12, 17] 
split level 3: [/input-12, 53] 
split level 4: [/input-12, 31] 
split level 5: [/input-12, 54] 
split level 6: [/input-12, 26] 
split level 7: [/input-8, 1323] 
pruning_in_iteration open status: True
ratio of positive domain = 247 / 256 = 0.96484375
pruning-in-iteration extra time: 0.0046274662017822266
Time: prepare 0.0031    bound 0.1233    transfer 0.0017    finalize 0.0019    func 0.1300    
Accumulated time: func 0.1300    prepare 0.0035    bound 0.1233    transfer 0.0017    finalize 0.0019    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.10593 (8), -0.09333 (8), -0.07829 (8), -0.06699 (8), -0.03447 (8), -0.02255 (8), -0.01585 (8), -0.01556 (8), -0.00497 (8), 
Length of domains: 9
Time: pickout 0.0004    decision 0.0241    set_bounds 0.0186    solve 0.1300    add 0.0434    
Accumulated time: pickout 0.0004    decision 0.0241    set_bounds 0.0186    solve 0.1300    add 0.0434    
Current (lb-rhs): -0.10592716932296753
9 domains visited
Cumulative time: 0.22485089302062988

BaB round 2
batch: 9
splitting decisions: 
split level 0: [/input-12, 99] [/input-12, 99] [/input-12, 99] [/input-12, 99] [/input-12, 99] [/input-12, 99] [/input-12, 99] [/input-12, 99] [/input-12, 99] 
split level 1: [/input-8, 413] [/input-8, 1436] [/input-8, 1436] [/input-8, 1436] [/input-8, 413] [/input-8, 1436] [/input-8, 118] [/input-8, 1436] [/input-8, 1436] 
split level 2: [/input-8, 924] [/input-8, 413] [/input-8, 118] [/input-8, 1437] [/input-8, 924] [/input-8, 413] [/input-8, 410] [/input-8, 118] [/input-8, 1437] 
split level 3: [/input-8, 1620] [/input-8, 924] [/input-8, 413] [/input-8, 924] [/input-8, 1620] [/input-8, 924] [/input, 1623] [/input-8, 413] [/input-8, 924] 
split level 4: [/input-8, 1628] [/input-8, 1620] [/input-8, 410] [/input-8, 410] [/input-8, 1628] [/input-8, 1620] [/input-8, 550] [/input-8, 410] [/input-8, 410] 
pruning_in_iteration open status: True
ratio of positive domain = 221 / 288 = 0.7673611111111112
pruning-in-iteration extra time: 0.004832029342651367
Time: prepare 0.0060    bound 0.1352    transfer 0.0014    finalize 0.0018    func 0.1444    
Accumulated time: func 0.2744    prepare 0.0098    bound 0.2585    transfer 0.0031    finalize 0.0036    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07939 (13), -0.07864 (13), -0.07418 (13), -0.07375 (13), -0.07349 (13), -0.07301 (13), -0.06731 (13), -0.06664 (13), -0.06631 (13), -0.06572 (13), -0.06452 (13), -0.06415 (13), -0.06129 (13), -0.06089 (13), -0.06086 (13), -0.06075 (13), -0.06040 (13), -0.06017 (13), -0.05890 (13), -0.05859 (13), 
Length of domains: 67
Time: pickout 0.0012    decision 0.0194    set_bounds 0.0160    solve 0.1445    add 0.0104    
Accumulated time: pickout 0.0015    decision 0.0435    set_bounds 0.0346    solve 0.2745    add 0.0538    
Current (lb-rhs): -0.07939213514328003
76 domains visited
Cumulative time: 0.417177677154541

BaB round 3
batch: 67
splitting decisions: 
split level 0: [/input-8, 1437] [/input-8, 118] [/input-8, 1437] [/input-8, 118] [/input-8, 1437] [/input-8, 118] [/input-8, 1437] [/input-8, 118] [/input-8, 1437] [/input-8, 118] 
split level 1: [/input-8, 924] [/input-8, 630] [/input-8, 924] [/input-8, 630] [/input-8, 924] [/input-8, 630] [/input-8, 924] [/input-8, 413] [/input-8, 924] [/input-8, 630] 
pruning_in_iteration open status: False
ratio of positive domain = 22 / 268 = 0.08208955223880599
pruning-in-iteration extra time: 5.054473876953125e-05
Time: prepare 0.0051    bound 0.0932    transfer 0.0018    finalize 0.0014    func 0.1015    
Accumulated time: func 0.3759    prepare 0.0150    bound 0.3517    transfer 0.0048    finalize 0.0051    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07178 (15), -0.07104 (15), -0.06651 (15), -0.06585 (15), -0.06584 (15), -0.06510 (15), -0.06228 (15), -0.06152 (15), -0.06039 (15), -0.05998 (15), -0.05977 (15), -0.05920 (15), -0.05882 (15), -0.05872 (15), -0.05814 (15), -0.05802 (15), -0.05738 (15), -0.05702 (15), -0.05542 (15), -0.05481 (15), 
Length of domains: 246
Time: pickout 0.0018    decision 0.0174    set_bounds 0.0069    solve 0.1016    add 0.0476    
Accumulated time: pickout 0.0034    decision 0.0609    set_bounds 0.0415    solve 0.3761    add 0.1013    
Current (lb-rhs): -0.07177597284317017
322 domains visited
Cumulative time: 0.5996265411376953

BaB round 4
batch: 246
splitting decisions: 
split level 0: [/input-8, 413] [/input, 1623] [/input-8, 413] [/input, 1623] [/input-8, 413] [/input, 1623] [/input-8, 630] [/input, 1623] [/input-8, 413] [/input, 1623] 
pruning_in_iteration open status: False
ratio of positive domain = 31 / 492 = 0.0630081300813008
pruning-in-iteration extra time: 7.462501525878906e-05
Time: prepare 0.0104    bound 0.1085    transfer 0.0032    finalize 0.0033    func 0.1258    
Accumulated time: func 0.5017    prepare 0.0256    bound 0.4601    transfer 0.0080    finalize 0.0083    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06845 (16), -0.06772 (16), -0.06306 (16), -0.06252 (16), -0.06240 (16), -0.06179 (16), -0.05836 (16), -0.05760 (16), -0.05607 (16), -0.05587 (16), -0.05560 (16), -0.05544 (16), -0.05533 (16), -0.05526 (16), -0.05515 (16), -0.05494 (16), -0.05475 (16), -0.05456 (16), -0.05344 (16), -0.05309 (16), 
Length of domains: 460
Time: pickout 0.0173    decision 0.0284    set_bounds 0.0097    solve 0.1259    add 0.0142    
Accumulated time: pickout 0.0206    decision 0.0893    set_bounds 0.0512    solve 0.5020    add 0.1155    
Current (lb-rhs): -0.06844651699066162
782 domains visited
Cumulative time: 0.7957735061645508

BaB round 5
batch: 460
splitting decisions: 
split level 0: [/input-8, 1571] [/input-8, 1620] [/input-8, 1571] [/input-8, 1620] [/input, 1623] [/input-8, 1620] [/input, 1623] [/input-8, 1620] [/input-8, 1571] [/input-8, 1620] 
pruning_in_iteration open status: False
ratio of positive domain = 94 / 920 = 0.10217391304347823
pruning-in-iteration extra time: 5.602836608886719e-05
Time: prepare 0.0206    bound 0.1095    transfer 0.0041    finalize 0.0059    func 0.1402    
Accumulated time: func 0.6419    prepare 0.0463    bound 0.5697    transfer 0.0121    finalize 0.0142    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06509 (17), -0.06448 (17), -0.06178 (17), -0.06092 (17), -0.05917 (17), -0.05901 (17), -0.05859 (17), -0.05842 (17), -0.05589 (17), -0.05583 (17), -0.05508 (17), -0.05497 (17), -0.05475 (17), -0.05438 (17), -0.05223 (17), -0.05212 (17), -0.05198 (17), -0.05190 (17), -0.05173 (17), -0.05161 (17), 
Length of domains: 824
Time: pickout 0.0073    decision 0.0404    set_bounds 0.0186    solve 0.1412    add 0.0049    
Accumulated time: pickout 0.0280    decision 0.1297    set_bounds 0.0697    solve 0.6432    add 0.1204    
Current (lb-rhs): -0.06508630514144897
1606 domains visited
Cumulative time: 1.0093207359313965

BaB round 6
batch: 824
splitting decisions: 
split level 0: [/input, 1623] [/input, 1623] [/input-8, 1571] [/input-8, 550] [/input-8, 1571] [/input, 1623] [/input-8, 550] [/input, 1623] [/input-8, 550] [/input-8, 1571] 
pruning_in_iteration open status: False
ratio of positive domain = 191 / 1648 = 0.11589805825242716
pruning-in-iteration extra time: 5.340576171875e-05
Time: prepare 0.0389    bound 0.1123    transfer 0.0046    finalize 0.0109    func 0.1668    
Accumulated time: func 0.8087    prepare 0.0854    bound 0.6819    transfer 0.0167    finalize 0.0252    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06110 (18), -0.06053 (18), -0.05810 (18), -0.05775 (18), -0.05707 (18), -0.05700 (18), -0.05602 (18), -0.05551 (18), -0.05515 (18), -0.05478 (18), -0.05464 (18), -0.05372 (18), -0.05349 (18), -0.05300 (18), -0.05275 (18), -0.05206 (18), -0.05182 (18), -0.05167 (18), -0.05109 (18), -0.05096 (18), 
Length of domains: 1452
Time: pickout 0.0122    decision 0.0548    set_bounds 0.0297    solve 0.1672    add 0.0060    
Accumulated time: pickout 0.0402    decision 0.1845    set_bounds 0.0994    solve 0.8104    add 0.1264    
Current (lb-rhs): -0.06110101938247681
3058 domains visited
Cumulative time: 1.2813503742218018

BaB round 7
batch: 1452
splitting decisions: 
split level 0: [/input-8, 1572] [/input-8, 1572] [/input-8, 1571] [/input-8, 1572] [/input-8, 1571] [/input-8, 1572] [/input-8, 1571] [/input-8, 1572] [/input-8, 1571] [/input-8, 1572] 
pruning_in_iteration open status: False
ratio of positive domain = 470 / 2904 = 0.1618457300275482
pruning-in-iteration extra time: 8.296966552734375e-05
Time: prepare 0.0698    bound 0.1632    transfer 0.0139    finalize 0.0186    func 0.2658    
Accumulated time: func 1.0745    prepare 0.1554    bound 0.8451    transfer 0.0307    finalize 0.0438    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05678 (19), -0.05624 (19), -0.05520 (19), -0.05461 (19), -0.05399 (19), -0.05373 (19), -0.05276 (19), -0.05273 (19), -0.05217 (19), -0.05195 (19), -0.05189 (19), -0.05154 (19), -0.05143 (19), -0.05138 (19), -0.05136 (19), -0.05104 (19), -0.05084 (19), -0.05021 (19), -0.04977 (19), -0.04941 (19), 
Length of domains: 2422
Time: pickout 0.0219    decision 0.0964    set_bounds 0.0555    solve 0.2665    add 0.0100    
Accumulated time: pickout 0.0621    decision 0.2808    set_bounds 0.1549    solve 1.0768    add 0.1364    
Current (lb-rhs): -0.056784987449645996
5480 domains visited
Cumulative time: 1.736940860748291

BaB round 8
batch: 2422
splitting decisions: 
split level 0: [/input-8, 1148] [/input-8, 1148] [/input-8, 1148] [/input-8, 1148] [/input-8, 1148] [/input-8, 1148] [/input-8, 630] [/input-8, 1148] [/input-8, 1148] [/input-8, 1148] 
pruning_in_iteration open status: True
ratio of positive domain = 1707 / 4844 = 0.35239471511147813
pruning-in-iteration extra time: 0.004191160202026367
Time: prepare 0.1171    bound 0.3105    transfer 0.0287    finalize 0.0300    func 0.4868    
Accumulated time: func 1.5613    prepare 0.2728    bound 1.1556    transfer 0.0594    finalize 0.0738    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05309 (20), -0.05254 (20), -0.05144 (20), -0.05101 (20), -0.05082 (20), -0.05053 (20), -0.05041 (20), -0.04983 (20), -0.04982 (20), -0.04948 (20), -0.04944 (20), -0.04929 (20), -0.04916 (20), -0.04892 (20), -0.04884 (20), -0.04857 (20), -0.04780 (20), -0.04774 (20), -0.04771 (20), -0.04765 (20), 
Length of domains: 3137
Time: pickout 0.0392    decision 0.2963    set_bounds 0.1013    solve 0.4879    add 0.1055    
Accumulated time: pickout 0.1013    decision 0.5772    set_bounds 0.2562    solve 1.5647    add 0.2419    
Current (lb-rhs): -0.05309140682220459
8617 domains visited
Cumulative time: 2.7792046070098877

BaB round 9
batch: 3137
splitting decisions: 
split level 0: [/input-8, 1325] [/input-8, 1325] [/input-8, 1325] [/input-8, 1620] [/input-8, 1148] [/input-8, 1325] [/input-8, 630] [/input-8, 1620] [/input-8, 1325] [/input, 1623] 
pruning_in_iteration open status: True
ratio of positive domain = 1604 / 6274 = 0.255658272234619
pruning-in-iteration extra time: 0.005048036575317383
Time: prepare 0.1616    bound 0.3519    transfer 0.0371    finalize 0.1800    func 0.7323    
Accumulated time: func 2.2936    prepare 0.4345    bound 1.5075    transfer 0.0965    finalize 0.2537    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05154 (21), -0.05095 (21), -0.04990 (21), -0.04939 (21), -0.04928 (21), -0.04896 (21), -0.04881 (21), -0.04830 (21), -0.04788 (21), -0.04784 (21), -0.04762 (21), -0.04734 (21), -0.04728 (21), -0.04705 (21), -0.04625 (21), -0.04621 (21), -0.04612 (21), -0.04612 (21), -0.04579 (21), -0.04577 (21), 
Length of domains: 4670
Time: pickout 0.0503    decision 0.1886    set_bounds 0.1305    solve 0.7335    add 0.0237    
Accumulated time: pickout 0.1516    decision 0.7657    set_bounds 0.3867    solve 2.2983    add 0.2656    
Current (lb-rhs): -0.0515369176864624
13287 domains visited
Cumulative time: 3.9193615913391113

BaB round 10
batch: 4096
splitting decisions: 
split level 0: [/input-8, 1325] [/input-8, 1438] [/input-8, 1325] [/input-8, 1438] [/input-8, 1438] [/input-8, 1438] [/input-8, 1438] [/input-8, 1438] [/input-8, 1438] [/input-8, 1438] 
pruning_in_iteration open status: True
ratio of positive domain = 3919 / 8192 = 0.4783935546875
pruning-in-iteration extra time: 0.005098581314086914
Time: prepare 0.2056    bound 0.3596    transfer 0.0465    finalize 0.2210    func 0.8349    
Accumulated time: func 3.1285    prepare 0.6404    bound 1.8671    transfer 0.1430    finalize 0.4747    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05010 (22), -0.04951 (22), -0.04896 (21), -0.04846 (22), -0.04830 (21), -0.04788 (22), -0.04784 (22), -0.04784 (21), -0.04730 (22), -0.04638 (22), -0.04617 (22), -0.04588 (22), -0.04579 (21), -0.04577 (22), -0.04562 (22), -0.04482 (22), -0.04478 (22), -0.04465 (22), -0.04463 (22), -0.04456 (21), 
Length of domains: 4847
Time: pickout 0.0679    decision 0.2348    set_bounds 0.1735    solve 0.8365    add 0.0210    
Accumulated time: pickout 0.2195    decision 1.0006    set_bounds 0.5602    solve 3.1347    add 0.2866    
Current (lb-rhs): -0.05010157823562622
17560 domains visited
current_vram/total_varm: 10.9GB/99.9GB, batch_size increase to 8192
Cumulative time: 5.2790796756744385

BaB round 11
batch: 4847
splitting decisions: 
split level 0: [/input-8, 1438] [/input-8, 1438] [/input-8, 1438] [/input-8, 1572] [/input-8, 1438] [/input-8, 1572] [/input-8, 1438] [/input-8, 1572] [/input-8, 1438] [/input-8, 1438] 
pruning_in_iteration open status: True
ratio of positive domain = 3243 / 9694 = 0.33453682690323916
pruning-in-iteration extra time: 0.005060434341430664
Time: prepare 0.2446    bound 0.4090    transfer 0.0569    finalize 0.2017    func 0.9135    
Accumulated time: func 4.0420    prepare 0.8852    bound 2.2760    transfer 0.1999    finalize 0.6764    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04750 (22), -0.04687 (22), -0.04634 (22), -0.04586 (23), -0.04527 (23), -0.04442 (23), -0.04439 (23), -0.04436 (22), -0.04423 (23), -0.04384 (23), -0.04382 (23), -0.04361 (23), -0.04317 (22), -0.04303 (22), -0.04293 (23), -0.04289 (23), -0.04275 (23), -0.04242 (22), -0.04232 (23), -0.04211 (23), 
Length of domains: 6451
Time: pickout 0.0765    decision 0.2858    set_bounds 0.2129    solve 0.9154    add 0.0282    
Accumulated time: pickout 0.2959    decision 1.2864    set_bounds 0.7731    solve 4.0501    add 0.3148    
Current (lb-rhs): -0.04750007390975952
24011 domains visited
Cumulative time: 6.821284055709839

BaB round 12
batch: 6451
splitting decisions: 
split level 0: [/input-8, 1620] [/input-8, 550] [/input-8, 1438] [/input-8, 1620] [/input-8, 1325] [/input-8, 1438] [/input, 1623] [/input-8, 1325] [/input-8, 550] [/input-8, 1438] 
pruning_in_iteration open status: True
ratio of positive domain = 4010 / 12902 = 0.3108045264300109
pruning-in-iteration extra time: 0.005171537399291992
Time: prepare 0.3289    bound 0.5107    transfer 0.0765    finalize 0.0687    func 0.9864    
Accumulated time: func 5.0283    prepare 1.2144    bound 2.7867    transfer 0.2764    finalize 0.7451    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04359 (23), -0.04324 (23), -0.04261 (24), -0.04210 (23), -0.04202 (24), -0.04174 (23), -0.04098 (24), -0.04093 (24), -0.04059 (23), -0.04054 (23), -0.04036 (24), -0.04034 (24), -0.04008 (23), -0.03991 (24), -0.03944 (24), -0.03933 (24), -0.03926 (24), -0.03920 (23), -0.03909 (24), -0.03888 (24), 
Length of domains: 8892
Time: pickout 0.1047    decision 0.3766    set_bounds 0.4413    solve 0.9893    add 0.0405    
Accumulated time: pickout 0.4006    decision 1.6629    set_bounds 1.2145    solve 5.0394    add 0.3553    
Current (lb-rhs): -0.04359012842178345
32903 domains visited
Cumulative time: 8.805294513702393

BaB round 13
batch: 8192
splitting decisions: 
split level 0: [/input-8, 430] [/input-8, 925] [/input-8, 925] [/input-8, 1628] [/input-8, 1628] [/input-8, 1628] [/input-8, 1628] [/input-8, 1628] [/input-8, 1572] [/input-8, 1628] 
pruning_in_iteration open status: True
ratio of positive domain = 4870 / 16384 = 0.2972412109375
pruning-in-iteration extra time: 0.005305290222167969
Time: prepare 0.4179    bound 0.6230    transfer 0.0920    finalize 0.2779    func 1.4124    
Accumulated time: func 6.4407    prepare 1.6327    bound 3.4097    transfer 0.3684    finalize 1.0231    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04359 (23), -0.04174 (23), -0.04093 (24), -0.04059 (23), -0.04034 (24), -0.03997 (24), -0.03920 (23), -0.03917 (25), -0.03884 (24), -0.03858 (23), -0.03857 (25), -0.03817 (25), -0.03785 (23), -0.03757 (25), -0.03754 (25), -0.03745 (23), -0.03727 (23), -0.03705 (24), -0.03691 (25), -0.03686 (25), 
Length of domains: 12214
Time: pickout 0.1394    decision 0.6395    set_bounds 0.3556    solve 1.4162    add 0.0403    
Accumulated time: pickout 0.5400    decision 2.3024    set_bounds 1.5700    solve 6.4555    add 0.3956    
Current (lb-rhs): -0.04359012842178345
44417 domains visited
current_vram/total_varm: 24.3GB/99.9GB, batch_size increase to 16384
Cumulative time: 11.431956052780151

BaB round 14
batch: 12214
splitting decisions: 
split level 0: [/input-8, 550] [/input-8, 1325] [/input-8, 1139] [/input-8, 550] [/input-8, 1139] [/input-8, 550] [/input-8, 550] [/input-8, 1139] [/input-8, 550] [/input-8, 1139] 
pruning_in_iteration open status: True
ratio of positive domain = 7366 / 24428 = 0.3015392172916326
pruning-in-iteration extra time: 0.005461215972900391
Time: prepare 0.6293    bound 0.8830    transfer 0.1400    finalize 0.1543    func 1.8090    
Accumulated time: func 8.2498    prepare 2.2624    bound 4.2927    transfer 0.5084    finalize 1.1774    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03937 (24), -0.03825 (24), -0.03774 (24), -0.03747 (25), -0.03708 (24), -0.03687 (25), -0.03653 (25), -0.03652 (25), -0.03594 (25), -0.03560 (24), -0.03559 (26), -0.03554 (25), -0.03539 (25), -0.03513 (26), -0.03510 (24), -0.03502 (24), -0.03500 (26), -0.03457 (26), -0.03454 (26), -0.03447 (24), 
Length of domains: 17062
Time: pickout 0.2058    decision 0.8908    set_bounds 0.7228    solve 1.8142    add 0.0612    
Accumulated time: pickout 0.7458    decision 3.1932    set_bounds 2.2929    solve 8.2698    add 0.4568    
Current (lb-rhs): -0.039367616176605225
61479 domains visited
Cumulative time: 15.1871337890625

BaB round 15
batch: 16384
splitting decisions: 
split level 0: [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 293] [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 575] 
pruning_in_iteration open status: True
ratio of positive domain = 14292 / 32768 = 0.4361572265625
pruning-in-iteration extra time: 0.00557398796081543
Time: prepare 0.8433    bound 0.9964    transfer 0.1827    finalize 0.2024    func 2.2277    
Accumulated time: func 10.4775    prepare 3.1061    bound 5.2890    transfer 0.6911    finalize 1.3798    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03825 (24), -0.03774 (24), -0.03747 (25), -0.03708 (24), -0.03687 (25), -0.03594 (25), -0.03510 (24), -0.03494 (25), -0.03377 (24), -0.03355 (25), -0.03324 (24), -0.03296 (26), -0.03286 (27), -0.03277 (26), -0.03245 (26), -0.03245 (24), -0.03242 (26), -0.03240 (27), -0.03237 (26), -0.03227 (27), 
Length of domains: 19154
Time: pickout 0.2832    decision 1.8790    set_bounds 0.9606    solve 2.2354    add 0.0737    
Accumulated time: pickout 1.0290    decision 5.0722    set_bounds 3.2535    solve 10.5052    add 0.5304    
Current (lb-rhs): -0.03825265169143677
79955 domains visited
current_vram/total_varm: 32.7GB/99.9GB, batch_size increase to 32768
Cumulative time: 20.708943128585815

BaB round 16
batch: 19154
splitting decisions: 
split level 0: [/input-8, 1628] [/input-8, 1325] [/input-8, 1628] [/input-8, 1325] [/input-8, 1628] [/input-8, 1628] [/input-8, 1325] [/input-8, 1628] [/input-8, 1325] [/input-8, 1628] 
pruning_in_iteration open status: True
ratio of positive domain = 16111 / 38308 = 0.42056489506108385
pruning-in-iteration extra time: 0.005728006362915039
Time: prepare 1.0079    bound 1.1687    transfer 0.2184    finalize 0.5448    func 2.9420    
Accumulated time: func 13.4194    prepare 4.1143    bound 6.4577    transfer 0.9095    finalize 1.9246    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03477 (25), -0.03426 (25), -0.03392 (26), -0.03386 (25), -0.03363 (25), -0.03342 (26), -0.03334 (25), -0.03333 (26), -0.03285 (26), -0.03269 (25), -0.03255 (26), -0.03167 (26), -0.03162 (25), -0.03155 (26), -0.03070 (25), -0.03064 (26), -0.03032 (25), -0.03020 (26), -0.03017 (27), -0.03005 (27), 
Length of domains: 22197
Time: pickout 0.3417    decision 2.1757    set_bounds 1.1327    solve 2.9495    add 0.1031    
Accumulated time: pickout 1.3707    decision 7.2479    set_bounds 4.3862    solve 13.4547    add 0.6336    
Current (lb-rhs): -0.03477334976196289
102152 domains visited
Cumulative time: 27.507086277008057

BaB round 17
batch: 22197
splitting decisions: 
split level 0: [/input-8, 925] [/input-8, 925] [/input-8, 1628] [/input-8, 430] [/input-8, 925] [/input-8, 925] [/input-8, 1628] [/input-8, 1628] [/input-8, 1628] [/input-8, 1628] 
pruning_in_iteration open status: True
ratio of positive domain = 22117 / 44394 = 0.4981979546785602
pruning-in-iteration extra time: 0.005677223205566406
Time: prepare 1.1902    bound 1.2034    transfer 0.2527    finalize 0.5880    func 3.2385    
Accumulated time: func 16.6579    prepare 5.3049    bound 7.6612    transfer 1.1622    finalize 2.5126    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03120 (27), -0.03105 (26), -0.03091 (26), -0.03071 (27), -0.03067 (26), -0.03061 (27), -0.03012 (27), -0.03009 (26), -0.02996 (26), -0.02996 (26), -0.02983 (26), -0.02979 (27), -0.02971 (26), -0.02961 (28), -0.02955 (26), -0.02902 (26), -0.02892 (27), -0.02888 (26), -0.02883 (29), -0.02875 (27), 
Length of domains: 22277
Time: pickout 0.4047    decision 2.2658    set_bounds 1.2927    solve 3.2473    add 0.1215    
Accumulated time: pickout 1.7753    decision 9.5137    set_bounds 5.6788    solve 16.7020    add 0.7551    
Current (lb-rhs): -0.031202077865600586
124429 domains visited
Cumulative time: 34.98477292060852

BaB round 18
batch: 22277
splitting decisions: 
split level 0: [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 293] [/input-8, 614] [/input-8, 614] [/input-8, 614] 
pruning_in_iteration open status: True
ratio of positive domain = 22048 / 44554 = 0.4948601696817345
pruning-in-iteration extra time: 0.005837440490722656
Time: prepare 1.2288    bound 1.2170    transfer 0.2499    finalize 0.6330    func 3.3325    
Accumulated time: func 19.9904    prepare 6.5342    bound 8.8782    transfer 1.4121    finalize 3.1455    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02937 (28), -0.02836 (27), -0.02818 (27), -0.02798 (27), -0.02760 (28), -0.02730 (27), -0.02725 (28), -0.02724 (27), -0.02715 (27), -0.02715 (27), -0.02712 (30), -0.02712 (28), -0.02701 (28), -0.02692 (27), -0.02686 (27), -0.02682 (30), -0.02668 (28), -0.02666 (30), -0.02665 (28), -0.02654 (28), 
Length of domains: 22506
Time: pickout 0.4108    decision 2.5226    set_bounds 1.3410    solve 3.3407    add 0.0782    
Accumulated time: pickout 2.1862    decision 12.0364    set_bounds 7.0199    solve 20.0427    add 0.8333    
Current (lb-rhs): -0.029366493225097656
146935 domains visited
Cumulative time: 42.82887387275696

BaB round 19
batch: 22506
splitting decisions: 
split level 0: [/input-8, 1139] [/input-8, 1139] [/input-8, 575] [/input-8, 925] [/input-8, 925] [/input-8, 1139] [/input-8, 575] [/input-8, 1139] [/input-8, 925] [/input-8, 1139] 
pruning_in_iteration open status: True
ratio of positive domain = 22525 / 45012 = 0.5004221096596464
pruning-in-iteration extra time: 0.005900859832763672
Time: prepare 1.5669    bound 1.2311    transfer 0.2558    finalize 0.3062    func 3.3632    
Accumulated time: func 23.3535    prepare 8.1016    bound 10.1094    transfer 1.6678    finalize 3.4518    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02718 (29), -0.02684 (29), -0.02659 (29), -0.02624 (29), -0.02577 (29), -0.02571 (31), -0.02544 (29), -0.02541 (29), -0.02539 (31), -0.02534 (28), -0.02523 (31), -0.02511 (31), -0.02509 (31), -0.02495 (29), -0.02493 (28), -0.02490 (29), -0.02484 (29), -0.02480 (31), -0.02479 (31), -0.02472 (29), 
Length of domains: 22487
Time: pickout 0.4363    decision 2.3246    set_bounds 1.3155    solve 3.7464    add 0.0820    
Accumulated time: pickout 2.6224    decision 14.3609    set_bounds 8.3353    solve 23.7891    add 0.9153    
Current (lb-rhs): -0.027178287506103516
169422 domains visited
Cumulative time: 50.895545959472656

BaB round 20
batch: 22487
splitting decisions: 
split level 0: [/input-8, 925] [/input-8, 925] [/input-8, 1446] [/input-8, 925] [/input-8, 925] [/input-8, 925] [/input-8, 925] [/input-8, 925] [/input-8, 925] [/input-8, 925] 
pruning_in_iteration open status: True
ratio of positive domain = 23763 / 44974 = 0.528371948236759
pruning-in-iteration extra time: 0.005898714065551758
Time: prepare 1.2724    bound 1.1870    transfer 0.2551    finalize 0.3301    func 3.0482    
Accumulated time: func 26.4017    prepare 9.3745    bound 11.2964    transfer 1.9229    finalize 3.7819    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02549 (30), -0.02514 (30), -0.02501 (30), -0.02490 (30), -0.02490 (29), -0.02455 (30), -0.02455 (30), -0.02441 (30), -0.02415 (29), -0.02406 (30), -0.02397 (29), -0.02395 (30), -0.02395 (32), -0.02377 (29), -0.02374 (30), -0.02373 (32), -0.02372 (29), -0.02370 (29), -0.02356 (29), -0.02348 (29), 
Length of domains: 21211
Time: pickout 0.4743    decision 2.6968    set_bounds 1.4202    solve 3.4593    add 0.1271    
Accumulated time: pickout 3.0967    decision 17.0578    set_bounds 9.7555    solve 27.2484    add 1.0424    
Current (lb-rhs): -0.025490105152130127
190633 domains visited
Cumulative time: 59.219966888427734

BaB round 21
batch: 21211
splitting decisions: 
split level 0: [/input-8, 422] [/input-8, 575] [/input-8, 293] [/input, 1626] [/input, 2149] [/input-8, 925] [/input-8, 925] [/input-8, 293] [/input, 2787] [/input, 2149] 
pruning_in_iteration open status: True
ratio of positive domain = 23680 / 42422 = 0.5582009334779123
pruning-in-iteration extra time: 0.0056781768798828125
Time: prepare 1.2181    bound 1.0714    transfer 0.2406    finalize 0.6103    func 3.1436    
Accumulated time: func 29.5454    prepare 10.5930    bound 12.3678    transfer 2.1635    finalize 4.3922    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02408 (31), -0.02370 (31), -0.02356 (31), -0.02348 (31), -0.02322 (30), -0.02312 (31), -0.02310 (31), -0.02298 (31), -0.02284 (33), -0.02266 (31), -0.02263 (33), -0.02252 (31), -0.02246 (30), -0.02232 (31), -0.02229 (30), -0.02225 (33), -0.02209 (30), -0.02199 (30), -0.02189 (30), -0.02175 (31), 
Length of domains: 18742
Time: pickout 0.4606    decision 2.5603    set_bounds 0.9926    solve 3.1549    add 0.0697    
Accumulated time: pickout 3.5574    decision 19.6181    set_bounds 10.7481    solve 30.4033    add 1.1121    
Current (lb-rhs): -0.024075627326965332
209375 domains visited
Cumulative time: 66.61306977272034

BaB round 22
batch: 18742
splitting decisions: 
split level 0: [/input, 2787] [/input, 2787] [/input-8, 293] [/input, 2133] [/input-8, 422] [/input-8, 422] [/input, 2787] [/input-8, 575] [/input-8, 293] [/input, 1626] 
pruning_in_iteration open status: True
ratio of positive domain = 20404 / 37484 = 0.5443389179383203
pruning-in-iteration extra time: 0.005764484405517578
Time: prepare 1.0830    bound 0.9762    transfer 0.2164    finalize 0.2810    func 2.5598    
Accumulated time: func 32.1052    prepare 11.6765    bound 13.3440    transfer 2.3799    finalize 4.6732    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02222 (32), -0.02196 (32), -0.02181 (31), -0.02172 (32), -0.02137 (32), -0.02106 (31), -0.02088 (31), -0.02087 (32), -0.02065 (31), -0.02063 (32), -0.02056 (31), -0.02047 (32), -0.02047 (31), -0.02011 (32), -0.02011 (31), -0.02006 (33), -0.02003 (31), -0.02002 (31), -0.02002 (33), -0.01997 (32), 
Length of domains: 17080
Time: pickout 0.4014    decision 2.2283    set_bounds 1.2468    solve 2.5686    add 0.1151    
Accumulated time: pickout 3.9588    decision 21.8464    set_bounds 11.9949    solve 32.9719    add 1.2272    
Current (lb-rhs): -0.022218406200408936
226455 domains visited
Cumulative time: 73.3227767944336

BaB round 23
batch: 17080
splitting decisions: 
split level 0: [/input-8, 422] [/input, 2787] [/input, 1626] [/input-8, 293] [/input-8, 293] [/input-8, 422] [/input, 2787] [/input-8, 293] [/input-8, 422] [/input-8, 575] 
pruning_in_iteration open status: True
ratio of positive domain = 19476 / 34160 = 0.5701405152224824
pruning-in-iteration extra time: 0.005653858184814453
Time: prepare 1.0004    bound 0.8621    transfer 0.1928    finalize 0.2747    func 2.3332    
Accumulated time: func 34.4383    prepare 12.6772    bound 14.2061    transfer 2.5727    finalize 4.9479    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02112 (33), -0.02084 (33), -0.01996 (32), -0.01917 (32), -0.01900 (32), -0.01888 (32), -0.01873 (33), -0.01871 (32), -0.01869 (32), -0.01861 (33), -0.01840 (35), -0.01836 (33), -0.01836 (35), -0.01835 (33), -0.01829 (35), -0.01819 (32), -0.01815 (32), -0.01812 (33), -0.01794 (32), -0.01786 (32), 
Length of domains: 14684
Time: pickout 0.3791    decision 2.0479    set_bounds 1.1564    solve 2.3421    add 0.1556    
Accumulated time: pickout 4.3378    decision 23.8943    set_bounds 13.1513    solve 35.3141    add 1.3829    
Current (lb-rhs): -0.021120011806488037
241139 domains visited
Cumulative time: 79.54525637626648

BaB round 24
batch: 14684
splitting decisions: 
split level 0: [/input-8, 575] [/input-8, 422] [/input, 1626] [/input-8, 422] [/input-8, 575] [/input, 2133] [/input-8, 575] [/input-8, 575] [/input, 1626] [/input-8, 293] 
pruning_in_iteration open status: True
ratio of positive domain = 16977 / 29368 = 0.5780781803323345
pruning-in-iteration extra time: 0.005639791488647461
Time: prepare 0.8184    bound 0.7475    transfer 0.1688    finalize 0.5037    func 2.2408    
Accumulated time: func 36.6791    prepare 13.4960    bound 14.9536    transfer 2.7415    finalize 5.4515    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01886 (33), -0.01813 (34), -0.01805 (34), -0.01788 (33), -0.01786 (34), -0.01760 (33), -0.01760 (33), -0.01756 (34), -0.01732 (34), -0.01724 (34), -0.01708 (33), -0.01704 (34), -0.01703 (34), -0.01685 (33), -0.01675 (34), -0.01664 (34), -0.01646 (36), -0.01646 (34), -0.01641 (34), -0.01632 (33), 
Length of domains: 12391
Time: pickout 0.3317    decision 1.3779    set_bounds 0.7026    solve 2.2479    add 0.0485    
Accumulated time: pickout 4.6695    decision 25.2722    set_bounds 13.8539    solve 37.5620    add 1.4314    
Current (lb-rhs): -0.01886129379272461
253530 domains visited
Cumulative time: 84.36929440498352

BaB round 25
batch: 12391
splitting decisions: 
split level 0: [/input, 1626] [/input, 2133] [/input-8, 575] [/input, 1620] [/input, 1626] [/input, 1626] [/input-8, 1446] [/input-8, 1446] [/input, 1626] [/input, 1626] 
pruning_in_iteration open status: True
ratio of positive domain = 15149 / 24782 = 0.6112904527479622
pruning-in-iteration extra time: 0.005336761474609375
Time: prepare 0.7131    bound 0.6135    transfer 0.1429    finalize 0.1781    func 1.6504    
Accumulated time: func 38.3295    prepare 14.2095    bound 15.5670    transfer 2.8844    finalize 5.6296    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01672 (35), -0.01671 (35), -0.01654 (35), -0.01620 (35), -0.01595 (35), -0.01592 (35), -0.01579 (35), -0.01559 (34), -0.01540 (34), -0.01534 (35), -0.01533 (35), -0.01525 (35), -0.01522 (34), -0.01521 (35), -0.01516 (35), -0.01516 (35), -0.01506 (34), -0.01503 (34), -0.01500 (34), -0.01493 (37), 
Length of domains: 9633
Time: pickout 0.2780    decision 0.9855    set_bounds 0.8304    solve 1.6570    add 0.0652    
Accumulated time: pickout 4.9474    decision 26.2577    set_bounds 14.6843    solve 39.2190    add 1.4966    
Current (lb-rhs): -0.01671534776687622
263163 domains visited
Cumulative time: 88.37299752235413

BaB round 26
batch: 9633
splitting decisions: 
split level 0: [/input, 1620] [/input, 1626] [/input-8, 1447] [/input-8, 1455] [/input, 1626] [/input-8, 1447] [/input-8, 1455] [/input-8, 1447] [/input-8, 1455] [/input-8, 1447] 
pruning_in_iteration open status: True
ratio of positive domain = 12100 / 19266 = 0.6280494134745147
pruning-in-iteration extra time: 0.005364418029785156
Time: prepare 0.5666    bound 0.5010    transfer 0.1115    finalize 0.1531    func 1.3353    
Accumulated time: func 39.6648    prepare 14.7765    bound 16.0681    transfer 2.9959    finalize 5.7827    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01543 (36), -0.01528 (36), -0.01491 (36), -0.01469 (36), -0.01469 (36), -0.01449 (35), -0.01447 (36), -0.01423 (36), -0.01386 (35), -0.01381 (36), -0.01375 (35), -0.01372 (36), -0.01365 (36), -0.01365 (35), -0.01363 (36), -0.01349 (35), -0.01344 (35), -0.01328 (35), -0.01316 (36), -0.01313 (38), 
Length of domains: 7166
Time: pickout 0.2815    decision 1.0235    set_bounds 0.7199    solve 1.6263    add 0.0587    
Accumulated time: pickout 5.2289    decision 27.2812    set_bounds 15.4042    solve 40.8453    add 1.5553    
Current (lb-rhs): -0.015426158905029297
270329 domains visited
Cumulative time: 92.22745418548584

BaB round 27
batch: 7166
splitting decisions: 
split level 0: [/input, 1626] [/input, 2149] [/input, 2149] [/input-8, 294] [/input-8, 1447] [/input-8, 1447] [/input-8, 294] [/input, 2149] [/input-8, 1447] [/input, 2149] 
pruning_in_iteration open status: True
ratio of positive domain = 9278 / 14332 = 0.647362545353056
pruning-in-iteration extra time: 0.005203962326049805
Time: prepare 0.4068    bound 0.4139    transfer 0.0849    finalize 0.3147    func 1.2231    
Accumulated time: func 40.8878    prepare 15.1838    bound 16.4820    transfer 3.0808    finalize 6.0973    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01333 (37), -0.01317 (37), -0.01306 (37), -0.01286 (37), -0.01262 (37), -0.01251 (36), -0.01169 (37), -0.01167 (37), -0.01154 (37), -0.01151 (37), -0.01148 (36), -0.01143 (36), -0.01137 (37), -0.01132 (37), -0.01130 (37), -0.01125 (36), -0.01118 (36), -0.01111 (36), -0.01109 (37), -0.01108 (39), 
Length of domains: 5054
Time: pickout 0.1934    decision 0.5034    set_bounds 0.4019    solve 1.2269    add 0.0213    
Accumulated time: pickout 5.4223    decision 27.7846    set_bounds 15.8061    solve 42.0722    add 1.5767    
Current (lb-rhs): -0.013333380222320557
275383 domains visited
Cumulative time: 94.64630341529846

BaB round 28
batch: 5054
splitting decisions: 
split level 0: [/input-8, 294] [/input-8, 1455] [/input, 2150] [/input-8, 628] [/input-8, 628] [/input-8, 628] [/input-8, 1455] [/input-8, 1455] [/input-8, 628] [/input-8, 1447] 
pruning_in_iteration open status: True
ratio of positive domain = 6963 / 10108 = 0.6888603086664029
pruning-in-iteration extra time: 0.004996299743652344
Time: prepare 0.2751    bound 0.3536    transfer 0.0595    finalize 0.0689    func 0.7589    
Accumulated time: func 41.6468    prepare 15.4592    bound 16.8356    transfer 3.1403    finalize 6.1662    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01192 (38), -0.01158 (38), -0.01138 (38), -0.01123 (37), -0.01079 (38), -0.01020 (38), -0.01019 (37), -0.01006 (38), -0.00998 (38), -0.00996 (37), -0.00994 (38), -0.00983 (37), -0.00972 (38), -0.00952 (38), -0.00951 (37), -0.00947 (38), -0.00945 (38), -0.00938 (38), -0.00934 (37), -0.00934 (38), 
Length of domains: 3145
Time: pickout 0.1331    decision 0.3126    set_bounds 0.4006    solve 0.7618    add 0.0208    
Accumulated time: pickout 5.5554    decision 28.0972    set_bounds 16.2067    solve 42.8340    add 1.5975    
Current (lb-rhs): -0.011916518211364746
278528 domains visited
Cumulative time: 96.32480335235596

BaB round 29
batch: 3145
splitting decisions: 
split level 0: [/input-8, 274] [/input-8, 294] [/input-8, 1447] [/input-8, 294] [/input, 1626] [/input, 2149] [/input, 1626] [/input-8, 628] [/input-8, 575] [/input-8, 1455] 
pruning_in_iteration open status: True
ratio of positive domain = 4644 / 6290 = 0.738314785373609
pruning-in-iteration extra time: 0.010350704193115234
Time: prepare 0.1762    bound 0.3170    transfer 0.0372    finalize 0.0458    func 0.7605    
Accumulated time: func 42.4073    prepare 15.6357    bound 17.1526    transfer 3.1775    finalize 6.2120    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00950 (39), -0.00941 (39), -0.00901 (39), -0.00883 (39), -0.00823 (38), -0.00784 (39), -0.00778 (39), -0.00773 (39), -0.00771 (39), -0.00770 (39), -0.00760 (39), -0.00755 (39), -0.00753 (38), -0.00753 (39), -0.00746 (38), -0.00739 (39), -0.00729 (41), -0.00722 (39), -0.00721 (38), -0.00720 (38), 
Length of domains: 1646
Time: pickout 0.0769    decision 0.1946    set_bounds 0.1374    solve 0.7622    add 0.0076    
Accumulated time: pickout 5.6324    decision 28.2918    set_bounds 16.3441    solve 43.5962    add 1.6051    
Current (lb-rhs): -0.009502291679382324
280174 domains visited
Cumulative time: 97.53924417495728

BaB round 30
batch: 1646
splitting decisions: 
split level 0: [/input-8, 628] [/input-8, 628] [/input-8, 294] [/input-8, 628] [/input-8, 628] [/input-8, 1447] [/input-8, 628] [/input, 1626] [/input, 1626] [/input, 1626] 
pruning_in_iteration open status: True
ratio of positive domain = 2586 / 3292 = 0.7855407047387606
pruning-in-iteration extra time: 0.004914045333862305
Time: prepare 0.0862    bound 0.2941    transfer 0.0180    finalize 0.0218    func 0.4216    
Accumulated time: func 42.8289    prepare 15.7221    bound 17.4467    transfer 3.1956    finalize 6.2339    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00710 (40), -0.00663 (40), -0.00623 (39), -0.00619 (39), -0.00596 (39), -0.00589 (40), -0.00582 (40), -0.00578 (39), -0.00577 (40), -0.00575 (40), -0.00544 (40), -0.00533 (40), -0.00530 (40), -0.00523 (40), -0.00523 (40), -0.00518 (40), -0.00515 (40), -0.00512 (40), -0.00499 (40), -0.00486 (39), 
Length of domains: 706
Time: pickout 0.0509    decision 0.1075    set_bounds 0.0690    solve 0.4224    add 0.0046    
Accumulated time: pickout 5.6832    decision 28.3994    set_bounds 16.4131    solve 44.0186    add 1.6097    
Current (lb-rhs): -0.007102370262145996
280880 domains visited
Cumulative time: 98.20771956443787

BaB round 31
batch: 706
splitting decisions: 
split level 0: [/input-8, 294] [/input-8, 1455] [/input, 2150] [/input, 2150] [/input-8, 294] [/input, 2150] [/input-8, 294] [/input-8, 294] [/input-8, 294] [/input-8, 274] 
pruning_in_iteration open status: True
ratio of positive domain = 1189 / 1412 = 0.8420679886685553
pruning-in-iteration extra time: 0.004668474197387695
Time: prepare 0.0370    bound 0.2009    transfer 0.0052    finalize 0.0099    func 0.2531    
Accumulated time: func 43.0820    prepare 15.7593    bound 17.6477    transfer 3.2008    finalize 6.2437    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00477 (40), -0.00472 (40), -0.00360 (41), -0.00356 (41), -0.00356 (41), -0.00355 (40), -0.00354 (41), -0.00350 (41), -0.00310 (41), -0.00309 (41), -0.00307 (41), -0.00305 (40), -0.00305 (41), -0.00300 (41), -0.00295 (41), -0.00289 (40), -0.00258 (41), -0.00255 (43), -0.00254 (41), -0.00253 (43), 
Length of domains: 223
Time: pickout 0.0228    decision 0.0551    set_bounds 0.0289    solve 0.2534    add 0.0038    
Accumulated time: pickout 5.7060    decision 28.4544    set_bounds 16.4420    solve 44.2720    add 1.6135    
Current (lb-rhs): -0.004765629768371582
281103 domains visited
Cumulative time: 98.5779378414154

BaB round 32
batch: 223
splitting decisions: 
split level 0: [/input-8, 1455] [/input-8, 628] [/input-8, 926] [/input-8, 1455] [/input-8, 926] [/input-8, 926] [/input, 2149] [/input, 2149] [/input, 2149] [/input-8, 274] 
pruning_in_iteration open status: True
ratio of positive domain = 400 / 446 = 0.8968609865470852
pruning-in-iteration extra time: 0.0049746036529541016
Time: prepare 0.0116    bound 0.1336    transfer 0.0014    finalize 0.0030    func 0.1496    
Accumulated time: func 43.2317    prepare 15.7711    bound 17.7813    transfer 3.2022    finalize 6.2467    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00238 (41), -0.00218 (42), -0.00215 (42), -0.00213 (41), -0.00187 (42), -0.00184 (42), -0.00129 (42), -0.00127 (42), -0.00126 (42), -0.00124 (42), -0.00118 (41), -0.00116 (41), -0.00110 (42), -0.00106 (42), -0.00095 (41), -0.00092 (41), -0.00086 (42), -0.00084 (42), -0.00078 (42), -0.00078 (41), 
Length of domains: 46
Time: pickout 0.0082    decision 0.0278    set_bounds 0.0093    solve 0.1497    add 0.0016    
Accumulated time: pickout 5.7142    decision 28.4822    set_bounds 16.4513    solve 44.4218    add 1.6151    
Current (lb-rhs): -0.0023769736289978027
281149 domains visited
Cumulative time: 98.77639079093933

BaB round 33
batch: 46
splitting decisions: 
split level 0: [/input-8, 294] [/input-8, 294] [/input-8, 294] [/input-8, 1455] [/input-8, 294] [/input, 2149] [/input-8, 294] [/input-8, 294] [/input-8, 628] [/input-8, 1455] 
split level 1: [/input-8, 1463] [/input-8, 1463] [/input-8, 1463] [/input-8, 1463] [/input-8, 1463] [/input-8, 1463] [/input-8, 274] [/input-8, 1455] [/input-8, 1455] [/input-8, 1463] 
split level 2: [/input, 2585] [/input, 2585] [/input, 2585] [/input, 2585] [/input, 2585] [/input, 2585] [/input-8, 1463] [/input, 2585] [/input, 2585] [/input, 2585] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 368 / 368 = 1.0
pruning-in-iteration extra time: 4.5299530029296875e-05
Time: prepare 0.0094    bound 0.0070    transfer 0.0022    finalize 0.0023    func 0.0209    
Accumulated time: func 43.2526    prepare 15.7806    bound 17.7883    transfer 3.2044    finalize 6.2490    
all_split False
Length of domains: 0
Time: pickout 0.0024    decision 0.0175    set_bounds 0.0148    solve 0.0210    add 0.0001    
Accumulated time: pickout 5.7166    decision 28.4998    set_bounds 16.4661    solve 44.4428    add 1.6151    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
281149 domains visited
Cumulative time: 98.83360576629639


Properties batch 8, size 1
Remaining timeout: 39.79360055923462
Verifying property 8 with 1 instances.
##### Instance 167 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.5717086791992188.
Result: safe in 160.3570 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 168, vnnlib ID: 168 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.83010960, -18.46311760, -10.82516861, -14.02094841, -13.35524940,
         -13.57317543, -16.31656647, -16.24346542, -18.31108856, -17.83380508]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [478]; unstable size 478; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 77, 1, 478] with unstable size 76 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 5, 1, 478] with unstable size 4 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 478] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [76]; unstable size 76; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 5, 1, 76] with unstable size 4 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 76] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [4]; unstable size 4; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.44705343, 6.67497396, 2.73657417, 2.01246381, 2.17955494, 4.94375038,
         4.64395428, 6.66448021, 6.17840242]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0828 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 169, vnnlib ID: 169 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.63894939, -9.64244175, -5.12798119, -6.62656116, -4.67414284,
         -6.34183264, -7.44110918, -6.87718344, -7.57325172, -8.86707783]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [540]; unstable size 540; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 185, 1, 540] with unstable size 184 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 540] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 540] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [184]; unstable size 184; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 184] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 184] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.41975904,  2.63730359, -0.24886763,  1.14163041,  0.84137636,
          1.68192887,  1.20813799,  0.96860713,  2.32131577]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.63894939, -9.64244175, -5.12798119, -6.62656116, -4.67414284,
         -6.34183264, -7.44110918, -6.87718344, -7.57325172, -8.86707783]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.80it/s]100%|██████████| 1/1 [00:00<00:00,  8.79it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.51849270, -9.63056850, -5.03511810, -6.76035976, -4.96544600,
          -6.54092455, -7.44870996, -7.21986437, -7.37273216, -8.95295334]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.06967211]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1170 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 11.406267166137695
alpha/beta optimization time: 1.147660732269287
initial alpha-crown bounds: tensor([[ 0.48204708,  2.72113276, -0.22036761,  1.16896915,  0.86237288,
          1.72370410,  1.25071526,  1.03288555,  2.38480759]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.22036761045455933
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6616930961609
Verifying property 0 with 1 instances.
##### Instance 169 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.48204708099365234.

Properties batch 1, size 1
Remaining timeout: 198.54147624969482
Verifying property 1 with 1 instances.
##### Instance 169 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.721132755279541.

Properties batch 2, size 1
Remaining timeout: 198.43967008590698
Verifying property 2 with 1 instances.
##### Instance 169 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.22036761]], device='cuda:0') need to verify.
Model prediction is: tensor([-6.63894939, -9.64244175, -5.12798119, -6.62656116, -4.67414284,
        -6.34183264, -7.44110918, -6.87718344, -7.57325172, -8.86707783],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.22036761]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 540
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 181
Node /15 input 0: size torch.Size([100]) unstable 18
-----------------
# of unstable neurons: 739
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 10] 
split level 1: [/input-12, 82] 
split level 2: [/input-12, 11] 
split level 3: [/input-12, 42] 
split level 4: [/input-8, 2019] 
split level 5: [/input-8, 1362] 
split level 6: [/input-8, 574] 
split level 7: [/input-8, 1073] 
pruning_in_iteration open status: True
ratio of positive domain = 208 / 256 = 0.8125
pruning-in-iteration extra time: 0.0049076080322265625
Time: prepare 0.0031    bound 0.1286    transfer 0.0017    finalize 0.0017    func 0.1350    
Accumulated time: func 0.1350    prepare 0.0035    bound 0.1286    transfer 0.0017    finalize 0.0017    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06508 (8), -0.06485 (8), -0.06452 (8), -0.06448 (8), -0.06429 (8), -0.06425 (8), -0.06392 (8), -0.06369 (8), -0.06033 (8), -0.06017 (8), -0.05999 (8), -0.05970 (8), -0.05961 (8), -0.05957 (8), -0.05957 (8), -0.05943 (8), -0.05943 (8), -0.05938 (8), -0.05902 (8), -0.05888 (8), 
Length of domains: 48
Time: pickout 0.0004    decision 0.0232    set_bounds 0.0180    solve 0.1351    add 0.0444    
Accumulated time: pickout 0.0004    decision 0.0232    set_bounds 0.0180    solve 0.1351    add 0.0444    
Current (lb-rhs): -0.06507647037506104
48 domains visited
Cumulative time: 0.22547340393066406

BaB round 2
batch: 48
splitting decisions: 
split level 0: [/input-8, 1124] [/input-8, 1889] [/input-8, 1499] [/input-8, 1124] [/input-8, 1889] [/input-8, 1356] [/input-8, 1124] [/input-8, 1889] [/input-8, 573] [/input-8, 1124] 
split level 1: [/input-8, 1499] [/input-8, 555] [/input-8, 1356] [/input-8, 1499] [/input-8, 555] [/input-8, 573] [/input-8, 1499] [/input-8, 555] [/input-8, 1356] [/input-8, 1499] 
split level 2: [/input-8, 573] [/input-8, 1896] [/input-8, 573] [/input-8, 573] [/input-8, 1896] [/input-8, 1499] [/input-8, 573] [/input-8, 1896] [/input-8, 555] [/input-8, 573] 
pruning_in_iteration open status: True
ratio of positive domain = 107 / 384 = 0.27864583333333337
pruning-in-iteration extra time: 0.004718303680419922
Time: prepare 0.0073    bound 0.1619    transfer 0.0029    finalize 0.0024    func 0.1746    
Accumulated time: func 0.3096    prepare 0.0109    bound 0.2905    transfer 0.0046    finalize 0.0041    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05757 (11), -0.05743 (11), -0.05699 (11), -0.05692 (11), -0.05685 (11), -0.05679 (11), -0.05669 (11), -0.05656 (11), -0.05634 (11), -0.05621 (11), -0.05605 (11), -0.05591 (11), -0.05489 (11), -0.05476 (11), -0.05425 (11), -0.05411 (11), -0.05339 (11), -0.05332 (11), -0.05281 (11), -0.05274 (11), 
Length of domains: 277
Time: pickout 0.0019    decision 0.0213    set_bounds 0.0127    solve 0.1747    add 0.0021    
Accumulated time: pickout 0.0022    decision 0.0445    set_bounds 0.0307    solve 0.3098    add 0.0464    
Current (lb-rhs): -0.057568907737731934
325 domains visited
Cumulative time: 0.4387083053588867

BaB round 3
batch: 277
splitting decisions: 
split level 0: [/input-8, 1356] [/input-8, 2020] [/input-8, 1356] [/input-8, 2020] [/input-8, 1356] [/input-8, 2020] [/input-8, 2020] [/input-8, 2020] [/input-8, 1356] [/input-8, 2020] 
pruning_in_iteration open status: False
ratio of positive domain = 34 / 554 = 0.06137184115523464
pruning-in-iteration extra time: 5.1975250244140625e-05
Time: prepare 0.0108    bound 0.1060    transfer 0.0041    finalize 0.0036    func 0.1246    
Accumulated time: func 0.4342    prepare 0.0220    bound 0.3965    transfer 0.0087    finalize 0.0077    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05404 (12), -0.05356 (12), -0.05337 (12), -0.05336 (12), -0.05288 (12), -0.05287 (12), -0.05268 (12), -0.05239 (12), -0.05220 (12), -0.05219 (12), -0.05171 (12), -0.05151 (12), -0.05148 (12), -0.05080 (12), -0.05064 (12), -0.05032 (12), -0.05025 (12), -0.05016 (12), -0.04996 (12), -0.04996 (12), 
Length of domains: 520
Time: pickout 0.0037    decision 0.0298    set_bounds 0.0121    solve 0.1247    add 0.0024    
Accumulated time: pickout 0.0059    decision 0.0743    set_bounds 0.0428    solve 0.4345    add 0.0488    
Current (lb-rhs): -0.05404388904571533
845 domains visited
Cumulative time: 0.6120822429656982

BaB round 4
batch: 520
splitting decisions: 
split level 0: [/input-8, 2020] [/input-8, 1868] [/input-8, 2020] [/input-8, 1868] [/input-8, 2020] [/input-8, 1868] [/input-8, 1356] [/input-8, 1868] [/input-8, 2020] [/input-8, 1868] 
pruning_in_iteration open status: False
ratio of positive domain = 20 / 1040 = 0.019230769230769273
pruning-in-iteration extra time: 5.316734313964844e-05
Time: prepare 0.0204    bound 0.1108    transfer 0.0041    finalize 0.0066    func 0.1421    
Accumulated time: func 0.5763    prepare 0.0426    bound 0.5073    transfer 0.0128    finalize 0.0143    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04971 (13), -0.04950 (13), -0.04936 (13), -0.04918 (13), -0.04916 (13), -0.04898 (13), -0.04897 (13), -0.04877 (13), -0.04864 (13), -0.04845 (13), -0.04843 (13), -0.04825 (13), -0.04765 (13), -0.04749 (13), -0.04731 (13), -0.04725 (13), -0.04715 (13), -0.04712 (13), -0.04705 (13), -0.04696 (13), 
Length of domains: 1019
Time: pickout 0.0062    decision 0.0438    set_bounds 0.0230    solve 0.1423    add 0.0039    
Accumulated time: pickout 0.0121    decision 0.1180    set_bounds 0.0658    solve 0.5768    add 0.0528    
Current (lb-rhs): -0.04970884323120117
1864 domains visited
Cumulative time: 0.8323945999145508

BaB round 5
batch: 1019
splitting decisions: 
split level 0: [/input-12, 44] [/input-8, 89] [/input-12, 44] [/input-8, 89] [/input-12, 44] [/input-8, 1499] [/input-12, 44] [/input-8, 89] [/input-12, 44] [/input-12, 44] 
pruning_in_iteration open status: True
ratio of positive domain = 688 / 2038 = 0.337585868498528
pruning-in-iteration extra time: 0.004878520965576172
Time: prepare 0.0404    bound 0.2613    transfer 0.0054    finalize 0.0131    func 0.3204    
Accumulated time: func 0.8967    prepare 0.0831    bound 0.7686    transfer 0.0182    finalize 0.0274    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04769 (14), -0.04747 (14), -0.04743 (14), -0.04722 (14), -0.04721 (14), -0.04700 (14), -0.04696 (14), -0.04674 (14), -0.04670 (14), -0.04649 (14), -0.04648 (14), -0.04627 (14), -0.04563 (14), -0.04548 (14), -0.04537 (14), -0.04527 (14), -0.04522 (14), -0.04515 (14), -0.04506 (14), -0.04500 (14), 
Length of domains: 1350
Time: pickout 0.0123    decision 0.0719    set_bounds 0.0441    solve 0.3209    add 0.0079    
Accumulated time: pickout 0.0244    decision 0.1899    set_bounds 0.1099    solve 0.8976    add 0.0607    
Current (lb-rhs): -0.04769241809844971
3214 domains visited
Cumulative time: 1.2940211296081543

BaB round 6
batch: 1350
splitting decisions: 
split level 0: [/input-8, 1868] [/input-12, 44] [/input-8, 1868] [/input-12, 44] [/input-8, 1868] [/input-8, 89] [/input-8, 1868] [/input-8, 571] [/input-8, 1868] [/input-8, 89] 
pruning_in_iteration open status: True
ratio of positive domain = 830 / 2700 = 0.30740740740740746
pruning-in-iteration extra time: 0.004969358444213867
Time: prepare 0.0530    bound 0.2649    transfer 0.0137    finalize 0.1688    func 0.5006    
Accumulated time: func 1.3972    prepare 0.1363    bound 1.0335    transfer 0.0319    finalize 0.1961    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04653 (15), -0.04635 (15), -0.04630 (15), -0.04614 (15), -0.04613 (15), -0.04591 (15), -0.04580 (15), -0.04562 (15), -0.04557 (15), -0.04541 (15), -0.04540 (15), -0.04518 (15), -0.04466 (15), -0.04452 (15), -0.04449 (15), -0.04435 (15), -0.04427 (15), -0.04420 (15), -0.04413 (15), -0.04397 (15), 
Length of domains: 1870
Time: pickout 0.0196    decision 0.0902    set_bounds 0.0573    solve 0.5010    add 0.0281    
Accumulated time: pickout 0.0440    decision 0.2801    set_bounds 0.1672    solve 1.3987    add 0.0888    
Current (lb-rhs): -0.04652965068817139
5084 domains visited
Cumulative time: 1.9962637424468994

BaB round 7
batch: 1870
splitting decisions: 
split level 0: [/input-8, 89] [/input-8, 571] [/input-8, 89] [/input-8, 571] [/input-8, 89] [/input-12, 44] [/input-8, 89] [/input-12, 44] [/input-8, 89] [/input-8, 571] 
pruning_in_iteration open status: True
ratio of positive domain = 1263 / 3740 = 0.33770053475935824
pruning-in-iteration extra time: 0.004967927932739258
Time: prepare 0.0759    bound 0.3071    transfer 0.0179    finalize 0.0237    func 0.4251    
Accumulated time: func 1.8223    prepare 0.2125    bound 1.3406    transfer 0.0498    finalize 0.2199    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04352 (16), -0.04337 (16), -0.04316 (16), -0.04295 (16), -0.04280 (16), -0.04279 (16), -0.04264 (16), -0.04258 (16), -0.04243 (16), -0.04222 (16), -0.04206 (16), -0.04185 (16), -0.04150 (16), -0.04135 (16), -0.04129 (16), -0.04122 (16), -0.04114 (16), -0.04114 (16), -0.04093 (16), -0.04077 (16), 
Length of domains: 2477
Time: pickout 0.0268    decision 0.1190    set_bounds 0.0796    solve 0.4261    add 0.0092    
Accumulated time: pickout 0.0707    decision 0.3991    set_bounds 0.2468    solve 1.8247    add 0.0980    
Current (lb-rhs): -0.043523192405700684
7561 domains visited
Cumulative time: 2.6669721603393555

BaB round 8
batch: 2477
splitting decisions: 
split level 0: [/input-8, 555] [/input-8, 555] [/input-8, 555] [/input-8, 555] [/input-8, 555] [/input-8, 571] [/input-8, 555] [/input-8, 1499] [/input-8, 555] [/input-8, 555] 
pruning_in_iteration open status: True
ratio of positive domain = 1044 / 4954 = 0.21073879693177233
pruning-in-iteration extra time: 0.001882314682006836
Time: prepare 0.1011    bound 0.2772    transfer 0.0302    finalize 0.0310    func 0.4411    
Accumulated time: func 2.2633    prepare 0.3138    bound 1.6178    transfer 0.0799    finalize 0.2509    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04020 (17), -0.04005 (17), -0.03982 (17), -0.03960 (17), -0.03946 (17), -0.03945 (17), -0.03931 (17), -0.03923 (17), -0.03909 (17), -0.03887 (17), -0.03872 (17), -0.03849 (17), -0.03817 (17), -0.03802 (17), -0.03794 (17), -0.03791 (17), -0.03788 (17), -0.03780 (17), -0.03779 (17), -0.03776 (17), 
Length of domains: 3910
Time: pickout 0.0373    decision 0.1541    set_bounds 0.2439    solve 0.4423    add 0.0153    
Accumulated time: pickout 0.1080    decision 0.5532    set_bounds 0.4907    solve 2.2670    add 0.1134    
Current (lb-rhs): -0.04019665718078613
11471 domains visited
Cumulative time: 3.570512294769287

BaB round 9
batch: 3910
splitting decisions: 
split level 0: [/input-8, 571] [/input-8, 90] [/input-8, 571] [/input-8, 564] [/input-8, 571] [/input-8, 564] [/input-8, 571] [/input-8, 564] [/input-8, 571] [/input-8, 564] 
pruning_in_iteration open status: False
ratio of positive domain = 995 / 7820 = 0.1272378516624041
pruning-in-iteration extra time: 6.318092346191406e-05
Time: prepare 0.1603    bound 0.3498    transfer 0.0461    finalize 0.0400    func 0.5974    
Accumulated time: func 2.8607    prepare 0.4743    bound 1.9676    transfer 0.1260    finalize 0.2909    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03757 (18), -0.03742 (18), -0.03724 (18), -0.03700 (18), -0.03685 (18), -0.03680 (18), -0.03666 (18), -0.03665 (18), -0.03646 (18), -0.03623 (18), -0.03608 (18), -0.03589 (18), -0.03554 (18), -0.03540 (18), -0.03534 (18), -0.03531 (18), -0.03529 (18), -0.03522 (18), -0.03521 (18), -0.03519 (18), 
Length of domains: 6814
Time: pickout 0.0551    decision 0.2322    set_bounds 0.3085    solve 0.5993    add 0.0250    
Accumulated time: pickout 0.1631    decision 0.7855    set_bounds 0.7993    solve 2.8664    add 0.1384    
Current (lb-rhs): -0.03757452964782715
18285 domains visited
Cumulative time: 4.804549694061279

BaB round 10
batch: 4096
splitting decisions: 
split level 0: [/input-8, 564] [/input-8, 564] [/input-8, 90] [/input-12, 64] [/input-8, 90] [/input-8, 90] [/input-8, 90] [/input-8, 564] [/input-8, 564] [/input-12, 64] 
pruning_in_iteration open status: False
ratio of positive domain = 601 / 8192 = 0.0733642578125
pruning-in-iteration extra time: 6.222724914550781e-05
Time: prepare 0.1722    bound 0.3587    transfer 0.0464    finalize 0.0438    func 0.6222    
Accumulated time: func 3.4829    prepare 0.6468    bound 2.3262    transfer 0.1724    finalize 0.3347    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03757 (18), -0.03742 (18), -0.03724 (18), -0.03700 (18), -0.03685 (18), -0.03680 (18), -0.03666 (18), -0.03665 (18), -0.03646 (18), -0.03623 (18), -0.03608 (18), -0.03589 (18), -0.03554 (18), -0.03540 (18), -0.03534 (18), -0.03531 (18), -0.03529 (18), -0.03521 (18), -0.03519 (18), -0.03516 (18), 
Length of domains: 10288
Time: pickout 0.0578    decision 0.2366    set_bounds 0.3463    solve 0.6239    add 0.0350    
Accumulated time: pickout 0.2209    decision 1.0221    set_bounds 1.1456    solve 3.4902    add 0.1735    
Current (lb-rhs): -0.03757452964782715
25855 domains visited
current_vram/total_varm: 12.3GB/99.9GB, batch_size increase to 8192
Cumulative time: 6.115320920944214

BaB round 11
batch: 8192
splitting decisions: 
split level 0: [/input-12, 64] [/input-8, 564] [/input-8, 90] [/input-8, 564] [/input-8, 90] [/input-8, 564] [/input-8, 90] [/input-8, 564] [/input-8, 90] [/input-8, 564] 
pruning_in_iteration open status: False
ratio of positive domain = 1672 / 16384 = 0.10205078125
pruning-in-iteration extra time: 8.440017700195312e-05
Time: prepare 0.3447    bound 0.6749    transfer 0.0933    finalize 0.0918    func 1.2070    
Accumulated time: func 4.6900    prepare 0.9918    bound 3.0011    transfer 0.2657    finalize 0.4265    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03757 (18), -0.03742 (18), -0.03724 (18), -0.03700 (18), -0.03685 (18), -0.03680 (18), -0.03666 (18), -0.03665 (18), -0.03646 (18), -0.03623 (18), -0.03608 (18), -0.03589 (18), -0.03531 (18), -0.03529 (18), -0.03521 (18), -0.03516 (18), -0.03500 (18), -0.03472 (18), -0.03472 (18), -0.03459 (18), 
Length of domains: 16730
Time: pickout 0.1171    decision 0.6407    set_bounds 0.5414    solve 1.2105    add 0.0598    
Accumulated time: pickout 0.3380    decision 1.6628    set_bounds 1.6870    solve 4.7007    add 0.2333    
Current (lb-rhs): -0.03757452964782715
40489 domains visited
current_vram/total_varm: 18.5GB/99.9GB, batch_size increase to 16384
Cumulative time: 8.711883068084717

BaB round 12
batch: 16384
splitting decisions: 
split level 0: [/input-8, 90] [/input-8, 90] [/input-8, 90] [/input-8, 90] [/input-8, 90] [/input-8, 90] [/input-8, 90] [/input-8, 564] [/input-8, 90] [/input-8, 564] 
pruning_in_iteration open status: True
ratio of positive domain = 7555 / 32768 = 0.230560302734375
pruning-in-iteration extra time: 0.003476858139038086
Time: prepare 0.7035    bound 1.2538    transfer 0.1816    finalize 0.4473    func 2.5889    
Accumulated time: func 7.2788    prepare 1.6958    bound 4.2550    transfer 0.4474    finalize 0.8738    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03531 (18), -0.03516 (18), -0.03500 (18), -0.03479 (19), -0.03472 (18), -0.03468 (19), -0.03459 (18), -0.03457 (18), -0.03444 (18), -0.03442 (19), -0.03442 (18), -0.03429 (18), -0.03425 (19), -0.03414 (19), -0.03402 (19), -0.03400 (18), -0.03392 (19), -0.03387 (19), -0.03385 (18), -0.03370 (18), 
Length of domains: 25559
Time: pickout 0.2342    decision 1.8649    set_bounds 0.9781    solve 2.5949    add 0.1308    
Accumulated time: pickout 0.5723    decision 3.5277    set_bounds 2.6651    solve 7.2957    add 0.3641    
Current (lb-rhs): -0.03530919551849365
65702 domains visited
current_vram/total_varm: 31.6GB/99.9GB, batch_size increase to 32768
Cumulative time: 14.614702463150024

BaB round 13
batch: 25559
splitting decisions: 
split level 0: [/input-8, 90] [/input-8, 564] [/input-12, 64] [/input-8, 90] [/input-12, 64] [/input-8, 90] [/input-12, 64] [/input-8, 90] [/input-12, 64] [/input-8, 90] 
pruning_in_iteration open status: True
ratio of positive domain = 16901 / 51118 = 0.33062717633710237
pruning-in-iteration extra time: 0.006246089935302734
Time: prepare 1.2883    bound 1.7013    transfer 0.2918    finalize 0.7773    func 4.0620    
Accumulated time: func 11.3408    prepare 2.9846    bound 5.9562    transfer 0.7392    finalize 1.6511    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03249 (19), -0.03238 (19), -0.03218 (19), -0.03194 (19), -0.03189 (20), -0.03183 (19), -0.03179 (19), -0.03179 (20), -0.03169 (20), -0.03168 (19), -0.03162 (19), -0.03158 (20), -0.03145 (19), -0.03137 (20), -0.03124 (20), -0.03123 (19), -0.03114 (20), -0.03113 (19), -0.03103 (20), -0.03091 (19), 
Length of domains: 34217
Time: pickout 0.4596    decision 2.9770    set_bounds 1.9067    solve 4.0726    add 0.1423    
Accumulated time: pickout 1.0319    decision 6.5047    set_bounds 4.5718    solve 11.3683    add 0.5064    
Current (lb-rhs): -0.032486915588378906
99919 domains visited
Cumulative time: 24.307538270950317

BaB round 14
batch: 32768
splitting decisions: 
split level 0: [/input-8, 685] [/input-12, 64] [/input-8, 1138] [/input-12, 64] [/input-8, 1138] [/input-12, 64] [/input-8, 1138] [/input-8, 685] [/input-8, 1138] [/input-12, 64] 
pruning_in_iteration open status: True
ratio of positive domain = 25298 / 65536 = 0.386016845703125
pruning-in-iteration extra time: 0.006318092346191406
Time: prepare 1.4630    bound 2.5146    transfer 0.3678    finalize 0.4083    func 4.7645    
Accumulated time: func 16.1052    prepare 4.4481    bound 8.4709    transfer 1.1069    finalize 2.0594    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03038 (19), -0.03007 (19), -0.02993 (19), -0.02988 (21), -0.02983 (19), -0.02978 (21), -0.02970 (21), -0.02970 (19), -0.02959 (21), -0.02953 (19), -0.02940 (20), -0.02939 (21), -0.02939 (19), -0.02935 (19), -0.02929 (20), -0.02924 (21), -0.02923 (19), -0.02916 (21), -0.02915 (19), -0.02914 (20), 
Length of domains: 41687
Time: pickout 0.5193    decision 3.4204    set_bounds 2.7910    solve 4.7900    add 0.2206    
Accumulated time: pickout 1.5512    decision 9.9251    set_bounds 7.3629    solve 16.1582    add 0.7269    
Current (lb-rhs): -0.03037738800048828
140157 domains visited
Cumulative time: 36.362213134765625

BaB round 15
batch: 32768
splitting decisions: 
split level 0: [/input-8, 685] [/input-8, 685] [/input-8, 1124] [/input-8, 1514] [/input-8, 685] [/input-8, 808] [/input-8, 685] [/input-8, 685] [/input-8, 1124] [/input-8, 1124] 
pruning_in_iteration open status: True
ratio of positive domain = 28952 / 65536 = 0.4417724609375
pruning-in-iteration extra time: 0.006404399871826172
Time: prepare 1.4772    bound 2.3682    transfer 0.3562    finalize 0.4020    func 4.6083    
Accumulated time: func 20.7135    prepare 5.9258    bound 10.8391    transfer 1.4631    finalize 2.4614    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03038 (19), -0.03007 (19), -0.02993 (19), -0.02983 (19), -0.02970 (19), -0.02953 (19), -0.02939 (19), -0.02935 (19), -0.02923 (19), -0.02915 (19), -0.02881 (19), -0.02867 (19), -0.02866 (19), -0.02804 (19), -0.02792 (19), -0.02757 (22), -0.02745 (22), -0.02738 (21), -0.02732 (19), -0.02727 (21), 
Length of domains: 45503
Time: pickout 0.5944    decision 3.9353    set_bounds 2.7035    solve 4.6249    add 0.2135    
Accumulated time: pickout 2.1456    decision 13.8604    set_bounds 10.0664    solve 20.7831    add 0.9404    
Current (lb-rhs): -0.03037738800048828
176741 domains visited
Cumulative time: 48.64431166648865

BaB round 16
batch: 32768
splitting decisions: 
split level 0: [/input-8, 923] [/input-8, 923] [/input-8, 1514] [/input-8, 923] [/input-8, 90] [/input-8, 923] [/input-8, 923] [/input-8, 1514] [/input-8, 923] [/input-8, 923] 
pruning_in_iteration open status: True
ratio of positive domain = 29795 / 65536 = 0.4546356201171875
pruning-in-iteration extra time: 0.006361722946166992
Time: prepare 1.5091    bound 2.3331    transfer 0.3674    finalize 0.3952    func 4.6112    
Accumulated time: func 25.3247    prepare 7.4354    bound 13.1722    transfer 1.8305    finalize 2.8565    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03038 (19), -0.03007 (19), -0.02993 (19), -0.02983 (19), -0.02970 (19), -0.02953 (19), -0.02939 (19), -0.02935 (19), -0.02923 (19), -0.02915 (19), -0.02881 (19), -0.02867 (19), -0.02866 (19), -0.02804 (19), -0.02792 (19), -0.02732 (19), -0.02676 (19), -0.02643 (19), -0.02639 (19), -0.02631 (19), 
Length of domains: 48476
Time: pickout 0.5833    decision 4.1625    set_bounds 3.0431    solve 4.6296    add 0.1538    
Accumulated time: pickout 2.7289    decision 18.0229    set_bounds 13.1095    solve 25.4127    add 1.0943    
Current (lb-rhs): -0.03037738800048828
212482 domains visited
Cumulative time: 61.4313862323761

BaB round 17
batch: 32768
splitting decisions: 
split level 0: [/input-8, 700] [/input-8, 1405] [/input-8, 700] [/input-8, 700] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 700] 
pruning_in_iteration open status: True
ratio of positive domain = 32282 / 65536 = 0.492584228515625
pruning-in-iteration extra time: 0.006268024444580078
Time: prepare 1.4867    bound 2.2443    transfer 0.3614    finalize 1.0503    func 5.1481    
Accumulated time: func 30.4728    prepare 8.9228    bound 15.4165    transfer 2.1920    finalize 3.9068    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03038 (19), -0.03007 (19), -0.02993 (19), -0.02983 (19), -0.02970 (19), -0.02953 (19), -0.02939 (19), -0.02935 (19), -0.02923 (19), -0.02915 (19), -0.02881 (19), -0.02867 (19), -0.02866 (19), -0.02804 (19), -0.02792 (19), -0.02732 (19), -0.02676 (19), -0.02643 (19), -0.02639 (19), -0.02631 (19), 
Length of domains: 48962
Time: pickout 0.5708    decision 3.6002    set_bounds 2.9431    solve 5.1639    add 0.1538    
Accumulated time: pickout 3.2997    decision 21.6231    set_bounds 16.0526    solve 30.5766    add 1.2481    
Current (lb-rhs): -0.03037738800048828
245736 domains visited
Cumulative time: 74.12307643890381

BaB round 18
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] 
pruning_in_iteration open status: True
ratio of positive domain = 34192 / 65536 = 0.521728515625
pruning-in-iteration extra time: 0.00628352165222168
Time: prepare 1.5029    bound 2.1664    transfer 0.3649    finalize 0.4293    func 4.4702    
Accumulated time: func 34.9430    prepare 10.4262    bound 17.5829    transfer 2.5569    finalize 4.3362    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03038 (19), -0.03007 (19), -0.02993 (19), -0.02983 (19), -0.02970 (19), -0.02953 (19), -0.02939 (19), -0.02935 (19), -0.02923 (19), -0.02915 (19), -0.02881 (19), -0.02867 (19), -0.02866 (19), -0.02804 (19), -0.02792 (19), -0.02732 (19), -0.02676 (19), -0.02643 (19), -0.02639 (19), -0.02631 (19), 
Length of domains: 47538
Time: pickout 0.5971    decision 3.7236    set_bounds 3.1661    solve 4.4910    add 0.2018    
Accumulated time: pickout 3.8969    decision 25.3466    set_bounds 19.2187    solve 35.0676    add 1.4499    
Current (lb-rhs): -0.03037738800048828
277080 domains visited
Cumulative time: 86.54470729827881

BaB round 19
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1361] [/input-8, 1361] [/input-8, 1361] [/input-8, 1361] [/input-8, 1361] [/input-8, 700] [/input-8, 700] [/input-8, 1361] [/input-8, 1361] [/input-8, 700] 
pruning_in_iteration open status: True
ratio of positive domain = 35887 / 65536 = 0.5475921630859375
pruning-in-iteration extra time: 0.0059871673583984375
Time: prepare 1.5059    bound 2.0983    transfer 0.3577    finalize 0.9849    func 4.9520    
Accumulated time: func 39.8950    prepare 11.9326    bound 19.6812    transfer 2.9145    finalize 5.3211    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03038 (19), -0.03007 (19), -0.02993 (19), -0.02983 (19), -0.02970 (19), -0.02953 (19), -0.02939 (19), -0.02935 (19), -0.02923 (19), -0.02915 (19), -0.02881 (19), -0.02867 (19), -0.02866 (19), -0.02804 (19), -0.02792 (19), -0.02732 (19), -0.02676 (19), -0.02643 (19), -0.02639 (19), -0.02631 (19), 
Length of domains: 44419
Time: pickout 0.5889    decision 4.2199    set_bounds 2.4059    solve 4.9684    add 0.1014    
Accumulated time: pickout 4.4857    decision 29.5665    set_bounds 21.6246    solve 40.0360    add 1.5513    
Current (lb-rhs): -0.03037738800048828
306729 domains visited
Cumulative time: 99.10697484016418

BaB round 20
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1405] [/input-8, 1124] [/input-8, 1514] [/input-8, 1514] [/input-8, 1508] [/input-8, 1514] [/input-8, 1124] [/input-8, 808] [/input-8, 700] [/input-8, 700] 
pruning_in_iteration open status: True
ratio of positive domain = 38289 / 65536 = 0.5842437744140625
pruning-in-iteration extra time: 0.006001710891723633
Time: prepare 1.5140    bound 2.0083    transfer 0.3632    finalize 1.0223    func 4.9135    
Accumulated time: func 44.8085    prepare 13.4471    bound 21.6895    transfer 3.2777    finalize 6.3434    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03038 (19), -0.03007 (19), -0.02993 (19), -0.02983 (19), -0.02970 (19), -0.02953 (19), -0.02939 (19), -0.02935 (19), -0.02923 (19), -0.02915 (19), -0.02881 (19), -0.02867 (19), -0.02866 (19), -0.02804 (19), -0.02792 (19), -0.02732 (19), -0.02676 (19), -0.02643 (19), -0.02639 (19), -0.02631 (19), 
Length of domains: 38898
Time: pickout 0.5803    decision 4.5671    set_bounds 2.3670    solve 4.9308    add 0.1193    
Accumulated time: pickout 5.0661    decision 34.1336    set_bounds 23.9916    solve 44.9668    add 1.6706    
Current (lb-rhs): -0.03037738800048828
333976 domains visited
Cumulative time: 111.92075109481812

BaB round 21
batch: 32768
splitting decisions: 
split level 0: [/input-8, 685] [/input-8, 685] [/input-8, 685] [/input-8, 685] [/input-8, 685] [/input-8, 1124] [/input-8, 685] [/input-8, 1514] [/input-8, 685] [/input-8, 685] 
pruning_in_iteration open status: True
ratio of positive domain = 35760 / 65536 = 0.545654296875
pruning-in-iteration extra time: 0.006079912185668945
Time: prepare 1.5055    bound 2.1034    transfer 0.3657    finalize 0.4481    func 4.4289    
Accumulated time: func 49.2374    prepare 14.9530    bound 23.7929    transfer 3.6434    finalize 6.7914    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03038 (19), -0.03007 (19), -0.02993 (19), -0.02983 (19), -0.02970 (19), -0.02953 (19), -0.02939 (19), -0.02935 (19), -0.02923 (19), -0.02915 (19), -0.02881 (19), -0.02867 (19), -0.02866 (19), -0.02804 (19), -0.02792 (19), -0.02732 (19), -0.02676 (19), -0.02643 (19), -0.02639 (19), -0.02631 (19), 
Length of domains: 35906
Time: pickout 0.5835    decision 4.4715    set_bounds 3.0448    solve 4.4485    add 0.1437    
Accumulated time: pickout 5.6496    decision 38.6051    set_bounds 27.0364    solve 49.4153    add 1.8143    
Current (lb-rhs): -0.03037738800048828
363752 domains visited
Cumulative time: 124.8629240989685

BaB round 22
batch: 32768
splitting decisions: 
split level 0: [/input-8, 685] [/input-8, 685] [/input-8, 685] [/input-8, 685] [/input-8, 685] [/input-8, 685] [/input-8, 685] [/input-8, 685] [/input-8, 685] [/input-8, 685] 
pruning_in_iteration open status: True
ratio of positive domain = 38048 / 65536 = 0.58056640625
pruning-in-iteration extra time: 0.006171464920043945
Time: prepare 1.5008    bound 2.0261    transfer 0.3686    finalize 0.4369    func 4.3393    
Accumulated time: func 53.5767    prepare 16.4543    bound 25.8191    transfer 4.0120    finalize 7.2284    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03038 (19), -0.03007 (19), -0.02993 (19), -0.02983 (19), -0.02970 (19), -0.02953 (19), -0.02939 (19), -0.02935 (19), -0.02923 (19), -0.02915 (19), -0.02881 (19), -0.02867 (19), -0.02866 (19), -0.02804 (19), -0.02792 (19), -0.02732 (19), -0.02676 (19), -0.02643 (19), -0.02639 (19), -0.02631 (19), 
Length of domains: 30626
Time: pickout 0.5827    decision 4.4243    set_bounds 2.9599    solve 4.3595    add 0.1366    
Accumulated time: pickout 6.2323    decision 43.0294    set_bounds 29.9963    solve 53.7749    add 1.9509    
Current (lb-rhs): -0.03037738800048828
391240 domains visited
Cumulative time: 137.58346009254456

BaB round 23
batch: 30626
splitting decisions: 
split level 0: [/input-12, 64] [/input-8, 1138] [/input-8, 1138] [/input-8, 1138] [/input-8, 1138] [/input-8, 1138] [/input-8, 1138] [/input-8, 1138] [/input-8, 1138] [/input-8, 1138] 
pruning_in_iteration open status: True
ratio of positive domain = 35528 / 61252 = 0.5800300398354339
pruning-in-iteration extra time: 0.005993366241455078
Time: prepare 1.4146    bound 1.4158    transfer 0.3444    finalize 0.9483    func 4.1294    
Accumulated time: func 57.7061    prepare 17.8694    bound 27.2349    transfer 4.3564    finalize 8.1767    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02720 (20), -0.02696 (20), -0.02680 (20), -0.02666 (20), -0.02649 (20), -0.02643 (20), -0.02625 (20), -0.02625 (20), -0.02606 (20), -0.02593 (20), -0.02586 (20), -0.02569 (20), -0.02552 (20), -0.02512 (20), -0.02492 (20), -0.02421 (20), -0.02385 (20), -0.02357 (20), -0.02346 (21), -0.02335 (20), 
Length of domains: 25724
Time: pickout 0.5621    decision 3.7037    set_bounds 2.6515    solve 4.1445    add 0.0940    
Accumulated time: pickout 6.7944    decision 46.7332    set_bounds 32.6478    solve 57.9193    add 2.0448    
Current (lb-rhs): -0.027204275131225586
416964 domains visited
Cumulative time: 148.98347091674805

BaB round 24
batch: 25724
splitting decisions: 
split level 0: [/input-8, 1138] [/input-12, 64] [/input-8, 1508] [/input-12, 64] [/input-8, 564] [/input-12, 64] [/input-8, 1508] [/input-12, 64] [/input-8, 564] [/input-12, 64] 
pruning_in_iteration open status: True
ratio of positive domain = 30219 / 51448 = 0.5873697714196859
pruning-in-iteration extra time: 0.0057260990142822266
Time: prepare 1.2384    bound 1.1852    transfer 0.2939    finalize 0.3723    func 3.0982    
Accumulated time: func 60.8042    prepare 19.1083    bound 28.4201    transfer 4.6503    finalize 8.5490    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02510 (21), -0.02486 (21), -0.02469 (21), -0.02457 (21), -0.02436 (21), -0.02433 (21), -0.02414 (21), -0.02409 (21), -0.02394 (21), -0.02380 (21), -0.02379 (21), -0.02355 (21), -0.02340 (21), -0.02303 (21), -0.02282 (21), -0.02206 (21), -0.02168 (21), -0.02149 (21), -0.02129 (21), -0.02126 (21), 
Length of domains: 21229
Time: pickout 0.4771    decision 2.7917    set_bounds 2.2451    solve 3.9840    add 0.1433    
Accumulated time: pickout 7.2715    decision 49.5249    set_bounds 34.8929    solve 61.9034    add 2.1882    
Current (lb-rhs): -0.0251009464263916
438193 domains visited
Cumulative time: 158.90438270568848

BaB round 25
batch: 21229
splitting decisions: 
split level 0: [/input-8, 564] [/input-8, 564] [/input-8, 1124] [/input-8, 1508] [/input-8, 1124] [/input-8, 1508] [/input-8, 685] [/input-8, 685] [/input-8, 1508] [/input-8, 1508] 
pruning_in_iteration open status: True
ratio of positive domain = 26451 / 42458 = 0.6229921334024212
pruning-in-iteration extra time: 0.005434989929199219
Time: prepare 1.0296    bound 0.9438    transfer 0.2386    finalize 0.7176    func 2.9341    
Accumulated time: func 63.7383    prepare 20.1384    bound 29.3639    transfer 4.8889    finalize 9.2666    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02298 (22), -0.02271 (22), -0.02257 (22), -0.02225 (22), -0.02221 (22), -0.02202 (22), -0.02197 (22), -0.02184 (22), -0.02184 (22), -0.02181 (22), -0.02160 (22), -0.02143 (22), -0.02075 (22), -0.02067 (22), -0.01996 (22), -0.01993 (22), -0.01989 (22), -0.01985 (22), -0.01963 (22), -0.01959 (22), 
Length of domains: 16007
Time: pickout 0.4045    decision 2.2326    set_bounds 1.9719    solve 2.9447    add 0.0772    
Accumulated time: pickout 7.6760    decision 51.7575    set_bounds 36.8647    solve 64.8480    add 2.2654    
Current (lb-rhs): -0.022979021072387695
454200 domains visited
Cumulative time: 166.7114658355713

BaB round 26
batch: 16007
splitting decisions: 
split level 0: [/input-8, 700] [/input-12, 64] [/input-8, 1124] [/input-8, 1514] [/input-8, 700] [/input-8, 1514] [/input-8, 700] [/input-8, 1514] [/input-8, 1514] [/input-8, 1508] 
pruning_in_iteration open status: True
ratio of positive domain = 20704 / 32014 = 0.6467170612856875
pruning-in-iteration extra time: 0.005448102951049805
Time: prepare 0.7522    bound 0.7098    transfer 0.1797    finalize 0.5447    func 2.1895    
Accumulated time: func 65.9278    prepare 20.8911    bound 30.0737    transfer 5.0686    finalize 9.8114    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02083 (23), -0.02042 (23), -0.02042 (23), -0.02027 (23), -0.02012 (23), -0.02002 (23), -0.01984 (23), -0.01971 (23), -0.01969 (23), -0.01955 (23), -0.01931 (23), -0.01914 (23), -0.01898 (23), -0.01859 (23), -0.01855 (23), -0.01838 (23), -0.01827 (23), -0.01804 (23), -0.01798 (23), -0.01784 (23), 
Length of domains: 11310
Time: pickout 0.3000    decision 1.2773    set_bounds 1.0385    solve 2.1978    add 0.0444    
Accumulated time: pickout 7.9760    decision 53.0348    set_bounds 37.9032    solve 67.0458    add 2.3098    
Current (lb-rhs): -0.020825743675231934
465510 domains visited
Cumulative time: 171.7058310508728

BaB round 27
batch: 11310
splitting decisions: 
split level 0: [/input-12, 64] [/input-8, 1124] [/input-8, 700] [/input-8, 700] [/input-12, 64] [/input-8, 700] [/input-8, 700] [/input-8, 700] [/input-8, 1405] [/input-8, 700] 
pruning_in_iteration open status: True
ratio of positive domain = 15183 / 22620 = 0.6712201591511937
pruning-in-iteration extra time: 0.005185842514038086
Time: prepare 0.5327    bound 0.5122    transfer 0.1293    finalize 0.1565    func 1.3332    
Accumulated time: func 67.2610    prepare 21.4242    bound 30.5859    transfer 5.1979    finalize 9.9679    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01932 (24), -0.01895 (24), -0.01891 (24), -0.01874 (24), -0.01860 (24), -0.01854 (24), -0.01838 (24), -0.01823 (24), -0.01818 (24), -0.01803 (24), -0.01782 (24), -0.01767 (24), -0.01744 (24), -0.01707 (24), -0.01705 (24), -0.01687 (24), -0.01672 (24), -0.01652 (24), -0.01650 (24), -0.01633 (24), 
Length of domains: 7437
Time: pickout 0.2137    decision 0.6712    set_bounds 1.0146    solve 1.3407    add 0.0994    
Accumulated time: pickout 8.1897    decision 53.7060    set_bounds 38.9178    solve 68.3865    add 2.4091    
Current (lb-rhs): -0.019318461418151855
472947 domains visited
Cumulative time: 175.16213965415955

BaB round 28
batch: 7437
splitting decisions: 
split level 0: [/input-8, 1508] [/input-8, 700] [/input-8, 700] [/input-8, 700] [/input-8, 808] [/input-8, 808] [/input-8, 808] [/input-8, 808] [/input-8, 700] [/input-8, 700] 
pruning_in_iteration open status: True
ratio of positive domain = 9888 / 14874 = 0.6647841871722469
pruning-in-iteration extra time: 0.005092144012451172
Time: prepare 0.3487    bound 0.4038    transfer 0.0837    finalize 0.0944    func 0.9326    
Accumulated time: func 68.1937    prepare 21.7732    bound 30.9897    transfer 5.2816    finalize 10.0622    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01706 (25), -0.01677 (25), -0.01655 (25), -0.01650 (25), -0.01637 (25), -0.01625 (25), -0.01605 (25), -0.01600 (25), -0.01598 (25), -0.01580 (25), -0.01550 (25), -0.01543 (25), -0.01519 (25), -0.01496 (25), -0.01490 (25), -0.01473 (25), -0.01465 (25), -0.01449 (25), -0.01441 (25), -0.01431 (25), 
Length of domains: 4986
Time: pickout 0.1408    decision 0.6494    set_bounds 0.5273    solve 0.9366    add 0.0194    
Accumulated time: pickout 8.3305    decision 54.3554    set_bounds 39.4451    solve 69.3232    add 2.4285    
Current (lb-rhs): -0.017063617706298828
477933 domains visited
Cumulative time: 177.50025916099548

BaB round 29
batch: 4986
splitting decisions: 
split level 0: [/input-8, 1508] [/input-8, 1508] [/input-8, 923] [/input-8, 1361] [/input-8, 923] [/input-8, 1361] [/input-8, 923] [/input-8, 923] [/input-8, 923] [/input-8, 1361] 
pruning_in_iteration open status: True
ratio of positive domain = 6464 / 9972 = 0.6482150020056157
pruning-in-iteration extra time: 0.0049364566802978516
Time: prepare 0.2342    bound 0.3459    transfer 0.0582    finalize 0.2245    func 0.8641    
Accumulated time: func 69.0578    prepare 22.0078    bound 31.3356    transfer 5.3398    finalize 10.2868    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01454 (26), -0.01452 (26), -0.01450 (26), -0.01425 (26), -0.01420 (26), -0.01413 (26), -0.01397 (26), -0.01397 (26), -0.01394 (26), -0.01369 (26), -0.01364 (26), -0.01357 (26), -0.01266 (26), -0.01263 (26), -0.01263 (26), -0.01257 (26), -0.01248 (26), -0.01236 (26), -0.01231 (26), -0.01224 (26), 
Length of domains: 3508
Time: pickout 0.0903    decision 0.4904    set_bounds 0.2354    solve 0.8664    add 0.0145    
Accumulated time: pickout 8.4207    decision 54.8458    set_bounds 39.6805    solve 70.1896    add 2.4430    
Current (lb-rhs): -0.014537811279296875
481441 domains visited
Cumulative time: 179.24204564094543

BaB round 30
batch: 3508
splitting decisions: 
split level 0: [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] 
pruning_in_iteration open status: True
ratio of positive domain = 4399 / 7016 = 0.6269954389965793
pruning-in-iteration extra time: 0.004998207092285156
Time: prepare 0.1592    bound 0.3319    transfer 0.0405    finalize 0.0436    func 0.7547    
Accumulated time: func 69.8125    prepare 22.1672    bound 31.6675    transfer 5.3802    finalize 10.3303    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01288 (27), -0.01276 (27), -0.01273 (27), -0.01272 (27), -0.01254 (27), -0.01252 (27), -0.01230 (27), -0.01220 (27), -0.01217 (27), -0.01215 (27), -0.01197 (27), -0.01195 (27), -0.01103 (27), -0.01098 (27), -0.01089 (27), -0.01084 (27), -0.01084 (27), -0.01083 (27), -0.01064 (27), -0.01062 (27), 
Length of domains: 2617
Time: pickout 0.0692    decision 0.2114    set_bounds 0.1504    solve 0.7563    add 0.0132    
Accumulated time: pickout 8.4899    decision 55.0571    set_bounds 39.8309    solve 70.9459    add 2.4562    
Current (lb-rhs): -0.01287531852722168
484058 domains visited
Cumulative time: 180.47335195541382

BaB round 31
batch: 2617
splitting decisions: 
split level 0: [/input-8, 1361] [/input-8, 1361] [/input-8, 700] [/input-8, 1361] [/input-8, 700] [/input-8, 1361] [/input-8, 1361] [/input-8, 1361] [/input-8, 1361] [/input-8, 923] 
pruning_in_iteration open status: True
ratio of positive domain = 3441 / 5234 = 0.6574321742453191
pruning-in-iteration extra time: 0.00503230094909668
Time: prepare 0.1160    bound 0.2975    transfer 0.0310    finalize 0.0374    func 0.4825    
Accumulated time: func 70.2949    prepare 22.2834    bound 31.9650    transfer 5.4112    finalize 10.3677    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01047 (28), -0.01038 (28), -0.01034 (28), -0.01030 (28), -0.01024 (28), -0.01020 (28), -0.00991 (28), -0.00981 (28), -0.00976 (28), -0.00974 (28), -0.00967 (28), -0.00961 (28), -0.00932 (28), -0.00924 (28), -0.00920 (28), -0.00876 (28), -0.00867 (28), -0.00861 (28), -0.00859 (28), -0.00852 (28), 
Length of domains: 1793
Time: pickout 0.0488    decision 0.1609    set_bounds 0.1155    solve 0.4839    add 0.0059    
Accumulated time: pickout 8.5387    decision 55.2181    set_bounds 39.9464    solve 71.4298    add 2.4620    
Current (lb-rhs): -0.010472655296325684
485851 domains visited
Cumulative time: 181.31624794006348

BaB round 32
batch: 1793
splitting decisions: 
split level 0: [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] 
pruning_in_iteration open status: True
ratio of positive domain = 2656 / 3586 = 0.7406581148912437
pruning-in-iteration extra time: 0.004952907562255859
Time: prepare 0.0808    bound 0.2761    transfer 0.0165    finalize 0.0262    func 0.4000    
Accumulated time: func 70.6949    prepare 22.3645    bound 32.2411    transfer 5.4277    finalize 10.3940    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00846 (29), -0.00837 (29), -0.00831 (29), -0.00829 (29), -0.00819 (29), -0.00815 (29), -0.00789 (29), -0.00780 (29), -0.00774 (29), -0.00771 (29), -0.00763 (29), -0.00757 (29), -0.00729 (29), -0.00719 (29), -0.00713 (29), -0.00673 (29), -0.00663 (29), -0.00657 (29), -0.00656 (29), -0.00647 (29), 
Length of domains: 930
Time: pickout 0.0316    decision 0.1148    set_bounds 0.2094    solve 0.4014    add 0.0043    
Accumulated time: pickout 8.5703    decision 55.3329    set_bounds 40.1558    solve 71.8312    add 2.4663    
Current (lb-rhs): -0.008455634117126465
486781 domains visited
Cumulative time: 182.0975968837738

BaB round 33
batch: 930
splitting decisions: 
split level 0: [/input-8, 808] [/input-8, 808] [/input-8, 1896] [/input-8, 1896] [/input-8, 808] [/input-8, 808] [/input-8, 808] [/input-8, 808] [/input-8, 1896] [/input-8, 808] 
pruning_in_iteration open status: True
ratio of positive domain = 1348 / 1860 = 0.7247311827956989
pruning-in-iteration extra time: 0.004790067672729492
Time: prepare 0.0384    bound 0.2068    transfer 0.0084    finalize 0.0123    func 0.2660    
Accumulated time: func 70.9610    prepare 22.4031    bound 32.4478    transfer 5.4361    finalize 10.4062    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00597 (30), -0.00589 (30), -0.00585 (30), -0.00580 (30), -0.00572 (30), -0.00565 (30), -0.00539 (30), -0.00532 (30), -0.00525 (30), -0.00524 (30), -0.00524 (30), -0.00515 (30), -0.00515 (30), -0.00510 (30), -0.00508 (30), -0.00507 (30), -0.00498 (30), -0.00492 (30), -0.00483 (30), -0.00470 (30), 
Length of domains: 512
Time: pickout 0.0183    decision 0.0675    set_bounds 0.0410    solve 0.2673    add 0.0068    
Accumulated time: pickout 8.5886    decision 55.4004    set_bounds 40.1968    solve 72.0985    add 2.4731    
Current (lb-rhs): -0.005970358848571777
487293 domains visited
Cumulative time: 182.50875115394592

BaB round 34
batch: 512
splitting decisions: 
split level 0: [/input-8, 787] [/input-8, 787] [/input-8, 787] [/input-8, 787] [/input-8, 787] [/input-8, 787] [/input-8, 787] [/input-8, 787] [/input-8, 787] [/input-8, 787] 
pruning_in_iteration open status: True
ratio of positive domain = 765 / 1024 = 0.7470703125
pruning-in-iteration extra time: 0.0047304630279541016
Time: prepare 0.0202    bound 0.1775    transfer 0.0028    finalize 0.0062    func 0.2068    
Accumulated time: func 71.1678    prepare 22.4235    bound 32.6253    transfer 5.4389    finalize 10.4124    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00489 (31), -0.00481 (31), -0.00474 (31), -0.00474 (31), -0.00466 (31), -0.00458 (31), -0.00432 (31), -0.00422 (31), -0.00418 (31), -0.00416 (31), -0.00415 (31), -0.00410 (31), -0.00406 (31), -0.00405 (31), -0.00403 (31), -0.00402 (31), -0.00395 (31), -0.00387 (31), -0.00373 (31), -0.00365 (31), 
Length of domains: 259
Time: pickout 0.0104    decision 0.0405    set_bounds 0.0218    solve 0.2070    add 0.0023    
Accumulated time: pickout 8.5990    decision 55.4410    set_bounds 40.2186    solve 72.3055    add 2.4753    
Current (lb-rhs): -0.004892706871032715
487552 domains visited
Cumulative time: 182.79595565795898

BaB round 35
batch: 259
splitting decisions: 
split level 0: [/input, 2682] [/input, 2682] [/input, 2682] [/input, 2682] [/input, 2682] [/input, 2682] [/input, 2682] [/input-8, 1896] [/input-8, 1896] [/input-8, 1896] 
pruning_in_iteration open status: True
ratio of positive domain = 435 / 518 = 0.8397683397683398
pruning-in-iteration extra time: 0.004716634750366211
Time: prepare 0.0106    bound 0.1624    transfer 0.0016    finalize 0.0029    func 0.1775    
Accumulated time: func 71.3453    prepare 22.4343    bound 32.7877    transfer 5.4405    finalize 10.4154    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00304 (32), -0.00294 (32), -0.00288 (32), -0.00287 (32), -0.00279 (32), -0.00272 (32), -0.00258 (32), -0.00248 (32), -0.00245 (32), -0.00245 (32), -0.00242 (32), -0.00235 (32), -0.00234 (32), -0.00230 (32), -0.00229 (32), -0.00226 (32), -0.00219 (32), -0.00213 (32), -0.00203 (32), -0.00194 (32), 
Length of domains: 83
Time: pickout 0.0051    decision 0.0263    set_bounds 0.0114    solve 0.1777    add 0.0015    
Accumulated time: pickout 8.6041    decision 55.4673    set_bounds 40.2300    solve 72.4831    add 2.4768    
Current (lb-rhs): -0.0030363798141479492
487635 domains visited
Cumulative time: 183.02150297164917

BaB round 36
batch: 83
splitting decisions: 
split level 0: [/input, 2682] [/input, 2682] [/input, 2682] [/input, 2682] [/input, 2682] [/input, 2682] [/input, 2682] [/input, 2682] [/input, 2682] [/input, 2682] 
split level 1: [/input-8, 700] [/input-8, 1393] [/input-8, 1393] [/input-8, 1393] [/input-8, 1393] [/input-8, 1393] [/input-8, 1393] [/input-8, 1393] [/input-8, 700] [/input-8, 1393] 
pruning_in_iteration open status: True
ratio of positive domain = 326 / 332 = 0.9819277108433735
pruning-in-iteration extra time: 0.004612922668457031
Time: prepare 0.0083    bound 0.1158    transfer 0.0010    finalize 0.0018    func 0.1270    
Accumulated time: func 71.4723    prepare 22.4427    bound 32.9035    transfer 5.4416    finalize 10.4172    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00037 (34), -0.00028 (34), -0.00022 (34), -0.00021 (34), -0.00011 (34), -0.00006 (34), 
Length of domains: 6
Time: pickout 0.0024    decision 0.0220    set_bounds 0.0105    solve 0.1272    add 0.0008    
Accumulated time: pickout 8.6065    decision 55.4893    set_bounds 40.2405    solve 72.6103    add 2.4776    
Current (lb-rhs): -0.0003731250762939453
487641 domains visited
Cumulative time: 183.1876518726349

BaB round 37
batch: 6
splitting decisions: 
split level 0: [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] 
split level 1: [/input-8, 1066] [/input-8, 1066] [/input-8, 1066] [/input-8, 1066] [/input-8, 1066] [/input-8, 1066] 
split level 2: [/input-8, 2018] [/input-8, 2018] [/input-8, 2018] [/input-8, 2018] [/input-8, 2018] [/input-8, 2018] 
split level 3: [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] 
split level 4: [/input, 2632] [/input, 2632] [/input, 2632] [/input, 2632] [/input, 2632] [/input, 2632] 
split level 5: [/input-8, 1836] [/input-8, 1836] [/input-8, 1836] [/input-8, 1836] [/input-8, 1836] [/input-8, 1836] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 384 / 384 = 1.0
pruning-in-iteration extra time: 4.9591064453125e-05
Time: prepare 0.0100    bound 0.0039    transfer 0.0025    finalize 0.0020    func 0.0189    
Accumulated time: func 71.4912    prepare 22.4532    bound 32.9073    transfer 5.4441    finalize 10.4192    
all_split False
Length of domains: 0
Time: pickout 0.0008    decision 0.0217    set_bounds 0.0269    solve 0.0190    add 0.0001    
Accumulated time: pickout 8.6072    decision 55.5109    set_bounds 40.2674    solve 72.6293    add 2.4777    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
487641 domains visited
Cumulative time: 183.25831604003906


Properties batch 3, size 1
Remaining timeout: 15.020684957504272
Verifying property 3 with 1 instances.
##### Instance 169 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.1689691543579102.

Properties batch 4, size 1
Remaining timeout: 14.886361122131348
Verifying property 4 with 1 instances.
##### Instance 169 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.862372875213623.

Properties batch 5, size 1
Remaining timeout: 14.783614873886108
Verifying property 5 with 1 instances.
##### Instance 169 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.7237040996551514.

Properties batch 6, size 1
Remaining timeout: 14.682612419128418
Verifying property 6 with 1 instances.
##### Instance 169 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.2507152557373047.

Properties batch 7, size 1
Remaining timeout: 14.58143424987793
Verifying property 7 with 1 instances.
##### Instance 169 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.0328855514526367.

Properties batch 8, size 1
Remaining timeout: 14.480456113815308
Verifying property 8 with 1 instances.
##### Instance 169 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.384807586669922.
Result: safe in 185.6446 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 170, vnnlib ID: 170 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.00588608, -16.16182518,  -6.58917904,  -9.66689301,  -7.57059002,
          -8.67937565, -11.63756847, -10.25432014, -14.60658455, -14.13991070]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [571]; unstable size 571; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 151, 1, 571] with unstable size 150 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 571] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 571] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [150]; unstable size 150; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 150] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 150] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.57134914,  7.26472569, -1.64735627,  1.38431573,  0.25252271,
          3.19363260,  1.94417942,  5.92638016,  5.30164909]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.00588608, -16.16182518,  -6.58917904,  -9.66689301,  -7.57059002,
          -8.67937565, -11.63756847, -10.25432014, -14.60658455, -14.13991070]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.00588608, -16.16182518,  -6.58917904,  -9.66689301,  -7.57059002,
           -8.67937565, -11.63756847, -10.25432014, -14.60658455, -14.13991070]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.98141098]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.84603173, -0.94126981, -0.86190474,  ..., -0.33809513,
            -0.48095238, -0.51269841],
           [-0.25873005, -0.30634910, -0.27460307,  ..., -0.29047608,
            -0.33809513, -0.43333322],
           [ 0.42380959,  0.36031753,  0.39206356,  ..., -0.08412688,
            -0.14761895, -0.32222211],
           ...,
           [ 0.47142863,  0.48730165,  0.55079371,  ...,  0.05873025,
             0.01111121,  0.12222230],
           [ 0.12222230,  0.10634929,  0.23333341,  ..., -0.02063482,
            -0.02063482,  0.16984135],
           [-0.19523799, -0.41746020, -0.29047608,  ...,  0.16984135,
             0.31269848,  0.58253974]],

          [[-0.67632848, -0.78904986, -0.72463763,  ..., -0.03220600,
            -0.17713353, -0.20933965],
           [ 0.04830930, -0.01610294,  0.01610318,  ...,  0.03220624,
            -0.01610294, -0.11272129],
           [ 0.88566834,  0.82125610,  0.85346222,  ...,  0.24154601,
             0.19323683, -0.01610294],
           ...,
           [ 0.95008057,  0.98228669,  1.03059590,  ...,  0.62801939,
             0.56360716,  0.61191636],
           [ 0.70853472,  0.72463775,  0.85346222,  ...,  0.66022551,
             0.62801939,  0.77294695],
           [ 0.46698883,  0.22544295,  0.40257660,  ...,  0.77294695,
             0.85346222,  1.14331758]],

          [[-0.01349309, -0.07346311,  0.03148442,  ...,  0.76611710,
             0.66116959,  0.64617711],
           [-0.02848560, -0.04347810,  0.00149941,  ...,  0.78110963,
             0.78110963,  0.78110963],
           [-0.14842562, -0.19340314, -0.14842562,  ...,  0.81109464,
             0.81109464,  0.76611710],
           ...,
           [-0.53823084, -0.56821585, -0.50824583,  ..., -0.68815589,
            -0.65817088, -0.49325335],
           [-0.58320838, -0.73313338, -0.61319339,  ..., -0.83808094,
            -0.83808094, -0.65817088],
           [-0.80809593, -1.04797614, -0.85307342,  ..., -0.74812591,
            -0.67316341, -0.43328333]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0561 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 171, vnnlib ID: 171 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-13.39601326, -14.69097233, -12.64669704, -12.07789993, -12.42763519,
         -12.80878258, -10.90289593, -13.06480980, -16.92237282, -13.27768993]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [576]; unstable size 576; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 200, 1, 576] with unstable size 199 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 9, 1, 576] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 576] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [199]; unstable size 199; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 9, 1, 199] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 199] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.12973356, 2.10289240, 0.60040092, 0.30346054, 0.51467490, 0.89803588,
         1.03227448, 3.96525621, 0.86045074]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0655 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 172, vnnlib ID: 172 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -6.66107941, -11.79125309,  -7.86607170, -10.32452965,  -7.72983742,
         -11.17636871, -10.86951828, -11.03235435,  -7.73300457, -11.89622021]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [722]; unstable size 722; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 180, 1, 722] with unstable size 179 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 722] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 722] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [179]; unstable size 179; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 179] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 179] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.99104714,  0.21340615,  2.51710534, -0.09744799,  3.08586311,
          3.07672834,  2.41397595, -0.15205109,  3.96747780]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.66107941, -11.79125309,  -7.86607170, -10.32452965,  -7.72983742,
         -11.17636871, -10.86951828, -11.03235435,  -7.73300457, -11.89622021]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.74it/s]100%|██████████| 1/1 [00:00<00:00,  8.74it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.91187239, -11.79963017,  -8.07671642, -10.41768456,  -7.87977695,
          -11.27148438, -10.87535191, -11.22656631,  -7.33530617, -11.91874981],
         [ -6.91187239, -11.79963017,  -8.07671642, -10.41768456,  -7.87977695,
          -11.27148438, -10.87535191, -11.22656631,  -7.33530617, -11.91874981]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.96790457, 0.42343378]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1183 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 19.568561553955078
alpha/beta optimization time: 1.167888879776001
initial alpha-crown bounds: tensor([[ 4.04605579,  0.26190555,  2.56589389, -0.03486371,  3.13469958,
          3.12771082,  2.50110102, -0.06319022,  4.02924824]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.06319022178649902
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.66227173805237
Verifying property 0 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.046055793762207.

Properties batch 1, size 1
Remaining timeout: 198.53914260864258
Verifying property 1 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2619055509567261.

Properties batch 2, size 1
Remaining timeout: 198.4376084804535
Verifying property 2 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.5658938884735107.

Properties batch 3, size 1
Remaining timeout: 198.33657240867615
Verifying property 3 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.03486371]], device='cuda:0') need to verify.
Model prediction is: tensor([ -6.66107941, -11.79125309,  -7.86607170, -10.32452965,  -7.72983742,
        -11.17636871, -10.86951828, -11.03235435,  -7.73300457, -11.89622021],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.03486371]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 722
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 177
Node /15 input 0: size torch.Size([100]) unstable 19
-----------------
# of unstable neurons: 918
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 41] 
split level 1: [/input-12, 45] 
split level 2: [/input-12, 37] 
split level 3: [/input-12, 78] 
split level 4: [/input-12, 90] 
split level 5: [/input-12, 92] 
split level 6: [/input-12, 58] 
split level 7: [/input-8, 652] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.482269287109375e-05
Time: prepare 0.0031    bound 0.0041    transfer 0.0017    finalize 0.0017    func 0.0106    
Accumulated time: func 0.0106    prepare 0.0035    bound 0.0041    transfer 0.0017    finalize 0.0017    
all_split False
Length of domains: 0
Time: pickout 0.0004    decision 0.0230    set_bounds 0.0178    solve 0.0107    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0230    set_bounds 0.0178    solve 0.0107    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05643820762634277


Properties batch 4, size 1
Remaining timeout: 198.12009191513062
Verifying property 4 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.134699583053589.

Properties batch 5, size 1
Remaining timeout: 198.01464581489563
Verifying property 5 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.1277108192443848.

Properties batch 6, size 1
Remaining timeout: 197.9128348827362
Verifying property 6 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.501101016998291.

Properties batch 7, size 1
Remaining timeout: 197.81192135810852
Verifying property 7 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.06319022]], device='cuda:0') need to verify.
Model prediction is: tensor([ -6.66107941, -11.79125309,  -7.86607170, -10.32452965,  -7.72983742,
        -11.17636871, -10.86951828, -11.03235435,  -7.73300457, -11.89622021],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.06319022]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 722
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 177
Node /15 input 0: size torch.Size([100]) unstable 19
-----------------
# of unstable neurons: 918
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 21] 
split level 1: [/input-12, 78] 
split level 2: [/input-8, 1331] 
split level 3: [/input-12, 74] 
split level 4: [/input-12, 99] 
split level 5: [/input-8, 1330] 
split level 6: [/input-8, 1396] 
split level 7: [/input-8, 564] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.744529724121094e-05
Time: prepare 0.0031    bound 0.0041    transfer 0.0007    finalize 0.0016    func 0.0096    
Accumulated time: func 0.0096    prepare 0.0035    bound 0.0041    transfer 0.0007    finalize 0.0016    
all_split False
Length of domains: 0
Time: pickout 0.0004    decision 0.0227    set_bounds 0.0177    solve 0.0096    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0227    set_bounds 0.0177    solve 0.0096    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05479884147644043


Properties batch 8, size 1
Remaining timeout: 197.5967767238617
Verifying property 8 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.029248237609863.
Result: safe in 2.5299 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 173, vnnlib ID: 173 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.96530533, -6.64648819, -4.20401192, -3.31281948, -3.79201317,
         -4.34627962, -3.10760784, -5.26119852, -7.51378918, -6.06500340]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [631]; unstable size 631; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 231, 1, 631] with unstable size 230 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 631] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 631] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [230]; unstable size 230; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 230] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 230] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.21187758,  1.27583206, -0.23146820, -0.57322264,  0.65389633,
         -1.39956295,  0.85230488,  2.21380854,  0.78132939]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.96530533, -6.64648819, -4.20401192, -3.31281948, -3.79201317,
         -4.34627962, -3.10760784, -5.26119852, -7.51378918, -6.06500340]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.96530533, -6.64648819, -4.20401287, -3.31281900, -3.79201317,
          -4.34627962, -3.10760832, -5.26119804, -7.51378918, -6.06500387],
         [-4.96530533, -6.64648819, -4.20401287, -3.31281900, -3.79201317,
          -4.34627962, -3.10760832, -5.26119804, -7.51378918, -6.06500387]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.89119387,  0.47919416, -0.20521069]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.12222230,  0.18571436,  0.09047628,  ..., -1.36984122,
            -0.30634910, -0.08412688],
           [ 0.04285724,  0.18571436,  0.26507944,  ..., -0.56031746,
            -0.09999990, -0.02063482],
           [ 0.16984135,  0.09047628,  0.20158738,  ..., -0.43333322,
            -0.40158719,  0.07460327],
           ...,
           [ 0.37619054,  0.24920642, -0.08412688,  ...,  0.20158738,
             0.12222230,  0.26507944],
           [ 0.20158738, -0.09999990,  0.24920642,  ...,  0.04285724,
             0.40793657,  0.29682547],
           [-0.21111101,  0.16984135,  0.58253974,  ...,  0.20158738,
             0.58253974,  0.18571436]],

          [[ 0.16103071,  0.22544295,  0.12882459,  ..., -1.35265696,
            -0.27375188, -0.04830906],
           [ 0.08051541,  0.22544295,  0.30595824,  ..., -0.53140092,
            -0.06441211,  0.01610318],
           [ 0.20933989,  0.12882459,  0.24154601,  ..., -0.40257636,
            -0.37037024,  0.11272153],
           ...,
           [ 0.41867965,  0.28985518, -0.04830906,  ...,  0.24154601,
             0.16103071,  0.30595824],
           [ 0.24154601, -0.06441211,  0.28985518,  ...,  0.08051541,
             0.45088577,  0.33816436],
           [-0.17713353,  0.20933989,  0.62801939,  ...,  0.24154601,
             0.62801939,  0.22544295]],

          [[ 0.28635699,  0.34632701,  0.25637197,  ..., -1.12293863,
            -0.11844061,  0.09145443],
           [ 0.21139447,  0.34632701,  0.42128953,  ..., -0.35832080,
             0.07646193,  0.15142445],
           [ 0.33133450,  0.25637197,  0.36131951,  ..., -0.23838064,
            -0.20839565,  0.24137947],
           ...,
           [ 0.52623707,  0.40629703,  0.09145443,  ...,  0.36131951,
             0.28635699,  0.42128953],
           [ 0.36131951,  0.07646193,  0.40629703,  ...,  0.21139447,
             0.55622208,  0.45127454],
           [-0.02848560,  0.33133450,  0.72113961,  ...,  0.36131951,
             0.72113961,  0.34632701]]],


         [[[ 0.12222230,  0.18571436,  0.09047628,  ..., -1.36984122,
            -0.30634910, -0.08412688],
           [ 0.04285724,  0.18571436,  0.26507944,  ..., -0.56031746,
            -0.09999990, -0.02063482],
           [ 0.16984135,  0.09047628,  0.20158738,  ..., -0.43333322,
            -0.40158719,  0.07460327],
           ...,
           [ 0.37619054,  0.24920642, -0.08412688,  ...,  0.20158738,
             0.12222230,  0.26507944],
           [ 0.20158738, -0.09999990,  0.24920642,  ...,  0.04285724,
             0.40793657,  0.29682547],
           [-0.21111101,  0.16984135,  0.58253974,  ...,  0.20158738,
             0.58253974,  0.18571436]],

          [[ 0.16103071,  0.22544295,  0.12882459,  ..., -1.35265696,
            -0.27375188, -0.04830906],
           [ 0.08051541,  0.22544295,  0.30595824,  ..., -0.53140092,
            -0.06441211,  0.01610318],
           [ 0.20933989,  0.12882459,  0.24154601,  ..., -0.40257636,
            -0.37037024,  0.11272153],
           ...,
           [ 0.41867965,  0.28985518, -0.04830906,  ...,  0.24154601,
             0.16103071,  0.30595824],
           [ 0.24154601, -0.06441211,  0.28985518,  ...,  0.08051541,
             0.45088577,  0.33816436],
           [-0.17713353,  0.20933989,  0.62801939,  ...,  0.24154601,
             0.62801939,  0.22544295]],

          [[ 0.28635699,  0.34632701,  0.25637197,  ..., -1.12293863,
            -0.11844061,  0.09145443],
           [ 0.21139447,  0.34632701,  0.42128953,  ..., -0.35832080,
             0.07646193,  0.15142445],
           [ 0.33133450,  0.25637197,  0.36131951,  ..., -0.23838064,
            -0.20839565,  0.24137947],
           ...,
           [ 0.52623707,  0.40629703,  0.09145443,  ...,  0.36131951,
             0.28635699,  0.42128953],
           [ 0.36131951,  0.07646193,  0.40629703,  ...,  0.21139447,
             0.55622208,  0.45127454],
           [-0.02848560,  0.33133450,  0.72113961,  ...,  0.36131951,
             0.72113961,  0.34632701]]],


         [[[ 0.12222230,  0.18571436,  0.09047628,  ..., -1.36984122,
            -0.30634910, -0.08412688],
           [ 0.04285724,  0.18571436,  0.26507944,  ..., -0.56031746,
            -0.09999990, -0.02063482],
           [ 0.16984135,  0.09047628,  0.20158738,  ..., -0.43333322,
            -0.40158719,  0.07460327],
           ...,
           [ 0.37619054,  0.24920642, -0.08412688,  ...,  0.20158738,
             0.12222230,  0.26507944],
           [ 0.20158738, -0.09999990,  0.24920642,  ...,  0.04285724,
             0.40793657,  0.29682547],
           [-0.21111101,  0.16984135,  0.58253974,  ...,  0.20158738,
             0.58253974,  0.18571436]],

          [[ 0.16103071,  0.22544295,  0.12882459,  ..., -1.35265696,
            -0.27375188, -0.04830906],
           [ 0.08051541,  0.22544295,  0.30595824,  ..., -0.53140092,
            -0.06441211,  0.01610318],
           [ 0.20933989,  0.12882459,  0.24154601,  ..., -0.40257636,
            -0.37037024,  0.11272153],
           ...,
           [ 0.41867965,  0.28985518, -0.04830906,  ...,  0.24154601,
             0.16103071,  0.30595824],
           [ 0.24154601, -0.06441211,  0.28985518,  ...,  0.08051541,
             0.45088577,  0.33816436],
           [-0.17713353,  0.20933989,  0.62801939,  ...,  0.24154601,
             0.62801939,  0.22544295]],

          [[ 0.28635699,  0.34632701,  0.25637197,  ..., -1.12293863,
            -0.11844061,  0.09145443],
           [ 0.21139447,  0.34632701,  0.42128953,  ..., -0.35832080,
             0.07646193,  0.15142445],
           [ 0.33133450,  0.25637197,  0.36131951,  ..., -0.23838064,
            -0.20839565,  0.24137947],
           ...,
           [ 0.52623707,  0.40629703,  0.09145443,  ...,  0.36131951,
             0.28635699,  0.42128953],
           [ 0.36131951,  0.07646193,  0.40629703,  ...,  0.21139447,
             0.55622208,  0.45127454],
           [-0.02848560,  0.33133450,  0.72113961,  ...,  0.36131951,
             0.72113961,  0.34632701]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0827 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 174, vnnlib ID: 174 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.29587555, -13.48483086,  -6.09756279,  -7.41362858,  -5.89941597,
          -7.54863977,  -8.10572243,  -7.43977880, -10.08916378, -11.89095020]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [646]; unstable size 646; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 267, 1, 646] with unstable size 266 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 646] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 646] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [266]; unstable size 266; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 266] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 266] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.30793667,  4.85469532, -0.91200435,  0.07975256,  0.11433154,
          0.44498545,  0.30451059,  1.77916276,  3.32840014]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.29587555, -13.48483086,  -6.09756279,  -7.41362858,  -5.89941597,
          -7.54863977,  -8.10572243,  -7.43977880, -10.08916378, -11.89095020]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.93743134, -13.31060886,  -5.83817673,  -7.27862358,  -6.16091633,
           -7.49989176,  -7.92654562,  -7.81988096,  -9.65338612, -11.76567936]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.32273960]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0062 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0801 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 175, vnnlib ID: 175 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.83441734, -11.65409756, -13.59377003, -13.34711456, -13.02464199,
         -13.48545742, -13.37795448, -12.43483543, -12.00513840,  -9.86730289]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [638]; unstable size 638; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 292, 1, 638] with unstable size 291 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 638] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 638] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [291]; unstable size 291; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 291] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 291] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.04846859,  1.83894682,  1.50338089,  1.00280237,  1.39925587,
          1.18970370,  0.10379460,  0.61262083, -1.38501215]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.83441734, -11.65409756, -13.59377003, -13.34711456, -13.02464199,
         -13.48545742, -13.37795448, -12.43483543, -12.00513840,  -9.86730289]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.18911934, -11.47594929, -14.00399876, -13.58273888, -13.39752102,
          -13.68156528, -13.77247524, -12.52532673, -12.20017910,  -9.48548031]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.70363903]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0054 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0713 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 176, vnnlib ID: 176 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.06950283, -10.63156986,  -6.67671871,  -6.37868023,  -6.73359871,
          -6.50309849,  -7.44396973,  -8.55093956,  -8.65787315, -10.48859119]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [583]; unstable size 583; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 187, 1, 583] with unstable size 186 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 10, 1, 583] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 583] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [186]; unstable size 186; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 10, 1, 186] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 186] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.66228360,  2.91003036, -0.61161304, -0.37437844, -0.12838525,
          0.54327869,  1.21973610,  1.01675773,  2.96338654]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.06950283, -10.63156986,  -6.67671871,  -6.37868023,  -6.73359871,
          -6.50309849,  -7.44396973,  -8.55093956,  -8.65787315, -10.48859119]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.35448074, -11.02279854,  -6.83222103,  -6.96178865,  -7.00913334,
           -7.09443521,  -7.94125366,  -8.94181538,  -9.05925179, -10.96881390],
         [ -8.35448074, -11.02279854,  -6.83222103,  -6.96178865,  -7.00913334,
           -7.09443521,  -7.94125366,  -8.94181538,  -9.05925179, -10.96881390]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.12956762,  0.04734468,  0.13264656]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0073 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0745 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 177, vnnlib ID: 177 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.68456459, -32.53074646, -22.78745079, -27.68545341, -28.40427208,
         -27.83055687, -30.00589561, -28.70033264, -29.08596420, -31.81694031]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [868]; unstable size 868; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 118, 1, 868] with unstable size 117 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 8, 1, 868] with unstable size 7 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 868] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [117]; unstable size 117; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 8, 1, 117] with unstable size 7 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 117] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [7]; unstable size 7; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.35312653, 8.74417496, 4.20461941, 4.84282923, 4.24144840, 6.39423656,
         5.11291981, 5.55689526, 8.21585178]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0661 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 178, vnnlib ID: 178 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -5.60622311, -13.14030361,  -7.17618370,  -8.58381081,  -7.30063725,
          -9.39536190, -10.97736740,  -8.69489574, -13.14762592, -13.82670879]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [636]; unstable size 636; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 149, 1, 636] with unstable size 148 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 636] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 636] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [148]; unstable size 148; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 148] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 148] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.19068098, 0.71572351, 1.81306052, 0.68747497, 2.54502177, 4.18923807,
         1.59729815, 6.44614601, 7.10734844]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0727 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 179, vnnlib ID: 179 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -2.84328127,  -9.61974049,  -5.05914211,  -8.02449036,  -6.49527788,
          -8.10750866,  -9.04593754,  -9.49392796,  -6.18774319, -10.90580273]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [499]; unstable size 499; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 153, 1, 499] with unstable size 152 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 499] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 499] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [152]; unstable size 152; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 152] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 152] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.54959440, 1.51223135, 4.22370195, 2.84299302, 4.27301931, 5.08756065,
         5.54216433, 2.37470078, 6.85312939]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0676 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 180, vnnlib ID: 180 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.90164661, -15.08635235,  -9.72878838,  -9.48129559,  -7.66526318,
          -8.64265442, -10.58757114,  -3.94943619, -14.45550442, -12.59689999]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [635]; unstable size 635; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 240, 1, 635] with unstable size 239 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 635] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 635] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [239]; unstable size 239; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 239] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 239] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.91279745, 8.85579205, 4.06592464, 3.92259789, 2.47752666, 3.07655334,
         4.65876579, 8.33458710, 6.58941221]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0684 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 181, vnnlib ID: 181 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-8.14476776, -8.54299259, -5.62799358, -7.28408384, -5.42767191,
         -7.26166582, -5.09700298, -8.12854862, -8.81086445, -8.40001583]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [561]; unstable size 561; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 200, 1, 561] with unstable size 199 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 561] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 561] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [199]; unstable size 199; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 199] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 199] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.70906878,  1.71759176, -0.59509265,  1.34409988, -0.63401151,
          1.15857649,  2.08130550,  2.03014421,  1.72439098]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-8.14476776, -8.54299259, -5.62799358, -7.28408384, -5.42767191,
         -7.26166582, -5.09700298, -8.12854862, -8.81086445, -8.40001583]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-8.20649433, -8.83073616, -5.63355064, -7.40713882, -5.33580017,
          -7.33170795, -5.46423101, -8.16074944, -8.97980404, -8.67313671],
         [-8.20649433, -8.83073616, -5.63355064, -7.40713882, -5.33580017,
          -7.33170795, -5.46423101, -8.16074944, -8.97980404, -8.67313671]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.16931963, -0.12843084]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0068 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0710 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 182, vnnlib ID: 182 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.62970924, -15.32867241, -14.02665234, -15.90782928, -15.88710308,
         -16.84171295, -16.61499405, -15.84648132, -15.30559063, -15.92606258]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [630]; unstable size 630; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 112, 1, 630] with unstable size 111 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 630] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 630] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [111]; unstable size 111; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 111] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 111] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.55479431, 0.65966952, 2.49934220, 2.45695734, 3.24221277, 3.17709970,
         2.06576204, 1.70381451, 2.33342171]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0671 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 183, vnnlib ID: 183 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.31477261, -14.64444065,  -8.04242039,  -9.54465961,  -7.47801971,
         -10.22035503,  -9.25665569, -10.87084675, -13.17573833, -14.46251965]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [785]; unstable size 785; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 441, 1, 785] with unstable size 440 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 30, 1, 785] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 785] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [440]; unstable size 440; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 30, 1, 440] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 440] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.74053049,  4.37037277, -0.76029509,  0.68074846,  0.98781776,
         -0.06960225,  1.50687993,  3.12951899,  4.10273933]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.31477261, -14.64444065,  -8.04242039,  -9.54465961,  -7.47801971,
         -10.22035503,  -9.25665569, -10.87084675, -13.17573833, -14.46251965]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.66it/s]100%|██████████| 1/1 [00:00<00:00,  8.65it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.97328854, -15.64343452,  -8.67847157, -10.54068565,  -8.60878944,
          -11.21894646, -10.33001900, -11.86674881, -13.97623920, -15.42976952],
         [-11.97328854, -15.64343452,  -8.67847157, -10.54068565,  -8.60878944,
          -11.21894646, -10.33001900, -11.86674881, -13.97623920, -15.42976952]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.06968212, 1.72122955]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1184 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 17.027103424072266
alpha/beta optimization time: 1.1493139266967773
initial alpha-crown bounds: tensor([[ 1.93041945,  4.51296282, -0.64870244,  0.80698419,  1.16862988,
          0.07121444,  1.61320806,  3.32261658,  4.24977207]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.6487024426460266
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.66286444664001
Verifying property 0 with 1 instances.
##### Instance 183 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9304194450378418.

Properties batch 1, size 1
Remaining timeout: 198.5204451084137
Verifying property 1 with 1 instances.
##### Instance 183 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.512962818145752.

Properties batch 2, size 1
Remaining timeout: 198.41263508796692
Verifying property 2 with 1 instances.
##### Instance 183 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.64870244]], device='cuda:0') need to verify.
Model prediction is: tensor([-11.31477261, -14.64444065,  -8.04242039,  -9.54465961,  -7.47801971,
        -10.22035503,  -9.25665569, -10.87084675, -13.17573833, -14.46251965],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.64870244]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 785
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 435
Node /15 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 1246
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 54] 
split level 1: [/input-12, 1] 
split level 2: [/input-12, 44] 
split level 3: [/input-12, 51] 
split level 4: [/input-12, 72] 
split level 5: [/input-12, 26] 
split level 6: [/input-12, 82] 
split level 7: [/input-12, 93] 
pruning_in_iteration open status: True
ratio of positive domain = 156 / 256 = 0.609375
pruning-in-iteration extra time: 0.004938364028930664
Time: prepare 0.0018    bound 0.1453    transfer 0.0027    finalize 0.0021    func 0.1519    
Accumulated time: func 0.1519    prepare 0.0022    bound 0.1453    transfer 0.0027    finalize 0.0021    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.29374 (8), -0.29316 (8), -0.28774 (8), -0.28727 (8), -0.28622 (8), -0.28593 (8), -0.27473 (8), -0.27342 (8), -0.26040 (8), -0.25564 (8), -0.25529 (8), -0.25103 (8), -0.25024 (8), -0.24622 (8), -0.23806 (8), -0.23779 (8), -0.23301 (8), -0.23203 (8), -0.23022 (8), -0.22529 (8), 
Length of domains: 100
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0164    solve 0.1519    add 0.0016    
Accumulated time: pickout 0.0004    decision 0.0231    set_bounds 0.0164    solve 0.1519    add 0.0016    
Current (lb-rhs): -0.2937358617782593
100 domains visited
Cumulative time: 0.19775032997131348

BaB round 2
batch: 100
splitting decisions: 
split level 0: [/input-8, 1057] [/input-8, 1058] [/input-8, 1058] [/input-8, 1058] [/input-8, 1057] [/input-8, 1058] [/input-8, 1057] [/input-12, 9] [/input-12, 9] [/input-12, 9] 
split level 1: [/input-12, 9] [/input-8, 1057] [/input-12, 9] [/input-12, 9] [/input-8, 1066] [/input-12, 9] [/input-12, 9] [/input-8, 1057] [/input-8, 1057] [/input-8, 1057] 
pruning_in_iteration open status: False
ratio of positive domain = 77 / 400 = 0.1925
pruning-in-iteration extra time: 5.364418029785156e-05
Time: prepare 0.0078    bound 0.1008    transfer 0.0027    finalize 0.0032    func 0.1145    
Accumulated time: func 0.2664    prepare 0.0102    bound 0.2460    transfer 0.0054    finalize 0.0053    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.27993 (10), -0.27915 (10), -0.27372 (10), -0.27340 (10), -0.27203 (10), -0.27188 (10), -0.26035 (10), -0.25974 (10), -0.24455 (10), -0.24077 (10), -0.24056 (10), -0.23941 (10), -0.23941 (10), -0.23908 (10), -0.23900 (10), -0.23874 (10), -0.23672 (10), -0.23552 (10), -0.23519 (10), -0.23390 (10), 
Length of domains: 321
Time: pickout 0.0017    decision 0.0216    set_bounds 0.0128    solve 0.1146    add 0.0022    
Accumulated time: pickout 0.0021    decision 0.0446    set_bounds 0.0292    solve 0.2666    add 0.0038    
Current (lb-rhs): -0.27992522716522217
421 domains visited
Cumulative time: 0.3519728183746338

BaB round 3
batch: 321
splitting decisions: 
split level 0: [/input-8, 1058] [/input-12, 9] [/input-8, 1057] [/input-12, 68] [/input-8, 1058] [/input-8, 1057] [/input-8, 1555] [/input-8, 1299] [/input-12, 68] [/input-12, 68] 
pruning_in_iteration open status: True
ratio of positive domain = 168 / 642 = 0.26168224299065423
pruning-in-iteration extra time: 0.004262447357177734
Time: prepare 0.0126    bound 0.1759    transfer 0.0034    finalize 0.0052    func 0.1972    
Accumulated time: func 0.4636    prepare 0.0230    bound 0.4219    transfer 0.0088    finalize 0.0105    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.27440 (11), -0.27375 (11), -0.26816 (11), -0.26782 (11), -0.26676 (11), -0.26550 (11), -0.25511 (11), -0.25464 (11), -0.25461 (11), -0.23898 (11), -0.23453 (11), -0.23443 (11), -0.23358 (11), -0.23325 (11), -0.23325 (11), -0.23296 (11), -0.23097 (11), -0.23094 (11), -0.23023 (11), -0.22966 (11), 
Length of domains: 474
Time: pickout 0.0045    decision 0.0335    set_bounds 0.0138    solve 0.1973    add 0.0029    
Accumulated time: pickout 0.0065    decision 0.0781    set_bounds 0.0430    solve 0.4639    add 0.0067    
Current (lb-rhs): -0.2743985056877136
895 domains visited
Cumulative time: 0.6056532859802246

BaB round 4
batch: 474
splitting decisions: 
split level 0: [/input-8, 1555] [/input-8, 1299] [/input-8, 1066] [/input-12, 9] [/input-12, 68] [/input-8, 1299] [/input-8, 1555] [/input-8, 1555] [/input-8, 1299] [/input-12, 68] 
pruning_in_iteration open status: True
ratio of positive domain = 230 / 948 = 0.2426160337552743
pruning-in-iteration extra time: 0.004514455795288086
Time: prepare 0.0191    bound 0.1783    transfer 0.0043    finalize 0.0069    func 0.2087    
Accumulated time: func 0.6723    prepare 0.0423    bound 0.6002    transfer 0.0131    finalize 0.0174    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.26729 (12), -0.26709 (12), -0.26268 (12), -0.26111 (12), -0.26071 (12), -0.26034 (12), -0.25789 (12), -0.25685 (12), -0.25191 (12), -0.25097 (12), -0.25058 (12), -0.24934 (12), -0.24817 (12), -0.23729 (12), -0.23060 (12), -0.22980 (12), -0.22891 (12), -0.22783 (12), -0.22656 (12), -0.22603 (12), 
Length of domains: 718
Time: pickout 0.0078    decision 0.0413    set_bounds 0.0220    solve 0.2089    add 0.0038    
Accumulated time: pickout 0.0144    decision 0.1194    set_bounds 0.0650    solve 0.6728    add 0.0105    
Current (lb-rhs): -0.2672926187515259
1613 domains visited
Cumulative time: 0.8915567398071289

BaB round 5
batch: 718
splitting decisions: 
split level 0: [/input-8, 1299] [/input-12, 68] [/input-8, 1555] [/input-12, 68] [/input-8, 666] [/input-8, 1299] [/input-12, 68] [/input-12, 68] [/input-8, 1548] [/input-12, 68] 
pruning_in_iteration open status: False
ratio of positive domain = 239 / 1436 = 0.16643454038997219
pruning-in-iteration extra time: 8.869171142578125e-05
Time: prepare 0.0282    bound 0.1213    transfer 0.0052    finalize 0.0116    func 0.1665    
Accumulated time: func 0.8387    prepare 0.0707    bound 0.7216    transfer 0.0182    finalize 0.0290    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.26150 (13), -0.26048 (13), -0.25653 (13), -0.25622 (13), -0.25559 (13), -0.25425 (13), -0.25362 (13), -0.25129 (13), -0.25096 (13), -0.24972 (13), -0.24726 (13), -0.24641 (13), -0.24524 (13), -0.24519 (13), -0.24480 (13), -0.24363 (13), -0.24349 (13), -0.24214 (13), -0.23907 (13), -0.23876 (13), 
Length of domains: 1190
Time: pickout 0.0108    decision 0.0555    set_bounds 0.0311    solve 0.1668    add 0.0106    
Accumulated time: pickout 0.0252    decision 0.1750    set_bounds 0.0962    solve 0.8396    add 0.0211    
Current (lb-rhs): -0.26150426268577576
2803 domains visited
Cumulative time: 1.1690878868103027

BaB round 6
batch: 1190
splitting decisions: 
split level 0: [/input-8, 1548] [/input-12, 68] [/input-8, 531] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-8, 1373] [/input-8, 1066] [/input-12, 68] [/input-12, 68] 
pruning_in_iteration open status: False
ratio of positive domain = 257 / 2380 = 0.10798319327731087
pruning-in-iteration extra time: 8.7738037109375e-05
Time: prepare 0.0465    bound 0.1441    transfer 0.0115    finalize 0.0153    func 0.2176    
Accumulated time: func 1.0564    prepare 0.1174    bound 0.8656    transfer 0.0297    finalize 0.0443    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.25512 (14), -0.25471 (14), -0.25041 (14), -0.25025 (14), -0.24970 (14), -0.24945 (14), -0.24878 (14), -0.24739 (14), -0.24609 (14), -0.24407 (14), -0.24382 (14), -0.24333 (14), -0.24257 (14), -0.24217 (14), -0.24201 (14), -0.24063 (14), -0.23983 (14), -0.23976 (14), -0.23926 (14), -0.23813 (14), 
Length of domains: 2107
Time: pickout 0.0171    decision 0.3454    set_bounds 0.0515    solve 0.2185    add 0.0094    
Accumulated time: pickout 0.0423    decision 0.5203    set_bounds 0.1476    solve 1.0582    add 0.0306    
Current (lb-rhs): -0.25512078404426575
4910 domains visited
Cumulative time: 1.814880609512329

BaB round 7
batch: 2107
splitting decisions: 
split level 0: [/input-12, 68] [/input-12, 68] [/input-8, 1363] [/input-8, 1307] [/input-8, 532] [/input-8, 1299] [/input-8, 1363] [/input-8, 1548] [/input-8, 532] [/input-8, 1356] 
pruning_in_iteration open status: False
ratio of positive domain = 277 / 4214 = 0.06573327005220697
pruning-in-iteration extra time: 6.580352783203125e-05
Time: prepare 0.0842    bound 0.2197    transfer 0.0249    finalize 0.0234    func 0.3527    
Accumulated time: func 1.4091    prepare 0.2019    bound 1.0853    transfer 0.0546    finalize 0.0678    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.25125 (15), -0.25124 (15), -0.24488 (15), -0.24482 (15), -0.24435 (15), -0.24435 (15), -0.24428 (15), -0.24364 (15), -0.24218 (15), -0.24055 (15), -0.23960 (15), -0.23906 (15), -0.23797 (15), -0.23676 (15), -0.23676 (15), -0.23634 (15), -0.23586 (15), -0.23584 (15), -0.23559 (15), -0.23418 (15), 
Length of domains: 3918
Time: pickout 0.0299    decision 0.2768    set_bounds 0.0914    solve 0.3538    add 0.0183    
Accumulated time: pickout 0.0722    decision 0.7972    set_bounds 0.2391    solve 1.4119    add 0.0489    
Current (lb-rhs): -0.25124865770339966
8828 domains visited
Cumulative time: 2.591428279876709

BaB round 8
batch: 3918
splitting decisions: 
split level 0: [/input-8, 531] [/input-8, 1066] [/input-8, 1058] [/input-8, 1356] [/input-8, 533] [/input-8, 532] [/input-8, 1356] [/input-8, 1299] [/input-8, 1363] [/input-8, 1363] 
pruning_in_iteration open status: False
ratio of positive domain = 518 / 7836 = 0.06610515569167941
pruning-in-iteration extra time: 6.723403930664062e-05
Time: prepare 0.1625    bound 0.3602    transfer 0.0465    finalize 0.0454    func 0.6161    
Accumulated time: func 2.0252    prepare 0.3647    bound 1.4455    transfer 0.1011    finalize 0.1132    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24642 (16), -0.24473 (16), -0.24005 (16), -0.23947 (16), -0.23815 (16), -0.23771 (16), -0.23766 (16), -0.23736 (16), -0.23724 (16), -0.23721 (16), -0.23636 (16), -0.23460 (16), -0.23452 (16), -0.23416 (16), -0.23403 (16), -0.23277 (16), -0.23257 (16), -0.23243 (16), -0.23204 (16), -0.23178 (16), 
Length of domains: 7283
Time: pickout 0.0519    decision 0.2360    set_bounds 0.3372    solve 0.6176    add 0.0297    
Accumulated time: pickout 0.1241    decision 1.0332    set_bounds 0.5763    solve 2.0296    add 0.0785    
Current (lb-rhs): -0.24642422795295715
16111 domains visited
Cumulative time: 3.8766250610351562

BaB round 9
batch: 4096
splitting decisions: 
split level 0: [/input-8, 1555] [/input-8, 532] [/input-8, 1299] [/input-8, 682] [/input-8, 531] [/input-8, 523] [/input-8, 1356] [/input-8, 1363] [/input-8, 1356] [/input-8, 532] 
pruning_in_iteration open status: False
ratio of positive domain = 514 / 8192 = 0.062744140625
pruning-in-iteration extra time: 7.343292236328125e-05
Time: prepare 0.1681    bound 0.3678    transfer 0.0467    finalize 0.0407    func 0.8063    
Accumulated time: func 2.8314    prepare 0.5331    bound 1.8133    transfer 0.1479    finalize 0.1539    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24642 (16), -0.24012 (17), -0.24005 (16), -0.23947 (16), -0.23815 (16), -0.23771 (16), -0.23736 (16), -0.23460 (16), -0.23416 (16), -0.23277 (17), -0.23277 (16), -0.23262 (17), -0.23204 (16), -0.23178 (16), -0.23168 (17), -0.23164 (17), -0.23104 (16), -0.23064 (17), -0.23036 (17), -0.23033 (16), 
Length of domains: 10839
Time: pickout 0.0574    decision 0.3861    set_bounds 0.1855    solve 0.8076    add 0.0538    
Accumulated time: pickout 0.1816    decision 1.4193    set_bounds 0.7618    solve 2.8371    add 0.1323    
Current (lb-rhs): -0.24642422795295715
23763 domains visited
current_vram/total_varm: 14.4GB/99.9GB, batch_size increase to 8192
Cumulative time: 5.377993822097778

BaB round 10
batch: 8192
splitting decisions: 
split level 0: [/input-8, 532] [/input-8, 666] [/input-8, 682] [/input-8, 1548] [/input-8, 1066] [/input-8, 1307] [/input-8, 682] [/input-8, 1299] [/input-8, 666] [/input-8, 1558] 
pruning_in_iteration open status: False
ratio of positive domain = 990 / 16384 = 0.0604248046875
pruning-in-iteration extra time: 0.00014328956604003906
Time: prepare 0.3333    bound 0.6916    transfer 0.0932    finalize 0.2748    func 1.3944    
Accumulated time: func 4.2258    prepare 0.8667    bound 2.5050    transfer 0.2411    finalize 0.4287    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24642 (16), -0.24005 (16), -0.23947 (16), -0.23815 (16), -0.23771 (16), -0.23736 (16), -0.23525 (18), -0.23460 (16), -0.23416 (16), -0.23277 (16), -0.23204 (16), -0.23178 (16), -0.23104 (16), -0.23033 (16), -0.22998 (16), -0.22925 (16), -0.22890 (16), -0.22853 (16), -0.22827 (16), -0.22780 (18), 
Length of domains: 17978
Time: pickout 0.1106    decision 0.4625    set_bounds 0.5438    solve 1.3975    add 0.0654    
Accumulated time: pickout 0.2922    decision 1.8819    set_bounds 1.3056    solve 4.2346    add 0.1977    
Current (lb-rhs): -0.24642422795295715
39094 domains visited
current_vram/total_varm: 20.1GB/99.9GB, batch_size increase to 16384
Cumulative time: 7.979696989059448

BaB round 11
batch: 16384
splitting decisions: 
split level 0: [/input-8, 1883] [/input-8, 1066] [/input-8, 1363] [/input-8, 1363] [/input-8, 1363] [/input-8, 1299] [/input-8, 533] [/input-8, 1356] [/input-8, 1564] [/input-8, 1363] 
pruning_in_iteration open status: False
ratio of positive domain = 2153 / 32768 = 0.065704345703125
pruning-in-iteration extra time: 0.0002887248992919922
Time: prepare 0.6633    bound 1.3301    transfer 0.1809    finalize 0.4033    func 2.5804    
Accumulated time: func 6.8063    prepare 1.5304    bound 3.8350    transfer 0.4220    finalize 0.8321    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24642 (16), -0.24005 (16), -0.23947 (16), -0.23815 (16), -0.23771 (16), -0.23736 (16), -0.23460 (16), -0.23416 (16), -0.23277 (16), -0.23204 (16), -0.23178 (16), -0.23104 (16), -0.22998 (16), -0.22972 (19), -0.22890 (16), -0.22853 (16), -0.22827 (16), -0.22747 (16), -0.22685 (16), -0.22660 (19), 
Length of domains: 32067
Time: pickout 0.2188    decision 1.6609    set_bounds 0.9747    solve 2.5868    add 0.1172    
Accumulated time: pickout 0.5110    decision 3.5428    set_bounds 2.2803    solve 6.8214    add 0.3150    
Current (lb-rhs): -0.24642422795295715
69567 domains visited
current_vram/total_varm: 33.2GB/99.9GB, batch_size increase to 32768
Cumulative time: 13.57920789718628

BaB round 12
batch: 32067
splitting decisions: 
split level 0: [/input-8, 1356] [/input-8, 523] [/input-8, 1555] [/input-8, 1363] [/input-8, 1356] [/input-8, 1356] [/input-8, 1886] [/input-8, 1564] [/input-8, 533] [/input-8, 1356] 
pruning_in_iteration open status: False
ratio of positive domain = 4346 / 64134 = 0.06776436835375932
pruning-in-iteration extra time: 0.0006401538848876953
Time: prepare 1.3164    bound 2.5696    transfer 0.3534    finalize 0.7690    func 5.0118    
Accumulated time: func 11.8181    prepare 2.8473    bound 6.4046    transfer 0.7753    finalize 1.6011    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24027 (17), -0.23413 (17), -0.23413 (17), -0.23397 (17), -0.23385 (17), -0.23295 (17), -0.23118 (17), -0.23090 (17), -0.22966 (17), -0.22839 (17), -0.22786 (17), -0.22751 (17), -0.22730 (17), -0.22661 (17), -0.22649 (17), -0.22582 (17), -0.22507 (17), -0.22377 (20), -0.22350 (17), -0.22346 (17), 
Length of domains: 59547
Time: pickout 0.4371    decision 3.5426    set_bounds 2.0590    solve 5.0219    add 0.2708    
Accumulated time: pickout 0.9481    decision 7.0854    set_bounds 4.3393    solve 11.8433    add 0.5857    
Current (lb-rhs): -0.24026811122894287
129114 domains visited
Cumulative time: 24.97390103340149

BaB round 13
batch: 32768
splitting decisions: 
split level 0: [/input-8, 523] [/input-8, 1355] [/input-8, 1307] [/input-8, 1555] [/input-8, 1564] [/input-8, 1902] [/input-8, 1356] [/input-8, 682] [/input-8, 1886] [/input-8, 1902] 
pruning_in_iteration open status: False
ratio of positive domain = 4687 / 65536 = 0.0715179443359375
pruning-in-iteration extra time: 0.0005972385406494141
Time: prepare 1.3241    bound 7.8085    transfer 0.3693    finalize 0.4129    func 9.9186    
Accumulated time: func 21.7367    prepare 4.1719    bound 14.2131    transfer 1.1446    finalize 2.0140    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.23538 (18), -0.23413 (17), -0.23413 (17), -0.23397 (17), -0.23385 (17), -0.23090 (17), -0.22966 (17), -0.22757 (18), -0.22751 (17), -0.22742 (18), -0.22730 (17), -0.22661 (17), -0.22630 (18), -0.22582 (17), -0.22507 (17), -0.22350 (17), -0.22339 (18), -0.22298 (18), -0.22270 (17), -0.22217 (17), 
Length of domains: 87305
Time: pickout 0.4472    decision 3.3794    set_bounds 2.4610    solve 9.9286    add 0.2886    
Accumulated time: pickout 1.3952    decision 10.4648    set_bounds 6.8003    solve 21.7719    add 0.8743    
Current (lb-rhs): -0.23538333177566528
189640 domains visited
Cumulative time: 41.57499837875366

BaB round 14
batch: 32768
splitting decisions: 
split level 0: [/input-8, 682] [/input-8, 1062] [/input-8, 682] [/input-8, 532] [/input-8, 1555] [/input-8, 682] [/input-8, 682] [/input-8, 1356] [/input-8, 1355] [/input-8, 1356] 
pruning_in_iteration open status: False
ratio of positive domain = 5512 / 65536 = 0.0841064453125
pruning-in-iteration extra time: 0.0005896091461181641
Time: prepare 1.3396    bound 7.8095    transfer 0.3648    finalize 0.4013    func 9.9182    
Accumulated time: func 31.6549    prepare 5.5120    bound 22.0226    transfer 1.5094    finalize 2.4153    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.23538 (18), -0.23413 (17), -0.23413 (17), -0.23397 (17), -0.23385 (17), -0.23090 (17), -0.22966 (17), -0.22757 (18), -0.22751 (17), -0.22730 (17), -0.22661 (17), -0.22630 (18), -0.22582 (17), -0.22507 (17), -0.22350 (17), -0.22339 (18), -0.22298 (18), -0.22270 (17), -0.22217 (17), -0.22196 (17), 
Length of domains: 114157
Time: pickout 0.4931    decision 3.5578    set_bounds 2.7899    solve 9.9308    add 0.2269    
Accumulated time: pickout 1.8884    decision 14.0226    set_bounds 9.5902    solve 31.7026    add 1.1012    
Current (lb-rhs): -0.23538333177566528
249260 domains visited
Cumulative time: 58.673925161361694

BaB round 15
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1902] [/input-8, 1886] [/input-8, 1886] [/input-8, 1886] [/input-8, 1870] [/input-8, 1356] [/input-8, 1355] [/input-8, 682] [/input-8, 1301] [/input-8, 884] 
pruning_in_iteration open status: False
ratio of positive domain = 5669 / 65536 = 0.0865020751953125
pruning-in-iteration extra time: 0.0005903244018554688
Time: prepare 1.3968    bound 7.8122    transfer 0.3654    finalize 0.4440    func 10.0214    
Accumulated time: func 41.6763    prepare 6.9092    bound 29.8348    transfer 1.8749    finalize 2.8593    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.23538 (18), -0.23413 (17), -0.23413 (17), -0.23397 (17), -0.23385 (17), -0.23090 (17), -0.22966 (17), -0.22757 (18), -0.22751 (17), -0.22730 (17), -0.22661 (17), -0.22630 (18), -0.22582 (17), -0.22507 (17), -0.22350 (17), -0.22339 (18), -0.22298 (18), -0.22270 (17), -0.22217 (17), -0.22196 (17), 
Length of domains: 140780
Time: pickout 0.4989    decision 3.7702    set_bounds 2.3395    solve 10.0339    add 0.2401    
Accumulated time: pickout 2.3873    decision 17.7928    set_bounds 11.9297    solve 41.7366    add 1.3413    
Current (lb-rhs): -0.23538333177566528
308651 domains visited
Cumulative time: 75.65709495544434

BaB round 16
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1355] [/input-8, 1558] [/input-8, 1373] [/input-8, 1373] [/input-8, 682] [/input-8, 1307] [/input-8, 1555] [/input-8, 1558] [/input-8, 1355] [/input-8, 1883] 
pruning_in_iteration open status: False
ratio of positive domain = 5854 / 65536 = 0.089324951171875
pruning-in-iteration extra time: 0.0005893707275390625
Time: prepare 1.3512    bound 7.8120    transfer 0.3668    finalize 0.3889    func 9.9215    
Accumulated time: func 51.5979    prepare 8.2609    bound 37.6467    transfer 2.2417    finalize 3.2482    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.23538 (18), -0.23413 (17), -0.23413 (17), -0.23397 (17), -0.23385 (17), -0.23090 (17), -0.22966 (17), -0.22757 (18), -0.22751 (17), -0.22730 (17), -0.22661 (17), -0.22630 (18), -0.22582 (17), -0.22507 (17), -0.22350 (17), -0.22339 (18), -0.22298 (18), -0.22270 (17), -0.22217 (17), -0.22196 (17), 
Length of domains: 167218
Time: pickout 0.5316    decision 3.9441    set_bounds 2.5455    solve 9.9353    add 0.2298    
Accumulated time: pickout 2.9189    decision 21.7370    set_bounds 14.4752    solve 51.6719    add 1.5711    
Current (lb-rhs): -0.23538333177566528
367857 domains visited
Cumulative time: 92.94505596160889

BaB round 17
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1355] [/input-8, 1355] [/input-8, 666] [/input-8, 1886] [/input-8, 681] [/input-8, 523] [/input-8, 854] [/input-8, 681] [/input-8, 1355] [/input-8, 1354] 
pruning_in_iteration open status: False
ratio of positive domain = 6544 / 65536 = 0.099853515625
pruning-in-iteration extra time: 0.0005881786346435547
Time: prepare 1.4242    bound 7.8116    transfer 0.3659    finalize 0.4412    func 10.0457    
Accumulated time: func 61.6436    prepare 9.6857    bound 45.4583    transfer 2.6076    finalize 3.6895    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.23538 (18), -0.23413 (17), -0.23413 (17), -0.23397 (17), -0.23385 (17), -0.23090 (17), -0.22966 (17), -0.22757 (18), -0.22751 (17), -0.22730 (17), -0.22661 (17), -0.22630 (18), -0.22582 (17), -0.22507 (17), -0.22350 (17), -0.22339 (18), -0.22298 (18), -0.22270 (17), -0.22217 (17), -0.22196 (17), 
Length of domains: 192972
Time: pickout 0.5504    decision 4.2043    set_bounds 2.7691    solve 10.0594    add 0.2607    
Accumulated time: pickout 3.4693    decision 25.9413    set_bounds 17.2443    solve 61.7313    add 1.8318    
Current (lb-rhs): -0.23538333177566528
426379 domains visited
Cumulative time: 110.90220046043396

BaB round 18
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1886] [/input-8, 1355] [/input-8, 1373] [/input-8, 1373] [/input-8, 682] [/input-8, 666] [/input-8, 1564] [/input-8, 1878] [/input-8, 533] [/input-8, 1373] 
pruning_in_iteration open status: False
ratio of positive domain = 7097 / 65536 = 0.1082916259765625
pruning-in-iteration extra time: 0.0006291866302490234
Time: prepare 1.3952    bound 7.8131    transfer 0.3656    finalize 0.4491    func 10.0259    
Accumulated time: func 71.6695    prepare 11.0815    bound 53.2714    transfer 2.9732    finalize 4.1386    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.23538 (18), -0.23413 (17), -0.23413 (17), -0.23397 (17), -0.23385 (17), -0.23090 (17), -0.22966 (17), -0.22757 (18), -0.22751 (17), -0.22730 (17), -0.22661 (17), -0.22630 (18), -0.22582 (17), -0.22507 (17), -0.22350 (17), -0.22339 (18), -0.22298 (18), -0.22270 (17), -0.22217 (17), -0.22196 (17), 
Length of domains: 218151
Time: pickout 0.5593    decision 3.4461    set_bounds 2.9166    solve 11.3451    add 0.2453    
Accumulated time: pickout 4.0286    decision 29.3874    set_bounds 20.1609    solve 73.0764    add 2.0771    
Current (lb-rhs): -0.23538333177566528
484326 domains visited
Cumulative time: 129.49955677986145

BaB round 19
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1555] [/input-8, 533] [/input-8, 1902] [/input-8, 682] [/input-8, 1886] [/input-8, 1902] [/input-8, 1902] [/input-8, 1564] [/input-8, 1355] [/input-8, 1883] 
pruning_in_iteration open status: False
ratio of positive domain = 7948 / 65536 = 0.12127685546875
pruning-in-iteration extra time: 0.0006349086761474609
Time: prepare 1.3817    bound 7.8107    transfer 0.3548    finalize 0.4417    func 9.9909    
Accumulated time: func 81.6604    prepare 12.4637    bound 61.0821    transfer 3.3280    finalize 4.5803    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.23538 (18), -0.23413 (17), -0.23413 (17), -0.23397 (17), -0.23385 (17), -0.23090 (17), -0.22966 (17), -0.22757 (18), -0.22751 (17), -0.22730 (17), -0.22661 (17), -0.22630 (18), -0.22582 (17), -0.22507 (17), -0.22350 (17), -0.22339 (18), -0.22298 (18), -0.22270 (17), -0.22217 (17), -0.22196 (17), 
Length of domains: 242411
Time: pickout 0.5534    decision 3.4333    set_bounds 3.2202    solve 10.0057    add 0.3539    
Accumulated time: pickout 4.5820    decision 32.8207    set_bounds 23.3812    solve 83.0821    add 2.4309    
Current (lb-rhs): -0.23538333177566528
541354 domains visited
Cumulative time: 147.19103622436523

BaB round 20
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1548] [/input-8, 1301] [/input-8, 1902] [/input-8, 523] [/input-8, 1558] [/input-8, 1355] [/input-8, 1566] [/input-8, 1549] [/input-8, 1549] [/input-8, 1878] 
pruning_in_iteration open status: False
ratio of positive domain = 8710 / 65536 = 0.132904052734375
pruning-in-iteration extra time: 0.0005855560302734375
Time: prepare 1.3708    bound 7.8101    transfer 0.3594    finalize 0.4485    func 9.9920    
Accumulated time: func 91.6524    prepare 13.8351    bound 68.8921    transfer 3.6874    finalize 5.0288    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.23538 (18), -0.23413 (17), -0.23413 (17), -0.23397 (17), -0.23385 (17), -0.23090 (17), -0.22966 (17), -0.22757 (18), -0.22751 (17), -0.22730 (17), -0.22661 (17), -0.22630 (18), -0.22582 (17), -0.22507 (17), -0.22350 (17), -0.22339 (18), -0.22298 (18), -0.22270 (17), -0.22217 (17), -0.22196 (17), 
Length of domains: 265878
Time: pickout 0.5831    decision 3.4436    set_bounds 3.3752    solve 10.0081    add 0.2646    
Accumulated time: pickout 5.1651    decision 36.2644    set_bounds 26.7564    solve 93.0902    add 2.6955    
Current (lb-rhs): -0.23538333177566528
597589 domains visited
Cumulative time: 165.00137996673584

BaB round 21
batch: 32768
splitting decisions: 
split level 0: [/input-12, 21] [/input-8, 1373] [/input-12, 21] [/input-8, 1301] [/input-8, 1301] [/input-8, 523] [/input-8, 1870] [/input-8, 533] [/input-8, 1354] [/input-8, 1870] 
pruning_in_iteration open status: False
ratio of positive domain = 10648 / 65536 = 0.1624755859375
pruning-in-iteration extra time: 0.0005881786346435547
Time: prepare 1.3928    bound 7.8105    transfer 0.3639    finalize 0.4789    func 10.0483    
Accumulated time: func 101.7007    prepare 15.2285    bound 76.7027    transfer 4.0513    finalize 5.5077    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.23538 (18), -0.23413 (17), -0.23413 (17), -0.23397 (17), -0.23385 (17), -0.23090 (17), -0.22966 (17), -0.22757 (18), -0.22751 (17), -0.22730 (17), -0.22661 (17), -0.22630 (18), -0.22582 (17), -0.22507 (17), -0.22350 (17), -0.22339 (18), -0.22298 (18), -0.22270 (17), -0.22217 (17), -0.22196 (17), 
Length of domains: 287405
Time: pickout 0.5827    decision 5.0246    set_bounds 1.5841    solve 10.0651    add 0.2612    
Accumulated time: pickout 5.7478    decision 41.2890    set_bounds 28.3405    solve 103.1553    add 2.9567    
Current (lb-rhs): -0.23538333177566528
651884 domains visited
Cumulative time: 182.6723756790161

BaB round 22
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1355] [/input-8, 523] [/input-8, 1883] [/input-8, 1373] [/input-8, 1878] [/input-8, 531] [/input-8, 1883] [/input-8, 1355] [/input-8, 1354] [/input-8, 1354] 
pruning_in_iteration open status: True
ratio of positive domain = 14113 / 65536 = 0.2153472900390625
pruning-in-iteration extra time: 0.002755880355834961
Time: prepare 1.4835    bound 6.2244    transfer 0.3676    finalize 2.4651    func 10.5427    
Accumulated time: func 112.2434    prepare 16.7125    bound 82.9271    transfer 4.4189    finalize 7.9728    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.23538 (18), -0.23413 (17), -0.23413 (17), -0.23397 (17), -0.23385 (17), -0.23090 (17), -0.22966 (17), -0.22757 (18), -0.22751 (17), -0.22730 (17), -0.22661 (17), -0.22630 (18), -0.22582 (17), -0.22507 (17), -0.22350 (17), -0.22339 (18), -0.22298 (18), -0.22270 (17), -0.22217 (17), -0.22196 (17), 
Length of domains: 306060
Time: pickout 0.6006    decision 5.6476    set_bounds 1.5931    solve 10.5569    add 0.2427    
Accumulated time: pickout 6.3484    decision 46.9366    set_bounds 29.9335    solve 113.7122    add 3.1994    
Current (lb-rhs): -0.23538333177566528
703307 domains visited
Time out!!!!!!!!
Result: unknown in 204.3161 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 184, vnnlib ID: 184 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -5.89069843,  -6.00872993,  -9.81441784,  -9.48617077,  -8.76289272,
         -10.92080116, -10.39973545,  -9.59434032,  -4.95132399,  -4.38216209]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [578]; unstable size 578; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 156, 1, 578] with unstable size 155 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 578] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 578] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [155]; unstable size 155; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 155] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 155] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.10633993,  0.71801615,  3.55015516,  3.86298275,  2.74121571,
          5.07143879,  4.74717426,  3.53826046, -1.04089308]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -5.89069843,  -6.00872993,  -9.81441784,  -9.48617077,  -8.76289272,
         -10.92080116, -10.39973545,  -9.59434032,  -4.95132399,  -4.38216209]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.24040604,  -6.51685905,  -9.96843529,  -9.76380062,  -9.11704445,
          -11.15218353, -10.71066093, -10.13462257,  -4.86371136,  -4.98990440]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.12619305]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0066 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0786 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 185, vnnlib ID: 185 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-8.37633038, -6.56312561, -6.81894398, -6.27486277, -5.78229427,
         -6.83015299, -6.31567955, -6.65800142, -9.07024956, -5.04341173]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [539]; unstable size 539; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 221, 1, 539] with unstable size 220 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 539] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 539] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [220]; unstable size 220; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 220] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 220] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.97405195,  0.32927686,  0.17750072, -0.10494566, -0.85372591,
          0.32606649, -0.43116236, -0.31671762,  2.66897106]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-8.37633038, -6.56312561, -6.81894398, -6.27486277, -5.78229427,
         -6.83015299, -6.31567955, -6.65800142, -9.07024956, -5.04341173]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-8.12968159, -6.54487228, -6.24013519, -5.73320532, -5.06740761,
          -6.21982479, -5.72114992, -6.02204561, -8.81664181, -5.19222641],
         [-8.12968159, -6.54487228, -6.24013519, -5.73320532, -5.06740761,
          -6.21982479, -5.72114992, -6.02204561, -8.81664181, -5.19222641]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.54097891, -0.12481880,  0.52892351,  0.82981920]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0090 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0765 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 186, vnnlib ID: 186 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.47806835, -16.40879250, -15.09305000, -16.23484230, -16.50166130,
         -18.09269333, -17.71716118, -17.61732292,  -9.91329861, -15.71094036]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [596]; unstable size 596; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 185, 1, 596] with unstable size 184 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 596] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 596] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [184]; unstable size 184; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 184] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 184] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.06263494, 4.58382511, 3.51261306, 4.72654200, 4.75524044, 6.32470608,
         6.04849195, 5.57820749, 4.16677761]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0639 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 187, vnnlib ID: 187 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -6.08897448, -10.08986378,  -7.39640045,  -7.25407028,  -6.58082294,
          -7.96594858,  -7.83635616,  -8.88062477,  -5.43441010,  -7.92518377]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [737]; unstable size 737; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 236, 1, 737] with unstable size 235 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 737] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 737] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [235]; unstable size 235; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 235] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 235] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.51290512,  2.97313166,  0.25002098,  0.22753614, -0.42947268,
          0.68455660,  0.85951889,  1.57969737,  0.97213078]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.08897448, -10.08986378,  -7.39640045,  -7.25407028,  -6.58082294,
          -7.96594858,  -7.83635616,  -8.88062477,  -5.43441010,  -7.92518377]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.33it/s]100%|██████████| 1/1 [00:00<00:00,  7.32it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.76056576, -9.90643501, -7.24392986, -7.12848854, -6.38653946,
          -7.83770800, -7.66693401, -8.70800304, -5.73674393, -7.76976919],
         [-5.76056576, -9.90643501, -7.24392986, -7.12848854, -6.38653946,
          -7.83770800, -7.66693401, -8.70800304, -5.73674393, -7.76976919]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.02382183, 0.64979553]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1398 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 7.152825355529785
alpha/beta optimization time: 1.2395668029785156
initial alpha-crown bounds: tensor([[-0.46917945,  3.03084326,  0.32193279,  0.28774756, -0.37226748,
          0.75499487,  0.91308296,  1.66521347,  1.02045727]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.4691794514656067
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.5664734840393
Verifying property 0 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.46917945]], device='cuda:0') need to verify.
Model prediction is: tensor([ -6.08897448, -10.08986378,  -7.39640045,  -7.25407028,  -6.58082294,
         -7.96594858,  -7.83635616,  -8.88062477,  -5.43441010,  -7.92518377],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.46917945]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 737
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 228
Node /15 input 0: size torch.Size([100]) unstable 18
-----------------
# of unstable neurons: 983
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 60] 
split level 1: [/input-12, 10] 
split level 2: [/input-12, 1] 
split level 3: [/input-12, 92] 
split level 4: [/input-8, 875] 
split level 5: [/input-8, 1052] 
split level 6: [/input-12, 61] 
split level 7: [/input-8, 1881] 
pruning_in_iteration open status: True
ratio of positive domain = 208 / 256 = 0.8125
pruning-in-iteration extra time: 0.00538325309753418
Time: prepare 0.0031    bound 0.1494    transfer 0.0020    finalize 0.0019    func 0.1564    
Accumulated time: func 0.1564    prepare 0.0035    bound 0.1494    transfer 0.0020    finalize 0.0019    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.33007 (8), -0.32106 (8), -0.31883 (8), -0.31851 (8), -0.30980 (8), -0.30949 (8), -0.30794 (8), -0.29921 (8), -0.29891 (8), -0.29530 (8), -0.28326 (8), -0.28239 (8), -0.27972 (8), -0.27924 (8), -0.26676 (8), -0.26352 (8), -0.11693 (8), -0.11629 (8), -0.10708 (8), -0.10639 (8), 
Length of domains: 48
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0181    solve 0.1565    add 0.0013    
Accumulated time: pickout 0.0004    decision 0.0231    set_bounds 0.0181    solve 0.1565    add 0.0013    
Current (lb-rhs): -0.33007460832595825
48 domains visited
Cumulative time: 0.21007227897644043

BaB round 2
batch: 48
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 58] [/input-8, 1956] [/input-12, 58] [/input-12, 58] [/input-8, 1956] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 1: [/input-8, 92] [/input-8, 1956] [/input-8, 988] [/input-8, 92] [/input-8, 1956] [/input-8, 988] [/input-8, 92] [/input-8, 1956] [/input-8, 84] [/input-8, 92] 
split level 2: [/input-8, 556] [/input-8, 1900] [/input-8, 1003] [/input-8, 556] [/input-8, 1900] [/input-8, 1003] [/input-8, 556] [/input-8, 1900] [/input-8, 1003] [/input-8, 556] 
pruning_in_iteration open status: True
ratio of positive domain = 245 / 384 = 0.6380208333333333
pruning-in-iteration extra time: 0.004730939865112305
Time: prepare 0.0075    bound 0.2129    transfer 0.0015    finalize 0.0027    func 0.2247    
Accumulated time: func 0.3811    prepare 0.0112    bound 0.3624    transfer 0.0035    finalize 0.0045    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.31134 (11), -0.30990 (11), -0.30228 (11), -0.30084 (11), -0.29928 (11), -0.29885 (11), -0.29882 (11), -0.29874 (11), -0.29734 (11), -0.29719 (11), -0.29022 (11), -0.28976 (11), -0.28972 (11), -0.28968 (11), -0.28825 (11), -0.28809 (11), -0.28808 (11), -0.28783 (11), -0.28736 (11), -0.28723 (11), 
Length of domains: 139
Time: pickout 0.0016    decision 0.0150    set_bounds 0.0174    solve 0.2248    add 0.0015    
Accumulated time: pickout 0.0020    decision 0.0381    set_bounds 0.0355    solve 0.3813    add 0.0028    
Current (lb-rhs): -0.311336874961853
187 domains visited
Cumulative time: 0.47183895111083984

BaB round 3
batch: 139
splitting decisions: 
split level 0: [/input-8, 884] [/input-8, 884] [/input-8, 884] [/input-8, 884] [/input-8, 1956] [/input-8, 884] [/input-8, 1956] [/input-8, 1956] [/input-8, 884] [/input-8, 1956] 
pruning_in_iteration open status: True
ratio of positive domain = 70 / 278 = 0.2517985611510791
pruning-in-iteration extra time: 0.0032432079315185547
Time: prepare 0.0075    bound 0.1617    transfer 0.0014    finalize 0.0017    func 0.1724    
Accumulated time: func 0.5535    prepare 0.0189    bound 0.5241    transfer 0.0049    finalize 0.0062    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.30818 (12), -0.30701 (12), -0.29914 (12), -0.29797 (12), -0.29666 (12), -0.29633 (12), -0.29605 (12), -0.29516 (12), -0.29405 (12), -0.29393 (12), -0.28760 (12), -0.28724 (12), -0.28696 (12), -0.28605 (12), -0.28514 (12), -0.28494 (12), -0.28492 (12), -0.28484 (12), -0.28464 (12), -0.28430 (12), 
Length of domains: 208
Time: pickout 0.0027    decision 0.0197    set_bounds 0.0064    solve 0.1724    add 0.0015    
Accumulated time: pickout 0.0046    decision 0.0579    set_bounds 0.0418    solve 0.5537    add 0.0044    
Current (lb-rhs): -0.30818015336990356
395 domains visited
Cumulative time: 0.6752793788909912

BaB round 4
batch: 208
splitting decisions: 
split level 0: [/input-8, 1956] [/input-8, 1956] [/input-8, 1956] [/input-8, 988] [/input-8, 1956] [/input-8, 988] [/input-8, 92] [/input-8, 1956] [/input-8, 92] [/input-8, 988] 
pruning_in_iteration open status: False
ratio of positive domain = 46 / 416 = 0.11057692307692313
pruning-in-iteration extra time: 5.364418029785156e-05
Time: prepare 0.0081    bound 0.1070    transfer 0.0028    finalize 0.0027    func 0.1206    
Accumulated time: func 0.6741    prepare 0.0272    bound 0.6310    transfer 0.0077    finalize 0.0089    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.30529 (13), -0.30419 (13), -0.29627 (13), -0.29515 (13), -0.29343 (13), -0.29312 (13), -0.29284 (13), -0.29171 (13), -0.29137 (13), -0.29060 (13), -0.28440 (13), -0.28408 (13), -0.28376 (13), -0.28261 (13), -0.28228 (13), -0.28217 (13), -0.28164 (13), -0.28151 (13), -0.28123 (13), -0.28049 (13), 
Length of domains: 369
Time: pickout 0.0032    decision 0.0233    set_bounds 0.0091    solve 0.1207    add 0.0024    
Accumulated time: pickout 0.0079    decision 0.0812    set_bounds 0.0510    solve 0.6744    add 0.0068    
Current (lb-rhs): -0.30529412627220154
764 domains visited
Cumulative time: 0.8347408771514893

BaB round 5
batch: 369
splitting decisions: 
split level 0: [/input-8, 538] [/input-8, 538] [/input-8, 538] [/input-8, 538] [/input-8, 538] [/input-8, 538] [/input-8, 1061] [/input-8, 1061] [/input-8, 1061] [/input-8, 556] 
pruning_in_iteration open status: False
ratio of positive domain = 31 / 738 = 0.04200542005420049
pruning-in-iteration extra time: 5.221366882324219e-05
Time: prepare 0.0143    bound 0.0949    transfer 0.0026    finalize 0.0041    func 0.1160    
Accumulated time: func 0.7901    prepare 0.0417    bound 0.7259    transfer 0.0103    finalize 0.0130    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.29769 (14), -0.29656 (14), -0.29165 (14), -0.29088 (14), -0.29057 (14), -0.28974 (14), -0.28589 (14), -0.28556 (14), -0.28489 (14), -0.28385 (14), -0.28341 (14), -0.28278 (14), -0.28251 (14), -0.28143 (14), -0.27994 (14), -0.27958 (14), -0.27936 (14), -0.27909 (14), -0.27874 (14), -0.27800 (14), 
Length of domains: 706
Time: pickout 0.0052    decision 0.0349    set_bounds 0.0160    solve 0.1166    add 0.0027    
Accumulated time: pickout 0.0131    decision 0.1161    set_bounds 0.0670    solve 0.7911    add 0.0095    
Current (lb-rhs): -0.29768767952919006
1470 domains visited
Cumulative time: 1.0109543800354004

BaB round 6
batch: 706
splitting decisions: 
split level 0: [/input-8, 867] [/input-8, 1061] [/input-8, 1061] [/input-8, 556] [/input-8, 1061] [/input-8, 556] [/input-8, 867] [/input-8, 867] [/input-8, 556] [/input-8, 1061] 
pruning_in_iteration open status: False
ratio of positive domain = 153 / 1412 = 0.10835694050991507
pruning-in-iteration extra time: 5.745887756347656e-05
Time: prepare 0.0282    bound 0.1116    transfer 0.0039    finalize 0.0094    func 0.1531    
Accumulated time: func 0.9432    prepare 0.0701    bound 0.8375    transfer 0.0142    finalize 0.0224    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.29135 (15), -0.29044 (15), -0.28622 (15), -0.28480 (15), -0.28469 (15), -0.28429 (15), -0.28389 (15), -0.28224 (15), -0.27965 (15), -0.27950 (15), -0.27877 (15), -0.27762 (15), -0.27758 (15), -0.27737 (15), -0.27703 (15), -0.27649 (15), -0.27602 (15), -0.27595 (15), -0.27559 (15), -0.27556 (15), 
Length of domains: 1256
Time: pickout 0.0089    decision 0.0510    set_bounds 0.0308    solve 0.1534    add 0.0048    
Accumulated time: pickout 0.0220    decision 0.1671    set_bounds 0.0978    solve 0.9444    add 0.0143    
Current (lb-rhs): -0.2913466691970825
2726 domains visited
Cumulative time: 1.2617249488830566

BaB round 7
batch: 1256
splitting decisions: 
split level 0: [/input-8, 1061] [/input-8, 867] [/input-8, 867] [/input-12, 37] [/input-8, 867] [/input-8, 541] [/input-8, 556] [/input-8, 92] [/input-8, 867] [/input-8, 867] 
pruning_in_iteration open status: False
ratio of positive domain = 127 / 2512 = 0.05055732484076436
pruning-in-iteration extra time: 7.987022399902344e-05
Time: prepare 0.0516    bound 0.1411    transfer 0.0062    finalize 0.0181    func 0.2172    
Accumulated time: func 1.1603    prepare 0.1219    bound 0.9786    transfer 0.0204    finalize 0.0405    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.28555 (16), -0.28477 (16), -0.28010 (16), -0.27941 (16), -0.27896 (16), -0.27848 (16), -0.27820 (16), -0.27668 (16), -0.27610 (16), -0.27511 (16), -0.27317 (16), -0.27315 (16), -0.27304 (16), -0.27262 (16), -0.27178 (16), -0.27142 (16), -0.27129 (16), -0.27090 (16), -0.27071 (16), -0.27018 (16), 
Length of domains: 2383
Time: pickout 0.0159    decision 0.0845    set_bounds 0.0542    solve 0.2176    add 0.0108    
Accumulated time: pickout 0.0378    decision 0.2516    set_bounds 0.1520    solve 1.1620    add 0.0251    
Current (lb-rhs): -0.28554725646972656
5109 domains visited
Cumulative time: 1.6482465267181396

BaB round 8
batch: 2383
splitting decisions: 
split level 0: [/input-12, 55] [/input-12, 55] [/input-12, 55] [/input-12, 55] [/input-12, 55] [/input-12, 37] [/input-8, 1900] [/input-8, 556] [/input-8, 1900] [/input-8, 1900] 
pruning_in_iteration open status: False
ratio of positive domain = 288 / 4766 = 0.0604280318925724
pruning-in-iteration extra time: 6.341934204101562e-05
Time: prepare 0.1022    bound 0.2416    transfer 0.0217    finalize 0.0338    func 0.4004    
Accumulated time: func 1.5607    prepare 0.2243    bound 1.2202    transfer 0.0421    finalize 0.0743    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.28105 (17), -0.28032 (17), -0.27564 (17), -0.27496 (17), -0.27431 (17), -0.27381 (17), -0.27358 (17), -0.27213 (17), -0.27097 (17), -0.26999 (17), -0.26861 (17), -0.26848 (17), -0.26845 (17), -0.26808 (17), -0.26697 (17), -0.26692 (17), -0.26677 (17), -0.26640 (17), -0.26595 (17), -0.26569 (17), 
Length of domains: 4454
Time: pickout 0.0330    decision 0.2728    set_bounds 0.1006    solve 0.4014    add 0.1253    
Accumulated time: pickout 0.0708    decision 0.5244    set_bounds 0.2526    solve 1.5634    add 0.1505    
Current (lb-rhs): -0.28104889392852783
9563 domains visited
Cumulative time: 2.5885283946990967

BaB round 9
batch: 4096
splitting decisions: 
split level 0: [/input-12, 55] [/input-8, 1900] [/input, 1463] [/input-8, 1900] [/input-8, 1884] [/input-8, 1900] [/input-8, 1460] [/input-8, 100] [/input-8, 1061] [/input-8, 1900] 
pruning_in_iteration open status: False
ratio of positive domain = 838 / 8192 = 0.102294921875
pruning-in-iteration extra time: 8.845329284667969e-05
Time: prepare 0.1894    bound 0.3640    transfer 0.0466    finalize 0.0609    func 0.6621    
Accumulated time: func 2.2229    prepare 0.4140    bound 1.5842    transfer 0.0887    finalize 0.1352    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.28105 (17), -0.28032 (17), -0.27564 (17), -0.27431 (17), -0.27358 (17), -0.27107 (18), -0.27002 (18), -0.26861 (17), -0.26845 (17), -0.26808 (17), -0.26692 (17), -0.26640 (17), -0.26595 (17), -0.26489 (17), -0.26369 (18), -0.26323 (17), -0.26321 (17), -0.26310 (18), -0.26268 (18), -0.26189 (17), 
Length of domains: 7669
Time: pickout 0.0580    decision 0.4083    set_bounds 0.1744    solve 0.6638    add 0.0328    
Accumulated time: pickout 0.1288    decision 0.9327    set_bounds 0.4270    solve 2.2272    add 0.1832    
Current (lb-rhs): -0.28104889392852783
16874 domains visited
current_vram/total_varm: 31.5GB/99.9GB, batch_size increase to 8192
Cumulative time: 3.9436542987823486

BaB round 10
batch: 7669
splitting decisions: 
split level 0: [/input-8, 100] [/input-8, 1900] [/input-8, 100] [/input, 1463] [/input-8, 100] [/input, 1463] [/input-8, 100] [/input-8, 1900] [/input-8, 100] [/input, 2472] 
pruning_in_iteration open status: False
ratio of positive domain = 2601 / 15338 = 0.1695788238362238
pruning-in-iteration extra time: 0.00010585784912109375
Time: prepare 0.3609    bound 0.6472    transfer 0.0891    finalize 0.1065    func 1.2063    
Accumulated time: func 3.4291    prepare 0.7752    bound 2.2313    transfer 0.1778    finalize 0.2417    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.27727 (18), -0.27185 (18), -0.27089 (18), -0.27067 (18), -0.27046 (18), -0.26722 (19), -0.26433 (18), -0.26407 (18), -0.26401 (18), -0.26386 (18), -0.26257 (18), -0.26189 (18), -0.26164 (19), -0.26161 (18), -0.26154 (19), -0.26030 (19), -0.25994 (19), -0.25963 (19), -0.25912 (18), -0.25900 (18), 
Length of domains: 12600
Time: pickout 0.1122    decision 0.5975    set_bounds 0.4791    solve 1.2095    add 0.0467    
Accumulated time: pickout 0.2410    decision 1.5302    set_bounds 0.9061    solve 3.4367    add 0.2299    
Current (lb-rhs): -0.2772708535194397
29474 domains visited
Cumulative time: 6.4242753982543945

BaB round 11
batch: 8192
splitting decisions: 
split level 0: [/input-8, 84] [/input-8, 1884] [/input-8, 100] [/input-8, 1884] [/input-12, 55] [/input-8, 100] [/input-8, 1892] [/input-8, 100] [/input-8, 84] [/input, 3529] 
pruning_in_iteration open status: True
ratio of positive domain = 3571 / 16384 = 0.21795654296875
pruning-in-iteration extra time: 0.000690460205078125
Time: prepare 0.4010    bound 0.6912    transfer 0.0949    finalize 0.1091    func 1.2983    
Accumulated time: func 4.7274    prepare 1.1765    bound 2.9225    transfer 0.2727    finalize 0.3508    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.27459 (19), -0.27089 (18), -0.26917 (19), -0.26771 (19), -0.26695 (19), -0.26407 (18), -0.26309 (20), -0.26189 (18), -0.26164 (19), -0.26158 (19), -0.26006 (19), -0.25989 (19), -0.25889 (20), -0.25860 (18), -0.25794 (19), -0.25740 (18), -0.25698 (18), -0.25696 (20), -0.25671 (19), -0.25611 (20), 
Length of domains: 17221
Time: pickout 0.1286    decision 0.6824    set_bounds 0.5512    solve 1.3015    add 0.0786    
Accumulated time: pickout 0.3696    decision 2.2126    set_bounds 1.4573    solve 4.7382    add 0.3085    
Current (lb-rhs): -0.2745944857597351
42287 domains visited
current_vram/total_varm: 31.5GB/99.9GB, batch_size increase to 16384
Cumulative time: 9.20557451248169

BaB round 12
batch: 16384
splitting decisions: 
split level 0: [/input-8, 1884] [/input-8, 1892] [/input-8, 1884] [/input-8, 508] [/input-8, 508] [/input-12, 55] [/input-12, 55] [/input-8, 1884] [/input-8, 1884] [/input-8, 1884] 
pruning_in_iteration open status: False
ratio of positive domain = 6212 / 32768 = 0.1895751953125
pruning-in-iteration extra time: 0.0002703666687011719
Time: prepare 0.7915    bound 1.3182    transfer 0.1848    finalize 0.2250    func 2.8310    
Accumulated time: func 7.5584    prepare 1.9684    bound 4.2408    transfer 0.4575    finalize 0.5758    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.27094 (20), -0.27089 (18), -0.26550 (20), -0.26431 (20), -0.26407 (18), -0.26403 (20), -0.26189 (18), -0.25897 (20), -0.25860 (18), -0.25830 (20), -0.25740 (18), -0.25740 (20), -0.25698 (18), -0.25620 (20), -0.25542 (18), -0.25527 (21), -0.25504 (18), -0.25422 (21), -0.25376 (18), -0.25350 (20), 
Length of domains: 27147
Time: pickout 0.2704    decision 2.1811    set_bounds 0.9673    solve 2.8374    add 0.1031    
Accumulated time: pickout 0.6400    decision 4.3937    set_bounds 2.4246    solve 7.5755    add 0.4116    
Current (lb-rhs): -0.2709394097328186
68597 domains visited
current_vram/total_varm: 31.5GB/99.9GB, batch_size increase to 32768
Cumulative time: 15.624757289886475

BaB round 13
batch: 27147
splitting decisions: 
split level 0: [/input-8, 1884] [/input-8, 100] [/input-8, 1884] [/input-8, 541] [/input-8, 1884] [/input-12, 55] [/input-12, 55] [/input-8, 1884] [/input-12, 55] [/input-8, 100] 
pruning_in_iteration open status: False
ratio of positive domain = 8809 / 54294 = 0.16224628872435265
pruning-in-iteration extra time: 0.0004050731658935547
Time: prepare 1.4028    bound 2.1664    transfer 0.3064    finalize 0.3766    func 4.2568    
Accumulated time: func 11.8152    prepare 3.3716    bound 6.4071    transfer 0.7640    finalize 0.9524    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.26700 (19), -0.26171 (21), -0.26150 (21), -0.26068 (21), -0.26011 (19), -0.25887 (19), -0.25627 (21), -0.25609 (21), -0.25506 (21), -0.25480 (21), -0.25460 (21), -0.25423 (19), -0.25390 (19), -0.25377 (21), -0.25336 (19), -0.25216 (19), -0.25190 (19), -0.25118 (19), -0.25088 (19), -0.24925 (21), 
Length of domains: 45204
Time: pickout 0.4445    decision 2.8086    set_bounds 1.8143    solve 4.6869    add 0.1531    
Accumulated time: pickout 1.0845    decision 7.2022    set_bounds 4.2389    solve 12.2624    add 0.5647    
Current (lb-rhs): -0.26700037717819214
113801 domains visited
Cumulative time: 25.64616870880127

BaB round 14
batch: 32768
splitting decisions: 
split level 0: [/input, 1463] [/input, 1463] [/input, 1463] [/input-8, 1892] [/input-8, 90] [/input-8, 100] [/input-8, 90] [/input-8, 100] [/input-8, 1884] [/input, 1463] 
pruning_in_iteration open status: False
ratio of positive domain = 9326 / 65536 = 0.142303466796875
pruning-in-iteration extra time: 0.00045680999755859375
Time: prepare 1.7952    bound 7.7809    transfer 0.3703    finalize 1.0029    func 10.9529    
Accumulated time: func 22.7681    prepare 5.1674    bound 14.1881    transfer 1.1343    finalize 1.9553    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.26434 (20), -0.25743 (20), -0.25549 (20), -0.25430 (22), -0.25404 (22), -0.25325 (22), -0.25216 (19), -0.25091 (20), -0.25090 (22), -0.25087 (22), -0.25030 (20), -0.25004 (22), -0.24883 (22), -0.24860 (22), -0.24844 (20), -0.24759 (22), -0.24751 (20), -0.24725 (22), -0.24699 (22), -0.24691 (20), 
Length of domains: 68298
Time: pickout 0.5678    decision 3.4841    set_bounds 1.9045    solve 10.9660    add 0.2273    
Accumulated time: pickout 1.6523    decision 10.6863    set_bounds 6.1434    solve 23.2284    add 0.7920    
Current (lb-rhs): -0.26434406638145447
169663 domains visited
Cumulative time: 42.90208101272583

BaB round 15
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1892] [/input-8, 1892] [/input-8, 541] [/input-8, 1892] [/input-8, 541] [/input, 3529] [/input-8, 541] [/input-8, 84] [/input-8, 1884] [/input, 3529] 
pruning_in_iteration open status: False
ratio of positive domain = 7960 / 65536 = 0.1214599609375
pruning-in-iteration extra time: 0.00046253204345703125
Time: prepare 2.0412    bound 7.7847    transfer 0.3696    finalize 0.4838    func 10.6876    
Accumulated time: func 33.4558    prepare 7.2091    bound 21.9727    transfer 1.5039    finalize 2.4391    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.26045 (21), -0.25354 (21), -0.25216 (19), -0.25090 (22), -0.25071 (23), -0.25033 (23), -0.25014 (23), -0.24917 (23), -0.24838 (23), -0.24725 (21), -0.24627 (23), -0.24615 (21), -0.24578 (21), -0.24575 (22), -0.24526 (19), -0.24502 (19), -0.24502 (22), -0.24501 (22), -0.24492 (23), -0.24479 (23), 
Length of domains: 92852
Time: pickout 0.6201    decision 4.0618    set_bounds 2.8009    solve 10.7131    add 0.2204    
Accumulated time: pickout 2.2725    decision 14.7481    set_bounds 8.9442    solve 33.9415    add 1.0124    
Current (lb-rhs): -0.2604473829269409
226985 domains visited
Cumulative time: 61.56696128845215

BaB round 16
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1460] [/input-8, 1460] [/input-8, 1460] [/input-8, 1460] [/input-8, 508] [/input-8, 1460] [/input-8, 508] [/input-8, 541] [/input-8, 1460] [/input-8, 1460] 
pruning_in_iteration open status: False
ratio of positive domain = 6921 / 65536 = 0.1056060791015625
pruning-in-iteration extra time: 0.0005245208740234375
Time: prepare 1.9086    bound 7.7805    transfer 0.3666    finalize 1.4061    func 11.4652    
Accumulated time: func 44.9210    prepare 9.1182    bound 29.7532    transfer 1.8705    finalize 3.8452    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.25302 (22), -0.25216 (19), -0.25090 (22), -0.25033 (23), -0.24972 (22), -0.24917 (23), -0.24907 (24), -0.24853 (24), -0.24838 (23), -0.24615 (21), -0.24597 (22), -0.24575 (22), -0.24526 (19), -0.24502 (19), -0.24502 (22), -0.24501 (22), -0.24492 (23), -0.24464 (24), -0.24461 (22), -0.24393 (22), 
Length of domains: 118387
Time: pickout 0.7765    decision 4.5381    set_bounds 2.4748    solve 11.4778    add 0.3116    
Accumulated time: pickout 3.0490    decision 19.2862    set_bounds 11.4190    solve 45.4193    add 1.3240    
Current (lb-rhs): -0.2530216872692108
285288 domains visited
Cumulative time: 81.22648024559021

BaB round 17
batch: 32768
splitting decisions: 
split level 0: [/input, 1463] [/input-8, 1460] [/input, 2936] [/input-8, 1460] [/input-8, 1003] [/input-8, 1003] [/input, 2936] [/input, 2936] [/input, 1463] [/input-8, 1003] 
pruning_in_iteration open status: False
ratio of positive domain = 7320 / 65536 = 0.1116943359375
pruning-in-iteration extra time: 0.00046896934509277344
Time: prepare 1.9262    bound 7.7820    transfer 0.3647    finalize 1.5906    func 11.6667    
Accumulated time: func 56.5877    prepare 11.0450    bound 37.5352    transfer 2.2352    finalize 5.4359    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.25216 (19), -0.25090 (22), -0.25033 (23), -0.24972 (22), -0.24932 (23), -0.24917 (23), -0.24907 (24), -0.24853 (24), -0.24838 (23), -0.24615 (21), -0.24575 (22), -0.24526 (19), -0.24502 (19), -0.24502 (22), -0.24501 (22), -0.24492 (23), -0.24464 (24), -0.24461 (22), -0.24393 (22), -0.24391 (23), 
Length of domains: 143422
Time: pickout 0.6590    decision 4.1895    set_bounds 1.5229    solve 11.6798    add 0.2415    
Accumulated time: pickout 3.7080    decision 23.4757    set_bounds 12.9419    solve 57.0991    add 1.5656    
Current (lb-rhs): -0.25215721130371094
343091 domains visited
Cumulative time: 99.59392189979553

BaB round 18
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1909] [/input, 2472] [/input-8, 90] [/input, 2472] [/input-8, 541] [/input-8, 1003] [/input-8, 1003] [/input-8, 541] [/input, 1736] [/input-8, 90] 
pruning_in_iteration open status: False
ratio of positive domain = 8251 / 65536 = 0.1259002685546875
pruning-in-iteration extra time: 0.00044417381286621094
Time: prepare 1.9268    bound 7.7842    transfer 0.3664    finalize 0.4601    func 10.5402    
Accumulated time: func 67.1279    prepare 12.9724    bound 45.3194    transfer 2.6015    finalize 5.8960    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.25216 (19), -0.25090 (22), -0.25033 (23), -0.24972 (22), -0.24932 (23), -0.24917 (23), -0.24907 (24), -0.24853 (24), -0.24838 (23), -0.24615 (21), -0.24575 (22), -0.24526 (19), -0.24502 (19), -0.24502 (22), -0.24501 (22), -0.24492 (23), -0.24464 (24), -0.24461 (22), -0.24393 (22), -0.24391 (23), 
Length of domains: 167544
Time: pickout 0.6726    decision 3.4350    set_bounds 2.8371    solve 11.8664    add 0.3107    
Accumulated time: pickout 4.3806    decision 26.9107    set_bounds 15.7790    solve 68.9655    add 1.8763    
Current (lb-rhs): -0.25215721130371094
399981 domains visited
Cumulative time: 118.84408855438232

BaB round 19
batch: 32768
splitting decisions: 
split level 0: [/input-8, 541] [/input-8, 100] [/input-8, 508] [/input-8, 508] [/input, 3512] [/input-8, 541] [/input, 1736] [/input, 2506] [/input, 2472] [/input, 2470] 
pruning_in_iteration open status: False
ratio of positive domain = 7993 / 65536 = 0.1219635009765625
pruning-in-iteration extra time: 0.0005025863647460938
Time: prepare 1.9918    bound 7.7806    transfer 0.3562    finalize 0.4563    func 10.5882    
Accumulated time: func 77.7161    prepare 14.9648    bound 53.1001    transfer 2.9577    finalize 6.3523    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.25216 (19), -0.25090 (22), -0.25033 (23), -0.24972 (22), -0.24932 (23), -0.24917 (23), -0.24907 (24), -0.24853 (24), -0.24838 (23), -0.24615 (21), -0.24575 (22), -0.24526 (19), -0.24502 (19), -0.24502 (22), -0.24501 (22), -0.24492 (23), -0.24464 (24), -0.24461 (22), -0.24393 (22), -0.24391 (23), 
Length of domains: 192002
Time: pickout 0.6732    decision 3.4837    set_bounds 3.1797    solve 10.6056    add 0.2955    
Accumulated time: pickout 5.0538    decision 30.3944    set_bounds 18.9588    solve 79.5711    add 2.1717    
Current (lb-rhs): -0.25215721130371094
457207 domains visited
Cumulative time: 137.21337819099426

BaB round 20
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1003] [/input, 1736] [/input-8, 541] [/input, 2473] [/input-8, 84] [/input-8, 84] [/input, 1463] [/input-8, 90] [/input-8, 90] [/input-8, 90] 
pruning_in_iteration open status: False
ratio of positive domain = 6954 / 65536 = 0.106109619140625
pruning-in-iteration extra time: 0.00043392181396484375
Time: prepare 1.9188    bound 7.7786    transfer 0.3681    finalize 0.4676    func 10.5359    
Accumulated time: func 88.2520    prepare 16.8841    bound 60.8787    transfer 3.3258    finalize 6.8200    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.25216 (19), -0.25090 (22), -0.25033 (23), -0.24972 (22), -0.24932 (23), -0.24917 (23), -0.24907 (24), -0.24853 (24), -0.24838 (23), -0.24615 (21), -0.24575 (22), -0.24526 (19), -0.24502 (19), -0.24502 (22), -0.24501 (22), -0.24492 (23), -0.24464 (24), -0.24461 (22), -0.24393 (22), -0.24391 (23), 
Length of domains: 217572
Time: pickout 0.7302    decision 4.7295    set_bounds 1.5304    solve 10.5529    add 0.2286    
Accumulated time: pickout 5.7840    decision 35.1239    set_bounds 20.4892    solve 90.1240    add 2.4003    
Current (lb-rhs): -0.25215721130371094
515545 domains visited
Cumulative time: 155.09876251220703

BaB round 21
batch: 32768
splitting decisions: 
split level 0: [/input, 3927] [/input, 3272] [/input, 2472] [/input, 1463] [/input-8, 1003] [/input-8, 84] [/input, 1736] [/input-8, 84] [/input, 1736] [/input-8, 507] 
pruning_in_iteration open status: False
ratio of positive domain = 6560 / 65536 = 0.10009765625
pruning-in-iteration extra time: 0.0004756450653076172
Time: prepare 1.8839    bound 7.7775    transfer 0.3672    finalize 2.2104    func 12.2417    
Accumulated time: func 100.4938    prepare 18.7686    bound 68.6562    transfer 3.6929    finalize 9.0304    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.25216 (19), -0.25090 (22), -0.25033 (23), -0.24972 (22), -0.24932 (23), -0.24917 (23), -0.24907 (24), -0.24853 (24), -0.24838 (23), -0.24615 (21), -0.24575 (22), -0.24526 (19), -0.24502 (19), -0.24502 (22), -0.24501 (22), -0.24492 (23), -0.24464 (24), -0.24461 (22), -0.24393 (22), -0.24391 (23), 
Length of domains: 243550
Time: pickout 0.7544    decision 5.2352    set_bounds 1.5344    solve 12.2556    add 0.2122    
Accumulated time: pickout 6.5384    decision 40.3591    set_bounds 22.0235    solve 102.3796    add 2.6126    
Current (lb-rhs): -0.25215721130371094
574291 domains visited
Cumulative time: 175.16762137413025

BaB round 22
batch: 32768
splitting decisions: 
split level 0: [/input, 3512] [/input-8, 507] [/input, 2472] [/input-8, 1107] [/input-8, 84] [/input-8, 84] [/input-8, 508] [/input, 1736] [/input-8, 1884] [/input, 2506] 
pruning_in_iteration open status: False
ratio of positive domain = 6587 / 65536 = 0.1005096435546875
pruning-in-iteration extra time: 0.0004832744598388672
Time: prepare 1.9190    bound 7.7800    transfer 0.3673    finalize 2.5318    func 12.6010    
Accumulated time: func 113.0948    prepare 20.6880    bound 76.4363    transfer 4.0602    finalize 11.5622    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.25216 (19), -0.25090 (22), -0.25033 (23), -0.24972 (22), -0.24932 (23), -0.24917 (23), -0.24907 (24), -0.24853 (24), -0.24838 (23), -0.24615 (21), -0.24575 (22), -0.24526 (19), -0.24502 (19), -0.24502 (22), -0.24501 (22), -0.24492 (23), -0.24464 (24), -0.24461 (22), -0.24393 (22), -0.24391 (23), 
Length of domains: 269494
Time: pickout 0.6661    decision 3.4118    set_bounds 1.4797    solve 12.6194    add 0.2400    
Accumulated time: pickout 7.2045    decision 43.7710    set_bounds 23.5032    solve 114.9990    add 2.8526    
Current (lb-rhs): -0.25215721130371094
633003 domains visited
Cumulative time: 193.66758823394775

BaB round 23
batch: 32768
splitting decisions: 
split level 0: [/input, 2455] [/input, 3512] [/input, 3927] [/input-8, 1107] [/input, 2470] [/input-8, 499] [/input-8, 499] [/input-8, 499] [/input-8, 499] [/input-8, 90] 
pruning_in_iteration open status: False
ratio of positive domain = 7236 / 65536 = 0.11041259765625
pruning-in-iteration extra time: 0.00048089027404785156
Time: prepare 1.8359    bound 7.7779    transfer 0.3603    finalize 0.4861    func 10.4631    
Accumulated time: func 123.5579    prepare 22.5245    bound 84.2142    transfer 4.4205    finalize 12.0483    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.25216 (19), -0.25090 (22), -0.25033 (23), -0.24972 (22), -0.24932 (23), -0.24917 (23), -0.24907 (24), -0.24853 (24), -0.24838 (23), -0.24615 (21), -0.24575 (22), -0.24526 (19), -0.24502 (19), -0.24502 (22), -0.24501 (22), -0.24492 (23), -0.24464 (24), -0.24461 (22), -0.24393 (22), -0.24391 (23), 
Length of domains: 294750
Time: pickout 0.6933    decision 3.3970    set_bounds 3.7287    solve 10.4830    add 0.2429    
Accumulated time: pickout 7.8978    decision 47.1680    set_bounds 27.2320    solve 125.4821    add 3.0956    
Current (lb-rhs): -0.25215721130371094
691027 domains visited
Time out!!!!!!!!
Result: unknown in 215.5524 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 188, vnnlib ID: 188 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-2.91176009, -6.98036766, -2.84487700, -4.53986120, -3.38612461,
         -4.94995880, -5.20888853, -6.30824423, -4.65725613, -6.36737871]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [467]; unstable size 467; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 229, 1, 467] with unstable size 228 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 467] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 467] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [228]; unstable size 228; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 228] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 228] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.97516215,  1.98761463,  0.85461807, -0.25794771,  1.12561285,
          1.30599141,  2.30291843, -0.37233806,  1.60615540]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.91176009, -6.98036766, -2.84487700, -4.53986120, -3.38612461,
         -4.94995880, -5.20888853, -6.30824423, -4.65725613, -6.36737871]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.61352348, -6.98639107, -3.14915252, -4.73351860, -3.62735605,
          -5.15657663, -5.39361668, -6.49277210, -4.53538036, -6.45075560],
         [-2.61352348, -6.98639107, -3.14915252, -4.73351860, -3.62735605,
          -5.15657663, -5.39361668, -6.49277210, -4.53538036, -6.45075560]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.53562903,  0.47820354,  1.38622785]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0073 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0992 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 189, vnnlib ID: 189 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.48303747, -10.29648781,  -4.77946949,  -6.41142654,  -3.71523380,
          -6.92542839,  -5.50940371,  -7.37353468,  -9.88126087,  -9.47254848]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [427]; unstable size 427; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 239, 1, 427] with unstable size 238 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 427] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 427] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [238]; unstable size 238; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 238] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 238] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.48654914, 5.05169868, 0.07906628, 1.63433266, 2.04545784, 0.66316938,
         2.76845503, 4.94088554, 4.35907841]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0677 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 190, vnnlib ID: 190 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -6.12282085,  -8.68214226, -10.30647087, -10.71084213,  -9.83157253,
         -12.23327827, -10.64780331, -11.54215813,  -3.88245940,  -8.45811939]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [654]; unstable size 654; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 194, 1, 654] with unstable size 193 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 654] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 654] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [193]; unstable size 193; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 193] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 193] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.77125788, 3.34607601, 4.68589306, 5.31104040, 4.23434162, 6.53741312,
         5.22720718, 5.57845974, 3.04642510]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0527 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 191, vnnlib ID: 191 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.91402149, -10.96457195,  -4.60119486,  -3.07470465,  -3.85695314,
          -3.09889174,  -5.81089735,  -5.97126102,  -9.49198723, -10.05299187]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [611]; unstable size 611; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 278, 1, 611] with unstable size 277 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 611] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 611] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [277]; unstable size 277; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 277] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 277] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.15813017,  6.06970501,  0.46179646, -0.24430564, -0.42243239,
          1.52134764,  1.26745129,  4.78580904,  5.02399063]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.91402149, -10.96457195,  -4.60119486,  -3.07470465,  -3.85695314,
          -3.09889174,  -5.81089735,  -5.97126102,  -9.49198723, -10.05299187]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.08612442, -11.13200855,  -4.78087616,  -3.23898911,  -3.99717236,
           -3.01693344,  -6.23289585,  -5.81701088,  -9.75449657, -10.23010731],
         [ -9.08612442, -11.13200855,  -4.78087616,  -3.23898911,  -3.99717236,
           -3.01693344,  -6.23289585,  -5.81701088,  -9.75449657, -10.23010731]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.75818324, -0.22205567]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0060 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0477 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 192, vnnlib ID: 192 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-14.02367878, -16.68686485,  -9.24556446, -13.41522598, -11.11723232,
         -13.42477131, -11.50259304, -13.30918312, -17.15509415, -16.44651794]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [639]; unstable size 639; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 297, 1, 639] with unstable size 296 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 639] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 639] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [296]; unstable size 296; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 296] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 296] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.69086051, 5.29207325, 2.62997913, 0.65836817, 2.47528172, 0.66326332,
         2.12296367, 6.32425117, 5.31157494]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0629 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 193, vnnlib ID: 193 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.20210648,  -8.82046795, -12.04976559, -10.42980194, -10.17031384,
         -10.70486259, -10.72393131,  -9.02217484, -12.87825584,  -7.13908768]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [635]; unstable size 635; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 211, 1, 635] with unstable size 210 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 635] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 635] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [210]; unstable size 210; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 210] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 210] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.61224699, 0.46522087, 2.92189741, 1.71166277, 1.48281193, 1.75262117,
         1.73563385, 0.26523209, 4.10882807]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0449 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 194, vnnlib ID: 194 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.03137493, -14.28631020,  -6.88360214, -10.38493061,  -7.40738487,
         -10.63051796,  -9.41903210, -11.08277416, -12.21933270, -13.69361401]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [568]; unstable size 568; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 232, 1, 568] with unstable size 231 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 568] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 568] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [231]; unstable size 231; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 231] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 231] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.97100055,  5.75294256,  2.62268901, -0.44995368,  2.71119261,
          1.17250752,  2.60135508,  3.52469158,  4.91072798]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.03137493, -14.28631020,  -6.88360214, -10.38493061,  -7.40738487,
         -10.63051796,  -9.41903210, -11.08277416, -12.21933270, -13.69361401]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.12471867, -14.34060478,  -7.07273006, -10.32793617,  -7.07119846,
          -10.54697418,  -9.27692223, -10.68519115, -12.31662083, -13.77415562]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.00153160]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0068 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0596 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 195, vnnlib ID: 195 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.98067474, -6.32652664, -2.95507026, -3.61686778, -3.40175915,
         -3.97366190, -4.56966162, -4.09664774, -7.20802689, -7.00610399]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [544]; unstable size 544; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 205, 1, 544] with unstable size 204 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 544] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 544] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [204]; unstable size 204; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 204] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 204] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.09186625,  1.89036942,  0.01000333, -0.14229476,  0.23984718,
          0.71584237,  0.47055006,  3.11726594,  2.74282837]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.98067474, -6.32652664, -2.95507026, -3.61686778, -3.40175915,
         -3.97366190, -4.56966162, -4.09664774, -7.20802689, -7.00610399]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.73it/s]100%|██████████| 1/1 [00:00<00:00,  8.72it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.00337505, -6.23116016, -3.06292415, -3.62363768, -3.13657141,
          -3.98162699, -4.44606256, -4.00734854, -7.31230736, -6.86365461]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.07364726]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1172 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 11.540643692016602
alpha/beta optimization time: 1.1500403881072998
initial alpha-crown bounds: tensor([[ 2.13471889,  1.94881058,  0.04223824, -0.12571073,  0.27321053,
          0.80250430,  0.49562001,  3.17971420,  2.78953791]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.12571072578430176
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6645324230194
Verifying property 0 with 1 instances.
##### Instance 195 first 10 spec matrices: 
tensor([[[-1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.134718894958496.

Properties batch 1, size 1
Remaining timeout: 198.50257873535156
Verifying property 1 with 1 instances.
##### Instance 195 first 10 spec matrices: 
tensor([[[ 0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9488105773925781.

Properties batch 2, size 1
Remaining timeout: 198.38085746765137
Verifying property 2 with 1 instances.
##### Instance 195 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.04223823547363281.

Properties batch 3, size 1
Remaining timeout: 198.27969622612
Verifying property 3 with 1 instances.
##### Instance 195 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.12571073]], device='cuda:0') need to verify.
Model prediction is: tensor([-5.98067474, -6.32652664, -2.95507026, -3.61686778, -3.40175915,
        -3.97366190, -4.56966162, -4.09664774, -7.20802689, -7.00610399],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.12571073]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 544
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 200
Node /15 input 0: size torch.Size([100]) unstable 13
-----------------
# of unstable neurons: 757
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 35] 
split level 1: [/input-12, 58] 
split level 2: [/input-12, 33] 
split level 3: [/input-12, 40] 
split level 4: [/input-8, 179] 
split level 5: [/input-8, 2044] 
split level 6: [/input-8, 1028] 
split level 7: [/input-8, 2042] 
pruning_in_iteration open status: True
ratio of positive domain = 224 / 256 = 0.875
pruning-in-iteration extra time: 0.004959821701049805
Time: prepare 0.0031    bound 0.1178    transfer 0.0022    finalize 0.0017    func 0.1248    
Accumulated time: func 0.1248    prepare 0.0035    bound 0.1178    transfer 0.0022    finalize 0.0017    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04976 (8), -0.04845 (8), -0.04647 (8), -0.04516 (8), -0.04276 (8), -0.04196 (8), -0.04120 (8), -0.04078 (8), -0.03964 (8), -0.03866 (8), -0.03811 (8), -0.03748 (8), -0.03607 (8), -0.03466 (8), -0.03288 (8), -0.03154 (8), -0.02760 (8), -0.02621 (8), -0.02409 (8), -0.02368 (8), 
Length of domains: 32
Time: pickout 0.0004    decision 0.0232    set_bounds 0.0178    solve 0.1249    add 0.0332    
Accumulated time: pickout 0.0004    decision 0.0232    set_bounds 0.0178    solve 0.1249    add 0.0332    
Current (lb-rhs): -0.04976198077201843
32 domains visited
Cumulative time: 0.20602774620056152

BaB round 2
batch: 32
splitting decisions: 
split level 0: [/input-8, 1053] [/input-8, 787] [/input-8, 1053] [/input-8, 477] [/input-8, 787] [/input-8, 787] [/input-8, 1053] [/input-8, 477] [/input-8, 1053] [/input-8, 787] 
split level 1: [/input, 214] [/input, 1719] [/input-8, 787] [/input-8, 787] [/input, 1719] [/input, 1719] [/input-8, 787] [/input-8, 787] [/input, 214] [/input, 1719] 
split level 2: [/input, 1719] [/input, 472] [/input, 1703] [/input, 1703] [/input, 472] [/input, 472] [/input, 1703] [/input, 1703] [/input, 1719] [/input, 472] 
pruning_in_iteration open status: False
ratio of positive domain = 2 / 256 = 0.0078125
pruning-in-iteration extra time: 5.412101745605469e-05
Time: prepare 0.0064    bound 0.0976    transfer 0.0008    finalize 0.0018    func 0.1067    
Accumulated time: func 0.2316    prepare 0.0101    bound 0.2154    transfer 0.0030    finalize 0.0035    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04346 (11), -0.04291 (11), -0.04275 (11), -0.04220 (11), -0.04216 (11), -0.04200 (11), -0.04162 (11), -0.04146 (11), -0.04145 (11), -0.04129 (11), -0.04091 (11), -0.04074 (11), -0.04070 (11), -0.04017 (11), -0.04004 (11), -0.03999 (11), -0.03952 (11), -0.03945 (11), -0.03933 (11), -0.03882 (11), 
Length of domains: 253
Time: pickout 0.0015    decision 0.0166    set_bounds 0.0099    solve 0.1068    add 0.0832    
Accumulated time: pickout 0.0019    decision 0.0399    set_bounds 0.0277    solve 0.2317    add 0.1164    
Current (lb-rhs): -0.04346117377281189
285 domains visited
Cumulative time: 0.4299638271331787

BaB round 3
batch: 253
splitting decisions: 
split level 0: [/input-8, 787] [/input, 1689] [/input, 1689] [/input-8, 1053] [/input, 214] [/input, 1689] [/input, 1689] [/input-8, 787] [/input, 213] [/input, 1689] 
pruning_in_iteration open status: False
ratio of positive domain = 33 / 506 = 0.06521739130434778
pruning-in-iteration extra time: 5.221366882324219e-05
Time: prepare 0.0132    bound 0.1104    transfer 0.0017    finalize 0.0051    func 0.1304    
Accumulated time: func 0.3620    prepare 0.0235    bound 0.3258    transfer 0.0047    finalize 0.0086    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04315 (12), -0.04260 (12), -0.04241 (12), -0.04186 (12), -0.04185 (12), -0.04167 (12), -0.04132 (12), -0.04113 (12), -0.04112 (12), -0.04095 (12), -0.04058 (12), -0.04039 (12), -0.04038 (12), -0.03985 (12), -0.03967 (12), -0.03965 (12), -0.03918 (12), -0.03911 (12), -0.03895 (12), -0.03845 (12), 
Length of domains: 471
Time: pickout 0.0205    decision 0.0325    set_bounds 0.0117    solve 0.1305    add 0.0878    
Accumulated time: pickout 0.0224    decision 0.0724    set_bounds 0.0394    solve 0.3622    add 0.2042    
Current (lb-rhs): -0.04314550757408142
756 domains visited
Cumulative time: 0.721118688583374

BaB round 4
batch: 471
splitting decisions: 
split level 0: [/input, 213] [/input-8, 494] [/input-8, 501] [/input, 214] [/input-8, 469] [/input-8, 501] [/input, 213] [/input, 214] [/input-8, 494] [/input-8, 473] 
pruning_in_iteration open status: False
ratio of positive domain = 106 / 942 = 0.11252653927813161
pruning-in-iteration extra time: 5.364418029785156e-05
Time: prepare 0.0238    bound 0.1036    transfer 0.0047    finalize 0.0068    func 0.1390    
Accumulated time: func 0.5010    prepare 0.0475    bound 0.4294    transfer 0.0094    finalize 0.0154    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04131 (13), -0.04082 (13), -0.04035 (13), -0.04001 (13), -0.03983 (13), -0.03980 (13), -0.03952 (13), -0.03934 (13), -0.03905 (13), -0.03887 (13), -0.03853 (13), -0.03851 (13), -0.03835 (13), -0.03804 (13), -0.03799 (13), -0.03784 (13), -0.03758 (13), -0.03740 (13), -0.03729 (13), -0.03705 (13), 
Length of domains: 829
Time: pickout 0.0215    decision 0.0431    set_bounds 0.0211    solve 0.1392    add 0.0853    
Accumulated time: pickout 0.0439    decision 0.1155    set_bounds 0.0605    solve 0.5015    add 0.2895    
Current (lb-rhs): -0.04131251573562622
1585 domains visited
Cumulative time: 1.0390515327453613

BaB round 5
batch: 829
splitting decisions: 
split level 0: [/input-8, 469] [/input-8, 473] [/input, 362] [/input-8, 494] [/input-8, 473] [/input, 1703] [/input-8, 469] [/input-8, 501] [/input, 362] [/input-8, 1053] 
pruning_in_iteration open status: False
ratio of positive domain = 190 / 1658 = 0.11459589867310016
pruning-in-iteration extra time: 5.459785461425781e-05
Time: prepare 0.0413    bound 0.1247    transfer 0.0061    finalize 0.0108    func 0.1840    
Accumulated time: func 0.6850    prepare 0.0890    bound 0.5541    transfer 0.0155    finalize 0.0262    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03974 (14), -0.03925 (14), -0.03851 (14), -0.03844 (14), -0.03825 (14), -0.03820 (14), -0.03795 (14), -0.03776 (14), -0.03770 (14), -0.03722 (14), -0.03721 (14), -0.03704 (14), -0.03695 (14), -0.03693 (14), -0.03672 (14), -0.03647 (14), -0.03638 (14), -0.03632 (14), -0.03627 (14), -0.03623 (14), 
Length of domains: 1461
Time: pickout 0.0125    decision 0.0619    set_bounds 0.0342    solve 0.1843    add 0.0108    
Accumulated time: pickout 0.0564    decision 0.1774    set_bounds 0.0947    solve 0.6858    add 0.3003    
Current (lb-rhs): -0.039737969636917114
3046 domains visited
Cumulative time: 1.345210075378418

BaB round 6
batch: 1461
splitting decisions: 
split level 0: [/input-8, 597] [/input-8, 494] [/input-8, 597] [/input-8, 2034] [/input, 1689] [/input-8, 597] [/input-8, 2034] [/input, 1703] [/input-8, 494] [/input, 1689] 
pruning_in_iteration open status: False
ratio of positive domain = 317 / 2922 = 0.10848733744010952
pruning-in-iteration extra time: 6.341934204101562e-05
Time: prepare 0.0738    bound 0.1661    transfer 0.0106    finalize 0.0190    func 0.2706    
Accumulated time: func 0.9555    prepare 0.1630    bound 0.7202    transfer 0.0261    finalize 0.0451    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03830 (15), -0.03783 (15), -0.03699 (15), -0.03692 (15), -0.03681 (15), -0.03668 (15), -0.03653 (15), -0.03642 (15), -0.03634 (15), -0.03626 (15), -0.03615 (15), -0.03578 (15), -0.03563 (15), -0.03548 (15), -0.03544 (15), -0.03538 (15), -0.03518 (15), -0.03514 (15), -0.03504 (15), -0.03501 (15), 
Length of domains: 2592
Time: pickout 0.0212    decision 0.0966    set_bounds 0.0609    solve 0.2711    add 0.0243    
Accumulated time: pickout 0.0776    decision 0.2740    set_bounds 0.1556    solve 0.9569    add 0.3246    
Current (lb-rhs): -0.038303911685943604
5638 domains visited
Cumulative time: 1.8237042427062988

BaB round 7
batch: 2592
splitting decisions: 
split level 0: [/input-8, 2016] [/input-8, 2034] [/input, 435] [/input-8, 494] [/input-8, 2034] [/input-8, 2016] [/input, 3385] [/input, 1689] [/input-8, 2034] [/input, 3385] 
pruning_in_iteration open status: False
ratio of positive domain = 499 / 5184 = 0.09625771604938271
pruning-in-iteration extra time: 8.96453857421875e-05
Time: prepare 0.1323    bound 0.2509    transfer 0.0237    finalize 0.0343    func 0.4416    
Accumulated time: func 1.3972    prepare 0.2955    bound 0.9712    transfer 0.0498    finalize 0.0794    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03730 (16), -0.03682 (16), -0.03598 (16), -0.03580 (16), -0.03564 (16), -0.03552 (16), -0.03532 (16), -0.03527 (16), -0.03524 (16), -0.03509 (16), -0.03477 (16), -0.03477 (16), -0.03447 (16), -0.03433 (16), -0.03414 (16), -0.03402 (16), -0.03398 (16), -0.03397 (16), -0.03392 (16), -0.03380 (16), 
Length of domains: 4666
Time: pickout 0.0391    decision 0.1586    set_bounds 0.2652    solve 0.4427    add 0.0856    
Accumulated time: pickout 0.1167    decision 0.4325    set_bounds 0.4207    solve 1.3995    add 0.4102    
Current (lb-rhs): -0.03729942440986633
10304 domains visited
Cumulative time: 2.827815532684326

BaB round 8
batch: 4096
splitting decisions: 
split level 0: [/input-8, 494] [/input-8, 2034] [/input-8, 494] [/input, 435] [/input-8, 2035] [/input-8, 494] [/input-8, 494] [/input, 435] [/input-8, 597] [/input-8, 2034] 
pruning_in_iteration open status: False
ratio of positive domain = 521 / 8192 = 0.0635986328125
pruning-in-iteration extra time: 5.7697296142578125e-05
Time: prepare 0.2132    bound 0.3575    transfer 0.0467    finalize 0.0519    func 0.6708    
Accumulated time: func 2.0680    prepare 0.5089    bound 1.3286    transfer 0.0965    finalize 0.1314    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03534 (17), -0.03489 (17), -0.03486 (17), -0.03470 (17), -0.03444 (17), -0.03427 (17), -0.03421 (17), -0.03384 (17), -0.03377 (17), -0.03368 (17), -0.03361 (16), -0.03355 (17), -0.03338 (17), -0.03337 (17), -0.03328 (17), -0.03324 (17), -0.03320 (17), -0.03313 (17), -0.03311 (17), -0.03306 (16), 
Length of domains: 8219
Time: pickout 0.0650    decision 0.2421    set_bounds 0.3084    solve 0.6724    add 0.0309    
Accumulated time: pickout 0.1816    decision 0.6746    set_bounds 0.7292    solve 2.0719    add 0.4411    
Current (lb-rhs): -0.035342395305633545
17953 domains visited
current_vram/total_varm: 25.6GB/99.9GB, batch_size increase to 8192
Cumulative time: 4.159568548202515

BaB round 9
batch: 8192
splitting decisions: 
split level 0: [/input-8, 494] [/input-8, 2016] [/input-8, 2034] [/input-8, 2016] [/input-8, 2034] [/input-8, 2034] [/input, 362] [/input, 213] [/input-8, 2034] [/input-8, 494] 
pruning_in_iteration open status: False
ratio of positive domain = 1279 / 16384 = 0.07806396484375
pruning-in-iteration extra time: 8.797645568847656e-05
Time: prepare 0.4315    bound 0.6732    transfer 0.0912    finalize 0.2899    func 1.4883    
Accumulated time: func 3.5563    prepare 0.9407    bound 2.0018    transfer 0.1877    finalize 0.4212    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03424 (18), -0.03379 (18), -0.03376 (18), -0.03362 (18), -0.03313 (18), -0.03295 (18), -0.03273 (18), -0.03255 (18), -0.03248 (18), -0.03233 (18), -0.03232 (18), -0.03226 (18), -0.03220 (18), -0.03217 (18), -0.03215 (18), -0.03213 (18), -0.03211 (18), -0.03206 (18), -0.03201 (18), -0.03194 (18), 
Length of domains: 15037
Time: pickout 0.1186    decision 0.6330    set_bounds 0.3408    solve 1.4915    add 0.0564    
Accumulated time: pickout 0.3003    decision 1.3077    set_bounds 1.0700    solve 3.5634    add 0.4975    
Current (lb-rhs): -0.0342366099357605
32963 domains visited
current_vram/total_varm: 31.2GB/99.9GB, batch_size increase to 16384
Cumulative time: 6.825308799743652

BaB round 10
batch: 15037
splitting decisions: 
split level 0: [/input, 435] [/input-8, 1053] [/input-8, 2016] [/input-8, 1053] [/input, 435] [/input-8, 494] [/input, 213] [/input-8, 2016] [/input-8, 494] [/input-8, 2034] 
pruning_in_iteration open status: False
ratio of positive domain = 2418 / 30074 = 0.08040167586619673
pruning-in-iteration extra time: 0.00016260147094726562
Time: prepare 0.7950    bound 1.2044    transfer 0.1716    finalize 0.1915    func 2.3651    
Accumulated time: func 5.9213    prepare 1.7360    bound 3.2062    transfer 0.3592    finalize 0.6128    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03313 (19), -0.03264 (19), -0.03250 (19), -0.03201 (19), -0.03184 (19), -0.03168 (19), -0.03162 (19), -0.03143 (19), -0.03136 (19), -0.03121 (19), -0.03120 (19), -0.03117 (19), -0.03114 (19), -0.03110 (19), -0.03108 (19), -0.03106 (19), -0.03105 (19), -0.03100 (19), -0.03095 (19), -0.03071 (19), 
Length of domains: 27469
Time: pickout 0.2244    decision 1.0630    set_bounds 0.8524    solve 2.3707    add 0.1351    
Accumulated time: pickout 0.5247    decision 2.3706    set_bounds 1.9223    solve 5.9340    add 0.6326    
Current (lb-rhs): -0.0331263542175293
60432 domains visited
Cumulative time: 11.515985488891602

BaB round 11
batch: 16384
splitting decisions: 
split level 0: [/input, 3401] [/input-8, 477] [/input, 3385] [/input-8, 501] [/input-8, 1053] [/input-8, 501] [/input-8, 2035] [/input-8, 501] [/input-8, 478] [/input-8, 477] 
pruning_in_iteration open status: False
ratio of positive domain = 3453 / 32768 = 0.105377197265625
pruning-in-iteration extra time: 0.00017976760864257812
Time: prepare 0.8823    bound 1.2993    transfer 0.1861    finalize 0.4738    func 2.8439    
Accumulated time: func 8.7652    prepare 2.6188    bound 4.5056    transfer 0.5453    finalize 1.0865    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03313 (19), -0.03264 (19), -0.03250 (19), -0.03201 (19), -0.03184 (19), -0.03162 (19), -0.03143 (19), -0.03136 (19), -0.03121 (19), -0.03120 (19), -0.03114 (19), -0.03108 (19), -0.03106 (19), -0.03105 (19), -0.03100 (19), -0.03095 (19), -0.03071 (19), -0.03064 (19), -0.03059 (19), -0.03058 (19), 
Length of domains: 40178
Time: pickout 0.2607    decision 1.9096    set_bounds 0.9564    solve 2.8500    add 0.1385    
Accumulated time: pickout 0.7853    decision 4.2803    set_bounds 2.8787    solve 8.7841    add 0.7711    
Current (lb-rhs): -0.0331263542175293
89525 domains visited
current_vram/total_varm: 41.6GB/99.9GB, batch_size increase to 32768
Cumulative time: 17.666574239730835

BaB round 12
batch: 32768
splitting decisions: 
split level 0: [/input-8, 500] [/input, 435] [/input-8, 478] [/input-8, 2016] [/input-8, 477] [/input-8, 597] [/input-8, 2045] [/input-8, 597] [/input-8, 477] [/input, 3385] 
pruning_in_iteration open status: False
ratio of positive domain = 8346 / 65536 = 0.127349853515625
pruning-in-iteration extra time: 0.00032782554626464844
Time: prepare 1.7729    bound 7.7452    transfer 0.3648    finalize 0.8691    func 10.7558    
Accumulated time: func 19.5211    prepare 4.3921    bound 12.2508    transfer 0.9101    finalize 1.9556    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03313 (19), -0.03264 (19), -0.03250 (19), -0.03201 (19), -0.03162 (19), -0.03143 (19), -0.03120 (19), -0.03114 (19), -0.03108 (19), -0.03106 (19), -0.03105 (19), -0.03100 (19), -0.03095 (19), -0.03071 (19), -0.03064 (19), -0.03058 (19), -0.03053 (19), -0.03052 (18), -0.03051 (19), -0.03047 (19), 
Length of domains: 64005
Time: pickout 0.5085    decision 3.6724    set_bounds 1.8243    solve 10.7675    add 0.1885    
Accumulated time: pickout 1.2938    decision 7.9526    set_bounds 4.7031    solve 19.5516    add 0.9596    
Current (lb-rhs): -0.0331263542175293
146120 domains visited
Cumulative time: 34.74122905731201

BaB round 13
batch: 32768
splitting decisions: 
split level 0: [/input, 3401] [/input-8, 124] [/input, 3385] [/input-8, 501] [/input-8, 597] [/input-8, 501] [/input, 2473] [/input-8, 477] [/input, 3401] [/input, 3401] 
pruning_in_iteration open status: False
ratio of positive domain = 11146 / 65536 = 0.170074462890625
pruning-in-iteration extra time: 0.00040435791015625
Time: prepare 1.8201    bound 7.7428    transfer 0.3633    finalize 0.9748    func 10.9051    
Accumulated time: func 30.4262    prepare 6.2128    bound 19.9936    transfer 1.2734    finalize 2.9304    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03313 (19), -0.03264 (19), -0.03250 (19), -0.03201 (19), -0.03162 (19), -0.03143 (19), -0.03120 (19), -0.03114 (19), -0.03108 (19), -0.03106 (19), -0.03105 (19), -0.03100 (19), -0.03095 (19), -0.03071 (19), -0.03064 (19), -0.03058 (19), -0.03053 (19), -0.03052 (18), -0.03051 (19), -0.03047 (19), 
Length of domains: 84997
Time: pickout 0.5423    decision 3.3973    set_bounds 1.9092    solve 10.9168    add 0.2918    
Accumulated time: pickout 1.8361    decision 11.3499    set_bounds 6.6122    solve 30.4684    add 1.2514    
Current (lb-rhs): -0.0331263542175293
199880 domains visited
Cumulative time: 51.88731551170349

BaB round 14
batch: 32768
splitting decisions: 
split level 0: [/input, 2473] [/input-8, 501] [/input-8, 478] [/input-8, 2035] [/input-8, 2045] [/input, 3385] [/input, 362] [/input-8, 2035] [/input-8, 597] [/input-8, 2035] 
pruning_in_iteration open status: True
ratio of positive domain = 15642 / 65536 = 0.238677978515625
pruning-in-iteration extra time: 0.0054666996002197266
Time: prepare 1.7900    bound 3.4043    transfer 0.3659    finalize 1.0850    func 6.6490    
Accumulated time: func 37.0751    prepare 8.0033    bound 23.3979    transfer 1.6394    finalize 4.0155    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03313 (19), -0.03264 (19), -0.03250 (19), -0.03201 (19), -0.03162 (19), -0.03143 (19), -0.03120 (19), -0.03114 (19), -0.03108 (19), -0.03106 (19), -0.03105 (19), -0.03100 (19), -0.03095 (19), -0.03071 (19), -0.03064 (19), -0.03058 (19), -0.03053 (19), -0.03052 (18), -0.03051 (19), -0.03047 (19), 
Length of domains: 102123
Time: pickout 0.5712    decision 3.9657    set_bounds 2.0800    solve 6.6621    add 0.1907    
Accumulated time: pickout 2.4073    decision 15.3156    set_bounds 8.6922    solve 37.1304    add 1.4421    
Current (lb-rhs): -0.0331263542175293
249774 domains visited
Cumulative time: 65.46562886238098

BaB round 15
batch: 32768
splitting decisions: 
split level 0: [/input-8, 2045] [/input-8, 597] [/input, 298] [/input-8, 2035] [/input, 362] [/input, 3385] [/input, 3385] [/input-8, 478] [/input-8, 598] [/input, 3385] 
pruning_in_iteration open status: True
ratio of positive domain = 19493 / 65536 = 0.2974395751953125
pruning-in-iteration extra time: 0.0064198970794677734
Time: prepare 1.8400    bound 2.7347    transfer 0.3636    finalize 0.4408    func 5.3822    
Accumulated time: func 42.4574    prepare 9.8438    bound 26.1326    transfer 2.0030    finalize 4.4563    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03313 (19), -0.03264 (19), -0.03250 (19), -0.03201 (19), -0.03162 (19), -0.03143 (19), -0.03120 (19), -0.03114 (19), -0.03108 (19), -0.03106 (19), -0.03105 (19), -0.03100 (19), -0.03095 (19), -0.03071 (19), -0.03064 (19), -0.03058 (19), -0.03053 (19), -0.03052 (18), -0.03051 (19), -0.03047 (19), 
Length of domains: 115398
Time: pickout 0.5951    decision 3.7308    set_bounds 2.2974    solve 6.2200    add 0.1697    
Accumulated time: pickout 3.0024    decision 19.0464    set_bounds 10.9897    solve 43.3504    add 1.6119    
Current (lb-rhs): -0.0331263542175293
295817 domains visited
Cumulative time: 78.66407203674316

BaB round 16
batch: 32768
splitting decisions: 
split level 0: [/input-8, 598] [/input-8, 478] [/input, 3385] [/input, 3385] [/input-8, 124] [/input, 3385] [/input, 435] [/input, 3385] [/input-8, 1970] [/input-8, 1970] 
pruning_in_iteration open status: True
ratio of positive domain = 24959 / 65536 = 0.3808441162109375
pruning-in-iteration extra time: 0.006354570388793945
Time: prepare 1.8668    bound 2.5484    transfer 0.3655    finalize 0.4406    func 5.2247    
Accumulated time: func 47.6820    prepare 11.7111    bound 28.6810    transfer 2.3685    finalize 4.8968    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03313 (19), -0.03264 (19), -0.03250 (19), -0.03201 (19), -0.03162 (19), -0.03143 (19), -0.03120 (19), -0.03114 (19), -0.03108 (19), -0.03106 (19), -0.03105 (19), -0.03100 (19), -0.03095 (19), -0.03071 (19), -0.03064 (19), -0.03058 (19), -0.03053 (19), -0.03052 (18), -0.03051 (19), -0.03047 (19), 
Length of domains: 123207
Time: pickout 0.6268    decision 3.4347    set_bounds 2.5451    solve 6.1806    add 0.1522    
Accumulated time: pickout 3.6291    decision 22.4811    set_bounds 13.5348    solve 49.5310    add 1.7641    
Current (lb-rhs): -0.0331263542175293
336394 domains visited
Cumulative time: 91.80575847625732

BaB round 17
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1970] [/input, 435] [/input-8, 598] [/input-8, 124] [/input-8, 598] [/input, 3163] [/input-8, 124] [/input-8, 598] [/input-8, 1970] [/input-8, 598] 
pruning_in_iteration open status: True
ratio of positive domain = 27402 / 65536 = 0.418121337890625
pruning-in-iteration extra time: 0.006114959716796875
Time: prepare 1.8804    bound 2.4546    transfer 0.3689    finalize 0.4670    func 5.1737    
Accumulated time: func 52.8558    prepare 13.5921    bound 31.1356    transfer 2.7373    finalize 5.3638    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03313 (19), -0.03264 (19), -0.03250 (19), -0.03201 (19), -0.03162 (19), -0.03143 (19), -0.03120 (19), -0.03114 (19), -0.03108 (19), -0.03106 (19), -0.03105 (19), -0.03100 (19), -0.03095 (19), -0.03071 (19), -0.03064 (19), -0.03058 (19), -0.03053 (19), -0.03052 (18), -0.03051 (19), -0.03047 (19), 
Length of domains: 128573
Time: pickout 0.6416    decision 3.4187    set_bounds 2.5965    solve 6.2389    add 0.2205    
Accumulated time: pickout 4.2707    decision 25.8998    set_bounds 16.1312    solve 55.7698    add 1.9846    
Current (lb-rhs): -0.0331263542175293
374528 domains visited
Cumulative time: 105.12234449386597

BaB round 18
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1970] [/input-8, 598] [/input, 362] [/input-8, 1970] [/input-8, 1970] [/input, 2215] [/input, 362] [/input-8, 2036] [/input, 298] [/input-8, 2036] 
pruning_in_iteration open status: True
ratio of positive domain = 27860 / 65536 = 0.42510986328125
pruning-in-iteration extra time: 0.006135702133178711
Time: prepare 1.8653    bound 2.4291    transfer 0.3700    finalize 0.4471    func 5.1147    
Accumulated time: func 57.9704    prepare 15.4579    bound 33.5647    transfer 3.1073    finalize 5.8109    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03313 (19), -0.03264 (19), -0.03250 (19), -0.03201 (19), -0.03162 (19), -0.03143 (19), -0.03120 (19), -0.03114 (19), -0.03108 (19), -0.03106 (19), -0.03105 (19), -0.03100 (19), -0.03095 (19), -0.03071 (19), -0.03064 (19), -0.03058 (19), -0.03053 (19), -0.03052 (18), -0.03051 (19), -0.03047 (19), 
Length of domains: 133481
Time: pickout 0.6589    decision 3.4369    set_bounds 2.7795    solve 5.1331    add 0.1398    
Accumulated time: pickout 4.9296    decision 29.3367    set_bounds 18.9107    solve 60.9029    add 2.1244    
Current (lb-rhs): -0.0331263542175293
412204 domains visited
Cumulative time: 117.47830557823181

BaB round 19
batch: 32768
splitting decisions: 
split level 0: [/input-8, 2036] [/input, 362] [/input-8, 1970] [/input-8, 1053] [/input-8, 1970] [/input, 362] [/input-8, 124] [/input, 2473] [/input, 298] [/input, 2215] 
pruning_in_iteration open status: True
ratio of positive domain = 30663 / 65536 = 0.4678802490234375
pruning-in-iteration extra time: 0.006224870681762695
Time: prepare 1.9207    bound 2.3307    transfer 0.3637    finalize 0.4613    func 5.0791    
Accumulated time: func 63.0495    prepare 17.3791    bound 35.8953    transfer 3.4710    finalize 6.2722    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03313 (19), -0.03264 (19), -0.03250 (19), -0.03201 (19), -0.03162 (19), -0.03143 (19), -0.03120 (19), -0.03114 (19), -0.03108 (19), -0.03106 (19), -0.03105 (19), -0.03100 (19), -0.03095 (19), -0.03071 (19), -0.03064 (19), -0.03058 (19), -0.03053 (19), -0.03052 (18), -0.03051 (19), -0.03047 (19), 
Length of domains: 135586
Time: pickout 0.6494    decision 4.6150    set_bounds 2.7459    solve 5.0990    add 0.1461    
Accumulated time: pickout 5.5790    decision 33.9518    set_bounds 21.6566    solve 66.0020    add 2.2705    
Current (lb-rhs): -0.0331263542175293
447077 domains visited
Cumulative time: 130.96494817733765

BaB round 20
batch: 32768
splitting decisions: 
split level 0: [/input-8, 2036] [/input-8, 1970] [/input-8, 138] [/input, 2215] [/input, 2215] [/input-8, 138] [/input-8, 138] [/input, 3401] [/input-8, 2036] [/input, 2215] 
pruning_in_iteration open status: True
ratio of positive domain = 35328 / 65536 = 0.5390625
pruning-in-iteration extra time: 0.006201982498168945
Time: prepare 1.8806    bound 2.1501    transfer 0.3699    finalize 0.4825    func 4.8855    
Accumulated time: func 67.9351    prepare 19.2602    bound 38.0454    transfer 3.8409    finalize 6.7546    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03313 (19), -0.03264 (19), -0.03250 (19), -0.03201 (19), -0.03162 (19), -0.03143 (19), -0.03120 (19), -0.03114 (19), -0.03108 (19), -0.03106 (19), -0.03105 (19), -0.03100 (19), -0.03095 (19), -0.03071 (19), -0.03064 (19), -0.03058 (19), -0.03053 (19), -0.03052 (18), -0.03051 (19), -0.03047 (19), 
Length of domains: 133026
Time: pickout 0.6595    decision 4.1706    set_bounds 2.7846    solve 4.9043    add 0.1344    
Accumulated time: pickout 6.2385    decision 38.1223    set_bounds 24.4412    solve 70.9063    add 2.4049    
Current (lb-rhs): -0.0331263542175293
477285 domains visited
Cumulative time: 143.89192414283752

BaB round 21
batch: 32768
splitting decisions: 
split level 0: [/input, 2215] [/input, 2215] [/input, 3211] [/input, 362] [/input, 2215] [/input, 298] [/input-8, 138] [/input, 298] [/input-8, 2045] [/input-8, 2036] 
pruning_in_iteration open status: True
ratio of positive domain = 36162 / 65536 = 0.551788330078125
pruning-in-iteration extra time: 0.006090402603149414
Time: prepare 1.8832    bound 2.1068    transfer 0.3617    finalize 1.5930    func 5.9493    
Accumulated time: func 73.8843    prepare 21.1438    bound 40.1522    transfer 4.2027    finalize 8.3476    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03313 (19), -0.03264 (19), -0.03250 (19), -0.03201 (19), -0.03162 (19), -0.03143 (19), -0.03120 (19), -0.03114 (19), -0.03108 (19), -0.03106 (19), -0.03105 (19), -0.03100 (19), -0.03095 (19), -0.03071 (19), -0.03064 (19), -0.03058 (19), -0.03053 (19), -0.03052 (18), -0.03051 (19), -0.03047 (19), 
Length of domains: 129632
Time: pickout 0.6807    decision 4.2152    set_bounds 1.6599    solve 5.9643    add 0.1100    
Accumulated time: pickout 6.9192    decision 42.3376    set_bounds 26.1011    solve 76.8706    add 2.5149    
Current (lb-rhs): -0.0331263542175293
506659 domains visited
Cumulative time: 156.76112055778503

BaB round 22
batch: 32768
splitting decisions: 
split level 0: [/input-8, 2016] [/input, 3385] [/input, 298] [/input-8, 2016] [/input, 2215] [/input, 2215] [/input, 2215] [/input-8, 1970] [/input, 2215] [/input, 298] 
pruning_in_iteration open status: True
ratio of positive domain = 33306 / 65536 = 0.508209228515625
pruning-in-iteration extra time: 0.005994081497192383
Time: prepare 1.9121    bound 2.2077    transfer 0.3685    finalize 1.6549    func 6.1467    
Accumulated time: func 80.0310    prepare 23.0564    bound 42.3599    transfer 4.5712    finalize 10.0025    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03313 (19), -0.03264 (19), -0.03250 (19), -0.03201 (19), -0.03162 (19), -0.03143 (19), -0.03120 (19), -0.03114 (19), -0.03108 (19), -0.03106 (19), -0.03105 (19), -0.03100 (19), -0.03095 (19), -0.03071 (19), -0.03064 (19), -0.03058 (19), -0.03053 (19), -0.03052 (18), -0.03051 (19), -0.03047 (19), 
Length of domains: 129094
Time: pickout 0.6790    decision 4.2316    set_bounds 1.6314    solve 6.1628    add 0.1501    
Accumulated time: pickout 7.5982    decision 46.5691    set_bounds 27.7325    solve 83.0334    add 2.6650    
Current (lb-rhs): -0.0331263542175293
538889 domains visited
Cumulative time: 169.8538944721222

BaB round 23
batch: 32768
splitting decisions: 
split level 0: [/input-8, 2036] [/input-8, 2036] [/input, 2473] [/input-8, 2036] [/input-8, 2016] [/input, 2215] [/input-8, 2016] [/input-8, 2016] [/input, 2215] [/input, 298] 
pruning_in_iteration open status: True
ratio of positive domain = 32398 / 65536 = 0.494354248046875
pruning-in-iteration extra time: 0.006218671798706055
Time: prepare 1.9313    bound 2.2482    transfer 0.3617    finalize 1.6535    func 6.1977    
Accumulated time: func 86.2287    prepare 24.9881    bound 44.6081    transfer 4.9328    finalize 11.6560    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03313 (19), -0.03264 (19), -0.03250 (19), -0.03201 (19), -0.03162 (19), -0.03143 (19), -0.03120 (19), -0.03114 (19), -0.03108 (19), -0.03106 (19), -0.03105 (19), -0.03100 (19), -0.03095 (19), -0.03071 (19), -0.03064 (19), -0.03058 (19), -0.03053 (19), -0.03052 (18), -0.03051 (19), -0.03047 (19), 
Length of domains: 129464
Time: pickout 0.6916    decision 4.1911    set_bounds 1.6237    solve 6.2143    add 0.1536    
Accumulated time: pickout 8.2899    decision 50.7603    set_bounds 29.3562    solve 89.2477    add 2.8186    
Current (lb-rhs): -0.0331263542175293
572027 domains visited
Cumulative time: 182.96484065055847

BaB round 24
batch: 32768
splitting decisions: 
split level 0: [/input, 3163] [/input-8, 2036] [/input-8, 2036] [/input-8, 1970] [/input-8, 1970] [/input-8, 2036] [/input-8, 138] [/input, 3401] [/input-8, 2036] [/input-8, 2036] 
pruning_in_iteration open status: True
ratio of positive domain = 32214 / 65536 = 0.491546630859375
pruning-in-iteration extra time: 0.006289243698120117
Time: prepare 1.9148    bound 2.2508    transfer 0.3597    finalize 1.7097    func 6.2384    
Accumulated time: func 92.4671    prepare 26.9034    bound 46.8588    transfer 5.2926    finalize 13.3657    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03313 (19), -0.03264 (19), -0.03250 (19), -0.03201 (19), -0.03162 (19), -0.03143 (19), -0.03120 (19), -0.03114 (19), -0.03108 (19), -0.03106 (19), -0.03105 (19), -0.03100 (19), -0.03095 (19), -0.03071 (19), -0.03064 (19), -0.03058 (19), -0.03053 (19), -0.03052 (18), -0.03051 (19), -0.03047 (19), 
Length of domains: 130018
Time: pickout 0.7152    decision 3.4470    set_bounds 2.8213    solve 6.2549    add 0.1326    
Accumulated time: pickout 9.0051    decision 54.2073    set_bounds 32.1775    solve 95.5026    add 2.9512    
Current (lb-rhs): -0.0331263542175293
605349 domains visited
Cumulative time: 196.59631633758545

BaB round 25
batch: 32768
splitting decisions: 
split level 0: [/input-8, 500] [/input-8, 500] [/input, 3401] [/input-8, 500] [/input-8, 500] [/input, 1337] [/input-8, 500] [/input, 3401] [/input-8, 500] [/input, 3163] 
pruning_in_iteration open status: True
ratio of positive domain = 33411 / 65536 = 0.5098114013671875
pruning-in-iteration extra time: 0.006160736083984375
Time: prepare 1.8938    bound 2.2039    transfer 0.3632    finalize 0.4771    func 4.9429    
Accumulated time: func 97.4100    prepare 28.7978    bound 49.0627    transfer 5.6558    finalize 13.8429    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03313 (19), -0.03264 (19), -0.03250 (19), -0.03201 (19), -0.03162 (19), -0.03143 (19), -0.03120 (19), -0.03114 (19), -0.03108 (19), -0.03106 (19), -0.03105 (19), -0.03100 (19), -0.03095 (19), -0.03071 (19), -0.03064 (19), -0.03058 (19), -0.03053 (19), -0.03052 (18), -0.03051 (19), -0.03047 (19), 
Length of domains: 129375
Time: pickout 0.7080    decision 3.4458    set_bounds 2.8848    solve 4.9639    add 0.1193    
Accumulated time: pickout 9.7131    decision 57.6531    set_bounds 35.0623    solve 100.4665    add 3.0705    
Current (lb-rhs): -0.0331263542175293
637474 domains visited
Time out!!!!!!!!
Result: unknown in 211.6443 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 196, vnnlib ID: 196 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-7.34187508, -9.73769855, -4.95557117, -4.07531166, -5.10799456,
         -4.86587954, -4.00358391, -5.81644583, -6.91936016, -7.77230597]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [641]; unstable size 641; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 325, 1, 641] with unstable size 324 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 641] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 641] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [324]; unstable size 324; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 324] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 324] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.40970707,  2.98208570, -0.34637284, -0.05800235,  0.34521282,
         -1.21884346,  0.55216157,  0.57143247,  1.41924047]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-7.34187508, -9.73769855, -4.95557117, -4.07531166, -5.10799456,
         -4.86587954, -4.00358391, -5.81644583, -6.91936016, -7.77230597]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.34187365, -9.73769760, -4.95557117, -4.07531118, -5.10799408,
          -4.86587954, -4.00358343, -5.81644535, -6.91935921, -7.77230597],
         [-7.34187365, -9.73769760, -4.95557117, -4.07531118, -5.10799408,
          -4.86587954, -4.00358343, -5.81644535, -6.91935921, -7.77230597]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.88025999,  1.03268290, -0.07172775]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.51904768,  0.56666672,  0.51904768,  ...,  0.69365084,
             0.78888893,  0.56666672],
           [ 0.55079371,  0.64603180,  0.67777783,  ...,  0.74126989,
             0.69365084,  0.61428577],
           [ 0.55079371,  0.50317466,  0.58253974,  ...,  0.77301592,
             0.74126989,  0.67777783],
           ...,
           [-1.40158725, -1.52857137, -1.56031740,  ...,  0.61428577,
             0.74126989,  0.64603180],
           [-1.51269829, -1.32222211, -1.54444432,  ...,  0.66190481,
             0.70952386,  0.61428577],
           [-1.59206343, -1.38571417, -1.24285710,  ...,  0.64603180,
             0.59841275,  0.70952386]],

          [[ 0.67632860,  0.54750413,  0.08051541,  ...,  0.78904998,
             0.88566834,  0.66022551],
           [ 0.80515307,  0.83735919,  0.54750413,  ...,  0.85346222,
             0.80515307,  0.70853472],
           [ 0.85346222,  0.78904998,  0.64412248,  ...,  0.86956531,
             0.88566834,  0.78904998],
           ...,
           [-1.46537840, -1.61030602, -1.67471826,  ...,  0.69243163,
             0.82125610,  0.72463775],
           [-1.61030602, -1.43317223, -1.64251208,  ...,  0.74074084,
             0.78904998,  0.69243163],
           [-1.73913050, -1.49758446, -1.30434775,  ...,  0.72463775,
             0.67632860,  0.78904998]],

          [[ 0.90104967,  0.72113961,  0.27136448,  ...,  1.03598225,
             1.17091501,  0.93103468],
           [ 1.00599718,  1.00599718,  0.81109464,  ...,  0.99100471,
             1.08095968,  1.03598225],
           [ 1.05097473,  1.00599718,  0.94602716,  ...,  0.96101969,
             1.12593722,  1.11094475],
           ...,
           [-1.27286363, -1.39280367, -1.43778121,  ...,  1.00599718,
             1.12593722,  1.03598225],
           [-1.39280367, -1.22788620, -1.42278874,  ...,  1.05097473,
             1.09595215,  1.00599718],
           [-1.49775124, -1.28785622, -1.12293863,  ...,  1.03598225,
             0.99100471,  1.09595215]]],


         [[[ 0.51904768,  0.56666672,  0.51904768,  ...,  0.69365084,
             0.78888893,  0.56666672],
           [ 0.55079371,  0.64603180,  0.67777783,  ...,  0.74126989,
             0.69365084,  0.61428577],
           [ 0.55079371,  0.50317466,  0.58253974,  ...,  0.77301592,
             0.74126989,  0.67777783],
           ...,
           [-1.40158725, -1.52857137, -1.56031740,  ...,  0.61428577,
             0.74126989,  0.64603180],
           [-1.51269829, -1.32222211, -1.54444432,  ...,  0.66190481,
             0.70952386,  0.61428577],
           [-1.59206343, -1.38571417, -1.24285710,  ...,  0.64603180,
             0.59841275,  0.70952386]],

          [[ 0.67632860,  0.54750413,  0.08051541,  ...,  0.78904998,
             0.88566834,  0.66022551],
           [ 0.80515307,  0.83735919,  0.54750413,  ...,  0.85346222,
             0.80515307,  0.70853472],
           [ 0.85346222,  0.78904998,  0.64412248,  ...,  0.86956531,
             0.88566834,  0.78904998],
           ...,
           [-1.46537840, -1.61030602, -1.67471826,  ...,  0.69243163,
             0.82125610,  0.72463775],
           [-1.61030602, -1.43317223, -1.64251208,  ...,  0.74074084,
             0.78904998,  0.69243163],
           [-1.73913050, -1.49758446, -1.30434775,  ...,  0.72463775,
             0.67632860,  0.78904998]],

          [[ 0.90104967,  0.72113961,  0.27136448,  ...,  1.03598225,
             1.17091501,  0.93103468],
           [ 1.00599718,  1.00599718,  0.81109464,  ...,  0.99100471,
             1.08095968,  1.03598225],
           [ 1.05097473,  1.00599718,  0.94602716,  ...,  0.96101969,
             1.12593722,  1.11094475],
           ...,
           [-1.27286363, -1.39280367, -1.43778121,  ...,  1.00599718,
             1.12593722,  1.03598225],
           [-1.39280367, -1.22788620, -1.42278874,  ...,  1.05097473,
             1.09595215,  1.00599718],
           [-1.49775124, -1.28785622, -1.12293863,  ...,  1.03598225,
             0.99100471,  1.09595215]]],


         [[[ 0.51904768,  0.56666672,  0.51904768,  ...,  0.69365084,
             0.78888893,  0.56666672],
           [ 0.55079371,  0.64603180,  0.67777783,  ...,  0.74126989,
             0.69365084,  0.61428577],
           [ 0.55079371,  0.50317466,  0.58253974,  ...,  0.77301592,
             0.74126989,  0.67777783],
           ...,
           [-1.40158725, -1.52857137, -1.56031740,  ...,  0.61428577,
             0.74126989,  0.64603180],
           [-1.51269829, -1.32222211, -1.54444432,  ...,  0.66190481,
             0.70952386,  0.61428577],
           [-1.59206343, -1.38571417, -1.24285710,  ...,  0.64603180,
             0.59841275,  0.70952386]],

          [[ 0.67632860,  0.54750413,  0.08051541,  ...,  0.78904998,
             0.88566834,  0.66022551],
           [ 0.80515307,  0.83735919,  0.54750413,  ...,  0.85346222,
             0.80515307,  0.70853472],
           [ 0.85346222,  0.78904998,  0.64412248,  ...,  0.86956531,
             0.88566834,  0.78904998],
           ...,
           [-1.46537840, -1.61030602, -1.67471826,  ...,  0.69243163,
             0.82125610,  0.72463775],
           [-1.61030602, -1.43317223, -1.64251208,  ...,  0.74074084,
             0.78904998,  0.69243163],
           [-1.73913050, -1.49758446, -1.30434775,  ...,  0.72463775,
             0.67632860,  0.78904998]],

          [[ 0.90104967,  0.72113961,  0.27136448,  ...,  1.03598225,
             1.17091501,  0.93103468],
           [ 1.00599718,  1.00599718,  0.81109464,  ...,  0.99100471,
             1.08095968,  1.03598225],
           [ 1.05097473,  1.00599718,  0.94602716,  ...,  0.96101969,
             1.12593722,  1.11094475],
           ...,
           [-1.27286363, -1.39280367, -1.43778121,  ...,  1.00599718,
             1.12593722,  1.03598225],
           [-1.39280367, -1.22788620, -1.42278874,  ...,  1.05097473,
             1.09595215,  1.00599718],
           [-1.49775124, -1.28785622, -1.12293863,  ...,  1.03598225,
             0.99100471,  1.09595215]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0835 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 197, vnnlib ID: 197 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -5.18270683, -12.47354031,  -6.10897255, -10.00190735,  -9.06741428,
         -10.42314816, -10.68535328, -12.50943470,  -6.97327232, -13.13700008]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [464]; unstable size 464; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 147, 1, 464] with unstable size 146 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 464] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 464] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [146]; unstable size 146; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 146] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 146] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.42323971, 0.28036880, 3.85285234, 3.13763380, 4.20778513, 4.47631264,
         6.43918276, 0.91171348, 6.93784523]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0694 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 198, vnnlib ID: 198 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.51362133, -15.75713921, -11.03450871, -11.39007473, -12.12888622,
         -11.76603127, -13.25793362, -13.95927143, -13.38565063, -14.89714527]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [766]; unstable size 766; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 174, 1, 766] with unstable size 173 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 766] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 766] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [173]; unstable size 173; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 173] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 173] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.95912123, -0.24805665, -0.27043331,  0.63014293, -0.09771180,
          1.73836088,  2.00863838,  1.75885749,  3.03999782]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.51362133, -15.75713921, -11.03450871, -11.39007473, -12.12888622,
         -11.76603127, -13.25793362, -13.95927143, -13.38565063, -14.89714527]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.76it/s]100%|██████████| 1/1 [00:00<00:00,  8.75it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.09731483, -16.41419601, -11.23532581, -11.70133877, -12.42668819,
          -12.06754589, -13.56177235, -14.30442333, -13.89138317, -15.46604633],
         [-11.09731483, -16.41419601, -11.23532581, -11.70133877, -12.42668819,
          -12.06754589, -13.56177235, -14.30442333, -13.89138317, -15.46604633]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.13801098, 0.60402393, 0.97023106]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1173 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 13.11574935913086
alpha/beta optimization time: 1.148184061050415
initial alpha-crown bounds: tensor([[ 4.07125187, -0.22706568, -0.22163147,  0.67958438, -0.04805142,
          1.79753435,  2.07503772,  1.87824118,  3.11084890]], device='cuda:0')
Number of class (without rhs): 3 ; Worst class: (+ rhs) -0.22706568241119385
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.66771149635315
Verifying property 0 with 1 instances.
##### Instance 198 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.07125186920166.

Properties batch 1, size 1
Remaining timeout: 198.5030324459076
Verifying property 1 with 1 instances.
##### Instance 198 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.22706568]], device='cuda:0') need to verify.
Model prediction is: tensor([-10.51362133, -15.75713921, -11.03450871, -11.39007473, -12.12888622,
        -11.76603127, -13.25793362, -13.95927143, -13.38565063, -14.89714527],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.22706568]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 766
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 172
Node /15 input 0: size torch.Size([100]) unstable 14
-----------------
# of unstable neurons: 952
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 26] 
split level 1: [/input-12, 41] 
split level 2: [/input-12, 25] 
split level 3: [/input-12, 11] 
split level 4: [/input-8, 1628] 
split level 5: [/input-8, 1437] 
split level 6: [/input-8, 1619] 
split level 7: [/input-8, 1357] 
pruning_in_iteration open status: True
ratio of positive domain = 179 / 256 = 0.69921875
pruning-in-iteration extra time: 0.00468754768371582
Time: prepare 0.0031    bound 0.1619    transfer 0.0019    finalize 0.0018    func 0.1689    
Accumulated time: func 0.1689    prepare 0.0036    bound 0.1619    transfer 0.0019    finalize 0.0018    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09501 (8), -0.09289 (8), -0.09093 (8), -0.08883 (8), -0.08481 (8), -0.08309 (8), -0.08244 (8), -0.08098 (8), -0.08032 (8), -0.07899 (8), -0.07789 (8), -0.07692 (8), -0.07261 (8), -0.07022 (8), -0.06813 (8), -0.06811 (8), -0.06601 (8), -0.06574 (8), -0.06448 (8), -0.06237 (8), 
Length of domains: 77
Time: pickout 0.0004    decision 0.0251    set_bounds 0.0177    solve 0.1689    add 0.0443    
Accumulated time: pickout 0.0004    decision 0.0251    set_bounds 0.0177    solve 0.1689    add 0.0443    
Current (lb-rhs): -0.0950082540512085
77 domains visited
Cumulative time: 0.2661280632019043

BaB round 2
batch: 77
splitting decisions: 
split level 0: [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] 
split level 1: [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1500] [/input-8, 1366] 
pruning_in_iteration open status: True
ratio of positive domain = 172 / 308 = 0.5584415584415585
pruning-in-iteration extra time: 0.004665374755859375
Time: prepare 0.0061    bound 0.1440    transfer 0.0014    finalize 0.0020    func 0.1535    
Accumulated time: func 0.3224    prepare 0.0098    bound 0.3060    transfer 0.0033    finalize 0.0038    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09060 (10), -0.08797 (10), -0.08632 (10), -0.08384 (10), -0.08158 (10), -0.07918 (10), -0.07822 (10), -0.07751 (10), -0.07729 (10), -0.07654 (10), -0.07613 (10), -0.07481 (10), -0.07370 (10), -0.07365 (10), -0.07291 (10), -0.07262 (10), -0.07201 (10), -0.06999 (10), -0.06938 (10), -0.06877 (10), 
Length of domains: 136
Time: pickout 0.0021    decision 0.0217    set_bounds 0.0117    solve 0.1536    add 0.0022    
Accumulated time: pickout 0.0024    decision 0.0468    set_bounds 0.0294    solve 0.3225    add 0.0465    
Current (lb-rhs): -0.09059500694274902
213 domains visited
Cumulative time: 0.4583420753479004

BaB round 3
batch: 136
splitting decisions: 
split level 0: [/input-8, 1500] [/input-8, 1500] [/input-8, 1044] [/input-8, 1500] [/input-8, 1500] [/input-8, 1500] [/input-8, 1044] [/input-8, 1500] [/input-8, 1500] [/input-8, 1500] 
pruning_in_iteration open status: False
ratio of positive domain = 14 / 272 = 0.05147058823529416
pruning-in-iteration extra time: 5.221366882324219e-05
Time: prepare 0.0054    bound 0.0982    transfer 0.0011    finalize 0.0019    func 0.1066    
Accumulated time: func 0.4290    prepare 0.0154    bound 0.4042    transfer 0.0044    finalize 0.0058    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08832 (11), -0.08567 (11), -0.08398 (11), -0.08151 (11), -0.07924 (11), -0.07719 (11), -0.07595 (11), -0.07526 (11), -0.07514 (11), -0.07400 (11), -0.07387 (11), -0.07271 (11), -0.07150 (11), -0.07124 (11), -0.07100 (11), -0.07088 (11), -0.06993 (11), -0.06966 (11), -0.06886 (11), -0.06772 (11), 
Length of domains: 256
Time: pickout 0.0024    decision 0.0224    set_bounds 0.0061    solve 0.1067    add 0.0014    
Accumulated time: pickout 0.0048    decision 0.0692    set_bounds 0.0355    solve 0.4292    add 0.0480    
Current (lb-rhs): -0.08832144737243652
469 domains visited
Cumulative time: 0.5976529121398926

BaB round 4
batch: 256
splitting decisions: 
split level 0: [/input-8, 802] [/input-8, 1500] [/input-8, 1618] [/input-8, 802] [/input-8, 1618] [/input-8, 1500] [/input-8, 1618] [/input-8, 802] [/input-8, 1347] [/input-8, 1500] 
pruning_in_iteration open status: False
ratio of positive domain = 32 / 512 = 0.0625
pruning-in-iteration extra time: 5.221366882324219e-05
Time: prepare 0.0097    bound 0.1113    transfer 0.0015    finalize 0.0024    func 0.1250    
Accumulated time: func 0.5540    prepare 0.0252    bound 0.5155    transfer 0.0059    finalize 0.0082    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08536 (12), -0.08366 (12), -0.08102 (12), -0.08015 (12), -0.07936 (12), -0.07717 (12), -0.07584 (12), -0.07496 (12), -0.07328 (12), -0.07311 (12), -0.07289 (12), -0.07146 (12), -0.07093 (12), -0.07086 (12), -0.07055 (12), -0.06962 (12), -0.06895 (12), -0.06874 (12), -0.06798 (12), -0.06766 (12), 
Length of domains: 478
Time: pickout 0.0034    decision 0.0230    set_bounds 0.0110    solve 0.1251    add 0.0030    
Accumulated time: pickout 0.0082    decision 0.0922    set_bounds 0.0464    solve 0.5543    add 0.0510    
Current (lb-rhs): -0.08536243438720703
947 domains visited
Cumulative time: 0.7639274597167969

BaB round 5
batch: 478
splitting decisions: 
split level 0: [/input-8, 1610] [/input-8, 1610] [/input-8, 1347] [/input-8, 1347] [/input-8, 1610] [/input-8, 1610] [/input-8, 1610] [/input-8, 1610] [/input-8, 1347] [/input-8, 1625] 
pruning_in_iteration open status: False
ratio of positive domain = 49 / 956 = 0.05125523012552302
pruning-in-iteration extra time: 5.412101745605469e-05
Time: prepare 0.0229    bound 0.1105    transfer 0.0038    finalize 0.0057    func 0.1429    
Accumulated time: func 0.6969    prepare 0.0483    bound 0.6259    transfer 0.0097    finalize 0.0139    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08515 (13), -0.08346 (13), -0.07853 (13), -0.07759 (13), -0.07726 (13), -0.07663 (13), -0.07641 (13), -0.07536 (13), -0.07350 (13), -0.07350 (13), -0.07331 (13), -0.07301 (13), -0.07205 (13), -0.07106 (13), -0.07059 (13), -0.07013 (13), -0.06937 (13), -0.06929 (13), -0.06915 (13), -0.06906 (13), 
Length of domains: 903
Time: pickout 0.0069    decision 0.0412    set_bounds 0.0203    solve 0.1431    add 0.0049    
Accumulated time: pickout 0.0151    decision 0.1334    set_bounds 0.0668    solve 0.6974    add 0.0560    
Current (lb-rhs): -0.08515369892120361
1850 domains visited
Cumulative time: 0.9816713333129883

BaB round 6
batch: 903
splitting decisions: 
split level 0: [/input-8, 802] [/input-8, 1625] [/input-8, 1618] [/input-8, 1044] [/input-8, 1618] [/input-8, 1044] [/input-8, 667] [/input-8, 1618] [/input-8, 1618] [/input-8, 1044] 
pruning_in_iteration open status: False
ratio of positive domain = 219 / 1806 = 0.12126245847176076
pruning-in-iteration extra time: 5.269050598144531e-05
Time: prepare 0.0400    bound 0.1229    transfer 0.0081    finalize 0.0134    func 0.1846    
Accumulated time: func 0.8816    prepare 0.0885    bound 0.7489    transfer 0.0178    finalize 0.0273    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08265 (14), -0.08145 (14), -0.07984 (14), -0.07983 (14), -0.07580 (14), -0.07452 (14), -0.07400 (14), -0.07384 (14), -0.07363 (14), -0.07362 (14), -0.07326 (14), -0.07302 (14), -0.07295 (14), -0.07285 (14), -0.07264 (14), -0.07208 (14), -0.07120 (14), -0.07057 (14), -0.07055 (14), -0.07004 (14), 
Length of domains: 1582
Time: pickout 0.0161    decision 0.0604    set_bounds 0.0404    solve 0.1858    add 0.0100    
Accumulated time: pickout 0.0312    decision 0.1937    set_bounds 0.1072    solve 0.8832    add 0.0660    
Current (lb-rhs): -0.08265197277069092
3432 domains visited
Cumulative time: 1.2969436645507812

BaB round 7
batch: 1582
splitting decisions: 
split level 0: [/input-8, 1610] [/input-8, 802] [/input-8, 1625] [/input-8, 680] [/input-8, 1625] [/input, 2504] [/input-8, 1610] [/input-8, 802] [/input-8, 1625] [/input-8, 1346] 
pruning_in_iteration open status: False
ratio of positive domain = 480 / 3164 = 0.1517067003792667
pruning-in-iteration extra time: 5.650520324707031e-05
Time: prepare 0.0696    bound 0.1737    transfer 0.0188    finalize 0.1687    func 0.4312    
Accumulated time: func 1.3127    prepare 0.1584    bound 0.9226    transfer 0.0366    finalize 0.1960    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07912 (15), -0.07893 (15), -0.07792 (15), -0.07773 (15), -0.07739 (15), -0.07690 (15), -0.07631 (15), -0.07595 (15), -0.07386 (15), -0.07254 (15), -0.07203 (15), -0.07187 (15), -0.07168 (15), -0.07166 (15), -0.07106 (15), -0.07099 (15), -0.07089 (15), -0.07075 (15), -0.07067 (15), -0.07012 (15), 
Length of domains: 2672
Time: pickout 0.0221    decision 0.1034    set_bounds 0.0670    solve 0.4323    add 0.0140    
Accumulated time: pickout 0.0533    decision 0.2971    set_bounds 0.1741    solve 1.3155    add 0.0800    
Current (lb-rhs): -0.07911717891693115
6104 domains visited
Cumulative time: 1.9417660236358643

BaB round 8
batch: 2672
splitting decisions: 
split level 0: [/input-8, 86] [/input-8, 680] [/input-8, 86] [/input-12, 45] [/input-8, 641] [/input-8, 680] [/input-8, 680] [/input, 2228] [/input-12, 45] [/input-8, 680] 
pruning_in_iteration open status: True
ratio of positive domain = 1228 / 5344 = 0.22979041916167664
pruning-in-iteration extra time: 0.0047512054443359375
Time: prepare 0.1200    bound 0.3393    transfer 0.0252    finalize 0.0368    func 0.5219    
Accumulated time: func 1.8346    prepare 0.2787    bound 1.2619    transfer 0.0617    finalize 0.2327    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07717 (16), -0.07699 (16), -0.07597 (16), -0.07577 (16), -0.07544 (16), -0.07493 (16), -0.07435 (16), -0.07396 (16), -0.07183 (16), -0.07168 (16), -0.07149 (16), -0.07087 (16), -0.07079 (16), -0.07047 (16), -0.07025 (16), -0.07019 (16), -0.06992 (16), -0.06935 (16), -0.06906 (16), -0.06904 (16), 
Length of domains: 4116
Time: pickout 0.0362    decision 0.1657    set_bounds 0.1165    solve 0.5232    add 0.0212    
Accumulated time: pickout 0.0894    decision 0.4629    set_bounds 0.2906    solve 1.8388    add 0.1012    
Current (lb-rhs): -0.07717037200927734
10220 domains visited
Cumulative time: 2.8167474269866943

BaB round 9
batch: 4096
splitting decisions: 
split level 0: [/input-12, 45] [/input-8, 1134] [/input-12, 45] [/input-8, 1609] [/input-8, 1134] [/input-8, 1609] [/input-8, 1134] [/input-8, 1609] [/input-8, 86] [/input-8, 1609] 
pruning_in_iteration open status: True
ratio of positive domain = 1716 / 8192 = 0.20947265625
pruning-in-iteration extra time: 0.0011129379272460938
Time: prepare 0.1980    bound 0.3745    transfer 0.0464    finalize 0.2032    func 0.8232    
Accumulated time: func 2.6578    prepare 0.4769    bound 1.6364    transfer 0.1081    finalize 0.4359    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07492 (17), -0.07407 (17), -0.07352 (17), -0.07350 (17), -0.07320 (17), -0.07313 (17), -0.07305 (17), -0.07268 (17), -0.07211 (17), -0.07210 (17), -0.07210 (17), -0.07179 (17), -0.07171 (17), -0.07128 (17), -0.07070 (17), -0.07031 (17), -0.06966 (17), -0.06923 (17), -0.06875 (17), -0.06860 (17), 
Length of domains: 6496
Time: pickout 0.0582    decision 0.4091    set_bounds 0.1760    solve 0.8249    add 0.0276    
Accumulated time: pickout 0.1476    decision 0.8719    set_bounds 0.4666    solve 2.6637    add 0.1288    
Current (lb-rhs): -0.07491755485534668
16696 domains visited
current_vram/total_varm: 27.5GB/99.9GB, batch_size increase to 8192
Cumulative time: 4.332615852355957

BaB round 10
batch: 6496
splitting decisions: 
split level 0: [/input-12, 45] [/input-8, 1609] [/input-8, 86] [/input-12, 45] [/input-8, 1609] [/input-8, 1609] [/input-8, 86] [/input-8, 1609] [/input-8, 641] [/input-8, 680] 
pruning_in_iteration open status: False
ratio of positive domain = 1814 / 12992 = 0.13962438423645318
pruning-in-iteration extra time: 0.00011467933654785156
Time: prepare 0.3244    bound 0.5546    transfer 0.0733    finalize 0.0925    func 1.0468    
Accumulated time: func 3.7046    prepare 0.8016    bound 2.1910    transfer 0.1815    finalize 0.5284    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07310 (18), -0.07226 (18), -0.07170 (18), -0.07169 (18), -0.07138 (18), -0.07129 (18), -0.07123 (18), -0.07086 (18), -0.07029 (18), -0.07029 (18), -0.07025 (18), -0.07013 (18), -0.06997 (18), -0.06989 (18), -0.06945 (18), -0.06929 (18), -0.06888 (18), -0.06873 (18), -0.06873 (18), -0.06849 (18), 
Length of domains: 11137
Time: pickout 0.0937    decision 0.3787    set_bounds 0.4006    solve 1.0497    add 0.0406    
Accumulated time: pickout 0.2413    decision 1.2506    set_bounds 0.8672    solve 3.7134    add 0.1694    
Current (lb-rhs): -0.07310140132904053
27833 domains visited
Cumulative time: 6.318429231643677

BaB round 11
batch: 8192
splitting decisions: 
split level 0: [/input, 2503] [/input-8, 680] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-8, 1618] [/input, 2503] [/input-8, 680] [/input-12, 45] [/input-8, 1618] 
pruning_in_iteration open status: True
ratio of positive domain = 3828 / 16384 = 0.233642578125
pruning-in-iteration extra time: 0.0050280094146728516
Time: prepare 0.4383    bound 0.6637    transfer 0.0922    finalize 0.1092    func 1.3056    
Accumulated time: func 5.0102    prepare 1.2403    bound 2.8547    transfer 0.2737    finalize 0.6376    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07001 (19), -0.06990 (19), -0.06974 (19), -0.06929 (18), -0.06905 (19), -0.06897 (19), -0.06873 (18), -0.06860 (19), -0.06853 (19), -0.06848 (19), -0.06832 (19), -0.06829 (19), -0.06827 (18), -0.06826 (19), -0.06817 (19), -0.06800 (19), -0.06800 (19), -0.06764 (19), -0.06762 (19), -0.06757 (19), 
Length of domains: 15501
Time: pickout 0.1252    decision 0.6777    set_bounds 0.5016    solve 1.3091    add 0.0456    
Accumulated time: pickout 0.3664    decision 1.9283    set_bounds 1.3689    solve 5.0225    add 0.2150    
Current (lb-rhs): -0.0700070858001709
40389 domains visited
current_vram/total_varm: 37.7GB/99.9GB, batch_size increase to 16384
Cumulative time: 9.01423454284668

BaB round 12
batch: 15501
splitting decisions: 
split level 0: [/input-8, 680] [/input-8, 1134] [/input-8, 641] [/input-8, 680] [/input-8, 1134] [/input-8, 641] [/input-8, 1609] [/input-8, 641] [/input-8, 680] [/input-8, 1134] 
pruning_in_iteration open status: True
ratio of positive domain = 8103 / 31002 = 0.2613702341784401
pruning-in-iteration extra time: 0.005198240280151367
Time: prepare 0.8206    bound 1.1437    transfer 0.1757    finalize 0.1992    func 2.3411    
Accumulated time: func 7.3513    prepare 2.0612    bound 3.9984    transfer 0.4493    finalize 0.8369    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06914 (20), -0.06903 (20), -0.06887 (20), -0.06761 (20), -0.06745 (20), -0.06679 (19), -0.06677 (20), -0.06675 (20), -0.06622 (20), -0.06621 (19), -0.06609 (20), -0.06609 (20), -0.06601 (20), -0.06595 (20), -0.06592 (20), -0.06587 (20), -0.06577 (19), -0.06564 (20), -0.06557 (20), -0.06549 (20), 
Length of domains: 22899
Time: pickout 0.2539    decision 1.1085    set_bounds 1.0802    solve 2.3475    add 0.0803    
Accumulated time: pickout 0.6204    decision 3.0368    set_bounds 2.4491    solve 7.3699    add 0.2953    
Current (lb-rhs): -0.0691380500793457
63288 domains visited
Cumulative time: 13.947577714920044

BaB round 13
batch: 16384
splitting decisions: 
split level 0: [/input, 3509] [/input-12, 45] [/input-12, 45] [/input, 3511] [/input, 3509] [/input-12, 45] [/input-8, 1134] [/input-12, 45] [/input, 2503] [/input-12, 45] 
pruning_in_iteration open status: True
ratio of positive domain = 7314 / 32768 = 0.22320556640625
pruning-in-iteration extra time: 0.0048847198486328125
Time: prepare 0.8778    bound 1.2482    transfer 0.1818    finalize 0.5198    func 2.8298    
Accumulated time: func 10.1811    prepare 2.9394    bound 5.2466    transfer 0.6311    finalize 1.3567    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06761 (20), -0.06677 (20), -0.06675 (20), -0.06618 (21), -0.06604 (21), -0.06593 (20), -0.06592 (21), -0.06577 (21), -0.06549 (20), -0.06542 (20), -0.06535 (20), -0.06534 (20), -0.06523 (21), -0.06515 (21), -0.06509 (21), -0.06507 (20), -0.06504 (20), -0.06501 (21), -0.06497 (20), 
Length of domains: 31969
Time: pickout 0.2792    decision 1.9708    set_bounds 0.9576    solve 2.8366    add 0.0946    
Accumulated time: pickout 0.8995    decision 5.0076    set_bounds 3.4067    solve 10.2065    add 0.3899    
Current (lb-rhs): -0.06902766227722168
88742 domains visited
Cumulative time: 20.143620014190674

BaB round 14
batch: 16384
splitting decisions: 
split level 0: [/input-8, 1625] [/input-8, 1609] [/input-8, 1625] [/input-8, 1625] [/input-8, 1625] [/input, 3239] [/input-8, 1625] [/input, 3239] [/input-8, 1625] [/input, 3239] 
pruning_in_iteration open status: False
ratio of positive domain = 6489 / 32768 = 0.198028564453125
pruning-in-iteration extra time: 0.00021696090698242188
Time: prepare 0.8931    bound 1.3089    transfer 0.1848    finalize 0.2143    func 2.6036    
Accumulated time: func 12.7846    prepare 3.8329    bound 6.5555    transfer 0.8159    finalize 1.5710    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06761 (20), -0.06677 (20), -0.06675 (20), -0.06604 (21), -0.06593 (20), -0.06577 (21), -0.06567 (22), -0.06549 (20), -0.06542 (20), -0.06540 (22), -0.06535 (20), -0.06534 (20), -0.06515 (21), -0.06509 (21), -0.06507 (20), -0.06504 (20), -0.06501 (21), -0.06497 (20), -0.06494 (19), 
Length of domains: 41661
Time: pickout 0.2905    decision 1.7984    set_bounds 1.0465    solve 2.6116    add 0.2517    
Accumulated time: pickout 1.1901    decision 6.8060    set_bounds 4.4532    solve 12.8181    add 0.6416    
Current (lb-rhs): -0.06902766227722168
114818 domains visited
Cumulative time: 26.1989803314209

BaB round 15
batch: 16384
splitting decisions: 
split level 0: [/input-8, 641] [/input-8, 1341] [/input-8, 614] [/input, 3239] [/input-8, 641] [/input-8, 1341] [/input, 2504] [/input-8, 614] [/input, 2504] [/input, 2504] 
pruning_in_iteration open status: False
ratio of positive domain = 5502 / 32768 = 0.16790771484375
pruning-in-iteration extra time: 0.00022554397583007812
Time: prepare 0.9222    bound 1.3109    transfer 0.1877    finalize 0.2157    func 2.6389    
Accumulated time: func 15.4235    prepare 4.7555    bound 7.8664    transfer 1.0036    finalize 1.7866    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06761 (20), -0.06677 (20), -0.06675 (20), -0.06604 (21), -0.06593 (20), -0.06577 (21), -0.06549 (20), -0.06542 (20), -0.06535 (20), -0.06534 (20), -0.06515 (21), -0.06509 (21), -0.06507 (20), -0.06504 (20), -0.06501 (21), -0.06497 (20), -0.06494 (19), -0.06490 (20), -0.06476 (21), 
Length of domains: 52389
Time: pickout 0.3019    decision 2.1288    set_bounds 1.1207    solve 2.6460    add 0.1177    
Accumulated time: pickout 1.4920    decision 8.9348    set_bounds 5.5738    solve 15.4640    add 0.7593    
Current (lb-rhs): -0.06902766227722168
141930 domains visited
Cumulative time: 32.58214521408081

BaB round 16
batch: 16384
splitting decisions: 
split level 0: [/input, 3239] [/input, 2504] [/input-8, 1342] [/input, 3511] [/input, 460] [/input-8, 614] [/input, 460] [/input-8, 641] [/input, 3511] [/input, 3511] 
pruning_in_iteration open status: False
ratio of positive domain = 5754 / 32768 = 0.17559814453125
pruning-in-iteration extra time: 0.000225067138671875
Time: prepare 0.9389    bound 1.3103    transfer 0.1845    finalize 0.2154    func 2.6519    
Accumulated time: func 18.0754    prepare 5.6948    bound 9.1767    transfer 1.1881    finalize 2.0020    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06761 (20), -0.06677 (20), -0.06675 (20), -0.06604 (21), -0.06593 (20), -0.06577 (21), -0.06549 (20), -0.06542 (20), -0.06535 (20), -0.06534 (20), -0.06515 (21), -0.06509 (21), -0.06507 (20), -0.06504 (20), -0.06501 (21), -0.06497 (20), -0.06494 (19), -0.06490 (20), -0.06476 (21), 
Length of domains: 62899
Time: pickout 0.3139    decision 2.1927    set_bounds 1.2349    solve 2.6601    add 0.1099    
Accumulated time: pickout 1.8059    decision 11.1275    set_bounds 6.8087    solve 18.1241    add 0.8691    
Current (lb-rhs): -0.06902766227722168
168824 domains visited
Cumulative time: 39.15185785293579

BaB round 17
batch: 16384
splitting decisions: 
split level 0: [/input, 2504] [/input-8, 1122] [/input-8, 1134] [/input, 3239] [/input-8, 1122] [/input, 3509] [/input-8, 1122] [/input, 3239] [/input, 2504] [/input-8, 1122] 
pruning_in_iteration open status: False
ratio of positive domain = 5138 / 32768 = 0.15679931640625
pruning-in-iteration extra time: 0.0002281665802001953
Time: prepare 0.9431    bound 1.3121    transfer 0.1815    finalize 0.8088    func 3.2478    
Accumulated time: func 21.3233    prepare 6.6384    bound 10.4888    transfer 1.3696    finalize 2.8108    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06761 (20), -0.06677 (20), -0.06675 (20), -0.06604 (21), -0.06593 (20), -0.06577 (21), -0.06549 (20), -0.06542 (20), -0.06535 (20), -0.06534 (20), -0.06515 (21), -0.06509 (21), -0.06507 (20), -0.06504 (20), -0.06501 (21), -0.06497 (20), -0.06494 (19), -0.06490 (20), -0.06476 (21), 
Length of domains: 74040
Time: pickout 0.3312    decision 2.3175    set_bounds 0.7279    solve 3.2550    add 0.1754    
Accumulated time: pickout 2.1372    decision 13.4450    set_bounds 7.5366    solve 21.3791    add 1.0445    
Current (lb-rhs): -0.06902766227722168
196349 domains visited
Cumulative time: 46.02271914482117

BaB round 18
batch: 16384
splitting decisions: 
split level 0: [/input-8, 1617] [/input-8, 1122] [/input, 2501] [/input-8, 1122] [/input, 3239] [/input, 2501] [/input-8, 1122] [/input-8, 1122] [/input-8, 1122] [/input-8, 1122] 
pruning_in_iteration open status: False
ratio of positive domain = 5212 / 32768 = 0.1590576171875
pruning-in-iteration extra time: 0.0002257823944091797
Time: prepare 0.9523    bound 1.3108    transfer 0.1819    finalize 0.2425    func 2.6895    
Accumulated time: func 24.0128    prepare 7.5910    bound 11.7996    transfer 1.5516    finalize 3.0533    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06761 (20), -0.06677 (20), -0.06675 (20), -0.06604 (21), -0.06593 (20), -0.06577 (21), -0.06549 (20), -0.06542 (20), -0.06535 (20), -0.06534 (20), -0.06515 (21), -0.06509 (21), -0.06507 (20), -0.06504 (20), -0.06501 (21), -0.06497 (20), -0.06494 (19), -0.06490 (20), -0.06476 (21), 
Length of domains: 85144
Time: pickout 0.3240    decision 2.3998    set_bounds 0.7456    solve 2.6969    add 0.1007    
Accumulated time: pickout 2.4612    decision 15.8448    set_bounds 8.2822    solve 24.0760    add 1.1452    
Current (lb-rhs): -0.06902766227722168
223837 domains visited
Cumulative time: 52.3570830821991

BaB round 19
batch: 16384
splitting decisions: 
split level 0: [/input-8, 1122] [/input, 3511] [/input, 3511] [/input, 2486] [/input, 3511] [/input, 2486] [/input, 3509] [/input-8, 1609] [/input, 2501] [/input-8, 1609] 
pruning_in_iteration open status: False
ratio of positive domain = 5164 / 32768 = 0.1575927734375
pruning-in-iteration extra time: 0.00022602081298828125
Time: prepare 0.9376    bound 1.3123    transfer 0.1817    finalize 1.0082    func 3.4420    
Accumulated time: func 27.4548    prepare 8.5291    bound 13.1119    transfer 1.7332    finalize 4.0615    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06761 (20), -0.06677 (20), -0.06675 (20), -0.06604 (21), -0.06593 (20), -0.06577 (21), -0.06549 (20), -0.06542 (20), -0.06535 (20), -0.06534 (20), -0.06515 (21), -0.06509 (21), -0.06507 (20), -0.06504 (20), -0.06501 (21), -0.06497 (20), -0.06494 (19), -0.06490 (20), -0.06476 (21), 
Length of domains: 96286
Time: pickout 0.3369    decision 2.5106    set_bounds 0.7612    solve 3.4496    add 0.1190    
Accumulated time: pickout 2.7981    decision 18.3554    set_bounds 9.0434    solve 27.5256    add 1.2642    
Current (lb-rhs): -0.06902766227722168
251363 domains visited
Cumulative time: 59.58184099197388

BaB round 20
batch: 16384
splitting decisions: 
split level 0: [/input-8, 1122] [/input-8, 1122] [/input-8, 1342] [/input, 2486] [/input, 2486] [/input-8, 614] [/input, 2486] [/input, 2486] [/input, 2504] [/input, 3239] 
pruning_in_iteration open status: False
ratio of positive domain = 5107 / 32768 = 0.155853271484375
pruning-in-iteration extra time: 0.0002276897430419922
Time: prepare 0.9507    bound 1.3154    transfer 0.1800    finalize 0.2332    func 2.6818    
Accumulated time: func 30.1365    prepare 9.4802    bound 14.4273    transfer 1.9132    finalize 4.2947    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06761 (20), -0.06677 (20), -0.06675 (20), -0.06604 (21), -0.06593 (20), -0.06577 (21), -0.06549 (20), -0.06542 (20), -0.06535 (20), -0.06534 (20), -0.06515 (21), -0.06509 (21), -0.06507 (20), -0.06504 (20), -0.06501 (21), -0.06497 (20), -0.06494 (19), -0.06490 (20), -0.06476 (21), 
Length of domains: 107476
Time: pickout 0.3293    decision 1.7093    set_bounds 1.6444    solve 2.6897    add 0.1120    
Accumulated time: pickout 3.1274    decision 20.0646    set_bounds 10.6878    solve 30.2153    add 1.3761    
Current (lb-rhs): -0.06902766227722168
278937 domains visited
Cumulative time: 66.12926363945007

BaB round 21
batch: 16384
splitting decisions: 
split level 0: [/input-8, 1122] [/input, 2486] [/input-8, 1122] [/input, 2487] [/input, 2487] [/input-8, 1122] [/input-8, 1122] [/input, 2487] [/input-8, 1122] [/input, 2486] 
pruning_in_iteration open status: False
ratio of positive domain = 5287 / 32768 = 0.161346435546875
pruning-in-iteration extra time: 0.0002281665802001953
Time: prepare 0.9161    bound 1.3170    transfer 0.1817    finalize 0.2367    func 2.6533    
Accumulated time: func 32.7898    prepare 10.3967    bound 15.7443    transfer 2.0949    finalize 4.5314    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06761 (20), -0.06677 (20), -0.06675 (20), -0.06604 (21), -0.06593 (20), -0.06577 (21), -0.06549 (20), -0.06542 (20), -0.06535 (20), -0.06534 (20), -0.06515 (21), -0.06509 (21), -0.06507 (20), -0.06504 (20), -0.06501 (21), -0.06497 (20), -0.06494 (19), -0.06490 (20), -0.06476 (21), 
Length of domains: 118439
Time: pickout 0.3472    decision 1.7067    set_bounds 1.7391    solve 2.6617    add 0.1029    
Accumulated time: pickout 3.4746    decision 21.7713    set_bounds 12.4269    solve 32.8770    add 1.4790    
Current (lb-rhs): -0.06902766227722168
306284 domains visited
Cumulative time: 72.76013445854187

BaB round 22
batch: 16384
splitting decisions: 
split level 0: [/input, 2487] [/input, 2487] [/input, 3511] [/input-8, 1609] [/input, 3511] [/input, 3511] [/input, 3511] [/input, 3240] [/input, 3511] [/input, 2487] 
pruning_in_iteration open status: False
ratio of positive domain = 5230 / 32768 = 0.15960693359375
pruning-in-iteration extra time: 0.00023484230041503906
Time: prepare 0.9236    bound 1.3116    transfer 0.1823    finalize 0.2444    func 2.6641    
Accumulated time: func 35.4540    prepare 11.3208    bound 17.0559    transfer 2.2772    finalize 4.7757    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06761 (20), -0.06677 (20), -0.06675 (20), -0.06604 (21), -0.06593 (20), -0.06577 (21), -0.06549 (20), -0.06542 (20), -0.06535 (20), -0.06534 (20), -0.06515 (21), -0.06509 (21), -0.06507 (20), -0.06504 (20), -0.06501 (21), -0.06497 (20), -0.06494 (19), -0.06490 (20), -0.06476 (21), 
Length of domains: 129476
Time: pickout 0.3385    decision 2.7877    set_bounds 0.7442    solve 2.6723    add 0.1081    
Accumulated time: pickout 3.8131    decision 24.5590    set_bounds 13.1711    solve 35.5493    add 1.5871    
Current (lb-rhs): -0.06902766227722168
333705 domains visited
Cumulative time: 79.48227882385254

BaB round 23
batch: 16384
splitting decisions: 
split level 0: [/input, 3526] [/input, 3526] [/input, 1720] [/input, 2487] [/input-8, 1609] [/input, 1720] [/input-8, 668] [/input, 3240] [/input, 2487] [/input, 1720] 
pruning_in_iteration open status: False
ratio of positive domain = 5454 / 32768 = 0.16644287109375
pruning-in-iteration extra time: 0.0002276897430419922
Time: prepare 0.9124    bound 1.3128    transfer 0.1826    finalize 0.2514    func 2.6608    
Accumulated time: func 38.1148    prepare 12.2337    bound 18.3687    transfer 2.4598    finalize 5.0271    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06761 (20), -0.06677 (20), -0.06675 (20), -0.06604 (21), -0.06593 (20), -0.06577 (21), -0.06549 (20), -0.06542 (20), -0.06535 (20), -0.06534 (20), -0.06515 (21), -0.06509 (21), -0.06507 (20), -0.06504 (20), -0.06501 (21), -0.06497 (20), -0.06494 (19), -0.06490 (20), -0.06476 (21), 
Length of domains: 140290
Time: pickout 0.3576    decision 2.6365    set_bounds 0.7499    solve 2.6700    add 0.1058    
Accumulated time: pickout 4.1707    decision 27.1955    set_bounds 13.9210    solve 38.2193    add 1.6929    
Current (lb-rhs): -0.06902766227722168
360903 domains visited
Cumulative time: 86.07253789901733

BaB round 24
batch: 16384
splitting decisions: 
split level 0: [/input, 3526] [/input, 3240] [/input, 3526] [/input, 3240] [/input, 3240] [/input, 3526] [/input, 3526] [/input, 1448] [/input, 1448] [/input, 2501] 
pruning_in_iteration open status: False
ratio of positive domain = 5477 / 32768 = 0.167144775390625
pruning-in-iteration extra time: 0.00023245811462402344
Time: prepare 0.9316    bound 1.3118    transfer 0.1821    finalize 0.2421    func 2.6697    
Accumulated time: func 40.7845    prepare 13.1656    bound 19.6805    transfer 2.6418    finalize 5.2692    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06761 (20), -0.06677 (20), -0.06675 (20), -0.06604 (21), -0.06593 (20), -0.06577 (21), -0.06549 (20), -0.06542 (20), -0.06535 (20), -0.06534 (20), -0.06515 (21), -0.06509 (21), -0.06507 (20), -0.06504 (20), -0.06501 (21), -0.06497 (20), -0.06494 (19), -0.06490 (20), -0.06476 (21), 
Length of domains: 151080
Time: pickout 0.3424    decision 2.9544    set_bounds 0.7368    solve 2.6790    add 0.1298    
Accumulated time: pickout 4.5130    decision 30.1499    set_bounds 14.6578    solve 40.8984    add 1.8227    
Current (lb-rhs): -0.06902766227722168
388077 domains visited
Cumulative time: 92.97285890579224

BaB round 25
batch: 16384
splitting decisions: 
split level 0: [/input, 1448] [/input, 2501] [/input, 2501] [/input, 3240] [/input, 3526] [/input, 3526] [/input, 3526] [/input, 3240] [/input, 2501] [/input, 1448] 
pruning_in_iteration open status: False
ratio of positive domain = 4543 / 32768 = 0.138641357421875
pruning-in-iteration extra time: 0.0002665519714355469
Time: prepare 0.9386    bound 1.3129    transfer 0.1784    finalize 0.2376    func 2.6690    
Accumulated time: func 43.4534    prepare 14.1047    bound 20.9934    transfer 2.8202    finalize 5.5068    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06761 (20), -0.06677 (20), -0.06675 (20), -0.06604 (21), -0.06593 (20), -0.06577 (21), -0.06549 (20), -0.06542 (20), -0.06535 (20), -0.06534 (20), -0.06515 (21), -0.06509 (21), -0.06507 (20), -0.06504 (20), -0.06501 (21), -0.06497 (20), -0.06494 (19), -0.06490 (20), -0.06476 (21), 
Length of domains: 162795
Time: pickout 0.3470    decision 1.7060    set_bounds 2.0665    solve 2.6766    add 0.1434    
Accumulated time: pickout 4.8600    decision 31.8558    set_bounds 16.7243    solve 43.5750    add 1.9660    
Current (lb-rhs): -0.06902766227722168
416176 domains visited
Cumulative time: 99.97463154792786

BaB round 26
batch: 16384
splitting decisions: 
split level 0: [/input, 3241] [/input, 3526] [/input, 3526] [/input, 1720] [/input, 3511] [/input, 3240] [/input, 3240] [/input, 3241] [/input, 2501] [/input, 3240] 
pruning_in_iteration open status: False
ratio of positive domain = 4709 / 32768 = 0.143707275390625
pruning-in-iteration extra time: 0.0002262592315673828
Time: prepare 0.8859    bound 1.3115    transfer 0.1824    finalize 0.2186    func 2.6000    
Accumulated time: func 46.0534    prepare 14.9910    bound 22.3049    transfer 3.0026    finalize 5.7254    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06761 (20), -0.06677 (20), -0.06675 (20), -0.06604 (21), -0.06593 (20), -0.06577 (21), -0.06549 (20), -0.06542 (20), -0.06535 (20), -0.06534 (20), -0.06515 (21), -0.06509 (21), -0.06507 (20), -0.06504 (20), -0.06501 (21), -0.06497 (20), -0.06494 (19), -0.06490 (20), -0.06476 (21), 
Length of domains: 174321
Time: pickout 0.3515    decision 1.6960    set_bounds 2.1779    solve 2.6073    add 0.2711    
Accumulated time: pickout 5.2115    decision 33.5518    set_bounds 18.9022    solve 46.1823    add 2.2371    
Current (lb-rhs): -0.06902766227722168
444086 domains visited
Cumulative time: 107.1680097579956

BaB round 27
batch: 16384
splitting decisions: 
split level 0: [/input, 3241] [/input, 3241] [/input, 3241] [/input, 3241] [/input, 3526] [/input, 3241] [/input, 3526] [/input, 3241] [/input, 3241] [/input, 3241] 
pruning_in_iteration open status: False
ratio of positive domain = 5146 / 32768 = 0.15704345703125
pruning-in-iteration extra time: 0.00023794174194335938
Time: prepare 0.9035    bound 1.3098    transfer 0.1812    finalize 1.6929    func 4.0896    
Accumulated time: func 50.1430    prepare 15.8949    bound 23.6147    transfer 3.1838    finalize 7.4183    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06761 (20), -0.06677 (20), -0.06675 (20), -0.06604 (21), -0.06593 (20), -0.06577 (21), -0.06549 (20), -0.06542 (20), -0.06535 (20), -0.06534 (20), -0.06515 (21), -0.06509 (21), -0.06507 (20), -0.06504 (20), -0.06501 (21), -0.06497 (20), -0.06494 (19), -0.06490 (20), -0.06476 (21), 
Length of domains: 185363
Time: pickout 0.3624    decision 1.7001    set_bounds 0.7537    solve 4.0998    add 0.1170    
Accumulated time: pickout 5.5739    decision 35.2519    set_bounds 19.6559    solve 50.2820    add 2.3541    
Current (lb-rhs): -0.06902766227722168
471512 domains visited
Cumulative time: 114.25796031951904

BaB round 28
batch: 16384
splitting decisions: 
split level 0: [/input, 445] [/input, 312] [/input-8, 1134] [/input-8, 1134] [/input, 3241] [/input-8, 1609] [/input, 312] [/input, 445] [/input, 3241] [/input, 3241] 
pruning_in_iteration open status: True
ratio of positive domain = 7975 / 32768 = 0.243377685546875
pruning-in-iteration extra time: 0.005028724670410156
Time: prepare 0.9120    bound 1.2335    transfer 0.1818    finalize 0.2171    func 2.5459    
Accumulated time: func 52.6890    prepare 16.8074    bound 24.8482    transfer 3.3656    finalize 7.6354    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06761 (20), -0.06677 (20), -0.06675 (20), -0.06604 (21), -0.06593 (20), -0.06577 (21), -0.06549 (20), -0.06542 (20), -0.06535 (20), -0.06534 (20), -0.06515 (21), -0.06509 (21), -0.06507 (20), -0.06504 (20), -0.06501 (21), -0.06497 (20), -0.06494 (19), -0.06490 (20), -0.06476 (21), 
Length of domains: 193772
Time: pickout 0.3428    decision 1.6968    set_bounds 0.7374    solve 2.5544    add 0.1096    
Accumulated time: pickout 5.9168    decision 36.9487    set_bounds 20.3933    solve 52.8365    add 2.4637    
Current (lb-rhs): -0.06902766227722168
496305 domains visited
Cumulative time: 119.76750588417053

BaB round 29
batch: 16384
splitting decisions: 
split level 0: [/input, 3241] [/input-8, 1134] [/input, 312] [/input, 3241] [/input, 312] [/input-8, 1134] [/input, 3241] [/input-8, 1134] [/input, 445] [/input-8, 1134] 
pruning_in_iteration open status: True
ratio of positive domain = 7904 / 32768 = 0.2412109375
pruning-in-iteration extra time: 0.005053997039794922
Time: prepare 0.8943    bound 1.2354    transfer 0.1834    finalize 0.2143    func 2.5295    
Accumulated time: func 55.2185    prepare 17.7021    bound 26.0836    transfer 3.5491    finalize 7.8497    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06761 (20), -0.06677 (20), -0.06675 (20), -0.06604 (21), -0.06593 (20), -0.06577 (21), -0.06549 (20), -0.06542 (20), -0.06535 (20), -0.06534 (20), -0.06515 (21), -0.06509 (21), -0.06507 (20), -0.06504 (20), -0.06501 (21), -0.06497 (20), -0.06494 (19), -0.06490 (20), -0.06476 (21), 
Length of domains: 202252
Time: pickout 0.3521    decision 3.2781    set_bounds 0.7361    solve 2.5408    add 0.1032    
Accumulated time: pickout 6.2688    decision 40.2268    set_bounds 21.1294    solve 55.3773    add 2.5669    
Current (lb-rhs): -0.06902766227722168
521169 domains visited
Cumulative time: 126.86599779129028

BaB round 30
batch: 16384
splitting decisions: 
split level 0: [/input-8, 1346] [/input-8, 1134] [/input-8, 1134] [/input-8, 1346] [/input-8, 1134] [/input-8, 1346] [/input-8, 1134] [/input-8, 1346] [/input, 3526] [/input-8, 1346] 
pruning_in_iteration open status: True
ratio of positive domain = 8362 / 32768 = 0.25518798828125
pruning-in-iteration extra time: 0.005425214767456055
Time: prepare 0.8924    bound 1.2046    transfer 0.1829    finalize 0.2096    func 2.4912    
Accumulated time: func 57.7097    prepare 18.5950    bound 27.2882    transfer 3.7320    finalize 8.0593    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06761 (20), -0.06677 (20), -0.06675 (20), -0.06604 (21), -0.06593 (20), -0.06577 (21), -0.06549 (20), -0.06542 (20), -0.06535 (20), -0.06534 (20), -0.06515 (21), -0.06509 (21), -0.06507 (20), -0.06504 (20), -0.06501 (21), -0.06497 (20), -0.06494 (19), -0.06490 (20), -0.06476 (21), 
Length of domains: 210274
Time: pickout 0.3631    decision 1.7069    set_bounds 2.3644    solve 2.4983    add 0.1008    
Accumulated time: pickout 6.6320    decision 41.9336    set_bounds 23.4938    solve 57.8756    add 2.6676    
Current (lb-rhs): -0.06902766227722168
545575 domains visited
Cumulative time: 133.97279977798462

BaB round 31
batch: 16384
splitting decisions: 
split level 0: [/input, 328] [/input, 1674] [/input-8, 1134] [/input, 1674] [/input, 3241] [/input, 328] [/input-8, 1341] [/input-8, 1346] [/input, 1674] [/input, 328] 
pruning_in_iteration open status: True
ratio of positive domain = 7908 / 32768 = 0.2413330078125
pruning-in-iteration extra time: 0.004601478576660156
Time: prepare 0.8943    bound 1.2305    transfer 0.1845    finalize 1.9585    func 4.2698    
Accumulated time: func 61.9796    prepare 19.4897    bound 28.5187    transfer 3.9165    finalize 10.0179    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06761 (20), -0.06677 (20), -0.06675 (20), -0.06604 (21), -0.06593 (20), -0.06577 (21), -0.06549 (20), -0.06542 (20), -0.06535 (20), -0.06534 (20), -0.06515 (21), -0.06509 (21), -0.06507 (20), -0.06504 (20), -0.06501 (21), -0.06497 (20), -0.06494 (19), -0.06490 (20), -0.06476 (21), 
Length of domains: 218750
Time: pickout 0.3689    decision 1.7169    set_bounds 0.7517    solve 4.2778    add 0.1148    
Accumulated time: pickout 7.0009    decision 43.6506    set_bounds 24.2455    solve 62.1533    add 2.7824    
Current (lb-rhs): -0.06902766227722168
570435 domains visited
Cumulative time: 141.2973473072052

BaB round 32
batch: 16384
splitting decisions: 
split level 0: [/input, 3254] [/input, 445] [/input, 3529] [/input-8, 1341] [/input, 3254] [/input-8, 1341] [/input, 328] [/input, 445] [/input-8, 1341] [/input-8, 1341] 
pruning_in_iteration open status: True
ratio of positive domain = 6675 / 32768 = 0.203704833984375
pruning-in-iteration extra time: 0.0008256435394287109
Time: prepare 0.8837    bound 1.3213    transfer 0.1861    finalize 0.2089    func 2.6016    
Accumulated time: func 64.5811    prepare 20.3738    bound 29.8400    transfer 4.1027    finalize 10.2268    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06761 (20), -0.06677 (20), -0.06675 (20), -0.06604 (21), -0.06593 (20), -0.06577 (21), -0.06549 (20), -0.06542 (20), -0.06535 (20), -0.06534 (20), -0.06515 (21), -0.06509 (21), -0.06507 (20), -0.06504 (20), -0.06501 (21), -0.06497 (20), -0.06494 (19), -0.06490 (20), -0.06476 (21), 
Length of domains: 228459
Time: pickout 0.3714    decision 1.7213    set_bounds 0.7338    solve 2.6088    add 0.1130    
Accumulated time: pickout 7.3723    decision 45.3718    set_bounds 24.9793    solve 64.7622    add 2.8954    
Current (lb-rhs): -0.06902766227722168
596528 domains visited
Cumulative time: 146.91640186309814

BaB round 33
batch: 16384
splitting decisions: 
split level 0: [/input, 328] [/input-8, 1341] [/input, 3254] [/input, 3241] [/input, 312] [/input-8, 1341] [/input-8, 1341] [/input-8, 1341] [/input-8, 1341] [/input-8, 1341] 
pruning_in_iteration open status: False
ratio of positive domain = 6333 / 32768 = 0.193267822265625
pruning-in-iteration extra time: 0.00023508071899414062
Time: prepare 0.8770    bound 1.3080    transfer 0.1863    finalize 0.2081    func 2.5812    
Accumulated time: func 67.1624    prepare 21.2511    bound 31.1480    transfer 4.2889    finalize 10.4349    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06761 (20), -0.06677 (20), -0.06675 (20), -0.06604 (21), -0.06593 (20), -0.06577 (21), -0.06549 (20), -0.06542 (20), -0.06535 (20), -0.06534 (20), -0.06515 (21), -0.06509 (21), -0.06507 (20), -0.06504 (20), -0.06501 (21), -0.06497 (20), -0.06494 (19), -0.06490 (20), -0.06476 (21), 
Length of domains: 238425
Time: pickout 0.3789    decision 3.3824    set_bounds 0.7207    solve 2.5886    add 0.1137    
Accumulated time: pickout 7.7512    decision 48.7543    set_bounds 25.7000    solve 67.3508    add 3.0091    
Current (lb-rhs): -0.06902766227722168
622878 domains visited
Cumulative time: 154.18215417861938

BaB round 34
batch: 16384
splitting decisions: 
split level 0: [/input-8, 1356] [/input-8, 1341] [/input, 1674] [/input-8, 1356] [/input-8, 1356] [/input-8, 1356] [/input, 3254] [/input, 328] [/input, 3254] [/input-8, 1341] 
pruning_in_iteration open status: False
ratio of positive domain = 6449 / 32768 = 0.196807861328125
pruning-in-iteration extra time: 0.00026726722717285156
Time: prepare 0.8850    bound 1.3086    transfer 0.1878    finalize 2.2377    func 4.6204    
Accumulated time: func 71.7828    prepare 22.1364    bound 32.4566    transfer 4.4767    finalize 12.6726    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06761 (20), -0.06677 (20), -0.06675 (20), -0.06604 (21), -0.06593 (20), -0.06577 (21), -0.06549 (20), -0.06542 (20), -0.06535 (20), -0.06534 (20), -0.06515 (21), -0.06509 (21), -0.06507 (20), -0.06504 (20), -0.06501 (21), -0.06497 (20), -0.06494 (19), -0.06490 (20), -0.06476 (21), 
Length of domains: 248264
Time: pickout 0.3787    decision 1.7324    set_bounds 0.7518    solve 4.6280    add 0.1127    
Accumulated time: pickout 8.1299    decision 50.4866    set_bounds 26.4518    solve 71.9788    add 3.1218    
Current (lb-rhs): -0.06902766227722168
649101 domains visited
Cumulative time: 161.85827589035034

BaB round 35
batch: 16384
splitting decisions: 
split level 0: [/input, 2472] [/input, 2472] [/input, 2472] [/input, 2472] [/input-8, 1341] [/input, 1674] [/input-8, 1341] [/input, 2472] [/input, 2472] [/input, 2472] 
pruning_in_iteration open status: True
ratio of positive domain = 8420 / 32768 = 0.2569580078125
pruning-in-iteration extra time: 0.005358695983886719
Time: prepare 0.8907    bound 1.2065    transfer 0.1815    finalize 0.2096    func 2.4901    
Accumulated time: func 74.2729    prepare 23.0275    bound 33.6631    transfer 4.6583    finalize 12.8822    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06761 (20), -0.06677 (20), -0.06675 (20), -0.06604 (21), -0.06593 (20), -0.06577 (21), -0.06549 (20), -0.06542 (20), -0.06535 (20), -0.06534 (20), -0.06515 (21), -0.06509 (21), -0.06507 (20), -0.06504 (20), -0.06501 (21), -0.06497 (20), -0.06494 (19), -0.06490 (20), -0.06476 (21), 
Length of domains: 256228
Time: pickout 0.3788    decision 1.6850    set_bounds 0.7177    solve 2.4975    add 0.1187    
Accumulated time: pickout 8.5087    decision 52.1717    set_bounds 27.1695    solve 74.4763    add 3.2404    
Current (lb-rhs): -0.06902766227722168
673449 domains visited
Cumulative time: 167.3307068347931

BaB round 36
batch: 16384
splitting decisions: 
split level 0: [/input, 2472] [/input-8, 1356] [/input, 2472] [/input-8, 1356] [/input, 2472] [/input, 328] [/input, 2472] [/input, 2472] [/input, 2472] [/input, 2472] 
pruning_in_iteration open status: True
ratio of positive domain = 11048 / 32768 = 0.337158203125
pruning-in-iteration extra time: 0.005695819854736328
Time: prepare 0.8758    bound 1.1077    transfer 0.1856    finalize 0.2159    func 2.3876    
Accumulated time: func 76.6605    prepare 23.9037    bound 34.7708    transfer 4.8439    finalize 13.0981    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06761 (20), -0.06677 (20), -0.06675 (20), -0.06604 (21), -0.06593 (20), -0.06577 (21), -0.06549 (20), -0.06542 (20), -0.06535 (20), -0.06534 (20), -0.06515 (21), -0.06509 (21), -0.06507 (20), -0.06504 (20), -0.06501 (21), -0.06497 (20), -0.06494 (19), -0.06490 (20), -0.06476 (21), 
Length of domains: 261564
Time: pickout 0.3800    decision 1.7162    set_bounds 2.8371    solve 2.3952    add 0.0974    
Accumulated time: pickout 8.8887    decision 53.8879    set_bounds 30.0066    solve 76.8714    add 3.3378    
Current (lb-rhs): -0.06902766227722168
695169 domains visited
Cumulative time: 174.84397649765015

BaB round 37
batch: 16384
splitting decisions: 
split level 0: [/input-8, 1356] [/input-8, 1356] [/input-8, 1356] [/input-8, 1356] [/input-8, 1356] [/input-8, 1356] [/input-8, 1356] [/input-8, 1356] [/input-8, 1356] [/input-8, 1356] 
pruning_in_iteration open status: True
ratio of positive domain = 18560 / 32768 = 0.56640625
pruning-in-iteration extra time: 0.005459308624267578
Time: prepare 0.8861    bound 0.8310    transfer 0.1857    finalize 0.2114    func 2.1158    
Accumulated time: func 78.7762    prepare 24.7902    bound 35.6018    transfer 5.0296    finalize 13.3095    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06761 (20), -0.06677 (20), -0.06675 (20), -0.06604 (21), -0.06593 (20), -0.06577 (21), -0.06549 (20), -0.06542 (20), -0.06535 (20), -0.06534 (20), -0.06515 (21), -0.06509 (21), -0.06507 (20), -0.06504 (20), -0.06501 (21), -0.06497 (20), -0.06494 (19), -0.06490 (20), -0.06476 (21), 
Length of domains: 259388
Time: pickout 0.3847    decision 1.7225    set_bounds 0.7329    solve 2.1234    add 0.0707    
Accumulated time: pickout 9.2734    decision 55.6104    set_bounds 30.7395    solve 78.9948    add 3.4085    
Current (lb-rhs): -0.06902766227722168
709377 domains visited
Cumulative time: 179.9988875389099

BaB round 38
batch: 16384
splitting decisions: 
split level 0: [/input-8, 1356] [/input-8, 1356] [/input, 3241] [/input-8, 1356] [/input-8, 1356] [/input-8, 1356] [/input-8, 1356] [/input, 3434] [/input, 3241] [/input-8, 1356] 
pruning_in_iteration open status: True
ratio of positive domain = 12657 / 32768 = 0.386260986328125
pruning-in-iteration extra time: 0.005552768707275391
Time: prepare 0.8974    bound 1.0438    transfer 0.1832    finalize 0.2074    func 2.3348    
Accumulated time: func 81.1110    prepare 25.6880    bound 36.6456    transfer 5.2127    finalize 13.5169    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06761 (20), -0.06677 (20), -0.06675 (20), -0.06604 (21), -0.06593 (20), -0.06577 (21), -0.06549 (20), -0.06542 (20), -0.06535 (20), -0.06534 (20), -0.06515 (21), -0.06509 (21), -0.06507 (20), -0.06504 (20), -0.06501 (21), -0.06497 (20), -0.06494 (19), -0.06490 (20), -0.06476 (21), 
Length of domains: 263115
Time: pickout 0.4046    decision 3.6252    set_bounds 0.7641    solve 2.3420    add 0.0914    
Accumulated time: pickout 9.6780    decision 59.2356    set_bounds 31.5036    solve 81.3368    add 3.5000    
Current (lb-rhs): -0.06902766227722168
729488 domains visited
Cumulative time: 187.32742500305176

BaB round 39
batch: 16384
splitting decisions: 
split level 0: [/input, 4055] [/input, 4055] [/input, 4055] [/input, 4055] [/input, 4055] [/input, 4055] [/input-8, 996] [/input-8, 996] [/input, 4055] [/input, 4055] 
pruning_in_iteration open status: True
ratio of positive domain = 14070 / 32768 = 0.42938232421875
pruning-in-iteration extra time: 0.005414009094238281
Time: prepare 0.9112    bound 0.9849    transfer 0.1853    finalize 2.4357    func 4.5180    
Accumulated time: func 85.6291    prepare 26.5995    bound 37.6305    transfer 5.3981    finalize 15.9526    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06761 (20), -0.06677 (20), -0.06675 (20), -0.06604 (21), -0.06593 (20), -0.06577 (21), -0.06549 (20), -0.06542 (20), -0.06535 (20), -0.06534 (20), -0.06515 (21), -0.06509 (21), -0.06507 (20), -0.06504 (20), -0.06501 (21), -0.06497 (20), -0.06494 (19), -0.06490 (20), -0.06476 (21), 
Length of domains: 265429
Time: pickout 0.4128    decision 1.7044    set_bounds 0.7506    solve 4.5255    add 0.1031    
Accumulated time: pickout 10.0909    decision 60.9400    set_bounds 32.2542    solve 85.8623    add 3.6031    
Current (lb-rhs): -0.06902766227722168
748186 domains visited
Cumulative time: 194.93451046943665

BaB round 40
batch: 16384
splitting decisions: 
split level 0: [/input-8, 996] [/input-8, 996] [/input-8, 996] [/input-8, 996] [/input-8, 996] [/input-8, 996] [/input-8, 996] [/input-8, 996] [/input-8, 996] [/input-8, 996] 
pruning_in_iteration open status: True
ratio of positive domain = 19344 / 32768 = 0.59033203125
pruning-in-iteration extra time: 0.005356788635253906
Time: prepare 0.8926    bound 0.7862    transfer 0.1833    finalize 0.1836    func 2.0471    
Accumulated time: func 87.6762    prepare 27.4925    bound 38.4167    transfer 5.5814    finalize 16.1362    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06761 (20), -0.06677 (20), -0.06675 (20), -0.06604 (21), -0.06593 (20), -0.06577 (21), -0.06549 (20), -0.06542 (20), -0.06535 (20), -0.06534 (20), -0.06515 (21), -0.06509 (21), -0.06507 (20), -0.06504 (20), -0.06501 (21), -0.06497 (20), -0.06494 (19), -0.06490 (20), -0.06476 (21), 
Length of domains: 262469
Time: pickout 0.4023    decision 1.7139    set_bounds 0.7305    solve 2.0539    add 0.0695    
Accumulated time: pickout 10.4931    decision 62.6539    set_bounds 32.9847    solve 87.9162    add 3.6727    
Current (lb-rhs): -0.06902766227722168
761610 domains visited
Time out!!!!!!!!
Result: unknown in 203.1607 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 199, vnnlib ID: 199 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.87905216, -4.83922100, -4.88939095, -3.64813495, -4.49923706,
         -4.07969141, -3.29299521, -4.57696962, -6.84988213, -3.62618971]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [599]; unstable size 599; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 271, 1, 599] with unstable size 270 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 599] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 599] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [270]; unstable size 270; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 270] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 270] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.17035902, -1.17387700, -0.10739517, -1.19881487, -0.49474192,
         -1.09854019, -0.81328833,  0.67185163, -1.93993330]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.87905216, -4.83922100, -4.88939095, -3.64813495, -4.49923706,
         -4.07969141, -3.29299521, -4.57696962, -6.84988213, -3.62618971]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.36935329, -4.46735382, -4.54357624, -3.14718437, -4.18439627,
          -3.51606941, -3.42233038, -4.04076290, -6.27815247, -3.11652946],
         [-5.36935329, -4.46735382, -4.54357624, -3.14718437, -4.18439627,
          -3.51606941, -3.42233038, -4.04076290, -6.27815247, -3.11652946]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.04502344,  1.12124586, -0.27514601,  0.76206589,  0.09373903,
           0.61843252, -0.30580091]]], device='cuda:0')
number of violation:  2
Attack finished in 0.0185 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0877 seconds
############# Summary #############
Final verified acc: 45.5% (total 200 examples)
Problem instances count: 200 , total verified (safe/unsat): 91 , total falsified (unsafe/sat): 100 , timeout: 9
mean time for ALL instances (total 200):11.701027964619774, max time: 215.5524446964264
mean time for verified SAFE instances(total 91): 5.170187819135058, max time: 185.6445701122284
mean time for verified (SAFE + UNSAFE) instances (total 191): 2.5081370076583944, max time: [1.2080259323120117, 0.285564661026001, 0.07128691673278809, 0.06894373893737793, 0.07574772834777832, 0.06991147994995117, 0.068878173828125, 0.08232808113098145, 0.0758659839630127, 0.07989668846130371, 0.07626843452453613, 0.06938314437866211, 0.08044171333312988, 0.07353663444519043, 0.07099485397338867, 0.11150622367858887, 0.08146548271179199, 0.08252644538879395, 0.07886099815368652, 0.06844425201416016, 0.04935407638549805, 0.07364201545715332, 0.07479619979858398, 0.08205151557922363, 0.07495999336242676, 0.08272314071655273, 0.07848310470581055, 0.044580936431884766, 0.08750081062316895, 0.06343460083007812, 0.07334280014038086, 0.09156250953674316, 0.0763695240020752, 0.07515287399291992, 0.07996654510498047, 0.06981563568115234, 0.062276363372802734, 0.05138540267944336, 0.07965421676635742, 0.06651186943054199, 0.057100772857666016, 0.060723066329956055, 0.05263328552246094, 0.07715702056884766, 0.04784274101257324, 0.07062864303588867, 0.08929109573364258, 0.07438182830810547, 0.07447385787963867, 0.07636332511901855, 0.08637857437133789, 0.08759856224060059, 0.07817411422729492, 0.07436203956604004, 0.07676291465759277, 0.07437419891357422, 0.08417153358459473, 0.07545304298400879, 0.08202171325683594, 0.05701851844787598, 0.08080935478210449, 0.0837857723236084, 0.042920827865600586, 0.08040833473205566, 0.08118557929992676, 0.04409599304199219, 0.07628321647644043, 0.04699969291687012, 0.07162642478942871, 0.0451807975769043, 0.04864645004272461, 0.06993579864501953, 0.0709075927734375, 0.06159067153930664, 0.07845115661621094, 0.08518624305725098, 0.08054280281066895, 0.0708463191986084, 0.06481146812438965, 0.07232546806335449, 0.07322573661804199, 0.06905055046081543, 0.044438838958740234, 0.06368732452392578, 0.06703925132751465, 0.07452774047851562, 0.0756537914276123, 0.05611729621887207, 0.08268117904663086, 0.08005642890930176, 0.07134890556335449, 0.07448363304138184, 0.070953369140625, 0.07863259315490723, 0.07654094696044922, 0.09917807579040527, 0.047678232192993164, 0.05964398384094238, 0.08349990844726562, 0.08774662017822266]
mean time for verified SAFE + TIMEOUT instances (total 100): 23.316386330127717, max time: [207.4111988544464, 205.85893416404724, 202.52845525741577, 207.61854434013367, 203.06084084510803, 204.3161141872406, 215.5524446964264, 211.64427590370178, 203.16073322296143] 
mean time for verified UNSAFE instances (total 100): 0.08567076921463013, max time: 1.2080259323120117
unsafe-pgd (total 100), index: [0, 1, 3, 4, 5, 6, 7, 9, 10, 12, 13, 15, 16, 18, 19, 25, 29, 32, 34, 35, 36, 43, 44, 45, 46, 50, 53, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 69, 72, 75, 77, 78, 80, 82, 87, 88, 90, 91, 92, 94, 96, 98, 99, 100, 101, 102, 105, 106, 108, 113, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 135, 137, 138, 141, 143, 145, 149, 150, 151, 152, 154, 155, 156, 163, 165, 170, 173, 174, 175, 176, 181, 184, 185, 188, 191, 194, 196, 199]
safe-incomplete (total 73), index: [2, 8, 14, 17, 20, 21, 22, 23, 26, 27, 28, 30, 31, 33, 37, 39, 40, 41, 47, 48, 49, 51, 52, 62, 68, 71, 73, 74, 76, 79, 81, 83, 85, 86, 93, 104, 109, 110, 111, 114, 115, 117, 118, 121, 131, 133, 136, 140, 142, 144, 146, 147, 148, 153, 157, 159, 161, 162, 164, 166, 168, 171, 177, 178, 179, 180, 182, 186, 189, 190, 192, 193, 197]
safe (total 18), index: [11, 38, 42, 54, 60, 84, 89, 95, 103, 107, 112, 132, 139, 158, 160, 167, 169, 172]
unknown (total 9), index: [24, 55, 70, 97, 116, 183, 187, 195, 198]
