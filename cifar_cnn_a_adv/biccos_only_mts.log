Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  sparse_interm: true
  save_adv_example: false
  verify_onnxruntime_output: false
  eval_adv_example: false
  show_adv_example: false
  precompile_jit: false
  prepare_only: false
  complete_verifier: bab
  enable_incomplete_verification: true
  csv_name: null
  results_file: ablation_results/cifar_cnn_a_adv/biccos_only_mts.out
  root_path: ''
  deterministic_opt: false
  graph_optimizer: 'Customized("custom_graph_optimizer", "default_optimizer")'
  buffer_has_batchdim: false
  save_output: false
  output_file: out.pkl
  return_optimized_model: false
model:
  name: cnn_4layer_adv
  path: models/sdp/cifar_cnn_a_adv.model
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  debug_onnx: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: []
  onnx_vnnlib_joint_optimization_flags: none
  check_optimized: false
  flatten_final_output: false
  optimize_graph: null
  with_jacobian: false
data:
  start: 0
  end: 10000
  select_instance: null
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: CIFAR_SDP
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.00784313725
  epsilon_min: 0.0
  vnnlib_path: null
  vnnlib_path_prefix: ''
  rhs_offset: null
solver:
  batch_size: 4096
  auto_enlarge_batch_size: true
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  optimize_disjuncts_separately: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
    relu_option: adaptive
    compare_crown_with_ibp: false
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_alphas: false
    lr_decay: 0.98
    full_conv_alpha: true
    max_coeff_mul: .inf
    matmul_share_alphas: false
    disable_optimization: []
    max_time: 1.0
  invprop:
    apply_output_constraints_to: []
    tighten_input_bounds: false
    best_of_oc_and_no_oc: false
    directly_optimize: []
    oc_lr: 0.1
    share_gammas: false
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    max_dim: 10000
    reset_threshold: 1.0
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    unstable_neuron_threshold: 0
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
    skip_unsafe: false
    topk_filter: 1.0
    sliding_window: -1
    extra_constraint: false
    refine_neuron_timeout_increasement: 0
    timeout_neuron_percentage: 0.3
    remaining_timeout_threshold: 1
    remove_unstable_neurons: false
    lp_solver: mip
    output_cut: false
bab:
  initial_max_domains: 1
  backing_up_max_domain: null
  max_domains: .inf
  decision_thresh: 0
  timeout: 200
  timeout_scale: 1
  max_iterations: -1
  override_timeout: null
  get_upper_bound: false
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_interm: ''
  interm_transfer: false
  recompute_interm: false
  sort_domain_interval: -1
  vanilla_crown: false
  tree_traversal: breadth_first
  cut:
    enabled: true
    cuts_path: /tmp/abcrown_cuts_2491
    implication: false
    bab_cut: true
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 0.99
    iteration: 200
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.05
    number_cuts: 500
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    add_implied_cuts: false
    add_input_cuts: false
    biccos:
      enabled: true
      auto_param: false
      constraint_strengthening: false
      recursively_strengthening: false
      merge_cut_enabled: false
      fast_inference_enabled: false
      drop_ratio: 0.5
      max_infer_iter: 40
      heuristic: neuron_influence_score
      save_cuts: false
      multi_tree_branching:
        enabled: true
        restore_best_tree: true
        keep_n_best_domains: 50
        target_batch_size: 200
        iterations: 5
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    nonlinear_split:
      method: shortcut
      branching_point_method: uniform
      num_branches: 2
      filter: false
      filter_beta: false
      filter_clamp: false
      filter_batch_size: 10000
      filter_iterations: 25
      relu_only: false
      loose_tanh_threshold: null
      dynamic_bbps: false
      dynamic_options: [uniform, three_left, three_right]
      branching_point_node: ''
      branching_point_db: []
    input_split:
      enable_clip_domains: false
      split_hint: null
      reorder_bab: false
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      split_partitions: 2
      sb_margin_weight: 1.0
      sb_sum: false
      sb_primary_spec: null
      bf_backup_thresh: -1
      bf_rhs_offset: 0
      bf_iters: 1000000000.0
      bf_batch_size: 100000
      bf_zero_crossing_score: false
      touch_zero_score: 0
      ibp_enhancement: false
      catch_assertion: false
      compare_with_old_bounds: false
      update_rhs_with_attack: false
      sb_coeff_thresh: 0.001
      sort_index: null
      sort_descending: true
      show_progress: false
      presplit_domains: null
      skip_getting_worst_domain: false
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: middle
  pgd_steps: 100
  pgd_restarts: 50
  pgd_batch_size: 100000000
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_alpha_scale: false
  pgd_loss_mode: null
  pgd_restart_when_stuck: false
  enable_mip_attack: false
  adv_saver: default_adv_saver
  adv_verifier: default_adv_verifier
  early_stop_condition: default_early_stop_condition
  adv_example_finalizer: default_adv_example_finalizer
  pgd_loss: default_pgd_loss
  cex_path: ./test_cex.txt
  attack_mode: PGD
  attack_tolerance: 0.0
  attack_func: attack_with_general_specs
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 500000
    pgd_alpha: auto
  input_split_check_adv:
    enabled: auto
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
    max_num_domains: 10
debug:
  view_model: false
  lp_test: null
  rescale_vnnlib_ptb: null
  test_optimized_bounds: false
  test_optimized_bounds_after_n_iterations: 0
  print_verbose_decisions: false
  biccos_mip_sanity_check: false
  sanity_check: 0
  z_split_enabled: false

Experiments at Wed Oct 30 12:36:41 2024 on r23g0003.hpc.itc.rwth-aachen.de
Sequential(
  (0): Conv2d(3, 16, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(16, 32, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (3): ReLU()
  (4): Flatten(start_dim=1, end_dim=-1)
  (5): Linear(in_features=2048, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=10, bias=True)
)
Parameters:
  0.weight: shape torch.Size([16, 3, 4, 4])
  0.bias: shape torch.Size([16])
  2.weight: shape torch.Size([32, 16, 4, 4])
  2.bias: shape torch.Size([32])
  5.weight: shape torch.Size([100, 2048])
  5.bias: shape torch.Size([100])
  7.weight: shape torch.Size([10, 100])
  7.bias: shape torch.Size([10])
############################
Sampled data loaded. Data already preprocessed!
Shape: torch.Size([200, 3, 32, 32]) torch.Size([200]) torch.Size([200])
X range: tensor(2.12560368) tensor(-1.98888886) tensor(-0.01308715)
############################
Internal results will be saved to ablation_results/cifar_cnn_a_adv/biccos_only_mts.out.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-2.60389853, -4.03890705, -0.96637481, -1.08776557, -1.28065956,
         -1.57759106, -2.01748729, -1.63907158, -4.69097900, -3.85279989]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [218]; unstable size 218; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 98, 1, 218] with unstable size 97 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 218] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 218] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [97]; unstable size 97; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 97] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 97] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.15867984,  2.57397461, -0.32336396, -0.12450480,  0.40432665,
          0.56075490,  0.24401036,  3.10249233,  2.30172944]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.60389853, -4.03890705, -0.96637481, -1.08776557, -1.28065956,
         -1.57759106, -2.01748729, -1.63907158, -4.69097900, -3.85279989]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.60389853, -4.03890657, -0.96637493, -1.08776581, -1.28065979,
          -1.57759106, -2.01748776, -1.63907230, -4.69097900, -3.85279989],
         [-2.60389853, -4.03890657, -0.96637493, -1.08776581, -1.28065979,
          -1.57759106, -2.01748776, -1.63907230, -4.69097900, -3.85279989]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.12139088,  0.19289398]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.97301579, -1.96507931, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.96507931],
           [-1.96507931, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.97301579],
           [-1.96507931, -1.97301579, -1.97301579,  ..., -1.94126987,
            -1.96507931, -1.97301579],
           ...,
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.97301579],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.97301579],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.97301579]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.93236721,
            -1.93236721, -1.96457338],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.95652175,
            -1.95652175, -1.96457338],
           [-1.96457338, -1.95652175, -1.94847023,  ..., -1.96457338,
            -1.96457338, -1.95652175],
           ...,
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.66266882,
            -1.66266882, -1.64767623],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.68515754,
            -1.68515754, -1.67766130],
           [-1.69265378, -1.68515754, -1.68515754,  ..., -1.69265378,
            -1.69265378, -1.69265378],
           ...,
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.69265378],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.69265378],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.69265378]]],


         [[[-1.97301579, -1.96507931, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.96507931],
           [-1.96507931, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.97301579],
           [-1.96507931, -1.97301579, -1.97301579,  ..., -1.94126987,
            -1.96507931, -1.97301579],
           ...,
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.97301579],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.97301579],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.97301579]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.93236721,
            -1.93236721, -1.96457338],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.95652175,
            -1.95652175, -1.96457338],
           [-1.96457338, -1.95652175, -1.94847023,  ..., -1.96457338,
            -1.96457338, -1.95652175],
           ...,
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.66266882,
            -1.66266882, -1.64767623],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.68515754,
            -1.68515754, -1.67766130],
           [-1.69265378, -1.68515754, -1.68515754,  ..., -1.69265378,
            -1.69265378, -1.69265378],
           ...,
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.69265378],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.69265378],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.69265378]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 2.1339 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 1, vnnlib ID: 1 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-2.91239977,  1.30044675, -7.26831532, -7.87342548, -7.74763012,
         -8.46835899, -6.64607763, -8.08242130, -6.15906239,  1.63948882]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [567]; unstable size 567; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 163, 1, 567] with unstable size 162 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 567] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 567] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [162]; unstable size 162; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 162] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 162] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.13653469, -0.81675267,  7.20471907,  7.60528660,  7.75195980,
          8.15055752,  6.22120667,  7.95112467,  6.37312174]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.91239977,  1.30044675, -7.26831532, -7.87342548, -7.74763012,
         -8.46835899, -6.64607763, -8.08242130, -6.15906239,  1.63948882]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.29230642,  1.39088631, -7.69417095, -8.36273766, -8.14110756,
          -8.96644974, -7.15948677, -8.63516712, -6.20971012,  1.18852425]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.20236206]]], device='cuda:0')
number of violation:  1
Attack finished in 0.4145 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.4815 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 2, vnnlib ID: 2 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.38900280,  -6.91815758, -13.39404202, -12.50848293, -12.34240627,
         -13.34833145, -12.47480679, -13.81170845, -10.09896183,  -8.65394974]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [799]; unstable size 799; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 220, 1, 799] with unstable size 219 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 799] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 799] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [219]; unstable size 219; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 219] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 219] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.81504011, 4.21952724, 3.42959118, 3.38334274, 4.03887367, 3.68367100,
         4.85273170, 1.66043282, 0.65433002]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0685 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 3, vnnlib ID: 3 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.38513088, -15.12822247,  -7.38964939,  -7.50558901,  -6.26222038,
          -6.85573816, -10.31254101,  -5.30293274, -15.13275623, -13.36650562]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [471]; unstable size 471; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 209, 1, 471] with unstable size 208 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 471] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 471] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [208]; unstable size 208; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 208] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 208] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.96806812,  7.51881886,  0.34542727,  0.43789989, -0.23603064,
          3.05391598, -1.87562990,  7.75412416,  5.88288021]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.38513088, -15.12822247,  -7.38964939,  -7.50558901,  -6.26222038,
          -6.85573816, -10.31254101,  -5.30293274, -15.13275623, -13.36650562]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-12.38513088, -15.12822247,  -7.38964939,  -7.50558901,  -6.26222038,
           -6.85573816, -10.31254101,  -5.30293274, -15.13275719, -13.36650467],
         [-12.38513088, -15.12822247,  -7.38964939,  -7.50558901,  -6.26222038,
           -6.85573816, -10.31254101,  -5.30293274, -15.13275719, -13.36650467]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.59351778, -0.95928764]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.28095245, -0.35396814, -0.21111101,  ..., -0.43333322,
            -0.76666665,  0.32857150],
           [-1.11587298, -0.44920623, -0.59206349,  ..., -0.41746020,
            -1.09999990, -1.02063489],
           [-1.30634916, -0.59206349, -0.86190474,  ..., -0.06825387,
            -0.81428570, -1.17936504],
           ...,
           [ 0.94761908,  1.24920666,  1.42380977,  ...,  1.45555580,
             1.15396857,  0.80476195],
           [ 0.77301592,  0.97936511,  1.23333359,  ...,  1.18571460,
             1.13809550,  0.86825401],
           [ 0.85238099,  0.24920642,  0.50317466,  ...,  0.86825401,
             0.86825401,  0.99523818]],

          [[ 0.28985518, -0.33816412, -0.19323659,  ..., -0.46698871,
            -0.78904986,  0.33816436],
           [-1.11111104, -0.41867942, -0.54750401,  ..., -0.48309177,
            -1.12721407, -1.03059578],
           [-1.28824472, -0.54750401, -0.80515295,  ..., -0.17713353,
            -0.86956519, -1.17552328],
           ...,
           [ 0.93397754,  1.06280196,  1.20772982,  ...,  1.33655429,
             1.14331758,  0.83735919],
           [ 0.78904998,  0.85346222,  1.04669893,  ...,  1.14331758,
             1.19162667,  0.98228669],
           [ 0.88566834,  0.17713377,  0.35426742,  ...,  0.83735919,
             0.90177143,  1.07890511]],

          [[ 0.40629703, -0.26836565, -0.22338814,  ..., -0.35832080,
            -0.55322337,  0.48125952],
           [-0.92803597, -0.37331331, -0.56821585,  ..., -0.41829082,
            -0.91304344, -0.80809593],
           [-1.10794616, -0.53823084, -0.85307342,  ..., -0.19340314,
            -0.74812591, -1.01799107],
           ...,
           [ 0.28635699,  0.34632701,  0.52623707,  ...,  0.51124454,
             0.31634200,  0.09145443],
           [ 0.36131951,  0.34632701,  0.55622208,  ...,  0.27136448,
             0.34632701,  0.24137947],
           [ 0.69115460, -0.01349309,  0.18140946,  ...,  0.37631202,
             0.48125952,  0.75112462]]],


         [[[ 0.28095245, -0.35396814, -0.21111101,  ..., -0.43333322,
            -0.76666665,  0.32857150],
           [-1.11587298, -0.44920623, -0.59206349,  ..., -0.41746020,
            -1.09999990, -1.02063489],
           [-1.30634916, -0.59206349, -0.86190474,  ..., -0.06825387,
            -0.81428570, -1.17936504],
           ...,
           [ 0.94761908,  1.24920666,  1.42380977,  ...,  1.45555580,
             1.15396857,  0.80476195],
           [ 0.77301592,  0.97936511,  1.23333359,  ...,  1.18571460,
             1.13809550,  0.86825401],
           [ 0.85238099,  0.24920642,  0.50317466,  ...,  0.86825401,
             0.86825401,  0.99523818]],

          [[ 0.28985518, -0.33816412, -0.19323659,  ..., -0.46698871,
            -0.78904986,  0.33816436],
           [-1.11111104, -0.41867942, -0.54750401,  ..., -0.48309177,
            -1.12721407, -1.03059578],
           [-1.28824472, -0.54750401, -0.80515295,  ..., -0.17713353,
            -0.86956519, -1.17552328],
           ...,
           [ 0.93397754,  1.06280196,  1.20772982,  ...,  1.33655429,
             1.14331758,  0.83735919],
           [ 0.78904998,  0.85346222,  1.04669893,  ...,  1.14331758,
             1.19162667,  0.98228669],
           [ 0.88566834,  0.17713377,  0.35426742,  ...,  0.83735919,
             0.90177143,  1.07890511]],

          [[ 0.40629703, -0.26836565, -0.22338814,  ..., -0.35832080,
            -0.55322337,  0.48125952],
           [-0.92803597, -0.37331331, -0.56821585,  ..., -0.41829082,
            -0.91304344, -0.80809593],
           [-1.10794616, -0.53823084, -0.85307342,  ..., -0.19340314,
            -0.74812591, -1.01799107],
           ...,
           [ 0.28635699,  0.34632701,  0.52623707,  ...,  0.51124454,
             0.31634200,  0.09145443],
           [ 0.36131951,  0.34632701,  0.55622208,  ...,  0.27136448,
             0.34632701,  0.24137947],
           [ 0.69115460, -0.01349309,  0.18140946,  ...,  0.37631202,
             0.48125952,  0.75112462]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0719 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 4, vnnlib ID: 4 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.68809223, -12.13025570,  -6.63767338,  -9.10205269,  -6.98852253,
          -8.95999241,  -8.94991684,  -9.34213543, -12.00477028, -11.17362881]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [543]; unstable size 543; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 225, 1, 543] with unstable size 224 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 543] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 543] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [224]; unstable size 224; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 224] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 224] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.20494175,  3.45831966, -1.40828764,  1.23128557,  0.91527987,
          0.49897814,  1.02173901,  3.54240751,  2.59704590]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.68809223, -12.13025570,  -6.63767338,  -9.10205269,  -6.98852253,
          -8.95999241,  -8.94991684,  -9.34213543, -12.00477028, -11.17362881]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.68809223, -12.13025570,  -6.63767338,  -9.10205269,  -6.98852253,
           -8.95999241,  -8.94991684,  -9.34213543, -12.00477028, -11.17362881]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.35084915]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.45555562,  0.47142863,  0.50317466,  ...,  0.23333341,
             0.16984135, -0.06825387],
           [ 0.37619054,  0.55079371,  0.91587305,  ...,  0.39206356,
             0.59841275,  0.21746039],
           [ 0.47142863,  0.64603180,  0.70952386,  ...,  0.58253974,
             0.85238099,  0.82063496],
           ...,
           [ 0.32857150,  0.55079371,  0.18571436,  ..., -0.67142856,
            -1.22698402, -1.06825387],
           [ 0.47142863,  0.47142863,  0.21746039,  ..., -0.00476181,
            -1.14761901, -1.44920623],
           [ 0.45555562,  0.15396833, -0.11587292,  ...,  1.04285717,
             0.34444451, -0.54444444]],

          [[ 1.03059590,  1.09500813,  1.19162667,  ...,  1.12721443,
             0.96618366,  0.70853472],
           [ 1.03059590,  1.14331758,  1.28824508,  ...,  1.27214205,
             1.36876035,  0.98228669],
           [ 1.15942061,  1.22383285,  1.23993587,  ...,  1.38486338,
             1.54589403,  1.44927561],
           ...,
           [ 1.07890511,  1.28824508,  0.86956531,  ..., -0.70853460,
            -1.20772946, -0.96618354],
           [ 1.15942061,  1.22383285,  1.03059590,  ..., -0.19323659,
            -1.12721407, -1.33655393],
           [ 1.07890511,  0.93397754,  0.85346222,  ...,  0.99838978,
             0.28985518, -0.43478248]],

          [[ 0.10644694,  0.19640197,  0.42128953,  ..., -0.01349309,
             0.09145443, -0.31334329],
           [ 0.16641696,  0.45127454,  0.94602716,  ...,  0.19640197,
             0.75112462,  0.28635699],
           [ 0.16641696,  0.39130452,  0.48125952,  ...,  0.36131951,
             0.91604215,  1.03598225],
           ...,
           [ 0.06146942,  0.37631202,  0.07646193,  ..., -0.83808094,
            -1.27286363, -1.09295356],
           [ 0.19640197,  0.37631202, -0.11844061,  ..., -0.43328333,
            -1.27286363, -1.42278874],
           [ 0.25637197, -0.14842562, -0.73313338,  ...,  0.82608712,
            -0.02848560, -0.82308841]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0690 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 5, vnnlib ID: 5 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-2.08061361, -7.35808754, -1.52466714, -0.79548538, -0.38909817,
         -1.03977191, -3.36049914, -3.42065954, -6.66970348, -6.69352865]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [658]; unstable size 658; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 201, 1, 658] with unstable size 200 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 658] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 658] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [200]; unstable size 200; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 200] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 200] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.36226177,  5.20612240,  0.11421609, -0.45663390, -0.35881931,
          1.67416489,  1.85006571,  4.62576914,  5.01755619]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.08061361, -7.35808754, -1.52466714, -0.79548538, -0.38909817,
         -1.03977191, -3.36049914, -3.42065954, -6.66970348, -6.69352865]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.72007203, -6.67509556, -1.02529848, -0.02632031, -0.06467843,
          -0.23389345, -2.63078475, -2.87741232, -6.08596230, -5.98822784],
         [-1.72007203, -6.67509556, -1.02529848, -0.02632031, -0.06467843,
          -0.23389345, -2.63078475, -2.87741232, -6.08596230, -5.98822784]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.03835812,  0.16921502]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0111 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0786 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 6, vnnlib ID: 6 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.40164280,  -8.37019825, -13.00969315, -14.79013634, -13.45650959,
         -15.46328926, -15.14051628, -13.42083931,  -9.22426891, -11.21731853]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [529]; unstable size 529; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 193, 1, 529] with unstable size 192 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 529] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 529] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [192]; unstable size 192; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 192] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 192] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.41059232,  2.25627041,  3.81135964,  2.82651424,  4.25359440,
          4.02583885,  2.31334639, -1.35637212,  0.51038718]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.40164280,  -8.37019825, -13.00969315, -14.79013634, -13.45650959,
         -15.46328926, -15.14051628, -13.42083931,  -9.22426891, -11.21731853]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.40164471,  -8.37019730, -13.00969315, -14.79013538, -13.45650864,
          -15.46328926, -15.14051723, -13.42084026,  -9.22426891, -11.21731758],
         [ -9.40164471,  -8.37019730, -13.00969315, -14.79013538, -13.45650864,
          -15.46328926, -15.14051723, -13.42084026,  -9.22426891, -11.21731758]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-1.03144741, -0.17737579]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 0.55079371,  0.96349210,  0.82063496,  ..., -0.19523799,
            -0.21111101, -0.16349196],
           [ 0.21746039,  0.55079371, -0.21111101,  ..., -0.29047608,
            -0.30634910, -0.29047608],
           [ 0.01111121, -0.36984116, -0.40158719,  ..., -0.49682540,
            -0.48095238, -0.43333322],
           ...,
           [-0.62380952, -0.63968253, -0.65555555,  ..., -0.56031746,
            -0.54444444, -0.41746020],
           [-0.60793650, -0.65555555, -0.63968253,  ..., -0.52857143,
            -0.48095238, -0.36984116],
           [-0.56031746, -0.60793650, -0.62380952,  ..., -0.65555555,
            -0.59206349, -0.52857143]],

          [[ 0.61191636,  1.07890511,  0.98228669,  ..., -0.01610294,
            -0.01610294,  0.03220624],
           [ 0.12882459,  0.56360716, -0.12882435,  ..., -0.40257636,
            -0.41867942, -0.40257636],
           [-0.27375188, -0.57971013, -0.54750401,  ..., -1.06280184,
            -1.04669881, -1.01449275],
           ...,
           [-0.46698871, -0.48309177, -0.49919480,  ..., -0.46698871,
            -0.49919480, -0.45088565],
           [-0.45088565, -0.49919480, -0.48309177,  ..., -0.41867942,
            -0.43478248, -0.40257636],
           [-0.43478248, -0.48309177, -0.49919480,  ..., -0.49919480,
            -0.46698871, -0.45088565]],

          [[ 0.87106466,  1.38081002,  1.27586246,  ...,  0.27136448,
             0.24137947,  0.28635699],
           [ 0.30134949,  0.78110963,  0.13643195,  ..., -0.23838064,
            -0.23838064, -0.22338814],
           [-0.17841063, -0.37331331, -0.34332830,  ..., -1.09295356,
            -1.04797614, -0.98800600],
           ...,
           [-1.16791618, -1.18290865, -1.19790113,  ..., -1.15292358,
            -1.18290865, -1.12293863],
           [-1.15292358, -1.19790113, -1.19790113,  ..., -1.13793111,
            -1.12293863, -1.07796109],
           [-1.15292358, -1.18290865, -1.19790113,  ..., -1.22788620,
            -1.19790113, -1.16791618]]],


         [[[ 0.55079371,  0.96349210,  0.82063496,  ..., -0.19523799,
            -0.21111101, -0.16349196],
           [ 0.21746039,  0.55079371, -0.21111101,  ..., -0.29047608,
            -0.30634910, -0.29047608],
           [ 0.01111121, -0.36984116, -0.40158719,  ..., -0.49682540,
            -0.48095238, -0.43333322],
           ...,
           [-0.62380952, -0.63968253, -0.65555555,  ..., -0.56031746,
            -0.54444444, -0.41746020],
           [-0.60793650, -0.65555555, -0.63968253,  ..., -0.52857143,
            -0.48095238, -0.36984116],
           [-0.56031746, -0.60793650, -0.62380952,  ..., -0.65555555,
            -0.59206349, -0.52857143]],

          [[ 0.61191636,  1.07890511,  0.98228669,  ..., -0.01610294,
            -0.01610294,  0.03220624],
           [ 0.12882459,  0.56360716, -0.12882435,  ..., -0.40257636,
            -0.41867942, -0.40257636],
           [-0.27375188, -0.57971013, -0.54750401,  ..., -1.06280184,
            -1.04669881, -1.01449275],
           ...,
           [-0.46698871, -0.48309177, -0.49919480,  ..., -0.46698871,
            -0.49919480, -0.45088565],
           [-0.45088565, -0.49919480, -0.48309177,  ..., -0.41867942,
            -0.43478248, -0.40257636],
           [-0.43478248, -0.48309177, -0.49919480,  ..., -0.49919480,
            -0.46698871, -0.45088565]],

          [[ 0.87106466,  1.38081002,  1.27586246,  ...,  0.27136448,
             0.24137947,  0.28635699],
           [ 0.30134949,  0.78110963,  0.13643195,  ..., -0.23838064,
            -0.23838064, -0.22338814],
           [-0.17841063, -0.37331331, -0.34332830,  ..., -1.09295356,
            -1.04797614, -0.98800600],
           ...,
           [-1.16791618, -1.18290865, -1.19790113,  ..., -1.15292358,
            -1.18290865, -1.12293863],
           [-1.15292358, -1.19790113, -1.19790113,  ..., -1.13793111,
            -1.12293863, -1.07796109],
           [-1.15292358, -1.18290865, -1.19790113,  ..., -1.22788620,
            -1.19790113, -1.16791618]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0731 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 7, vnnlib ID: 7 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-7.00835705, -8.96086788, -3.69912124, -5.03624153, -2.68869019,
         -5.63221502, -2.51778221, -6.42361641, -8.76600933, -9.71107197]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [503]; unstable size 503; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 254, 1, 503] with unstable size 253 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 503] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 503] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [253]; unstable size 253; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 253] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 253] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.85433078,  4.63593197,  0.09867120,  1.33992791, -1.07176208,
          1.69816637,  1.94883561,  4.31601477,  5.46722841]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-7.00835705, -8.96086788, -3.69912124, -5.03624153, -2.68869019,
         -5.63221502, -2.51778221, -6.42361641, -8.76600933, -9.71107197]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.24038744,  -9.28610897,  -3.84454465,  -5.20589828,  -2.66719246,
           -5.68954802,  -3.06507778,  -6.37724495,  -8.96725273, -10.02994823]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.39788532]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0052 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0319 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 8, vnnlib ID: 8 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-13.93469334, -20.12154388, -17.33457947, -19.86049843, -20.21372986,
         -21.25618935, -22.65778542, -22.05707359, -17.64817047, -20.80877304]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1012]; unstable size 1012; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 127, 1, 1012] with unstable size 126 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 5, 1, 1012] with unstable size 4 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1012] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [126]; unstable size 126; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 5, 1, 126] with unstable size 4 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 126] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [4]; unstable size 4; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.23773289, 2.69126439, 5.14333248, 5.34886646, 6.31123543, 7.75378323,
         7.14196920, 2.92753410, 5.99536991]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0642 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 9, vnnlib ID: 9 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.80179358, -12.46501255,  -6.57853985,  -6.68956470,  -7.61111355,
          -7.23589230,  -7.87289953,  -9.75897789,  -7.54242992, -11.49101162]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [483]; unstable size 483; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 224, 1, 483] with unstable size 223 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 483] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 483] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [223]; unstable size 223; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 223] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 223] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.44218957,  3.89411879, -1.74409580, -0.80226833, -0.57978797,
         -0.20545280,  1.59700751, -1.08158159,  2.85933161]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.80179358, -12.46501255,  -6.57853985,  -6.68956470,  -7.61111355,
          -7.23589230,  -7.87289953,  -9.75897789,  -7.54242992, -11.49101162]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.80179310, -12.46501160,  -6.57853985,  -6.68956327,  -7.61111259,
           -7.23589230,  -7.87289858,  -9.75897694,  -7.54242992, -11.49100971],
         [ -7.80179310, -12.46501160,  -6.57853985,  -6.68956327,  -7.61111259,
           -7.23589230,  -7.87289858,  -9.75897694,  -7.54242992, -11.49100971]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.56590080, -0.65735245, -0.54632902,  0.37522030,  0.63700628,
           0.30653763]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0937 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 10, vnnlib ID: 10 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.70068169, -10.68916798,  -4.80894661,  -4.48129988,  -7.59597015,
          -3.34438372,  -9.78639984,  -5.25471544,  -8.97214031,  -9.17322254]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [326]; unstable size 326; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 99, 1, 326] with unstable size 98 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 8, 1, 326] with unstable size 7 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 326] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [98]; unstable size 98; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 8, 1, 98] with unstable size 7 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 98] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [7]; unstable size 7; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.76745200,  4.58752918, -0.99277103, -1.30379057,  1.80976796,
         -2.48497868,  3.87898970,  2.81910610,  3.04527569]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.70068169, -10.68916798,  -4.80894661,  -4.48129988,  -7.59597015,
          -3.34438372,  -9.78639984,  -5.25471544,  -8.97214031,  -9.17322254]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.70068073, -10.68916893,  -4.80894661,  -4.48130035,  -7.59597015,
           -3.34438372,  -9.78640079,  -5.25471544,  -8.97214031,  -9.17322254],
         [ -8.70068073, -10.68916893,  -4.80894661,  -4.48130035,  -7.59597015,
           -3.34438372,  -9.78640079,  -5.25471544,  -8.97214031,  -9.17322254]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.44576883, -0.77341509, -1.91033173]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           ...,
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.89365077,
            -1.90952384, -1.63968253],
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.96507931,
            -1.95714283, -1.96507931],
           [-1.97301579, -1.97301579, -1.94126987,  ..., -1.97301579,
            -1.97301579, -1.96507931]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           ...,
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.70692432,
            -1.77133656, -1.54589367],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.80354273,
            -1.81964576, -1.86795497],
           [-1.96457338, -1.96457338, -1.93236721,  ..., -1.86795497,
            -1.91626418, -1.93236721]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.60269880,
            -1.63268375, -1.39280367],
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.67766130,
            -1.68515754, -1.69265378],
           [-1.69265378, -1.69265378, -1.66266882,  ..., -1.69265378,
            -1.69265378, -1.69265378]]],


         [[[-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           ...,
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.89365077,
            -1.90952384, -1.63968253],
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.96507931,
            -1.95714283, -1.96507931],
           [-1.97301579, -1.97301579, -1.94126987,  ..., -1.97301579,
            -1.97301579, -1.96507931]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           ...,
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.70692432,
            -1.77133656, -1.54589367],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.80354273,
            -1.81964576, -1.86795497],
           [-1.96457338, -1.96457338, -1.93236721,  ..., -1.86795497,
            -1.91626418, -1.93236721]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.60269880,
            -1.63268375, -1.39280367],
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.67766130,
            -1.68515754, -1.69265378],
           [-1.69265378, -1.69265378, -1.66266882,  ..., -1.69265378,
            -1.69265378, -1.69265378]]],


         [[[-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           ...,
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.89365077,
            -1.90952384, -1.63968253],
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.96507931,
            -1.95714283, -1.96507931],
           [-1.97301579, -1.97301579, -1.94126987,  ..., -1.97301579,
            -1.97301579, -1.96507931]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           ...,
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.70692432,
            -1.77133656, -1.54589367],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.80354273,
            -1.81964576, -1.86795497],
           [-1.96457338, -1.96457338, -1.93236721,  ..., -1.86795497,
            -1.91626418, -1.93236721]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.60269880,
            -1.63268375, -1.39280367],
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.67766130,
            -1.68515754, -1.69265378],
           [-1.69265378, -1.69265378, -1.66266882,  ..., -1.69265378,
            -1.69265378, -1.69265378]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0769 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 11, vnnlib ID: 11 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.63478470, -9.97276974, -2.42177224, -5.98180294, -3.01294947,
         -6.49992609, -5.35868835, -6.09445810, -8.49534416, -9.48241520]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [507]; unstable size 507; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 253, 1, 507] with unstable size 252 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 507] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 507] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [252]; unstable size 252; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 252] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 252] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.93055749,  5.50861359,  2.43715620, -0.28564239,  2.95803738,
          1.64144301,  2.49058819,  4.06993961,  5.13847589]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.63478470, -9.97276974, -2.42177224, -5.98180294, -3.01294947,
         -6.49992609, -5.35868835, -6.09445810, -8.49534416, -9.48241520]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.44it/s]100%|██████████| 1/1 [00:00<00:00,  9.43it/s]
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/cuts/infered_cuts.py:406: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  torch.tensor(history[3]),
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.85260201, -9.94958401, -2.69204354, -5.95113659, -2.83771229,
          -6.45710039, -5.35251665, -5.97749758, -8.52292919, -9.41183758]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.14566875]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1086 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 26.60955047607422
alpha/beta optimization time: 3.7567336559295654
initial alpha-crown bounds: tensor([[ 2.00031996,  5.62875366,  2.49428272, -0.20550358,  3.01036191,
          1.72182727,  2.55286360,  4.16995430,  5.23668909]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.20550358295440674
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 196.06734657287598
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 196.067307472229
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 196.06721258163452
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 196.06717228889465
Verifying property 3 with 1 instances.
##### Instance 11 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.20550358]], device='cuda:0') need to verify.
Model prediction is: tensor([-5.63478470, -9.97276974, -2.42177224, -5.98180294, -3.01294947,
        -6.49992609, -5.35868835, -6.09445810, -8.49534416, -9.48241520],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.20550358]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 507
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 252
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 782
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00015211105346679688
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20550286769866943
10 lb beta sum: 0.0, worst -0.2055041790008545
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.5785    transfer 0.0001    finalize 0.0003    func 0.5792    
Accumulated time: func 0.5792    prepare 0.0002    bound 0.5785    transfer 0.0001    finalize 0.0003    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 41] 
split level 1: [/input-12, 35] 
split level 2: [/input-12, 45] 
split level 3: [/input-12, 58] 
split level 4: [/input-12, 61] 
split level 5: [/input-12, 80] 
split level 6: [/input-12, 4] 
split level 7: [/input-12, 40] 
split level 8: [/input, 377] 
split level 9: [/input, 392] 
split level 10: [/input, 393] 
split level 11: [/input-8, 443] 
split level 12: [/input, 444] 
split level 13: [/input-12, 60] 
split level 14: [/input-8, 1749] 
split level 15: [/input-8, 1443] 
split level 16: [/input-8, 2042] 
split level 17: [/input-8, 1411] 
split level 18: [/input-8, 1323] 
split level 19: [/input-8, 1260] 
split level 20: [/input, 344] 
split level 21: [/input-8, 881] 
split level 22: [/input-8, 1964] 
split level 23: [/input, 343] 
split level 24: [/input-8, 1436] 
split level 25: [/input-8, 465] 
split level 26: [/input-8, 1388] 
split level 27: [/input-8, 818] 
split level 28: [/input-8, 2043] 
split level 29: [/input-8, 585] 
split level 30: [/input-8, 1251] 
split level 31: [/input-8, 2044] 
split level 32: [/input-8, 265] 
split level 33: [/input, 428] 
split level 34: [/input-8, 273] 
split level 35: [/input-8, 1389] 
split level 36: [/input, 378] 
split level 37: [/input-8, 497] 
split level 38: [/input-12, 99] 
split level 39: [/input-8, 292] 
split level 40: [/input-8, 423] 
split level 41: [/input-8, 115] 
split level 42: [/input-8, 1747] 
split level 43: [/input, 327] 
split level 44: [/input-8, 2032] 
split level 45: [/input-8, 848] 
split level 46: [/input-8, 610] 
split level 47: [/input-8, 849] 
split level 48: [/input, 425] 
split level 49: [/input, 380] 
split level 50: [/input-8, 1410] 
split level 51: [/input, 3161] 
split level 52: [/input, 3493] 
split level 53: [/input-8, 1493] 
split level 54: [/input-8, 1865] 
split level 55: [/input-8, 282] 
split level 56: [/input-8, 1428] 
split level 57: [/input, 3163] 
split level 58: [/input-8, 1873] 
split level 59: [/input-8, 288] 
split level 60: [/input-8, 2040] 
split level 61: [/input-8, 83] 
split level 62: [/input-8, 1741] 
split level 63: [/input-8, 469] 
split level 64: [/input, 87] 
split level 65: [/input, 2412] 
split level 66: [/input, 2166] 
split level 67: [/input, 3178] 
split level 68: [/input-8, 1386] 
split level 69: [/input, 1602] 
split level 70: [/input, 3400] 
split level 71: [/input, 1612] 
split level 72: [/input-8, 1739] 
split level 73: [/input, 329] 
split level 74: [/input, 3479] 
split level 75: [/input-8, 1437] 
split level 76: [/input, 3130] 
split level 77: [/input, 1318] 
split level 78: [/input, 3158] 
split level 79: [/input, 2164] 
split level 80: [/input, 2236] 
split level 81: [/input, 2180] 
split level 82: [/input-8, 407] 
split level 83: [/input, 3461] 
split level 84: [/input, 2181] 
split level 85: [/input, 3157] 
split level 86: [/input-8, 1442] 
split level 87: [/input-8, 883] 
split level 88: [/input-8, 278] 
split level 89: [/input, 3172] 
split level 90: [/input, 103] 
split level 91: [/input, 3927] 
split level 92: [/input, 1302] 
split level 93: [/input, 1460] 
split level 94: [/input-8, 518] 
split level 95: [/input-8, 1014] 
split level 96: [/input-8, 1772] 
split level 97: [/input, 119] 
split level 98: [/input, 1448] 
split level 99: [/input, 139] 
split level 100: [/input, 1579] 
split level 101: [/input-8, 1758] 
split level 102: [/input, 3181] 
split level 103: [/input-8, 1119] 
split level 104: [/input-8, 2041] 
split level 105: [/input, 2091] 
split level 106: [/input, 364] 
split level 107: [/input, 1370] 
split level 108: [/input, 3528] 
split level 109: [/input, 1462] 
split level 110: [/input-8, 1731] 
split level 111: [/input, 3475] 
split level 112: [/input, 3148] 
split level 113: [/input-8, 1132] 
split level 114: [/input-8, 1730] 
split level 115: [/input, 373] 
split level 116: [/input-8, 398] 
split level 117: [/input, 2134] 
split level 118: [/input, 3114] 
split level 119: [/input, 3971] 
split level 120: [/input-8, 1979] 
split level 121: [/input-8, 521] 
split level 122: [/input-8, 1334] 
split level 123: [/input, 1561] 
split level 124: [/input, 1562] 
split level 125: [/input, 3507] 
split level 126: [/input, 3367] 
split level 127: [/input, 1578] 
split level 128: [/input, 3384] 
split level 129: [/input, 385] 
split level 130: [/input, 1336] 
split level 131: [/input, 132] 
split level 132: [/input, 2397] 
split level 133: [/input, 3398] 
split level 134: [/input, 1396] 
split level 135: [/input, 1586] 
split level 136: [/input, 3972] 
split level 137: [/input, 2302] 
split level 138: [/input, 3508] 
split level 139: [/input, 3383] 
split level 140: [/input, 2331] 
split level 141: [/input, 442] 
split level 142: [/input, 1386] 
split level 143: [/input-8, 1006] 
split level 144: [/input, 3145] 
split level 145: [/input, 1563] 
split level 146: [/input, 2385] 
split level 147: [/input-8, 1732] 
split level 148: [/input, 3351] 
split level 149: [/input, 547] 
split level 150: [/input, 2347] 
split level 151: [/input, 2136] 
split level 152: [/input, 3143] 
split level 153: [/input, 1335] 
split level 154: [/input, 3196] 
split level 155: [/input-8, 912] 
split level 156: [/input, 1485] 
split level 157: [/input, 2137] 
split level 158: [/input, 3205] 
split level 159: [/input, 695] 
split level 160: [/input, 325] 
split level 161: [/input, 3214] 
split level 162: [/input, 1354] 
split level 163: [/input, 1413] 
split level 164: [/input, 3397] 
split level 165: [/input, 2364] 
split level 166: [/input, 1596] 
split level 167: [/input, 1421] 
split level 168: [/input, 3142] 
split level 169: [/input, 2981] 
split level 170: [/input, 2163] 
split level 171: [/input, 2627] 
split level 172: [/input, 3940] 
split level 173: [/input-8, 485] 
split level 174: [/input, 71] 
split level 175: [/input, 2227] 
split level 176: [/input, 3529] 
split level 177: [/input, 2245] 
split level 178: [/input, 1342] 
split level 179: [/input, 1746] 
split level 180: [/input, 570] 
split level 181: [/input, 2286] 
split level 182: [/input, 633] 
split level 183: [/input, 569] 
split level 184: [/input, 1720] 
split level 185: [/input, 3190] 
split level 186: [/input, 3221] 
split level 187: [/input, 3156] 
split level 188: [/input-8, 2047] 
split level 189: [/input, 553] 
split level 190: [/input, 1382] 
split level 191: [/input, 3490] 
split level 192: [/input, 2382] 
split level 193: [/input, 1326] 
split level 194: [/input, 370] 
split level 195: [/input, 3334] 
split level 196: [/input, 3222] 
split level 197: [/input, 3364] 
split level 198: [/input, 2299] 
split level 199: [/input, 3339] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20536822080612183
10 lb beta sum: 0.0, worst -0.20536208152770996
Time: prepare 0.0118    bound 0.1899    transfer 0.0035    finalize 0.0030    func 0.2108    
Accumulated time: func 0.7900    prepare 0.0221    bound 0.7684    transfer 0.0036    finalize 0.0033    
all_split False
======================Cut inference begins======================
max lb tensor(0.14420724) min lb tensor(-0.20535761)
Number of Verified Splits: 2 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.014482498168945312 
BICCOS Cumulative time: 0.014482498168945312
Preprocessing time: 0.012128114700317383 Inference time: 0.0019404888153076172 Add cuts time: 0.00011396408081054688 Cut analysis time: 0.0002999305725097656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19871 (1), -0.19860 (1), -0.19856 (1), -0.19850 (1), -0.19802 (1), -0.19793 (1), -0.19790 (1), -0.19784 (1), -0.19784 (1), -0.19732 (1), -0.19726 (1), -0.19718 (1), -0.19706 (1), -0.19678 (1), -0.19572 (1), -0.19522 (1), -0.19506 (1), -0.19442 (1), -0.19420 (1), -0.19400 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5736    set_bounds 0.0085    solve 0.2109    add 0.0676    
Accumulated time: pickout 0.0004    decision 0.5736    set_bounds 0.0085    solve 0.2109    add 0.0676    
Current (lb-rhs): -0.198708176612854
50 domains visited
Cumulative time: 1.4892754554748535

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 41] [/input-12, 45] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 45] [/input-12, 41] 
split level 1: [/input-12, 45] [/input-12, 58] [/input-12, 58] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 58] [/input-12, 45] 
split level 2: [/input-12, 58] [/input-12, 61] [/input-12, 61] [/input-12, 58] [/input-12, 61] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 61] [/input-12, 61] 
split level 3: [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 61] [/input-12, 4] [/input-12, 4] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18420135974884033
10 lb beta sum: 0.3620595335960388, worst -0.180566668510437
Time: prepare 0.0082    bound 1.2322    transfer 0.0015    finalize 0.0025    func 1.2470    
Accumulated time: func 2.0371    prepare 0.0306    bound 2.0006    transfer 0.0052    finalize 0.0057    
all_split False
======================Cut inference begins======================
max lb tensor(0.19709539) min lb tensor(-0.18055838)
Number of Verified Splits: 62 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 10
#cuts >= 20: 0
BICCOS time: 0.015503644943237305 
BICCOS Cumulative time: 0.029986143112182617
Preprocessing time: 0.011404037475585938 Inference time: 0.002388477325439453 Add cuts time: 0.0012898445129394531 Cut analysis time: 0.00042128562927246094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07107 (2), -0.07020 (2), -0.07010 (2), -0.06970 (2), -0.06961 (2), -0.06954 (2), -0.06947 (2), -0.06936 (2), -0.06896 (2), -0.06886 (2), -0.06861 (2), -0.06836 (2), -0.06817 (2), -0.06790 (2), -0.06783 (2), -0.06765 (2), -0.06741 (2), -0.06646 (2), -0.06587 (2), -0.06522 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0221    set_bounds 0.0117    solve 1.2471    add 0.0817    
Accumulated time: pickout 0.0015    decision 0.5957    set_bounds 0.0202    solve 1.4580    add 0.1493    
Current (lb-rhs): -0.07107190787792206
100 domains visited
Cumulative time: 2.868756055831909

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 35] [/input-12, 35] [/input-12, 41] [/input-12, 41] [/input-12, 45] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 45] [/input-12, 41] 
split level 1: [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 58] [/input-12, 45] [/input-12, 45] [/input-12, 35] [/input-12, 58] [/input-12, 35] 
split level 2: [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 58] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] 
split level 3: [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 61] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07283663749694824
10 lb beta sum: 0.7891350388526917, worst -0.011321961879730225
Time: prepare 0.0082    bound 0.1165    transfer 0.0017    finalize 0.0022    func 0.1319    
Accumulated time: func 2.1690    prepare 0.0390    bound 2.1171    transfer 0.0068    finalize 0.0080    
all_split False
======================Cut inference begins======================
max lb tensor(0.60021657) min lb tensor(0.00030100)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 10
#cuts >= 20: 0
BICCOS time: 0.037154436111450195 
BICCOS Cumulative time: 0.06714057922363281
Preprocessing time: 0.01172780990600586 Inference time: 0.01650547981262207 Add cuts time: 0.00858616828918457 Cut analysis time: 0.0003349781036376953
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0197    set_bounds 0.0152    solve 0.1321    add 0.0196    
Accumulated time: pickout 0.0026    decision 0.6154    set_bounds 0.0354    solve 1.5901    add 0.1689    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([58, 41, 35]), tensor([-1., -1., -1.]), tensor([0, 0, 0]), tensor([6.89211736e-15, 6.79244697e-02, 1.18854940e-01]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([58, 41, 35]), tensor([-1., -1.,  1.]), tensor([0, 0, 0]), tensor([6.89211736e-15, 6.79244697e-02, 4.85816374e-02]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([58, 41]), tensor([-1.,  1.]), tensor([0, 0]), tensor([6.89211736e-15, 1.73319861e-01]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([58,  4, 41]), tensor([ 1., -1., -1.]), tensor([0, 0, 0]), tensor([1.99082177e-16, 9.56282169e-02, 1.06057458e-01]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([58,  4, 41]), tensor([ 1., -1.,  1.]), tensor([0, 0, 0]), tensor([1.99082177e-16, 9.56282169e-02, 1.73189506e-01]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([58,  4]), tensor([1., 1.]), tensor([0, 0]), tensor([1.99082177e-16, 2.47698743e-02]), tensor([0, 1]))}
Shallow branching resets to n domains:  6
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1509079933166504
10 lb beta sum: 0.8215807676315308, worst -0.031397074460983276
Time: prepare 0.0005    bound 0.1181    transfer 0.0001    finalize 0.0002    func 0.1189    
Accumulated time: func 2.2879    prepare 0.0395    bound 2.2352    transfer 0.0070    finalize 0.0082    
After pruning, left:  1

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 41] 
split level 1: [/input-12, 35] 
split level 2: [/input-12, 45] 
split level 3: [/input-12, 61] 
split level 4: [/input-12, 80] 
split level 5: [/input-12, 40] 
split level 6: [/input, 393] 
split level 7: [/input-8, 1411] 
cut re-enabled after branching node selection
0 lb beta sum: 2.149303913116455, worst -0.024674445390701294
10 lb beta sum: 2.149303913116455, worst -0.024505823850631714
Time: prepare 0.0136    bound 0.1210    transfer 0.0005    finalize 0.0013    func 0.1381    
Accumulated time: func 2.4260    prepare 0.0536    bound 2.3561    transfer 0.0075    finalize 0.0094    
all_split False
======================Cut inference begins======================
max lb tensor(1.91298103) min lb tensor(-0.02444032)
Number of Verified Splits: 252 of 256
Stop inferencing: Max iteration reached.
Total number of valid cuts: 10.
#cuts 1-3: 10
#cuts >= 20: 0
BICCOS time: 0.00038433074951171875 
BICCOS Cumulative time: 0.06752490997314453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02444 (8), -0.02071 (8), -0.01977 (8), -0.01604 (8), 
Length of domains: 4
Time: pickout 0.0004    decision 0.0218    set_bounds 0.0294    solve 0.1382    add 0.0007    
Accumulated time: pickout 0.0031    decision 0.6372    set_bounds 0.0648    solve 1.7283    add 0.1696    
Current (lb-rhs): -0.02444031834602356
104 domains visited
Cumulative time: 3.421278953552246

BaB round 2
batch: 4
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 392] [/input, 377] [/input, 392] [/input, 377] 
split level 1: [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] 
split level 2: [/input-8, 1251] [/input-8, 1251] [/input-8, 1251] [/input-8, 1251] 
split level 3: [/input-8, 2043] [/input-8, 2043] [/input-8, 2043] [/input-8, 2043] 
split level 4: [/input, 428] [/input, 378] [/input, 428] [/input, 378] 
split level 5: [/input, 378] [/input, 428] [/input, 378] [/input, 428] 
cut re-enabled after branching node selection
0 lb beta sum: 2.149303913116455, worst -0.009554833173751831
10 lb beta sum: 2.149303913116455, worst -0.009325891733169556
Time: prepare 0.0132    bound 0.1140    transfer 0.0005    finalize 0.0013    func 0.1307    
Accumulated time: func 2.5567    prepare 0.0671    bound 2.4702    transfer 0.0080    finalize 0.0107    
all_split False
======================Cut inference begins======================
max lb tensor(0.01326975) min lb tensor(-0.00924578)
Number of Verified Splits: 207 of 256
Stop inferencing: Max iteration reached.
Total number of valid cuts: 10.
#cuts 1-3: 10
#cuts >= 20: 0
BICCOS time: 0.0003807544708251953 
BICCOS Cumulative time: 0.06790566444396973
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00925 (14), -0.00907 (14), -0.00883 (14), -0.00865 (14), -0.00808 (14), -0.00790 (14), -0.00784 (14), -0.00767 (14), -0.00766 (14), -0.00748 (14), -0.00742 (14), -0.00725 (14), -0.00668 (14), -0.00650 (14), -0.00626 (14), -0.00608 (14), -0.00468 (14), -0.00462 (14), -0.00452 (14), -0.00450 (14), 
Length of domains: 49
Time: pickout 0.0013    decision 0.0201    set_bounds 0.0260    solve 0.1308    add 0.0010    
Accumulated time: pickout 0.0043    decision 0.6573    set_bounds 0.0908    solve 1.8591    add 0.1705    
Current (lb-rhs): -0.00924578309059143
153 domains visited
Cumulative time: 3.602261543273926

BaB round 3
batch: 49
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 392] [/input, 377] [/input, 392] [/input, 392] [/input, 377] [/input, 392] [/input, 377] [/input, 392] [/input, 377] [/input, 392] 
split level 1: [/input-8, 610] [/input-8, 1389] [/input-8, 610] [/input-8, 292] [/input-8, 1389] [/input-8, 292] [/input-8, 1389] [/input-8, 610] [/input-8, 1389] [/input-8, 610] 
split level 2: [/input-8, 292] [/input-8, 610] [/input-8, 292] [/input-8, 610] [/input-8, 610] [/input-8, 610] [/input-8, 610] [/input-8, 292] [/input-8, 610] [/input-8, 292] 
cut re-enabled after branching node selection
0 lb beta sum: 2.149303674697876, worst -0.0016181766986846924
10 lb beta sum: 2.149303674697876, worst -0.0014869272708892822
Time: prepare 0.0200    bound 0.1217    transfer 0.0007    finalize 0.0020    func 0.1470    
Accumulated time: func 2.7037    prepare 0.0872    bound 2.5919    transfer 0.0087    finalize 0.0127    
all_split False
======================Cut inference begins======================
max lb tensor(0.01651087) min lb tensor(-0.00143889)
Number of Verified Splits: 376 of 392
Stop inferencing: Max iteration reached.
Total number of valid cuts: 10.
#cuts 1-3: 10
#cuts >= 20: 0
BICCOS time: 0.00039315223693847656 
BICCOS Cumulative time: 0.0682988166809082
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00144 (17), -0.00126 (17), -0.00091 (17), -0.00081 (17), -0.00074 (17), -0.00066 (17), -0.00064 (17), -0.00053 (17), -0.00048 (17), -0.00035 (17), -0.00029 (17), -0.00024 (17), -0.00012 (17), -0.00006 (17), -0.00006 (17), -0.00003 (17), 
Length of domains: 16
Time: pickout 0.0017    decision 0.0173    set_bounds 0.0327    solve 0.1471    add 0.0009    
Accumulated time: pickout 0.0060    decision 0.6746    set_bounds 0.1235    solve 2.0062    add 0.1714    
Current (lb-rhs): -0.0014388859272003174
169 domains visited
Cumulative time: 3.8046820163726807

BaB round 4
batch: 16
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 2042] [/input-8, 2042] [/input-8, 2042] [/input-8, 2042] [/input-8, 2042] [/input-8, 2042] [/input-8, 2042] [/input-8, 2042] [/input-8, 2042] [/input-8, 2042] 
split level 1: [/input-8, 1389] [/input-8, 1389] [/input-8, 1389] [/input-8, 1389] [/input-8, 1389] [/input-8, 1389] [/input-8, 1389] [/input-8, 1389] [/input-8, 1389] [/input-8, 1389] 
split level 2: [/input, 327] [/input, 327] [/input, 327] [/input, 327] [/input, 327] [/input, 327] [/input, 327] [/input, 327] [/input, 327] [/input, 327] 
split level 3: [/input-8, 1410] [/input-8, 1410] [/input-8, 1410] [/input-8, 1410] [/input-8, 1410] [/input-8, 1410] [/input-8, 1410] [/input-8, 1410] [/input-8, 1410] [/input-8, 1410] 
cut re-enabled after branching node selection
0 lb beta sum: 2.149303913116455, worst 0.00602838397026062

all verified at 0th iter
Time: prepare 0.0132    bound 0.0045    transfer 0.0005    finalize 0.0012    func 0.0210    
Accumulated time: func 2.7247    prepare 0.1006    bound 2.5964    transfer 0.0091    finalize 0.0138    
all_split False
======================Cut inference begins======================
max lb tensor(0.01785752) min lb tensor(0.00602838)
Number of Verified Splits: 256 of 256
Stop inferencing: Max iteration reached.
Total number of valid cuts: 10.
#cuts 1-3: 10
#cuts >= 20: 0
BICCOS time: 0.00035572052001953125 
BICCOS Cumulative time: 0.06865453720092773
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0014    decision 0.0141    set_bounds 0.0230    solve 0.0210    add 0.0001    
Accumulated time: pickout 0.0075    decision 0.6887    set_bounds 0.1465    solve 2.0273    add 0.1714    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
169 domains visited
Cumulative time: 3.8658392429351807


Properties batch 4, size 1
Remaining timeout: 192.0109667778015
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 192.0108892917633
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 192.01086497306824
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 192.01083135604858
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 192.01080918312073
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 7.9893 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 12, vnnlib ID: 12 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.60971117, -6.54356766, -3.77449369, -4.58758783, -5.85971212,
         -3.70617151, -9.49713802, -3.95379829, -6.54922104, -5.37819719]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [436]; unstable size 436; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 114, 1, 436] with unstable size 113 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 436] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 436] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [113]; unstable size 113; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 113] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 113] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 6.80846214e-01,  1.01449513e+00, -8.60395074e-01,  3.58939171e-03,
          1.15603185e+00, -9.08453584e-01,  4.73845720e+00,  1.30274689e+00,
          2.83696055e-01]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.60971117, -6.54356766, -3.77449369, -4.58758783, -5.85971212,
         -3.70617151, -9.49713802, -3.95379829, -6.54922104, -5.37819719]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.60971117, -6.54356766, -3.77449417, -4.58758783, -5.85971165,
          -3.70617199, -9.49713802, -3.95379782, -6.54922009, -5.37819719],
         [-5.60971117, -6.54356766, -3.77449417, -4.58758783, -5.85971165,
          -3.70617199, -9.49713802, -3.95379782, -6.54922009, -5.37819719]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.17930365, -0.24762583]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 0.56666672,  0.66190481,  0.64603180,  ...,  0.24920642,
             0.26507944,  0.21746039],
           [ 0.43968260,  0.53492069,  0.51904768,  ...,  0.29682547,
             0.29682547,  0.24920642],
           [ 0.34444451,  0.39206356,  0.39206356,  ...,  0.32857150,
             0.34444451,  0.29682547],
           ...,
           [-1.83015871, -1.73492062, -1.73492062,  ..., -0.51269841,
            -0.52857143, -0.60793650],
           [-1.87777781, -1.81428576, -1.81428576,  ..., -0.52857143,
            -0.51269841, -0.52857143],
           [-1.90952384, -1.89365077, -1.87777781,  ..., -0.56031746,
            -0.59206349, -0.54444444]],

          [[ 1.15942061,  1.20772982,  1.19162667,  ...,  0.95008057,
             0.96618366,  0.91787446],
           [ 1.09500813,  1.12721443,  1.09500813,  ...,  0.98228669,
             0.99838978,  0.93397754],
           [ 0.99838978,  1.03059590,  1.01449287,  ...,  0.98228669,
             0.99838978,  0.95008057],
           ...,
           [-1.72302747, -1.57809973, -1.61030602,  ..., -0.06441211,
            -0.01610294, -0.09661824],
           [-1.80354273, -1.72302747, -1.73913050,  ..., -0.03220600,
            -0.01610294, -0.04830906],
           [-1.83574879, -1.81964576, -1.80354273,  ..., -0.06441211,
            -0.08051517, -0.04830906]],

          [[ 1.62069011,  1.62069011,  1.60569763,  ...,  1.50075006,
             1.51574254,  1.47076499],
           [ 1.59070504,  1.59070504,  1.56072009,  ...,  1.53073502,
             1.54572761,  1.48575759],
           [ 1.51574254,  1.51574254,  1.50075006,  ...,  1.50075006,
             1.51574254,  1.47076499],
           ...,
           [-1.49775124, -1.37781119, -1.39280367,  ..., -0.55322337,
            -0.61319339, -0.70314842],
           [-1.55772126, -1.49775124, -1.49775124,  ..., -0.56821585,
            -0.61319339, -0.58320838],
           [-1.58770621, -1.57271373, -1.55772126,  ..., -0.65817088,
            -0.71814090, -0.61319339]]],


         [[[ 0.56666672,  0.66190481,  0.64603180,  ...,  0.24920642,
             0.26507944,  0.21746039],
           [ 0.43968260,  0.53492069,  0.51904768,  ...,  0.29682547,
             0.29682547,  0.24920642],
           [ 0.34444451,  0.39206356,  0.39206356,  ...,  0.32857150,
             0.34444451,  0.29682547],
           ...,
           [-1.83015871, -1.73492062, -1.73492062,  ..., -0.51269841,
            -0.52857143, -0.60793650],
           [-1.87777781, -1.81428576, -1.81428576,  ..., -0.52857143,
            -0.51269841, -0.52857143],
           [-1.90952384, -1.89365077, -1.87777781,  ..., -0.56031746,
            -0.59206349, -0.54444444]],

          [[ 1.15942061,  1.20772982,  1.19162667,  ...,  0.95008057,
             0.96618366,  0.91787446],
           [ 1.09500813,  1.12721443,  1.09500813,  ...,  0.98228669,
             0.99838978,  0.93397754],
           [ 0.99838978,  1.03059590,  1.01449287,  ...,  0.98228669,
             0.99838978,  0.95008057],
           ...,
           [-1.72302747, -1.57809973, -1.61030602,  ..., -0.06441211,
            -0.01610294, -0.09661824],
           [-1.80354273, -1.72302747, -1.73913050,  ..., -0.03220600,
            -0.01610294, -0.04830906],
           [-1.83574879, -1.81964576, -1.80354273,  ..., -0.06441211,
            -0.08051517, -0.04830906]],

          [[ 1.62069011,  1.62069011,  1.60569763,  ...,  1.50075006,
             1.51574254,  1.47076499],
           [ 1.59070504,  1.59070504,  1.56072009,  ...,  1.53073502,
             1.54572761,  1.48575759],
           [ 1.51574254,  1.51574254,  1.50075006,  ...,  1.50075006,
             1.51574254,  1.47076499],
           ...,
           [-1.49775124, -1.37781119, -1.39280367,  ..., -0.55322337,
            -0.61319339, -0.70314842],
           [-1.55772126, -1.49775124, -1.49775124,  ..., -0.56821585,
            -0.61319339, -0.58320838],
           [-1.58770621, -1.57271373, -1.55772126,  ..., -0.65817088,
            -0.71814090, -0.61319339]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0886 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 13, vnnlib ID: 13 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.31652355, -10.39834499, -14.53281593, -16.07817841, -15.67444897,
         -18.01647186, -16.02903366, -17.28762436, -10.97990608, -12.63942242]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [677]; unstable size 677; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 165, 1, 677] with unstable size 164 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 677] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 677] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [164]; unstable size 164; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 164] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 164] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.35580778,  2.29579639,  4.09076548,  3.52531242,  5.89760590,
          4.21795750,  5.18644333, -0.70376444,  1.22269154]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.31652355, -10.39834499, -14.53281593, -16.07817841, -15.67444897,
         -18.01647186, -16.02903366, -17.28762436, -10.97990608, -12.63942242]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.31652260, -10.39834595, -14.53281403, -16.07817841, -15.67444897,
          -18.01647186, -16.02903175, -17.28762627, -10.97990513, -12.63942051],
         [-10.31652260, -10.39834595, -14.53281403, -16.07817841, -15.67444897,
          -18.01647186, -16.02903175, -17.28762627, -10.97990513, -12.63942051]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.08182335,  0.58155918]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[0.45555562, 0.40793657, 0.42380959,  ..., 0.75714290,
            0.74126989, 0.70952386],
           [0.47142863, 0.42380959, 0.43968260,  ..., 0.72539687,
            0.69365084, 0.66190481],
           [0.53492069, 0.50317466, 0.55079371,  ..., 0.70952386,
            0.69365084, 0.66190481],
           ...,
           [0.63015878, 0.64603180, 0.66190481,  ..., 0.64603180,
            0.67777783, 0.66190481],
           [0.64603180, 0.61428577, 0.59841275,  ..., 0.63015878,
            0.64603180, 0.66190481],
           [0.72539687, 0.66190481, 0.63015878,  ..., 0.63015878,
            0.59841275, 0.64603180]],

          [[0.48309189, 0.43478271, 0.45088577,  ..., 0.75684386,
            0.72463775, 0.69243163],
           [0.49919492, 0.45088577, 0.46698883,  ..., 0.70853472,
            0.67632860, 0.64412248],
           [0.56360716, 0.53140104, 0.57971025,  ..., 0.69243163,
            0.67632860, 0.64412248],
           ...,
           [0.61191636, 0.62801939, 0.64412248,  ..., 0.62801939,
            0.66022551, 0.64412248],
           [0.62801939, 0.59581327, 0.57971025,  ..., 0.61191636,
            0.62801939, 0.64412248],
           [0.70853472, 0.64412248, 0.61191636,  ..., 0.61191636,
            0.57971025, 0.62801939]],

          [[0.66116959, 0.61619210, 0.63118458,  ..., 0.76611710,
            0.81109464, 0.79610211],
           [0.67616212, 0.63118458, 0.64617711,  ..., 0.76611710,
            0.78110963, 0.75112462],
           [0.73613209, 0.70614707, 0.75112462,  ..., 0.79610211,
            0.78110963, 0.75112462],
           ...,
           [0.66116959, 0.67616212, 0.72113961,  ..., 0.73613209,
            0.76611710, 0.75112462],
           [0.67616212, 0.64617711, 0.66116959,  ..., 0.72113961,
            0.73613209, 0.75112462],
           [0.75112462, 0.69115460, 0.69115460,  ..., 0.72113961,
            0.69115460, 0.73613209]]],


         [[[0.45555562, 0.40793657, 0.42380959,  ..., 0.75714290,
            0.74126989, 0.70952386],
           [0.47142863, 0.42380959, 0.43968260,  ..., 0.72539687,
            0.69365084, 0.66190481],
           [0.53492069, 0.50317466, 0.55079371,  ..., 0.70952386,
            0.69365084, 0.66190481],
           ...,
           [0.63015878, 0.64603180, 0.66190481,  ..., 0.64603180,
            0.67777783, 0.66190481],
           [0.64603180, 0.61428577, 0.59841275,  ..., 0.63015878,
            0.64603180, 0.66190481],
           [0.72539687, 0.66190481, 0.63015878,  ..., 0.63015878,
            0.59841275, 0.64603180]],

          [[0.48309189, 0.43478271, 0.45088577,  ..., 0.75684386,
            0.72463775, 0.69243163],
           [0.49919492, 0.45088577, 0.46698883,  ..., 0.70853472,
            0.67632860, 0.64412248],
           [0.56360716, 0.53140104, 0.57971025,  ..., 0.69243163,
            0.67632860, 0.64412248],
           ...,
           [0.61191636, 0.62801939, 0.64412248,  ..., 0.62801939,
            0.66022551, 0.64412248],
           [0.62801939, 0.59581327, 0.57971025,  ..., 0.61191636,
            0.62801939, 0.64412248],
           [0.70853472, 0.64412248, 0.61191636,  ..., 0.61191636,
            0.57971025, 0.62801939]],

          [[0.66116959, 0.61619210, 0.63118458,  ..., 0.76611710,
            0.81109464, 0.79610211],
           [0.67616212, 0.63118458, 0.64617711,  ..., 0.76611710,
            0.78110963, 0.75112462],
           [0.73613209, 0.70614707, 0.75112462,  ..., 0.79610211,
            0.78110963, 0.75112462],
           ...,
           [0.66116959, 0.67616212, 0.72113961,  ..., 0.73613209,
            0.76611710, 0.75112462],
           [0.67616212, 0.64617711, 0.66116959,  ..., 0.72113961,
            0.73613209, 0.75112462],
           [0.75112462, 0.69115460, 0.69115460,  ..., 0.72113961,
            0.69115460, 0.73613209]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0751 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 14, vnnlib ID: 14 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.58788013, -3.57877111, -7.49758530, -6.42473507, -6.46546555,
         -7.68810511, -6.21870279, -6.45115232, -5.74132729, -1.41073096]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [534]; unstable size 534; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 186, 1, 534] with unstable size 185 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 534] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 534] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [185]; unstable size 185; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 185] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 185] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.82803488, 1.00371790, 4.58163691, 3.52479601, 3.45554519, 4.66323185,
         3.15355444, 3.39953947, 2.80839324]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0651 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 15, vnnlib ID: 15 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-3.55321646, -5.81442928, -1.99641812,  0.06207272, -0.82771432,
          0.04142630, -2.41349435, -1.42710316, -5.66043377, -4.60286999]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [492]; unstable size 492; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 188, 1, 492] with unstable size 187 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 492] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 492] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [187]; unstable size 187; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 187] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 187] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.35873795,  4.47410488,  0.94619083,  0.06511021, -0.33263898,
          1.83395362,  0.21094537,  4.77025223,  3.27124619]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.55321646, -5.81442928, -1.99641812,  0.06207272, -0.82771432,
          0.04142630, -2.41349435, -1.42710316, -5.66043377, -4.60286999]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.96010399, -6.20732403, -2.32285213, -0.28913876, -1.16081107,
          -0.13703477, -2.92448115, -1.63956416, -6.15403843, -4.97522259]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.15210399]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0064 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0669 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 16, vnnlib ID: 16 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.37839031, -13.42577553,  -6.48252678,  -7.11965179,  -6.67908382,
          -7.55561876,  -7.39423037,  -8.94825554, -12.10931110, -13.00597000]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [788]; unstable size 788; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 362, 1, 788] with unstable size 361 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 788] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 788] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [361]; unstable size 361; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 361] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 361] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.24375176,  3.81155252, -1.93120444, -1.85189080, -0.03242296,
         -1.13493133,  0.07367361,  2.53733778,  3.71830559]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.37839031, -13.42577553,  -6.48252678,  -7.11965179,  -6.67908382,
          -7.55561876,  -7.39423037,  -8.94825554, -12.10931110, -13.00597000]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.37839031, -13.42577457,  -6.48252583,  -7.11965132,  -6.67908287,
           -7.55561876,  -7.39422894,  -8.94825554, -12.10931206, -13.00597095],
         [-10.37839031, -13.42577457,  -6.48252583,  -7.11965132,  -6.67908287,
           -7.55561876,  -7.39422894,  -8.94825554, -12.10931206, -13.00597095]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.63712549, -0.44056845,  0.43596745,  0.27457762]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-0.59206349, -0.57619047, -0.54444444,  ..., -1.27460313,
            -1.17936504, -1.05238092],
           [-0.54444444, -0.54444444, -0.51269841,  ..., -1.21111107,
            -1.17936504, -0.94126981],
           [-0.52857143, -0.56031746, -0.52857143,  ..., -1.29047608,
            -1.21111107, -0.90952379],
           ...,
           [-0.35396814, -0.35396814, -0.33809513,  ...,  0.05873025,
             0.09047628,  0.02698422],
           [-0.33809513, -0.32222211, -0.30634910,  ...,  0.15396833,
             0.23333341,  0.24920642],
           [-0.36984116, -0.30634910, -0.35396814,  ...,  0.21746039,
             0.24920642,  0.24920642]],

          [[-0.70853460, -0.69243151, -0.66022539,  ..., -1.25603855,
            -1.19162631, -1.07890499],
           [-0.66022539, -0.66022539, -0.62801927,  ..., -1.19162631,
            -1.19162631, -0.98228657],
           [-0.66022539, -0.67632848, -0.64412236,  ..., -1.27214170,
            -1.22383249, -0.95008045],
           ...,
           [-0.46698871, -0.46698871, -0.45088565,  ..., -0.06441211,
            -0.03220600, -0.09661824],
           [-0.43478248, -0.41867942, -0.38647330,  ...,  0.03220624,
             0.11272153,  0.12882459],
           [-0.45088565, -0.37037024, -0.38647330,  ...,  0.09661847,
             0.14492765,  0.12882459]],

          [[-0.74812591, -0.73313338, -0.68815589,  ..., -1.01799107,
            -0.95802099, -0.95802099],
           [-0.70314842, -0.70314842, -0.67316341,  ..., -0.95802099,
            -0.95802099, -0.86806595],
           [-0.70314842, -0.71814090, -0.68815589,  ..., -1.03298354,
            -0.98800600, -0.82308841],
           ...,
           [-0.46326834, -0.44827583, -0.44827583,  ..., -0.07346311,
            -0.04347810, -0.10344811],
           [-0.43328333, -0.41829082, -0.40329832,  ...,  0.01649191,
             0.09145443,  0.10644694],
           [-0.47826082, -0.40329832, -0.43328333,  ...,  0.04647692,
             0.09145443,  0.07646193]]],


         [[[-0.59206349, -0.57619047, -0.54444444,  ..., -1.27460313,
            -1.17936504, -1.05238092],
           [-0.54444444, -0.54444444, -0.51269841,  ..., -1.21111107,
            -1.17936504, -0.94126981],
           [-0.52857143, -0.56031746, -0.52857143,  ..., -1.29047608,
            -1.21111107, -0.90952379],
           ...,
           [-0.35396814, -0.35396814, -0.33809513,  ...,  0.05873025,
             0.09047628,  0.02698422],
           [-0.33809513, -0.32222211, -0.30634910,  ...,  0.15396833,
             0.23333341,  0.24920642],
           [-0.36984116, -0.30634910, -0.35396814,  ...,  0.21746039,
             0.24920642,  0.24920642]],

          [[-0.70853460, -0.69243151, -0.66022539,  ..., -1.25603855,
            -1.19162631, -1.07890499],
           [-0.66022539, -0.66022539, -0.62801927,  ..., -1.19162631,
            -1.19162631, -0.98228657],
           [-0.66022539, -0.67632848, -0.64412236,  ..., -1.27214170,
            -1.22383249, -0.95008045],
           ...,
           [-0.46698871, -0.46698871, -0.45088565,  ..., -0.06441211,
            -0.03220600, -0.09661824],
           [-0.43478248, -0.41867942, -0.38647330,  ...,  0.03220624,
             0.11272153,  0.12882459],
           [-0.45088565, -0.37037024, -0.38647330,  ...,  0.09661847,
             0.14492765,  0.12882459]],

          [[-0.74812591, -0.73313338, -0.68815589,  ..., -1.01799107,
            -0.95802099, -0.95802099],
           [-0.70314842, -0.70314842, -0.67316341,  ..., -0.95802099,
            -0.95802099, -0.86806595],
           [-0.70314842, -0.71814090, -0.68815589,  ..., -1.03298354,
            -0.98800600, -0.82308841],
           ...,
           [-0.46326834, -0.44827583, -0.44827583,  ..., -0.07346311,
            -0.04347810, -0.10344811],
           [-0.43328333, -0.41829082, -0.40329832,  ...,  0.01649191,
             0.09145443,  0.10644694],
           [-0.47826082, -0.40329832, -0.43328333,  ...,  0.04647692,
             0.09145443,  0.07646193]]],


         [[[-0.59206349, -0.57619047, -0.54444444,  ..., -1.27460313,
            -1.17936504, -1.05238092],
           [-0.54444444, -0.54444444, -0.51269841,  ..., -1.21111107,
            -1.17936504, -0.94126981],
           [-0.52857143, -0.56031746, -0.52857143,  ..., -1.29047608,
            -1.21111107, -0.90952379],
           ...,
           [-0.35396814, -0.35396814, -0.33809513,  ...,  0.05873025,
             0.09047628,  0.02698422],
           [-0.33809513, -0.32222211, -0.30634910,  ...,  0.15396833,
             0.23333341,  0.24920642],
           [-0.36984116, -0.30634910, -0.35396814,  ...,  0.21746039,
             0.24920642,  0.24920642]],

          [[-0.70853460, -0.69243151, -0.66022539,  ..., -1.25603855,
            -1.19162631, -1.07890499],
           [-0.66022539, -0.66022539, -0.62801927,  ..., -1.19162631,
            -1.19162631, -0.98228657],
           [-0.66022539, -0.67632848, -0.64412236,  ..., -1.27214170,
            -1.22383249, -0.95008045],
           ...,
           [-0.46698871, -0.46698871, -0.45088565,  ..., -0.06441211,
            -0.03220600, -0.09661824],
           [-0.43478248, -0.41867942, -0.38647330,  ...,  0.03220624,
             0.11272153,  0.12882459],
           [-0.45088565, -0.37037024, -0.38647330,  ...,  0.09661847,
             0.14492765,  0.12882459]],

          [[-0.74812591, -0.73313338, -0.68815589,  ..., -1.01799107,
            -0.95802099, -0.95802099],
           [-0.70314842, -0.70314842, -0.67316341,  ..., -0.95802099,
            -0.95802099, -0.86806595],
           [-0.70314842, -0.71814090, -0.68815589,  ..., -1.03298354,
            -0.98800600, -0.82308841],
           ...,
           [-0.46326834, -0.44827583, -0.44827583,  ..., -0.07346311,
            -0.04347810, -0.10344811],
           [-0.43328333, -0.41829082, -0.40329832,  ...,  0.01649191,
             0.09145443,  0.10644694],
           [-0.47826082, -0.40329832, -0.43328333,  ...,  0.04647692,
             0.09145443,  0.07646193]]],


         [[[-0.59206349, -0.57619047, -0.54444444,  ..., -1.27460313,
            -1.17936504, -1.05238092],
           [-0.54444444, -0.54444444, -0.51269841,  ..., -1.21111107,
            -1.17936504, -0.94126981],
           [-0.52857143, -0.56031746, -0.52857143,  ..., -1.29047608,
            -1.21111107, -0.90952379],
           ...,
           [-0.35396814, -0.35396814, -0.33809513,  ...,  0.05873025,
             0.09047628,  0.02698422],
           [-0.33809513, -0.32222211, -0.30634910,  ...,  0.15396833,
             0.23333341,  0.24920642],
           [-0.36984116, -0.30634910, -0.35396814,  ...,  0.21746039,
             0.24920642,  0.24920642]],

          [[-0.70853460, -0.69243151, -0.66022539,  ..., -1.25603855,
            -1.19162631, -1.07890499],
           [-0.66022539, -0.66022539, -0.62801927,  ..., -1.19162631,
            -1.19162631, -0.98228657],
           [-0.66022539, -0.67632848, -0.64412236,  ..., -1.27214170,
            -1.22383249, -0.95008045],
           ...,
           [-0.46698871, -0.46698871, -0.45088565,  ..., -0.06441211,
            -0.03220600, -0.09661824],
           [-0.43478248, -0.41867942, -0.38647330,  ...,  0.03220624,
             0.11272153,  0.12882459],
           [-0.45088565, -0.37037024, -0.38647330,  ...,  0.09661847,
             0.14492765,  0.12882459]],

          [[-0.74812591, -0.73313338, -0.68815589,  ..., -1.01799107,
            -0.95802099, -0.95802099],
           [-0.70314842, -0.70314842, -0.67316341,  ..., -0.95802099,
            -0.95802099, -0.86806595],
           [-0.70314842, -0.71814090, -0.68815589,  ..., -1.03298354,
            -0.98800600, -0.82308841],
           ...,
           [-0.46326834, -0.44827583, -0.44827583,  ..., -0.07346311,
            -0.04347810, -0.10344811],
           [-0.43328333, -0.41829082, -0.40329832,  ...,  0.01649191,
             0.09145443,  0.10644694],
           [-0.47826082, -0.40329832, -0.43328333,  ...,  0.04647692,
             0.09145443,  0.07646193]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0856 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 17, vnnlib ID: 17 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.48207045,  -2.39753056,  -9.58371258, -10.52106094,  -9.25177765,
         -11.82708836, -10.46574306, -11.05204582,  -6.78091049,  -5.65733051]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [502]; unstable size 502; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 254, 1, 502] with unstable size 253 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 502] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 502] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [253]; unstable size 253; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 253] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 253] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.89075279, 4.35961151, 5.77320862, 4.46269035, 6.95126104, 5.95177650,
         6.24257994, 2.54485893, 2.28885150]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0282 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 18, vnnlib ID: 18 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-13.97675323, -17.08073425,  -8.92278004, -11.53713417,  -9.34353065,
         -11.19538307,  -8.12182331, -11.58376312, -17.60232544, -15.83768177]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [512]; unstable size 512; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 260, 1, 512] with unstable size 259 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 512] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 512] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [259]; unstable size 259; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 259] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 259] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.63812375,  6.80160236, -0.75694132,  2.17035389, -0.29967880,
          1.59824872,  1.65513229,  7.41604710,  5.91091442]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-13.97675323, -17.08073425,  -8.92278004, -11.53713417,  -9.34353065,
         -11.19538307,  -8.12182331, -11.58376312, -17.60232544, -15.83768177]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-14.56005764, -18.10161591,  -9.57238865, -12.55412483, -10.26584530,
          -12.21403694,  -9.57373428, -12.60732460, -18.38806343, -16.88108253],
         [-14.56005764, -18.10161591,  -9.57238865, -12.55412483, -10.26584530,
          -12.21403694,  -9.57373428, -12.60732460, -18.38806343, -16.88108253]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.00134563,  0.69211102]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0058 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0724 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 19, vnnlib ID: 19 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.67748737, -15.99068165,  -8.99268341,  -7.79347992,  -8.35536575,
          -8.22471714,  -9.16943359, -11.52655983, -13.26644325, -15.81279469]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [547]; unstable size 547; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 260, 1, 547] with unstable size 259 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 547] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 547] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [259]; unstable size 259; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 259] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 259] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.43207598,  6.44367409,  0.19957781, -0.46666598,  0.09526151,
          0.46659350,  2.60346079,  3.93457651,  6.28853273]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.67748737, -15.99068165,  -8.99268341,  -7.79347992,  -8.35536575,
          -8.22471714,  -9.16943359, -11.52655983, -13.26644325, -15.81279469]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-12.68204021, -16.05737877,  -8.96092319,  -8.17651176,  -8.15779305,
           -8.62596226,  -9.30371189, -11.61334324, -13.34238148, -16.04029083]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.01871872]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0052 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0728 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 20, vnnlib ID: 20 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.99751091, -10.60476208,  -5.80764198,  -6.15668106,  -6.26862431,
          -6.07673597,  -4.08238983,  -8.79667854,  -9.22789669, -10.72688580]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [601]; unstable size 601; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 287, 1, 601] with unstable size 286 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 601] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 601] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [286]; unstable size 286; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 286] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 286] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.22418499, 4.25854826, 0.62012935, 0.93473387, 0.88097048, 0.60569513,
         2.78608942, 3.20536137, 4.78958368]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0643 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 21, vnnlib ID: 21 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.39633656, -10.81733418,  -8.14680481,  -7.67903614,  -8.47020626,
          -6.77577496, -10.40852451,  -8.02430439, -10.83304310,  -9.56988335]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [512]; unstable size 512; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 172, 1, 512] with unstable size 171 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 512] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 512] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [171]; unstable size 171; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 171] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 171] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.18678737, 2.55919075, 0.31564885, 0.61779261, 0.64823699, 2.52021646,
         0.37382305, 2.55972433, 1.61684656]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0634 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 22, vnnlib ID: 22 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.61524105, -12.71203899, -11.56439686, -11.98183823, -11.60697556,
         -12.97468090, -12.19276619, -14.18572140,  -5.67168808, -12.38231468]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [599]; unstable size 599; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 173, 1, 599] with unstable size 172 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 599] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 599] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [172]; unstable size 172; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 172] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 172] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.42892766, 5.35214710, 4.30807924, 4.89422417, 4.33142805, 5.69092751,
         5.16717815, 6.89458752, 4.89000034]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0766 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 23, vnnlib ID: 23 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.84393740, -7.84841537, -4.07208776, -2.13655066, -4.59707069,
         -1.22025633, -5.05424547, -3.93261433, -4.29843807, -6.48314619]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [499]; unstable size 499; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 185, 1, 499] with unstable size 184 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 499] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 499] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [184]; unstable size 184; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 184] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 184] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.94525361, 4.37971687, 1.50863910, 0.51084423, 2.10668659, 2.74752998,
         1.74771583, 1.16706753, 3.61705399]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0481 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 24, vnnlib ID: 24 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.95971680,  -7.97020435, -11.66736698, -13.97354507, -12.17215443,
         -15.07821083, -12.78244114, -14.01900578, -10.50253868, -10.70786572]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [778]; unstable size 778; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 305, 1, 778] with unstable size 304 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 778] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 778] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [304]; unstable size 304; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 304] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 304] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.83722782,  1.20715809,  3.54842615,  1.72621632,  4.45857334,
          2.37408066,  3.37173080,  0.75684643,  1.53906155]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.95971680,  -7.97020435, -11.66736698, -13.97354507, -12.17215443,
         -15.07821083, -12.78244114, -14.01900578, -10.50253868, -10.70786572]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.26it/s]100%|██████████| 1/1 [00:00<00:00,  9.25it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.18222904,  -8.04493713, -10.81180954, -13.20889759, -11.28295040,
          -14.31022644, -12.04443455, -13.26400185,  -9.93011951, -10.47806263]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.13729191]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1106 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 19.560543060302734
alpha/beta optimization time: 1.1964800357818604
initial alpha-crown bounds: tensor([[-0.67048359,  1.36126328,  3.71650028,  1.91702271,  4.64379406,
          2.51711750,  3.56975937,  0.87808800,  1.62748027]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.6704835891723633
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.651691198349
Verifying property 0 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.67048359]], device='cuda:0') need to verify.
Model prediction is: tensor([ -8.95971680,  -7.97020435, -11.66736698, -13.97354507, -12.17215443,
        -15.07821083, -12.78244114, -14.01900578, -10.50253868, -10.70786572],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.67048359]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 778
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 300
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 1101
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00012063980102539062
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6704778671264648
10 lb beta sum: 0.0, worst -0.6704912185668945
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0528    transfer 0.0001    finalize 0.0001    func 0.0533    
Accumulated time: func 0.0533    prepare 0.0002    bound 0.0528    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 10] 
split level 1: [/input-12, 51] 
split level 2: [/input-12, 60] 
split level 3: [/input-12, 13] 
split level 4: [/input-12, 1] 
split level 5: [/input-12, 4] 
split level 6: [/input-12, 36] 
split level 7: [/input-12, 92] 
split level 8: [/input-12, 45] 
split level 9: [/input-12, 33] 
split level 10: [/input-12, 93] 
split level 11: [/input-12, 37] 
split level 12: [/input-8, 1511] 
split level 13: [/input-8, 683] 
split level 14: [/input-8, 670] 
split level 15: [/input-12, 90] 
split level 16: [/input-8, 1880] 
split level 17: [/input-8, 1045] 
split level 18: [/input-8, 1503] 
split level 19: [/input-8, 1446] 
split level 20: [/input-8, 1875] 
split level 21: [/input-8, 677] 
split level 22: [/input-8, 603] 
split level 23: [/input-8, 1883] 
split level 24: [/input-8, 1964] 
split level 25: [/input-8, 1509] 
split level 26: [/input-8, 986] 
split level 27: [/input-8, 158] 
split level 28: [/input-8, 1018] 
split level 29: [/input-12, 80] 
split level 30: [/input-8, 1626] 
split level 31: [/input-8, 987] 
split level 32: [/input-8, 811] 
split level 33: [/input-8, 988] 
split level 34: [/input-8, 1750] 
split level 35: [/input-8, 989] 
split level 36: [/input-8, 1315] 
split level 37: [/input-8, 1069] 
split level 38: [/input-8, 1425] 
split level 39: [/input-8, 1738] 
split level 40: [/input-8, 1055] 
split level 41: [/input-8, 981] 
split level 42: [/input, 363] 
split level 43: [/input-8, 1020] 
split level 44: [/input-8, 1737] 
split level 45: [/input-8, 1017] 
split level 46: [/input-8, 1447] 
split level 47: [/input-8, 1019] 
split level 48: [/input, 3468] 
split level 49: [/input, 396] 
split level 50: [/input-8, 102] 
split level 51: [/input-8, 1375] 
split level 52: [/input-8, 82] 
split level 53: [/input-8, 1251] 
split level 54: [/input, 2518] 
split level 55: [/input, 1767] 
split level 56: [/input-8, 633] 
split level 57: [/input, 1733] 
split level 58: [/input, 2531] 
split level 59: [/input, 2440] 
split level 60: [/input-8, 1745] 
split level 61: [/input, 332] 
split level 62: [/input-8, 1494] 
split level 63: [/input, 3271] 
split level 64: [/input-8, 944] 
split level 65: [/input, 1418] 
split level 66: [/input, 3483] 
split level 67: [/input, 3306] 
split level 68: [/input-8, 1985] 
split level 69: [/input-8, 1052] 
split level 70: [/input-8, 1062] 
split level 71: [/input, 1766] 
split level 72: [/input, 2504] 
split level 73: [/input-8, 1421] 
split level 74: [/input, 1420] 
split level 75: [/input-8, 81] 
split level 76: [/input, 3304] 
split level 77: [/input, 1750] 
split level 78: [/input-8, 1132] 
split level 79: [/input, 2519] 
split level 80: [/input, 395] 
split level 81: [/input, 390] 
split level 82: [/input-8, 952] 
split level 83: [/input, 854] 
split level 84: [/input-8, 1279] 
split level 85: [/input, 2538] 
split level 86: [/input-8, 1454] 
split level 87: [/input, 3256] 
split level 88: [/input, 2517] 
split level 89: [/input-8, 1419] 
split level 90: [/input-8, 937] 
split level 91: [/input, 1749] 
split level 92: [/input, 3704] 
split level 93: [/input, 1436] 
split level 94: [/input-8, 969] 
split level 95: [/input, 2185] 
split level 96: [/input-8, 1021] 
split level 97: [/input-8, 1331] 
split level 98: [/input, 2530] 
split level 99: [/input-8, 1867] 
split level 100: [/input-8, 1322] 
split level 101: [/input, 1809] 
split level 102: [/input, 3688] 
split level 103: [/input, 3302] 
split level 104: [/input, 2539] 
split level 105: [/input-8, 950] 
split level 106: [/input, 2182] 
split level 107: [/input-8, 1986] 
split level 108: [/input, 1754] 
split level 109: [/input, 3669] 
split level 110: [/input, 2198] 
split level 111: [/input, 1753] 
split level 112: [/input, 3222] 
split level 113: [/input, 162] 
split level 114: [/input-8, 454] 
split level 115: [/input, 3305] 
split level 116: [/input, 3577] 
split level 117: [/input-8, 1477] 
split level 118: [/input-8, 1739] 
split level 119: [/input, 1768] 
split level 120: [/input, 4003] 
split level 121: [/input, 3026] 
split level 122: [/input, 3283] 
split level 123: [/input, 2454] 
split level 124: [/input-8, 1987] 
split level 125: [/input-8, 1984] 
split level 126: [/input, 1405] 
split level 127: [/input, 2536] 
split level 128: [/input, 1778] 
split level 129: [/input-8, 1131] 
split level 130: [/input, 2400] 
split level 131: [/input, 3308] 
split level 132: [/input-8, 1559] 
split level 133: [/input, 1779] 
split level 134: [/input, 1670] 
split level 135: [/input, 2515] 
split level 136: [/input, 3226] 
split level 137: [/input-8, 455] 
split level 138: [/input, 2166] 
split level 139: [/input, 3281] 
split level 140: [/input, 3765] 
split level 141: [/input, 3284] 
split level 142: [/input, 3275] 
split level 143: [/input-8, 1988] 
split level 144: [/input, 1780] 
split level 145: [/input, 1746] 
split level 146: [/input, 1827] 
split level 147: [/input-8, 945] 
split level 148: [/input, 1769] 
split level 149: [/input, 1841] 
split level 150: [/input, 1771] 
split level 151: [/input, 1842] 
split level 152: [/input, 1745] 
split level 153: [/input, 3689] 
split level 154: [/input, 1748] 
split level 155: [/input, 1747] 
split level 156: [/input, 3784] 
split level 157: [/input-8, 1935] 
split level 158: [/input, 3708] 
split level 159: [/input-8, 1361] 
split level 160: [/input, 3707] 
split level 161: [/input, 3723] 
split level 162: [/input, 3274] 
split level 163: [/input, 1858] 
split level 164: [/input, 654] 
split level 165: [/input, 376] 
split level 166: [/input, 1770] 
split level 167: [/input-8, 970] 
split level 168: [/input, 242] 
split level 169: [/input, 3042] 
split level 170: [/input, 3257] 
split level 171: [/input, 3685] 
split level 172: [/input-8, 1934] 
split level 173: [/input, 2206] 
split level 174: [/input, 3796] 
split level 175: [/input-8, 905] 
split level 176: [/input, 1099] 
split level 177: [/input-8, 1241] 
split level 178: [/input, 3028] 
split level 179: [/input, 3455] 
split level 180: [/input, 1810] 
split level 181: [/input, 3280] 
split level 182: [/input, 1857] 
split level 183: [/input, 2673] 
split level 184: [/input, 2124] 
split level 185: [/input, 1811] 
split level 186: [/input, 3794] 
split level 187: [/input-8, 1271] 
split level 188: [/input-8, 1332] 
split level 189: [/input, 4032] 
split level 190: [/input, 2550] 
split level 191: [/input, 282] 
split level 192: [/input, 3795] 
split level 193: [/input, 1083] 
split level 194: [/input, 1781] 
split level 195: [/input, 2497] 
split level 196: [/input, 1773] 
split level 197: [/input, 3190] 
split level 198: [/input, 399] 
split level 199: [/input, 3044] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6703672409057617
10 lb beta sum: 0.0, worst -0.6703090667724609
Time: prepare 0.0119    bound 0.0980    transfer 0.0034    finalize 0.0034    func 0.1193    
Accumulated time: func 0.1726    prepare 0.0221    bound 0.1508    transfer 0.0035    finalize 0.0035    
all_split False
======================Cut inference begins======================
max lb tensor(0.11183643) min lb tensor(-0.67029858)
Number of Verified Splits: 2 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.010627269744873047 
BICCOS Cumulative time: 0.010627269744873047
Preprocessing time: 0.010233402252197266 Inference time: 0.00011372566223144531 Add cuts time: 5.650520324707031e-05 Cut analysis time: 0.00022363662719726562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.65138 (1), -0.65053 (1), -0.65005 (1), -0.64936 (1), -0.64913 (1), -0.64889 (1), -0.64859 (1), -0.64808 (1), -0.64770 (1), -0.64758 (1), -0.64749 (1), -0.64668 (1), -0.64646 (1), -0.64573 (1), -0.64560 (1), -0.64385 (1), -0.64293 (1), -0.64214 (1), -0.64028 (1), -0.63981 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5074    set_bounds 0.0089    solve 0.1194    add 0.0705    
Accumulated time: pickout 0.0003    decision 0.5074    set_bounds 0.0089    solve 0.1194    add 0.0705    
Current (lb-rhs): -0.6513795852661133
50 domains visited
Cumulative time: 0.7783443927764893

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 60] [/input-12, 10] 
split level 1: [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 60] [/input-12, 60] [/input-12, 1] [/input-12, 60] 
split level 2: [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 92] [/input-12, 36] [/input-12, 36] [/input-12, 1] 
split level 3: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 36] [/input-12, 92] [/input-12, 92] [/input-12, 92] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6120367050170898
10 lb beta sum: 0.4563993215560913, worst -0.6018972396850586
Time: prepare 0.0078    bound 0.1171    transfer 0.0007    finalize 0.0024    func 0.1307    
Accumulated time: func 0.3033    prepare 0.0302    bound 0.2679    transfer 0.0042    finalize 0.0059    
all_split False
======================Cut inference begins======================
max lb tensor(0.59052938) min lb tensor(-0.60187626)
Number of Verified Splits: 15 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.013779878616333008 
BICCOS Cumulative time: 0.024407148361206055
Preprocessing time: 0.012002229690551758 Inference time: 0.00066375732421875 Add cuts time: 0.00030159950256347656 Cut analysis time: 0.0008122920989990234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.35769 (2), -0.35668 (2), -0.35612 (2), -0.35604 (2), -0.35302 (2), -0.34871 (2), -0.34845 (2), -0.34840 (2), -0.34406 (2), -0.34060 (2), -0.34003 (2), -0.33913 (2), -0.33798 (2), -0.33387 (2), -0.33289 (2), -0.33288 (2), -0.32865 (2), -0.32167 (2), -0.30974 (2), -0.30425 (2), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0200    set_bounds 0.0131    solve 0.1308    add 0.0795    
Accumulated time: pickout 0.0014    decision 0.5274    set_bounds 0.0220    solve 0.2502    add 0.1501    
Current (lb-rhs): -0.35769495368003845
100 domains visited
Cumulative time: 1.0369184017181396

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] 
split level 1: [/input-12, 60] [/input-12, 1] [/input-12, 60] [/input-12, 60] [/input-12, 1] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] 
split level 2: [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 1] [/input-12, 36] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 36] 
split level 3: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 36] [/input-12, 36] [/input-12, 92] [/input-12, 92] [/input-12, 92] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.36708736419677734
10 lb beta sum: 0.6616358757019043, worst -0.33893150091171265
Time: prepare 0.0070    bound 0.1192    transfer 0.0007    finalize 0.0026    func 0.1329    
Accumulated time: func 0.4362    prepare 0.0375    bound 0.3872    transfer 0.0049    finalize 0.0085    
all_split False
======================Cut inference begins======================
max lb tensor(0.51649868) min lb tensor(-0.33490920)
Number of Verified Splits: 146 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.021579742431640625 
BICCOS Cumulative time: 0.04598689079284668
Preprocessing time: 0.011757373809814453 Inference time: 0.00731658935546875 Add cuts time: 0.002225160598754883 Cut analysis time: 0.00028061866760253906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19697 (3), -0.19668 (3), -0.19636 (3), -0.19627 (3), -0.19614 (3), -0.19425 (3), -0.19422 (3), -0.19403 (3), -0.19374 (3), -0.19361 (3), -0.19048 (3), -0.18996 (3), -0.18650 (3), -0.18538 (3), -0.18479 (3), -0.18465 (3), -0.18265 (3), -0.18218 (3), -0.18077 (3), -0.18072 (3), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0198    set_bounds 0.0156    solve 0.1330    add 0.0948    
Accumulated time: pickout 0.0024    decision 0.5472    set_bounds 0.0376    solve 0.3831    add 0.2449    
Current (lb-rhs): -0.19697311520576477
150 domains visited
Cumulative time: 1.3230400085449219

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] 
split level 1: [/input-12, 1] [/input-12, 36] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 92] [/input-12, 36] [/input-12, 1] [/input-12, 13] [/input-12, 13] 
split level 2: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 36] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] 
split level 3: [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2262563705444336
10 lb beta sum: 1.0351078510284424, worst -0.1755179762840271
Time: prepare 0.0075    bound 0.1189    transfer 0.0007    finalize 0.0024    func 0.1323    
Accumulated time: func 0.5684    prepare 0.0452    bound 0.5061    transfer 0.0056    finalize 0.0109    
all_split False
======================Cut inference begins======================
max lb tensor(0.38974848) min lb tensor(-0.16945858)
Number of Verified Splits: 82 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 6
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.01838397979736328 
BICCOS Cumulative time: 0.06437087059020996
Preprocessing time: 0.011998891830444336 Inference time: 0.003941535949707031 Add cuts time: 0.0020170211791992188 Cut analysis time: 0.0004265308380126953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04860 (4), -0.04844 (4), -0.04777 (4), -0.04756 (4), -0.04702 (4), -0.04560 (4), -0.04309 (4), -0.04218 (4), -0.04049 (4), -0.03967 (4), -0.03769 (4), -0.03714 (4), -0.03555 (4), -0.03503 (4), -0.03455 (4), -0.03320 (4), -0.03255 (4), -0.03071 (4), -0.03035 (4), -0.02993 (4), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0199    set_bounds 0.0160    solve 0.1324    add 0.2180    
Accumulated time: pickout 0.0034    decision 0.5670    set_bounds 0.0537    solve 0.5155    add 0.4629    
Current (lb-rhs): -0.04860091209411621
200 domains visited
Cumulative time: 1.7290692329406738

Shallow-BaB round 5
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] 
split level 1: [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] 
split level 2: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 36] [/input-12, 36] [/input-12, 92] [/input-12, 92] [/input-12, 36] 
split level 3: [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10876846313476562
10 lb beta sum: 0.930968165397644, worst -0.04405488818883896
Time: prepare 0.0079    bound 1.3867    transfer 0.0019    finalize 0.0023    func 1.4017    
Accumulated time: func 1.9701    prepare 0.0534    bound 1.8928    transfer 0.0075    finalize 0.0132    
all_split False
======================Cut inference begins======================
max lb tensor(0.27566078) min lb tensor(-0.03860244)
Number of Verified Splits: 322 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 6
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.037912845611572266 
BICCOS Cumulative time: 0.10228371620178223
Preprocessing time: 0.01238870620727539 Inference time: 0.016399383544921875 Add cuts time: 0.008272647857666016 Cut analysis time: 0.0008521080017089844
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0197    set_bounds 0.0165    solve 1.4018    add 0.0290    
Accumulated time: pickout 0.0045    decision 0.5868    set_bounds 0.0702    solve 1.9174    add 0.4920    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
200 domains visited
No domains left, MTS early stop!
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([60,  1, 92, 10]), tensor([-1., -1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([-5.34986170e-21,  1.51938334e-01,  7.39085525e-02,  2.82328159e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([60,  1, 92, 10]), tensor([-1., -1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([-5.34986170e-21,  1.51938334e-01,  7.39085525e-02,  2.74011213e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([60,  1, 92, 36]), tensor([-1., -1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([-5.34986170e-21,  1.51938334e-01,  9.21280831e-02,  6.43639714e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([60,  1, 92, 36, 10]), tensor([-1., -1.,  1.,  1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([-5.34986170e-21,  1.51938334e-01,  9.21280831e-02,  1.51122704e-01,
         2.53468871e-01]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([60,  1, 92, 36, 10]), tensor([-1., -1.,  1.,  1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([-5.34986170e-21,  1.51938334e-01,  9.21280831e-02,  1.51122704e-01,
         9.37013514e-03]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([60,  1, 36]), tensor([-1.,  1., -1.]), tensor([0, 0, 0]), tensor([-5.34986170e-21,  1.22622713e-01,  5.79719990e-02]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([60,  1, 36, 10]), tensor([-1.,  1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([-5.34986170e-21,  1.22622713e-01,  1.53265342e-01,  2.85434306e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([60,  1, 36, 10]), tensor([-1.,  1.,  1.,  1.]), tensor([0, 0, 0, 0]), tensor([-5.34986170e-21,  1.22622713e-01,  1.53265342e-01,  2.94137020e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([60, 10]), tensor([ 1., -1.]), tensor([0, 0]), tensor([-5.34986170e-21,  7.32263327e-01]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([60, 10]), tensor([1., 1.]), tensor([0, 0]), tensor([-5.34986170e-21,  2.96440590e-02]), tensor([0, 1]))}
Shallow branching resets to n domains:  10
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5184717178344727
10 lb beta sum: 0.8191571235656738, worst -0.46318140625953674
Time: prepare 0.0006    bound 0.1367    transfer 0.0001    finalize 0.0002    func 0.1377    
Accumulated time: func 2.1078    prepare 0.0540    bound 2.0295    transfer 0.0076    finalize 0.0134    
After pruning, left:  5

Back to Regular BaB

BaB round 1
batch: 5
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 51] [/input-12, 10] [/input-12, 10] [/input-12, 51] [/input-12, 13] 
split level 1: [/input-12, 13] [/input-12, 51] [/input-12, 51] [/input-12, 13] [/input-12, 1] 
split level 2: [/input-12, 36] [/input-12, 13] [/input-12, 13] [/input-12, 93] [/input-12, 36] 
split level 3: [/input-12, 93] [/input-12, 93] [/input-12, 92] [/input-12, 37] [/input-12, 92] 
split level 4: [/input-12, 37] [/input-12, 37] [/input-12, 93] [/input-8, 677] [/input-12, 93] 
split level 5: [/input-8, 677] [/input-8, 677] [/input-12, 37] [/input-8, 603] [/input-12, 37] 
cut re-enabled after branching node selection
0 lb beta sum: 1.3630341291427612, worst -0.19940857589244843
10 lb beta sum: 1.3633720874786377, worst -0.19823364913463593
Time: prepare 0.0137    bound 0.1382    transfer 0.0006    finalize 0.0017    func 0.1563    
Accumulated time: func 2.2641    prepare 0.0681    bound 2.1676    transfer 0.0082    finalize 0.0151    
all_split False
======================Cut inference begins======================
max lb tensor(1.23089361) min lb tensor(-0.19771676)
Number of Verified Splits: 270 of 320
Stop inferencing: Max iteration reached.
Total number of valid cuts: 22.
#cuts 1-3: 6
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.00039839744567871094 
BICCOS Cumulative time: 0.10268211364746094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19772 (6), -0.19588 (6), -0.18773 (6), -0.18754 (6), -0.18651 (6), -0.18612 (6), -0.18502 (6), -0.18373 (6), -0.16512 (6), -0.16414 (6), -0.16107 (6), -0.16073 (6), -0.15855 (6), -0.15758 (6), -0.15755 (6), -0.15622 (6), -0.15561 (6), -0.15260 (6), -0.14622 (6), -0.14543 (6), 
Length of domains: 50
Time: pickout 0.0005    decision 0.0211    set_bounds 0.0253    solve 0.1565    add 0.0080    
Accumulated time: pickout 0.0051    decision 0.6079    set_bounds 0.0954    solve 2.0738    add 0.5000    
Current (lb-rhs): -0.19771675765514374
250 domains visited
Cumulative time: 3.6641061305999756

BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4] [/input-12, 51] [/input-12, 4] [/input-12, 4] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 4] [/input-12, 51] [/input-12, 4] 
split level 1: [/input-12, 45] [/input-12, 4] [/input-12, 45] [/input-8, 677] [/input-12, 4] [/input-12, 4] [/input-8, 1045] [/input-12, 45] [/input-12, 4] [/input-12, 45] 
split level 2: [/input-8, 603] [/input-8, 1045] [/input-8, 603] [/input-8, 603] [/input-8, 1045] [/input-8, 1045] [/input-8, 603] [/input-8, 603] [/input-8, 1045] [/input-8, 603] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2849133014678955, worst -0.1861429661512375
10 lb beta sum: 1.2849133014678955, worst -0.18514923751354218
Time: prepare 0.0179    bound 0.1323    transfer 0.0007    finalize 0.0024    func 0.1560    
Accumulated time: func 2.4201    prepare 0.0862    bound 2.3000    transfer 0.0089    finalize 0.0176    
all_split False
======================Cut inference begins======================
max lb tensor(0.47359651) min lb tensor(-0.18466859)
Number of Verified Splits: 287 of 400
Stop inferencing: Max iteration reached.
Total number of valid cuts: 22.
#cuts 1-3: 6
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.00040602684020996094 
BICCOS Cumulative time: 0.1030881404876709
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18467 (9), -0.18273 (9), -0.17879 (9), -0.17685 (9), -0.17565 (9), -0.17560 (9), -0.17433 (9), -0.17417 (9), -0.17257 (9), -0.17121 (9), -0.16978 (9), -0.16973 (9), -0.16817 (9), -0.16809 (9), -0.16661 (9), -0.16499 (9), -0.15133 (9), -0.15042 (9), -0.14669 (9), -0.14645 (9), 
Length of domains: 113
Time: pickout 0.0017    decision 0.0150    set_bounds 0.0266    solve 0.1562    add 0.0012    
Accumulated time: pickout 0.0067    decision 0.6228    set_bounds 0.1220    solve 2.2300    add 0.5012    
Current (lb-rhs): -0.18466858565807343
363 domains visited
Cumulative time: 3.867170810699463

BaB round 3
batch: 113
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 45] [/input-8, 1880] [/input-12, 45] [/input-8, 670] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2819703817367554, worst -0.18466953933238983
10 lb beta sum: 1.2819703817367554, worst -0.18426041305065155
Time: prepare 0.0106    bound 0.1363    transfer 0.0005    finalize 0.0014    func 0.1504    
Accumulated time: func 2.5705    prepare 0.0970    bound 2.4363    transfer 0.0094    finalize 0.0190    
all_split False
======================Cut inference begins======================
max lb tensor(0.32228369) min lb tensor(-0.18408208)
Number of Verified Splits: 112 of 226
Stop inferencing: Max iteration reached.
Total number of valid cuts: 22.
#cuts 1-3: 6
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.0003905296325683594 
BICCOS Cumulative time: 0.10347867012023926
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18408 (10), -0.18237 (10), -0.17819 (10), -0.17630 (10), -0.17549 (10), -0.17538 (10), -0.17411 (10), -0.17396 (10), -0.17204 (10), -0.17057 (10), -0.16944 (10), -0.16940 (10), -0.16790 (10), -0.16769 (10), -0.16594 (10), -0.16443 (10), -0.15082 (10), -0.14983 (10), -0.14507 (10), -0.14496 (10), 
Length of domains: 114
Time: pickout 0.0025    decision 0.0216    set_bounds 0.0100    solve 0.1505    add 0.0012    
Accumulated time: pickout 0.0092    decision 0.6445    set_bounds 0.1320    solve 2.3805    add 0.5024    
Current (lb-rhs): -0.18408207595348358
477 domains visited
Cumulative time: 4.0543999671936035

BaB round 4
batch: 114
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-8, 670] [/input-8, 1880] [/input-8, 670] [/input-8, 670] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2830954790115356, worst -0.17961983382701874
10 lb beta sum: 1.2830954790115356, worst -0.17942146956920624
Time: prepare 0.0107    bound 0.1355    transfer 0.0005    finalize 0.0015    func 0.1498    
Accumulated time: func 2.7203    prepare 0.1078    bound 2.5719    transfer 0.0099    finalize 0.0205    
all_split False
======================Cut inference begins======================
max lb tensor(0.28129721) min lb tensor(-0.17926984)
Number of Verified Splits: 62 of 228
Stop inferencing: Max iteration reached.
Total number of valid cuts: 22.
#cuts 1-3: 6
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.00039315223693847656 
BICCOS Cumulative time: 0.10387182235717773
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17927 (11), -0.17788 (11), -0.17334 (11), -0.17175 (11), -0.17036 (11), -0.17006 (11), -0.16992 (11), -0.16723 (11), -0.16711 (11), -0.16450 (11), -0.16408 (11), -0.16401 (11), -0.16383 (11), -0.16367 (11), -0.16097 (11), -0.16072 (11), -0.15962 (11), -0.15828 (11), -0.15815 (11), -0.15365 (11), 
Length of domains: 166
Time: pickout 0.0021    decision 0.0181    set_bounds 0.0101    solve 0.1499    add 0.0014    
Accumulated time: pickout 0.0113    decision 0.6626    set_bounds 0.1421    solve 2.5304    add 0.5038    
Current (lb-rhs): -0.17926983535289764
643 domains visited
Cumulative time: 4.237098693847656

BaB round 5
batch: 166
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 33] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 33] [/input-8, 670] [/input-8, 670] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2756808996200562, worst -0.17222027480602264
10 lb beta sum: 1.2756808996200562, worst -0.17201809585094452
Time: prepare 0.0151    bound 0.1382    transfer 0.0007    finalize 0.0021    func 0.1584    
Accumulated time: func 2.8787    prepare 0.1232    bound 2.7100    transfer 0.0106    finalize 0.0226    
all_split False
======================Cut inference begins======================
max lb tensor(0.27911085) min lb tensor(-0.17193894)
Number of Verified Splits: 124 of 332
Stop inferencing: Max iteration reached.
Total number of valid cuts: 22.
#cuts 1-3: 6
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.00040268898010253906 
BICCOS Cumulative time: 0.10427451133728027
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17194 (12), -0.17087 (12), -0.16720 (12), -0.16613 (12), -0.16595 (12), -0.16470 (12), -0.16434 (12), -0.16319 (12), -0.16307 (12), -0.16233 (12), -0.16062 (12), -0.15981 (12), -0.15966 (12), -0.15708 (12), -0.15656 (12), -0.15621 (12), -0.15393 (12), -0.15235 (12), -0.15058 (12), -0.14774 (12), 
Length of domains: 208
Time: pickout 0.0030    decision 0.0212    set_bounds 0.0140    solve 0.1585    add 0.0014    
Accumulated time: pickout 0.0143    decision 0.6838    set_bounds 0.1562    solve 2.6889    add 0.5053    
Current (lb-rhs): -0.1719389408826828
851 domains visited
Cumulative time: 4.4367780685424805

BaB round 6
batch: 208
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 90] [/input-12, 90] [/input-8, 670] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2562042474746704, worst -0.17086796462535858
10 lb beta sum: 1.2562042474746704, worst -0.17086701095104218
Time: prepare 0.0189    bound 0.1373    transfer 0.0007    finalize 0.0023    func 0.1620    
Accumulated time: func 3.0407    prepare 0.1423    bound 2.8473    transfer 0.0113    finalize 0.0249    
all_split False
======================Cut inference begins======================
max lb tensor(0.27887774) min lb tensor(-0.17084698)
Number of Verified Splits: 157 of 416
Stop inferencing: Max iteration reached.
Total number of valid cuts: 22.
#cuts 1-3: 6
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.0003895759582519531 
BICCOS Cumulative time: 0.10466408729553223
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17085 (13), -0.16657 (13), -0.16612 (13), -0.16464 (13), -0.16355 (13), -0.16319 (13), -0.16232 (13), -0.16040 (13), -0.16009 (13), -0.15972 (13), -0.15904 (13), -0.15703 (13), -0.15693 (13), -0.15615 (13), -0.15376 (13), -0.15235 (13), -0.15227 (13), -0.15105 (13), -0.14769 (13), -0.14764 (13), 
Length of domains: 259
Time: pickout 0.0034    decision 0.2082    set_bounds 0.0182    solve 0.1621    add 0.1068    
Accumulated time: pickout 0.0177    decision 0.8921    set_bounds 0.1744    solve 2.8510    add 0.6121    
Current (lb-rhs): -0.17084698379039764
1110 domains visited
Cumulative time: 4.944507837295532

BaB round 7
batch: 259
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-8, 670] [/input-8, 811] [/input-12, 33] [/input-12, 33] [/input-8, 670] [/input-8, 670] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2382253408432007, worst -0.16656498610973358
10 lb beta sum: 1.2382253408432007, worst -0.16654209792613983
Time: prepare 0.0231    bound 0.1358    transfer 0.0015    finalize 0.0025    func 0.1671    
Accumulated time: func 3.2078    prepare 0.1656    bound 2.9831    transfer 0.0128    finalize 0.0274    
all_split False
======================Cut inference begins======================
max lb tensor(0.28174639) min lb tensor(-0.16653542)
Number of Verified Splits: 144 of 518
Stop inferencing: Max iteration reached.
Total number of valid cuts: 22.
#cuts 1-3: 6
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.00039124488830566406 
BICCOS Cumulative time: 0.10505533218383789
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16654 (14), -0.16551 (14), -0.16037 (14), -0.15936 (14), -0.15922 (14), -0.15906 (14), -0.15873 (14), -0.15856 (14), -0.15820 (14), -0.15708 (14), -0.15304 (14), -0.15293 (14), -0.15236 (14), -0.15203 (14), -0.15185 (14), -0.15099 (14), -0.15033 (14), -0.14693 (14), -0.14559 (14), -0.14551 (14), 
Length of domains: 374
Time: pickout 0.0638    decision 0.0290    set_bounds 0.0218    solve 0.1673    add 0.0485    
Accumulated time: pickout 0.0815    decision 0.9210    set_bounds 0.1962    solve 3.0183    add 0.6606    
Current (lb-rhs): -0.166535422205925
1484 domains visited
Cumulative time: 5.276529312133789

BaB round 8
batch: 374
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 670] [/input-8, 603] [/input-8, 811] [/input-8, 670] [/input-8, 603] [/input-8, 603] [/input-8, 603] [/input-8, 603] [/input-8, 603] [/input-8, 603] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2208104133605957, worst -0.15741734206676483
10 lb beta sum: 1.2208104133605957, worst -0.15741829574108124
Time: prepare 0.0341    bound 0.1377    transfer 0.0047    finalize 0.0050    func 0.1864    
Accumulated time: func 3.3942    prepare 0.2000    bound 3.1208    transfer 0.0176    finalize 0.0325    
all_split False
======================Cut inference begins======================
max lb tensor(0.02020450) min lb tensor(-0.15740304)
Number of Verified Splits: 86 of 748
Stop inferencing: Max iteration reached.
Total number of valid cuts: 22.
#cuts 1-3: 6
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.0004935264587402344 
BICCOS Cumulative time: 0.10554885864257812
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15740 (15), -0.15732 (15), -0.15690 (15), -0.15256 (15), -0.15196 (15), -0.15161 (15), -0.15127 (15), -0.15076 (15), -0.15075 (15), -0.15068 (15), -0.14995 (15), -0.14981 (15), -0.14975 (15), -0.14595 (15), -0.14559 (15), -0.14547 (15), -0.14529 (15), -0.14497 (15), -0.14479 (15), -0.14460 (15), 
Length of domains: 662
Time: pickout 0.0058    decision 0.0330    set_bounds 0.0307    solve 0.1866    add 0.0039    
Accumulated time: pickout 0.0873    decision 0.9541    set_bounds 0.2269    solve 3.2049    add 0.6645    
Current (lb-rhs): -0.15740303695201874
2146 domains visited
Cumulative time: 5.538295745849609

BaB round 9
batch: 662
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 80] [/input-8, 811] [/input-8, 987] [/input-8, 811] [/input-8, 811] [/input-8, 987] [/input-8, 811] [/input-8, 811] [/input-12, 80] [/input-8, 158] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2095054388046265, worst -0.15566162765026093
10 lb beta sum: 1.2095054388046265, worst -0.15564922988414764
Time: prepare 0.0595    bound 0.1491    transfer 0.0052    finalize 0.0080    func 0.2305    
Accumulated time: func 3.6248    prepare 0.2597    bound 3.2699    transfer 0.0228    finalize 0.0405    
all_split False
======================Cut inference begins======================
max lb tensor(0.05445762) min lb tensor(-0.15563683)
Number of Verified Splits: 248 of 1324
Stop inferencing: Max iteration reached.
Total number of valid cuts: 22.
#cuts 1-3: 6
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.00042819976806640625 
BICCOS Cumulative time: 0.10597705841064453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15564 (16), -0.15523 (16), -0.15441 (16), -0.15027 (16), -0.14995 (16), -0.14990 (16), -0.14909 (16), -0.14907 (16), -0.14753 (16), -0.14693 (16), -0.14560 (16), -0.14531 (16), -0.14427 (16), -0.14355 (16), -0.14351 (16), -0.14112 (16), -0.14035 (16), -0.14030 (16), -0.14017 (16), -0.13966 (16), 
Length of domains: 1076
Time: pickout 0.0119    decision 0.0475    set_bounds 0.0541    solve 0.2308    add 0.0198    
Accumulated time: pickout 0.0992    decision 1.0016    set_bounds 0.2809    solve 3.4357    add 0.6843    
Current (lb-rhs): -0.15563683211803436
3222 domains visited
Cumulative time: 5.9055938720703125

BaB round 10
batch: 1076
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 811] [/input-8, 987] [/input-8, 811] [/input-12, 80] [/input-8, 811] [/input-8, 603] [/input-8, 1315] [/input-12, 80] [/input-12, 80] [/input-8, 158] 
cut re-enabled after branching node selection
0 lb beta sum: 1.1988977193832397, worst -0.1530800312757492
10 lb beta sum: 1.1988977193832397, worst -0.15308479964733124
Time: prepare 0.0976    bound 0.2069    transfer 0.0107    finalize 0.1778    func 0.5080    
Accumulated time: func 4.1327    prepare 0.3575    bound 3.4768    transfer 0.0335    finalize 0.2183    
all_split False
======================Cut inference begins======================
max lb tensor(0.07140251) min lb tensor(-0.15307431)
Number of Verified Splits: 498 of 2152
Stop inferencing: Max iteration reached.
Total number of valid cuts: 22.
#cuts 1-3: 6
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.0005488395690917969 
BICCOS Cumulative time: 0.10652589797973633
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15307 (17), -0.15252 (17), -0.14755 (17), -0.14731 (17), -0.14693 (17), -0.14652 (17), -0.14623 (17), -0.14300 (17), -0.14256 (17), -0.14223 (17), -0.14189 (17), -0.14138 (17), -0.14091 (17), -0.14058 (17), -0.14005 (17), -0.13929 (17), -0.13802 (17), -0.13756 (17), -0.13744 (17), -0.13695 (17), 
Length of domains: 1654
Time: pickout 0.0145    decision 0.2611    set_bounds 0.0868    solve 0.5084    add 0.0071    
Accumulated time: pickout 0.1137    decision 1.2627    set_bounds 0.3677    solve 3.9441    add 0.6914    
Current (lb-rhs): -0.15307430922985077
4876 domains visited
Cumulative time: 6.789323329925537

BaB round 11
batch: 1654
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 987] [/input-8, 670] [/input-8, 811] [/input-8, 987] [/input-8, 1315] [/input-12, 80] [/input-8, 987] [/input-8, 670] [/input-8, 811] [/input-8, 987] 
cut re-enabled after branching node selection
0 lb beta sum: 1.1937810182571411, worst -0.1485176533460617
10 lb beta sum: 1.1937810182571411, worst -0.14851288497447968
Time: prepare 0.1520    bound 0.2425    transfer 0.0181    finalize 0.0237    func 0.4585    
Accumulated time: func 4.5913    prepare 0.5098    bound 3.7194    transfer 0.0515    finalize 0.2420    
all_split False
======================Cut inference begins======================
max lb tensor(0.05405422) min lb tensor(-0.14850144)
Number of Verified Splits: 591 of 3308
Stop inferencing: Max iteration reached.
Total number of valid cuts: 22.
#cuts 1-3: 6
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.0005242824554443359 
BICCOS Cumulative time: 0.10705018043518066
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14850 (18), -0.14802 (18), -0.14309 (18), -0.14281 (18), -0.14192 (18), -0.14162 (18), -0.14061 (18), -0.13938 (18), -0.13899 (18), -0.13811 (18), -0.13686 (18), -0.13648 (18), -0.13630 (18), -0.13610 (18), -0.13568 (18), -0.13477 (18), -0.13440 (18), -0.13373 (18), -0.13357 (18), -0.13282 (18), 
Length of domains: 2717
Time: pickout 0.0307    decision 0.1035    set_bounds 0.1362    solve 0.4593    add 0.0681    
Accumulated time: pickout 0.1444    decision 1.3662    set_bounds 0.5040    solve 4.4034    add 0.7595    
Current (lb-rhs): -0.1485014408826828
7593 domains visited
Cumulative time: 7.59441876411438

BaB round 12
batch: 2717
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-8, 988] [/input-8, 1315] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-8, 1315] 
cut re-enabled after branching node selection
0 lb beta sum: 1.1901828050613403, worst -0.14191250503063202
10 lb beta sum: 1.1901828050613403, worst -0.14188866317272186
Time: prepare 0.2555    bound 0.3555    transfer 0.0278    finalize 0.0308    func 0.7053    
Accumulated time: func 5.2966    prepare 0.7656    bound 4.0748    transfer 0.0793    finalize 0.2728    
all_split False
======================Cut inference begins======================
max lb tensor(0.06080814) min lb tensor(-0.14188103)
Number of Verified Splits: 975 of 5434
Stop inferencing: Max iteration reached.
Total number of valid cuts: 22.
#cuts 1-3: 6
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.0006411075592041016 
BICCOS Cumulative time: 0.10769128799438477
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14188 (19), -0.14144 (19), -0.13651 (19), -0.13639 (19), -0.13617 (19), -0.13531 (19), -0.13502 (19), -0.13492 (19), -0.13340 (19), -0.13239 (19), -0.13202 (19), -0.13194 (19), -0.13058 (19), -0.13025 (19), -0.12980 (19), -0.12958 (19), -0.12948 (19), -0.12928 (19), -0.12874 (19), -0.12860 (19), 
Length of domains: 4459
Time: pickout 0.0380    decision 0.1575    set_bounds 0.3635    solve 0.7068    add 0.0728    
Accumulated time: pickout 0.1824    decision 1.5236    set_bounds 0.8674    solve 5.1103    add 0.8323    
Current (lb-rhs): -0.1418810337781906
12052 domains visited
Cumulative time: 8.945080280303955

BaB round 13
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 677] [/input-12, 80] [/input-8, 1069] [/input-8, 677] [/input-8, 677] [/input-8, 677] [/input-8, 1315] [/input-8, 1315] [/input-8, 677] [/input-8, 1315] 
cut re-enabled after branching node selection
0 lb beta sum: 1.1886836290359497, worst -0.1389036625623703
10 lb beta sum: 1.1886836290359497, worst -0.13883595168590546
Time: prepare 0.4012    bound 0.4983    transfer 0.0391    finalize 0.0470    func 1.0385    
Accumulated time: func 6.3351    prepare 1.1671    bound 4.5732    transfer 0.1184    finalize 0.3198    
all_split False
======================Cut inference begins======================
max lb tensor(0.07195564) min lb tensor(-0.13882260)
Number of Verified Splits: 1384 of 8192
Stop inferencing: Max iteration reached.
Total number of valid cuts: 22.
#cuts 1-3: 6
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.0006000995635986328 
BICCOS Cumulative time: 0.1082913875579834
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13882 (20), -0.13843 (20), -0.13351 (20), -0.13311 (20), -0.13220 (20), -0.13201 (20), -0.13005 (20), -0.12925 (20), -0.12859 (20), -0.12719 (20), -0.12672 (20), -0.12647 (20), -0.12605 (20), -0.12549 (20), -0.12521 (20), -0.12513 (20), -0.12498 (20), -0.12474 (20), -0.12453 (20), -0.12440 (20), 
Length of domains: 7171
Time: pickout 0.0605    decision 0.2355    set_bounds 0.5124    solve 1.0404    add 0.0475    
Accumulated time: pickout 0.2429    decision 1.7591    set_bounds 1.3799    solve 6.1507    add 0.8798    
Current (lb-rhs): -0.13882260024547577
18860 domains visited
current_vram/total_varm: 9.9GB/99.9GB, batch_size increase to 8192
Cumulative time: 10.861438035964966

BaB round 14
batch: 7171
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1055] [/input, 332] [/input-8, 1315] [/input-12, 80] [/input-8, 1315] [/input-8, 1315] [/input-8, 1055] [/input-12, 80] [/input-8, 1315] [/input-8, 670] 
cut re-enabled after branching node selection
0 lb beta sum: 1.1878477334976196, worst -0.1312303990125656
10 lb beta sum: 1.1878477334976196, worst -0.13114933669567108
Time: prepare 0.6947    bound 0.8226    transfer 0.0694    finalize 0.0923    func 1.7713    
Accumulated time: func 8.1063    prepare 1.8621    bound 5.3958    transfer 0.1879    finalize 0.4121    
all_split False
======================Cut inference begins======================
max lb tensor(0.05800338) min lb tensor(-0.13113885)
Number of Verified Splits: 2622 of 14342
Stop inferencing: Max iteration reached.
Total number of valid cuts: 22.
#cuts 1-3: 6
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.0006875991821289062 
BICCOS Cumulative time: 0.1089789867401123
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13114 (21), -0.13034 (21), -0.12905 (21), -0.12795 (21), -0.12537 (21), -0.12535 (21), -0.12450 (21), -0.12450 (21), -0.12425 (21), -0.12418 (21), -0.12389 (21), -0.12333 (21), -0.12293 (21), -0.12260 (21), -0.12247 (21), -0.12220 (21), -0.12155 (21), -0.12119 (21), -0.12016 (21), -0.11952 (21), 
Length of domains: 11720
Time: pickout 0.1355    decision 0.6019    set_bounds 0.8036    solve 1.7741    add 0.1505    
Accumulated time: pickout 0.3784    decision 2.3610    set_bounds 2.1835    solve 7.9248    add 1.0303    
Current (lb-rhs): -0.1311388462781906
30580 domains visited
Cumulative time: 14.356633186340332

BaB round 15
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 158] [/input-8, 1055] [/input-8, 810] [/input-8, 1315] [/input-8, 677] [/input-8, 158] [/input-8, 810] [/input-8, 1315] [/input-8, 158] [/input-8, 1315] 
cut re-enabled after branching node selection
0 lb beta sum: 1.1869746446609497, worst -0.12510113418102264
10 lb beta sum: 1.1869746446609497, worst -0.12505249679088593
Time: prepare 0.7816    bound 0.9277    transfer 0.0792    finalize 0.1053    func 1.9990    
Accumulated time: func 10.1053    prepare 2.6441    bound 6.3236    transfer 0.2671    finalize 0.5174    
all_split False
======================Cut inference begins======================
max lb tensor(0.05081935) min lb tensor(-0.12504105)
Number of Verified Splits: 3420 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 22.
#cuts 1-3: 6
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.0006873607635498047 
BICCOS Cumulative time: 0.10966634750366211
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12504 (22), -0.12450 (21), -0.12427 (22), -0.12271 (22), -0.12258 (22), -0.12185 (22), -0.12164 (22), -0.12115 (22), -0.12007 (22), -0.11965 (22), -0.11956 (22), -0.11952 (21), -0.11944 (22), -0.11922 (22), -0.11920 (21), -0.11908 (22), -0.11894 (22), -0.11888 (22), -0.11839 (22), -0.11786 (22), 
Length of domains: 16492
Time: pickout 0.1243    decision 0.6912    set_bounds 0.9236    solve 2.0024    add 0.2922    
Accumulated time: pickout 0.5027    decision 3.0522    set_bounds 3.1071    solve 9.9272    add 1.3225    
Current (lb-rhs): -0.12504105269908905
43544 domains visited
current_vram/total_varm: 22.3GB/99.9GB, batch_size increase to 16384
Cumulative time: 18.42945694923401

BaB round 16
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1055] [/input-8, 1494] [/input-8, 677] [/input-8, 1315] [/input-8, 810] [/input-8, 981] [/input-8, 1494] [/input-8, 677] [/input-8, 1315] [/input-8, 810] 
cut re-enabled after branching node selection
0 lb beta sum: 1.1869176626205444, worst -0.12207035720348358
10 lb beta sum: 1.1869176626205444, worst -0.12207798659801483
Time: prepare 1.5691    bound 1.7919    transfer 0.1585    finalize 0.2172    func 4.2698    
Accumulated time: func 14.3751    prepare 4.2136    bound 8.1154    transfer 0.4256    finalize 0.7346    
all_split False
======================Cut inference begins======================
max lb tensor(0.03198810) min lb tensor(-0.12206654)
Number of Verified Splits: 7250 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 22.
#cuts 1-3: 6
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.0008211135864257812 
BICCOS Cumulative time: 0.11048746109008789
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12207 (23), -0.12162 (23), -0.12121 (23), -0.12113 (23), -0.11973 (23), -0.11967 (23), -0.11891 (22), -0.11815 (23), -0.11779 (23), -0.11718 (22), -0.11710 (23), -0.11701 (23), -0.11686 (23), -0.11676 (22), -0.11659 (23), -0.11647 (23), -0.11647 (23), -0.11634 (23), -0.11629 (22), -0.11622 (23), 
Length of domains: 25626
Time: pickout 0.2558    decision 1.9125    set_bounds 1.9381    solve 4.2760    add 0.1144    
Accumulated time: pickout 0.7585    decision 4.9646    set_bounds 5.0452    solve 14.2032    add 1.4369    
Current (lb-rhs): -0.12206654250621796
69062 domains visited
current_vram/total_varm: 32.3GB/99.9GB, batch_size increase to 32768
Cumulative time: 27.00161862373352

BaB round 17
batch: 25626
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1055] [/input-8, 810] [/input-8, 1454] [/input-8, 82] [/input-8, 981] [/input-8, 810] [/input-8, 1055] [/input-8, 1055] [/input-8, 810] [/input-8, 1454] 
cut re-enabled after branching node selection
0 lb beta sum: 1.1867300271987915, worst -0.12076763808727264
10 lb beta sum: 1.1867300271987915, worst -0.12077049911022186
Time: prepare 2.5074    bound 2.7885    transfer 0.2593    finalize 0.3363    func 6.6488    
Accumulated time: func 21.0239    prepare 6.7215    bound 10.9039    transfer 0.6849    finalize 1.0709    
all_split False
======================Cut inference begins======================
max lb tensor(0.03244586) min lb tensor(-0.12076382)
Number of Verified Splits: 11989 of 51252
Stop inferencing: Max iteration reached.
Total number of valid cuts: 22.
#cuts 1-3: 6
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.00104522705078125 
BICCOS Cumulative time: 0.11153268814086914
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12076 (24), -0.11900 (24), -0.11855 (24), -0.11817 (24), -0.11813 (24), -0.11665 (24), -0.11650 (24), -0.11649 (24), -0.11563 (23), -0.11560 (24), -0.11515 (24), -0.11473 (24), -0.11404 (24), -0.11403 (24), -0.11375 (24), -0.11353 (24), -0.11347 (23), -0.11312 (24), -0.11305 (24), -0.11301 (23), 
Length of domains: 39263
Time: pickout 0.5159    decision 2.6046    set_bounds 3.0233    solve 6.6575    add 0.5684    
Accumulated time: pickout 1.2744    decision 7.5693    set_bounds 8.0685    solve 20.8607    add 2.0054    
Current (lb-rhs): -0.12076382339000702
108325 domains visited
Cumulative time: 40.503469467163086

BaB round 18
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 988] [/input-8, 633] [/input-8, 1055] [/input-8, 1055] [/input-8, 1055] [/input, 332] [/input-8, 988] [/input, 332] [/input-8, 1446] [/input-8, 82] 
cut re-enabled after branching node selection
0 lb beta sum: 1.1866517066955566, worst -0.11898331344127655
10 lb beta sum: 1.1866517066955566, worst -0.11898235976696014
Time: prepare 3.2696    bound 8.7168    transfer 0.3198    finalize 0.4472    func 13.1784    
Accumulated time: func 34.2023    prepare 9.9915    bound 19.6207    transfer 1.0046    finalize 1.5181    
all_split False
======================Cut inference begins======================
max lb tensor(0.04226585) min lb tensor(-0.11897759)
Number of Verified Splits: 16510 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 22.
#cuts 1-3: 6
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.0010764598846435547 
BICCOS Cumulative time: 0.1126091480255127
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11898 (25), -0.11845 (25), -0.11813 (24), -0.11663 (25), -0.11543 (25), -0.11527 (25), -0.11526 (24), -0.11419 (25), -0.11380 (25), -0.11373 (25), -0.11344 (24), -0.11329 (25), -0.11310 (25), -0.11302 (25), -0.11291 (25), -0.11286 (24), -0.11264 (24), -0.11259 (24), -0.11254 (25), -0.11244 (25), 
Length of domains: 55521
Time: pickout 0.5690    decision 3.3642    set_bounds 4.0681    solve 13.7863    add 0.1914    
Accumulated time: pickout 1.8434    decision 10.9335    set_bounds 12.1366    solve 34.6470    add 2.1967    
Current (lb-rhs): -0.11897759139537811
157351 domains visited
Cumulative time: 62.65849733352661

BaB round 19
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1132] [/input-8, 981] [/input, 332] [/input-8, 82] [/input, 332] [/input-8, 1055] [/input-8, 810] [/input-8, 1132] [/input-8, 981] [/input-8, 810] 
cut re-enabled after branching node selection
0 lb beta sum: 1.1866518259048462, worst -0.11601929366588593
10 lb beta sum: 1.1866518259048462, worst -0.11600594222545624
Time: prepare 3.3320    bound 8.7157    transfer 0.3216    finalize 0.4690    func 14.0207    
Accumulated time: func 48.2230    prepare 13.3240    bound 28.3364    transfer 1.3262    finalize 1.9871    
all_split False
======================Cut inference begins======================
max lb tensor(0.03462596) min lb tensor(-0.11599736)
Number of Verified Splits: 16691 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 22.
#cuts 1-3: 6
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.0011878013610839844 
BICCOS Cumulative time: 0.11379694938659668
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11898 (25), -0.11663 (25), -0.11600 (26), -0.11543 (25), -0.11542 (25), -0.11523 (26), -0.11373 (25), -0.11344 (24), -0.11344 (26), -0.11310 (25), -0.11302 (25), -0.11295 (25), -0.11291 (25), -0.11254 (25), -0.11244 (25), -0.11223 (25), -0.11182 (25), -0.11174 (25), -0.11141 (25), -0.11082 (26), 
Length of domains: 71598
Time: pickout 0.5815    decision 3.3500    set_bounds 4.3481    solve 14.0339    add 19.0443    
Accumulated time: pickout 2.4249    decision 14.2835    set_bounds 16.4847    solve 48.6809    add 21.2410    
Current (lb-rhs): -0.11897759139537811
206196 domains visited
Cumulative time: 104.2042224407196

BaB round 20
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1019] [/input-8, 1494] [/input-8, 810] [/input-8, 981] [/input-8, 981] [/input-8, 677] [/input-8, 981] [/input-8, 981] [/input-8, 810] [/input-8, 810] 
cut re-enabled after branching node selection
0 lb beta sum: 1.1866328716278076, worst -0.11595730483531952
10 lb beta sum: 1.1866328716278076, worst -0.1159553974866867
Time: prepare 3.3024    bound 8.7186    transfer 0.3215    finalize 0.5335    func 13.2991    
Accumulated time: func 61.5221    prepare 16.6268    bound 37.0550    transfer 1.6477    finalize 2.5205    
all_split False
======================Cut inference begins======================
max lb tensor(0.03569885) min lb tensor(-0.11594491)
Number of Verified Splits: 16496 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 22.
#cuts 1-3: 6
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.0013012886047363281 
BICCOS Cumulative time: 0.11509823799133301
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11600 (26), -0.11594 (26), -0.11523 (26), -0.11360 (26), -0.11344 (26), -0.11295 (25), -0.11253 (26), -0.11182 (25), -0.11082 (26), -0.11070 (26), -0.11065 (26), -0.11038 (25), -0.11033 (25), -0.11013 (26), -0.11007 (26), -0.10986 (26), -0.10974 (26), -0.10974 (26), -0.10966 (26), -0.10965 (25), 
Length of domains: 87870
Time: pickout 0.5906    decision 3.3690    set_bounds 4.6536    solve 14.2454    add 0.2398    
Accumulated time: pickout 3.0155    decision 17.6525    set_bounds 21.1383    solve 62.9263    add 21.4808    
Current (lb-rhs): -0.11599735915660858
255236 domains visited
Cumulative time: 127.51729011535645

BaB round 21
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1019] [/input-8, 1019] [/input, 332] [/input-8, 1019] [/input-8, 1069] [/input-8, 1454] [/input-8, 981] [/input-8, 1494] [/input-8, 82] [/input-8, 1019] 
cut re-enabled after branching node selection
0 lb beta sum: 1.1866424083709717, worst -0.1126127690076828
10 lb beta sum: 1.1866424083709717, worst -0.11261467635631561
Time: prepare 3.4632    bound 8.7186    transfer 0.3139    finalize 1.5281    func 14.4441    
Accumulated time: func 75.9661    prepare 20.0907    bound 45.7736    transfer 1.9616    finalize 4.0486    
all_split False
======================Cut inference begins======================
max lb tensor(0.03552718) min lb tensor(-0.11260419)
Number of Verified Splits: 17112 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 22.
#cuts 1-3: 6
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.0010666847229003906 
BICCOS Cumulative time: 0.1161649227142334
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11594 (26), -0.11523 (26), -0.11360 (26), -0.11260 (27), -0.11253 (26), -0.11070 (26), -0.11065 (26), -0.11038 (25), -0.11013 (26), -0.11007 (26), -0.10989 (27), -0.10986 (26), -0.10974 (26), -0.10966 (26), -0.10953 (26), -0.10945 (27), -0.10931 (26), -0.10920 (26), -0.10918 (26), -0.10879 (26), 
Length of domains: 103526
Time: pickout 0.6167    decision 3.4087    set_bounds 4.2905    solve 14.4665    add 0.2777    
Accumulated time: pickout 3.6322    decision 21.0612    set_bounds 25.4288    solve 77.3928    add 21.7585    
Current (lb-rhs): -0.11594490706920624
303660 domains visited
Cumulative time: 150.80870962142944

BaB round 22
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1883] [/input, 390] [/input-8, 1883] [/input, 332] [/input-8, 981] [/input, 390] [/input-8, 981] [/input-8, 1454] [/input, 332] [/input-8, 981] 
cut re-enabled after branching node selection
0 lb beta sum: 1.1866328716278076, worst -0.11355690658092499
10 lb beta sum: 1.1866328716278076, worst -0.11342339217662811
Time: prepare 3.5184    bound 8.7184    transfer 0.3166    finalize 0.6098    func 13.5848    
Accumulated time: func 89.5509    prepare 23.6095    bound 54.4919    transfer 2.2782    finalize 4.6584    
all_split False
======================Cut inference begins======================
max lb tensor(0.03571220) min lb tensor(-0.11339669)
Number of Verified Splits: 17305 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 22.
#cuts 1-3: 6
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.033022165298461914 
BICCOS Cumulative time: 0.1491870880126953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11340 (27), -0.11260 (27), -0.11217 (27), -0.11102 (27), -0.11065 (26), -0.10989 (27), -0.10953 (26), -0.10946 (27), -0.10945 (27), -0.10943 (27), -0.10931 (26), -0.10918 (26), -0.10879 (26), -0.10832 (26), -0.10821 (26), -0.10781 (27), -0.10754 (26), -0.10754 (27), -0.10744 (27), -0.10729 (26), 
Length of domains: 118989
Time: pickout 0.6096    decision 4.0903    set_bounds 4.5547    solve 13.6033    add 0.2328    
Accumulated time: pickout 4.2418    decision 25.1515    set_bounds 29.9836    solve 90.9961    add 21.9914    
Current (lb-rhs): -0.11339668929576874
351891 domains visited
Cumulative time: 174.58388805389404

BaB round 23
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 981] [/input-8, 1883] [/input, 332] [/input-8, 1069] [/input-8, 633] [/input-8, 1446] [/input-8, 633] [/input-8, 633] [/input, 332] [/input-8, 981] 
cut re-enabled after branching node selection
0 lb beta sum: 1.1866328716278076, worst -0.10876278579235077
10 lb beta sum: 1.1866328716278076, worst -0.10874180495738983
Time: prepare 3.5691    bound 8.7211    transfer 0.3536    finalize 0.6223    func 13.6849    
Accumulated time: func 103.2358    prepare 27.1796    bound 63.2130    transfer 2.6318    finalize 5.2807    
all_split False
======================Cut inference begins======================
max lb tensor(0.03950687) min lb tensor(-0.10872178)
Number of Verified Splits: 17705 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 22.
#cuts 1-3: 6
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.03344607353210449 
BICCOS Cumulative time: 0.1826331615447998
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11340 (27), -0.11260 (27), -0.11217 (27), -0.11102 (27), -0.10989 (27), -0.10946 (27), -0.10943 (27), -0.10918 (26), -0.10879 (26), -0.10872 (27), -0.10809 (27), -0.10781 (27), -0.10754 (27), -0.10744 (27), -0.10729 (26), -0.10708 (27), -0.10699 (27), -0.10667 (27), -0.10666 (27), -0.10647 (27), 
Length of domains: 134052
Time: pickout 0.7684    decision 5.2437    set_bounds 5.0723    solve 13.7037    add 0.3390    
Accumulated time: pickout 5.0102    decision 30.3952    set_bounds 35.0559    solve 104.6998    add 22.3304    
Current (lb-rhs): -0.11339668929576874
399722 domains visited
Time out!!!!!!!!
Result: unknown in 202.6163 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 25, vnnlib ID: 25 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.14924717, -7.20264626, -3.62566066, -3.26617622, -3.26720905,
         -3.86512804, -2.64753652, -4.15916395, -7.16723728, -5.27643299]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [704]; unstable size 704; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 299, 1, 704] with unstable size 298 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 704] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 704] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [298]; unstable size 298; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 298] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 298] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.08241999, -2.05952239, -2.42161846, -2.46702027, -2.20508480,
         -3.01654959, -2.22386384,  1.33762681, -0.76212621]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.14924717, -7.20264626, -3.62566066, -3.26617622, -3.26720905,
         -3.86512804, -2.64753652, -4.15916395, -7.16723728, -5.27643299]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.14924717, -7.20264530, -3.62566042, -3.26617575, -3.26720858,
          -3.86512756, -2.64753628, -4.15916443, -7.16723728, -5.27643251],
         [-4.14924717, -7.20264530, -3.62566042, -3.26617575, -3.26720858,
          -3.86512756, -2.64753628, -4.15916443, -7.16723728, -5.27643251]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.52358675, -0.88307142, -0.88203859, -0.28411961, -1.50171089,
           0.00991726,  1.12718534]]], device='cuda:0')
number of violation:  5
clean attack image tensor([[[[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         ...,


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]]]], device='cuda:0') torch.Size([1, 7, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0937 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 26, vnnlib ID: 26 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.82686090, -6.41171074, -7.68403912, -6.35791826, -7.00407124,
         -6.85788012, -7.81835127, -6.72433424, -6.81869602, -4.52237940]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [573]; unstable size 573; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 165, 1, 573] with unstable size 164 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 573] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 573] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [164]; unstable size 164; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 164] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 164] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.93261313, 0.64227414, 1.35773575, 0.14541292, 0.77890790, 0.42941713,
         1.61863875, 0.36069006, 0.89056206]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0635 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 27, vnnlib ID: 27 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-14.06539822, -17.73662376, -13.52726841, -13.91146278, -10.88764858,
         -13.52410698, -16.07256508,  -5.87544203, -16.85854721, -15.41843987]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [650]; unstable size 650; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 192, 1, 650] with unstable size 191 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 650] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 650] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [191]; unstable size 191; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 191] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 191] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.35606575, 9.58715820, 6.00918579, 6.42040920, 3.78134966, 6.19913769,
         8.01423836, 8.93800259, 7.41418409]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0679 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 28, vnnlib ID: 28 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.62422132, -12.83205509, -10.86794376, -11.14358330, -11.48577309,
         -12.18943787, -11.86716270, -14.63631248, -10.53621006, -12.42279720]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [928]; unstable size 928; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 124, 1, 928] with unstable size 123 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 928] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 928] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [123]; unstable size 123; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 123] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 123] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.12224007, 2.45312405, 2.49229217, 2.85657811, 3.25084162, 3.41792607,
         5.43004036, 2.01518393, 3.76126528]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0653 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 29, vnnlib ID: 29 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.71822071, -11.80851841,  -6.85466003,  -5.36537838,  -5.07366467,
          -5.51355600,  -5.88568926,  -6.49064875, -10.61816978, -10.64415073]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [574]; unstable size 574; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 216, 1, 574] with unstable size 215 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 574] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 574] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [215]; unstable size 215; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 215] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 215] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.72788763,  3.64086795, -0.86040449, -2.15425539, -2.38526535,
         -1.95328093, -1.94343758,  2.43316555,  2.66482735]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.71822071, -11.80851841,  -6.85466003,  -5.36537838,  -5.07366467,
          -5.51355600,  -5.88568926,  -6.49064875, -10.61816978, -10.64415073]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.71822071, -11.80851841,  -6.85466003,  -5.36537838,  -5.07366467,
           -5.51355553,  -5.88568926,  -6.49064827, -10.61816883, -10.64415073],
         [-10.71822071, -11.80851841,  -6.85466003,  -5.36537838,  -5.07366467,
           -5.51355553,  -5.88568926,  -6.49064827, -10.61816883, -10.64415073]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.36401176, -1.12526989, -1.41698360, -0.97709274, -0.60495901]]],
       device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0830 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 30, vnnlib ID: 30 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.18480682, -14.47258854, -11.18161869, -14.32627869, -12.30105877,
         -15.18956566, -14.34846020, -16.43445969, -12.35407734, -15.00505161]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [778]; unstable size 778; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 155, 1, 778] with unstable size 154 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 778] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 778] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [154]; unstable size 154; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 154] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 154] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.25004578, 2.19218016, 5.06827354, 3.28106451, 5.71236038, 5.22400045,
         7.04772663, 3.23776245, 5.66314173]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0702 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 31, vnnlib ID: 31 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.54959202, -14.93725681,  -9.59988976, -11.64203358,  -7.25195312,
         -11.52101326, -11.52331543,  -9.14212132, -13.16885757, -13.51460266]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [559]; unstable size 559; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 280, 1, 559] with unstable size 279 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 559] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 559] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [279]; unstable size 279; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 279] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 279] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.93221825, 5.50633049, 1.10160053, 3.24869013, 3.06275201, 2.55501723,
         0.80379295, 3.91150212, 4.20123291]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0844 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 32, vnnlib ID: 32 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.27112675, -12.63512135,  -8.63367748,  -9.42183304,  -7.46700573,
          -9.92411232,  -9.37480068,  -7.93249464, -10.13228416, -10.65295982]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [673]; unstable size 673; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 250, 1, 673] with unstable size 249 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 673] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 673] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [249]; unstable size 249; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 249] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 249] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.22755623,  2.35429573, -1.18080258, -0.14742768, -1.67962313,
          0.47270030, -0.58272338, -0.47875667,  1.04633427]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.27112675, -12.63512135,  -8.63367748,  -9.42183304,  -7.46700573,
          -9.92411232,  -9.37480068,  -7.93249464, -10.13228416, -10.65295982]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.27112770, -12.63512135,  -8.63367748,  -9.42183399,  -7.46700478,
           -9.92411232,  -9.37480068,  -7.93249464, -10.13228512, -10.65296173],
         [-10.27112770, -12.63512135,  -8.63367748,  -9.42183399,  -7.46700478,
           -9.92411232,  -9.37480068,  -7.93249464, -10.13228512, -10.65296173]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.70118284,  1.48933935, -0.46548986,  1.44230604,  2.19979048]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]]]],
       device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0915 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 33, vnnlib ID: 33 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.97903728, -15.47458935, -14.82082081, -16.93464851, -16.98804283,
         -18.22283363, -17.40720367, -19.39607430, -13.83522511, -16.04048157]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [961]; unstable size 961; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 147, 1, 961] with unstable size 146 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 961] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 961] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [146]; unstable size 146; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 146] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 146] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.36850739, 2.85024309, 4.83520412, 4.84200525, 5.83572006, 5.30677128,
         7.12614632, 1.81439650, 4.14064837]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0707 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 34, vnnlib ID: 34 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-8.24514103, -9.31445694, -4.68999958, -4.27805805, -4.32876205,
         -4.84132576, -4.94563007, -5.30884266, -9.89639282, -8.35261440]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [576]; unstable size 576; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 271, 1, 576] with unstable size 270 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 576] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 576] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [270]; unstable size 270; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 270] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 270] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.30363131,  2.67125607, -0.65277290, -0.97995400,  0.21614313,
         -0.59253997,  0.02449495,  3.50285602,  2.09800625]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-8.24514103, -9.31445694, -4.68999958, -4.27805805, -4.32876205,
         -4.84132576, -4.94563007, -5.30884266, -9.89639282, -8.35261440]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.15455532, -10.60125256,  -5.41358471,  -5.43196726,  -5.26921654,
           -5.97929192,  -6.01046705,  -6.31621122, -10.86349106,  -9.62036419],
         [ -9.15455532, -10.60125256,  -5.41358471,  -5.43196726,  -5.26921654,
           -5.97929192,  -6.01046705,  -6.31621122, -10.86349106,  -9.62036419]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.01838255, -0.16275072,  0.57849979]]], device='cuda:0')
number of violation:  2
Attack finished in 0.0189 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0993 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 35, vnnlib ID: 35 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.70502281, -7.45960903, -2.49920797, -1.05304623, -3.13333511,
         -1.90231669, -1.12411547, -2.32658529, -5.78024006, -5.08773088]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [540]; unstable size 540; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 256, 1, 540] with unstable size 255 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 540] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 540] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [255]; unstable size 255; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 255] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 255] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.87189984,  3.69729781,  0.41519845,  1.04059947,  0.46059477,
         -1.19380569,  0.21724132,  2.69666743,  1.93056965]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.70502281, -7.45960903, -2.49920797, -1.05304623, -3.13333511,
         -1.90231669, -1.12411547, -2.32658529, -5.78024006, -5.08773088]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.05819893, -7.58267593, -2.72234511, -1.43960345, -3.43121195,
          -2.28614616, -0.89729089, -2.77882195, -6.09740543, -5.29890108]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.54231256]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0064 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0382 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 36, vnnlib ID: 36 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-2.26436710, -5.76788616, -1.08416247,  0.26655820, -2.02816391,
         -0.65419853, -1.94119561, -0.85351741, -4.12531948, -3.61707258]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [746]; unstable size 746; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 148, 1, 746] with unstable size 147 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 746] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 746] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [147]; unstable size 147; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 147] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 147] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.37818599,  3.92298698, -0.56011510, -1.79689813,  0.44506049,
         -0.89399910,  0.06454587,  2.27980375,  1.70670152]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.26436710, -5.76788616, -1.08416247,  0.26655820, -2.02816391,
         -0.65419853, -1.94119561, -0.85351741, -4.12531948, -3.61707258]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.26436663, -5.76788521, -1.08416212,  0.26655802, -2.02816391,
          -0.65419877, -1.94119525, -0.85351765, -4.12531900, -3.61707306],
         [-2.26436663, -5.76788521, -1.08416212,  0.26655802, -2.02816391,
          -0.65419877, -1.94119525, -0.85351765, -4.12531900, -3.61707306]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.23064446, -1.12007570, -0.19931889]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 1.85238123,  1.91587329,  1.88412726,  ...,  1.93174624,
             1.96349227,  1.90000021],
           [ 1.82063520,  1.88412726,  1.86825418,  ...,  1.90000021,
             1.93174624,  1.86825418],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  1.91587329,
             1.94761932,  1.90000021],
           ...,
           [ 1.85238123,  1.91587329,  1.88412726,  ..., -0.94126981,
            -1.13174593, -1.14761901],
           [ 1.85238123,  1.90000021,  1.88412726,  ..., -0.43333322,
            -0.90952379, -1.11587298],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  0.56666672,
            -0.44920623, -0.95714283]],

          [[ 1.90016127,  1.96457350,  1.93236744,  ...,  1.99677968,
             2.02898574,  1.96457350],
           [ 1.86795521,  1.93236744,  1.91626441,  ...,  1.96457350,
             1.99677968,  1.93236744],
           [ 1.88405824,  1.94847047,  1.91626441,  ...,  1.98067665,
             2.01288271,  1.96457350],
           ...,
           [ 1.91626441,  1.98067665,  1.94847047,  ..., -1.35265696,
            -1.44927526, -1.40096617],
           [ 1.91626441,  1.96457350,  1.94847047,  ..., -0.80515295,
            -1.32045078, -1.41706920],
           [ 1.90016127,  1.96457350,  1.93236744,  ...,  0.37037048,
            -0.88566822, -1.30434775]],

          [[ 1.98051023,  2.04048014,  2.01049519,  ...,  2.02548766,
             2.05547261,  1.99550271],
           [ 1.95052516,  2.01049519,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.96551764],
           [ 1.96551764,  2.02548766,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.99550271],
           ...,
           [ 1.95052516,  2.01049519,  1.98051023,  ..., -1.51274371,
            -1.55772126, -1.54272878],
           [ 1.95052516,  1.99550271,  1.98051023,  ..., -1.01799107,
            -1.55772126, -1.52773619],
           [ 1.93553269,  1.99550271,  1.96551764,  ...,  0.27136448,
            -1.21289361, -1.48275876]]],


         [[[ 1.85238123,  1.91587329,  1.88412726,  ...,  1.93174624,
             1.96349227,  1.90000021],
           [ 1.82063520,  1.88412726,  1.86825418,  ...,  1.90000021,
             1.93174624,  1.86825418],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  1.91587329,
             1.94761932,  1.90000021],
           ...,
           [ 1.85238123,  1.91587329,  1.88412726,  ..., -0.94126981,
            -1.13174593, -1.14761901],
           [ 1.85238123,  1.90000021,  1.88412726,  ..., -0.43333322,
            -0.90952379, -1.11587298],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  0.56666672,
            -0.44920623, -0.95714283]],

          [[ 1.90016127,  1.96457350,  1.93236744,  ...,  1.99677968,
             2.02898574,  1.96457350],
           [ 1.86795521,  1.93236744,  1.91626441,  ...,  1.96457350,
             1.99677968,  1.93236744],
           [ 1.88405824,  1.94847047,  1.91626441,  ...,  1.98067665,
             2.01288271,  1.96457350],
           ...,
           [ 1.91626441,  1.98067665,  1.94847047,  ..., -1.35265696,
            -1.44927526, -1.40096617],
           [ 1.91626441,  1.96457350,  1.94847047,  ..., -0.80515295,
            -1.32045078, -1.41706920],
           [ 1.90016127,  1.96457350,  1.93236744,  ...,  0.37037048,
            -0.88566822, -1.30434775]],

          [[ 1.98051023,  2.04048014,  2.01049519,  ...,  2.02548766,
             2.05547261,  1.99550271],
           [ 1.95052516,  2.01049519,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.96551764],
           [ 1.96551764,  2.02548766,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.99550271],
           ...,
           [ 1.95052516,  2.01049519,  1.98051023,  ..., -1.51274371,
            -1.55772126, -1.54272878],
           [ 1.95052516,  1.99550271,  1.98051023,  ..., -1.01799107,
            -1.55772126, -1.52773619],
           [ 1.93553269,  1.99550271,  1.96551764,  ...,  0.27136448,
            -1.21289361, -1.48275876]]],


         [[[ 1.85238123,  1.91587329,  1.88412726,  ...,  1.93174624,
             1.96349227,  1.90000021],
           [ 1.82063520,  1.88412726,  1.86825418,  ...,  1.90000021,
             1.93174624,  1.86825418],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  1.91587329,
             1.94761932,  1.90000021],
           ...,
           [ 1.85238123,  1.91587329,  1.88412726,  ..., -0.94126981,
            -1.13174593, -1.14761901],
           [ 1.85238123,  1.90000021,  1.88412726,  ..., -0.43333322,
            -0.90952379, -1.11587298],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  0.56666672,
            -0.44920623, -0.95714283]],

          [[ 1.90016127,  1.96457350,  1.93236744,  ...,  1.99677968,
             2.02898574,  1.96457350],
           [ 1.86795521,  1.93236744,  1.91626441,  ...,  1.96457350,
             1.99677968,  1.93236744],
           [ 1.88405824,  1.94847047,  1.91626441,  ...,  1.98067665,
             2.01288271,  1.96457350],
           ...,
           [ 1.91626441,  1.98067665,  1.94847047,  ..., -1.35265696,
            -1.44927526, -1.40096617],
           [ 1.91626441,  1.96457350,  1.94847047,  ..., -0.80515295,
            -1.32045078, -1.41706920],
           [ 1.90016127,  1.96457350,  1.93236744,  ...,  0.37037048,
            -0.88566822, -1.30434775]],

          [[ 1.98051023,  2.04048014,  2.01049519,  ...,  2.02548766,
             2.05547261,  1.99550271],
           [ 1.95052516,  2.01049519,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.96551764],
           [ 1.96551764,  2.02548766,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.99550271],
           ...,
           [ 1.95052516,  2.01049519,  1.98051023,  ..., -1.51274371,
            -1.55772126, -1.54272878],
           [ 1.95052516,  1.99550271,  1.98051023,  ..., -1.01799107,
            -1.55772126, -1.52773619],
           [ 1.93553269,  1.99550271,  1.96551764,  ...,  0.27136448,
            -1.21289361, -1.48275876]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0437 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 37, vnnlib ID: 37 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.01291561, -12.13928890, -12.98730183, -15.90724564, -13.82077122,
         -17.84158707, -17.88521957, -16.36121368, -11.50735950, -12.93546104]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [566]; unstable size 566; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 181, 1, 566] with unstable size 180 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 566] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 566] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [180]; unstable size 180; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 180] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 180] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.04726744, 2.13469315, 4.88873720, 2.78446674, 6.62359476, 6.58985138,
         4.87536240, 0.22735929, 1.88157797]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0594 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 38, vnnlib ID: 38 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-7.67120075, -8.34336758, -2.96194768, -3.20485783, -2.59110832,
         -3.43676805, -1.38701296, -4.13833094, -8.45190620, -6.74960279]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [421]; unstable size 421; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 250, 1, 421] with unstable size 249 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 421] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 421] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [249]; unstable size 249; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 249] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 249] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.48716259,  5.17507648,  0.09683514,  0.57209611, -0.21805716,
          0.58378112,  1.18988442,  5.01148224,  3.44507027]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-7.67120075, -8.34336758, -2.96194768, -3.20485783, -2.59110832,
         -3.43676805, -1.38701296, -4.13833094, -8.45190620, -6.74960279]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.35it/s]100%|██████████| 1/1 [00:00<00:00,  7.34it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.36143351, -8.27827263, -2.67933655, -3.03170109, -2.11203384,
          -3.19349098, -1.59651995, -3.84145784, -8.13518906, -6.71451759]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.51551390]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1392 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 20.927518844604492
alpha/beta optimization time: 1.3514549732208252
initial alpha-crown bounds: tensor([[ 4.54304886,  5.26645184,  0.14525390,  0.62453985, -0.16246295,
          0.64612204,  1.25836861,  5.08361530,  3.52258205]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.16246294975280762
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.4488217830658
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.44878482818604
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.44875717163086
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.44873523712158
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.44871616363525
Verifying property 4 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.16246295]], device='cuda:0') need to verify.
Model prediction is: tensor([-7.67120075, -8.34336758, -2.96194768, -3.20485783, -2.59110832,
        -3.43676805, -1.38701296, -4.13833094, -8.45190620, -6.74960279],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.16246295]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 421
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 246
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 688
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00024247169494628906
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.162461519241333
10 lb beta sum: 0.0, worst -0.16246509552001953
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0553    transfer 0.0001    finalize 0.0001    func 0.0558    
Accumulated time: func 0.0558    prepare 0.0002    bound 0.0553    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 51] 
split level 1: [/input-12, 41] 
split level 2: [/input-12, 60] 
split level 3: [/input-12, 35] 
split level 4: [/input-12, 92] 
split level 5: [/input-12, 29] 
split level 6: [/input-12, 11] 
split level 7: [/input-12, 6] 
split level 8: [/input-12, 38] 
split level 9: [/input-12, 37] 
split level 10: [/input-12, 17] 
split level 11: [/input-12, 33] 
split level 12: [/input-12, 46] 
split level 13: [/input-12, 26] 
split level 14: [/input-12, 54] 
split level 15: [/input-8, 299] 
split level 16: [/input-8, 1874] 
split level 17: [/input-8, 859] 
split level 18: [/input-8, 485] 
split level 19: [/input-8, 300] 
split level 20: [/input-8, 188] 
split level 21: [/input-8, 971] 
split level 22: [/input-8, 1114] 
split level 23: [/input-8, 921] 
split level 24: [/input-8, 809] 
split level 25: [/input-8, 89] 
split level 26: [/input-8, 429] 
split level 27: [/input-8, 1429] 
split level 28: [/input-8, 97] 
split level 29: [/input-8, 828] 
split level 30: [/input-8, 85] 
split level 31: [/input-8, 82] 
split level 32: [/input-8, 571] 
split level 33: [/input-8, 659] 
split level 34: [/input-8, 1426] 
split level 35: [/input-8, 187] 
split level 36: [/input-8, 481] 
split level 37: [/input-8, 994] 
split level 38: [/input-8, 964] 
split level 39: [/input-8, 1427] 
split level 40: [/input-8, 107] 
split level 41: [/input-8, 1978] 
split level 42: [/input-8, 938] 
split level 43: [/input-8, 1819] 
split level 44: [/input-8, 1150] 
split level 45: [/input-8, 1395] 
split level 46: [/input-8, 1130] 
split level 47: [/input-8, 1007] 
split level 48: [/input-8, 1865] 
split level 49: [/input-8, 282] 
split level 50: [/input-8, 435] 
split level 51: [/input-8, 1521] 
split level 52: [/input-8, 668] 
split level 53: [/input-8, 1010] 
split level 54: [/input-8, 1324] 
split level 55: [/input-8, 1388] 
split level 56: [/input-8, 1857] 
split level 57: [/input-8, 970] 
split level 58: [/input-8, 800] 
split level 59: [/input-8, 2024] 
split level 60: [/input-8, 1411] 
split level 61: [/input, 2280] 
split level 62: [/input-8, 842] 
split level 63: [/input-8, 1250] 
split level 64: [/input-8, 1866] 
split level 65: [/input-8, 1980] 
split level 66: [/input-8, 934] 
split level 67: [/input-8, 1947] 
split level 68: [/input-8, 1380] 
split level 69: [/input-8, 937] 
split level 70: [/input-8, 1030] 
split level 71: [/input-8, 2025] 
split level 72: [/input-8, 926] 
split level 73: [/input-8, 841] 
split level 74: [/input-8, 65] 
split level 75: [/input-8, 1837] 
split level 76: [/input, 484] 
split level 77: [/input-8, 494] 
split level 78: [/input-8, 688] 
split level 79: [/input-8, 963] 
split level 80: [/input-8, 544] 
split level 81: [/input-8, 522] 
split level 82: [/input-8, 505] 
split level 83: [/input-8, 1931] 
split level 84: [/input-8, 1417] 
split level 85: [/input, 1587] 
split level 86: [/input-8, 414] 
split level 87: [/input-8, 1983] 
split level 88: [/input-8, 310] 
split level 89: [/input-8, 493] 
split level 90: [/input-8, 99] 
split level 91: [/input-8, 1834] 
split level 92: [/input, 1638] 
split level 93: [/input-8, 1575] 
split level 94: [/input-8, 496] 
split level 95: [/input-8, 2004] 
split level 96: [/input-8, 1018] 
split level 97: [/input-8, 407] 
split level 98: [/input-8, 984] 
split level 99: [/input-8, 419] 
split level 100: [/input, 483] 
split level 101: [/input-8, 1582] 
split level 102: [/input-8, 2003] 
split level 103: [/input-8, 2021] 
split level 104: [/input-8, 1469] 
split level 105: [/input-8, 1434] 
split level 106: [/input-8, 119] 
split level 107: [/input-8, 514] 
split level 108: [/input, 1719] 
split level 109: [/input-8, 1996] 
split level 110: [/input, 2136] 
split level 111: [/input, 1718] 
split level 112: [/input-8, 816] 
split level 113: [/input-8, 1486] 
split level 114: [/input-8, 2045] 
split level 115: [/input-8, 1443] 
split level 116: [/input-8, 1795] 
split level 117: [/input-8, 1240] 
split level 118: [/input-8, 1533] 
split level 119: [/input-8, 503] 
split level 120: [/input, 1653] 
split level 121: [/input, 1575] 
split level 122: [/input-8, 479] 
split level 123: [/input, 3545] 
split level 124: [/input, 174] 
split level 125: [/input, 1702] 
split level 126: [/input-8, 508] 
split level 127: [/input-8, 638] 
split level 128: [/input-8, 2029] 
split level 129: [/input-8, 1363] 
split level 130: [/input, 2296] 
split level 131: [/input-8, 1242] 
split level 132: [/input-8, 914] 
split level 133: [/input-8, 1302] 
split level 134: [/input, 1669] 
split level 135: [/input, 2602] 
split level 136: [/input-8, 1354] 
split level 137: [/input-8, 1012] 
split level 138: [/input, 2374] 
split level 139: [/input, 431] 
split level 140: [/input, 2121] 
split level 141: [/input-8, 504] 
split level 142: [/input, 739] 
split level 143: [/input-8, 689] 
split level 144: [/input, 709] 
split level 145: [/input, 1610] 
split level 146: [/input, 1130] 
split level 147: [/input, 1570] 
split level 148: [/input, 1743] 
split level 149: [/input, 1468] 
split level 150: [/input, 1705] 
split level 151: [/input-8, 2023] 
split level 152: [/input, 3539] 
split level 153: [/input, 2008] 
split level 154: [/input, 1948] 
split level 155: [/input, 3517] 
split level 156: [/input, 2261] 
split level 157: [/input, 1756] 
split level 158: [/input, 1589] 
split level 159: [/input-8, 1529] 
split level 160: [/input-8, 1381] 
split level 161: [/input-8, 467] 
split level 162: [/input-8, 1823] 
split level 163: [/input, 3357] 
split level 164: [/input, 1469] 
split level 165: [/input, 1164] 
split level 166: [/input, 2322] 
split level 167: [/input-8, 577] 
split level 168: [/input, 3513] 
split level 169: [/input, 3533] 
split level 170: [/input-8, 76] 
split level 171: [/input, 1888] 
split level 172: [/input, 1302] 
split level 173: [/input, 1499] 
split level 174: [/input, 1105] 
split level 175: [/input-8, 951] 
split level 176: [/input, 1956] 
split level 177: [/input-8, 1398] 
split level 178: [/input-8, 1995] 
split level 179: [/input-8, 406] 
split level 180: [/input, 3561] 
split level 181: [/input, 1685] 
split level 182: [/input, 1937] 
split level 183: [/input, 1159] 
split level 184: [/input, 3069] 
split level 185: [/input, 1826] 
split level 186: [/input, 2341] 
split level 187: [/input-8, 1955] 
split level 188: [/input, 3350] 
split level 189: [/input, 3349] 
split level 190: [/input-8, 1442] 
split level 191: [/input-8, 1402] 
split level 192: [/input, 3869] 
split level 193: [/input, 1933] 
split level 194: [/input, 1196] 
split level 195: [/input, 376] 
split level 196: [/input, 2219] 
split level 197: [/input, 162] 
split level 198: [/input-8, 1047] 
split level 199: [/input, 2259] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1623852252960205
10 lb beta sum: 0.0, worst -0.1623835563659668
Time: prepare 0.0123    bound 0.0982    transfer 0.0030    finalize 0.0030    func 0.1192    
Accumulated time: func 0.1750    prepare 0.0230    bound 0.1535    transfer 0.0032    finalize 0.0032    
all_split False
======================Cut inference begins======================
max lb tensor(0.25877786) min lb tensor(-0.16238070)
Number of Verified Splits: 8 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.010870695114135742 
BICCOS Cumulative time: 0.010870695114135742
Preprocessing time: 0.010129690170288086 Inference time: 0.000339508056640625 Add cuts time: 0.00012183189392089844 Cut analysis time: 0.0002796649932861328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14719 (1), -0.14710 (1), -0.14692 (1), -0.14687 (1), -0.14671 (1), -0.14623 (1), -0.14620 (1), -0.14515 (1), -0.14509 (1), -0.14418 (1), -0.14326 (1), -0.14314 (1), -0.14312 (1), -0.14254 (1), -0.14196 (1), -0.14144 (1), -0.14034 (1), -0.13999 (1), -0.13794 (1), -0.13717 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5177    set_bounds 0.0097    solve 0.1193    add 0.2366    
Accumulated time: pickout 0.0004    decision 0.5177    set_bounds 0.0097    solve 0.1193    add 0.2366    
Current (lb-rhs): -0.14719367027282715
50 domains visited
Cumulative time: 0.9791455268859863

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 92] [/input-12, 35] [/input-12, 35] [/input-12, 92] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] 
split level 1: [/input-12, 29] [/input-12, 92] [/input-12, 92] [/input-12, 29] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 29] 
split level 2: [/input-12, 11] [/input-12, 29] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 11] 
split level 3: [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 17] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1085352897644043
10 lb beta sum: 1.0571024417877197, worst -0.042093098163604736
Time: prepare 0.0079    bound 0.1149    transfer 0.0007    finalize 0.0021    func 0.1282    
Accumulated time: func 0.3032    prepare 0.0312    bound 0.2684    transfer 0.0039    finalize 0.0052    
all_split False
======================Cut inference begins======================
max lb tensor(0.17488968) min lb tensor(-0.04197049)
Number of Verified Splits: 359 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.03273892402648926 
BICCOS Cumulative time: 0.043609619140625
Preprocessing time: 0.011758565902709961 Inference time: 0.013137340545654297 Add cuts time: 0.007651329040527344 Cut analysis time: 0.00019168853759765625
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0081    decision 0.0198    set_bounds 0.0125    solve 0.1283    add 0.0154    
Accumulated time: pickout 0.0084    decision 0.5375    set_bounds 0.0223    solve 0.2476    add 0.2520    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([35, 92]), tensor([-1., -1.]), tensor([0, 0]), tensor([-5.34986170e-21,  4.78058308e-02]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([35, 92]), tensor([-1.,  1.]), tensor([0, 0]), tensor([-5.34986170e-21,  1.53441474e-01]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([35, 92]), tensor([ 1., -1.]), tensor([0, 0]), tensor([-5.34986170e-21,  1.21082351e-01]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([35, 92]), tensor([1., 1.]), tensor([0, 0]), tensor([-5.34986170e-21,  1.51228473e-01]), tensor([0, 1]))}
Shallow branching resets to n domains:  4
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.024687767028808594

all verified at 1th iter
Time: prepare 0.0003    bound 0.0137    transfer 0.0001    finalize 0.0001    func 0.0144    
Accumulated time: func 0.3176    prepare 0.0315    bound 0.2821    transfer 0.0040    finalize 0.0054    
After pruning, left:  0

Back to Regular BaB


Properties batch 5, size 1
Remaining timeout: 196.97536158561707
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 196.9752860069275
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 196.97526216506958
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 196.9750518798828
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 3.0250 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 39, vnnlib ID: 39 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.08262920, -10.85117626,  -6.26876736,  -6.31408882,  -5.73352718,
          -6.74807501,  -3.77881598,  -7.22824049, -11.69428158, -10.35355473]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [375]; unstable size 375; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 209, 1, 375] with unstable size 208 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 375] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 375] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [208]; unstable size 208; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 208] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 208] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.36300087, 4.89374256, 1.18320334, 1.43400931, 0.60667610, 1.79556406,
         1.70379853, 5.56933069, 4.72802067]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0249 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 40, vnnlib ID: 40 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -5.55409622,  -9.96810532,  -6.92626286,  -8.56464005,  -8.43423653,
          -9.26128197, -10.86567974,  -8.56524467,  -8.85235691, -11.04646587]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [508]; unstable size 508; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 169, 1, 508] with unstable size 168 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 508] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 508] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [168]; unstable size 168; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 168] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 168] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.94185448, 0.70694852, 2.04573965, 1.92763662, 2.63131237, 4.18971491,
         1.79439843, 2.23234749, 4.28507805]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0643 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 41, vnnlib ID: 41 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.03971958, -11.64941406, -10.00275898,  -8.47386932,  -9.92812920,
          -8.93652153, -10.23073101, -10.63002968,  -4.10415173,  -9.58254910]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [504]; unstable size 504; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 207, 1, 504] with unstable size 206 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 504] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 504] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [206]; unstable size 206; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 206] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 206] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.82665944, 6.09783554, 4.47349644, 3.14197636, 4.34114504, 3.46894121,
         4.61985588, 4.88829041, 4.12811470]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0704 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 42, vnnlib ID: 42 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.23514986, -9.22857761, -3.75808716, -3.27435327, -4.29405165,
         -3.58545446, -2.41056466, -6.29414511, -6.66572762, -8.34386063]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [590]; unstable size 590; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 245, 1, 590] with unstable size 244 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 590] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 590] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [244]; unstable size 244; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 244] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 244] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.87620664,  4.30693913, -0.06645823, -0.26148707,  0.30728054,
         -0.24854922,  2.13002610,  1.88156343,  3.71216249]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.23514986, -9.22857761, -3.75808716, -3.27435327, -4.29405165,
         -3.58545446, -2.41056466, -6.29414511, -6.66572762, -8.34386063]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.18it/s]100%|██████████| 1/1 [00:00<00:00,  9.16it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.03449631, -9.09223366, -3.54179525, -2.84015751, -4.05080748,
          -3.00110483, -2.64081597, -5.93490744, -6.32542515, -8.11971188],
         [-6.03449631, -9.09223366, -3.54179525, -2.84015751, -4.05080748,
          -3.00110483, -2.64081597, -5.93490744, -6.32542515, -8.11971188]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.90097928, 0.19934154, 0.36028886]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1120 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 14.594411849975586
alpha/beta optimization time: 1.2238450050354004
initial alpha-crown bounds: tensor([[ 1.98166192,  4.46373272,  0.01902938, -0.21572924,  0.40182018,
         -0.18405670,  2.22683048,  2.03213978,  3.86898351]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.2157292366027832
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.59686708450317
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.59682869911194
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.59680318832397
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.59678173065186
Verifying property 3 with 1 instances.
##### Instance 42 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.21572924]], device='cuda:0') need to verify.
Model prediction is: tensor([-6.23514986, -9.22857761, -3.75808716, -3.27435327, -4.29405165,
        -3.58545446, -2.41056466, -6.29414511, -6.66572762, -8.34386063],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.21572924]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 590
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 242
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 853
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010609626770019531
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.21572774648666382
10 lb beta sum: 0.0, worst -0.21573162078857422
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0520    transfer 0.0001    finalize 0.0001    func 0.0525    
Accumulated time: func 0.0525    prepare 0.0002    bound 0.0520    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 33] 
split level 1: [/input-12, 1] 
split level 2: [/input-12, 11] 
split level 3: [/input-12, 51] 
split level 4: [/input-12, 41] 
split level 5: [/input-12, 10] 
split level 6: [/input-8, 109] 
split level 7: [/input-12, 13] 
split level 8: [/input-12, 45] 
split level 9: [/input-12, 82] 
split level 10: [/input-8, 540] 
split level 11: [/input-8, 850] 
split level 12: [/input-8, 1308] 
split level 13: [/input-8, 971] 
split level 14: [/input-8, 525] 
split level 15: [/input-8, 307] 
split level 16: [/input-8, 92] 
split level 17: [/input-8, 117] 
split level 18: [/input-8, 981] 
split level 19: [/input-8, 1909] 
split level 20: [/input-8, 483] 
split level 21: [/input-8, 1298] 
split level 22: [/input-8, 869] 
split level 23: [/input-8, 485] 
split level 24: [/input-12, 42] 
split level 25: [/input-8, 1389] 
split level 26: [/input-8, 1453] 
split level 27: [/input-8, 989] 
split level 28: [/input-8, 1461] 
split level 29: [/input-8, 94] 
split level 30: [/input, 3432] 
split level 31: [/input-8, 977] 
split level 32: [/input-8, 309] 
split level 33: [/input-8, 654] 
split level 34: [/input-8, 484] 
split level 35: [/input-8, 979] 
split level 36: [/input, 325] 
split level 37: [/input-8, 1940] 
split level 38: [/input-8, 486] 
split level 39: [/input-8, 530] 
split level 40: [/input-8, 1421] 
split level 41: [/input-8, 1523] 
split level 42: [/input-8, 1345] 
split level 43: [/input-8, 475] 
split level 44: [/input-8, 878] 
split level 45: [/input-8, 1828] 
split level 46: [/input-8, 985] 
split level 47: [/input-8, 1939] 
split level 48: [/input-8, 620] 
split level 49: [/input-8, 1247] 
split level 50: [/input-8, 1468] 
split level 51: [/input-8, 1142] 
split level 52: [/input-8, 828] 
split level 53: [/input-8, 1527] 
split level 54: [/input-8, 103] 
split level 55: [/input-8, 507] 
split level 56: [/input, 1366] 
split level 57: [/input-8, 541] 
split level 58: [/input-8, 124] 
split level 59: [/input-8, 86] 
split level 60: [/input-8, 91] 
split level 61: [/input, 3399] 
split level 62: [/input-8, 1254] 
split level 63: [/input-8, 998] 
split level 64: [/input-8, 506] 
split level 65: [/input-8, 113] 
split level 66: [/input-8, 1771] 
split level 67: [/input-8, 1390] 
split level 68: [/input, 391] 
split level 69: [/input-8, 1433] 
split level 70: [/input-8, 1903] 
split level 71: [/input-8, 1324] 
split level 72: [/input-8, 524] 
split level 73: [/input-8, 1255] 
split level 74: [/input-8, 997] 
split level 75: [/input-8, 310] 
split level 76: [/input-8, 1457] 
split level 77: [/input-8, 1348] 
split level 78: [/input-8, 428] 
split level 79: [/input-8, 522] 
split level 80: [/input-8, 1381] 
split level 81: [/input-8, 1904] 
split level 82: [/input-8, 1446] 
split level 83: [/input-8, 75] 
split level 84: [/input-8, 1467] 
split level 85: [/input-8, 1437] 
split level 86: [/input, 3417] 
split level 87: [/input, 316] 
split level 88: [/input, 2135] 
split level 89: [/input-8, 1246] 
split level 90: [/input-8, 1835] 
split level 91: [/input-8, 1076] 
split level 92: [/input-8, 1837] 
split level 93: [/input-8, 867] 
split level 94: [/input, 386] 
split level 95: [/input-8, 1754] 
split level 96: [/input-8, 624] 
split level 97: [/input-8, 1762] 
split level 98: [/input, 369] 
split level 99: [/input-8, 1844] 
split level 100: [/input-8, 923] 
split level 101: [/input-8, 487] 
split level 102: [/input, 406] 
split level 103: [/input-8, 1071] 
split level 104: [/input, 1382] 
split level 105: [/input-8, 1838] 
split level 106: [/input-8, 1347] 
split level 107: [/input, 355] 
split level 108: [/input-8, 1237] 
split level 109: [/input-8, 827] 
split level 110: [/input, 3960] 
split level 111: [/input-8, 573] 
split level 112: [/input-8, 602] 
split level 113: [/input-8, 501] 
split level 114: [/input-8, 505] 
split level 115: [/input, 309] 
split level 116: [/input-8, 125] 
split level 117: [/input, 1603] 
split level 118: [/input-8, 1009] 
split level 119: [/input-8, 415] 
split level 120: [/input-8, 83] 
split level 121: [/input, 1352] 
split level 122: [/input, 220] 
split level 123: [/input, 4045] 
split level 124: [/input-8, 1936] 
split level 125: [/input-8, 1736] 
split level 126: [/input, 404] 
split level 127: [/input-8, 862] 
split level 128: [/input-8, 922] 
split level 129: [/input, 2802] 
split level 130: [/input-8, 1440] 
split level 131: [/input-8, 887] 
split level 132: [/input-8, 1816] 
split level 133: [/input, 2098] 
split level 134: [/input, 1350] 
split level 135: [/input, 4013] 
split level 136: [/input, 1396] 
split level 137: [/input-8, 1235] 
split level 138: [/input, 1401] 
split level 139: [/input, 3510] 
split level 140: [/input-8, 840] 
split level 141: [/input-8, 958] 
split level 142: [/input, 3493] 
split level 143: [/input, 1333] 
split level 144: [/input, 174] 
split level 145: [/input-8, 1023] 
split level 146: [/input-8, 1406] 
split level 147: [/input-8, 435] 
split level 148: [/input, 3127] 
split level 149: [/input-8, 1551] 
split level 150: [/input-8, 2036] 
split level 151: [/input, 32] 
split level 152: [/input, 1416] 
split level 153: [/input-8, 1983] 
split level 154: [/input, 1960] 
split level 155: [/input, 3913] 
split level 156: [/input-8, 477] 
split level 157: [/input-8, 1744] 
split level 158: [/input, 1949] 
split level 159: [/input-8, 1323] 
split level 160: [/input, 2704] 
split level 161: [/input-8, 1770] 
split level 162: [/input-8, 74] 
split level 163: [/input, 2091] 
split level 164: [/input-8, 1787] 
split level 165: [/input-8, 563] 
split level 166: [/input-8, 786] 
split level 167: [/input, 1093] 
split level 168: [/input, 1347] 
split level 169: [/input, 2857] 
split level 170: [/input-8, 1442] 
split level 171: [/input, 300] 
split level 172: [/input, 4090] 
split level 173: [/input, 3329] 
split level 174: [/input, 1963] 
split level 175: [/input, 3908] 
split level 176: [/input-8, 1126] 
split level 177: [/input, 3371] 
split level 178: [/input, 4043] 
split level 179: [/input, 1964] 
split level 180: [/input, 1708] 
split level 181: [/input-8, 1477] 
split level 182: [/input, 3356] 
split level 183: [/input-8, 1919] 
split level 184: [/input, 3022] 
split level 185: [/input, 1725] 
split level 186: [/input-8, 1427] 
split level 187: [/input, 3694] 
split level 188: [/input, 506] 
split level 189: [/input, 3330] 
split level 190: [/input, 1371] 
split level 191: [/input, 3607] 
split level 192: [/input, 2962] 
split level 193: [/input, 3968] 
split level 194: [/input, 2916] 
split level 195: [/input-8, 876] 
split level 196: [/input, 3677] 
split level 197: [/input, 4052] 
split level 198: [/input, 4030] 
split level 199: [/input, 2841] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.21565282344818115
10 lb beta sum: 0.0, worst -0.2156522274017334
Time: prepare 0.0121    bound 0.0993    transfer 0.0018    finalize 0.0030    func 0.1188    
Accumulated time: func 0.1713    prepare 0.0221    bound 0.1513    transfer 0.0019    finalize 0.0031    
all_split False
======================Cut inference begins======================
max lb tensor(0.23370671) min lb tensor(-0.21564716)
Number of Verified Splits: 3 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.010790109634399414 
BICCOS Cumulative time: 0.010790109634399414
Preprocessing time: 0.010056018829345703 Inference time: 0.00014972686767578125 Add cuts time: 5.698204040527344e-05 Cut analysis time: 0.0005273818969726562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20197 (1), -0.20187 (1), -0.20132 (1), -0.20050 (1), -0.20030 (1), -0.20022 (1), -0.20021 (1), -0.19973 (1), -0.19950 (1), -0.19921 (1), -0.19912 (1), -0.19872 (1), -0.19870 (1), -0.19763 (1), -0.19665 (1), -0.19640 (1), -0.19613 (1), -0.19596 (1), -0.19552 (1), -0.19497 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5069    set_bounds 0.0122    solve 0.1189    add 0.0693    
Accumulated time: pickout 0.0003    decision 0.5069    set_bounds 0.0122    solve 0.1189    add 0.0693    
Current (lb-rhs): -0.2019716501235962
50 domains visited
Cumulative time: 0.7839298248291016

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 33] [/input-12, 33] [/input-12, 11] [/input-12, 11] [/input-12, 33] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] 
split level 1: [/input-12, 11] [/input-12, 41] [/input-12, 41] [/input-12, 51] [/input-12, 11] [/input-12, 51] [/input-12, 51] [/input-12, 41] [/input-12, 51] [/input-12, 51] 
split level 2: [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 51] [/input-12, 41] [/input-12, 41] 
split level 3: [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19380074739456177
10 lb beta sum: 0.5672595500946045, worst -0.18613725900650024
Time: prepare 0.0082    bound 0.1147    transfer 0.0007    finalize 0.0023    func 0.1287    
Accumulated time: func 0.3000    prepare 0.0306    bound 0.2661    transfer 0.0026    finalize 0.0055    
all_split False
======================Cut inference begins======================
max lb tensor(0.22112542) min lb tensor(-0.18612152)
Number of Verified Splits: 75 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 15
#cuts >= 20: 0
BICCOS time: 0.018151044845581055 
BICCOS Cumulative time: 0.02894115447998047
Preprocessing time: 0.012746334075927734 Inference time: 0.002862215042114258 Add cuts time: 0.002035856246948242 Cut analysis time: 0.0005066394805908203
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04529 (2), -0.04510 (2), -0.04461 (2), -0.04388 (2), -0.04372 (2), -0.04220 (2), -0.04216 (2), -0.04171 (2), -0.04116 (2), -0.04091 (2), -0.04036 (2), -0.03993 (2), -0.03971 (2), -0.03957 (2), -0.03933 (2), -0.03910 (2), -0.03808 (2), -0.03698 (2), -0.03679 (2), -0.03637 (2), 
Length of domains: 50
Time: pickout 0.0015    decision 0.0197    set_bounds 0.0119    solve 0.1288    add 0.0834    
Accumulated time: pickout 0.0018    decision 0.5266    set_bounds 0.0242    solve 0.2477    add 0.1527    
Current (lb-rhs): -0.04528772830963135
100 domains visited
Cumulative time: 1.0476715564727783

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] 
split level 1: [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 41] [/input-12, 51] [/input-12, 41] 
split level 2: [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 51] [/input-12, 41] [/input-12, 13] 
split level 3: [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 45] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05325722694396973
10 lb beta sum: 1.2031506299972534, worst -0.0839933454990387
Time: prepare 0.0083    bound 0.1358    transfer 0.0007    finalize 0.0023    func 0.1503    
Accumulated time: func 0.4503    prepare 0.0391    bound 0.4018    transfer 0.0033    finalize 0.0078    
all_split False
======================Cut inference begins======================
max lb tensor(0.50066888) min lb tensor(-0.02560884)
Number of Verified Splits: 383 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 14
#cuts >= 20: 0
BICCOS time: 0.03772878646850586 
BICCOS Cumulative time: 0.06666994094848633
Preprocessing time: 0.011816024780273438 Inference time: 0.015445470809936523 Add cuts time: 0.010010480880737305 Cut analysis time: 0.00045680999755859375
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0196    set_bounds 0.0153    solve 0.1504    add 0.0194    
Accumulated time: pickout 0.0030    decision 0.5463    set_bounds 0.0394    solve 0.3981    add 0.1720    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([11, 33]), tensor([-1., -1.]), tensor([0, 0]), tensor([8.74229075e-14, 2.32525155e-01]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([11, 33]), tensor([-1.,  1.]), tensor([0, 0]), tensor([8.74229075e-14, 1.39975417e-02]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([11, 13, 33]), tensor([ 1., -1., -1.]), tensor([0, 0, 0]), tensor([1.00118637e-13, 4.61609811e-02, 1.88429639e-01]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([11, 13, 33]), tensor([ 1., -1.,  1.]), tensor([0, 0, 0]), tensor([1.00118637e-13, 4.61609811e-02, 6.21936992e-02]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([11, 13, 33]), tensor([ 1.,  1., -1.]), tensor([0, 0, 0]), tensor([1.00118637e-13, 4.11796421e-02, 1.91049322e-01]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([11, 13, 33]), tensor([1., 1., 1.]), tensor([0, 0, 0]), tensor([1.00118637e-13, 4.11796421e-02, 7.28504807e-02]), tensor([0, 1, 2]))}
Shallow branching resets to n domains:  6
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18854981660842896
10 lb beta sum: 0.4847225546836853, worst -0.16318660974502563
Time: prepare 0.0004    bound 0.1229    transfer 0.0001    finalize 0.0002    func 0.1237    
Accumulated time: func 0.5739    prepare 0.0395    bound 0.5247    transfer 0.0035    finalize 0.0080    
After pruning, left:  1

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1] 
split level 1: [/input-12, 51] 
split level 2: [/input-12, 41] 
split level 3: [/input-12, 13] 
split level 4: [/input-12, 45] 
split level 5: [/input-12, 82] 
split level 6: [/input-8, 1909] 
split level 7: [/input-8, 483] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9470596313476562, worst -0.09480065107345581
10 lb beta sum: 0.955050528049469, worst -0.08700203895568848
Time: prepare 0.0114    bound 0.1267    transfer 0.0009    finalize 0.0013    func 0.1420    
Accumulated time: func 0.7160    prepare 0.0514    bound 0.6514    transfer 0.0044    finalize 0.0092    
all_split False
======================Cut inference begins======================
max lb tensor(0.36417007) min lb tensor(-0.07476854)
Number of Verified Splits: 226 of 256
Stop inferencing: Max iteration reached.
Total number of valid cuts: 14.
#cuts 1-3: 14
#cuts >= 20: 0
BICCOS time: 0.00033736228942871094 
BICCOS Cumulative time: 0.06700730323791504
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07477 (8), -0.07202 (8), -0.07157 (8), -0.07037 (8), -0.06903 (8), -0.06820 (8), -0.06710 (8), -0.06513 (8), -0.03317 (8), -0.03226 (8), -0.02973 (8), -0.02852 (8), -0.02500 (8), -0.02394 (8), -0.02323 (8), -0.02176 (8), -0.02075 (8), -0.02025 (8), -0.01974 (8), -0.01766 (8), 
Length of domains: 30
Time: pickout 0.0005    decision 0.0215    set_bounds 0.0245    solve 0.1421    add 0.0017    
Accumulated time: pickout 0.0035    decision 0.5678    set_bounds 0.0639    solve 0.5402    add 0.1737    
Current (lb-rhs): -0.0747685432434082
130 domains visited
Cumulative time: 1.6257996559143066

BaB round 2
batch: 30
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1308] [/input-8, 1308] [/input-8, 1308] [/input-8, 850] [/input-8, 1308] [/input-8, 1308] [/input-8, 92] [/input-8, 92] [/input-8, 1308] [/input-8, 1308] 
split level 1: [/input-8, 92] [/input-8, 92] [/input-8, 117] [/input-8, 1308] [/input-8, 92] [/input-8, 94] [/input-8, 484] [/input-8, 654] [/input-8, 92] [/input-8, 92] 
split level 2: [/input-8, 94] [/input-8, 94] [/input-8, 92] [/input-8, 94] [/input-8, 620] [/input-8, 654] [/input-8, 654] [/input-8, 484] [/input-8, 94] [/input-8, 94] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9347535967826843, worst -0.05919849872589111
10 lb beta sum: 0.9347535967826843, worst -0.05898469686508179
Time: prepare 0.0108    bound 0.1332    transfer 0.0017    finalize 0.0013    func 0.1486    
Accumulated time: func 0.8646    prepare 0.0624    bound 0.7846    transfer 0.0061    finalize 0.0105    
all_split False
======================Cut inference begins======================
max lb tensor(0.04600602) min lb tensor(-0.05893892)
Number of Verified Splits: 159 of 240
Stop inferencing: Max iteration reached.
Total number of valid cuts: 14.
#cuts 1-3: 14
#cuts >= 20: 0
BICCOS time: 0.0003638267517089844 
BICCOS Cumulative time: 0.06737112998962402
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05894 (11), -0.05798 (11), -0.05703 (11), -0.05697 (11), -0.05561 (11), -0.05473 (11), -0.05436 (11), -0.05400 (11), -0.05381 (11), -0.05339 (11), -0.05333 (11), -0.05311 (11), -0.05239 (11), -0.05100 (11), -0.05038 (11), -0.05014 (11), -0.05001 (11), -0.04951 (11), -0.04916 (11), -0.04680 (11), 
Length of domains: 81
Time: pickout 0.0022    decision 0.0167    set_bounds 0.0135    solve 0.1487    add 0.0757    
Accumulated time: pickout 0.0057    decision 0.5845    set_bounds 0.0774    solve 0.6889    add 0.2494    
Current (lb-rhs): -0.05893892049789429
211 domains visited
Cumulative time: 1.8906073570251465

BaB round 3
batch: 81
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 92] [/input-8, 850] [/input-8, 92] [/input-8, 850] [/input-8, 92] [/input-8, 92] [/input-8, 92] [/input-8, 92] [/input-8, 92] [/input-8, 850] 
split level 1: [/input-8, 484] [/input-8, 92] [/input-8, 484] [/input-8, 92] [/input-8, 484] [/input-8, 484] [/input-8, 484] [/input-8, 484] [/input-8, 484] [/input-8, 92] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9309263229370117, worst -0.049764811992645264
10 lb beta sum: 0.9309263229370117, worst -0.049612224102020264
Time: prepare 0.0145    bound 0.1342    transfer 0.0019    finalize 0.0017    func 0.1544    
Accumulated time: func 1.0190    prepare 0.0772    bound 0.9188    transfer 0.0079    finalize 0.0123    
all_split False
======================Cut inference begins======================
max lb tensor(0.01424789) min lb tensor(-0.04953629)
Number of Verified Splits: 92 of 324
Stop inferencing: Max iteration reached.
Total number of valid cuts: 14.
#cuts 1-3: 14
#cuts >= 20: 0
BICCOS time: 0.00041294097900390625 
BICCOS Cumulative time: 0.06778407096862793
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04954 (13), -0.04881 (13), -0.04732 (13), -0.04608 (13), -0.04598 (13), -0.04538 (13), -0.04516 (13), -0.04494 (13), -0.04420 (13), -0.04398 (13), -0.04390 (13), -0.04253 (13), -0.04240 (13), -0.04234 (13), -0.04218 (13), -0.04140 (13), -0.04139 (13), -0.04130 (13), -0.04076 (13), -0.04020 (13), 
Length of domains: 232
Time: pickout 0.0153    decision 0.0196    set_bounds 0.0157    solve 0.1545    add 0.0245    
Accumulated time: pickout 0.0210    decision 0.6041    set_bounds 0.0931    solve 0.8434    add 0.2739    
Current (lb-rhs): -0.049536287784576416
443 domains visited
Cumulative time: 2.1216299533843994

BaB round 4
batch: 232
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 654] [/input-8, 979] [/input-8, 654] [/input-8, 979] [/input-8, 654] [/input-8, 979] [/input-8, 654] [/input-8, 979] [/input-8, 654] [/input-8, 979] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9268816709518433, worst -0.04418790340423584
10 lb beta sum: 0.9268816709518433, worst -0.04407018423080444
Time: prepare 0.0210    bound 0.1352    transfer 0.0031    finalize 0.0023    func 0.1645    
Accumulated time: func 1.1835    prepare 0.0984    bound 1.0540    transfer 0.0111    finalize 0.0145    
all_split False
======================Cut inference begins======================
max lb tensor(0.00667292) min lb tensor(-0.04402655)
Number of Verified Splits: 60 of 464
Stop inferencing: Max iteration reached.
Total number of valid cuts: 14.
#cuts 1-3: 14
#cuts >= 20: 0
BICCOS time: 0.0003592967987060547 
BICCOS Cumulative time: 0.06814336776733398
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04403 (14), -0.04354 (14), -0.04199 (14), -0.04131 (14), -0.04091 (14), -0.04048 (14), -0.04035 (14), -0.03986 (14), -0.03948 (14), -0.03940 (14), -0.03939 (14), -0.03930 (14), -0.03895 (14), -0.03846 (14), -0.03829 (14), -0.03821 (14), -0.03765 (14), -0.03724 (14), -0.03714 (14), -0.03706 (14), 
Length of domains: 404
Time: pickout 0.0037    decision 0.0248    set_bounds 0.0201    solve 0.1647    add 0.0049    
Accumulated time: pickout 0.0246    decision 0.6289    set_bounds 0.1132    solve 1.0081    add 0.2788    
Current (lb-rhs): -0.04402655363082886
847 domains visited
Cumulative time: 2.340841293334961

BaB round 5
batch: 404
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 979] [/input-8, 484] [/input-8, 979] [/input-8, 484] [/input-8, 979] [/input-8, 475] [/input-8, 475] [/input-8, 654] [/input-8, 475] [/input-8, 654] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9268816709518433, worst -0.038221657276153564
10 lb beta sum: 0.9268816709518433, worst -0.03820401430130005
Time: prepare 0.0358    bound 0.1357    transfer 0.0034    finalize 0.0037    func 0.1838    
Accumulated time: func 1.3673    prepare 0.1344    bound 1.1897    transfer 0.0144    finalize 0.0182    
all_split False
======================Cut inference begins======================
max lb tensor(0.00728333) min lb tensor(-0.03819418)
Number of Verified Splits: 120 of 808
Stop inferencing: Max iteration reached.
Total number of valid cuts: 14.
#cuts 1-3: 14
#cuts >= 20: 0
BICCOS time: 0.0003757476806640625 
BICCOS Cumulative time: 0.06851911544799805
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03819 (15), -0.03764 (15), -0.03727 (15), -0.03688 (15), -0.03576 (15), -0.03559 (15), -0.03538 (15), -0.03520 (15), -0.03499 (15), -0.03454 (15), -0.03452 (15), -0.03409 (15), -0.03403 (15), -0.03363 (15), -0.03363 (15), -0.03353 (15), -0.03347 (15), -0.03313 (15), -0.03303 (15), -0.03302 (15), 
Length of domains: 688
Time: pickout 0.0055    decision 0.0336    set_bounds 0.0330    solve 0.1840    add 0.0047    
Accumulated time: pickout 0.0301    decision 0.6625    set_bounds 0.1462    solve 1.1921    add 0.2835    
Current (lb-rhs): -0.03819417953491211
1535 domains visited
Cumulative time: 2.603423833847046

BaB round 6
batch: 688
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 475] [/input-8, 475] [/input-8, 475] [/input-8, 979] [/input-8, 979] [/input-8, 475] [/input-8, 979] [/input-8, 475] [/input-8, 475] [/input-8, 475] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9268816709518433, worst -0.03262209892272949
10 lb beta sum: 0.9268816709518433, worst -0.032502174377441406
Time: prepare 0.0607    bound 0.1515    transfer 0.0053    finalize 0.0063    func 0.2324    
Accumulated time: func 1.5997    prepare 0.1954    bound 1.3412    transfer 0.0197    finalize 0.0246    
all_split False
======================Cut inference begins======================
max lb tensor(0.00705481) min lb tensor(-0.03242892)
Number of Verified Splits: 371 of 1376
Stop inferencing: Max iteration reached.
Total number of valid cuts: 14.
#cuts 1-3: 14
#cuts >= 20: 0
BICCOS time: 0.0005049705505371094 
BICCOS Cumulative time: 0.06902408599853516
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03243 (16), -0.03198 (16), -0.03168 (16), -0.03163 (16), -0.03122 (16), -0.03122 (16), -0.03051 (16), -0.03009 (16), -0.02953 (16), -0.02952 (16), -0.02937 (16), -0.02927 (16), -0.02926 (16), -0.02918 (16), -0.02894 (16), -0.02888 (16), -0.02888 (16), -0.02876 (16), -0.02856 (16), -0.02850 (16), 
Length of domains: 1005
Time: pickout 0.0141    decision 0.2187    set_bounds 0.0556    solve 0.2328    add 0.0057    
Accumulated time: pickout 0.0442    decision 0.8812    set_bounds 0.2018    solve 1.4249    add 0.2892    
Current (lb-rhs): -0.03242892026901245
2540 domains visited
Cumulative time: 3.133532762527466

BaB round 7
batch: 1005
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 878] [/input-8, 878] [/input-8, 878] [/input-8, 1468] [/input-8, 117] [/input-8, 878] [/input-8, 979] [/input-8, 878] [/input-8, 878] [/input-8, 1468] 
cut re-enabled after branching node selection
0 lb beta sum: 0.926881730556488, worst -0.029130756855010986
10 lb beta sum: 0.926881730556488, worst -0.029025375843048096
Time: prepare 0.0883    bound 0.1669    transfer 0.0080    finalize 0.0082    func 0.2853    
Accumulated time: func 1.8850    prepare 0.2839    bound 1.5081    transfer 0.0277    finalize 0.0328    
all_split False
======================Cut inference begins======================
max lb tensor(0.01011920) min lb tensor(-0.02895367)
Number of Verified Splits: 508 of 2010
Stop inferencing: Max iteration reached.
Total number of valid cuts: 14.
#cuts 1-3: 14
#cuts >= 20: 0
BICCOS time: 0.00042057037353515625 
BICCOS Cumulative time: 0.06944465637207031
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02895 (17), -0.02836 (17), -0.02821 (17), -0.02812 (17), -0.02770 (17), -0.02761 (17), -0.02697 (17), -0.02673 (17), -0.02658 (17), -0.02633 (17), -0.02602 (17), -0.02598 (17), -0.02590 (17), -0.02587 (17), -0.02583 (17), -0.02576 (17), -0.02557 (17), -0.02555 (17), -0.02553 (17), -0.02533 (17), 
Length of domains: 1502
Time: pickout 0.0199    decision 0.0662    set_bounds 0.0805    solve 0.2857    add 0.0079    
Accumulated time: pickout 0.0640    decision 0.9474    set_bounds 0.2823    solve 1.7105    add 0.2971    
Current (lb-rhs): -0.0289536714553833
4042 domains visited
Cumulative time: 3.5979838371276855

BaB round 8
batch: 1502
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 117] [/input-8, 878] [/input-8, 117] [/input-8, 1468] [/input-8, 117] [/input-8, 117] [/input-8, 117] [/input-8, 117] [/input-8, 117] [/input-8, 117] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9268816113471985, worst -0.027098655700683594
10 lb beta sum: 0.9268816113471985, worst -0.026959776878356934
Time: prepare 0.1336    bound 0.2254    transfer 0.0110    finalize 0.1590    func 0.5489    
Accumulated time: func 2.4339    prepare 0.4177    bound 1.7334    transfer 0.0386    finalize 0.1917    
all_split False
======================Cut inference begins======================
max lb tensor(0.01218277) min lb tensor(-0.02688581)
Number of Verified Splits: 1647 of 3004
Stop inferencing: Max iteration reached.
Total number of valid cuts: 14.
#cuts 1-3: 14
#cuts >= 20: 0
BICCOS time: 0.0005323886871337891 
BICCOS Cumulative time: 0.0699770450592041
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02689 (18), -0.02629 (18), -0.02616 (18), -0.02609 (18), -0.02564 (18), -0.02553 (18), -0.02492 (18), -0.02473 (18), -0.02451 (18), -0.02432 (18), -0.02399 (18), -0.02395 (18), -0.02392 (18), -0.02383 (18), -0.02374 (18), -0.02369 (18), -0.02357 (18), -0.02356 (18), -0.02345 (18), -0.02325 (18), 
Length of domains: 1357
Time: pickout 0.0224    decision 0.0934    set_bounds 0.1228    solve 0.5494    add 0.0148    
Accumulated time: pickout 0.0864    decision 1.0408    set_bounds 0.4051    solve 2.2600    add 0.3119    
Current (lb-rhs): -0.026885807514190674
5399 domains visited
Cumulative time: 4.409777641296387

BaB round 9
batch: 1357
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 485] [/input-8, 485] [/input-8, 485] [/input-8, 485] [/input-8, 485] [/input-8, 485] [/input-8, 620] [/input-8, 485] [/input-8, 485] [/input-8, 485] 
cut re-enabled after branching node selection
0 lb beta sum: 0.926881730556488, worst -0.02322632074356079
10 lb beta sum: 0.926881730556488, worst -0.023155689239501953
Time: prepare 0.1208    bound 0.2106    transfer 0.0078    finalize 0.0132    func 0.3699    
Accumulated time: func 2.8038    prepare 0.5387    bound 1.9441    transfer 0.0464    finalize 0.2050    
all_split False
======================Cut inference begins======================
max lb tensor(0.01079100) min lb tensor(-0.02311617)
Number of Verified Splits: 1358 of 2714
Stop inferencing: Max iteration reached.
Total number of valid cuts: 14.
#cuts 1-3: 14
#cuts >= 20: 0
BICCOS time: 0.0004494190216064453 
BICCOS Cumulative time: 0.07042646408081055
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02312 (19), -0.02258 (19), -0.02245 (19), -0.02235 (19), -0.02203 (19), -0.02170 (19), -0.02145 (19), -0.02097 (19), -0.02094 (19), -0.02051 (19), -0.02043 (19), -0.02021 (19), -0.02018 (19), -0.02009 (19), -0.02006 (19), -0.01998 (19), -0.01995 (19), -0.01976 (19), -0.01957 (19), -0.01945 (19), 
Length of domains: 1356
Time: pickout 0.0298    decision 0.0832    set_bounds 0.1125    solve 0.3709    add 0.0100    
Accumulated time: pickout 0.1162    decision 1.1240    set_bounds 0.5176    solve 2.6308    add 0.3218    
Current (lb-rhs): -0.02311617136001587
6755 domains visited
Cumulative time: 5.025144815444946

BaB round 10
batch: 1356
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 878] [/input-8, 485] [/input-8, 878] [/input-8, 878] [/input-8, 485] [/input-8, 485] [/input-8, 878] [/input-8, 878] [/input-8, 878] [/input-8, 620] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9268816709518433, worst -0.020481109619140625
10 lb beta sum: 0.9268816709518433, worst -0.02043914794921875
Time: prepare 0.1201    bound 0.2094    transfer 0.0037    finalize 0.0126    func 0.3642    
Accumulated time: func 3.1680    prepare 0.6591    bound 2.1535    transfer 0.0501    finalize 0.2176    
all_split False
======================Cut inference begins======================
max lb tensor(0.01087379) min lb tensor(-0.02042067)
Number of Verified Splits: 1348 of 2712
Stop inferencing: Max iteration reached.
Total number of valid cuts: 14.
#cuts 1-3: 14
#cuts >= 20: 0
BICCOS time: 0.0006911754608154297 
BICCOS Cumulative time: 0.07111763954162598
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02042 (20), -0.01994 (20), -0.01964 (20), -0.01956 (20), -0.01916 (20), -0.01882 (20), -0.01880 (20), -0.01769 (20), -0.01751 (20), -0.01750 (20), -0.01738 (20), -0.01729 (20), -0.01726 (20), -0.01699 (20), -0.01688 (20), -0.01681 (20), -0.01676 (20), -0.01674 (20), -0.01670 (20), -0.01660 (20), 
Length of domains: 1364
Time: pickout 0.0265    decision 0.0840    set_bounds 0.1115    solve 0.5283    add 0.0316    
Accumulated time: pickout 0.1427    decision 1.2080    set_bounds 0.6291    solve 3.1591    add 0.3534    
Current (lb-rhs): -0.02042067050933838
8119 domains visited
Cumulative time: 5.817716121673584

BaB round 11
batch: 1364
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 620] [/input-8, 620] [/input-8, 620] [/input-8, 620] [/input-8, 620] [/input-8, 620] [/input-8, 620] [/input-8, 620] [/input-8, 620] [/input-8, 507] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9268816709518433, worst -0.015258193016052246
10 lb beta sum: 0.9268816709518433, worst -0.015150368213653564
Time: prepare 0.1237    bound 0.2110    transfer 0.0037    finalize 0.0151    func 0.3709    
Accumulated time: func 3.5389    prepare 0.7830    bound 2.3644    transfer 0.0538    finalize 0.2327    
all_split False
======================Cut inference begins======================
max lb tensor(0.01323128) min lb tensor(-0.01509267)
Number of Verified Splits: 1423 of 2728
Stop inferencing: Max iteration reached.
Total number of valid cuts: 14.
#cuts 1-3: 14
#cuts >= 20: 0
BICCOS time: 0.0004391670227050781 
BICCOS Cumulative time: 0.07155680656433105
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01509 (21), -0.01484 (21), -0.01454 (21), -0.01433 (21), -0.01433 (21), -0.01432 (21), -0.01430 (21), -0.01413 (21), -0.01412 (21), -0.01385 (21), -0.01378 (21), -0.01378 (21), -0.01370 (21), -0.01358 (21), -0.01355 (21), -0.01339 (21), -0.01338 (21), -0.01335 (21), -0.01324 (21), -0.01304 (21), 
Length of domains: 1305
Time: pickout 0.0201    decision 0.0839    set_bounds 0.1135    solve 0.3720    add 0.0064    
Accumulated time: pickout 0.1628    decision 1.2918    set_bounds 0.7425    solve 3.5311    add 0.3598    
Current (lb-rhs): -0.015092670917510986
9424 domains visited
Cumulative time: 6.423731088638306

BaB round 12
batch: 1305
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 507] [/input-8, 620] [/input-8, 620] [/input-8, 620] [/input-8, 620] [/input-8, 828] [/input-8, 507] [/input-8, 507] [/input-8, 1468] [/input-8, 507] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9268817901611328, worst -0.0109788179397583
10 lb beta sum: 0.9268817901611328, worst -0.010892331600189209
Time: prepare 0.1190    bound 0.2053    transfer 0.0045    finalize 0.0135    func 0.3600    
Accumulated time: func 3.8988    prepare 0.9022    bound 2.5697    transfer 0.0582    finalize 0.2462    
all_split False
======================Cut inference begins======================
max lb tensor(0.00871211) min lb tensor(-0.01084399)
Number of Verified Splits: 1633 of 2610
Stop inferencing: Max iteration reached.
Total number of valid cuts: 14.
#cuts 1-3: 14
#cuts >= 20: 0
BICCOS time: 0.00043654441833496094 
BICCOS Cumulative time: 0.07199335098266602
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01084 (22), -0.01064 (22), -0.01021 (22), -0.01010 (22), -0.00992 (22), -0.00967 (22), -0.00965 (22), -0.00951 (22), -0.00946 (22), -0.00917 (22), -0.00914 (22), -0.00911 (22), -0.00898 (22), -0.00893 (22), -0.00892 (22), -0.00890 (22), -0.00877 (22), -0.00876 (22), -0.00875 (22), -0.00872 (22), 
Length of domains: 977
Time: pickout 0.0264    decision 0.0809    set_bounds 0.1099    solve 0.3606    add 0.0066    
Accumulated time: pickout 0.1892    decision 1.3727    set_bounds 0.8524    solve 3.8917    add 0.3665    
Current (lb-rhs): -0.010843992233276367
10401 domains visited
Cumulative time: 7.019437074661255

BaB round 13
batch: 977
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 307] [/input-8, 307] [/input-8, 307] [/input-8, 307] [/input-8, 307] [/input-8, 307] [/input-8, 828] [/input-8, 307] [/input-8, 307] [/input-8, 307] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9268816113471985, worst -0.008788585662841797
10 lb beta sum: 0.9268816113471985, worst -0.008743226528167725
Time: prepare 0.0886    bound 0.1665    transfer 0.0099    finalize 0.0112    func 0.2897    
Accumulated time: func 4.1886    prepare 0.9910    bound 2.7362    transfer 0.0681    finalize 0.2574    
all_split False
======================Cut inference begins======================
max lb tensor(0.01100314) min lb tensor(-0.00870800)
Number of Verified Splits: 1542 of 1954
Stop inferencing: Max iteration reached.
Total number of valid cuts: 14.
#cuts 1-3: 14
#cuts >= 20: 0
BICCOS time: 0.0004165172576904297 
BICCOS Cumulative time: 0.07240986824035645
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00871 (23), -0.00847 (23), -0.00805 (23), -0.00797 (23), -0.00773 (23), -0.00756 (23), -0.00753 (23), -0.00736 (23), -0.00731 (23), -0.00701 (23), -0.00700 (23), -0.00694 (23), -0.00681 (23), -0.00680 (23), -0.00679 (23), -0.00677 (23), -0.00661 (23), -0.00659 (23), -0.00657 (23), -0.00646 (23), 
Length of domains: 412
Time: pickout 0.0177    decision 0.0636    set_bounds 0.2043    solve 0.2902    add 0.0059    
Accumulated time: pickout 0.2069    decision 1.4363    set_bounds 1.0567    solve 4.1818    add 0.3724    
Current (lb-rhs): -0.008708000183105469
10813 domains visited
Cumulative time: 7.60944390296936

BaB round 14
batch: 412
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 828] [/input-8, 828] [/input-8, 1453] [/input-8, 1940] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9268816709518433, worst -0.0064280033111572266
10 lb beta sum: 0.9268816709518433, worst -0.00638502836227417
Time: prepare 0.0382    bound 0.1367    transfer 0.0014    finalize 0.0041    func 0.1857    
Accumulated time: func 4.3743    prepare 1.0295    bound 2.8729    transfer 0.0695    finalize 0.2615    
all_split False
======================Cut inference begins======================
max lb tensor(0.01098222) min lb tensor(-0.00635308)
Number of Verified Splits: 664 of 824
Stop inferencing: Max iteration reached.
Total number of valid cuts: 14.
#cuts 1-3: 14
#cuts >= 20: 0
BICCOS time: 0.0003733634948730469 
BICCOS Cumulative time: 0.07278323173522949
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00635 (24), -0.00615 (24), -0.00542 (24), -0.00541 (24), -0.00513 (24), -0.00505 (24), -0.00487 (24), -0.00480 (24), -0.00466 (24), -0.00465 (24), -0.00452 (24), -0.00439 (24), -0.00434 (24), -0.00430 (24), -0.00429 (24), -0.00398 (24), -0.00393 (24), -0.00390 (24), -0.00381 (24), -0.00371 (24), 
Length of domains: 160
Time: pickout 0.0099    decision 0.0339    set_bounds 0.0345    solve 0.1859    add 0.0034    
Accumulated time: pickout 0.2168    decision 1.4702    set_bounds 1.0912    solve 4.3677    add 0.3758    
Current (lb-rhs): -0.0063530802726745605
10973 domains visited
Cumulative time: 7.880810737609863

BaB round 15
batch: 160
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 878] [/input-8, 878] [/input-8, 1453] [/input-8, 1940] [/input-8, 1940] [/input-8, 1453] [/input-8, 878] [/input-8, 878] [/input-8, 1940] [/input-8, 878] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9268816113471985, worst -0.0031225085258483887
10 lb beta sum: 0.9268816113471985, worst -0.0031035542488098145
Time: prepare 0.0147    bound 0.1290    transfer 0.0007    finalize 0.0019    func 0.1483    
Accumulated time: func 4.5225    prepare 1.0443    bound 3.0019    transfer 0.0701    finalize 0.2634    
all_split False
======================Cut inference begins======================
max lb tensor(0.00906330) min lb tensor(-0.00309563)
Number of Verified Splits: 284 of 320
Stop inferencing: Max iteration reached.
Total number of valid cuts: 14.
#cuts 1-3: 14
#cuts >= 20: 0
BICCOS time: 0.0003619194030761719 
BICCOS Cumulative time: 0.07314515113830566
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00310 (25), -0.00308 (25), -0.00279 (25), -0.00272 (25), -0.00201 (25), -0.00195 (25), -0.00166 (25), -0.00161 (25), -0.00123 (25), -0.00117 (25), -0.00103 (25), -0.00103 (25), -0.00099 (25), -0.00098 (25), -0.00097 (25), -0.00090 (25), -0.00081 (25), -0.00081 (25), -0.00077 (25), -0.00069 (25), 
Length of domains: 36
Time: pickout 0.0037    decision 0.0196    set_bounds 0.0133    solve 0.1484    add 0.0009    
Accumulated time: pickout 0.2206    decision 1.4898    set_bounds 1.1045    solve 4.5161    add 0.3767    
Current (lb-rhs): -0.0030956268310546875
11009 domains visited
Cumulative time: 8.068332195281982

BaB round 16
batch: 36
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 124] [/input-8, 1453] [/input-8, 124] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 124] [/input-8, 1453] [/input-8, 124] 
split level 1: [/input, 391] [/input, 391] [/input, 391] [/input, 391] [/input, 391] [/input, 391] [/input, 391] [/input, 391] [/input, 391] [/input, 391] 
split level 2: [/input-8, 1348] [/input-8, 1348] [/input-8, 1348] [/input-8, 1348] [/input-8, 1348] [/input-8, 1348] [/input-8, 1348] [/input-8, 1348] [/input-8, 1348] [/input-8, 1348] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9268816113471985, worst 0.005349934101104736

all verified at 0th iter
Time: prepare 0.0141    bound 0.0072    transfer 0.0011    finalize 0.0019    func 0.0261    
Accumulated time: func 4.5487    prepare 1.0586    bound 3.0091    transfer 0.0712    finalize 0.2653    
all_split False
======================Cut inference begins======================
max lb tensor(0.01694709) min lb tensor(0.00534993)
Number of Verified Splits: 288 of 288
Stop inferencing: Max iteration reached.
Total number of valid cuts: 14.
#cuts 1-3: 14
#cuts >= 20: 0
BICCOS time: 0.00033664703369140625 
BICCOS Cumulative time: 0.07348179817199707
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0014    decision 0.0150    set_bounds 0.0178    solve 0.0262    add 0.0001    
Accumulated time: pickout 0.2220    decision 1.5047    set_bounds 1.1223    solve 4.5423    add 0.3768    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
11009 domains visited
Cumulative time: 8.130194425582886


Properties batch 4, size 1
Remaining timeout: 190.25803756713867
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 190.2579629421234
Verifying property 5 with 1 instances.
##### Instance 42 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.18405670]], device='cuda:0') need to verify.
Model prediction is: tensor([-6.23514986, -9.22857761, -3.75808716, -3.27435327, -4.29405165,
        -3.58545446, -2.41056466, -6.29414511, -6.66572762, -8.34386063],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.18405670]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 590
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 242
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 853
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.989738464355469e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18405461311340332
10 lb beta sum: 0.0, worst -0.18407303094863892
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0535    transfer 0.0001    finalize 0.0001    func 0.0540    
Accumulated time: func 0.0540    prepare 0.0002    bound 0.0535    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 33] 
split level 1: [/input-12, 41] 
split level 2: [/input-12, 51] 
split level 3: [/input-12, 11] 
split level 4: [/input-12, 13] 
split level 5: [/input-8, 109] 
split level 6: [/input-12, 45] 
split level 7: [/input-8, 476] 
split level 8: [/input-12, 1] 
split level 9: [/input-8, 1940] 
split level 10: [/input-8, 483] 
split level 11: [/input-8, 92] 
split level 12: [/input-8, 850] 
split level 13: [/input-8, 540] 
split level 14: [/input-8, 1308] 
split level 15: [/input-8, 1939] 
split level 16: [/input-8, 525] 
split level 17: [/input-8, 1909] 
split level 18: [/input-8, 475] 
split level 19: [/input-8, 869] 
split level 20: [/input-8, 1461] 
split level 21: [/input-8, 1453] 
split level 22: [/input, 325] 
split level 23: [/input-8, 1389] 
split level 24: [/input-8, 91] 
split level 25: [/input, 3432] 
split level 26: [/input-8, 484] 
split level 27: [/input-8, 971] 
split level 28: [/input-8, 307] 
split level 29: [/input-8, 981] 
split level 30: [/input-8, 485] 
split level 31: [/input-8, 1828] 
split level 32: [/input-8, 1298] 
split level 33: [/input-8, 117] 
split level 34: [/input-8, 1345] 
split level 35: [/input-8, 989] 
split level 36: [/input-8, 530] 
split level 37: [/input-8, 309] 
split level 38: [/input, 3399] 
split level 39: [/input-8, 1468] 
split level 40: [/input-8, 428] 
split level 41: [/input-8, 878] 
split level 42: [/input-8, 427] 
split level 43: [/input-8, 94] 
split level 44: [/input-8, 977] 
split level 45: [/input, 1366] 
split level 46: [/input-8, 826] 
split level 47: [/input-8, 1142] 
split level 48: [/input-8, 923] 
split level 49: [/input-8, 1527] 
split level 50: [/input-8, 486] 
split level 51: [/input-8, 654] 
split level 52: [/input-8, 1390] 
split level 53: [/input, 2135] 
split level 54: [/input-8, 867] 
split level 55: [/input-8, 985] 
split level 56: [/input-8, 1523] 
split level 57: [/input-8, 979] 
split level 58: [/input-8, 103] 
split level 59: [/input-8, 828] 
split level 60: [/input-8, 507] 
split level 61: [/input-8, 624] 
split level 62: [/input-8, 310] 
split level 63: [/input, 3417] 
split level 64: [/input-8, 1237] 
split level 65: [/input-8, 1467] 
split level 66: [/input, 391] 
split level 67: [/input-8, 620] 
split level 68: [/input-8, 1903] 
split level 69: [/input-8, 1247] 
split level 70: [/input, 2117] 
split level 71: [/input-8, 1446] 
split level 72: [/input-8, 522] 
split level 73: [/input-8, 1381] 
split level 74: [/input-8, 1771] 
split level 75: [/input-8, 1324] 
split level 76: [/input-8, 1835] 
split level 77: [/input-8, 1254] 
split level 78: [/input-8, 997] 
split level 79: [/input-8, 1457] 
split level 80: [/input-8, 998] 
split level 81: [/input-8, 124] 
split level 82: [/input-8, 75] 
split level 83: [/input-8, 1348] 
split level 84: [/input-8, 1421] 
split level 85: [/input, 369] 
split level 86: [/input-8, 1433] 
split level 87: [/input-8, 506] 
split level 88: [/input, 355] 
split level 89: [/input-8, 86] 
split level 90: [/input-8, 1246] 
split level 91: [/input, 1382] 
split level 92: [/input-8, 1837] 
split level 93: [/input-8, 1071] 
split level 94: [/input-8, 1255] 
split level 95: [/input, 1334] 
split level 96: [/input-8, 922] 
split level 97: [/input-8, 113] 
split level 98: [/input-8, 487] 
split level 99: [/input-8, 827] 
split level 100: [/input-8, 1347] 
split level 101: [/input, 1352] 
split level 102: [/input-8, 541] 
split level 103: [/input-8, 1844] 
split level 104: [/input, 1350] 
split level 105: [/input-8, 435] 
split level 106: [/input-8, 2035] 
split level 107: [/input, 406] 
split level 108: [/input-8, 524] 
split level 109: [/input-8, 2036] 
split level 110: [/input, 3510] 
split level 111: [/input, 3960] 
split level 112: [/input-8, 862] 
split level 113: [/input-8, 1437] 
split level 114: [/input, 1333] 
split level 115: [/input-8, 1904] 
split level 116: [/input, 316] 
split level 117: [/input-8, 1323] 
split level 118: [/input-8, 1838] 
split level 119: [/input-8, 887] 
split level 120: [/input, 3127] 
split level 121: [/input, 32] 
split level 122: [/input, 309] 
split level 123: [/input-8, 1816] 
split level 124: [/input, 2802] 
split level 125: [/input-8, 1009] 
split level 126: [/input-8, 1076] 
split level 127: [/input-8, 505] 
split level 128: [/input-8, 415] 
split level 129: [/input-8, 477] 
split level 130: [/input-8, 1440] 
split level 131: [/input-8, 602] 
split level 132: [/input, 1751] 
split level 133: [/input-8, 1736] 
split level 134: [/input, 4045] 
split level 135: [/input, 1960] 
split level 136: [/input, 2376] 
split level 137: [/input, 1093] 
split level 138: [/input-8, 83] 
split level 139: [/input, 2098] 
split level 140: [/input, 1396] 
split level 141: [/input-8, 125] 
split level 142: [/input-8, 1936] 
split level 143: [/input-8, 74] 
split level 144: [/input, 2840] 
split level 145: [/input-8, 1551] 
split level 146: [/input, 3329] 
split level 147: [/input, 1401] 
split level 148: [/input-8, 1406] 
split level 149: [/input, 439] 
split level 150: [/input, 1603] 
split level 151: [/input, 3493] 
split level 152: [/input, 3913] 
split level 153: [/input-8, 1442] 
split level 154: [/input, 1708] 
split level 155: [/input, 404] 
split level 156: [/input-8, 1983] 
split level 157: [/input-8, 1023] 
split level 158: [/input, 2103] 
split level 159: [/input-8, 2044] 
split level 160: [/input, 3368] 
split level 161: [/input-8, 573] 
split level 162: [/input, 2342] 
split level 163: [/input, 3474] 
split level 164: [/input, 2857] 
split level 165: [/input, 3330] 
split level 166: [/input, 1949] 
split level 167: [/input, 2091] 
split level 168: [/input, 1963] 
split level 169: [/input, 1725] 
split level 170: [/input, 3607] 
split level 171: [/input, 4090] 
split level 172: [/input, 1961] 
split level 173: [/input-8, 1754] 
split level 174: [/input-8, 840] 
split level 175: [/input, 1371] 
split level 176: [/input, 506] 
split level 177: [/input, 3371] 
split level 178: [/input, 1347] 
split level 179: [/input, 1416] 
split level 180: [/input, 3356] 
split level 181: [/input, 4013] 
split level 182: [/input-8, 876] 
split level 183: [/input, 174] 
split level 184: [/input, 3345] 
split level 185: [/input-8, 2038] 
split level 186: [/input, 595] 
split level 187: [/input-8, 1235] 
split level 188: [/input, 1964] 
split level 189: [/input, 3908] 
split level 190: [/input-8, 958] 
split level 191: [/input, 3022] 
split level 192: [/input, 2962] 
split level 193: [/input, 3927] 
split level 194: [/input, 3642] 
split level 195: [/input, 3677] 
split level 196: [/input-8, 1427] 
split level 197: [/input, 2360] 
split level 198: [/input, 2024] 
split level 199: [/input, 2841] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18401437997817993
10 lb beta sum: 0.0, worst -0.18400424718856812
Time: prepare 0.0117    bound 0.0960    transfer 0.0019    finalize 0.0028    func 0.1151    
Accumulated time: func 0.1691    prepare 0.0218    bound 0.1496    transfer 0.0020    finalize 0.0029    
all_split False
======================Cut inference begins======================
max lb tensor(0.32173222) min lb tensor(-0.18399507)
Number of Verified Splits: 3 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.010526895523071289 
BICCOS Cumulative time: 0.010526895523071289
Preprocessing time: 0.010057210922241211 Inference time: 0.00015306472778320312 Add cuts time: 8.678436279296875e-05 Cut analysis time: 0.00022983551025390625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16754 (1), -0.16741 (1), -0.16697 (1), -0.16671 (1), -0.16658 (1), -0.16613 (1), -0.16596 (1), -0.16586 (1), -0.16554 (1), -0.16499 (1), -0.16489 (1), -0.16403 (1), -0.16267 (1), -0.16204 (1), -0.16173 (1), -0.16148 (1), -0.16055 (1), -0.16008 (1), -0.15985 (1), -0.15935 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5071    set_bounds 0.0084    solve 0.1151    add 0.0818    
Accumulated time: pickout 0.0003    decision 0.5071    set_bounds 0.0084    solve 0.1151    add 0.0818    
Current (lb-rhs): -0.16753816604614258
50 domains visited
Cumulative time: 0.782397985458374

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] 
split level 1: [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] 
split level 2: [/input-12, 51] [/input-12, 11] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 11] 
split level 3: [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 11] [/input-12, 13] [/input-12, 13] [/input-12, 51] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15656155347824097
10 lb beta sum: 0.5283015966415405, worst -0.14285114407539368
Time: prepare 0.0084    bound 0.1145    transfer 0.0007    finalize 0.0024    func 0.1286    
Accumulated time: func 0.2977    prepare 0.0304    bound 0.2641    transfer 0.0028    finalize 0.0053    
all_split False
======================Cut inference begins======================
max lb tensor(0.44220454) min lb tensor(-0.14283656)
Number of Verified Splits: 154 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 10
#cuts >= 20: 0
BICCOS time: 0.020119428634643555 
BICCOS Cumulative time: 0.030646324157714844
Preprocessing time: 0.011628150939941406 Inference time: 0.005915641784667969 Add cuts time: 0.002234220504760742 Cut analysis time: 0.0003414154052734375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05340 (2), -0.05327 (2), -0.05314 (2), -0.05305 (2), -0.05294 (2), -0.05276 (2), -0.05254 (2), -0.05229 (2), -0.05155 (2), -0.05155 (2), -0.05148 (2), -0.05137 (2), -0.05123 (2), -0.05062 (2), -0.05019 (2), -0.05009 (2), -0.05004 (2), -0.04967 (2), -0.04889 (2), -0.04887 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0195    set_bounds 0.0115    solve 0.1287    add 0.0875    
Accumulated time: pickout 0.0014    decision 0.5266    set_bounds 0.0199    solve 0.2439    add 0.1692    
Current (lb-rhs): -0.053404927253723145
100 domains visited
Cumulative time: 1.0510578155517578

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] 
split level 1: [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] 
split level 2: [/input-12, 51] [/input-12, 11] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 11] [/input-12, 51] [/input-12, 51] 
split level 3: [/input-12, 11] [/input-12, 51] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 51] [/input-12, 11] [/input-12, 11] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08483892679214478
10 lb beta sum: 0.9791825413703918, worst -0.030017614364624023
Time: prepare 0.0083    bound 0.1303    transfer 0.0008    finalize 0.0025    func 0.1444    
Accumulated time: func 0.4421    prepare 0.0390    bound 0.3943    transfer 0.0035    finalize 0.0078    
all_split False
======================Cut inference begins======================
max lb tensor(0.45036948) min lb tensor(-0.02982724)
Number of Verified Splits: 363 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 34.
#cuts 1-3: 34
#cuts >= 20: 0
BICCOS time: 0.037224531173706055 
BICCOS Cumulative time: 0.0678708553314209
Preprocessing time: 0.01154780387878418 Inference time: 0.014069318771362305 Add cuts time: 0.010866641998291016 Cut analysis time: 0.0007407665252685547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02777 (3), -0.02776 (3), -0.02776 (3), -0.02776 (3), -0.02775 (3), -0.02775 (3), -0.01185 (3), -0.01185 (3), -0.00451 (3), -0.00451 (3), -0.00451 (3), -0.00449 (3), -0.00446 (3), -0.00445 (3), -0.00443 (3), -0.00443 (3), 
Length of domains: 16
Time: pickout 0.0011    decision 0.0199    set_bounds 0.0153    solve 0.1445    add 0.0983    
Accumulated time: pickout 0.0025    decision 0.5465    set_bounds 0.0352    solve 0.3883    add 0.2675    
Current (lb-rhs): -0.02776622772216797
116 domains visited
Cumulative time: 1.3675479888916016

Shallow-BaB round 4
batch: 16
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 33] [/input-12, 41] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 41] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] 
split level 1: [/input-12, 41] [/input-12, 11] [/input-12, 41] [/input-12, 11] [/input-12, 41] [/input-12, 11] [/input-12, 11] [/input-12, 41] [/input-12, 41] [/input-12, 41] 
split level 2: [/input-12, 11] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 11] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 11] [/input-12, 11] 
split level 3: [/input-8, 850] [/input-8, 1940] [/input-8, 850] [/input-8, 850] [/input-8, 850] [/input-8, 1940] [/input-8, 850] [/input-8, 850] [/input-8, 1940] [/input-8, 1940] 
split level 4: [/input-8, 1940] [/input-8, 92] [/input-8, 1940] [/input-8, 1940] [/input-8, 1940] [/input-8, 92] [/input-8, 1940] [/input-8, 1940] [/input-8, 483] [/input-8, 483] 
split level 5: [/input-8, 483] [/input-8, 850] [/input-8, 483] [/input-8, 483] [/input-8, 483] [/input-8, 850] [/input-8, 483] [/input-8, 483] [/input-8, 850] [/input-8, 850] 
split level 6: [/input-8, 92] [/input-8, 483] [/input-8, 92] [/input-8, 92] [/input-8, 92] [/input-8, 483] [/input-8, 92] [/input-8, 92] [/input-8, 92] [/input-8, 92] 
split level 7: [/input-8, 475] [/input-8, 475] [/input-8, 475] [/input-8, 1939] [/input-8, 475] [/input-8, 475] [/input-8, 1939] [/input-8, 475] [/input-8, 1939] [/input-8, 1939] 
split level 8: [/input-8, 1939] [/input-8, 1939] [/input-8, 1939] [/input-8, 475] [/input-8, 1939] [/input-8, 1939] [/input-8, 1909] [/input-8, 1939] [/input-8, 1909] [/input-8, 1909] 
split level 9: [/input-8, 1909] [/input-8, 1909] [/input-8, 1909] [/input-8, 1909] [/input-8, 1909] [/input-8, 1909] [/input-8, 475] [/input-8, 1909] [/input-8, 475] [/input-8, 475] 
split level 10: [/input-8, 484] [/input-8, 484] [/input-8, 484] [/input-8, 484] [/input-8, 484] [/input-8, 484] [/input-8, 484] [/input-8, 484] [/input-8, 484] [/input-8, 484] 
split level 11: [/input-8, 1468] [/input-8, 1468] [/input-8, 1468] [/input-8, 1468] [/input-8, 1468] [/input-8, 1468] [/input-8, 1468] [/input-8, 1468] [/input-8, 1468] [/input-8, 1468] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07590657472610474
10 lb beta sum: 3.4928202629089355, worst -1.3947486877441406e-05
Time: prepare 0.0078    bound 0.1382    transfer 0.0026    finalize 0.0023    func 0.1534    
Accumulated time: func 0.5955    prepare 0.0474    bound 0.5325    transfer 0.0061    finalize 0.0101    
all_split False
======================Cut inference begins======================
max lb tensor(0.47916925) min lb tensor(2.02655792e-06)
Number of Verified Splits: 384 of 384
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 38
#cuts >= 20: 0
BICCOS time: 0.038253068923950195 
BICCOS Cumulative time: 0.1061239242553711
Preprocessing time: 0.011387348175048828 Inference time: 0.017266035079956055 Add cuts time: 0.008846521377563477 Cut analysis time: 0.0007531642913818359
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0007    decision 0.0399    set_bounds 0.0115    solve 0.1535    add 0.0268    
Accumulated time: pickout 0.0031    decision 0.5863    set_bounds 0.0467    solve 0.5418    add 0.2943    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
116 domains visited
No domains left, MTS early stop!
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([51, 33]), tensor([-1., -1.]), tensor([0, 0]), tensor([1.14346363e-08, 4.83850151e-01]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([51, 33]), tensor([-1.,  1.]), tensor([0, 0]), tensor([1.14346363e-08, 4.42465991e-02]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([51, 13, 33]), tensor([ 1., -1., -1.]), tensor([0, 0, 0]), tensor([5.41874878e-11, 1.05691299e-01, 4.63009149e-01]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([51, 13, 33, 41]), tensor([ 1., -1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([5.41874878e-11, 1.05691299e-01, 3.92214507e-02, 1.71414483e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([51, 13, 33, 41]), tensor([ 1., -1.,  1.,  1.]), tensor([0, 0, 0, 0]), tensor([5.41874878e-11, 1.05691299e-01, 3.92214507e-02, 3.91573161e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([51, 13, 33]), tensor([ 1.,  1., -1.]), tensor([0, 0, 0]), tensor([5.41874878e-11, 9.92311686e-02, 4.67710495e-01]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([51, 13, 33, 41]), tensor([ 1.,  1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([5.41874878e-11, 9.92311686e-02, 2.24335659e-02, 2.77699698e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([51, 13, 33, 41]), tensor([1., 1., 1., 1.]), tensor([0, 0, 0, 0]), tensor([5.41874878e-11, 9.92311686e-02, 2.24335659e-02, 5.39622754e-02]), tensor([0, 1, 2, 3]))}
Shallow branching resets to n domains:  8
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10114777088165283

all verified at 3th iter
Time: prepare 0.0004    bound 0.0310    transfer 0.0001    finalize 0.0002    func 0.0318    
Accumulated time: func 0.6273    prepare 0.0478    bound 0.5635    transfer 0.0062    finalize 0.0103    
After pruning, left:  0

Back to Regular BaB


Properties batch 6, size 1
Remaining timeout: 188.4362027645111
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 188.43612122535706
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 188.436096906662
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 11.5640 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 43, vnnlib ID: 43 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.89999580, -8.55049229, -2.24591589, -3.50618315, -2.26213169,
         -3.34141207, -2.12596679, -3.44707155, -7.70838165, -6.43066359]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [559]; unstable size 559; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 276, 1, 559] with unstable size 275 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 559] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 559] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [275]; unstable size 275; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 275] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 275] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.40751839,  2.20469379, -2.32452011, -0.32005543, -2.33795643,
         -2.70371604, -1.07307482,  1.97626233,  0.69333458]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.89999580, -8.55049229, -2.24591589, -3.50618315, -2.26213169,
         -3.34141207, -2.12596679, -3.44707155, -7.70838165, -6.43066359]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.89999676, -8.55049229, -2.24591589, -3.50618315, -2.26213217,
          -3.34141254, -2.12596703, -3.44707155, -7.70838165, -6.43066359],
         [-5.89999676, -8.55049229, -2.24591589, -3.50618315, -2.26213217,
          -3.34141254, -2.12596703, -3.44707155, -7.70838165, -6.43066359]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-1.09549665,  0.16477060, -1.07928038, -1.21544552,  0.10565901]]],
       device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]]]],
       device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0891 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 44, vnnlib ID: 44 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.03364277, -19.56793976, -11.80023479, -14.44734001, -11.96190071,
         -15.16267776, -13.56670475, -14.41914845, -17.25975418, -18.72661972]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [579]; unstable size 579; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 366, 1, 579] with unstable size 365 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 579] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 579] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [365]; unstable size 365; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 365] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 365] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.44665420,  4.78386068,  1.24888563, -0.92591441,  1.73357177,
          0.40172076,  0.80255365,  3.31306171,  4.20044708]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.03364277, -19.56793976, -11.80023479, -14.44734001, -11.96190071,
         -15.16267776, -13.56670475, -14.41914845, -17.25975418, -18.72661972]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.04666615, -19.50651550, -11.78564644, -14.38106823, -11.57203579,
          -15.05305195, -13.48137379, -14.08794785, -17.24640465, -18.64059067]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.21361065]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0062 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0711 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 45, vnnlib ID: 45 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.78477669, -6.78171825, -6.26888752, -6.35238361, -6.19891071,
         -6.76594496, -7.28494310, -7.20223379, -6.12016869, -6.41277218]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [523]; unstable size 523; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 204, 1, 523] with unstable size 203 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 523] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 523] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [203]; unstable size 203; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 203] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 203] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.61079025, -2.42233181, -2.06717396, -2.44244099, -1.87546444,
         -1.27228260, -1.18069935, -2.12183619, -1.19985151]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.78477669, -6.78171825, -6.26888752, -6.35238361, -6.19891071,
         -6.76594496, -7.28494310, -7.20223379, -6.12016869, -6.41277218]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.78477764, -6.78171730, -6.26888752, -6.35238314, -6.19891167,
          -6.76594448, -7.28494167, -7.20223379, -6.12016869, -6.41277170],
         [-6.78477764, -6.78171730, -6.26888752, -6.35238314, -6.19891167,
          -6.76594448, -7.28494167, -7.20223379, -6.12016869, -6.41277170]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.00306034, -0.51282978, -0.42933416, -0.58280563, -0.01577282,
           0.50322437,  0.42051649, -0.66154861, -0.36894560]]],
       device='cuda:0')
number of violation:  6
clean attack image tensor([[[[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         ...,


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]]]], device='cuda:0') torch.Size([1, 9, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0643 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 46, vnnlib ID: 46 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.35317993, -10.05822277,  -5.70741463,  -5.30954361,  -5.77602005,
          -5.75247955,  -5.90963793,  -7.28197336,  -9.95428562,  -8.67804050]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [767]; unstable size 767; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 280, 1, 767] with unstable size 279 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 767] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 767] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [279]; unstable size 279; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 279] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 279] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.12624168,  2.47288227, -1.31481647, -0.78547329, -1.26456189,
         -0.82690156,  0.44953948,  2.35486078,  1.43794227]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.35317993, -10.05822277,  -5.70741463,  -5.30954361,  -5.77602005,
          -5.75247955,  -5.90963793,  -7.28197336,  -9.95428562,  -8.67804050]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.35317993, -10.05822277,  -5.70741367,  -5.30954361,  -5.77602053,
           -5.75248098,  -5.90963840,  -7.28197336,  -9.95428562,  -8.67804050],
         [ -7.35317993, -10.05822277,  -5.70741367,  -5.30954361,  -5.77602053,
           -5.75248098,  -5.90963840,  -7.28197336,  -9.95428562,  -8.67804050]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.04506731, -0.44293737,  0.02353954,  0.15715742]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]],


         [[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]],


         [[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]],


         [[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]]]],
       device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0825 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 47, vnnlib ID: 47 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.96445751, -13.95264721, -11.88872242, -12.43732738, -11.28103065,
         -13.65725136, -13.27398205, -14.68500137,  -4.78945637, -13.98094654]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [407]; unstable size 407; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 136, 1, 407] with unstable size 135 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 407] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 407] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [135]; unstable size 135; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 135] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 135] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.02164316, 7.83872128, 5.93336391, 6.63180161, 5.40730762, 7.70184660,
         7.39634609, 8.62479115, 8.04601288]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0698 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 48, vnnlib ID: 48 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.38742971, -8.09583473, -4.17398930, -2.21849561, -4.56612682,
         -1.60451329, -3.84133196, -3.18707657, -8.22775269, -6.31927729]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [525]; unstable size 525; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 227, 1, 525] with unstable size 226 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 525] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 525] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [226]; unstable size 226; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 226] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 226] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.95492125, 4.49830675, 1.13714719, 0.18978083, 1.74934626, 0.88679492,
         0.59362960, 4.57968712, 2.70802236]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0630 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 49, vnnlib ID: 49 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.61658096,  -4.85169363, -11.21480465, -12.01975822, -10.98789406,
         -12.65254879, -10.85314465, -10.63402939,  -8.40850830,  -8.61452770]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [603]; unstable size 603; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 215, 1, 603] with unstable size 214 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 603] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 603] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [214]; unstable size 214; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 214] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 214] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.89015675, 3.85943222, 4.84163761, 3.92532921, 5.16841793, 3.74945736,
         3.27850056, 1.93241072, 2.38752627]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0583 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 50, vnnlib ID: 50 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-14.94205475, -17.04773521, -14.67247200, -15.90819740, -14.60353470,
         -15.82103157, -16.25810432, -18.06786919, -16.98810387, -17.41020012]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [822]; unstable size 822; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 273, 1, 822] with unstable size 272 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 822] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 822] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [272]; unstable size 272; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 272] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 272] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.36523819, -0.94602156, -2.17604685, -0.24087614, -2.33651733,
         -0.49621773,  0.76373523, -0.90574384, -0.11941862]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-14.94205475, -17.04773521, -14.67247200, -15.90819740, -14.60353470,
         -15.82103157, -16.25810432, -18.06786919, -16.98810387, -17.41020012]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-14.94205666, -17.04773521, -14.67247486, -15.90820122, -14.60353661,
          -15.82103348, -16.25810814, -18.06787491, -16.98810387, -17.41019821],
         [-14.94205666, -17.04773521, -14.67247486, -15.90820122, -14.60353661,
          -15.82103348, -16.25810814, -18.06787491, -16.98810387, -17.41019821]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.87897682,  1.22670174, -1.14855862,  0.08716774, -1.21749687,
           0.43707466,  1.16707039,  1.58916473]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         ...,


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]]]], device='cuda:0') torch.Size([1, 8, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0858 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 51, vnnlib ID: 51 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -5.99211121, -14.04107761,  -7.31353474,  -9.89678955,  -8.41009998,
         -10.75332451, -10.63476658, -14.15501976,  -8.49472427, -14.58970451]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [584]; unstable size 584; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 141, 1, 584] with unstable size 140 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 584] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 584] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [140]; unstable size 140; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 140] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 140] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.93474388, 0.60455763, 3.06741571, 1.66697335, 3.81926012, 3.66227555,
         7.25833178, 1.59742737, 7.46314812]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0768 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 52, vnnlib ID: 52 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-7.61421394, -9.33402538, -5.16767883, -2.64045858, -3.99503326,
         -2.02855682, -4.62166262, -4.60086203, -9.98200893, -8.04814816]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [560]; unstable size 560; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 250, 1, 560] with unstable size 249 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 560] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 560] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [249]; unstable size 249; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 249] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 249] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.83084655, 5.06325245, 1.78347683, 0.29397506, 0.66198206, 1.20087171,
         1.58306229, 5.80479670, 4.18815994]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0599 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 53, vnnlib ID: 53 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.78492880, -7.88765907, -5.16387463, -4.98481178, -5.33830261,
         -5.60749578, -4.95262003, -5.78874540, -8.26618099, -6.25775003]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [600]; unstable size 600; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 170, 1, 600] with unstable size 169 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 600] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 600] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [169]; unstable size 169; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 169] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 169] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.27218628,  1.68873858, -0.96977472, -0.89153814, -0.69919348,
         -0.37939468, -0.73812240,  2.16678596,  0.28935480]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.78492880, -7.88765907, -5.16387463, -4.98481178, -5.33830261,
         -5.60749578, -4.95262003, -5.78874540, -8.26618099, -6.25775003]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.78492785, -7.88765907, -5.16387367, -4.98481131, -5.33830214,
          -5.60749578, -4.95261955, -5.78874445, -8.26618099, -6.25774956],
         [-4.78492785, -7.88765907, -5.16387367, -4.98481131, -5.33830214,
          -5.60749578, -4.95261955, -5.78874445, -8.26618099, -6.25774956]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.16769171,  0.21125412,  0.03219175,  0.38568258,  0.65487623,
           0.83612490]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.53492093,  1.47142887,  1.45555580,  ..., -0.78253967,
            -0.78253967, -0.51269841],
           [ 1.56666696,  1.53492093,  1.50317490,  ..., -0.73492062,
            -0.70317459, -0.36984116],
           [ 1.63015902,  1.59841299,  1.56666696,  ..., -0.63968253,
            -0.56031746, -0.14761895],
           ...,
           [ 1.48730183,  1.21746063,  1.09047651,  ...,  1.40793681,
             1.37619078,  1.34444475],
           [ 1.45555580,  1.28095269,  1.28095269,  ...,  1.45555580,
             1.40793681,  1.37619078],
           [ 1.39206374,  1.37619078,  1.37619078,  ...,  1.51904786,
             1.47142887,  1.42380977]],

          [[ 1.67471850,  1.61030626,  1.59420323,  ..., -0.48309177,
            -0.48309177, -0.24154577],
           [ 1.70692456,  1.65861547,  1.62640929,  ..., -0.43478248,
            -0.41867942, -0.08051517],
           [ 1.75523376,  1.72302771,  1.69082153,  ..., -0.33816412,
            -0.25764883,  0.12882459],
           ...,
           [ 1.65861547,  1.41706955,  1.22383285,  ...,  1.57810009,
             1.54589403,  1.52979100],
           [ 1.59420323,  1.43317258,  1.41706955,  ...,  1.61030626,
             1.57810009,  1.54589403],
           [ 1.52979100,  1.49758482,  1.52979100,  ...,  1.65861547,
             1.62640929,  1.59420323]],

          [[ 1.39580250,  1.33583248,  1.32084000,  ..., -0.97301346,
            -0.92803597, -0.61319339],
           [ 1.45577252,  1.41079497,  1.38081002,  ..., -0.94302845,
            -0.85307342, -0.46326834],
           [ 1.54572761,  1.51574254,  1.48575759,  ..., -0.83808094,
            -0.70314842, -0.26836565],
           ...,
           [ 1.51574254,  1.23088503,  0.91604215,  ...,  1.41079497,
             1.30584753,  1.29085493],
           [ 1.47076499,  1.26086998,  1.17091501,  ...,  1.53073502,
             1.39580250,  1.33583248],
           [ 1.32084000,  1.26086998,  1.29085493,  ...,  1.68066013,
             1.51574254,  1.42578757]]],


         [[[ 1.53492093,  1.47142887,  1.45555580,  ..., -0.78253967,
            -0.78253967, -0.51269841],
           [ 1.56666696,  1.53492093,  1.50317490,  ..., -0.73492062,
            -0.70317459, -0.36984116],
           [ 1.63015902,  1.59841299,  1.56666696,  ..., -0.63968253,
            -0.56031746, -0.14761895],
           ...,
           [ 1.48730183,  1.21746063,  1.09047651,  ...,  1.40793681,
             1.37619078,  1.34444475],
           [ 1.45555580,  1.28095269,  1.28095269,  ...,  1.45555580,
             1.40793681,  1.37619078],
           [ 1.39206374,  1.37619078,  1.37619078,  ...,  1.51904786,
             1.47142887,  1.42380977]],

          [[ 1.67471850,  1.61030626,  1.59420323,  ..., -0.48309177,
            -0.48309177, -0.24154577],
           [ 1.70692456,  1.65861547,  1.62640929,  ..., -0.43478248,
            -0.41867942, -0.08051517],
           [ 1.75523376,  1.72302771,  1.69082153,  ..., -0.33816412,
            -0.25764883,  0.12882459],
           ...,
           [ 1.65861547,  1.41706955,  1.22383285,  ...,  1.57810009,
             1.54589403,  1.52979100],
           [ 1.59420323,  1.43317258,  1.41706955,  ...,  1.61030626,
             1.57810009,  1.54589403],
           [ 1.52979100,  1.49758482,  1.52979100,  ...,  1.65861547,
             1.62640929,  1.59420323]],

          [[ 1.39580250,  1.33583248,  1.32084000,  ..., -0.97301346,
            -0.92803597, -0.61319339],
           [ 1.45577252,  1.41079497,  1.38081002,  ..., -0.94302845,
            -0.85307342, -0.46326834],
           [ 1.54572761,  1.51574254,  1.48575759,  ..., -0.83808094,
            -0.70314842, -0.26836565],
           ...,
           [ 1.51574254,  1.23088503,  0.91604215,  ...,  1.41079497,
             1.30584753,  1.29085493],
           [ 1.47076499,  1.26086998,  1.17091501,  ...,  1.53073502,
             1.39580250,  1.33583248],
           [ 1.32084000,  1.26086998,  1.29085493,  ...,  1.68066013,
             1.51574254,  1.42578757]]],


         [[[ 1.53492093,  1.47142887,  1.45555580,  ..., -0.78253967,
            -0.78253967, -0.51269841],
           [ 1.56666696,  1.53492093,  1.50317490,  ..., -0.73492062,
            -0.70317459, -0.36984116],
           [ 1.63015902,  1.59841299,  1.56666696,  ..., -0.63968253,
            -0.56031746, -0.14761895],
           ...,
           [ 1.48730183,  1.21746063,  1.09047651,  ...,  1.40793681,
             1.37619078,  1.34444475],
           [ 1.45555580,  1.28095269,  1.28095269,  ...,  1.45555580,
             1.40793681,  1.37619078],
           [ 1.39206374,  1.37619078,  1.37619078,  ...,  1.51904786,
             1.47142887,  1.42380977]],

          [[ 1.67471850,  1.61030626,  1.59420323,  ..., -0.48309177,
            -0.48309177, -0.24154577],
           [ 1.70692456,  1.65861547,  1.62640929,  ..., -0.43478248,
            -0.41867942, -0.08051517],
           [ 1.75523376,  1.72302771,  1.69082153,  ..., -0.33816412,
            -0.25764883,  0.12882459],
           ...,
           [ 1.65861547,  1.41706955,  1.22383285,  ...,  1.57810009,
             1.54589403,  1.52979100],
           [ 1.59420323,  1.43317258,  1.41706955,  ...,  1.61030626,
             1.57810009,  1.54589403],
           [ 1.52979100,  1.49758482,  1.52979100,  ...,  1.65861547,
             1.62640929,  1.59420323]],

          [[ 1.39580250,  1.33583248,  1.32084000,  ..., -0.97301346,
            -0.92803597, -0.61319339],
           [ 1.45577252,  1.41079497,  1.38081002,  ..., -0.94302845,
            -0.85307342, -0.46326834],
           [ 1.54572761,  1.51574254,  1.48575759,  ..., -0.83808094,
            -0.70314842, -0.26836565],
           ...,
           [ 1.51574254,  1.23088503,  0.91604215,  ...,  1.41079497,
             1.30584753,  1.29085493],
           [ 1.47076499,  1.26086998,  1.17091501,  ...,  1.53073502,
             1.39580250,  1.33583248],
           [ 1.32084000,  1.26086998,  1.29085493,  ...,  1.68066013,
             1.51574254,  1.42578757]]],


         [[[ 1.53492093,  1.47142887,  1.45555580,  ..., -0.78253967,
            -0.78253967, -0.51269841],
           [ 1.56666696,  1.53492093,  1.50317490,  ..., -0.73492062,
            -0.70317459, -0.36984116],
           [ 1.63015902,  1.59841299,  1.56666696,  ..., -0.63968253,
            -0.56031746, -0.14761895],
           ...,
           [ 1.48730183,  1.21746063,  1.09047651,  ...,  1.40793681,
             1.37619078,  1.34444475],
           [ 1.45555580,  1.28095269,  1.28095269,  ...,  1.45555580,
             1.40793681,  1.37619078],
           [ 1.39206374,  1.37619078,  1.37619078,  ...,  1.51904786,
             1.47142887,  1.42380977]],

          [[ 1.67471850,  1.61030626,  1.59420323,  ..., -0.48309177,
            -0.48309177, -0.24154577],
           [ 1.70692456,  1.65861547,  1.62640929,  ..., -0.43478248,
            -0.41867942, -0.08051517],
           [ 1.75523376,  1.72302771,  1.69082153,  ..., -0.33816412,
            -0.25764883,  0.12882459],
           ...,
           [ 1.65861547,  1.41706955,  1.22383285,  ...,  1.57810009,
             1.54589403,  1.52979100],
           [ 1.59420323,  1.43317258,  1.41706955,  ...,  1.61030626,
             1.57810009,  1.54589403],
           [ 1.52979100,  1.49758482,  1.52979100,  ...,  1.65861547,
             1.62640929,  1.59420323]],

          [[ 1.39580250,  1.33583248,  1.32084000,  ..., -0.97301346,
            -0.92803597, -0.61319339],
           [ 1.45577252,  1.41079497,  1.38081002,  ..., -0.94302845,
            -0.85307342, -0.46326834],
           [ 1.54572761,  1.51574254,  1.48575759,  ..., -0.83808094,
            -0.70314842, -0.26836565],
           ...,
           [ 1.51574254,  1.23088503,  0.91604215,  ...,  1.41079497,
             1.30584753,  1.29085493],
           [ 1.47076499,  1.26086998,  1.17091501,  ...,  1.53073502,
             1.39580250,  1.33583248],
           [ 1.32084000,  1.26086998,  1.29085493,  ...,  1.68066013,
             1.51574254,  1.42578757]]],


         [[[ 1.53492093,  1.47142887,  1.45555580,  ..., -0.78253967,
            -0.78253967, -0.51269841],
           [ 1.56666696,  1.53492093,  1.50317490,  ..., -0.73492062,
            -0.70317459, -0.36984116],
           [ 1.63015902,  1.59841299,  1.56666696,  ..., -0.63968253,
            -0.56031746, -0.14761895],
           ...,
           [ 1.48730183,  1.21746063,  1.09047651,  ...,  1.40793681,
             1.37619078,  1.34444475],
           [ 1.45555580,  1.28095269,  1.28095269,  ...,  1.45555580,
             1.40793681,  1.37619078],
           [ 1.39206374,  1.37619078,  1.37619078,  ...,  1.51904786,
             1.47142887,  1.42380977]],

          [[ 1.67471850,  1.61030626,  1.59420323,  ..., -0.48309177,
            -0.48309177, -0.24154577],
           [ 1.70692456,  1.65861547,  1.62640929,  ..., -0.43478248,
            -0.41867942, -0.08051517],
           [ 1.75523376,  1.72302771,  1.69082153,  ..., -0.33816412,
            -0.25764883,  0.12882459],
           ...,
           [ 1.65861547,  1.41706955,  1.22383285,  ...,  1.57810009,
             1.54589403,  1.52979100],
           [ 1.59420323,  1.43317258,  1.41706955,  ...,  1.61030626,
             1.57810009,  1.54589403],
           [ 1.52979100,  1.49758482,  1.52979100,  ...,  1.65861547,
             1.62640929,  1.59420323]],

          [[ 1.39580250,  1.33583248,  1.32084000,  ..., -0.97301346,
            -0.92803597, -0.61319339],
           [ 1.45577252,  1.41079497,  1.38081002,  ..., -0.94302845,
            -0.85307342, -0.46326834],
           [ 1.54572761,  1.51574254,  1.48575759,  ..., -0.83808094,
            -0.70314842, -0.26836565],
           ...,
           [ 1.51574254,  1.23088503,  0.91604215,  ...,  1.41079497,
             1.30584753,  1.29085493],
           [ 1.47076499,  1.26086998,  1.17091501,  ...,  1.53073502,
             1.39580250,  1.33583248],
           [ 1.32084000,  1.26086998,  1.29085493,  ...,  1.68066013,
             1.51574254,  1.42578757]]],


         [[[ 1.53492093,  1.47142887,  1.45555580,  ..., -0.78253967,
            -0.78253967, -0.51269841],
           [ 1.56666696,  1.53492093,  1.50317490,  ..., -0.73492062,
            -0.70317459, -0.36984116],
           [ 1.63015902,  1.59841299,  1.56666696,  ..., -0.63968253,
            -0.56031746, -0.14761895],
           ...,
           [ 1.48730183,  1.21746063,  1.09047651,  ...,  1.40793681,
             1.37619078,  1.34444475],
           [ 1.45555580,  1.28095269,  1.28095269,  ...,  1.45555580,
             1.40793681,  1.37619078],
           [ 1.39206374,  1.37619078,  1.37619078,  ...,  1.51904786,
             1.47142887,  1.42380977]],

          [[ 1.67471850,  1.61030626,  1.59420323,  ..., -0.48309177,
            -0.48309177, -0.24154577],
           [ 1.70692456,  1.65861547,  1.62640929,  ..., -0.43478248,
            -0.41867942, -0.08051517],
           [ 1.75523376,  1.72302771,  1.69082153,  ..., -0.33816412,
            -0.25764883,  0.12882459],
           ...,
           [ 1.65861547,  1.41706955,  1.22383285,  ...,  1.57810009,
             1.54589403,  1.52979100],
           [ 1.59420323,  1.43317258,  1.41706955,  ...,  1.61030626,
             1.57810009,  1.54589403],
           [ 1.52979100,  1.49758482,  1.52979100,  ...,  1.65861547,
             1.62640929,  1.59420323]],

          [[ 1.39580250,  1.33583248,  1.32084000,  ..., -0.97301346,
            -0.92803597, -0.61319339],
           [ 1.45577252,  1.41079497,  1.38081002,  ..., -0.94302845,
            -0.85307342, -0.46326834],
           [ 1.54572761,  1.51574254,  1.48575759,  ..., -0.83808094,
            -0.70314842, -0.26836565],
           ...,
           [ 1.51574254,  1.23088503,  0.91604215,  ...,  1.41079497,
             1.30584753,  1.29085493],
           [ 1.47076499,  1.26086998,  1.17091501,  ...,  1.53073502,
             1.39580250,  1.33583248],
           [ 1.32084000,  1.26086998,  1.29085493,  ...,  1.68066013,
             1.51574254,  1.42578757]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0846 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 54, vnnlib ID: 54 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-8.60030365, -9.18505859, -6.79131508, -6.88497829, -7.22082901,
         -7.05521584, -7.65325308, -6.61295652, -4.71676254, -8.33832359]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [638]; unstable size 638; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 201, 1, 638] with unstable size 200 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 638] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 638] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [200]; unstable size 200; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 200] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 200] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.26122475,  2.70693874, -0.04236603,  0.30218863,  0.55265021,
          0.28326643,  0.97746158, -0.14264703,  2.10263634]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-8.60030365, -9.18505859, -6.79131508, -6.88497829, -7.22082901,
         -7.05521584, -7.65325308, -6.61295652, -4.71676254, -8.33832359]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.11it/s]100%|██████████| 1/1 [00:00<00:00,  9.09it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-8.18685913, -9.02146721, -6.04399967, -6.18254805, -6.46242762,
          -6.28525734, -6.96298456, -5.72760868, -4.99939823, -8.02779961],
         [-8.18685913, -9.02146721, -6.04399967, -6.18254805, -6.46242762,
          -6.28525734, -6.96298456, -5.72760868, -4.99939823, -8.02779961]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.04460144, 0.72821045]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1128 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 9.889856338500977
alpha/beta optimization time: 1.1673848628997803
initial alpha-crown bounds: tensor([[ 2.37169099,  2.83057594,  0.08211327,  0.37143445,  0.65308690,
          0.37245822,  1.04918671, -0.03270280,  2.19201279]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.03270280361175537
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.65145230293274
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.65141701698303
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.65139055252075
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.65136766433716
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.6513488292694
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.65133023262024
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 198.6513113975525
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 198.6512894630432
Verifying property 7 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.03270280]], device='cuda:0') need to verify.
Model prediction is: tensor([-8.60030365, -9.18505859, -6.79131508, -6.88497829, -7.22082901,
        -7.05521584, -7.65325308, -6.61295652, -4.71676254, -8.33832359],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.03270280]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 638
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 196
Node /15 input 0: size torch.Size([100]) unstable 20
-----------------
# of unstable neurons: 854
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010633468627929688
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03270113468170166
10 lb beta sum: 0.0, worst -0.032733798027038574
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0518    transfer 0.0001    finalize 0.0001    func 0.0523    
Accumulated time: func 0.0523    prepare 0.0002    bound 0.0518    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 31] 
split level 1: [/input-12, 18] 
split level 2: [/input-12, 36] 
split level 3: [/input-12, 4] 
split level 4: [/input-12, 51] 
split level 5: [/input-12, 26] 
split level 6: [/input-8, 1891] 
split level 7: [/input-8, 860] 
split level 8: [/input-8, 1910] 
split level 9: [/input-8, 548] 
split level 10: [/input-8, 1884] 
split level 11: [/input-8, 1902] 
split level 12: [/input-8, 1892] 
split level 13: [/input-8, 875] 
split level 14: [/input-8, 876] 
split level 15: [/input-12, 1] 
split level 16: [/input, 2525] 
split level 17: [/input-8, 667] 
split level 18: [/input-8, 666] 
split level 19: [/input-8, 1879] 
split level 20: [/input, 2426] 
split level 21: [/input, 2422] 
split level 22: [/input, 2409] 
split level 23: [/input, 2442] 
split level 24: [/input-8, 1874] 
split level 25: [/input, 3511] 
split level 26: [/input, 2765] 
split level 27: [/input, 2526] 
split level 28: [/input-8, 649] 
split level 29: [/input-8, 1918] 
split level 30: [/input-8, 859] 
split level 31: [/input-8, 1861] 
split level 32: [/input, 1479] 
split level 33: [/input-8, 1057] 
split level 34: [/input, 2407] 
split level 35: [/input-8, 506] 
split level 36: [/input, 2518] 
split level 37: [/input-8, 1469] 
split level 38: [/input-8, 556] 
split level 39: [/input-8, 1890] 
split level 40: [/input, 2503] 
split level 41: [/input, 2519] 
split level 42: [/input-8, 1350] 
split level 43: [/input, 1480] 
split level 44: [/input-8, 690] 
split level 45: [/input, 2541] 
split level 46: [/input-8, 1648] 
split level 47: [/input-8, 1307] 
split level 48: [/input, 2540] 
split level 49: [/input, 1478] 
split level 50: [/input, 2472] 
split level 51: [/input, 2377] 
split level 52: [/input, 3302] 
split level 53: [/input, 2517] 
split level 54: [/input-8, 410] 
split level 55: [/input, 2536] 
split level 56: [/input, 2331] 
split level 57: [/input-8, 812] 
split level 58: [/input-8, 949] 
split level 59: [/input-8, 1656] 
split level 60: [/input-8, 1065] 
split level 61: [/input, 2247] 
split level 62: [/input, 1742] 
split level 63: [/input, 2521] 
split level 64: [/input-8, 1970] 
split level 65: [/input, 2348] 
split level 66: [/input, 3156] 
split level 67: [/input-8, 421] 
split level 68: [/input, 3300] 
split level 69: [/input-8, 964] 
split level 70: [/input, 2493] 
split level 71: [/input, 2263] 
split level 72: [/input-8, 147] 
split level 73: [/input, 3578] 
split level 74: [/input, 2343] 
split level 75: [/input, 2332] 
split level 76: [/input-8, 849] 
split level 77: [/input, 2902] 
split level 78: [/input, 102] 
split level 79: [/input-8, 388] 
split level 80: [/input, 2349] 
split level 81: [/input, 2952] 
split level 82: [/input-8, 1081] 
split level 83: [/input, 2510] 
split level 84: [/input, 3304] 
split level 85: [/input-8, 1862] 
split level 86: [/input-8, 420] 
split level 87: [/input, 2354] 
split level 88: [/input, 2370] 
split level 89: [/input, 2460] 
split level 90: [/input-8, 564] 
split level 91: [/input, 1758] 
split level 92: [/input, 2361] 
split level 93: [/input, 2365] 
split level 94: [/input, 2489] 
split level 95: [/input, 3384] 
split level 96: [/input, 2380] 
split level 97: [/input-8, 1984] 
split level 98: [/input-8, 1390] 
split level 99: [/input, 3386] 
split level 100: [/input, 1710] 
split level 101: [/input-12, 33] 
split level 102: [/input, 2389] 
split level 103: [/input, 2477] 
split level 104: [/input, 3224] 
split level 105: [/input-8, 944] 
split level 106: [/input-8, 1353] 
split level 107: [/input, 3576] 
split level 108: [/input, 3283] 
split level 109: [/input, 2443] 
split level 110: [/input, 3286] 
split level 111: [/input, 2363] 
split level 112: [/input-8, 463] 
split level 113: [/input, 1726] 
split level 114: [/input, 3126] 
split level 115: [/input-8, 1926] 
split level 116: [/input, 3139] 
split level 117: [/input, 4062] 
split level 118: [/input, 2444] 
split level 119: [/input, 3124] 
split level 120: [/input, 1355] 
split level 121: [/input, 3122] 
split level 122: [/input, 2398] 
split level 123: [/input, 1356] 
split level 124: [/input, 2397] 
split level 125: [/input, 1514] 
split level 126: [/input, 3208] 
split level 127: [/input, 3268] 
split level 128: [/input, 3128] 
split level 129: [/input, 2436] 
split level 130: [/input, 3113] 
split level 131: [/input-8, 1932] 
split level 132: [/input, 1345] 
split level 133: [/input, 2985] 
split level 134: [/input, 614] 
split level 135: [/input, 1669] 
split level 136: [/input, 3150] 
split level 137: [/input, 1678] 
split level 138: [/input, 2538] 
split level 139: [/input, 3356] 
split level 140: [/input, 1646] 
split level 141: [/input, 2922] 
split level 142: [/input, 2473] 
split level 143: [/input, 3171] 
split level 144: [/input-8, 1860] 
split level 145: [/input-8, 1925] 
split level 146: [/input, 1358] 
split level 147: [/input, 3272] 
split level 148: [/input, 1347] 
split level 149: [/input, 3299] 
split level 150: [/input, 356] 
split level 151: [/input-8, 1624] 
split level 152: [/input, 3137] 
split level 153: [/input, 2327] 
split level 154: [/input, 2552] 
split level 155: [/input, 3130] 
split level 156: [/input, 3106] 
split level 157: [/input-8, 1251] 
split level 158: [/input, 3404] 
split level 159: [/input, 2965] 
split level 160: [/input, 2347] 
split level 161: [/input, 3669] 
split level 162: [/input, 2554] 
split level 163: [/input, 3204] 
split level 164: [/input, 2921] 
split level 165: [/input, 3267] 
split level 166: [/input, 3374] 
split level 167: [/input, 3390] 
split level 168: [/input, 324] 
split level 169: [/input, 3403] 
split level 170: [/input, 3217] 
split level 171: [/input, 3364] 
split level 172: [/input-8, 1314] 
split level 173: [/input, 3289] 
split level 174: [/input, 1323] 
split level 175: [/input, 3117] 
split level 176: [/input-8, 1796] 
split level 177: [/input, 2340] 
split level 178: [/input, 1305] 
split level 179: [/input, 3574] 
split level 180: [/input, 3186] 
split level 181: [/input, 3575] 
split level 182: [/input, 2259] 
split level 183: [/input, 3170] 
split level 184: [/input, 2553] 
split level 185: [/input, 3133] 
split level 186: [/input, 1557] 
split level 187: [/input, 3815] 
split level 188: [/input, 3293] 
split level 189: [/input, 3529] 
split level 190: [/input, 3938] 
split level 191: [/input-8, 389] 
split level 192: [/input, 369] 
split level 193: [/input, 2089] 
split level 194: [/input, 3281] 
split level 195: [/input, 3817] 
split level 196: [/input-8, 1856] 
split level 197: [/input, 1367] 
split level 198: [/input, 2931] 
split level 199: [/input, 3816] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.032677650451660156
10 lb beta sum: 0.0, worst -0.03266477584838867
Time: prepare 0.0120    bound 0.0956    transfer 0.0023    finalize 0.0026    func 0.1150    
Accumulated time: func 0.1673    prepare 0.0220    bound 0.1474    transfer 0.0024    finalize 0.0028    
all_split False
======================Cut inference begins======================
max lb tensor(0.17216098) min lb tensor(-0.03265893)
Number of Verified Splits: 26 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.011653900146484375 
BICCOS Cumulative time: 0.011653900146484375
Preprocessing time: 0.009877681732177734 Inference time: 0.0009832382202148438 Add cuts time: 0.0002956390380859375 Cut analysis time: 0.0004973411560058594
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.5069    set_bounds 0.0090    solve 0.1151    add 0.0099    
Accumulated time: pickout 0.0003    decision 0.5069    set_bounds 0.0090    solve 0.1151    add 0.0099    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([31]), tensor([-1.]), tensor([0]), tensor([1.59479718e-09]), tensor([0]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([31]), tensor([1.]), tensor([0]), tensor([1.59479718e-09]), tensor([0]))}
Shallow branching resets to n domains:  2
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.007800698280334473

all verified at 1th iter
Time: prepare 0.0003    bound 0.0151    transfer 0.0001    finalize 0.0001    func 0.0157    
Accumulated time: func 0.1830    prepare 0.0223    bound 0.1625    transfer 0.0025    finalize 0.0029    
After pruning, left:  0

Back to Regular BaB


Properties batch 8, size 1
Remaining timeout: 197.6854989528656
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.3146 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 55, vnnlib ID: 55 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.89316845, -11.06601906,  -5.14806175,  -6.90553761,  -5.56315517,
          -7.37682629,  -4.56512213,  -8.62777042, -10.82919407, -11.60672951]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [553]; unstable size 553; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 289, 1, 553] with unstable size 288 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 553] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 553] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [288]; unstable size 288; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 288] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 288] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.69566989,  4.02234983, -0.46736020,  1.18290865, -0.48098457,
          1.44691133,  2.02048278,  4.17298079,  4.86422634]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.89316845, -11.06601906,  -5.14806175,  -6.90553761,  -5.56315517,
          -7.37682629,  -4.56512213,  -8.62777042, -10.82919407, -11.60672951]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.20it/s]100%|██████████| 1/1 [00:00<00:00,  9.19it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.66092777, -10.91280365,  -4.69080067,  -6.58803511,  -5.26302862,
           -6.99822426,  -4.68125200,  -8.21521473, -10.48723888, -11.44526005],
         [ -8.66092777, -10.91280365,  -4.69080067,  -6.58803511,  -5.26302862,
           -6.99822426,  -4.68125200,  -8.21521473, -10.48723888, -11.44526005]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.00954866, 0.58177662]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1115 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 20.363887786865234
alpha/beta optimization time: 1.1725401878356934
initial alpha-crown bounds: tensor([[ 2.79173517,  4.12782192, -0.40548557,  1.27908754, -0.38319361,
          1.54761839,  2.13197017,  4.29718590,  4.97714806]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.4054855704307556
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.68573546409607
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.6856963634491
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.68567204475403
Verifying property 2 with 1 instances.
##### Instance 55 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.40548557]], device='cuda:0') need to verify.
Model prediction is: tensor([ -8.89316845, -11.06601906,  -5.14806175,  -6.90553761,  -5.56315517,
         -7.37682629,  -4.56512213,  -8.62777042, -10.82919407, -11.60672951],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.40548557]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 553
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 283
Node /15 input 0: size torch.Size([100]) unstable 20
-----------------
# of unstable neurons: 856
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010371208190917969
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.40548455715179443
10 lb beta sum: 0.0, worst -0.4054889678955078
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0518    transfer 0.0001    finalize 0.0001    func 0.0522    
Accumulated time: func 0.0522    prepare 0.0002    bound 0.0518    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 60] 
split level 1: [/input-12, 11] 
split level 2: [/input-12, 58] 
split level 3: [/input-12, 65] 
split level 4: [/input-12, 35] 
split level 5: [/input-8, 1894] 
split level 6: [/input-8, 626] 
split level 7: [/input-8, 1337] 
split level 8: [/input-8, 565] 
split level 9: [/input-8, 1370] 
split level 10: [/input-8, 1902] 
split level 11: [/input-8, 1563] 
split level 12: [/input-8, 1828] 
split level 13: [/input-8, 1371] 
split level 14: [/input-8, 1019] 
split level 15: [/input-8, 147] 
split level 16: [/input-8, 1386] 
split level 17: [/input-8, 1018] 
split level 18: [/input-8, 1436] 
split level 19: [/input-8, 1562] 
split level 20: [/input-8, 1564] 
split level 21: [/input-8, 1020] 
split level 22: [/input-8, 942] 
split level 23: [/input-8, 841] 
split level 24: [/input-8, 77] 
split level 25: [/input-8, 1292] 
split level 26: [/input-8, 933] 
split level 27: [/input-8, 650] 
split level 28: [/input-8, 1339] 
split level 29: [/input-8, 1903] 
split level 30: [/input-8, 485] 
split level 31: [/input-8, 1420] 
split level 32: [/input-8, 1428] 
split level 33: [/input-8, 1042] 
split level 34: [/input-8, 180] 
split level 35: [/input-8, 1340] 
split level 36: [/input-8, 84] 
split level 37: [/input-8, 1402] 
split level 38: [/input-8, 890] 
split level 39: [/input-8, 1444] 
split level 40: [/input-8, 2004] 
split level 41: [/input-8, 2013] 
split level 42: [/input-8, 1821] 
split level 43: [/input-8, 1131] 
split level 44: [/input-8, 105] 
split level 45: [/input-8, 162] 
split level 46: [/input-8, 1001] 
split level 47: [/input-8, 893] 
split level 48: [/input-8, 1291] 
split level 49: [/input-8, 795] 
split level 50: [/input-8, 1588] 
split level 51: [/input-8, 1404] 
split level 52: [/input-8, 981] 
split level 53: [/input-8, 989] 
split level 54: [/input-8, 924] 
split level 55: [/input-8, 1421] 
split level 56: [/input-8, 1886] 
split level 57: [/input-8, 1589] 
split level 58: [/input-8, 1149] 
split level 59: [/input-8, 937] 
split level 60: [/input-8, 1868] 
split level 61: [/input-8, 1422] 
split level 62: [/input-8, 1002] 
split level 63: [/input-8, 923] 
split level 64: [/input-8, 984] 
split level 65: [/input, 1675] 
split level 66: [/input-8, 76] 
split level 67: [/input-8, 573] 
split level 68: [/input-8, 2037] 
split level 69: [/input, 2732] 
split level 70: [/input-8, 878] 
split level 71: [/input-8, 1876] 
split level 72: [/input-8, 1022] 
split level 73: [/input, 1724] 
split level 74: [/input, 1942] 
split level 75: [/input, 1926] 
split level 76: [/input-8, 486] 
split level 77: [/input-8, 976] 
split level 78: [/input-8, 1811] 
split level 79: [/input-8, 803] 
split level 80: [/input-8, 1325] 
split level 81: [/input-8, 290] 
split level 82: [/input-8, 1590] 
split level 83: [/input-8, 1449] 
split level 84: [/input-8, 1582] 
split level 85: [/input-8, 1916] 
split level 86: [/input-8, 67] 
split level 87: [/input-8, 1012] 
split level 88: [/input-8, 1141] 
split level 89: [/input, 3416] 
split level 90: [/input-8, 1092] 
split level 91: [/input-8, 972] 
split level 92: [/input-8, 432] 
split level 93: [/input-8, 2038] 
split level 94: [/input, 2492] 
split level 95: [/input-8, 1419] 
split level 96: [/input-8, 1755] 
split level 97: [/input-8, 1014] 
split level 98: [/input-8, 1458] 
split level 99: [/input, 1740] 
split level 100: [/input-8, 2030] 
split level 101: [/input-8, 953] 
split level 102: [/input-8, 1960] 
split level 103: [/input-8, 1788] 
split level 104: [/input, 1400] 
split level 105: [/input, 1773] 
split level 106: [/input-8, 1764] 
split level 107: [/input, 359] 
split level 108: [/input-8, 113] 
split level 109: [/input-8, 945] 
split level 110: [/input, 2170] 
split level 111: [/input-8, 2045] 
split level 112: [/input, 2733] 
split level 113: [/input-8, 559] 
split level 114: [/input-8, 877] 
split level 115: [/input-8, 1982] 
split level 116: [/input-8, 1869] 
split level 117: [/input, 209] 
split level 118: [/input-8, 2008] 
split level 119: [/input-8, 167] 
split level 120: [/input-8, 1784] 
split level 121: [/input, 2153] 
split level 122: [/input, 1948] 
split level 123: [/input, 1946] 
split level 124: [/input, 3558] 
split level 125: [/input-8, 910] 
split level 126: [/input-8, 2044] 
split level 127: [/input-8, 2022] 
split level 128: [/input, 1622] 
split level 129: [/input-8, 1996] 
split level 130: [/input-8, 1906] 
split level 131: [/input, 1725] 
split level 132: [/input-8, 2012] 
split level 133: [/input, 2745] 
split level 134: [/input, 1606] 
split level 135: [/input, 3380] 
split level 136: [/input, 4044] 
split level 137: [/input, 470] 
split level 138: [/input, 2616] 
split level 139: [/input, 2995] 
split level 140: [/input, 1238] 
split level 141: [/input, 4045] 
split level 142: [/input-8, 1838] 
split level 143: [/input, 3779] 
split level 144: [/input-8, 1786] 
split level 145: [/input-8, 118] 
split level 146: [/input, 4048] 
split level 147: [/input, 2788] 
split level 148: [/input-8, 1035] 
split level 149: [/input-8, 393] 
split level 150: [/input-8, 1595] 
split level 151: [/input, 3016] 
split level 152: [/input-8, 1998] 
split level 153: [/input-8, 1547] 
split level 154: [/input, 3763] 
split level 155: [/input, 2286] 
split level 156: [/input-8, 1992] 
split level 157: [/input, 1577] 
split level 158: [/input-8, 1418] 
split level 159: [/input, 2989] 
split level 160: [/input-8, 1552] 
split level 161: [/input, 2151] 
split level 162: [/input, 485] 
split level 163: [/input, 1830] 
split level 164: [/input-8, 1093] 
split level 165: [/input-8, 1560] 
split level 166: [/input, 2302] 
split level 167: [/input, 3780] 
split level 168: [/input-8, 477] 
split level 169: [/input-8, 1753] 
split level 170: [/input, 1530] 
split level 171: [/input, 3608] 
split level 172: [/input, 4043] 
split level 173: [/input, 3764] 
split level 174: [/input, 1578] 
split level 175: [/input, 1589] 
split level 176: [/input, 2908] 
split level 177: [/input, 1925] 
split level 178: [/input, 465] 
split level 179: [/input-8, 1776] 
split level 180: [/input, 3677] 
split level 181: [/input, 2842] 
split level 182: [/input-8, 1877] 
split level 183: [/input, 1833] 
split level 184: [/input, 1816] 
split level 185: [/input, 498] 
split level 186: [/input, 2925] 
split level 187: [/input, 3600] 
split level 188: [/input, 4034] 
split level 189: [/input, 2825] 
split level 190: [/input, 3610] 
split level 191: [/input, 1719] 
split level 192: [/input, 2834] 
split level 193: [/input, 1648] 
split level 194: [/input, 1570] 
split level 195: [/input, 1829] 
split level 196: [/input, 1815] 
split level 197: [/input, 3601] 
split level 198: [/input, 3693] 
split level 199: [/input, 4016] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.40543419122695923
10 lb beta sum: 0.0, worst -0.4054269790649414
Time: prepare 0.0120    bound 0.0967    transfer 0.0018    finalize 0.0031    func 0.1163    
Accumulated time: func 0.1685    prepare 0.0221    bound 0.1485    transfer 0.0019    finalize 0.0032    
all_split False
======================Cut inference begins======================
max lb tensor(-0.13690674) min lb tensor(-0.40541840)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.01015925407409668 
BICCOS Cumulative time: 0.01015925407409668
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.39304 (1), -0.39289 (1), -0.39270 (1), -0.39244 (1), -0.39200 (1), -0.39188 (1), -0.39169 (1), -0.39119 (1), -0.39084 (1), -0.39036 (1), -0.38997 (1), -0.38977 (1), -0.38922 (1), -0.38899 (1), -0.38843 (1), -0.38783 (1), -0.38302 (1), -0.38248 (1), -0.38197 (1), -0.38160 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5106    set_bounds 0.0093    solve 0.1163    add 0.0688    
Accumulated time: pickout 0.0003    decision 0.5106    set_bounds 0.0093    solve 0.1163    add 0.0688    
Current (lb-rhs): -0.3930436372756958
50 domains visited
Cumulative time: 0.7723946571350098

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 60] [/input-12, 11] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] 
split level 1: [/input-12, 11] [/input-12, 35] [/input-12, 11] [/input-12, 58] [/input-12, 58] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] 
split level 2: [/input-12, 35] [/input-8, 1563] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 3: [/input-8, 812] [/input-8, 1902] [/input-8, 1563] [/input-8, 1902] [/input-8, 1902] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.38472282886505127
10 lb beta sum: 0.0, worst -0.38445836305618286
Time: prepare 0.0136    bound 0.0972    transfer 0.0008    finalize 0.0023    func 0.1164    
Accumulated time: func 0.2849    prepare 0.0359    bound 0.2457    transfer 0.0027    finalize 0.0055    
all_split False
======================Cut inference begins======================
max lb tensor(0.08208370) min lb tensor(-0.38436168)
Number of Verified Splits: 2 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.012456655502319336 
BICCOS Cumulative time: 0.022615909576416016
Preprocessing time: 0.01196146011352539 Inference time: 0.0001480579376220703 Add cuts time: 8.559226989746094e-05 Cut analysis time: 0.00026154518127441406
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10440 (2), -0.10351 (2), -0.10210 (2), -0.10151 (2), -0.10143 (2), -0.10101 (2), -0.09986 (2), -0.09960 (2), -0.09894 (2), -0.09807 (2), -0.09737 (2), -0.09671 (2), -0.09667 (2), -0.09664 (2), -0.09648 (2), -0.09581 (2), -0.09502 (2), -0.09359 (2), -0.09318 (2), -0.09298 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0197    set_bounds 0.0114    solve 0.1165    add 0.0757    
Accumulated time: pickout 0.0014    decision 0.5303    set_bounds 0.0207    solve 0.2328    add 0.1445    
Current (lb-rhs): -0.10440468788146973
100 domains visited
Cumulative time: 1.0100300312042236

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 11] [/input-12, 58] [/input-12, 58] [/input-12, 11] [/input-12, 60] [/input-12, 58] [/input-12, 60] 
split level 1: [/input-12, 35] [/input-12, 35] [/input-12, 11] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 11] 
split level 2: [/input-8, 650] [/input-8, 650] [/input-12, 35] [/input-8, 1563] [/input-8, 1563] [/input-8, 1563] [/input-8, 1563] [/input-8, 1902] [/input-8, 1902] [/input-12, 35] 
split level 3: [/input-8, 812] [/input-8, 812] [/input-8, 812] [/input-8, 1902] [/input-8, 1902] [/input-8, 1902] [/input-8, 1902] [/input-8, 812] [/input-8, 1563] [/input-8, 812] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09606146812438965
10 lb beta sum: 0.1514895260334015, worst -0.10404300689697266
Time: prepare 0.0085    bound 0.1147    transfer 0.0007    finalize 0.0022    func 0.1287    
Accumulated time: func 0.4136    prepare 0.0446    bound 0.3604    transfer 0.0034    finalize 0.0077    
all_split False
======================Cut inference begins======================
max lb tensor(0.35985088) min lb tensor(-0.08288467)
Number of Verified Splits: 155 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 35.
#cuts 1-3: 35
#cuts >= 20: 0
BICCOS time: 0.02268671989440918 
BICCOS Cumulative time: 0.045302629470825195
Preprocessing time: 0.011766910552978516 Inference time: 0.00661778450012207 Add cuts time: 0.0034487247467041016 Cut analysis time: 0.0008533000946044922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05482 (3), -0.05459 (3), -0.05434 (3), -0.05269 (3), -0.05203 (3), -0.05155 (3), -0.05072 (3), -0.04998 (3), -0.04728 (3), -0.04690 (3), -0.04656 (3), -0.04634 (3), -0.04228 (3), -0.04200 (3), -0.04119 (3), -0.03656 (3), -0.03204 (3), -0.02988 (3), -0.02799 (3), -0.02765 (3), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0195    set_bounds 0.0149    solve 0.1288    add 0.0949    
Accumulated time: pickout 0.0024    decision 0.5498    set_bounds 0.0356    solve 0.3617    add 0.2394    
Current (lb-rhs): -0.05481898784637451
150 domains visited
Cumulative time: 1.2921674251556396

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 58] [/input-12, 58] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] 
split level 1: [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-8, 1902] [/input-8, 1902] [/input-12, 35] [/input-12, 35] [/input-12, 35] 
split level 2: [/input-8, 1902] [/input-8, 1902] [/input-8, 1902] [/input-8, 1902] [/input-8, 1563] [/input-8, 1563] [/input-8, 650] [/input-8, 1902] [/input-8, 1902] [/input-8, 1902] 
split level 3: [/input-8, 812] [/input-8, 812] [/input-8, 812] [/input-8, 812] [/input-8, 812] [/input-8, 812] [/input-8, 812] [/input-8, 812] [/input-8, 812] [/input-8, 812] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05264401435852051
10 lb beta sum: 0.6742638945579529, worst -0.08377277106046677
Time: prepare 0.0086    bound 0.1294    transfer 0.0008    finalize 0.0023    func 0.1437    
Accumulated time: func 0.5573    prepare 0.0535    bound 0.4898    transfer 0.0041    finalize 0.0100    
all_split False
======================Cut inference begins======================
max lb tensor(0.36456239) min lb tensor(-0.03635335)
Number of Verified Splits: 275 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.032079458236694336 
BICCOS Cumulative time: 0.07738208770751953
Preprocessing time: 0.01156926155090332 Inference time: 0.012140274047851562 Add cuts time: 0.008126497268676758 Cut analysis time: 0.0002434253692626953
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0010    decision 0.0196    set_bounds 0.0148    solve 0.1438    add 0.0236    
Accumulated time: pickout 0.0034    decision 0.5693    set_bounds 0.0504    solve 0.5055    add 0.2630    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
No domains left, MTS early stop!
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([11, 60]), tensor([-1., -1.]), tensor([0, 0]), tensor([-5.34986170e-21,  2.39828695e-02]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([11, 60, 58]), tensor([-1.,  1., -1.]), tensor([0, 0, 0]), tensor([-5.34986170e-21,  2.70844817e-01,  6.72333688e-02]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([11, 60, 58]), tensor([-1.,  1.,  1.]), tensor([0, 0, 0]), tensor([-5.34986170e-21,  2.70844817e-01,  2.54172552e-02]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([11, 58, 35, 60]), tensor([ 1., -1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([-5.34986170e-21,  2.57730424e-01,  4.23217267e-02,  2.41536554e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([11, 58, 35, 60]), tensor([ 1., -1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([-5.34986170e-21,  2.57730424e-01,  4.23217267e-02,  1.55206010e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([11, 58, 35, 60]), tensor([ 1., -1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([-5.34986170e-21,  2.57730424e-01,  4.88548726e-02,  1.83828343e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([11, 58, 35, 60]), tensor([ 1., -1.,  1.,  1.]), tensor([0, 0, 0, 0]), tensor([-5.34986170e-21,  2.57730424e-01,  4.88548726e-02,  1.56124398e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([11, 58]), tensor([1., 1.]), tensor([0, 0]), tensor([-5.34986170e-21,  9.15567763e-03]), tensor([0, 1]))}
Shallow branching resets to n domains:  8
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.31504762172698975
10 lb beta sum: 0.2803649604320526, worst -0.2898128628730774
Time: prepare 0.0005    bound 0.1096    transfer 0.0001    finalize 0.0002    func 0.1105    
Accumulated time: func 0.6678    prepare 0.0540    bound 0.5994    transfer 0.0043    finalize 0.0102    
After pruning, left:  4

Back to Regular BaB

BaB round 1
batch: 4
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] [/input-8, 1902] [/input-8, 1902] [/input-12, 60] 
split level 1: [/input-12, 65] [/input-8, 1404] [/input-8, 1404] [/input-12, 65] 
split level 2: [/input-12, 35] [/input-8, 1340] [/input-8, 1340] [/input-12, 35] 
split level 3: [/input-8, 1902] [/input-8, 650] [/input-8, 650] [/input-8, 1902] 
split level 4: [/input-8, 1563] [/input-8, 1877] [/input-8, 1877] [/input-8, 1563] 
split level 5: [/input-8, 1371] [/input-8, 812] [/input-8, 812] [/input-8, 1903] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732657730579376, worst -0.23658543825149536
10 lb beta sum: 0.23732657730579376, worst -0.2360057234764099
Time: prepare 0.0116    bound 0.1116    transfer 0.0011    finalize 0.0015    func 0.1275    
Accumulated time: func 0.7953    prepare 0.0659    bound 0.7110    transfer 0.0054    finalize 0.0117    
all_split False
======================Cut inference begins======================
max lb tensor(0.30398583) min lb tensor(-0.23580647)
Number of Verified Splits: 192 of 256
Stop inferencing: Max iteration reached.
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.00034618377685546875 
BICCOS Cumulative time: 0.077728271484375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23581 (6), -0.23473 (6), -0.23198 (6), -0.23100 (6), -0.23087 (6), -0.23029 (6), -0.22718 (6), -0.22644 (6), -0.22340 (6), -0.22319 (6), -0.22213 (6), -0.22211 (6), -0.22178 (6), -0.21989 (6), -0.21958 (6), -0.21933 (6), -0.21906 (6), -0.21832 (6), -0.21794 (6), -0.21690 (6), 
Length of domains: 64
Time: pickout 0.0005    decision 0.0173    set_bounds 0.0177    solve 0.1276    add 0.0012    
Accumulated time: pickout 0.0039    decision 0.5866    set_bounds 0.0681    solve 0.6331    add 0.2642    
Current (lb-rhs): -0.23580646514892578
214 domains visited
Cumulative time: 1.8212029933929443

BaB round 2
batch: 64
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1371] [/input-8, 147] [/input-8, 1371] [/input-8, 1370] [/input-8, 147] [/input-8, 147] [/input-8, 1371] [/input-8, 1370] [/input-8, 1371] [/input-8, 147] 
split level 1: [/input-8, 924] [/input-8, 924] [/input-8, 1020] [/input-8, 933] [/input-8, 923] [/input-8, 924] [/input-8, 1020] [/input-8, 933] [/input-8, 924] [/input-8, 924] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732657730579376, worst -0.22546285390853882
10 lb beta sum: 0.23732657730579376, worst -0.22523444890975952
Time: prepare 0.0114    bound 0.1116    transfer 0.0005    finalize 0.0012    func 0.1264    
Accumulated time: func 0.9217    prepare 0.0775    bound 0.8226    transfer 0.0059    finalize 0.0129    
all_split False
======================Cut inference begins======================
max lb tensor(0.02959438) min lb tensor(-0.22510284)
Number of Verified Splits: 75 of 256
Stop inferencing: Max iteration reached.
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.0002994537353515625 
BICCOS Cumulative time: 0.07802772521972656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22510 (8), -0.22394 (8), -0.22125 (8), -0.22042 (8), -0.22003 (8), -0.21959 (8), -0.21819 (8), -0.21749 (8), -0.21657 (8), -0.21568 (8), -0.21434 (8), -0.21421 (8), -0.21358 (8), -0.21351 (8), -0.21349 (8), -0.21327 (8), -0.21314 (8), -0.21271 (8), -0.21238 (8), -0.21156 (8), 
Length of domains: 181
Time: pickout 0.0015    decision 0.0143    set_bounds 0.0114    solve 0.1265    add 0.0031    
Accumulated time: pickout 0.0054    decision 0.6010    set_bounds 0.0795    solve 0.7595    add 0.2672    
Current (lb-rhs): -0.22510284185409546
395 domains visited
Cumulative time: 1.9787373542785645

BaB round 3
batch: 181
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1370] [/input-8, 1436] [/input-8, 1370] [/input-8, 650] [/input-8, 1370] [/input-8, 1436] [/input-8, 1370] [/input-8, 650] [/input-8, 1370] [/input-8, 1436] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732659220695496, worst -0.22116053104400635
10 lb beta sum: 0.23732659220695496, worst -0.22105759382247925
Time: prepare 0.0163    bound 0.1197    transfer 0.0025    finalize 0.0017    func 0.1426    
Accumulated time: func 1.0643    prepare 0.0940    bound 0.9424    transfer 0.0083    finalize 0.0146    
all_split False
======================Cut inference begins======================
max lb tensor(0.02238905) min lb tensor(-0.22101659)
Number of Verified Splits: 79 of 362
Stop inferencing: Max iteration reached.
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.00035119056701660156 
BICCOS Cumulative time: 0.07837891578674316
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22102 (9), -0.22017 (9), -0.21725 (9), -0.21637 (9), -0.21623 (9), -0.21584 (9), -0.21410 (9), -0.21372 (9), -0.21259 (9), -0.21189 (9), -0.21045 (9), -0.21032 (9), -0.20992 (9), -0.20980 (9), -0.20946 (9), -0.20939 (9), -0.20872 (9), -0.20856 (9), -0.20850 (9), -0.20752 (9), 
Length of domains: 283
Time: pickout 0.0026    decision 0.0219    set_bounds 0.0162    solve 0.1427    add 0.0029    
Accumulated time: pickout 0.0079    decision 0.6228    set_bounds 0.0957    solve 0.9023    add 0.2701    
Current (lb-rhs): -0.22101658582687378
678 domains visited
Cumulative time: 2.166147232055664

BaB round 4
batch: 283
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 933] [/input-8, 1020] [/input-8, 933] [/input-8, 1436] [/input-8, 1436] [/input-8, 933] [/input-8, 933] [/input-8, 1436] [/input-8, 1436] [/input-8, 1020] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732657730579376, worst -0.21712738275527954
10 lb beta sum: 0.23732657730579376, worst -0.21709752082824707
Time: prepare 0.0255    bound 0.1223    transfer 0.0034    finalize 0.0033    func 0.1582    
Accumulated time: func 1.2225    prepare 0.1197    bound 1.0647    transfer 0.0118    finalize 0.0179    
all_split False
======================Cut inference begins======================
max lb tensor(0.01230760) min lb tensor(-0.21708530)
Number of Verified Splits: 42 of 566
Stop inferencing: Max iteration reached.
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.00035309791564941406 
BICCOS Cumulative time: 0.07873201370239258
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21709 (10), -0.21316 (10), -0.21285 (10), -0.21243 (10), -0.21157 (10), -0.21016 (10), -0.20917 (10), -0.20879 (10), -0.20819 (10), -0.20768 (10), -0.20723 (10), -0.20671 (10), -0.20598 (10), -0.20583 (10), -0.20562 (10), -0.20550 (10), -0.20512 (10), -0.20481 (10), -0.20452 (10), -0.20359 (10), 
Length of domains: 524
Time: pickout 0.0043    decision 0.1794    set_bounds 0.0242    solve 0.1584    add 0.0044    
Accumulated time: pickout 0.0123    decision 0.8022    set_bounds 0.1199    solve 1.0607    add 0.2745    
Current (lb-rhs): -0.21708530187606812
1202 domains visited
Cumulative time: 2.5380594730377197

BaB round 5
batch: 524
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1436] [/input-8, 650] [/input-8, 1436] [/input-8, 1020] [/input-8, 933] [/input-8, 650] [/input-8, 1436] [/input-8, 933] [/input-8, 933] [/input-8, 650] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732657730579376, worst -0.21014267206192017
10 lb beta sum: 0.23732657730579376, worst -0.21012437343597412
Time: prepare 0.0464    bound 0.1245    transfer 0.0064    finalize 0.0045    func 0.1894    
Accumulated time: func 1.4119    prepare 0.1663    bound 1.1892    transfer 0.0182    finalize 0.0224    
all_split False
======================Cut inference begins======================
max lb tensor(0.03336155) min lb tensor(-0.21011215)
Number of Verified Splits: 24 of 1048
Stop inferencing: Max iteration reached.
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.00037169456481933594 
BICCOS Cumulative time: 0.07910370826721191
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21011 (11), -0.20930 (11), -0.20843 (11), -0.20750 (11), -0.20584 (11), -0.20543 (11), -0.20492 (11), -0.20485 (11), -0.20421 (11), -0.20378 (11), -0.20317 (11), -0.20316 (11), -0.20312 (11), -0.20284 (11), -0.20149 (11), -0.20117 (11), -0.20105 (11), -0.20047 (11), -0.19958 (11), -0.19893 (11), 
Length of domains: 1024
Time: pickout 0.0087    decision 0.0404    set_bounds 0.0432    solve 0.1897    add 0.0040    
Accumulated time: pickout 0.0210    decision 0.8426    set_bounds 0.1631    solve 1.2503    add 0.2785    
Current (lb-rhs): -0.21011215448379517
2226 domains visited
Cumulative time: 2.8255014419555664

BaB round 6
batch: 1024
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1018] [/input-8, 1903] [/input-8, 1018] [/input-8, 1903] [/input-8, 1018] [/input-8, 1020] [/input-8, 1018] [/input-8, 1020] [/input-8, 1018] [/input-8, 1903] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732657730579376, worst -0.20811301469802856
10 lb beta sum: 0.23732657730579376, worst -0.2081080675125122
Time: prepare 0.0902    bound 0.1485    transfer 0.0076    finalize 0.0089    func 0.2687    
Accumulated time: func 1.6807    prepare 0.2567    bound 1.3377    transfer 0.0258    finalize 0.0313    
all_split False
======================Cut inference begins======================
max lb tensor(-0.11939089) min lb tensor(-0.20809889)
Number of Verified Splits: 0 of 2048
Stop inferencing: Max iteration reached.
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.00039267539978027344 
BICCOS Cumulative time: 0.07949638366699219
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20810 (12), -0.20715 (12), -0.20642 (12), -0.20536 (12), -0.20382 (12), -0.20341 (12), -0.20277 (12), -0.20269 (12), -0.20218 (12), -0.20177 (12), -0.20101 (12), -0.20098 (12), -0.20096 (12), -0.20047 (12), -0.19928 (12), -0.19913 (12), -0.19868 (12), -0.19831 (12), -0.19754 (12), -0.19676 (12), 
Length of domains: 2048
Time: pickout 0.0174    decision 0.0679    set_bounds 0.0828    solve 0.2691    add 0.0161    
Accumulated time: pickout 0.0383    decision 0.9105    set_bounds 0.2459    solve 1.5194    add 0.2946    
Current (lb-rhs): -0.2080988883972168
4274 domains visited
Cumulative time: 3.2812001705169678

BaB round 7
batch: 2048
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1340] [/input-8, 1292] [/input-8, 650] [/input-8, 1340] [/input-8, 1340] [/input-8, 1292] [/input-8, 650] [/input-8, 1131] [/input-8, 1340] [/input-8, 1292] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732657730579376, worst -0.20146948099136353
10 lb beta sum: 0.23732657730579376, worst -0.20146989822387695
Time: prepare 0.1844    bound 0.2283    transfer 0.0135    finalize 0.0171    func 0.4698    
Accumulated time: func 2.1504    prepare 0.4413    bound 1.5660    transfer 0.0392    finalize 0.0483    
all_split False
======================Cut inference begins======================
max lb tensor(-0.10677911) min lb tensor(-0.20145869)
Number of Verified Splits: 0 of 4096
Stop inferencing: Max iteration reached.
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.0004572868347167969 
BICCOS Cumulative time: 0.07995367050170898
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20146 (13), -0.20053 (13), -0.19978 (13), -0.19952 (13), -0.19874 (13), -0.19855 (13), -0.19783 (13), -0.19718 (13), -0.19678 (13), -0.19676 (13), -0.19615 (13), -0.19607 (13), -0.19553 (13), -0.19524 (13), -0.19512 (13), -0.19484 (13), -0.19439 (13), -0.19435 (13), -0.19423 (13), -0.19416 (13), 
Length of domains: 4096
Time: pickout 0.0224    decision 0.1208    set_bounds 0.3225    solve 0.4705    add 0.0212    
Accumulated time: pickout 0.0607    decision 1.0313    set_bounds 0.5683    solve 1.9900    add 0.3159    
Current (lb-rhs): -0.20145869255065918
8370 domains visited
Cumulative time: 4.242456674575806

BaB round 8
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 650] [/input-8, 84] [/input-8, 1340] [/input-8, 1018] [/input-8, 650] [/input-8, 84] [/input-8, 1340] [/input-8, 1340] [/input-8, 650] [/input-8, 84] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732659220695496, worst -0.19638961553573608
10 lb beta sum: 0.23732659220695496, worst -0.19636380672454834
Time: prepare 0.3706    bound 0.3956    transfer 0.0407    finalize 0.0401    func 0.8984    
Accumulated time: func 3.0489    prepare 0.8121    bound 1.9616    transfer 0.0800    finalize 0.0884    
all_split False
======================Cut inference begins======================
max lb tensor(-0.07741122) min lb tensor(-0.19635504)
Number of Verified Splits: 0 of 8192
Stop inferencing: Max iteration reached.
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.0006558895111083984 
BICCOS Cumulative time: 0.08060956001281738
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19636 (14), -0.19501 (14), -0.19469 (14), -0.19440 (14), -0.19424 (14), -0.19322 (14), -0.19306 (14), -0.19302 (14), -0.19274 (14), -0.19251 (14), -0.19230 (14), -0.19203 (14), -0.19167 (14), -0.19126 (14), -0.19123 (14), -0.19106 (14), -0.19062 (14), -0.19058 (14), -0.19057 (14), -0.19046 (14), 
Length of domains: 8192
Time: pickout 0.0442    decision 0.2292    set_bounds 0.4896    solve 0.9001    add 0.0355    
Accumulated time: pickout 0.1049    decision 1.2605    set_bounds 1.0579    solve 2.8900    add 0.3513    
Current (lb-rhs): -0.19635504484176636
16562 domains visited
current_vram/total_varm: 9.6GB/99.9GB, batch_size increase to 8192
Cumulative time: 5.949221134185791

BaB round 9
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 795] [/input-8, 1291] [/input-8, 795] [/input-8, 1292] [/input-8, 795] [/input-8, 1291] [/input-8, 795] [/input-8, 1018] [/input-8, 795] [/input-8, 1291] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732660710811615, worst -0.19116228818893433
10 lb beta sum: 0.23732660710811615, worst -0.19115209579467773
Time: prepare 0.7409    bound 0.7343    transfer 0.0821    finalize 0.0772    func 1.7394    
Accumulated time: func 4.7883    prepare 1.5534    bound 2.6960    transfer 0.1621    finalize 0.1656    
all_split False
======================Cut inference begins======================
max lb tensor(-0.06406765) min lb tensor(-0.19113922)
Number of Verified Splits: 0 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.0006470680236816406 
BICCOS Cumulative time: 0.08125662803649902
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19114 (15), -0.18982 (15), -0.18959 (15), -0.18947 (15), -0.18918 (15), -0.18897 (15), -0.18819 (15), -0.18789 (15), -0.18785 (15), -0.18760 (15), -0.18755 (15), -0.18752 (15), -0.18744 (15), -0.18742 (15), -0.18721 (15), -0.18700 (15), -0.18697 (15), -0.18646 (15), -0.18622 (15), -0.18586 (15), 
Length of domains: 16384
Time: pickout 0.0896    decision 0.6347    set_bounds 0.8602    solve 1.9606    add 0.0661    
Accumulated time: pickout 0.1945    decision 1.8952    set_bounds 1.9181    solve 4.8506    add 0.4174    
Current (lb-rhs): -0.19113922119140625
32946 domains visited
current_vram/total_varm: 18.5GB/99.9GB, batch_size increase to 16384
Cumulative time: 9.57424807548523

BaB round 10
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1131] [/input-8, 1018] [/input-8, 1131] [/input-8, 989] [/input-8, 1131] [/input-8, 1018] [/input-8, 1131] [/input-8, 1292] [/input-8, 1131] [/input-8, 1018] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732660710811615, worst -0.1885913610458374
10 lb beta sum: 0.23732660710811615, worst -0.18856728076934814
Time: prepare 1.4685    bound 1.4026    transfer 0.1613    finalize 0.3940    func 3.6360    
Accumulated time: func 8.4243    prepare 3.0223    bound 4.0985    transfer 0.3234    finalize 0.5596    
all_split False
======================Cut inference begins======================
max lb tensor(-0.05486278) min lb tensor(-0.18855512)
Number of Verified Splits: 0 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.0008006095886230469 
BICCOS Cumulative time: 0.08205723762512207
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18856 (16), -0.18714 (16), -0.18698 (16), -0.18690 (16), -0.18634 (16), -0.18606 (16), -0.18551 (16), -0.18522 (16), -0.18487 (16), -0.18472 (16), -0.18470 (16), -0.18467 (16), -0.18459 (16), -0.18447 (16), -0.18439 (16), -0.18438 (16), -0.18388 (16), -0.18384 (16), -0.18309 (16), -0.18299 (16), 
Length of domains: 32768
Time: pickout 0.1789    decision 1.6247    set_bounds 1.8296    solve 3.6413    add 0.1265    
Accumulated time: pickout 0.3734    decision 3.5199    set_bounds 3.7477    solve 8.4920    add 0.5440    
Current (lb-rhs): -0.18855512142181396
65714 domains visited
current_vram/total_varm: 27.6GB/99.9GB, batch_size increase to 32768
Cumulative time: 17.001002073287964

BaB round 11
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1291] [/input-8, 1340] [/input-8, 1886] [/input-8, 893] [/input-8, 1291] [/input-8, 1340] [/input-8, 1886] [/input-8, 989] [/input-8, 1291] [/input-8, 1340] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732657730579376, worst -0.18552058935165405
10 lb beta sum: 0.23732657730579376, worst -0.1855059266090393
Time: prepare 2.9308    bound 7.9445    transfer 0.3435    finalize 0.3178    func 12.3644    
Accumulated time: func 20.7887    prepare 5.9536    bound 12.0431    transfer 0.6669    finalize 0.8774    
all_split False
======================Cut inference begins======================
max lb tensor(-0.04056267) min lb tensor(-0.18549180)
Number of Verified Splits: 0 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.0007908344268798828 
BICCOS Cumulative time: 0.08284807205200195
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18549 (17), -0.18407 (17), -0.18383 (17), -0.18382 (17), -0.18328 (17), -0.18263 (17), -0.18241 (17), -0.18241 (17), -0.18207 (17), -0.18187 (17), -0.18161 (17), -0.18159 (17), -0.18150 (17), -0.18150 (17), -0.18136 (17), -0.18130 (17), -0.18099 (17), -0.18097 (17), -0.18094 (17), -0.18081 (17), 
Length of domains: 65536
Time: pickout 0.3614    decision 3.2516    set_bounds 3.7560    solve 12.3739    add 0.2093    
Accumulated time: pickout 0.7348    decision 6.7715    set_bounds 7.5037    solve 20.8658    add 0.7533    
Current (lb-rhs): -0.18549180030822754
131250 domains visited
Cumulative time: 37.00487518310547

BaB round 12
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1292] [/input-8, 893] [/input-8, 893] [/input-8, 84] [/input-8, 1292] [/input-8, 893] [/input-8, 893] [/input-8, 893] [/input-8, 1292] [/input-8, 893] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732657730579376, worst -0.18209552764892578
10 lb beta sum: 0.23732657730579376, worst -0.1820710301399231
Time: prepare 2.9815    bound 7.9468    transfer 0.3563    finalize 0.8895    func 12.5968    
Accumulated time: func 33.3855    prepare 8.9355    bound 19.9898    transfer 1.0233    finalize 1.7670    
all_split False
======================Cut inference begins======================
max lb tensor(-0.03071694) min lb tensor(-0.18206269)
Number of Verified Splits: 0 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.0008366107940673828 
BICCOS Cumulative time: 0.08368468284606934
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18263 (17), -0.18241 (17), -0.18206 (18), -0.18187 (17), -0.18136 (17), -0.18099 (17), -0.18097 (17), -0.18094 (17), -0.18077 (17), -0.18077 (18), -0.18041 (17), -0.18040 (18), -0.18021 (17), -0.18011 (17), -0.17984 (18), -0.17969 (17), -0.17966 (17), -0.17956 (17), -0.17948 (17), -0.17934 (17), 
Length of domains: 98304
Time: pickout 0.4240    decision 3.2554    set_bounds 3.3650    solve 12.6058    add 20.4608    
Accumulated time: pickout 1.1587    decision 10.0270    set_bounds 10.8687    solve 33.4717    add 21.2140    
Current (lb-rhs): -0.18263304233551025
196786 domains visited
Cumulative time: 77.19162225723267

BaB round 13
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1292] [/input-8, 893] [/input-8, 893] [/input-8, 84] [/input-8, 1292] [/input-8, 893] [/input-8, 893] [/input-8, 795] [/input-8, 1292] [/input-8, 893] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732657730579376, worst -0.1794763207435608
10 lb beta sum: 0.23732657730579376, worst -0.17947512865066528
Time: prepare 3.0227    bound 7.9458    transfer 0.3496    finalize 0.4159    func 12.1552    
Accumulated time: func 45.5407    prepare 11.9586    bound 27.9357    transfer 1.3729    finalize 2.1829    
all_split False
======================Cut inference begins======================
max lb tensor(-0.03259043) min lb tensor(-0.17946535)
Number of Verified Splits: 0 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.026268959045410156 
BICCOS Cumulative time: 0.10995364189147949
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18206 (18), -0.18077 (18), -0.18040 (18), -0.17984 (18), -0.17947 (18), -0.17912 (18), -0.17899 (18), -0.17858 (18), -0.17835 (18), -0.17827 (18), -0.17808 (18), -0.17805 (18), -0.17788 (18), -0.17775 (18), -0.17768 (18), -0.17738 (18), -0.17736 (18), -0.17733 (18), -0.17678 (18), -0.17675 (18), 
Length of domains: 131072
Time: pickout 0.4338    decision 3.3667    set_bounds 3.6295    solve 12.1651    add 0.2186    
Accumulated time: pickout 1.5925    decision 13.3936    set_bounds 14.4982    solve 45.6368    add 21.4327    
Current (lb-rhs): -0.18206268548965454
262322 domains visited
Cumulative time: 97.10187149047852

BaB round 14
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 84] [/input-8, 485] [/input-8, 924] [/input-8, 795] [/input-8, 84] [/input-8, 1131] [/input-8, 924] [/input-8, 84] [/input-8, 84] [/input-8, 485] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732657730579376, worst -0.17472612857818604
10 lb beta sum: 0.23732657730579376, worst -0.17469757795333862
Time: prepare 3.0378    bound 7.9515    transfer 0.3725    finalize 0.4354    func 12.2191    
Accumulated time: func 57.7599    prepare 14.9968    bound 35.8872    transfer 1.7454    finalize 2.6184    
all_split False
======================Cut inference begins======================
max lb tensor(-0.02696566) min lb tensor(-0.17464584)
Number of Verified Splits: 0 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.0009429454803466797 
BICCOS Cumulative time: 0.11089658737182617
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18206 (18), -0.18077 (18), -0.18040 (18), -0.17984 (18), -0.17947 (18), -0.17912 (18), -0.17899 (18), -0.17858 (18), -0.17827 (18), -0.17808 (18), -0.17805 (18), -0.17788 (18), -0.17775 (18), -0.17768 (18), -0.17738 (18), -0.17736 (18), -0.17733 (18), -0.17678 (18), -0.17675 (18), -0.17663 (18), 
Length of domains: 163840
Time: pickout 0.4640    decision 3.9944    set_bounds 3.7266    solve 13.0838    add 0.2074    
Accumulated time: pickout 2.0566    decision 17.3881    set_bounds 18.2248    solve 58.7205    add 21.6400    
Current (lb-rhs): -0.18206268548965454
327858 domains visited
Cumulative time: 118.70254373550415

BaB round 15
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 84] [/input-8, 485] [/input-8, 924] [/input-8, 1131] [/input-8, 84] [/input-8, 1131] [/input-8, 924] [/input-8, 84] [/input-8, 84] [/input-8, 485] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732657730579376, worst -0.17889559268951416
10 lb beta sum: 0.23732657730579376, worst -0.1788913607597351
Time: prepare 3.0082    bound 7.9435    transfer 0.4161    finalize 0.4391    func 12.2251    
Accumulated time: func 69.9850    prepare 18.0055    bound 43.8307    transfer 2.1615    finalize 3.0575    
all_split False
======================Cut inference begins======================
max lb tensor(-0.02490167) min lb tensor(-0.17888159)
Number of Verified Splits: 0 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.025804996490478516 
BICCOS Cumulative time: 0.1367015838623047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17947 (18), -0.17899 (18), -0.17888 (19), -0.17808 (18), -0.17775 (18), -0.17768 (18), -0.17748 (19), -0.17736 (18), -0.17733 (18), -0.17717 (19), -0.17678 (19), -0.17675 (18), -0.17663 (18), -0.17640 (18), -0.17639 (18), -0.17629 (18), -0.17603 (18), -0.17579 (19), -0.17573 (18), -0.17572 (18), 
Length of domains: 196608
Time: pickout 0.4605    decision 3.3632    set_bounds 4.1750    solve 12.2351    add 0.2953    
Accumulated time: pickout 2.5171    decision 20.7513    set_bounds 22.3998    solve 70.9556    add 21.9353    
Current (lb-rhs): -0.17946535348892212
393394 domains visited
Cumulative time: 139.3547911643982

BaB round 16
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 84] [/input-8, 485] [/input-8, 924] [/input-8, 1131] [/input-8, 84] [/input-8, 1131] [/input-8, 924] [/input-8, 84] [/input-8, 84] [/input-8, 485] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732657730579376, worst -0.17277592420578003
10 lb beta sum: 0.23732657730579376, worst -0.1727539300918579
Time: prepare 3.0920    bound 7.9527    transfer 0.4590    finalize 1.5549    func 13.4785    
Accumulated time: func 83.4636    prepare 21.0981    bound 51.7834    transfer 2.6205    finalize 4.6124    
all_split False
======================Cut inference begins======================
max lb tensor(-0.02653651) min lb tensor(-0.17269695)
Number of Verified Splits: 0 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.0009067058563232422 
BICCOS Cumulative time: 0.13760828971862793
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17947 (18), -0.17899 (18), -0.17888 (19), -0.17808 (18), -0.17775 (18), -0.17768 (18), -0.17748 (19), -0.17736 (18), -0.17733 (18), -0.17717 (19), -0.17678 (19), -0.17675 (18), -0.17663 (18), -0.17639 (18), -0.17629 (18), -0.17603 (18), -0.17579 (19), -0.17573 (18), -0.17572 (18), -0.17554 (18), 
Length of domains: 229376
Time: pickout 0.4798    decision 3.9129    set_bounds 3.1813    solve 13.4889    add 0.2330    
Accumulated time: pickout 2.9968    decision 24.6642    set_bounds 25.5811    solve 84.4445    add 22.1683    
Current (lb-rhs): -0.17946535348892212
458930 domains visited
Cumulative time: 160.75472402572632

BaB round 17
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 84] [/input-8, 485] [/input-8, 924] [/input-8, 1131] [/input-8, 84] [/input-8, 1131] [/input-8, 924] [/input-8, 893] [/input-8, 84] [/input-8, 485] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732657730579376, worst -0.17691874504089355
10 lb beta sum: 0.23732657730579376, worst -0.17688637971878052
Time: prepare 3.0279    bound 7.9514    transfer 0.5184    finalize 0.4516    func 12.3698    
Accumulated time: func 95.8334    prepare 24.1265    bound 59.7348    transfer 3.1389    finalize 5.0640    
all_split False
======================Cut inference begins======================
max lb tensor(-0.02646308) min lb tensor(-0.17688066)
Number of Verified Splits: 0 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.0009822845458984375 
BICCOS Cumulative time: 0.13859057426452637
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17888 (19), -0.17748 (19), -0.17717 (19), -0.17688 (19), -0.17678 (19), -0.17580 (19), -0.17579 (19), -0.17549 (19), -0.17517 (19), -0.17512 (19), -0.17495 (19), -0.17490 (19), -0.17478 (19), -0.17465 (19), -0.17460 (19), -0.17438 (19), -0.17420 (19), -0.17410 (19), -0.17379 (19), -0.17371 (19), 
Length of domains: 262144
Time: pickout 0.4537    decision 3.3765    set_bounds 4.4775    solve 12.3798    add 0.5181    
Accumulated time: pickout 3.4505    decision 28.0407    set_bounds 30.0586    solve 96.8243    add 22.6864    
Current (lb-rhs): -0.17888158559799194
524466 domains visited
Cumulative time: 182.085351228714

BaB round 18
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 893] [/input-8, 1562] [/input-8, 1868] [/input-8, 1562] [/input-8, 893] [/input-8, 795] [/input-8, 1868] [/input-8, 795] [/input-8, 1886] [/input-8, 1562] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732657730579376, worst -0.17095845937728882
10 lb beta sum: 0.23732657730579376, worst -0.17095857858657837
Time: prepare 3.1089    bound 7.9562    transfer 0.5858    finalize 0.4537    func 12.5360    
Accumulated time: func 108.3694    prepare 27.2360    bound 67.6910    transfer 3.7247    finalize 5.5177    
all_split False
======================Cut inference begins======================
max lb tensor(-0.00640635) min lb tensor(-0.17091084)
Number of Verified Splits: 0 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.0009999275207519531 
BICCOS Cumulative time: 0.13959050178527832
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17888 (19), -0.17748 (19), -0.17717 (19), -0.17688 (19), -0.17678 (19), -0.17580 (19), -0.17579 (19), -0.17549 (19), -0.17517 (19), -0.17512 (19), -0.17495 (19), -0.17490 (19), -0.17478 (19), -0.17460 (19), -0.17438 (19), -0.17420 (19), -0.17410 (19), -0.17379 (19), -0.17371 (19), -0.17370 (19), 
Length of domains: 294912
Time: pickout 0.4675    decision 3.3747    set_bounds 4.6808    solve 12.5477    add 0.5086    
Accumulated time: pickout 3.9180    decision 31.4154    set_bounds 34.7395    solve 109.3720    add 23.1951    
Current (lb-rhs): -0.17888158559799194
590002 domains visited
Time out!!!!!!!!
Result: unknown in 206.9799 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 56, vnnlib ID: 56 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.88202381, -15.77611637, -13.39399529, -17.09332085, -13.82697010,
         -18.11546516, -17.38292885, -15.74606514,  -9.08050442, -14.54284763]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [579]; unstable size 579; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 192, 1, 579] with unstable size 191 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 579] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 579] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [191]; unstable size 191; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 191] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 191] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.80924940,  2.66314459,  6.04740000,  2.98685789,  6.92152882,
          6.10498810,  4.46677589, -1.73226333,  3.55088139]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.88202381, -15.77611637, -13.39399529, -17.09332085, -13.82697010,
         -18.11546516, -17.38292885, -15.74606514,  -9.08050442, -14.54284763]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.88202381, -15.77611637, -13.39399529, -17.09332085, -13.82697010,
          -18.11546516, -17.38292885, -15.74606514,  -9.08050442, -14.54284763]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.80151939]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.24920666e+00,  1.67777801e+00,  1.32857168e+00,  ...,
             2.80952454e-01,  1.06349289e-01, -5.23808524e-02],
           [ 9.79365110e-01,  1.39206374e+00,  1.24920666e+00,  ...,
            -1.95237994e-01, -1.79364979e-01, -1.31745934e-01],
           [ 1.28095269e+00,  1.39206374e+00,  9.15873051e-01,  ...,
            -2.06348225e-02,  1.11112073e-02,  2.17460394e-01],
           ...,
           [-4.96825397e-01, -4.80952382e-01, -4.33333218e-01,  ...,
            -4.80952382e-01, -4.96825397e-01, -4.96825397e-01],
           [-4.33333218e-01, -4.65079248e-01, -4.80952382e-01,  ...,
            -4.65079248e-01, -4.49206233e-01, -4.49206233e-01],
           [-4.33333218e-01, -4.65079248e-01, -4.96825397e-01,  ...,
            -4.65079248e-01, -4.49206233e-01, -4.49206233e-01]],

          [[ 1.91626441e+00,  2.06119204e+00,  1.70692456e+00,  ...,
             1.27214205e+00,  1.15942061e+00,  1.06280196e+00],
           [ 1.72302771e+00,  1.88405824e+00,  1.83574903e+00,  ...,
             1.07890511e+00,  1.06280196e+00,  1.04669893e+00],
           [ 1.94847047e+00,  1.91626441e+00,  1.69082153e+00,  ...,
             1.19162667e+00,  1.20772982e+00,  1.30434811e+00],
           ...,
           [-3.22059989e-02, -4.83090580e-02, -3.22059989e-02,  ...,
            -6.44121096e-02, -8.05151686e-02, -8.05151686e-02],
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -3.22059989e-02, -1.61029361e-02, -3.22059989e-02],
           [-6.44121096e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -3.22059989e-02, -1.61029361e-02, -1.61029361e-02]],

          [[ 2.10045004e+00,  2.08545780e+00,  1.81559265e+00,  ...,
             1.84557760e+00,  1.80060017e+00,  1.74063015e+00],
           [ 1.96551764e+00,  1.92054021e+00,  1.96551764e+00,  ...,
             1.87556267e+00,  1.86057019e+00,  1.81559265e+00],
           [ 2.08545780e+00,  1.96551764e+00,  1.96551764e+00,  ...,
             1.95052516e+00,  1.95052516e+00,  1.96551764e+00],
           ...,
           [ 2.11394474e-01,  1.21439442e-01,  1.81409463e-01,  ...,
             2.11394474e-01,  2.11394474e-01,  2.11394474e-01],
           [ 2.26386964e-01,  1.51424453e-01,  1.81409463e-01,  ...,
             2.26386964e-01,  2.26386964e-01,  2.41379470e-01],
           [ 1.81409463e-01,  1.66416958e-01,  1.96401969e-01,  ...,
             1.96401969e-01,  2.11394474e-01,  2.26386964e-01]]]]],
       device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0676 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 57, vnnlib ID: 57 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.99673080, -8.42243385, -3.26751232, -2.50442123, -3.13881588,
         -2.46149969, -4.81901884, -3.50631714, -8.64563560, -7.38313150]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [561]; unstable size 561; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 250, 1, 561] with unstable size 249 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 561] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 561] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [249]; unstable size 249; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 249] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 249] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.82033300,  4.02014828, -0.46752238, -0.34412289, -0.36842299,
          1.16381514, -0.08054888,  4.18153286,  2.90686512]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.99673080, -8.42243385, -3.26751232, -2.50442123, -3.13881588,
         -2.46149969, -4.81901884, -3.50631714, -8.64563560, -7.38313150]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.66181135, -8.20787239, -3.11358619, -2.42211366, -2.97288847,
          -2.58318949, -4.48878956, -3.49081755, -8.25464249, -7.20841789],
         [-6.66181135, -8.20787239, -3.11358619, -2.42211366, -2.97288847,
          -2.58318949, -4.48878956, -3.49081755, -8.25464249, -7.20841789]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.53039670, -0.16107583,  0.38969898,  0.90762806]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0127 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0412 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 58, vnnlib ID: 58 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.83774090, -5.62437820, -5.73738670, -5.16293812, -7.36110210,
         -6.22037792, -5.42629576, -7.85859919, -5.66585159, -6.29455137]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [486]; unstable size 486; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 198, 1, 486] with unstable size 197 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 9, 1, 486] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 486] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [197]; unstable size 197; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 9, 1, 197] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 197] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.56799006, -1.02534294, -0.31647980,  1.51819468,  0.67600739,
         -0.32146624,  2.05102563, -1.13650215, -0.20026469]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.83774090, -5.62437820, -5.73738670, -5.16293812, -7.36110210,
         -6.22037792, -5.42629576, -7.85859919, -5.66585159, -6.29455137]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.00282240, -5.31585503, -6.18742752, -5.74986649, -7.84297562,
          -6.85040140, -5.90831709, -8.36210918, -5.61094189, -6.28945971],
         [-6.00282240, -5.31585503, -6.18742752, -5.74986649, -7.84297562,
          -6.85040140, -5.90831709, -8.36210918, -5.61094189, -6.28945971]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.25295591, -0.43401146,  0.43756104,  0.15845060, -0.13892460,
           0.53959322]]], device='cuda:0')
number of violation:  2
Attack finished in 0.0108 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0427 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 59, vnnlib ID: 59 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.93982983, -9.67457962, -3.81645751, -4.62450838, -3.47099352,
         -5.53091383, -3.97788739, -6.31543112, -7.47973061, -9.39750957]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [610]; unstable size 610; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 203, 1, 610] with unstable size 202 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 610] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 610] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [202]; unstable size 202; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 202] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 202] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.79685712,  4.36240864, -0.97976089, -0.08943772, -1.19198728,
          0.69136411,  1.47140503,  2.15872145,  4.19818211]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.93982983, -9.67457962, -3.81645751, -4.62450838, -3.47099352,
         -5.53091383, -3.97788739, -6.31543112, -7.47973061, -9.39750957]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.93982983, -9.67457867, -3.81645751, -4.62450838, -3.47099352,
          -5.53091431, -3.97788668, -6.31543159, -7.47973061, -9.39750862],
         [-6.93982983, -9.67457867, -3.81645751, -4.62450838, -3.47099352,
          -5.53091431, -3.97788668, -6.31543159, -7.47973061, -9.39750862]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.16142917,  0.64662170, -0.50689316]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-1.44920623, -1.36984122, -1.52857137,  ..., -1.43333328,
            -1.35396814, -1.33809519],
           [-1.41746020, -1.40158725, -1.51269829,  ..., -1.38571417,
            -1.44920623, -1.33809519],
           [-1.57619035, -1.46507931, -1.48095226,  ..., -1.46507931,
            -1.51269829, -1.30634916],
           ...,
           [-1.78253973, -1.83015871, -1.84603179,  ..., -1.41746020,
            -1.33809519, -1.35396814],
           [-1.83015871, -1.86190474, -1.86190474,  ..., -1.65555561,
            -1.43333328, -1.46507931],
           [-1.87777781, -1.84603179, -1.83015871,  ..., -1.73492062,
            -1.43333328, -1.48095226]],

          [[-1.49758446, -1.41706920, -1.54589367,  ..., -1.49758446,
            -1.38486302, -1.32045078],
           [-1.43317223, -1.41706920, -1.49758446,  ..., -1.46537840,
            -1.49758446, -1.30434775],
           [-1.59420288, -1.48148143, -1.48148143,  ..., -1.54589367,
            -1.54589367, -1.23993552],
           ...,
           [-1.75523353, -1.81964576, -1.81964576,  ..., -1.41706920,
            -1.38486302, -1.36875999],
           [-1.78743970, -1.81964576, -1.83574879,  ..., -1.62640905,
            -1.46537840, -1.46537840],
           [-1.80354273, -1.78743970, -1.80354273,  ..., -1.69082129,
            -1.48148143, -1.46537840]],

          [[-1.31784117, -1.42278874, -1.40779614,  ..., -1.36281872,
            -1.21289361, -1.07796109],
           [-1.21289361, -1.33283365, -1.37781119,  ..., -1.39280367,
            -1.27286363, -1.06296861],
           [-1.36281872, -1.34782624, -1.39280367,  ..., -1.45277369,
            -1.31784117, -1.04797614],
           ...,
           [-1.42278874, -1.48275876, -1.46776617,  ..., -1.18290865,
            -1.30284870, -1.31784117],
           [-1.40779614, -1.43778121, -1.45277369,  ..., -1.27286363,
            -1.33283365, -1.36281872],
           [-1.42278874, -1.39280367, -1.45277369,  ..., -1.30284870,
            -1.30284870, -1.37781119]]],


         [[[-1.44920623, -1.36984122, -1.52857137,  ..., -1.43333328,
            -1.35396814, -1.33809519],
           [-1.41746020, -1.40158725, -1.51269829,  ..., -1.38571417,
            -1.44920623, -1.33809519],
           [-1.57619035, -1.46507931, -1.48095226,  ..., -1.46507931,
            -1.51269829, -1.30634916],
           ...,
           [-1.78253973, -1.83015871, -1.84603179,  ..., -1.41746020,
            -1.33809519, -1.35396814],
           [-1.83015871, -1.86190474, -1.86190474,  ..., -1.65555561,
            -1.43333328, -1.46507931],
           [-1.87777781, -1.84603179, -1.83015871,  ..., -1.73492062,
            -1.43333328, -1.48095226]],

          [[-1.49758446, -1.41706920, -1.54589367,  ..., -1.49758446,
            -1.38486302, -1.32045078],
           [-1.43317223, -1.41706920, -1.49758446,  ..., -1.46537840,
            -1.49758446, -1.30434775],
           [-1.59420288, -1.48148143, -1.48148143,  ..., -1.54589367,
            -1.54589367, -1.23993552],
           ...,
           [-1.75523353, -1.81964576, -1.81964576,  ..., -1.41706920,
            -1.38486302, -1.36875999],
           [-1.78743970, -1.81964576, -1.83574879,  ..., -1.62640905,
            -1.46537840, -1.46537840],
           [-1.80354273, -1.78743970, -1.80354273,  ..., -1.69082129,
            -1.48148143, -1.46537840]],

          [[-1.31784117, -1.42278874, -1.40779614,  ..., -1.36281872,
            -1.21289361, -1.07796109],
           [-1.21289361, -1.33283365, -1.37781119,  ..., -1.39280367,
            -1.27286363, -1.06296861],
           [-1.36281872, -1.34782624, -1.39280367,  ..., -1.45277369,
            -1.31784117, -1.04797614],
           ...,
           [-1.42278874, -1.48275876, -1.46776617,  ..., -1.18290865,
            -1.30284870, -1.31784117],
           [-1.40779614, -1.43778121, -1.45277369,  ..., -1.27286363,
            -1.33283365, -1.36281872],
           [-1.42278874, -1.39280367, -1.45277369,  ..., -1.30284870,
            -1.30284870, -1.37781119]]],


         [[[-1.44920623, -1.36984122, -1.52857137,  ..., -1.43333328,
            -1.35396814, -1.33809519],
           [-1.41746020, -1.40158725, -1.51269829,  ..., -1.38571417,
            -1.44920623, -1.33809519],
           [-1.57619035, -1.46507931, -1.48095226,  ..., -1.46507931,
            -1.51269829, -1.30634916],
           ...,
           [-1.78253973, -1.83015871, -1.84603179,  ..., -1.41746020,
            -1.33809519, -1.35396814],
           [-1.83015871, -1.86190474, -1.86190474,  ..., -1.65555561,
            -1.43333328, -1.46507931],
           [-1.87777781, -1.84603179, -1.83015871,  ..., -1.73492062,
            -1.43333328, -1.48095226]],

          [[-1.49758446, -1.41706920, -1.54589367,  ..., -1.49758446,
            -1.38486302, -1.32045078],
           [-1.43317223, -1.41706920, -1.49758446,  ..., -1.46537840,
            -1.49758446, -1.30434775],
           [-1.59420288, -1.48148143, -1.48148143,  ..., -1.54589367,
            -1.54589367, -1.23993552],
           ...,
           [-1.75523353, -1.81964576, -1.81964576,  ..., -1.41706920,
            -1.38486302, -1.36875999],
           [-1.78743970, -1.81964576, -1.83574879,  ..., -1.62640905,
            -1.46537840, -1.46537840],
           [-1.80354273, -1.78743970, -1.80354273,  ..., -1.69082129,
            -1.48148143, -1.46537840]],

          [[-1.31784117, -1.42278874, -1.40779614,  ..., -1.36281872,
            -1.21289361, -1.07796109],
           [-1.21289361, -1.33283365, -1.37781119,  ..., -1.39280367,
            -1.27286363, -1.06296861],
           [-1.36281872, -1.34782624, -1.39280367,  ..., -1.45277369,
            -1.31784117, -1.04797614],
           ...,
           [-1.42278874, -1.48275876, -1.46776617,  ..., -1.18290865,
            -1.30284870, -1.31784117],
           [-1.40779614, -1.43778121, -1.45277369,  ..., -1.27286363,
            -1.33283365, -1.36281872],
           [-1.42278874, -1.39280367, -1.45277369,  ..., -1.30284870,
            -1.30284870, -1.37781119]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0750 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 60, vnnlib ID: 60 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-13.75205898, -10.95473385, -15.05265713, -14.31469154, -16.47543526,
         -15.42162323, -16.59076691, -16.32046509, -12.06099701, -12.79094601]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [842]; unstable size 842; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 125, 1, 842] with unstable size 124 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 842] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 842] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [124]; unstable size 124; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 124] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 124] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.70171285,  2.55571461,  1.94688416,  4.01660633,  2.85764170,
          4.14926863,  3.74387598, -0.07238436,  1.06150913]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-13.75205898, -10.95473385, -15.05265713, -14.31469154, -16.47543526,
         -15.42162323, -16.59076691, -16.32046509, -12.06099701, -12.79094601]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.38it/s]100%|██████████| 1/1 [00:00<00:00,  9.37it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-13.24346066, -10.83120537, -14.41449451, -13.75822830, -15.91536617,
          -14.81918240, -15.97666645, -15.75282669, -11.26206684, -12.42083168]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.43086147]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1091 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 22.353845596313477
alpha/beta optimization time: 1.184450626373291
initial alpha-crown bounds: tensor([[ 1.73520565,  2.60585022,  1.99403667,  4.06510067,  2.91426229,
          4.19391155,  3.79336476, -0.03199387,  1.08410788]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.031993865966796875
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.64040899276733
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.64037346839905
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.64034795761108
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.64032649993896
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.6403079032898
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.6402895450592
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 198.6402711868286
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 198.6402518749237
Verifying property 7 with 1 instances.
##### Instance 60 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.03199387]], device='cuda:0') need to verify.
Model prediction is: tensor([-13.75205898, -10.95473385, -15.05265713, -14.31469154, -16.47543526,
        -15.42162323, -16.59076691, -16.32046509, -12.06099701, -12.79094601],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.03199387]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 842
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 121
Node /15 input 0: size torch.Size([100]) unstable 11
-----------------
# of unstable neurons: 974
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00012826919555664062
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.031996726989746094
10 lb beta sum: 0.0, worst -0.03199958801269531
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0542    transfer 0.0001    finalize 0.0001    func 0.0547    
Accumulated time: func 0.0547    prepare 0.0002    bound 0.0542    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 82] 
split level 1: [/input-12, 35] 
split level 2: [/input-12, 11] 
split level 3: [/input-12, 54] 
split level 4: [/input-12, 51] 
split level 5: [/input-12, 37] 
split level 6: [/input-8, 564] 
split level 7: [/input-8, 1445] 
split level 8: [/input-8, 1890] 
split level 9: [/input-8, 170] 
split level 10: [/input-12, 4] 
split level 11: [/input-8, 817] 
split level 12: [/input-8, 865] 
split level 13: [/input-8, 686] 
split level 14: [/input-8, 1404] 
split level 15: [/input-8, 162] 
split level 16: [/input, 2728] 
split level 17: [/input-8, 1427] 
split level 18: [/input-8, 678] 
split level 19: [/input-8, 1072] 
split level 20: [/input, 1684] 
split level 21: [/input, 2299] 
split level 22: [/input, 1668] 
split level 23: [/input-8, 1337] 
split level 24: [/input, 1788] 
split level 25: [/input-8, 1637] 
split level 26: [/input, 3769] 
split level 27: [/input, 3786] 
split level 28: [/input-8, 1914] 
split level 29: [/input-8, 1499] 
split level 30: [/input, 3737] 
split level 31: [/input, 1532] 
split level 32: [/input, 3401] 
split level 33: [/input-8, 1889] 
split level 34: [/input-8, 1085] 
split level 35: [/input-8, 996] 
split level 36: [/input-8, 1751] 
split level 37: [/input-8, 825] 
split level 38: [/input-8, 1500] 
split level 39: [/input, 2293] 
split level 40: [/input-8, 1297] 
split level 41: [/input, 1670] 
split level 42: [/input, 3764] 
split level 43: [/input-8, 1759] 
split level 44: [/input, 1531] 
split level 45: [/input-8, 849] 
split level 46: [/input, 3011] 
split level 47: [/input-8, 1834] 
split level 48: [/input, 4010] 
split level 49: [/input, 1530] 
split level 50: [/input-8, 1252] 
split level 51: [/input, 3765] 
split level 52: [/input-8, 1743] 
split level 53: [/input-8, 915] 
split level 54: [/input, 3143] 
split level 55: [/input-8, 1470] 
split level 56: [/input, 3749] 
split level 57: [/input-8, 986] 
split level 58: [/input-8, 916] 
split level 59: [/input, 3384] 
split level 60: [/input, 3994] 
split level 61: [/input, 1634] 
split level 62: [/input, 3559] 
split level 63: [/input-8, 1379] 
split level 64: [/input-8, 697] 
split level 65: [/input-8, 1105] 
split level 66: [/input-8, 1588] 
split level 67: [/input, 1666] 
split level 68: [/input-8, 1447] 
split level 69: [/input, 2359] 
split level 70: [/input, 3385] 
split level 71: [/input, 3735] 
split level 72: [/input, 2184] 
split level 73: [/input, 1789] 
split level 74: [/input-8, 436] 
split level 75: [/input, 3782] 
split level 76: [/input, 3738] 
split level 77: [/input, 3781] 
split level 78: [/input, 2362] 
split level 79: [/input, 3703] 
split level 80: [/input, 1595] 
split level 81: [/input, 2995] 
split level 82: [/input, 2301] 
split level 83: [/input, 3324] 
split level 84: [/input-8, 1868] 
split level 85: [/input, 2662] 
split level 86: [/input, 2028] 
split level 87: [/input, 1671] 
split level 88: [/input, 1512] 
split level 89: [/input, 1594] 
split level 90: [/input, 2556] 
split level 91: [/input, 1604] 
split level 92: [/input, 3453] 
split level 93: [/input-8, 641] 
split level 94: [/input, 2121] 
split level 95: [/input, 3128] 
split level 96: [/input-8, 1361] 
split level 97: [/input, 2969] 
split level 98: [/input, 3420] 
split level 99: [/input, 3705] 
split level 100: [/input, 2344] 
split level 101: [/input, 1353] 
split level 102: [/input, 2027] 
split level 103: [/input, 1529] 
split level 104: [/input, 3787] 
split level 105: [/input, 3747] 
split level 106: [/input, 3129] 
split level 107: [/input, 2357] 
split level 108: [/input, 1418] 
split level 109: [/input, 3387] 
split level 110: [/input, 348] 
split level 111: [/input, 2374] 
split level 112: [/input, 3688] 
split level 113: [/input, 3368] 
split level 114: [/input, 1528] 
split level 115: [/input, 2345] 
split level 116: [/input, 2358] 
split level 117: [/input, 3704] 
split level 118: [/input, 1759] 
split level 119: [/input-8, 593] 
split level 120: [/input, 2693] 
split level 121: [/input, 2332] 
split level 122: [/input, 2659] 
split level 123: [/input, 3687] 
split level 124: [/input, 2363] 
split level 125: [/input, 2887] 
split level 126: [/input, 3868] 
split level 127: [/input-8, 866] 
split level 128: [/input, 1417] 
split level 129: [/input, 3380] 
split level 130: [/input, 3861] 
split level 131: [/input-8, 2013] 
split level 132: [/input, 2330] 
split level 133: [/input, 3381] 
split level 134: [/input, 2325] 
split level 135: [/input, 3789] 
split level 136: [/input, 2346] 
split level 137: [/input, 3863] 
split level 138: [/input, 1524] 
split level 139: [/input, 1348] 
split level 140: [/input, 2328] 
split level 141: [/input, 76] 
split level 142: [/input, 2342] 
split level 143: [/input, 3367] 
split level 144: [/input, 2356] 
split level 145: [/input, 3352] 
split level 146: [/input, 3866] 
split level 147: [/input, 3862] 
split level 148: [/input, 2331] 
split level 149: [/input, 3948] 
split level 150: [/input, 3139] 
split level 151: [/input, 2364] 
split level 152: [/input, 1778] 
split level 153: [/input, 2341] 
split level 154: [/input, 3867] 
split level 155: [/input, 3395] 
split level 156: [/input, 3110] 
split level 157: [/input, 2026] 
split level 158: [/input, 110] 
split level 159: [/input, 2347] 
split level 160: [/input, 2329] 
split level 161: [/input, 126] 
split level 162: [/input, 3021] 
split level 163: [/input, 3379] 
split level 164: [/input, 3113] 
split level 165: [/input, 3864] 
split level 166: [/input, 1596] 
split level 167: [/input, 2343] 
split level 168: [/input, 3394] 
split level 169: [/input, 3865] 
split level 170: [/input, 3351] 
split level 171: [/input, 1777] 
split level 172: [/input, 3706] 
split level 173: [/input, 2323] 
split level 174: [/input, 2326] 
split level 175: [/input, 2386] 
split level 176: [/input, 2398] 
split level 177: [/input, 83] 
split level 178: [/input, 3755] 
split level 179: [/input-8, 2029] 
split level 180: [/input, 3330] 
split level 181: [/input, 2021] 
split level 182: [/input, 3020] 
split level 183: [/input, 3336] 
split level 184: [/input, 2385] 
split level 185: [/input-8, 1792] 
split level 186: [/input, 3702] 
split level 187: [/input-8, 79] 
split level 188: [/input, 17] 
split level 189: [/input, 3365] 
split level 190: [/input, 2348] 
split level 191: [/input, 77] 
split level 192: [/input, 3334] 
split level 193: [/input, 94] 
split level 194: [/input, 3719] 
split level 195: [/input, 3340] 
split level 196: [/input, 3333] 
split level 197: [/input, 3335] 
split level 198: [/input, 1288] 
split level 199: [/input, 1289] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03195667266845703
10 lb beta sum: 0.0, worst -0.031964778900146484
Time: prepare 0.0118    bound 0.1007    transfer 0.0012    finalize 0.0029    func 0.1193    
Accumulated time: func 0.1739    prepare 0.0219    bound 0.1549    transfer 0.0014    finalize 0.0031    
all_split False
======================Cut inference begins======================
max lb tensor(0.23553276) min lb tensor(-0.03195381)
Number of Verified Splits: 12 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.01104426383972168 
BICCOS Cumulative time: 0.01104426383972168
Preprocessing time: 0.010164499282836914 Inference time: 0.0005035400390625 Add cuts time: 0.00018787384033203125 Cut analysis time: 0.00018835067749023438
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.5076    set_bounds 0.0088    solve 0.1193    add 0.0099    
Accumulated time: pickout 0.0004    decision 0.5076    set_bounds 0.0088    solve 0.1193    add 0.0099    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([82]), tensor([-1.]), tensor([0]), tensor([1.64691280e-24]), tensor([0]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([82]), tensor([1.]), tensor([0]), tensor([-5.34986170e-21]), tensor([0]))}
Shallow branching resets to n domains:  2
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.12754154205322266

all verified at 0th iter
Time: prepare 0.0003    bound 0.0039    transfer 0.0001    finalize 0.0001    func 0.0045    
Accumulated time: func 0.1784    prepare 0.0222    bound 0.1588    transfer 0.0014    finalize 0.0032    
After pruning, left:  0

Back to Regular BaB


Properties batch 8, size 1
Remaining timeout: 197.68278050422668
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.3173 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 61, vnnlib ID: 61 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.10208607, -11.41786957, -13.13540363, -14.61515522, -12.72880554,
         -15.42352676, -14.81626129, -14.02141857, -10.58820438, -11.90863419]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [689]; unstable size 689; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 287, 1, 689] with unstable size 286 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 689] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 689] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [286]; unstable size 286; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 286] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 286] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.29984093, -0.42210984,  0.77767450, -0.92977953,  1.27496099,
          0.91095686, -0.04363692, -2.54635859, -1.79969835]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.10208607, -11.41786957, -13.13540363, -14.61515522, -12.72880554,
         -15.42352676, -14.81626129, -14.02141857, -10.58820438, -11.90863419]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-12.10208607, -11.41786957, -13.13540268, -14.61515522, -12.72880459,
          -15.42352581, -14.81626034, -14.02141666, -10.58820248, -11.90863228],
         [-12.10208607, -11.41786957, -13.13540268, -14.61515522, -12.72880459,
          -15.42352581, -14.81626034, -14.02141666, -10.58820248, -11.90863228]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.68421650,  1.03331661,  0.62671852,  1.91933060, -1.51388359,
          -0.19345379]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0858 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 62, vnnlib ID: 62 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.22134018, -15.56860352, -14.70451355, -17.13485336, -15.30204296,
         -19.28796387, -19.05625916, -17.42904091,  -7.39751339, -15.77822590]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [638]; unstable size 638; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 143, 1, 638] with unstable size 142 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 638] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 638] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [142]; unstable size 142; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 142] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 142] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.70733404,  6.82938242,  6.02555180,  8.45529366,  6.40188980,
         10.40295410, 10.22137833,  8.17284584,  6.93548441]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0691 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 63, vnnlib ID: 63 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.89003658, -14.52937984,  -8.65657139, -11.09509850,  -9.84154129,
         -10.49578381, -11.10558414, -12.61307526, -14.24301243, -14.45481777]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [532]; unstable size 532; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 158, 1, 532] with unstable size 157 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 9, 1, 532] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 532] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [157]; unstable size 157; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 9, 1, 157] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 157] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.66265547,  2.43688154, -3.43360972, -0.71080709, -2.08376074,
         -1.43809295,  0.69530237,  2.01353717,  2.55464029]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.89003658, -14.52937984,  -8.65657139, -11.09509850,  -9.84154129,
         -10.49578381, -11.10558414, -12.61307526, -14.24301243, -14.45481777]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-12.89003754, -14.52938080,  -8.65657139, -11.09509850,  -9.84154224,
          -10.49578571, -11.10558605, -12.61307430, -14.24301243, -14.45481777],
         [-12.89003754, -14.52938080,  -8.65657139, -11.09509850,  -9.84154224,
          -10.49578571, -11.10558605, -12.61307430, -14.24301243, -14.45481777]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-2.44901466, -0.01048756, -1.26404381, -0.60980034]]],
       device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]],


         [[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]],


         [[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]],


         [[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]]]],
       device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0946 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 64, vnnlib ID: 64 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -6.45442581, -10.84073353,  -2.11443281,  -5.11572742,  -2.45199776,
          -5.34400368,  -5.73184919,  -6.24624300,  -8.44986820, -10.21909809]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [540]; unstable size 540; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 217, 1, 540] with unstable size 216 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 540] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 540] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [216]; unstable size 216; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 216] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 216] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.34607959,  7.68123960,  1.94801545, -0.41767764,  2.08386660,
          2.53074312,  2.96769238,  4.98291588,  6.93700123]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.45442581, -10.84073353,  -2.11443281,  -5.11572742,  -2.45199776,
          -5.34400368,  -5.73184919,  -6.24624300,  -8.44986820, -10.21909809]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.50799370, -10.83770275,  -2.31181240,  -5.03916931,  -2.23600197,
           -5.28817987,  -5.62893534,  -6.05531979,  -8.43694019, -10.15128231]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.07581043]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0059 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0787 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 65, vnnlib ID: 65 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.03724480, -11.18434811,  -9.06159973,  -6.82672215,  -8.31060886,
          -7.42542219,  -7.49326038,  -8.39577389,  -8.11735439,  -9.31811810]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [540]; unstable size 540; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 166, 1, 540] with unstable size 165 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 540] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 540] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [165]; unstable size 165; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 165] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 165] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.06153676,  2.03039980,  0.34189302, -1.49903512, -0.37442589,
         -0.95892549, -0.33255029, -0.89728713,  0.12400293]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.03724480, -11.18434811,  -9.06159973,  -6.82672215,  -8.31060886,
          -7.42542219,  -7.49326038,  -8.39577389,  -8.11735439,  -9.31811810]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.03724575, -11.18434811,  -9.06159973,  -6.82672262,  -8.31061077,
           -7.42542219,  -7.49326038,  -8.39577389,  -8.11735439,  -9.31811714],
         [ -9.03724575, -11.18434811,  -9.06159973,  -6.82672262,  -8.31061077,
           -7.42542219,  -7.49326038,  -8.39577389,  -8.11735439,  -9.31811714]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.66653776,  0.81735039, -0.06783819,  0.90251350,  0.62409401]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]],


         [[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]],


         [[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]],


         [[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]],


         [[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0824 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 66, vnnlib ID: 66 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.38867235, -7.83663368, -1.97538805, -3.76285219, -1.67582381,
         -3.71006250, -2.32488132, -4.60400915, -6.09743786, -7.12869167]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [547]; unstable size 547; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 271, 1, 547] with unstable size 270 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 547] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 547] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [270]; unstable size 270; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 270] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 270] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.79902196,  3.61575794, -1.01848149,  0.80863690,  0.56699300,
         -0.88418770,  1.54361343,  1.63250840,  3.27348614]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.38867235, -7.83663368, -1.97538805, -3.76285219, -1.67582381,
         -3.71006250, -2.32488132, -4.60400915, -6.09743786, -7.12869167]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.28951979, -7.94430733, -1.78465533, -3.82200527, -2.04371023,
          -3.80613995, -2.29286313, -4.79971743, -6.22282410, -7.35304642],
         [-4.28951979, -7.94430733, -1.78465533, -3.82200527, -2.04371023,
          -3.80613995, -2.29286313, -4.79971743, -6.22282410, -7.35304642]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.25905490,  0.24915290]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0055 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0447 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 67, vnnlib ID: 67 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.84932995, -17.33446884,  -8.64849091, -12.04424667,  -9.06044197,
         -11.72052956, -11.48574638, -12.39857960, -14.52266598, -15.66392040]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [629]; unstable size 629; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 205, 1, 629] with unstable size 204 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 629] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 629] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [204]; unstable size 204; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 204] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 204] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.34933925,  7.33656406,  2.46383595, -0.40431607,  2.07216501,
          1.93970621,  2.30366516,  4.55638123,  5.68612194]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.84932995, -17.33446884,  -8.64849091, -12.04424667,  -9.06044197,
         -11.72052956, -11.48574638, -12.39857960, -14.52266598, -15.66392040]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-13.19249630, -17.56005859,  -9.06513023, -12.28880787,  -9.06449413,
          -11.96904278, -11.70427704, -12.37436962, -14.73856831, -15.87618923]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.00063610]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0085 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0579 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 68, vnnlib ID: 68 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.69871712, -20.69267273, -15.76616573, -14.43220711, -12.67657566,
         -14.10208035, -15.81092930,  -9.57836342, -21.12655640, -18.97427750]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [565]; unstable size 565; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 220, 1, 565] with unstable size 219 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 565] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 565] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [219]; unstable size 219; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 219] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 219] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.13234711, 8.93222523, 4.50618649, 3.55561543, 1.94738817, 3.30281448,
         4.49555922, 9.35066795, 7.40655851]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0684 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 69, vnnlib ID: 69 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.06598377, -12.28655052, -10.90278053, -11.53813744,  -9.47263813,
         -13.18623543, -12.00863743, -11.38340187,  -8.27437782, -11.53199673]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [870]; unstable size 870; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 185, 1, 870] with unstable size 184 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 870] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 870] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [184]; unstable size 184; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 184] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 184] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.42442572,  2.45793104,  1.12414622,  1.64930081, -0.25776601,
          3.05331516,  2.07846928,  1.21149397,  1.63006783]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.06598377, -12.28655052, -10.90278053, -11.53813744,  -9.47263813,
         -13.18623543, -12.00863743, -11.38340187,  -8.27437782, -11.53199673]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.06598473, -12.28655148, -10.90278149, -11.53813839,  -9.47263718,
          -13.18623447, -12.00863838, -11.38340282,  -8.27437973, -11.53199673],
         [ -8.06598473, -12.28655148, -10.90278149, -11.53813839,  -9.47263718,
          -13.18623447, -12.00863838, -11.38340282,  -8.27437973, -11.53199673]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.20839500,  1.19825745]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.80476213,  1.80476213,  1.80476213,  ...,  1.78888917,
             1.78888917,  1.78888917],
           [ 1.80476213,  1.80476213,  1.80476213,  ...,  1.78888917,
             1.78888917,  1.78888917],
           [ 1.80476213,  1.80476213,  1.80476213,  ...,  1.78888917,
             1.78888917,  1.78888917],
           ...,
           [-0.29047608, -0.46507925, -0.11587292,  ...,  0.13809532,
             0.02698422, -0.13174593],
           [ 0.97936511,  0.94761908,  0.99523818,  ...,  0.67777783,
             0.63015878,  0.67777783],
           [ 1.31269872,  1.29682565,  1.26507962,  ..., -0.09999990,
             0.01111121,  0.02698422]],

          [[ 1.86795521,  1.86795521,  1.86795521,  ...,  1.78743994,
             1.78743994,  1.78743994],
           [ 1.86795521,  1.86795521,  1.86795521,  ...,  1.78743994,
             1.78743994,  1.78743994],
           [ 1.86795521,  1.86795521,  1.86795521,  ...,  1.78743994,
             1.78743994,  1.78743994],
           ...,
           [-0.27375188, -0.46698871, -0.12882435,  ..., -0.27375188,
            -0.32206106, -0.53140092],
           [ 0.95008057,  0.88566834,  0.91787446,  ...,  0.12882459,
             0.12882459,  0.11272153],
           [ 1.20772982,  1.17552364,  1.14331758,  ..., -0.40257636,
            -0.25764883, -0.30595800]],

          [[ 1.87556267,  1.87556267,  1.87556267,  ...,  1.81559265,
             1.81559265,  1.81559265],
           [ 1.87556267,  1.87556267,  1.87556267,  ...,  1.81559265,
             1.81559265,  1.81559265],
           [ 1.87556267,  1.87556267,  1.87556267,  ...,  1.81559265,
             1.81559265,  1.81559265],
           ...,
           [-0.26836565, -0.44827583, -0.11844061,  ..., -0.64317840,
            -0.68815589, -0.85307342],
           [ 0.82608712,  0.79610211,  0.82608712,  ..., -0.46326834,
            -0.44827583, -0.44827583],
           [ 1.09595215,  1.06596720,  1.03598225,  ..., -0.73313338,
            -0.61319339, -0.65817088]]],


         [[[ 1.80476213,  1.80476213,  1.80476213,  ...,  1.78888917,
             1.78888917,  1.78888917],
           [ 1.80476213,  1.80476213,  1.80476213,  ...,  1.78888917,
             1.78888917,  1.78888917],
           [ 1.80476213,  1.80476213,  1.80476213,  ...,  1.78888917,
             1.78888917,  1.78888917],
           ...,
           [-0.29047608, -0.46507925, -0.11587292,  ...,  0.13809532,
             0.02698422, -0.13174593],
           [ 0.97936511,  0.94761908,  0.99523818,  ...,  0.67777783,
             0.63015878,  0.67777783],
           [ 1.31269872,  1.29682565,  1.26507962,  ..., -0.09999990,
             0.01111121,  0.02698422]],

          [[ 1.86795521,  1.86795521,  1.86795521,  ...,  1.78743994,
             1.78743994,  1.78743994],
           [ 1.86795521,  1.86795521,  1.86795521,  ...,  1.78743994,
             1.78743994,  1.78743994],
           [ 1.86795521,  1.86795521,  1.86795521,  ...,  1.78743994,
             1.78743994,  1.78743994],
           ...,
           [-0.27375188, -0.46698871, -0.12882435,  ..., -0.27375188,
            -0.32206106, -0.53140092],
           [ 0.95008057,  0.88566834,  0.91787446,  ...,  0.12882459,
             0.12882459,  0.11272153],
           [ 1.20772982,  1.17552364,  1.14331758,  ..., -0.40257636,
            -0.25764883, -0.30595800]],

          [[ 1.87556267,  1.87556267,  1.87556267,  ...,  1.81559265,
             1.81559265,  1.81559265],
           [ 1.87556267,  1.87556267,  1.87556267,  ...,  1.81559265,
             1.81559265,  1.81559265],
           [ 1.87556267,  1.87556267,  1.87556267,  ...,  1.81559265,
             1.81559265,  1.81559265],
           ...,
           [-0.26836565, -0.44827583, -0.11844061,  ..., -0.64317840,
            -0.68815589, -0.85307342],
           [ 0.82608712,  0.79610211,  0.82608712,  ..., -0.46326834,
            -0.44827583, -0.44827583],
           [ 1.09595215,  1.06596720,  1.03598225,  ..., -0.73313338,
            -0.61319339, -0.65817088]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0710 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 70, vnnlib ID: 70 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.38531876,  -9.15226841,  -4.51170063,  -6.71956348,  -3.59781837,
          -7.57347631,  -2.96594071,  -8.17208290,  -9.44402599, -10.74759960]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [479]; unstable size 479; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 181, 1, 479] with unstable size 180 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 479] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 479] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [180]; unstable size 180; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 180] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 180] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.27840710,  4.92119694,  0.44459987,  2.50914311, -0.39846039,
          3.07961369,  3.62197113,  4.85315371,  6.55421734]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.38531876,  -9.15226841,  -4.51170063,  -6.71956348,  -3.59781837,
          -7.57347631,  -2.96594071,  -8.17208290,  -9.44402599, -10.74759960]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.35it/s]100%|██████████| 1/1 [00:00<00:00,  9.35it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.24103546,  -9.04660034,  -4.27138662,  -6.51826477,  -3.25499344,
           -7.24183655,  -3.20547986,  -7.74103117,  -9.34854984, -10.61530590]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.04951358]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1094 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 29.3553466796875
alpha/beta optimization time: 1.1919591426849365
initial alpha-crown bounds: tensor([[ 3.32722855,  4.96577835,  0.48747420,  2.55623007, -0.35164118,
          3.13634515,  3.69880342,  4.92325497,  6.61187267]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.3516411781311035
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.61705827713013
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.61702156066895
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.61699628829956
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.61697483062744
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.61695623397827
Verifying property 4 with 1 instances.
##### Instance 70 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.35164118]], device='cuda:0') need to verify.
Model prediction is: tensor([ -7.38531876,  -9.15226841,  -4.51170063,  -6.71956348,  -3.59781837,
         -7.57347631,  -2.96594071,  -8.17208290,  -9.44402599, -10.74759960],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.35164118]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 479
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 180
Node /15 input 0: size torch.Size([100]) unstable 14
-----------------
# of unstable neurons: 673
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010442733764648438
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3516397476196289
10 lb beta sum: 0.0, worst -0.35164403915405273
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0518    transfer 0.0001    finalize 0.0001    func 0.0522    
Accumulated time: func 0.0522    prepare 0.0002    bound 0.0518    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] 
split level 1: [/input-12, 51] 
split level 2: [/input-12, 11] 
split level 3: [/input-12, 45] 
split level 4: [/input-12, 46] 
split level 5: [/input-12, 26] 
split level 6: [/input-12, 37] 
split level 7: [/input-12, 33] 
split level 8: [/input-8, 101] 
split level 9: [/input-8, 475] 
split level 10: [/input-8, 931] 
split level 11: [/input-8, 100] 
split level 12: [/input-8, 106] 
split level 13: [/input-8, 614] 
split level 14: [/input-8, 867] 
split level 15: [/input-8, 859] 
split level 16: [/input-8, 1902] 
split level 17: [/input-8, 613] 
split level 18: [/input-8, 604] 
split level 19: [/input-8, 490] 
split level 20: [/input-8, 792] 
split level 21: [/input-8, 980] 
split level 22: [/input-8, 820] 
split level 23: [/input-8, 1819] 
split level 24: [/input-8, 435] 
split level 25: [/input-8, 876] 
split level 26: [/input-8, 102] 
split level 27: [/input-8, 821] 
split level 28: [/input-8, 987] 
split level 29: [/input-8, 426] 
split level 30: [/input-8, 290] 
split level 31: [/input-8, 114] 
split level 32: [/input-8, 1001] 
split level 33: [/input-8, 1282] 
split level 34: [/input-8, 1827] 
split level 35: [/input-8, 878] 
split level 36: [/input-8, 1449] 
split level 37: [/input-8, 1828] 
split level 38: [/input-8, 596] 
split level 39: [/input-8, 979] 
split level 40: [/input-8, 439] 
split level 41: [/input-8, 801] 
split level 42: [/input-8, 1291] 
split level 43: [/input-8, 308] 
split level 44: [/input-8, 486] 
split level 45: [/input-8, 1389] 
split level 46: [/input, 157] 
split level 47: [/input-8, 1444] 
split level 48: [/input-8, 1289] 
split level 49: [/input-8, 1299] 
split level 50: [/input-8, 1467] 
split level 51: [/input-8, 851] 
split level 52: [/input-8, 1908] 
split level 53: [/input-8, 988] 
split level 54: [/input-8, 1378] 
split level 55: [/input-8, 938] 
split level 56: [/input-8, 1818] 
split level 57: [/input-8, 1910] 
split level 58: [/input, 354] 
split level 59: [/input-8, 1007] 
split level 60: [/input-8, 1461] 
split level 61: [/input-8, 1301] 
split level 62: [/input, 3940] 
split level 63: [/input-8, 473] 
split level 64: [/input-8, 1756] 
split level 65: [/input-8, 82] 
split level 66: [/input-8, 497] 
split level 67: [/input-8, 1014] 
split level 68: [/input-8, 1300] 
split level 69: [/input-8, 419] 
split level 70: [/input-8, 1425] 
split level 71: [/input, 3543] 
split level 72: [/input, 119] 
split level 73: [/input-8, 418] 
split level 74: [/input, 3477] 
split level 75: [/input, 3945] 
split level 76: [/input, 1753] 
split level 77: [/input, 3413] 
split level 78: [/input, 3938] 
split level 79: [/input, 1431] 
split level 80: [/input, 1368] 
split level 81: [/input-8, 998] 
split level 82: [/input, 2151] 
split level 83: [/input, 679] 
split level 84: [/input-8, 407] 
split level 85: [/input, 1195] 
split level 86: [/input-8, 1820] 
split level 87: [/input-8, 425] 
split level 88: [/input, 173] 
split level 89: [/input-8, 1302] 
split level 90: [/input-8, 1450] 
split level 91: [/input, 2281] 
split level 92: [/input-8, 526] 
split level 93: [/input, 2135] 
split level 94: [/input-8, 2022] 
split level 95: [/input-8, 962] 
split level 96: [/input-8, 995] 
split level 97: [/input-8, 2039] 
split level 98: [/input, 3561] 
split level 99: [/input, 3957] 
split level 100: [/input, 408] 
split level 101: [/input-8, 120] 
split level 102: [/input-8, 1893] 
split level 103: [/input, 99] 
split level 104: [/input, 3975] 
split level 105: [/input, 3527] 
split level 106: [/input-8, 993] 
split level 107: [/input-8, 1258] 
split level 108: [/input, 98] 
split level 109: [/input, 2394] 
split level 110: [/input-8, 104] 
split level 111: [/input-8, 504] 
split level 112: [/input, 1432] 
split level 113: [/input, 3787] 
split level 114: [/input-8, 466] 
split level 115: [/input-8, 1398] 
split level 116: [/input, 137] 
split level 117: [/input, 1510] 
split level 118: [/input-8, 399] 
split level 119: [/input-8, 1437] 
split level 120: [/input-8, 592] 
split level 121: [/input, 3925] 
split level 122: [/input, 1526] 
split level 123: [/input, 2393] 
split level 124: [/input-8, 1293] 
split level 125: [/input, 2391] 
split level 126: [/input, 1847] 
split level 127: [/input, 3786] 
split level 128: [/input-8, 1925] 
split level 129: [/input-8, 521] 
split level 130: [/input-8, 2015] 
split level 131: [/input, 1848] 
split level 132: [/input, 2183] 
split level 133: [/input-8, 1441] 
split level 134: [/input, 1382] 
split level 135: [/input-8, 1433] 
split level 136: [/input, 2010] 
split level 137: [/input, 2009] 
split level 138: [/input, 2167] 
split level 139: [/input-8, 1277] 
split level 140: [/input-8, 510] 
split level 141: [/input-8, 507] 
split level 142: [/input, 3021] 
split level 143: [/input, 4011] 
split level 144: [/input, 1865] 
split level 145: [/input, 3513] 
split level 146: [/input-8, 1137] 
split level 147: [/input, 1726] 
split level 148: [/input-8, 305] 
split level 149: [/input, 1864] 
split level 150: [/input, 3475] 
split level 151: [/input, 2013] 
split level 152: [/input, 1850] 
split level 153: [/input, 2363] 
split level 154: [/input-8, 1799] 
split level 155: [/input, 1907] 
split level 156: [/input, 2997] 
split level 157: [/input, 1802] 
split level 158: [/input, 1863] 
split level 159: [/input, 1121] 
split level 160: [/input-8, 532] 
split level 161: [/input, 2028] 
split level 162: [/input, 1478] 
split level 163: [/input-8, 513] 
split level 164: [/input, 1995] 
split level 165: [/input, 3953] 
split level 166: [/input-8, 1027] 
split level 167: [/input, 2266] 
split level 168: [/input, 3921] 
split level 169: [/input, 1845] 
split level 170: [/input, 1934] 
split level 171: [/input, 1917] 
split level 172: [/input, 3132] 
split level 173: [/input, 3006] 
split level 174: [/input, 1604] 
split level 175: [/input, 1829] 
split level 176: [/input, 1882] 
split level 177: [/input-8, 1405] 
split level 178: [/input, 1957] 
split level 179: [/input, 1884] 
split level 180: [/input, 111] 
split level 181: [/input, 1827] 
split level 182: [/input-8, 1307] 
split level 183: [/input, 3159] 
split level 184: [/input, 378] 
split level 185: [/input, 1552] 
split level 186: [/input, 1862] 
split level 187: [/input, 1994] 
split level 188: [/input, 1977] 
split level 189: [/input, 1587] 
split level 190: [/input, 1866] 
split level 191: [/input, 3709] 
split level 192: [/input, 1900] 
split level 193: [/input-8, 127] 
split level 194: [/input-8, 698] 
split level 195: [/input, 1857] 
split level 196: [/input-8, 65] 
split level 197: [/input, 2051] 
split level 198: [/input, 1852] 
split level 199: [/input, 2179] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3516080379486084
10 lb beta sum: 0.0, worst -0.35161304473876953
Time: prepare 0.0119    bound 0.0986    transfer 0.0018    finalize 0.0027    func 0.1175    
Accumulated time: func 0.1697    prepare 0.0219    bound 0.1504    transfer 0.0019    finalize 0.0028    
all_split False
======================Cut inference begins======================
max lb tensor(0.19675636) min lb tensor(-0.35160804)
Number of Verified Splits: 1 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.010540962219238281 
BICCOS Cumulative time: 0.010540962219238281
Preprocessing time: 0.010182380676269531 Inference time: 8.034706115722656e-05 Add cuts time: 6.389617919921875e-05 Cut analysis time: 0.0002143383026123047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33823 (1), -0.33715 (1), -0.33635 (1), -0.33631 (1), -0.33497 (1), -0.33488 (1), -0.33475 (1), -0.33452 (1), -0.33412 (1), -0.33336 (1), -0.33330 (1), -0.33300 (1), -0.33253 (1), -0.33237 (1), -0.33209 (1), -0.33160 (1), -0.33035 (1), -0.32821 (1), -0.32744 (1), -0.32738 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5110    set_bounds 0.0114    solve 0.1176    add 0.0749    
Accumulated time: pickout 0.0003    decision 0.5110    set_bounds 0.0114    solve 0.1176    add 0.0749    
Current (lb-rhs): -0.3382303714752197
50 domains visited
Cumulative time: 0.7992401123046875

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 11] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] 
split level 1: [/input-12, 45] [/input-12, 45] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] 
split level 2: [/input-12, 46] [/input-12, 46] [/input-12, 45] [/input-12, 46] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] 
split level 3: [/input-12, 37] [/input-12, 37] [/input-12, 46] [/input-12, 37] [/input-12, 37] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3120911121368408
10 lb beta sum: 0.19730766117572784, worst -0.3110318183898926
Time: prepare 0.0083    bound 0.1145    transfer 0.0007    finalize 0.0024    func 0.1286    
Accumulated time: func 0.2983    prepare 0.0305    bound 0.2649    transfer 0.0026    finalize 0.0053    
all_split False
======================Cut inference begins======================
max lb tensor(0.04132020) min lb tensor(-0.31071258)
Number of Verified Splits: 2 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.012827634811401367 
BICCOS Cumulative time: 0.02336859703063965
Preprocessing time: 0.011875391006469727 Inference time: 0.0001327991485595703 Add cuts time: 7.295608520507812e-05 Cut analysis time: 0.0007464885711669922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10087 (2), -0.10067 (2), -0.09642 (2), -0.09587 (2), -0.09548 (2), -0.09443 (2), -0.09401 (2), -0.09333 (2), -0.09281 (2), -0.09238 (2), -0.09181 (2), -0.09103 (2), -0.09060 (2), -0.08926 (2), -0.08910 (2), -0.08712 (2), -0.08649 (2), -0.08587 (2), -0.08549 (2), -0.08474 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0196    set_bounds 0.0121    solve 0.1286    add 0.0745    
Accumulated time: pickout 0.0014    decision 0.5306    set_bounds 0.0235    solve 0.2463    add 0.1494    
Current (lb-rhs): -0.10086703300476074
100 domains visited
Cumulative time: 1.0482032299041748

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] 
split level 1: [/input-12, 45] [/input-12, 46] [/input-12, 46] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] 
split level 2: [/input-12, 46] [/input-12, 26] [/input-12, 26] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 26] 
split level 3: [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07437491416931152
10 lb beta sum: 0.34651732444763184, worst -0.10823619365692139
Time: prepare 0.0080    bound 0.1170    transfer 0.0011    finalize 0.0023    func 0.1310    
Accumulated time: func 0.4293    prepare 0.0387    bound 0.3819    transfer 0.0036    finalize 0.0076    
all_split False
======================Cut inference begins======================
max lb tensor(0.12435627) min lb tensor(-0.06651616)
Number of Verified Splits: 163 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 14
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.023310422897338867 
BICCOS Cumulative time: 0.046679019927978516
Preprocessing time: 0.011791467666625977 Inference time: 0.007143974304199219 Add cuts time: 0.003850698471069336 Cut analysis time: 0.0005242824554443359
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01719 (3), -0.01693 (3), -0.01683 (3), -0.01673 (3), -0.01668 (3), -0.01633 (3), -0.01573 (3), -0.01453 (3), -0.01393 (3), -0.01387 (3), -0.01358 (3), -0.01354 (3), -0.01351 (3), -0.01336 (3), -0.01320 (3), -0.01291 (3), -0.01257 (3), -0.01256 (3), -0.01248 (3), -0.01243 (3), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0195    set_bounds 0.0155    solve 0.1311    add 0.0958    
Accumulated time: pickout 0.0025    decision 0.5501    set_bounds 0.0390    solve 0.3773    add 0.2452    
Current (lb-rhs): -0.01719355583190918
150 domains visited
Cumulative time: 1.3346915245056152

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 51] [/input-12, 51] [/input-12, 11] [/input-12, 51] [/input-12, 11] [/input-12, 11] [/input-12, 11] 
split level 1: [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 46] [/input-12, 45] [/input-12, 45] 
split level 2: [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 46] [/input-12, 26] [/input-12, 26] [/input-12, 46] 
split level 3: [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 26] [/input-12, 37] [/input-12, 37] [/input-12, 26] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.027193665504455566
10 lb beta sum: 1.7352899312973022, worst -0.08835995197296143
Time: prepare 0.0080    bound 0.1289    transfer 0.0014    finalize 0.0021    func 0.1431    
Accumulated time: func 0.5724    prepare 0.0470    bound 0.5108    transfer 0.0050    finalize 0.0097    
all_split False
======================Cut inference begins======================
max lb tensor(0.35901773) min lb tensor(-0.00745595)
Number of Verified Splits: 394 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.039934396743774414 
BICCOS Cumulative time: 0.08661341667175293
Preprocessing time: 0.011556625366210938 Inference time: 0.018015623092651367 Add cuts time: 0.010071992874145508 Cut analysis time: 0.00029015541076660156
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0208    set_bounds 0.0154    solve 0.1432    add 0.0223    
Accumulated time: pickout 0.0036    decision 0.5708    set_bounds 0.0544    solve 0.5205    add 0.2675    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
No domains left, MTS early stop!
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([51, 11]), tensor([-1., -1.]), tensor([0, 0]), tensor([-5.34986170e-21,  1.81832954e-01]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([51, 11]), tensor([-1.,  1.]), tensor([0, 0]), tensor([-5.34986170e-21,  2.68187989e-02]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([51, 45, 26, 11]), tensor([ 1., -1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([-5.34986170e-21,  4.24879044e-02,  6.31909817e-02,  6.54151887e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([51, 45, 26, 11]), tensor([ 1., -1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([-5.34986170e-21,  4.24879044e-02,  6.31909817e-02,  3.81685942e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([51, 45, 26, 11]), tensor([ 1., -1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([-5.34986170e-21,  4.24879044e-02,  5.91857880e-02,  6.37386292e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([51, 45, 26, 11]), tensor([ 1., -1.,  1.,  1.]), tensor([0, 0, 0, 0]), tensor([-5.34986170e-21,  4.24879044e-02,  5.91857880e-02,  3.76281589e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([51, 45, 11]), tensor([ 1.,  1., -1.]), tensor([0, 0, 0]), tensor([-5.34986170e-21,  8.52191895e-02,  8.89881104e-02]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([51, 45, 11]), tensor([1., 1., 1.]), tensor([0, 0, 0]), tensor([-5.34986170e-21,  8.52191895e-02,  3.09947003e-02]), tensor([0, 1, 2]))}
Shallow branching resets to n domains:  8
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2871675491333008
10 lb beta sum: 0.4049459397792816, worst -0.28638672828674316
Time: prepare 0.0004    bound 0.1234    transfer 0.0001    finalize 0.0002    func 0.1242    
Accumulated time: func 0.6965    prepare 0.0474    bound 0.6342    transfer 0.0052    finalize 0.0099    
After pruning, left:  2

Back to Regular BaB

BaB round 1
batch: 2
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 45] [/input-12, 45] 
split level 1: [/input-12, 46] [/input-12, 46] 
split level 2: [/input-12, 26] [/input-12, 26] 
split level 3: [/input-12, 37] [/input-12, 37] 
split level 4: [/input-8, 101] [/input-8, 101] 
split level 5: [/input-12, 33] [/input-12, 33] 
split level 6: [/input-8, 859] [/input-8, 100] 
cut re-enabled after branching node selection
0 lb beta sum: 0.26958614587783813, worst -0.138230562210083
10 lb beta sum: 0.26958614587783813, worst -0.13773703575134277
Time: prepare 0.0115    bound 0.1261    transfer 0.0008    finalize 0.0014    func 0.1414    
Accumulated time: func 0.8380    prepare 0.0593    bound 0.7603    transfer 0.0060    finalize 0.0112    
all_split False
======================Cut inference begins======================
max lb tensor(0.09360079) min lb tensor(-0.13751197)
Number of Verified Splits: 132 of 256
Stop inferencing: Max iteration reached.
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.00032329559326171875 
BICCOS Cumulative time: 0.08693671226501465
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13751 (7), -0.13348 (7), -0.12868 (7), -0.12706 (7), -0.12462 (7), -0.12373 (7), -0.12079 (7), -0.12073 (7), -0.11762 (7), -0.11636 (7), -0.11150 (7), -0.10982 (7), -0.10619 (7), -0.10553 (7), -0.10545 (7), -0.10203 (7), -0.10143 (7), -0.09971 (7), -0.09961 (7), -0.09841 (7), 
Length of domains: 124
Time: pickout 0.0005    decision 0.0195    set_bounds 0.0225    solve 0.1415    add 0.0012    
Accumulated time: pickout 0.0041    decision 0.5903    set_bounds 0.0769    solve 0.6620    add 0.2687    
Current (lb-rhs): -0.1375119686126709
274 domains visited
Cumulative time: 1.9060134887695312

BaB round 2
batch: 124
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 106] [/input-8, 613] [/input-8, 106] [/input-8, 106] [/input-8, 614] [/input-8, 613] [/input-8, 859] [/input-8, 613] [/input-8, 614] [/input-8, 604] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732657730579376, worst -0.1323845386505127
10 lb beta sum: 0.23732657730579376, worst -0.13209986686706543
Time: prepare 0.0116    bound 0.1359    transfer 0.0013    finalize 0.0012    func 0.1516    
Accumulated time: func 0.9896    prepare 0.0711    bound 0.8962    transfer 0.0072    finalize 0.0124    
all_split False
======================Cut inference begins======================
max lb tensor(0.01691532) min lb tensor(-0.13194156)
Number of Verified Splits: 21 of 248
Stop inferencing: Max iteration reached.
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.0004291534423828125 
BICCOS Cumulative time: 0.08736586570739746
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13194 (8), -0.12796 (8), -0.12298 (8), -0.12114 (8), -0.12043 (8), -0.11895 (8), -0.11732 (8), -0.11705 (8), -0.11537 (8), -0.11410 (8), -0.11390 (8), -0.11298 (8), -0.11103 (8), -0.11082 (8), -0.10988 (8), -0.10941 (8), -0.10770 (8), -0.10641 (8), -0.10519 (8), -0.10469 (8), 
Length of domains: 227
Time: pickout 0.0020    decision 0.0179    set_bounds 0.1687    solve 0.1517    add 0.0043    
Accumulated time: pickout 0.0061    decision 0.6082    set_bounds 0.2457    solve 0.8137    add 0.2730    
Current (lb-rhs): -0.131941556930542
501 domains visited
Cumulative time: 2.2515463829040527

BaB round 3
batch: 227
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 614] [/input-8, 106] [/input-8, 614] [/input-8, 613] [/input-8, 820] [/input-8, 614] [/input-8, 859] [/input-8, 613] [/input-8, 614] [/input-8, 614] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732657730579376, worst -0.12348699569702148
10 lb beta sum: 0.23732657730579376, worst -0.12325286865234375
Time: prepare 0.0202    bound 0.1426    transfer 0.0023    finalize 0.0020    func 0.1700    
Accumulated time: func 1.1596    prepare 0.0915    bound 1.0388    transfer 0.0095    finalize 0.0144    
all_split False
======================Cut inference begins======================
max lb tensor(0.01326609) min lb tensor(-0.12314153)
Number of Verified Splits: 41 of 454
Stop inferencing: Max iteration reached.
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.00040531158447265625 
BICCOS Cumulative time: 0.08777117729187012
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12314 (9), -0.12243 (9), -0.11961 (9), -0.11798 (9), -0.11658 (9), -0.11300 (9), -0.11259 (9), -0.11154 (9), -0.11080 (9), -0.11015 (9), -0.10865 (9), -0.10830 (9), -0.10817 (9), -0.10777 (9), -0.10766 (9), -0.10745 (9), -0.10703 (9), -0.10570 (9), -0.10523 (9), -0.10496 (9), 
Length of domains: 413
Time: pickout 0.0033    decision 0.0231    set_bounds 0.0196    solve 0.1702    add 0.0035    
Accumulated time: pickout 0.0093    decision 0.6313    set_bounds 0.2653    solve 0.9839    add 0.2765    
Current (lb-rhs): -0.12314152717590332
914 domains visited
Cumulative time: 2.472393751144409

BaB round 4
batch: 413
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 613] [/input-8, 613] [/input-8, 102] [/input-8, 614] [/input-8, 102] [/input-8, 820] [/input-8, 102] [/input-8, 613] [/input-8, 613] [/input-8, 859] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732660710811615, worst -0.1174001693725586
10 lb beta sum: 0.23732660710811615, worst -0.11735081672668457
Time: prepare 0.0388    bound 0.1386    transfer 0.0030    finalize 0.0035    func 0.1892    
Accumulated time: func 1.3489    prepare 0.1305    bound 1.1774    transfer 0.0125    finalize 0.0179    
all_split False
======================Cut inference begins======================
max lb tensor(0.01757121) min lb tensor(-0.11733532)
Number of Verified Splits: 98 of 826
Stop inferencing: Max iteration reached.
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.00035834312438964844 
BICCOS Cumulative time: 0.08812952041625977
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11734 (10), -0.11665 (10), -0.11359 (10), -0.11341 (10), -0.11202 (10), -0.11198 (10), -0.11021 (10), -0.10805 (10), -0.10796 (10), -0.10742 (10), -0.10718 (10), -0.10585 (10), -0.10497 (10), -0.10383 (10), -0.10375 (10), -0.10345 (10), -0.10251 (10), -0.10224 (10), -0.10224 (10), -0.10175 (10), 
Length of domains: 728
Time: pickout 0.0056    decision 0.0349    set_bounds 0.0361    solve 0.1895    add 0.0061    
Accumulated time: pickout 0.0149    decision 0.6662    set_bounds 0.3013    solve 1.1734    add 0.2825    
Current (lb-rhs): -0.11733531951904297
1642 domains visited
Cumulative time: 2.74630069732666

BaB round 5
batch: 728
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 102] [/input-8, 102] [/input-8, 859] [/input-8, 859] [/input-8, 613] [/input-8, 821] [/input-8, 604] [/input-8, 820] [/input-8, 859] [/input-8, 102] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732657730579376, worst -0.11221098899841309
10 lb beta sum: 0.23732657730579376, worst -0.1120445728302002
Time: prepare 0.0647    bound 0.1488    transfer 0.0073    finalize 0.0057    func 0.2366    
Accumulated time: func 1.5855    prepare 0.1954    bound 1.3262    transfer 0.0198    finalize 0.0237    
all_split False
======================Cut inference begins======================
max lb tensor(0.01535392) min lb tensor(-0.11199713)
Number of Verified Splits: 231 of 1456
Stop inferencing: Max iteration reached.
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.00038051605224609375 
BICCOS Cumulative time: 0.08851003646850586
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11200 (11), -0.11128 (11), -0.10911 (11), -0.10839 (11), -0.10821 (11), -0.10790 (11), -0.10649 (11), -0.10630 (11), -0.10534 (11), -0.10489 (11), -0.10476 (11), -0.10351 (11), -0.10313 (11), -0.10255 (11), -0.10255 (11), -0.10211 (11), -0.10172 (11), -0.10024 (11), -0.09959 (11), -0.09955 (11), 
Length of domains: 1225
Time: pickout 0.0111    decision 0.0528    set_bounds 0.0596    solve 0.2369    add 0.0101    
Accumulated time: pickout 0.0260    decision 0.7190    set_bounds 0.3609    solve 1.4103    add 0.2927    
Current (lb-rhs): -0.11199712753295898
2867 domains visited
Cumulative time: 3.1194920539855957

BaB round 6
batch: 1225
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 820] [/input-8, 820] [/input-8, 821] [/input-8, 820] [/input-8, 820] [/input-8, 859] [/input-8, 820] [/input-8, 820] [/input-8, 613] [/input-8, 614] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732659220695496, worst -0.10596895217895508
10 lb beta sum: 0.23732659220695496, worst -0.10583138465881348
Time: prepare 0.1081    bound 0.1918    transfer 0.0138    finalize 0.0115    func 0.3419    
Accumulated time: func 1.9274    prepare 0.3037    bound 1.5179    transfer 0.0336    finalize 0.0352    
all_split False
======================Cut inference begins======================
max lb tensor(0.02057767) min lb tensor(-0.10578704)
Number of Verified Splits: 410 of 2450
Stop inferencing: Max iteration reached.
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.0006039142608642578 
BICCOS Cumulative time: 0.08911395072937012
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10579 (12), -0.10533 (12), -0.10351 (12), -0.10293 (12), -0.10257 (12), -0.10247 (12), -0.10154 (12), -0.10112 (12), -0.10089 (12), -0.10064 (12), -0.09973 (12), -0.09970 (12), -0.09958 (12), -0.09914 (12), -0.09871 (12), -0.09805 (12), -0.09801 (12), -0.09799 (12), -0.09793 (12), -0.09781 (12), 
Length of domains: 2040
Time: pickout 0.0151    decision 0.0776    set_bounds 0.0986    solve 0.3425    add 0.0161    
Accumulated time: pickout 0.0411    decision 0.7966    set_bounds 0.4595    solve 1.7528    add 0.3088    
Current (lb-rhs): -0.10578703880310059
4907 domains visited
Cumulative time: 3.674105644226074

BaB round 7
batch: 2040
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1819] [/input-8, 821] [/input-8, 604] [/input-8, 821] [/input-8, 106] [/input-8, 106] [/input-8, 821] [/input-8, 821] [/input-8, 820] [/input-8, 859] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732660710811615, worst -0.10429906845092773
10 lb beta sum: 0.23732660710811615, worst -0.10414314270019531
Time: prepare 0.1846    bound 0.2760    transfer 0.0198    finalize 0.0205    func 0.5269    
Accumulated time: func 2.4543    prepare 0.4886    bound 1.7940    transfer 0.0533    finalize 0.0557    
all_split False
======================Cut inference begins======================
max lb tensor(0.02043819) min lb tensor(-0.10411119)
Number of Verified Splits: 733 of 4080
Stop inferencing: Max iteration reached.
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.00047397613525390625 
BICCOS Cumulative time: 0.08958792686462402
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10411 (13), -0.10363 (13), -0.10169 (13), -0.10094 (13), -0.10003 (13), -0.09984 (13), -0.09922 (13), -0.09918 (13), -0.09810 (13), -0.09794 (13), -0.09774 (13), -0.09715 (13), -0.09626 (13), -0.09617 (13), -0.09615 (13), -0.09613 (13), -0.09602 (13), -0.09538 (13), -0.09471 (13), -0.09435 (13), 
Length of domains: 3347
Time: pickout 0.0369    decision 0.2880    set_bounds 0.1678    solve 0.5277    add 0.0200    
Accumulated time: pickout 0.0780    decision 1.0846    set_bounds 0.6273    solve 2.2805    add 0.3288    
Current (lb-rhs): -0.1041111946105957
8254 domains visited
Cumulative time: 4.722376108169556

BaB round 8
batch: 3347
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 604] [/input-8, 1827] [/input-8, 106] [/input-8, 290] [/input-8, 867] [/input-8, 801] [/input-8, 867] [/input-8, 1827] [/input-8, 290] [/input-8, 1827] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732659220695496, worst -0.10120296478271484
10 lb beta sum: 0.23732659220695496, worst -0.10114192962646484
Time: prepare 0.3102    bound 0.4154    transfer 0.0266    finalize 0.0296    func 0.8244    
Accumulated time: func 3.2787    prepare 0.7991    bound 2.2094    transfer 0.0800    finalize 0.0853    
all_split False
======================Cut inference begins======================
max lb tensor(0.01942539) min lb tensor(-0.10111856)
Number of Verified Splits: 1490 of 6694
Stop inferencing: Max iteration reached.
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.0005502700805664062 
BICCOS Cumulative time: 0.09013819694519043
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10112 (14), -0.10069 (14), -0.09874 (14), -0.09798 (14), -0.09710 (14), -0.09644 (14), -0.09574 (14), -0.09512 (14), -0.09449 (14), -0.09350 (14), -0.09344 (14), -0.09317 (14), -0.09287 (14), -0.09271 (14), -0.09268 (14), -0.09233 (14), -0.09157 (14), -0.09140 (14), -0.09117 (14), -0.09090 (14), 
Length of domains: 5204
Time: pickout 0.0405    decision 0.1931    set_bounds 0.4444    solve 0.8257    add 0.0814    
Accumulated time: pickout 0.1185    decision 1.2777    set_bounds 1.0717    solve 3.1062    add 0.4102    
Current (lb-rhs): -0.10111856460571289
13458 domains visited
Cumulative time: 6.321903944015503

BaB round 9
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 290] [/input-8, 801] [/input-8, 859] [/input-8, 426] [/input-8, 106] [/input-8, 821] [/input-8, 1819] [/input-8, 1827] [/input-8, 801] [/input-8, 867] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732660710811615, worst -0.09807276725769043
10 lb beta sum: 0.23732660710811615, worst -0.09804725646972656
Time: prepare 0.3820    bound 0.4896    transfer 0.0399    finalize 0.2332    func 1.1977    
Accumulated time: func 4.4764    prepare 1.1814    bound 2.6990    transfer 0.1198    finalize 0.3185    
all_split False
======================Cut inference begins======================
max lb tensor(0.02311277) min lb tensor(-0.09804082)
Number of Verified Splits: 2119 of 8192
Stop inferencing: Max iteration reached.
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.0005810260772705078 
BICCOS Cumulative time: 0.09071922302246094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09804 (15), -0.09608 (15), -0.09448 (15), -0.09436 (15), -0.09378 (15), -0.09297 (15), -0.09252 (15), -0.09183 (15), -0.09117 (15), -0.09053 (15), -0.09025 (15), -0.09024 (15), -0.08994 (15), -0.08981 (15), -0.08916 (15), -0.08911 (15), -0.08898 (15), -0.08894 (15), -0.08827 (15), -0.08784 (15), 
Length of domains: 7181
Time: pickout 0.0554    decision 0.3919    set_bounds 0.3480    solve 1.1990    add 0.2022    
Accumulated time: pickout 0.1739    decision 1.6695    set_bounds 1.4197    solve 4.3052    add 0.6124    
Current (lb-rhs): -0.09804081916809082
19531 domains visited
current_vram/total_varm: 13.2GB/99.9GB, batch_size increase to 8192
Cumulative time: 8.546723365783691

BaB round 10
batch: 7181
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 106] [/input-8, 1828] [/input-8, 1819] [/input-8, 1828] [/input-8, 1819] [/input-8, 867] [/input-8, 102] [/input-8, 604] [/input-8, 290] [/input-8, 801] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732662200927734, worst -0.09174156188964844
10 lb beta sum: 0.23732662200927734, worst -0.09170961380004883
Time: prepare 0.6538    bound 0.8061    transfer 0.0538    finalize 0.2791    func 1.8845    
Accumulated time: func 6.3609    prepare 1.8355    bound 3.5051    transfer 0.1736    finalize 0.5976    
all_split False
======================Cut inference begins======================
max lb tensor(0.02463651) min lb tensor(-0.09169912)
Number of Verified Splits: 3198 of 14362
Stop inferencing: Max iteration reached.
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.0006268024444580078 
BICCOS Cumulative time: 0.09134602546691895
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09170 (16), -0.09141 (16), -0.09065 (16), -0.09014 (16), -0.08943 (16), -0.08873 (16), -0.08849 (16), -0.08815 (16), -0.08785 (16), -0.08709 (16), -0.08702 (16), -0.08699 (16), -0.08677 (16), -0.08659 (16), -0.08654 (16), -0.08628 (16), -0.08593 (16), -0.08588 (16), -0.08517 (16), -0.08503 (16), 
Length of domains: 11164
Time: pickout 0.1777    decision 0.4021    set_bounds 0.7760    solve 1.8873    add 0.0482    
Accumulated time: pickout 0.3515    decision 2.0716    set_bounds 2.1956    solve 6.1925    add 0.6607    
Current (lb-rhs): -0.09169912338256836
30695 domains visited
Cumulative time: 11.870969533920288

BaB round 11
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1389] [/input-8, 106] [/input-8, 1389] [/input-8, 867] [/input-8, 1827] [/input-8, 821] [/input-8, 821] [/input-8, 1827] [/input-8, 1827] [/input-8, 106] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732660710811615, worst -0.08811473846435547
10 lb beta sum: 0.23732660710811615, worst -0.08809185028076172
Time: prepare 0.7452    bound 0.9087    transfer 0.0786    finalize 0.3130    func 2.1513    
Accumulated time: func 8.5122    prepare 2.5810    bound 4.4138    transfer 0.2522    finalize 0.9107    
all_split False
======================Cut inference begins======================
max lb tensor(0.02699566) min lb tensor(-0.08808851)
Number of Verified Splits: 2654 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.0006444454193115234 
BICCOS Cumulative time: 0.09199047088623047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08809 (17), -0.08780 (17), -0.08700 (17), -0.08653 (17), -0.08582 (17), -0.08507 (17), -0.08489 (17), -0.08449 (17), -0.08428 (16), -0.08421 (17), -0.08341 (17), -0.08340 (17), -0.08327 (17), -0.08319 (17), -0.08295 (17), -0.08278 (17), -0.08267 (16), -0.08255 (17), -0.08222 (17), -0.08204 (17), 
Length of domains: 16702
Time: pickout 0.1132    decision 0.4544    set_bounds 0.9084    solve 2.1549    add 0.0576    
Accumulated time: pickout 0.4647    decision 2.5260    set_bounds 3.1040    solve 8.3474    add 0.7183    
Current (lb-rhs): -0.0880885124206543
44425 domains visited
current_vram/total_varm: 23.8GB/99.9GB, batch_size increase to 16384
Cumulative time: 15.596774578094482

BaB round 12
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 821] [/input-8, 290] [/input-8, 1389] [/input-8, 867] [/input-8, 1827] [/input-8, 1389] [/input-8, 1378] [/input-8, 1389] [/input-8, 1389] [/input-8, 1828] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732657730579376, worst -0.08312129974365234
10 lb beta sum: 0.23732657730579376, worst -0.0830984115600586
Time: prepare 1.4875    bound 1.7486    transfer 0.1534    finalize 0.1728    func 3.7717    
Accumulated time: func 12.2839    prepare 4.0689    bound 6.1624    transfer 0.4056    finalize 1.0835    
all_split False
======================Cut inference begins======================
max lb tensor(0.02546597) min lb tensor(-0.08308840)
Number of Verified Splits: 5546 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.0008821487426757812 
BICCOS Cumulative time: 0.09287261962890625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08309 (18), -0.08288 (18), -0.08205 (18), -0.08182 (18), -0.08159 (18), -0.08154 (18), -0.08152 (17), -0.08091 (18), -0.08057 (18), -0.08031 (18), -0.08012 (18), -0.07989 (17), -0.07988 (18), -0.07961 (18), -0.07951 (18), -0.07930 (18), -0.07929 (18), -0.07872 (18), -0.07866 (18), -0.07866 (17), 
Length of domains: 27540
Time: pickout 0.2159    decision 1.6457    set_bounds 1.9895    solve 3.7774    add 0.1116    
Accumulated time: pickout 0.6806    decision 4.1717    set_bounds 5.0935    solve 12.1248    add 0.8299    
Current (lb-rhs): -0.08308839797973633
71647 domains visited
current_vram/total_varm: 27.1GB/99.9GB, batch_size increase to 32768
Cumulative time: 23.411182165145874

BaB round 13
batch: 27540
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 290] [/input-8, 1827] [/input-8, 1389] [/input-8, 821] [/input-8, 867] [/input-8, 988] [/input-8, 1827] [/input-8, 1828] [/input-8, 106] [/input-8, 988] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732656240463257, worst -0.08004450798034668
10 lb beta sum: 0.23732656240463257, worst -0.08004498481750488
Time: prepare 2.5075    bound 2.9042    transfer 0.3907    finalize 0.3114    func 6.4643    
Accumulated time: func 18.7482    prepare 6.5769    bound 9.0666    transfer 0.7963    finalize 1.3949    
all_split False
======================Cut inference begins======================
max lb tensor(0.02410555) min lb tensor(-0.08004022)
Number of Verified Splits: 11441 of 55080
Stop inferencing: Max iteration reached.
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.001077413558959961 
BICCOS Cumulative time: 0.09395003318786621
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08004 (19), -0.07994 (19), -0.07906 (19), -0.07849 (19), -0.07838 (19), -0.07835 (19), -0.07811 (18), -0.07802 (19), -0.07747 (19), -0.07707 (19), -0.07703 (19), -0.07677 (19), -0.07665 (19), -0.07644 (18), -0.07643 (19), -0.07635 (19), -0.07633 (19), -0.07577 (19), -0.07549 (19), -0.07547 (19), 
Length of domains: 43639
Time: pickout 0.5147    decision 3.4246    set_bounds 3.2206    solve 6.9149    add 0.1446    
Accumulated time: pickout 1.1953    decision 7.5963    set_bounds 8.3141    solve 19.0397    add 0.9745    
Current (lb-rhs): -0.08004021644592285
115286 domains visited
Cumulative time: 37.76951742172241

BaB round 14
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1827] [/input-8, 801] [/input-8, 106] [/input-8, 290] [/input-8, 106] [/input-8, 1828] [/input-8, 801] [/input-8, 821] [/input-8, 867] [/input-8, 1828] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732657730579376, worst -0.07740020751953125
10 lb beta sum: 0.23732657730579376, worst -0.07736897468566895
Time: prepare 3.4648    bound 8.6186    transfer 0.5024    finalize 0.3911    func 13.4029    
Accumulated time: func 32.1511    prepare 10.0422    bound 17.6853    transfer 1.2987    finalize 1.7860    
all_split False
======================Cut inference begins======================
max lb tensor(0.02561474) min lb tensor(-0.07735014)
Number of Verified Splits: 17930 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.0013430118560791016 
BICCOS Cumulative time: 0.09529304504394531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07735 (20), -0.07690 (20), -0.07591 (20), -0.07580 (20), -0.07534 (20), -0.07519 (20), -0.07505 (19), -0.07491 (19), -0.07488 (20), -0.07486 (19), -0.07451 (20), -0.07430 (20), -0.07429 (18), -0.07427 (18), -0.07398 (19), -0.07393 (20), -0.07390 (19), -0.07385 (19), -0.07374 (20), -0.07362 (20), 
Length of domains: 58477
Time: pickout 0.4697    decision 3.7604    set_bounds 3.5366    solve 13.4182    add 0.1556    
Accumulated time: pickout 1.6650    decision 11.3567    set_bounds 11.8507    solve 32.4579    add 1.1301    
Current (lb-rhs): -0.07735013961791992
162892 domains visited
Cumulative time: 59.33957624435425

BaB round 15
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 106] [/input-8, 106] [/input-8, 979] [/input-8, 801] [/input-8, 801] [/input-8, 106] [/input-8, 867] [/input-8, 801] [/input-8, 106] [/input-8, 1819] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732657730579376, worst -0.07437705993652344
10 lb beta sum: 0.23732657730579376, worst -0.07433247566223145
Time: prepare 3.0263    bound 8.6369    transfer 0.5034    finalize 1.0960    func 13.6940    
Accumulated time: func 45.8451    prepare 13.0689    bound 26.3222    transfer 1.8021    finalize 2.8819    
all_split False
======================Cut inference begins======================
max lb tensor(0.02644598) min lb tensor(-0.07431817)
Number of Verified Splits: 20609 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.0011436939239501953 
BICCOS Cumulative time: 0.09643673896789551
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07735 (20), -0.07580 (20), -0.07491 (19), -0.07451 (20), -0.07432 (21), -0.07374 (20), -0.07343 (20), -0.07335 (21), -0.07279 (21), -0.07265 (21), -0.07254 (20), -0.07241 (20), -0.07231 (21), -0.07220 (20), -0.07217 (20), -0.07209 (20), -0.07191 (20), -0.07177 (21), -0.07165 (20), -0.07154 (20), 
Length of domains: 70636
Time: pickout 0.4786    decision 4.3342    set_bounds 3.7089    solve 13.7048    add 0.2210    
Accumulated time: pickout 2.1436    decision 15.6908    set_bounds 15.5597    solve 46.1627    add 1.3511    
Current (lb-rhs): -0.07735013961791992
207819 domains visited
Cumulative time: 82.02618622779846

BaB round 16
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 106] [/input-8, 801] [/input-8, 867] [/input-8, 801] [/input-8, 106] [/input-8, 801] [/input-8, 979] [/input-8, 106] [/input-8, 801] [/input-8, 979] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732657730579376, worst -0.07726073265075684
10 lb beta sum: 0.23732657730579376, worst -0.07725763320922852
Time: prepare 3.1136    bound 8.6199    transfer 0.4957    finalize 1.2294    func 13.8955    
Accumulated time: func 59.7406    prepare 16.1830    bound 34.9421    transfer 2.2978    finalize 4.1114    
all_split False
======================Cut inference begins======================
max lb tensor(0.02488661) min lb tensor(-0.07725286)
Number of Verified Splits: 20541 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.037030696868896484 
BICCOS Cumulative time: 0.133467435836792
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07725 (21), -0.07570 (21), -0.07439 (21), -0.07432 (21), -0.07365 (21), -0.07335 (21), -0.07279 (21), -0.07265 (21), -0.07232 (21), -0.07232 (20), -0.07231 (21), -0.07211 (21), -0.07199 (21), -0.07177 (21), -0.07136 (21), -0.07106 (21), -0.07104 (19), -0.07093 (19), -0.07079 (21), -0.07078 (20), 
Length of domains: 82863
Time: pickout 0.5128    decision 3.5668    set_bounds 3.8737    solve 13.9087    add 0.2208    
Accumulated time: pickout 2.6563    decision 19.2576    set_bounds 19.4334    solve 60.0714    add 1.5719    
Current (lb-rhs): -0.07725286483764648
252814 domains visited
Cumulative time: 104.40562272071838

BaB round 17
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1827] [/input-8, 867] [/input-8, 821] [/input-8, 979] [/input-8, 1819] [/input-8, 979] [/input-8, 1819] [/input-8, 979] [/input-8, 1828] [/input-8, 106] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732657730579376, worst -0.07423043251037598
10 lb beta sum: 0.23732657730579376, worst -0.07422208786010742
Time: prepare 3.1252    bound 8.6207    transfer 0.4965    finalize 1.3983    func 14.0722    
Accumulated time: func 73.8128    prepare 19.3086    bound 43.5628    transfer 2.7944    finalize 5.5096    
all_split False
======================Cut inference begins======================
max lb tensor(0.03089857) min lb tensor(-0.07421494)
Number of Verified Splits: 24136 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.0011157989501953125 
BICCOS Cumulative time: 0.1345832347869873
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07725 (21), -0.07570 (21), -0.07439 (21), -0.07421 (22), -0.07365 (21), -0.07335 (21), -0.07270 (22), -0.07255 (22), -0.07232 (21), -0.07232 (20), -0.07220 (22), -0.07211 (21), -0.07199 (21), -0.07168 (22), -0.07126 (22), -0.07094 (22), -0.07079 (21), -0.07071 (21), -0.07057 (22), -0.07053 (22), 
Length of domains: 91495
Time: pickout 0.5117    decision 3.7153    set_bounds 4.0616    solve 14.0873    add 0.1317    
Accumulated time: pickout 3.1680    decision 22.9729    set_bounds 23.4950    solve 74.1587    add 1.7036    
Current (lb-rhs): -0.07725286483764648
294214 domains visited
Cumulative time: 127.192067861557

BaB round 18
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1819] [/input-8, 1828] [/input-8, 82] [/input-8, 1819] [/input-8, 1819] [/input-8, 473] [/input-8, 1819] [/input-8, 1828] [/input-8, 1819] [/input-8, 1819] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732657730579376, worst -0.07326197624206543
10 lb beta sum: 0.23732657730579376, worst -0.07325506210327148
Time: prepare 3.1383    bound 8.6239    transfer 0.5010    finalize 0.4995    func 13.2058    
Accumulated time: func 87.0186    prepare 22.4474    bound 52.1867    transfer 3.2954    finalize 6.0091    
all_split False
======================Cut inference begins======================
max lb tensor(0.02732015) min lb tensor(-0.07324910)
Number of Verified Splits: 23055 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.0012371540069580078 
BICCOS Cumulative time: 0.1358203887939453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07725 (21), -0.07570 (21), -0.07421 (22), -0.07365 (21), -0.07325 (22), -0.07270 (22), -0.07255 (22), -0.07220 (22), -0.07211 (21), -0.07199 (21), -0.07168 (22), -0.07126 (22), -0.07115 (22), -0.07094 (22), -0.07063 (22), -0.07057 (22), -0.07053 (22), -0.07044 (21), -0.06988 (22), -0.06983 (21), 
Length of domains: 101208
Time: pickout 0.5374    decision 4.2500    set_bounds 4.2398    solve 13.2240    add 0.1441    
Accumulated time: pickout 3.7054    decision 27.2229    set_bounds 27.7348    solve 87.3826    add 1.8477    
Current (lb-rhs): -0.07725286483764648
336695 domains visited
Cumulative time: 149.8946385383606

BaB round 19
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1819] [/input-8, 1819] [/input-8, 1819] [/input-8, 1828] [/input-8, 1819] [/input-8, 1819] [/input-8, 1819] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732657730579376, worst -0.07413411140441895
10 lb beta sum: 0.23732657730579376, worst -0.07409501075744629
Time: prepare 3.1143    bound 8.6230    transfer 0.5025    finalize 1.6534    func 14.3370    
Accumulated time: func 101.3557    prepare 25.5622    bound 60.8097    transfer 3.7978    finalize 7.6626    
all_split False
======================Cut inference begins======================
max lb tensor(0.03063679) min lb tensor(-0.07408762)
Number of Verified Splits: 24971 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.0011212825775146484 
BICCOS Cumulative time: 0.13694167137145996
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07421 (22), -0.07409 (22), -0.07325 (22), -0.07270 (22), -0.07255 (22), -0.07252 (22), -0.07220 (22), -0.07168 (22), -0.07126 (22), -0.07115 (22), -0.07094 (22), -0.07063 (22), -0.07057 (22), -0.07053 (22), -0.07045 (22), -0.07005 (22), -0.06988 (22), -0.06983 (21), -0.06972 (22), -0.06969 (22), 
Length of domains: 109005
Time: pickout 0.5358    decision 4.3595    set_bounds 4.3286    solve 14.3521    add 0.1408    
Accumulated time: pickout 4.2411    decision 31.5824    set_bounds 32.0634    solve 101.7347    add 1.9885    
Current (lb-rhs): -0.07421493530273438
377260 domains visited
Cumulative time: 173.92121124267578

BaB round 20
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1819] [/input-8, 979] [/input-8, 988] [/input-8, 979] [/input-8, 979] [/input-8, 988] [/input-8, 979] [/input-8, 290] [/input-8, 979] [/input-8, 596] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732657730579376, worst -0.07089042663574219
10 lb beta sum: 0.23732657730579376, worst -0.07088804244995117
Time: prepare 3.1077    bound 8.6214    transfer 0.5038    finalize 0.5061    func 13.1758    
Accumulated time: func 114.5314    prepare 28.6704    bound 69.4311    transfer 4.3016    finalize 8.1687    
all_split False
======================Cut inference begins======================
max lb tensor(0.02899766) min lb tensor(-0.07087898)
Number of Verified Splits: 23470 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.0014584064483642578 
BICCOS Cumulative time: 0.13840007781982422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07409 (22), -0.07325 (22), -0.07252 (22), -0.07115 (22), -0.07088 (23), -0.07063 (22), -0.07045 (22), -0.07005 (22), -0.06983 (21), -0.06972 (22), -0.06961 (22), -0.06935 (23), -0.06926 (22), -0.06922 (22), -0.06920 (23), -0.06905 (22), -0.06891 (22), -0.06890 (22), -0.06886 (23), -0.06876 (22), 
Length of domains: 118303
Time: pickout 0.5414    decision 3.3762    set_bounds 5.6210    solve 13.1964    add 0.1470    
Accumulated time: pickout 4.7826    decision 34.9586    set_bounds 37.6844    solve 114.9311    add 2.1355    
Current (lb-rhs): -0.07408761978149414
419326 domains visited
Cumulative time: 197.10332489013672

BaB round 21
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1819] [/input-8, 867] [/input-8, 114] [/input-8, 1819] [/input-8, 821] [/input-8, 1819] [/input-8, 988] [/input-8, 1819] [/input-8, 426] [/input-8, 867] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23732657730579376, worst -0.07009696960449219
10 lb beta sum: 0.23732657730579376, worst -0.07002544403076172
Time: prepare 3.1544    bound 8.6235    transfer 0.5053    finalize 0.5075    func 13.2245    
Accumulated time: func 127.7560    prepare 31.8252    bound 78.0545    transfer 4.8069    finalize 8.6762    
all_split False
======================Cut inference begins======================
max lb tensor(0.02789450) min lb tensor(-0.07001925)
Number of Verified Splits: 23338 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.032837629318237305 
BICCOS Cumulative time: 0.17123770713806152
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07409 (22), -0.07252 (22), -0.07088 (23), -0.07045 (22), -0.07005 (22), -0.07002 (23), -0.06974 (22), -0.06935 (23), -0.06920 (23), -0.06891 (22), -0.06890 (22), -0.06886 (23), -0.06876 (22), -0.06875 (22), -0.06840 (23), -0.06805 (22), -0.06802 (23), -0.06802 (23), -0.06800 (23), -0.06788 (23), 
Length of domains: 127733
Time: pickout 0.5422    decision 4.2127    set_bounds 4.6555    solve 13.2460    add 0.1619    
Accumulated time: pickout 5.3247    decision 39.1713    set_bounds 42.3398    solve 128.1771    add 2.2975    
Current (lb-rhs): -0.07408761978149414
461524 domains visited
Time out!!!!!!!!
Result: unknown in 222.6924 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 71, vnnlib ID: 71 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-2.23181081, -6.13865471, -5.08255959, -5.81894684, -5.10377789,
         -6.43214750, -5.88667679, -5.84751606, -6.03846073, -6.48124504]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [600]; unstable size 600; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 134, 1, 600] with unstable size 133 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 600] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 600] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [133]; unstable size 133; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 133] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 133] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.68216181, 2.01670456, 2.51456165, 1.81788015, 2.98190975, 2.39753699,
         2.20995522, 2.77434254, 3.16959429]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0763 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 72, vnnlib ID: 72 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.04805279, -11.81328869,  -6.59518147,  -6.36475563,  -7.03116512,
          -6.60425329,  -7.20965433,  -8.31397438,  -8.97400188, -10.04430199]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [644]; unstable size 644; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 218, 1, 644] with unstable size 217 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 644] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 644] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [217]; unstable size 217; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 217] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 217] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.59573555,  3.84289098, -0.66203940, -0.35017085, -0.20632455,
          0.11054757,  0.49438119,  0.95489430,  1.85776734]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.04805279, -11.81328869,  -6.59518147,  -6.36475563,  -7.03116512,
          -6.60425329,  -7.20965433,  -8.31397438,  -8.97400188, -10.04430199]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.45969152, -12.50387001,  -6.75212955,  -7.02717876,  -7.47408676,
           -7.30156040,  -7.84784174,  -8.79535866,  -9.60956287, -10.84120369],
         [ -7.45969152, -12.50387001,  -6.75212955,  -7.02717876,  -7.47408676,
           -7.30156040,  -7.84784174,  -8.79535866,  -9.60956287, -10.84120369]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.43251276, -0.27504921,  0.44690800,  0.27438164]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0064 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0688 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 73, vnnlib ID: 73 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.91584206, -11.23733044,  -4.95584011,  -5.17609406,  -4.67090321,
          -5.68216658,  -2.94505668,  -7.65497255, -10.49558067, -10.30911922]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [530]; unstable size 530; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 286, 1, 530] with unstable size 285 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 530] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 530] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [285]; unstable size 285; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 285] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 285] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.01592445, 5.78018856, 0.67337418, 0.94681990, 0.40892148, 1.18366754,
         2.78911257, 4.93772984, 4.91414595]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0649 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 74, vnnlib ID: 74 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.75821781, -13.33421040,  -9.89368343,  -9.90017796,  -8.64980602,
          -9.78042221,  -9.99710751,  -4.75752258, -13.64687443, -11.43529987]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [557]; unstable size 557; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 217, 1, 557] with unstable size 216 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 557] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 557] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [216]; unstable size 216; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 216] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 216] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.65111065, 6.98895836, 3.93457890, 3.96870136, 2.90565753, 3.92689157,
         3.80601001, 7.22786093, 5.19847107]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0485 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 75, vnnlib ID: 75 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.29954243, -11.45261860, -13.34986973, -13.67515564, -13.40554333,
         -14.42231846, -13.27403164, -13.71299839, -10.82265949, -11.58751392]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [682]; unstable size 682; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 185, 1, 682] with unstable size 184 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 10, 1, 682] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 682] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [184]; unstable size 184; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 10, 1, 184] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 184] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.10945773,  1.98779762,  2.28032899,  1.90550232,  2.75677061,
          1.69960499,  1.94380999, -0.60779363, -0.09704113]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.29954243, -11.45261860, -13.34986973, -13.67515564, -13.40554333,
         -14.42231846, -13.27403164, -13.71299839, -10.82265949, -11.58751392]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.56808662, -11.42974663, -13.45270157, -13.65275669, -13.48646450,
          -14.33638859, -13.28952789, -13.75271511, -10.36225224, -11.49094582],
         [-10.56808662, -11.42974663, -13.45270157, -13.65275669, -13.48646450,
          -14.33638859, -13.28952789, -13.75271511, -10.36225224, -11.49094582]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.86166000, -0.20583439,  0.92285919]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0057 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0697 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 76, vnnlib ID: 76 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.85307121, -8.24333668, -2.96728778, -1.66786790, -3.85206652,
         -1.00410879, -4.09244967, -4.12650394, -7.75833988, -6.65997744]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [554]; unstable size 554; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 227, 1, 554] with unstable size 226 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 554] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 554] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [226]; unstable size 226; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 226] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 226] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.37778521, 5.08529663, 0.43795586, 0.25316513, 1.50299883, 1.94422305,
         2.22069502, 4.52716446, 3.75112343]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0634 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 77, vnnlib ID: 77 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.27097034, -11.59263897, -13.77681637, -13.17456245, -13.49902725,
         -13.92919827, -14.42542553, -14.19969749,  -9.72965145,  -9.57371902]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [484]; unstable size 484; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 175, 1, 484] with unstable size 174 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 484] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 484] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [174]; unstable size 174; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 174] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 174] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.28471565,  1.18307233,  2.52050447,  2.22602820,  2.26000214,
          2.91944146,  3.25191450,  3.06435561, -1.13768911]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.27097034, -11.59263897, -13.77681637, -13.17456245, -13.49902725,
         -13.92919827, -14.42542553, -14.19969749,  -9.72965145,  -9.57371902]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.00729084, -11.61149406, -13.44780445, -12.92614937, -13.19767094,
          -13.75501728, -14.04838467, -14.12834930,  -9.19971180,  -9.85693741]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.65722561]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0054 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0740 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 78, vnnlib ID: 78 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.73918152, -8.53411102, -3.85345960, -3.82583189, -3.55089569,
         -4.12887335, -4.16478586, -5.91378498, -8.29353142, -8.77650642]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [613]; unstable size 613; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 281, 1, 613] with unstable size 280 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 613] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 613] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [280]; unstable size 280; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 280] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 280] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.07348073,  1.60172319, -1.32437325, -1.43540144, -0.22906235,
         -0.94617903,  0.48511827,  2.09677744,  2.21030235]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.73918152, -8.53411102, -3.85345960, -3.82583189, -3.55089569,
         -4.12887335, -4.16478586, -5.91378498, -8.29353142, -8.77650642]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.73918104, -8.53411007, -3.85345936, -3.82583237, -3.55089521,
          -4.12887335, -4.16478539, -5.91378498, -8.29353142, -8.77650642],
         [-5.73918104, -8.53411007, -3.85345936, -3.82583237, -3.55089521,
          -4.12887335, -4.16478539, -5.91378498, -8.29353142, -8.77650642]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.91334867,  0.02762699, -0.27493715,  0.30304098,  0.33895302]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.00476181,  0.01111121,  0.02698422,  ..., -0.51269841,
            -0.56031746, -0.62380952],
           [ 0.04285724, -0.00476181,  0.05873025,  ..., -0.59206349,
            -0.63968253, -0.71904761],
           [ 0.01111121, -0.05238085,  0.09047628,  ..., -0.71904761,
            -0.73492062, -0.71904761],
           ...,
           [ 0.02698422, -0.00476181,  0.10634929,  ..., -1.02063489,
            -1.08412695, -1.51269829],
           [-0.02063482, -0.00476181,  0.05873025,  ..., -0.95714283,
            -1.11587298, -1.48095226],
           [ 0.01111121,  0.02698422,  0.05873025,  ..., -0.94126981,
            -1.19523799, -1.48095226]],

          [[-0.90177131, -0.96618354, -0.96618354,  ..., -1.33655393,
            -1.33655393, -1.36875999],
           [-0.91787434, -0.98228657, -0.86956519,  ..., -1.35265696,
            -1.38486302, -1.43317223],
           [-1.01449275, -1.04669881, -0.80515295,  ..., -1.44927526,
            -1.44927526, -1.44927526],
           ...,
           [-0.99838966, -0.96618354, -0.96618354,  ..., -1.38486302,
            -1.41706920, -1.78743970],
           [-1.03059578, -0.99838966, -1.04669881,  ..., -1.32045078,
            -1.44927526, -1.75523353],
           [-0.99838966, -1.01449275, -1.07890499,  ..., -1.27214170,
            -1.49758446, -1.73913050]],

          [[-1.00299859, -1.03298354, -1.03298354,  ..., -1.27286363,
            -1.27286363, -1.30284870],
           [-1.00299859, -1.03298354, -0.91304344,  ..., -1.28785622,
            -1.31784117, -1.33283365],
           [-1.09295356, -1.07796109, -0.82308841,  ..., -1.39280367,
            -1.37781119, -1.31784117],
           ...,
           [-1.06296861, -1.12293863, -1.09295356,  ..., -1.12293863,
            -1.13793111, -1.43778121],
           [-1.12293863, -1.13793111, -1.12293863,  ..., -1.04797614,
            -1.16791618, -1.43778121],
           [-1.09295356, -1.10794616, -1.09295356,  ..., -1.00299859,
            -1.21289361, -1.46776617]]],


         [[[-0.00476181,  0.01111121,  0.02698422,  ..., -0.51269841,
            -0.56031746, -0.62380952],
           [ 0.04285724, -0.00476181,  0.05873025,  ..., -0.59206349,
            -0.63968253, -0.71904761],
           [ 0.01111121, -0.05238085,  0.09047628,  ..., -0.71904761,
            -0.73492062, -0.71904761],
           ...,
           [ 0.02698422, -0.00476181,  0.10634929,  ..., -1.02063489,
            -1.08412695, -1.51269829],
           [-0.02063482, -0.00476181,  0.05873025,  ..., -0.95714283,
            -1.11587298, -1.48095226],
           [ 0.01111121,  0.02698422,  0.05873025,  ..., -0.94126981,
            -1.19523799, -1.48095226]],

          [[-0.90177131, -0.96618354, -0.96618354,  ..., -1.33655393,
            -1.33655393, -1.36875999],
           [-0.91787434, -0.98228657, -0.86956519,  ..., -1.35265696,
            -1.38486302, -1.43317223],
           [-1.01449275, -1.04669881, -0.80515295,  ..., -1.44927526,
            -1.44927526, -1.44927526],
           ...,
           [-0.99838966, -0.96618354, -0.96618354,  ..., -1.38486302,
            -1.41706920, -1.78743970],
           [-1.03059578, -0.99838966, -1.04669881,  ..., -1.32045078,
            -1.44927526, -1.75523353],
           [-0.99838966, -1.01449275, -1.07890499,  ..., -1.27214170,
            -1.49758446, -1.73913050]],

          [[-1.00299859, -1.03298354, -1.03298354,  ..., -1.27286363,
            -1.27286363, -1.30284870],
           [-1.00299859, -1.03298354, -0.91304344,  ..., -1.28785622,
            -1.31784117, -1.33283365],
           [-1.09295356, -1.07796109, -0.82308841,  ..., -1.39280367,
            -1.37781119, -1.31784117],
           ...,
           [-1.06296861, -1.12293863, -1.09295356,  ..., -1.12293863,
            -1.13793111, -1.43778121],
           [-1.12293863, -1.13793111, -1.12293863,  ..., -1.04797614,
            -1.16791618, -1.43778121],
           [-1.09295356, -1.10794616, -1.09295356,  ..., -1.00299859,
            -1.21289361, -1.46776617]]],


         [[[-0.00476181,  0.01111121,  0.02698422,  ..., -0.51269841,
            -0.56031746, -0.62380952],
           [ 0.04285724, -0.00476181,  0.05873025,  ..., -0.59206349,
            -0.63968253, -0.71904761],
           [ 0.01111121, -0.05238085,  0.09047628,  ..., -0.71904761,
            -0.73492062, -0.71904761],
           ...,
           [ 0.02698422, -0.00476181,  0.10634929,  ..., -1.02063489,
            -1.08412695, -1.51269829],
           [-0.02063482, -0.00476181,  0.05873025,  ..., -0.95714283,
            -1.11587298, -1.48095226],
           [ 0.01111121,  0.02698422,  0.05873025,  ..., -0.94126981,
            -1.19523799, -1.48095226]],

          [[-0.90177131, -0.96618354, -0.96618354,  ..., -1.33655393,
            -1.33655393, -1.36875999],
           [-0.91787434, -0.98228657, -0.86956519,  ..., -1.35265696,
            -1.38486302, -1.43317223],
           [-1.01449275, -1.04669881, -0.80515295,  ..., -1.44927526,
            -1.44927526, -1.44927526],
           ...,
           [-0.99838966, -0.96618354, -0.96618354,  ..., -1.38486302,
            -1.41706920, -1.78743970],
           [-1.03059578, -0.99838966, -1.04669881,  ..., -1.32045078,
            -1.44927526, -1.75523353],
           [-0.99838966, -1.01449275, -1.07890499,  ..., -1.27214170,
            -1.49758446, -1.73913050]],

          [[-1.00299859, -1.03298354, -1.03298354,  ..., -1.27286363,
            -1.27286363, -1.30284870],
           [-1.00299859, -1.03298354, -0.91304344,  ..., -1.28785622,
            -1.31784117, -1.33283365],
           [-1.09295356, -1.07796109, -0.82308841,  ..., -1.39280367,
            -1.37781119, -1.31784117],
           ...,
           [-1.06296861, -1.12293863, -1.09295356,  ..., -1.12293863,
            -1.13793111, -1.43778121],
           [-1.12293863, -1.13793111, -1.12293863,  ..., -1.04797614,
            -1.16791618, -1.43778121],
           [-1.09295356, -1.10794616, -1.09295356,  ..., -1.00299859,
            -1.21289361, -1.46776617]]],


         [[[-0.00476181,  0.01111121,  0.02698422,  ..., -0.51269841,
            -0.56031746, -0.62380952],
           [ 0.04285724, -0.00476181,  0.05873025,  ..., -0.59206349,
            -0.63968253, -0.71904761],
           [ 0.01111121, -0.05238085,  0.09047628,  ..., -0.71904761,
            -0.73492062, -0.71904761],
           ...,
           [ 0.02698422, -0.00476181,  0.10634929,  ..., -1.02063489,
            -1.08412695, -1.51269829],
           [-0.02063482, -0.00476181,  0.05873025,  ..., -0.95714283,
            -1.11587298, -1.48095226],
           [ 0.01111121,  0.02698422,  0.05873025,  ..., -0.94126981,
            -1.19523799, -1.48095226]],

          [[-0.90177131, -0.96618354, -0.96618354,  ..., -1.33655393,
            -1.33655393, -1.36875999],
           [-0.91787434, -0.98228657, -0.86956519,  ..., -1.35265696,
            -1.38486302, -1.43317223],
           [-1.01449275, -1.04669881, -0.80515295,  ..., -1.44927526,
            -1.44927526, -1.44927526],
           ...,
           [-0.99838966, -0.96618354, -0.96618354,  ..., -1.38486302,
            -1.41706920, -1.78743970],
           [-1.03059578, -0.99838966, -1.04669881,  ..., -1.32045078,
            -1.44927526, -1.75523353],
           [-0.99838966, -1.01449275, -1.07890499,  ..., -1.27214170,
            -1.49758446, -1.73913050]],

          [[-1.00299859, -1.03298354, -1.03298354,  ..., -1.27286363,
            -1.27286363, -1.30284870],
           [-1.00299859, -1.03298354, -0.91304344,  ..., -1.28785622,
            -1.31784117, -1.33283365],
           [-1.09295356, -1.07796109, -0.82308841,  ..., -1.39280367,
            -1.37781119, -1.31784117],
           ...,
           [-1.06296861, -1.12293863, -1.09295356,  ..., -1.12293863,
            -1.13793111, -1.43778121],
           [-1.12293863, -1.13793111, -1.12293863,  ..., -1.04797614,
            -1.16791618, -1.43778121],
           [-1.09295356, -1.10794616, -1.09295356,  ..., -1.00299859,
            -1.21289361, -1.46776617]]],


         [[[-0.00476181,  0.01111121,  0.02698422,  ..., -0.51269841,
            -0.56031746, -0.62380952],
           [ 0.04285724, -0.00476181,  0.05873025,  ..., -0.59206349,
            -0.63968253, -0.71904761],
           [ 0.01111121, -0.05238085,  0.09047628,  ..., -0.71904761,
            -0.73492062, -0.71904761],
           ...,
           [ 0.02698422, -0.00476181,  0.10634929,  ..., -1.02063489,
            -1.08412695, -1.51269829],
           [-0.02063482, -0.00476181,  0.05873025,  ..., -0.95714283,
            -1.11587298, -1.48095226],
           [ 0.01111121,  0.02698422,  0.05873025,  ..., -0.94126981,
            -1.19523799, -1.48095226]],

          [[-0.90177131, -0.96618354, -0.96618354,  ..., -1.33655393,
            -1.33655393, -1.36875999],
           [-0.91787434, -0.98228657, -0.86956519,  ..., -1.35265696,
            -1.38486302, -1.43317223],
           [-1.01449275, -1.04669881, -0.80515295,  ..., -1.44927526,
            -1.44927526, -1.44927526],
           ...,
           [-0.99838966, -0.96618354, -0.96618354,  ..., -1.38486302,
            -1.41706920, -1.78743970],
           [-1.03059578, -0.99838966, -1.04669881,  ..., -1.32045078,
            -1.44927526, -1.75523353],
           [-0.99838966, -1.01449275, -1.07890499,  ..., -1.27214170,
            -1.49758446, -1.73913050]],

          [[-1.00299859, -1.03298354, -1.03298354,  ..., -1.27286363,
            -1.27286363, -1.30284870],
           [-1.00299859, -1.03298354, -0.91304344,  ..., -1.28785622,
            -1.31784117, -1.33283365],
           [-1.09295356, -1.07796109, -0.82308841,  ..., -1.39280367,
            -1.37781119, -1.31784117],
           ...,
           [-1.06296861, -1.12293863, -1.09295356,  ..., -1.12293863,
            -1.13793111, -1.43778121],
           [-1.12293863, -1.13793111, -1.12293863,  ..., -1.04797614,
            -1.16791618, -1.43778121],
           [-1.09295356, -1.10794616, -1.09295356,  ..., -1.00299859,
            -1.21289361, -1.46776617]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0772 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 79, vnnlib ID: 79 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.05248165, -11.65894604, -12.25777149, -10.95008183,  -9.94209957,
         -10.12332249, -11.05361462,  -6.32633877, -14.71703625, -10.15004635]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [432]; unstable size 432; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 201, 1, 432] with unstable size 200 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 432] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 432] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [200]; unstable size 200; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 200] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 200] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.82437706, 2.96819687, 4.11948109, 3.11231089, 2.39884806, 2.32051992,
         2.91186976, 6.36293125, 1.88987505]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0659 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 80, vnnlib ID: 80 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.44930172, -15.25463963,  -9.82252502, -12.00500107,  -9.42480278,
         -12.67968750, -10.39871120, -11.85678768, -11.46559906, -13.09015942]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [742]; unstable size 742; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 301, 1, 742] with unstable size 300 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 742] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 742] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [300]; unstable size 300; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 300] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 300] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.98650265, -1.78932309,  0.26673225, -2.52717829,  0.69541448,
         -1.41547871, -0.58254123, -0.39011735,  1.13849401]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.44930172, -15.25463963,  -9.82252502, -12.00500107,  -9.42480278,
         -12.67968750, -10.39871120, -11.85678768, -11.46559906, -13.09015942]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.44930172, -15.25463867,  -9.82252502, -12.00500011,  -9.42480087,
          -12.67968464, -10.39871025, -11.85678864, -11.46559906, -13.09015942],
         [-10.44930172, -15.25463867,  -9.82252502, -12.00500011,  -9.42480087,
          -12.67968464, -10.39871025, -11.85678864, -11.46559906, -13.09015942]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.62677670, -1.02450085, -0.05059147,  1.40748692,  1.01629734]]],
       device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]],


         [[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]],


         [[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]],


         [[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]],


         [[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0794 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 81, vnnlib ID: 81 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.10813904, -15.89954853,  -7.31516552, -10.82333755,  -8.54076099,
         -10.33981800, -11.38731098, -12.22146320, -14.46312428, -15.25714493]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [595]; unstable size 595; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 191, 1, 595] with unstable size 190 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 10, 1, 595] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 595] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [190]; unstable size 190; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 10, 1, 190] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 190] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.01579976, 7.21389246, 2.88120985, 0.47409204, 2.25944805, 3.19084311,
         3.74374318, 5.93748760, 6.55921412]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0649 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 82, vnnlib ID: 82 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.24675894, -8.88183308, -4.39334679, -3.84514856, -4.41373539,
         -4.05639076, -4.91783571, -6.25871420, -9.17700768, -7.08661222]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [586]; unstable size 586; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 303, 1, 586] with unstable size 302 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 586] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 586] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [302]; unstable size 302; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 302] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 302] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.48434639,  2.69666743, -0.88318062, -0.67275071, -1.05266643,
         -0.60235131,  1.16763580,  2.82550168,  1.08651638]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.24675894, -8.88183308, -4.39334679, -3.84514856, -4.41373539,
         -4.05639076, -4.91783571, -6.25871420, -9.17700768, -7.08661222]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.24675846, -8.88183308, -4.39334631, -3.84514809, -4.41373491,
          -4.05638981, -4.91783571, -6.25871420, -9.17700863, -7.08661318],
         [-6.24675846, -8.88183308, -4.39334631, -3.84514809, -4.41373491,
          -4.05638981, -4.91783571, -6.25871420, -9.17700863, -7.08661318]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.33695650, -0.21124172,  0.35734510,  0.86144590]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.42380959,  0.39206356,  0.47142863,  ..., -0.57619047,
             0.16984135,  0.28095245],
           [ 0.29682547,  0.36031753,  0.53492069,  ..., -0.81428570,
            -0.43333322,  0.34444451],
           [ 0.20158738,  0.39206356,  0.55079371,  ..., -0.76666665,
            -0.79841268, -0.27460307],
           ...,
           [ 0.34444451,  0.50317466,  0.36031753,  ...,  0.36031753,
             0.40793657,  0.28095245],
           [ 0.48730165,  0.58253974,  0.43968260,  ...,  0.69365084,
             0.59841275,  0.50317466],
           [ 0.55079371,  0.61428577,  0.48730165,  ...,  0.80476195,
             0.67777783,  0.66190481]],

          [[ 0.48309189,  0.46698883,  0.57971025,  ..., -0.66022539,
             0.22544295,  0.37037048],
           [ 0.33816436,  0.41867965,  0.64412248,  ..., -1.01449275,
            -0.53140092,  0.35426742],
           [ 0.22544295,  0.45088577,  0.64412248,  ..., -0.95008045,
            -0.96618354, -0.32206106],
           ...,
           [ 0.66022551,  0.82125610,  0.66022551,  ...,  0.70853472,
             0.74074084,  0.59581327],
           [ 0.80515307,  0.90177143,  0.74074084,  ...,  1.06280196,
             0.96618366,  0.86956531],
           [ 0.86956531,  0.93397754,  0.78904998,  ...,  1.20772982,
             1.07890511,  1.06280196]],

          [[ 0.54122955,  0.54122955,  0.67616212,  ..., -0.64317840,
             0.31634200,  0.58620709],
           [ 0.37631202,  0.49625200,  0.69115460,  ..., -1.12293863,
            -0.52323836,  0.51124454],
           [ 0.27136448,  0.49625200,  0.67616212,  ..., -1.13793111,
            -1.04797614, -0.26836565],
           ...,
           [ 0.99100471,  1.14092970,  0.97601217,  ...,  1.05097473,
             1.11094475,  1.00599718],
           [ 1.14092970,  1.21589243,  1.06596720,  ...,  1.36581755,
             1.32084000,  1.26086998],
           [ 1.18590748,  1.24587750,  1.11094475,  ...,  1.54572761,
             1.45577252,  1.47076499]]],


         [[[ 0.42380959,  0.39206356,  0.47142863,  ..., -0.57619047,
             0.16984135,  0.28095245],
           [ 0.29682547,  0.36031753,  0.53492069,  ..., -0.81428570,
            -0.43333322,  0.34444451],
           [ 0.20158738,  0.39206356,  0.55079371,  ..., -0.76666665,
            -0.79841268, -0.27460307],
           ...,
           [ 0.34444451,  0.50317466,  0.36031753,  ...,  0.36031753,
             0.40793657,  0.28095245],
           [ 0.48730165,  0.58253974,  0.43968260,  ...,  0.69365084,
             0.59841275,  0.50317466],
           [ 0.55079371,  0.61428577,  0.48730165,  ...,  0.80476195,
             0.67777783,  0.66190481]],

          [[ 0.48309189,  0.46698883,  0.57971025,  ..., -0.66022539,
             0.22544295,  0.37037048],
           [ 0.33816436,  0.41867965,  0.64412248,  ..., -1.01449275,
            -0.53140092,  0.35426742],
           [ 0.22544295,  0.45088577,  0.64412248,  ..., -0.95008045,
            -0.96618354, -0.32206106],
           ...,
           [ 0.66022551,  0.82125610,  0.66022551,  ...,  0.70853472,
             0.74074084,  0.59581327],
           [ 0.80515307,  0.90177143,  0.74074084,  ...,  1.06280196,
             0.96618366,  0.86956531],
           [ 0.86956531,  0.93397754,  0.78904998,  ...,  1.20772982,
             1.07890511,  1.06280196]],

          [[ 0.54122955,  0.54122955,  0.67616212,  ..., -0.64317840,
             0.31634200,  0.58620709],
           [ 0.37631202,  0.49625200,  0.69115460,  ..., -1.12293863,
            -0.52323836,  0.51124454],
           [ 0.27136448,  0.49625200,  0.67616212,  ..., -1.13793111,
            -1.04797614, -0.26836565],
           ...,
           [ 0.99100471,  1.14092970,  0.97601217,  ...,  1.05097473,
             1.11094475,  1.00599718],
           [ 1.14092970,  1.21589243,  1.06596720,  ...,  1.36581755,
             1.32084000,  1.26086998],
           [ 1.18590748,  1.24587750,  1.11094475,  ...,  1.54572761,
             1.45577252,  1.47076499]]],


         [[[ 0.42380959,  0.39206356,  0.47142863,  ..., -0.57619047,
             0.16984135,  0.28095245],
           [ 0.29682547,  0.36031753,  0.53492069,  ..., -0.81428570,
            -0.43333322,  0.34444451],
           [ 0.20158738,  0.39206356,  0.55079371,  ..., -0.76666665,
            -0.79841268, -0.27460307],
           ...,
           [ 0.34444451,  0.50317466,  0.36031753,  ...,  0.36031753,
             0.40793657,  0.28095245],
           [ 0.48730165,  0.58253974,  0.43968260,  ...,  0.69365084,
             0.59841275,  0.50317466],
           [ 0.55079371,  0.61428577,  0.48730165,  ...,  0.80476195,
             0.67777783,  0.66190481]],

          [[ 0.48309189,  0.46698883,  0.57971025,  ..., -0.66022539,
             0.22544295,  0.37037048],
           [ 0.33816436,  0.41867965,  0.64412248,  ..., -1.01449275,
            -0.53140092,  0.35426742],
           [ 0.22544295,  0.45088577,  0.64412248,  ..., -0.95008045,
            -0.96618354, -0.32206106],
           ...,
           [ 0.66022551,  0.82125610,  0.66022551,  ...,  0.70853472,
             0.74074084,  0.59581327],
           [ 0.80515307,  0.90177143,  0.74074084,  ...,  1.06280196,
             0.96618366,  0.86956531],
           [ 0.86956531,  0.93397754,  0.78904998,  ...,  1.20772982,
             1.07890511,  1.06280196]],

          [[ 0.54122955,  0.54122955,  0.67616212,  ..., -0.64317840,
             0.31634200,  0.58620709],
           [ 0.37631202,  0.49625200,  0.69115460,  ..., -1.12293863,
            -0.52323836,  0.51124454],
           [ 0.27136448,  0.49625200,  0.67616212,  ..., -1.13793111,
            -1.04797614, -0.26836565],
           ...,
           [ 0.99100471,  1.14092970,  0.97601217,  ...,  1.05097473,
             1.11094475,  1.00599718],
           [ 1.14092970,  1.21589243,  1.06596720,  ...,  1.36581755,
             1.32084000,  1.26086998],
           [ 1.18590748,  1.24587750,  1.11094475,  ...,  1.54572761,
             1.45577252,  1.47076499]]],


         [[[ 0.42380959,  0.39206356,  0.47142863,  ..., -0.57619047,
             0.16984135,  0.28095245],
           [ 0.29682547,  0.36031753,  0.53492069,  ..., -0.81428570,
            -0.43333322,  0.34444451],
           [ 0.20158738,  0.39206356,  0.55079371,  ..., -0.76666665,
            -0.79841268, -0.27460307],
           ...,
           [ 0.34444451,  0.50317466,  0.36031753,  ...,  0.36031753,
             0.40793657,  0.28095245],
           [ 0.48730165,  0.58253974,  0.43968260,  ...,  0.69365084,
             0.59841275,  0.50317466],
           [ 0.55079371,  0.61428577,  0.48730165,  ...,  0.80476195,
             0.67777783,  0.66190481]],

          [[ 0.48309189,  0.46698883,  0.57971025,  ..., -0.66022539,
             0.22544295,  0.37037048],
           [ 0.33816436,  0.41867965,  0.64412248,  ..., -1.01449275,
            -0.53140092,  0.35426742],
           [ 0.22544295,  0.45088577,  0.64412248,  ..., -0.95008045,
            -0.96618354, -0.32206106],
           ...,
           [ 0.66022551,  0.82125610,  0.66022551,  ...,  0.70853472,
             0.74074084,  0.59581327],
           [ 0.80515307,  0.90177143,  0.74074084,  ...,  1.06280196,
             0.96618366,  0.86956531],
           [ 0.86956531,  0.93397754,  0.78904998,  ...,  1.20772982,
             1.07890511,  1.06280196]],

          [[ 0.54122955,  0.54122955,  0.67616212,  ..., -0.64317840,
             0.31634200,  0.58620709],
           [ 0.37631202,  0.49625200,  0.69115460,  ..., -1.12293863,
            -0.52323836,  0.51124454],
           [ 0.27136448,  0.49625200,  0.67616212,  ..., -1.13793111,
            -1.04797614, -0.26836565],
           ...,
           [ 0.99100471,  1.14092970,  0.97601217,  ...,  1.05097473,
             1.11094475,  1.00599718],
           [ 1.14092970,  1.21589243,  1.06596720,  ...,  1.36581755,
             1.32084000,  1.26086998],
           [ 1.18590748,  1.24587750,  1.11094475,  ...,  1.54572761,
             1.45577252,  1.47076499]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0559 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 83, vnnlib ID: 83 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.36881924, -3.89865160, -7.93544197, -6.23400021, -6.74230671,
         -6.96568727, -8.17397594, -6.56449556, -5.37149715, -2.30208302]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [592]; unstable size 592; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 220, 1, 592] with unstable size 219 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 28, 1, 592] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 592] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [219]; unstable size 219; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 28, 1, 219] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 219] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.89441109, 0.29969555, 2.93556023, 1.68636417, 1.92623043, 2.15194607,
         3.21918106, 1.75679588, 0.56472778]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0627 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 84, vnnlib ID: 84 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.80086327, -15.88022327,  -7.39093113,  -9.48237228,  -6.51979351,
          -9.19186211,  -7.76570368, -10.53886223, -14.64324093, -15.33413029]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [570]; unstable size 570; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 179, 1, 570] with unstable size 178 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 570] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 570] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [178]; unstable size 178; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 178] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 178] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.99768186,  7.91173935, -0.14131731,  2.21972227,  1.75214767,
          0.21274018,  3.05064702,  6.73370552,  7.60544586]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.80086327, -15.88022327,  -7.39093113,  -9.48237228,  -6.51979351,
          -9.19186211,  -7.76570368, -10.53886223, -14.64324093, -15.33413029]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.22it/s]100%|██████████| 1/1 [00:00<00:00,  9.21it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.14176750, -15.39953613,  -6.68415260,  -9.07587337,  -6.41280174,
           -8.82754326,  -7.32056284, -10.51403236, -14.15463734, -15.02766609]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.27135086]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1114 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 33.62461471557617
alpha/beta optimization time: 1.1727080345153809
initial alpha-crown bounds: tensor([[ 4.04458427,  7.94689751, -0.11414808,  2.23972201,  1.77452922,
          0.24281096,  3.07658291,  6.77713585,  7.63649940]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.1141480803489685
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.65310978889465
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.653071641922
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.65304613113403
Verifying property 2 with 1 instances.
##### Instance 84 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.11414808]], device='cuda:0') need to verify.
Model prediction is: tensor([-11.80086327, -15.88022327,  -7.39093113,  -9.48237228,  -6.51979351,
         -9.19186211,  -7.76570368, -10.53886223, -14.64324093, -15.33413029],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.11414808]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 570
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 175
Node /15 input 0: size torch.Size([100]) unstable 11
-----------------
# of unstable neurons: 756
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011610984802246094
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11414444446563721
10 lb beta sum: 0.0, worst -0.1141502857208252
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0513    transfer 0.0001    finalize 0.0001    func 0.0518    
Accumulated time: func 0.0518    prepare 0.0002    bound 0.0513    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1] 
split level 1: [/input-12, 93] 
split level 2: [/input-12, 15] 
split level 3: [/input-12, 26] 
split level 4: [/input-12, 6] 
split level 5: [/input-8, 1892] 
split level 6: [/input-12, 11] 
split level 7: [/input-12, 68] 
split level 8: [/input-8, 1908] 
split level 9: [/input-8, 1919] 
split level 10: [/input-12, 9] 
split level 11: [/input-8, 1081] 
split level 12: [/input-8, 1884] 
split level 13: [/input, 2780] 
split level 14: [/input-8, 1878] 
split level 15: [/input-8, 1877] 
split level 16: [/input-8, 1917] 
split level 17: [/input-8, 1915] 
split level 18: [/input-8, 1895] 
split level 19: [/input-8, 1057] 
split level 20: [/input-8, 1893] 
split level 21: [/input-8, 1354] 
split level 22: [/input-8, 101] 
split level 23: [/input-8, 1083] 
split level 24: [/input-8, 1901] 
split level 25: [/input-8, 1918] 
split level 26: [/input-8, 1138] 
split level 27: [/input-8, 1365] 
split level 28: [/input-8, 1366] 
split level 29: [/input-8, 699] 
split level 30: [/input, 2747] 
split level 31: [/input, 1758] 
split level 32: [/input-8, 1870] 
split level 33: [/input-8, 1316] 
split level 34: [/input-8, 1074] 
split level 35: [/input-8, 1869] 
split level 36: [/input-8, 689] 
split level 37: [/input-8, 1076] 
split level 38: [/input-8, 1358] 
split level 39: [/input-8, 1369] 
split level 40: [/input-8, 1337] 
split level 41: [/input, 2520] 
split level 42: [/input-8, 94] 
split level 43: [/input, 2456] 
split level 44: [/input, 2440] 
split level 45: [/input-8, 1025] 
split level 46: [/input, 2796] 
split level 47: [/input-8, 553] 
split level 48: [/input-8, 524] 
split level 49: [/input-8, 674] 
split level 50: [/input-8, 573] 
split level 51: [/input-8, 1913] 
split level 52: [/input-8, 1516] 
split level 53: [/input-8, 642] 
split level 54: [/input-8, 532] 
split level 55: [/input, 1773] 
split level 56: [/input-8, 1150] 
split level 57: [/input, 2505] 
split level 58: [/input, 1703] 
split level 59: [/input-8, 516] 
split level 60: [/input-8, 651] 
split level 61: [/input-8, 1881] 
split level 62: [/input, 1739] 
split level 63: [/input, 2745] 
split level 64: [/input-8, 474] 
split level 65: [/input-8, 147] 
split level 66: [/input, 2491] 
split level 67: [/input-8, 1897] 
split level 68: [/input-8, 1904] 
split level 69: [/input, 2409] 
split level 70: [/input, 2414] 
split level 71: [/input, 2535] 
split level 72: [/input, 2518] 
split level 73: [/input-8, 1889] 
split level 74: [/input, 2510] 
split level 75: [/input-8, 1914] 
split level 76: [/input, 3314] 
split level 77: [/input, 2490] 
split level 78: [/input-8, 1342] 
split level 79: [/input, 2439] 
split level 80: [/input-8, 969] 
split level 81: [/input-8, 1114] 
split level 82: [/input, 2458] 
split level 83: [/input, 2812] 
split level 84: [/input-8, 1377] 
split level 85: [/input, 2489] 
split level 86: [/input-8, 122] 
split level 87: [/input, 2684] 
split level 88: [/input, 2468] 
split level 89: [/input-8, 693] 
split level 90: [/input-8, 1374] 
split level 91: [/input-8, 886] 
split level 92: [/input, 2533] 
split level 93: [/input, 1767] 
split level 94: [/input-8, 974] 
split level 95: [/input, 1656] 
split level 96: [/input, 220] 
split level 97: [/input, 2493] 
split level 98: [/input, 1752] 
split level 99: [/input, 1626] 
split level 100: [/input-8, 1880] 
split level 101: [/input-8, 1888] 
split level 102: [/input, 2445] 
split level 103: [/input-8, 1027] 
split level 104: [/input, 3576] 
split level 105: [/input, 4072] 
split level 106: [/input, 2897] 
split level 107: [/input-8, 889] 
split level 108: [/input-8, 1293] 
split level 109: [/input, 2463] 
split level 110: [/input, 1641] 
split level 111: [/input, 757] 
split level 112: [/input, 1642] 
split level 113: [/input, 3283] 
split level 114: [/input-12, 53] 
split level 115: [/input-8, 1803] 
split level 116: [/input, 1522] 
split level 117: [/input, 498] 
split level 118: [/input-8, 1468] 
split level 119: [/input, 1743] 
split level 120: [/input-8, 1424] 
split level 121: [/input, 2546] 
split level 122: [/input-8, 1106] 
split level 123: [/input-8, 1015] 
split level 124: [/input-8, 953] 
split level 125: [/input, 2993] 
split level 126: [/input-8, 1023] 
split level 127: [/input-8, 1079] 
split level 128: [/input, 2363] 
split level 129: [/input, 2444] 
split level 130: [/input, 1700] 
split level 131: [/input-8, 74] 
split level 132: [/input, 1784] 
split level 133: [/input, 2184] 
split level 134: [/input, 2881] 
split level 135: [/input, 2707] 
split level 136: [/input, 3262] 
split level 137: [/input-8, 907] 
split level 138: [/input, 4060] 
split level 139: [/input, 3538] 
split level 140: [/input-8, 1302] 
split level 141: [/input, 3293] 
split level 142: [/input, 2715] 
split level 143: [/input, 1596] 
split level 144: [/input, 1189] 
split level 145: [/input, 2930] 
split level 146: [/input, 226] 
split level 147: [/input, 2898] 
split level 148: [/input, 4027] 
split level 149: [/input, 4075] 
split level 150: [/input, 3397] 
split level 151: [/input, 2977] 
split level 152: [/input, 2475] 
split level 153: [/input, 690] 
split level 154: [/input, 2913] 
split level 155: [/input, 3297] 
split level 156: [/input, 3266] 
split level 157: [/input-8, 1448] 
split level 158: [/input, 3310] 
split level 159: [/input, 1367] 
split level 160: [/input, 292] 
split level 161: [/input-8, 1400] 
split level 162: [/input, 2464] 
split level 163: [/input, 1088] 
split level 164: [/input-8, 913] 
split level 165: [/input, 1595] 
split level 166: [/input, 1441] 
split level 167: [/input, 2553] 
split level 168: [/input, 2945] 
split level 169: [/input, 2515] 
split level 170: [/input-8, 856] 
split level 171: [/input, 2928] 
split level 172: [/input, 673] 
split level 173: [/input, 3308] 
split level 174: [/input, 2216] 
split level 175: [/input, 1682] 
split level 176: [/input-8, 1912] 
split level 177: [/input-8, 579] 
split level 178: [/input-8, 1137] 
split level 179: [/input, 2183] 
split level 180: [/input, 3232] 
split level 181: [/input, 4026] 
split level 182: [/input, 2994] 
split level 183: [/input-8, 1974] 
split level 184: [/input, 2480] 
split level 185: [/input, 3319] 
split level 186: [/input, 22] 
split level 187: [/input, 2843] 
split level 188: [/input, 1489] 
split level 189: [/input, 3216] 
split level 190: [/input, 2192] 
split level 191: [/input, 3506] 
split level 192: [/input, 3076] 
split level 193: [/input, 1648] 
split level 194: [/input, 2961] 
split level 195: [/input, 2453] 
split level 196: [/input, 2400] 
split level 197: [/input, 2946] 
split level 198: [/input, 2975] 
split level 199: [/input, 2944] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11412644386291504
10 lb beta sum: 0.0, worst -0.11412948369979858
Time: prepare 0.0117    bound 0.0962    transfer 0.0014    finalize 0.0028    func 0.1146    
Accumulated time: func 0.1664    prepare 0.0220    bound 0.1475    transfer 0.0015    finalize 0.0030    
all_split False
======================Cut inference begins======================
max lb tensor(0.25377679) min lb tensor(-0.11412346)
Number of Verified Splits: 6 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.011102914810180664 
BICCOS Cumulative time: 0.011102914810180664
Preprocessing time: 0.010136127471923828 Inference time: 0.0002703666687011719 Add cuts time: 9.584426879882812e-05 Cut analysis time: 0.0006005764007568359
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10323 (1), -0.10322 (1), -0.10258 (1), -0.10253 (1), -0.10239 (1), -0.10214 (1), -0.10202 (1), -0.10190 (1), -0.10184 (1), -0.10125 (1), -0.10074 (1), -0.09905 (1), -0.09812 (1), -0.09754 (1), -0.09714 (1), -0.09656 (1), -0.09614 (1), -0.09574 (1), -0.09571 (1), -0.09492 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5090    set_bounds 0.0088    solve 0.1147    add 0.0695    
Accumulated time: pickout 0.0003    decision 0.5090    set_bounds 0.0088    solve 0.1147    add 0.0695    
Current (lb-rhs): -0.10322880744934082
50 domains visited
Cumulative time: 0.7700138092041016

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1] [/input-12, 1] [/input-12, 15] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] 
split level 1: [/input-12, 15] [/input-12, 15] [/input-12, 26] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] 
split level 2: [/input-12, 26] [/input-12, 26] [/input-12, 6] [/input-12, 26] [/input-12, 26] [/input-12, 6] [/input-12, 6] [/input-12, 26] [/input-12, 26] [/input-12, 26] 
split level 3: [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 6] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08700895309448242

all verified at 4th iter
Time: prepare 0.0085    bound 0.0285    transfer 0.0034    finalize 0.0024    func 0.0453    
Accumulated time: func 0.2117    prepare 0.0307    bound 0.1760    transfer 0.0049    finalize 0.0054    
all_split False
======================Cut inference begins======================
max lb tensor(0.19232965) min lb tensor(0.00054675)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.034250497817993164 
BICCOS Cumulative time: 0.04535341262817383
Preprocessing time: 0.011726140975952148 Inference time: 0.013732194900512695 Add cuts time: 0.00860142707824707 Cut analysis time: 0.00019073486328125
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0249    set_bounds 0.0114    solve 0.0453    add 0.0152    
Accumulated time: pickout 0.0014    decision 0.5339    set_bounds 0.0202    solve 0.1601    add 0.0847    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([26,  1]), tensor([-1., -1.]), tensor([0, 0]), tensor([-5.34986170e-21,  7.87376016e-02]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([26,  1]), tensor([-1.,  1.]), tensor([0, 0]), tensor([-5.34986170e-21,  1.28914878e-01]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([26,  1]), tensor([ 1., -1.]), tensor([0, 0]), tensor([-5.34986170e-21,  7.73036927e-02]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([26,  1]), tensor([1., 1.]), tensor([0, 0]), tensor([-5.34986170e-21,  1.30506352e-01]), tensor([0, 1]))}
Shallow branching resets to n domains:  4
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.005819261074066162

all verified at 0th iter
Time: prepare 0.0004    bound 0.0043    transfer 0.0001    finalize 0.0001    func 0.0049    
Accumulated time: func 0.2166    prepare 0.0311    bound 0.1802    transfer 0.0050    finalize 0.0055    
After pruning, left:  0

Back to Regular BaB


Properties batch 3, size 1
Remaining timeout: 197.53219771385193
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 197.5321295261383
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 197.53210425376892
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.532084941864
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.53206539154053
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.53204655647278
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.4680 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 85, vnnlib ID: 85 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-14.42035007, -11.01566029, -16.78618240, -17.08073235, -15.94405842,
         -18.31308746, -16.60547638, -16.45758438, -12.49265862, -13.06334209]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [534]; unstable size 534; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 198, 1, 534] with unstable size 197 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 534] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 534] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [197]; unstable size 197; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 197] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 197] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.66741228, 3.53291798, 4.23365211, 2.83012867, 5.27459431, 3.79739285,
         3.37452030, 0.14124203, 1.17811859]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0646 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 86, vnnlib ID: 86 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.28128910, -17.14933395, -11.40331554, -14.08204365, -14.06262875,
         -13.41378117, -16.03304672, -13.62230492, -16.91720581, -17.59583473]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [674]; unstable size 674; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 194, 1, 674] with unstable size 193 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 10, 1, 674] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 674] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [193]; unstable size 193; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 10, 1, 193] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 193] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.10949612, 4.45415878, 2.07507944, 2.01375389, 1.43745184, 3.63756824,
         1.59498572, 4.70254755, 5.05546284]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0750 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 87, vnnlib ID: 87 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-7.75811863, -7.24076557, -3.96754313, -3.75479078, -2.71305084,
         -3.64833927, -3.95274568, -3.04537916, -8.23825359, -5.63892746]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [434]; unstable size 434; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 222, 1, 434] with unstable size 221 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 27, 1, 434] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 434] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [221]; unstable size 221; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 27, 1, 221] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 221] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [26]; unstable size 26; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.55352402,  1.36358547, -0.76676691, -0.70900565, -1.60512781,
         -0.78009784, -1.31760669,  2.84528375,  0.56516743]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-7.75811863, -7.24076557, -3.96754313, -3.75479078, -2.71305084,
         -3.64833927, -3.95274568, -3.04537916, -8.23825359, -5.63892746]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.75811815, -7.24076557, -3.96754289, -3.75479031, -2.71305084,
          -3.64833879, -3.95274591, -3.04537868, -8.23825359, -5.63892746],
         [-7.75811815, -7.24076557, -3.96754289, -3.75479031, -2.71305084,
          -3.64833879, -3.95274591, -3.04537868, -8.23825359, -5.63892746]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.92216420,  0.70941162, -0.33232784,  0.60296011,  0.90736723]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.06825387e+00, -1.29047608e+00, -9.25396800e-01,  ...,
            -6.55555546e-01, -8.14285696e-01, -7.50793636e-01],
           [-9.88888860e-01, -1.02063489e+00, -1.00476182e+00,  ...,
            -7.34920621e-01, -1.17936504e+00, -1.02063489e+00],
           [-1.00476182e+00, -7.66666651e-01, -8.14285696e-01,  ...,
            -1.00476182e+00, -1.17936504e+00, -1.09999990e+00],
           ...,
           [-1.51269829e+00, -2.90476084e-01,  9.00000036e-01,  ...,
             5.66666722e-01,  6.77777827e-01,  6.14285767e-01],
           [-7.66666651e-01,  5.98412752e-01,  9.31746066e-01,  ...,
             2.17460394e-01,  2.65079439e-01,  5.50793707e-01],
           [-1.79364979e-01,  9.63492095e-01,  8.84127021e-01,  ...,
             2.96825469e-01,  2.17460394e-01,  5.98412752e-01]],

          [[-9.33977425e-01, -1.27214170e+00, -9.33977425e-01,  ...,
            -7.08534598e-01, -8.85668218e-01, -8.21255982e-01],
           [-8.37359071e-01, -9.98389661e-01, -1.01449275e+00,  ...,
            -7.56843746e-01, -1.20772946e+00, -1.06280184e+00],
           [-8.53462100e-01, -7.40740716e-01, -8.21255982e-01,  ...,
            -9.82286572e-01, -1.15942025e+00, -1.09500802e+00],
           ...,
           [-1.65861523e+00, -5.15297890e-01,  5.95813274e-01,  ...,
             1.93236828e-01,  2.89855182e-01,  1.93236828e-01],
           [-9.17874336e-01,  3.70370477e-01,  6.11916363e-01,  ...,
            -1.93236589e-01, -1.44927412e-01,  1.61030710e-01],
           [-4.18679416e-01,  6.44122481e-01,  5.15298009e-01,  ...,
            -1.28824353e-01, -1.93236589e-01,  1.93236828e-01]],

          [[-6.28185868e-01, -1.06296861e+00, -8.38080943e-01,  ...,
            -5.53223372e-01, -6.88155890e-01, -5.98200858e-01],
           [-6.73163414e-01, -8.68065953e-01, -8.83058429e-01,  ...,
            -5.08245826e-01, -8.98050964e-01, -7.18140900e-01],
           [-6.28185868e-01, -6.13193393e-01, -7.18140900e-01,  ...,
            -7.93103397e-01, -9.28035975e-01, -8.23088408e-01],
           ...,
           [-1.48275876e+00, -7.48125911e-01,  2.11394474e-01,  ...,
             1.49940979e-03,  1.06446937e-01, -1.34930937e-02],
           [-8.98050964e-01,  1.49940979e-03,  1.81409463e-01,  ...,
            -3.73313308e-01, -3.58320802e-01, -1.18440613e-01],
           [-4.63268340e-01,  3.16341996e-01,  1.36431947e-01,  ...,
            -2.83358276e-01, -3.73313308e-01, -4.34781015e-02]]],


         [[[-1.06825387e+00, -1.29047608e+00, -9.25396800e-01,  ...,
            -6.55555546e-01, -8.14285696e-01, -7.50793636e-01],
           [-9.88888860e-01, -1.02063489e+00, -1.00476182e+00,  ...,
            -7.34920621e-01, -1.17936504e+00, -1.02063489e+00],
           [-1.00476182e+00, -7.66666651e-01, -8.14285696e-01,  ...,
            -1.00476182e+00, -1.17936504e+00, -1.09999990e+00],
           ...,
           [-1.51269829e+00, -2.90476084e-01,  9.00000036e-01,  ...,
             5.66666722e-01,  6.77777827e-01,  6.14285767e-01],
           [-7.66666651e-01,  5.98412752e-01,  9.31746066e-01,  ...,
             2.17460394e-01,  2.65079439e-01,  5.50793707e-01],
           [-1.79364979e-01,  9.63492095e-01,  8.84127021e-01,  ...,
             2.96825469e-01,  2.17460394e-01,  5.98412752e-01]],

          [[-9.33977425e-01, -1.27214170e+00, -9.33977425e-01,  ...,
            -7.08534598e-01, -8.85668218e-01, -8.21255982e-01],
           [-8.37359071e-01, -9.98389661e-01, -1.01449275e+00,  ...,
            -7.56843746e-01, -1.20772946e+00, -1.06280184e+00],
           [-8.53462100e-01, -7.40740716e-01, -8.21255982e-01,  ...,
            -9.82286572e-01, -1.15942025e+00, -1.09500802e+00],
           ...,
           [-1.65861523e+00, -5.15297890e-01,  5.95813274e-01,  ...,
             1.93236828e-01,  2.89855182e-01,  1.93236828e-01],
           [-9.17874336e-01,  3.70370477e-01,  6.11916363e-01,  ...,
            -1.93236589e-01, -1.44927412e-01,  1.61030710e-01],
           [-4.18679416e-01,  6.44122481e-01,  5.15298009e-01,  ...,
            -1.28824353e-01, -1.93236589e-01,  1.93236828e-01]],

          [[-6.28185868e-01, -1.06296861e+00, -8.38080943e-01,  ...,
            -5.53223372e-01, -6.88155890e-01, -5.98200858e-01],
           [-6.73163414e-01, -8.68065953e-01, -8.83058429e-01,  ...,
            -5.08245826e-01, -8.98050964e-01, -7.18140900e-01],
           [-6.28185868e-01, -6.13193393e-01, -7.18140900e-01,  ...,
            -7.93103397e-01, -9.28035975e-01, -8.23088408e-01],
           ...,
           [-1.48275876e+00, -7.48125911e-01,  2.11394474e-01,  ...,
             1.49940979e-03,  1.06446937e-01, -1.34930937e-02],
           [-8.98050964e-01,  1.49940979e-03,  1.81409463e-01,  ...,
            -3.73313308e-01, -3.58320802e-01, -1.18440613e-01],
           [-4.63268340e-01,  3.16341996e-01,  1.36431947e-01,  ...,
            -2.83358276e-01, -3.73313308e-01, -4.34781015e-02]]],


         [[[-1.06825387e+00, -1.29047608e+00, -9.25396800e-01,  ...,
            -6.55555546e-01, -8.14285696e-01, -7.50793636e-01],
           [-9.88888860e-01, -1.02063489e+00, -1.00476182e+00,  ...,
            -7.34920621e-01, -1.17936504e+00, -1.02063489e+00],
           [-1.00476182e+00, -7.66666651e-01, -8.14285696e-01,  ...,
            -1.00476182e+00, -1.17936504e+00, -1.09999990e+00],
           ...,
           [-1.51269829e+00, -2.90476084e-01,  9.00000036e-01,  ...,
             5.66666722e-01,  6.77777827e-01,  6.14285767e-01],
           [-7.66666651e-01,  5.98412752e-01,  9.31746066e-01,  ...,
             2.17460394e-01,  2.65079439e-01,  5.50793707e-01],
           [-1.79364979e-01,  9.63492095e-01,  8.84127021e-01,  ...,
             2.96825469e-01,  2.17460394e-01,  5.98412752e-01]],

          [[-9.33977425e-01, -1.27214170e+00, -9.33977425e-01,  ...,
            -7.08534598e-01, -8.85668218e-01, -8.21255982e-01],
           [-8.37359071e-01, -9.98389661e-01, -1.01449275e+00,  ...,
            -7.56843746e-01, -1.20772946e+00, -1.06280184e+00],
           [-8.53462100e-01, -7.40740716e-01, -8.21255982e-01,  ...,
            -9.82286572e-01, -1.15942025e+00, -1.09500802e+00],
           ...,
           [-1.65861523e+00, -5.15297890e-01,  5.95813274e-01,  ...,
             1.93236828e-01,  2.89855182e-01,  1.93236828e-01],
           [-9.17874336e-01,  3.70370477e-01,  6.11916363e-01,  ...,
            -1.93236589e-01, -1.44927412e-01,  1.61030710e-01],
           [-4.18679416e-01,  6.44122481e-01,  5.15298009e-01,  ...,
            -1.28824353e-01, -1.93236589e-01,  1.93236828e-01]],

          [[-6.28185868e-01, -1.06296861e+00, -8.38080943e-01,  ...,
            -5.53223372e-01, -6.88155890e-01, -5.98200858e-01],
           [-6.73163414e-01, -8.68065953e-01, -8.83058429e-01,  ...,
            -5.08245826e-01, -8.98050964e-01, -7.18140900e-01],
           [-6.28185868e-01, -6.13193393e-01, -7.18140900e-01,  ...,
            -7.93103397e-01, -9.28035975e-01, -8.23088408e-01],
           ...,
           [-1.48275876e+00, -7.48125911e-01,  2.11394474e-01,  ...,
             1.49940979e-03,  1.06446937e-01, -1.34930937e-02],
           [-8.98050964e-01,  1.49940979e-03,  1.81409463e-01,  ...,
            -3.73313308e-01, -3.58320802e-01, -1.18440613e-01],
           [-4.63268340e-01,  3.16341996e-01,  1.36431947e-01,  ...,
            -2.83358276e-01, -3.73313308e-01, -4.34781015e-02]]],


         [[[-1.06825387e+00, -1.29047608e+00, -9.25396800e-01,  ...,
            -6.55555546e-01, -8.14285696e-01, -7.50793636e-01],
           [-9.88888860e-01, -1.02063489e+00, -1.00476182e+00,  ...,
            -7.34920621e-01, -1.17936504e+00, -1.02063489e+00],
           [-1.00476182e+00, -7.66666651e-01, -8.14285696e-01,  ...,
            -1.00476182e+00, -1.17936504e+00, -1.09999990e+00],
           ...,
           [-1.51269829e+00, -2.90476084e-01,  9.00000036e-01,  ...,
             5.66666722e-01,  6.77777827e-01,  6.14285767e-01],
           [-7.66666651e-01,  5.98412752e-01,  9.31746066e-01,  ...,
             2.17460394e-01,  2.65079439e-01,  5.50793707e-01],
           [-1.79364979e-01,  9.63492095e-01,  8.84127021e-01,  ...,
             2.96825469e-01,  2.17460394e-01,  5.98412752e-01]],

          [[-9.33977425e-01, -1.27214170e+00, -9.33977425e-01,  ...,
            -7.08534598e-01, -8.85668218e-01, -8.21255982e-01],
           [-8.37359071e-01, -9.98389661e-01, -1.01449275e+00,  ...,
            -7.56843746e-01, -1.20772946e+00, -1.06280184e+00],
           [-8.53462100e-01, -7.40740716e-01, -8.21255982e-01,  ...,
            -9.82286572e-01, -1.15942025e+00, -1.09500802e+00],
           ...,
           [-1.65861523e+00, -5.15297890e-01,  5.95813274e-01,  ...,
             1.93236828e-01,  2.89855182e-01,  1.93236828e-01],
           [-9.17874336e-01,  3.70370477e-01,  6.11916363e-01,  ...,
            -1.93236589e-01, -1.44927412e-01,  1.61030710e-01],
           [-4.18679416e-01,  6.44122481e-01,  5.15298009e-01,  ...,
            -1.28824353e-01, -1.93236589e-01,  1.93236828e-01]],

          [[-6.28185868e-01, -1.06296861e+00, -8.38080943e-01,  ...,
            -5.53223372e-01, -6.88155890e-01, -5.98200858e-01],
           [-6.73163414e-01, -8.68065953e-01, -8.83058429e-01,  ...,
            -5.08245826e-01, -8.98050964e-01, -7.18140900e-01],
           [-6.28185868e-01, -6.13193393e-01, -7.18140900e-01,  ...,
            -7.93103397e-01, -9.28035975e-01, -8.23088408e-01],
           ...,
           [-1.48275876e+00, -7.48125911e-01,  2.11394474e-01,  ...,
             1.49940979e-03,  1.06446937e-01, -1.34930937e-02],
           [-8.98050964e-01,  1.49940979e-03,  1.81409463e-01,  ...,
            -3.73313308e-01, -3.58320802e-01, -1.18440613e-01],
           [-4.63268340e-01,  3.16341996e-01,  1.36431947e-01,  ...,
            -2.83358276e-01, -3.73313308e-01, -4.34781015e-02]]],


         [[[-1.06825387e+00, -1.29047608e+00, -9.25396800e-01,  ...,
            -6.55555546e-01, -8.14285696e-01, -7.50793636e-01],
           [-9.88888860e-01, -1.02063489e+00, -1.00476182e+00,  ...,
            -7.34920621e-01, -1.17936504e+00, -1.02063489e+00],
           [-1.00476182e+00, -7.66666651e-01, -8.14285696e-01,  ...,
            -1.00476182e+00, -1.17936504e+00, -1.09999990e+00],
           ...,
           [-1.51269829e+00, -2.90476084e-01,  9.00000036e-01,  ...,
             5.66666722e-01,  6.77777827e-01,  6.14285767e-01],
           [-7.66666651e-01,  5.98412752e-01,  9.31746066e-01,  ...,
             2.17460394e-01,  2.65079439e-01,  5.50793707e-01],
           [-1.79364979e-01,  9.63492095e-01,  8.84127021e-01,  ...,
             2.96825469e-01,  2.17460394e-01,  5.98412752e-01]],

          [[-9.33977425e-01, -1.27214170e+00, -9.33977425e-01,  ...,
            -7.08534598e-01, -8.85668218e-01, -8.21255982e-01],
           [-8.37359071e-01, -9.98389661e-01, -1.01449275e+00,  ...,
            -7.56843746e-01, -1.20772946e+00, -1.06280184e+00],
           [-8.53462100e-01, -7.40740716e-01, -8.21255982e-01,  ...,
            -9.82286572e-01, -1.15942025e+00, -1.09500802e+00],
           ...,
           [-1.65861523e+00, -5.15297890e-01,  5.95813274e-01,  ...,
             1.93236828e-01,  2.89855182e-01,  1.93236828e-01],
           [-9.17874336e-01,  3.70370477e-01,  6.11916363e-01,  ...,
            -1.93236589e-01, -1.44927412e-01,  1.61030710e-01],
           [-4.18679416e-01,  6.44122481e-01,  5.15298009e-01,  ...,
            -1.28824353e-01, -1.93236589e-01,  1.93236828e-01]],

          [[-6.28185868e-01, -1.06296861e+00, -8.38080943e-01,  ...,
            -5.53223372e-01, -6.88155890e-01, -5.98200858e-01],
           [-6.73163414e-01, -8.68065953e-01, -8.83058429e-01,  ...,
            -5.08245826e-01, -8.98050964e-01, -7.18140900e-01],
           [-6.28185868e-01, -6.13193393e-01, -7.18140900e-01,  ...,
            -7.93103397e-01, -9.28035975e-01, -8.23088408e-01],
           ...,
           [-1.48275876e+00, -7.48125911e-01,  2.11394474e-01,  ...,
             1.49940979e-03,  1.06446937e-01, -1.34930937e-02],
           [-8.98050964e-01,  1.49940979e-03,  1.81409463e-01,  ...,
            -3.73313308e-01, -3.58320802e-01, -1.18440613e-01],
           [-4.63268340e-01,  3.16341996e-01,  1.36431947e-01,  ...,
            -2.83358276e-01, -3.73313308e-01, -4.34781015e-02]]]]],
       device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0767 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 88, vnnlib ID: 88 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.13618565, -7.95294571, -3.64413977, -3.37936306, -3.17752457,
         -3.15863037, -5.09549570, -2.59429359, -6.38139343, -5.47579718]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [416]; unstable size 416; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 168, 1, 416] with unstable size 167 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 416] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 416] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [167]; unstable size 167; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 167] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 167] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.65106153,  3.34274721, -0.95804226, -1.22589207, -1.23296714,
          0.48913860, -2.05695391,  1.96782136,  0.53511143]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.13618565, -7.95294571, -3.64413977, -3.37936306, -3.17752457,
         -3.15863037, -5.09549570, -2.59429359, -6.38139343, -5.47579718]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.13618565, -7.95294476, -3.64413953, -3.37936282, -3.17752457,
          -3.15863037, -5.09549522, -2.59429312, -6.38139343, -5.47579718],
         [-6.13618565, -7.95294476, -3.64413953, -3.37936282, -3.17752457,
          -3.15863037, -5.09549522, -2.59429312, -6.38139343, -5.47579718]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.26477671, -0.46661496, -0.48550916, -1.04984641]]],
       device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0743 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 89, vnnlib ID: 89 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.58886576, -2.20369244, -8.07431412, -7.83337307, -7.94223309,
         -9.24308968, -8.43767738, -8.89227295, -3.14519000, -4.67166090]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [472]; unstable size 472; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 211, 1, 472] with unstable size 210 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 472] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 472] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [210]; unstable size 210; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 210] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 210] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.69297838,  3.94914913,  3.92555141,  4.07342052,  5.17004442,
          4.61110973,  4.71607924, -0.48206663,  1.52207327]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.58886576, -2.20369244, -8.07431412, -7.83337307, -7.94223309,
         -9.24308968, -8.43767738, -8.89227295, -3.14519000, -4.67166090]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.14it/s]100%|██████████| 1/1 [00:00<00:00,  9.13it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.60659981, -2.84582663, -8.02860737, -7.76232910, -7.95765686,
          -9.17981625, -8.46953678, -8.89545727, -2.92662191, -5.02388382]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.08079529]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1123 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 29.900592803955078
alpha/beta optimization time: 1.1749038696289062
initial alpha-crown bounds: tensor([[ 1.81915092,  4.04639530,  4.01018715,  4.15022850,  5.26251221,
          4.67265844,  4.80006504, -0.42643023,  1.56582558]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.42643022537231445
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.65138339996338
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.65133953094482
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.65131306648254
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.65129160881042
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.65127301216125
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.6512529850006
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 198.65123462677002
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 198.6512143611908
Verifying property 7 with 1 instances.
##### Instance 89 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.42643023]], device='cuda:0') need to verify.
Model prediction is: tensor([-5.58886576, -2.20369244, -8.07431412, -7.83337307, -7.94223309,
        -9.24308968, -8.43767738, -8.89227295, -3.14519000, -4.67166090],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.42643023]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 472
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 206
Node /15 input 0: size torch.Size([100]) unstable 18
-----------------
# of unstable neurons: 696
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011968612670898438
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.42643165588378906
10 lb beta sum: 0.0, worst -0.42643117904663086
Time: prepare 0.0002    bound 0.0857    transfer 0.0001    finalize 0.0001    func 0.0861    
Accumulated time: func 0.0861    prepare 0.0002    bound 0.0857    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 21] 
split level 1: [/input-12, 35] 
split level 2: [/input-12, 80] 
split level 3: [/input-12, 74] 
split level 4: [/input-12, 10] 
split level 5: [/input-12, 11] 
split level 6: [/input-12, 60] 
split level 7: [/input-12, 54] 
split level 8: [/input-12, 1] 
split level 9: [/input-12, 6] 
split level 10: [/input-12, 93] 
split level 11: [/input-8, 827] 
split level 12: [/input-8, 1075] 
split level 13: [/input-8, 684] 
split level 14: [/input-8, 812] 
split level 15: [/input-8, 106] 
split level 16: [/input-8, 1126] 
split level 17: [/input-8, 1074] 
split level 18: [/input-8, 1611] 
split level 19: [/input, 2725] 
split level 20: [/input-8, 66] 
split level 21: [/input-8, 844] 
split level 22: [/input-8, 852] 
split level 23: [/input-8, 1331] 
split level 24: [/input-8, 1077] 
split level 25: [/input-8, 65] 
split level 26: [/input-8, 678] 
split level 27: [/input, 226] 
split level 28: [/input, 1790] 
split level 29: [/input-8, 64] 
split level 30: [/input-8, 403] 
split level 31: [/input, 2726] 
split level 32: [/input-8, 270] 
split level 33: [/input-8, 793] 
split level 34: [/input-8, 1026] 
split level 35: [/input-8, 861] 
split level 36: [/input-8, 817] 
split level 37: [/input-8, 1332] 
split level 38: [/input, 481] 
split level 39: [/input-8, 75] 
split level 40: [/input-8, 85] 
split level 41: [/input, 3190] 
split level 42: [/input, 2135] 
split level 43: [/input-8, 108] 
split level 44: [/input, 3994] 
split level 45: [/input, 2422] 
split level 46: [/input, 3191] 
split level 47: [/input, 800] 
split level 48: [/input, 435] 
split level 49: [/input, 3158] 
split level 50: [/input-8, 87] 
split level 51: [/input-8, 1629] 
split level 52: [/input, 2133] 
split level 53: [/input-8, 1838] 
split level 54: [/input, 2421] 
split level 55: [/input, 635] 
split level 56: [/input, 436] 
split level 57: [/input, 2392] 
split level 58: [/input, 2137] 
split level 59: [/input-8, 1734] 
split level 60: [/input, 3160] 
split level 61: [/input, 2423] 
split level 62: [/input, 3173] 
split level 63: [/input, 1651] 
split level 64: [/input, 2425] 
split level 65: [/input-8, 72] 
split level 66: [/input, 2410] 
split level 67: [/input, 3192] 
split level 68: [/input, 784] 
split level 69: [/input-8, 1618] 
split level 70: [/input-8, 1943] 
split level 71: [/input-8, 1847] 
split level 72: [/input-8, 1521] 
split level 73: [/input, 449] 
split level 74: [/input-8, 970] 
split level 75: [/input-8, 110] 
split level 76: [/input-8, 1870] 
split level 77: [/input-8, 1392] 
split level 78: [/input-8, 1935] 
split level 79: [/input-8, 67] 
split level 80: [/input, 3976] 
split level 81: [/input, 2028] 
split level 82: [/input, 225] 
split level 83: [/input, 2393] 
split level 84: [/input, 1655] 
split level 85: [/input-8, 432] 
split level 86: [/input, 3418] 
split level 87: [/input, 2027] 
split level 88: [/input, 3995] 
split level 89: [/input, 3161] 
split level 90: [/input, 1756] 
split level 91: [/input, 1653] 
split level 92: [/input-8, 1027] 
split level 93: [/input, 2420] 
split level 94: [/input, 4051] 
split level 95: [/input-8, 846] 
split level 96: [/input, 1192] 
split level 97: [/input-8, 86] 
split level 98: [/input-8, 1046] 
split level 99: [/input, 832] 
split level 100: [/input, 2030] 
split level 101: [/input, 1657] 
split level 102: [/input, 2388] 
split level 103: [/input, 2394] 
split level 104: [/input, 1652] 
split level 105: [/input, 1654] 
split level 106: [/input-8, 961] 
split level 107: [/input-8, 1445] 
split level 108: [/input, 2131] 
split level 109: [/input, 3207] 
split level 110: [/input-8, 1642] 
split level 111: [/input-8, 1861] 
split level 112: [/input, 163] 
split level 113: [/input, 843] 
split level 114: [/input, 2013] 
split level 115: [/input, 1656] 
split level 116: [/input, 3188] 
split level 117: [/input-8, 600] 
split level 118: [/input-8, 452] 
split level 119: [/input-8, 445] 
split level 120: [/input-8, 439] 
split level 121: [/input, 1055] 
split level 122: [/input-8, 1937] 
split level 123: [/input-8, 1034] 
split level 124: [/input, 3746] 
split level 125: [/input, 2014] 
split level 126: [/input, 4016] 
split level 127: [/input, 1619] 
split level 128: [/input, 424] 
split level 129: [/input, 3203] 
split level 130: [/input, 2225] 
split level 131: [/input-8, 1454] 
split level 132: [/input-8, 1035] 
split level 133: [/input, 1770] 
split level 134: [/input, 544] 
split level 135: [/input, 3143] 
split level 136: [/input-8, 615] 
split level 137: [/input, 2268] 
split level 138: [/input, 2292] 
split level 139: [/input-8, 1588] 
split level 140: [/input-8, 962] 
split level 141: [/input, 4002] 
split level 142: [/input, 2047] 
split level 143: [/input, 950] 
split level 144: [/input-8, 408] 
split level 145: [/input, 3144] 
split level 146: [/input-8, 504] 
split level 147: [/input, 2183] 
split level 148: [/input, 1288] 
split level 149: [/input, 2156] 
split level 150: [/input, 2877] 
split level 151: [/input-8, 1090] 
split level 152: [/input, 3810] 
split level 153: [/input, 1800] 
split level 154: [/input, 810] 
split level 155: [/input, 2122] 
split level 156: [/input, 2841] 
split level 157: [/input, 1934] 
split level 158: [/input-8, 394] 
split level 159: [/input, 1853] 
split level 160: [/input-8, 1493] 
split level 161: [/input-8, 971] 
split level 162: [/input-8, 983] 
split level 163: [/input, 3458] 
split level 164: [/input-8, 258] 
split level 165: [/input, 179] 
split level 166: [/input-8, 1644] 
split level 167: [/input, 517] 
split level 168: [/input-8, 1831] 
split level 169: [/input, 1997] 
split level 170: [/input, 2140] 
split level 171: [/input-8, 1729] 
split level 172: [/input, 2359] 
split level 173: [/input-8, 81] 
split level 174: [/input, 1950] 
split level 175: [/input, 1111] 
split level 176: [/input, 1533] 
split level 177: [/input, 2172] 
split level 178: [/input, 2700] 
split level 179: [/input, 1981] 
split level 180: [/input, 3828] 
split level 181: [/input-8, 1852] 
split level 182: [/input, 2143] 
split level 183: [/input-8, 833] 
split level 184: [/input, 3613] 
split level 185: [/input, 2177] 
split level 186: [/input, 2344] 
split level 187: [/input, 2435] 
split level 188: [/input, 1966] 
split level 189: [/input, 3745] 
split level 190: [/input-8, 692] 
split level 191: [/input, 2328] 
split level 192: [/input, 2556] 
split level 193: [/input, 3646] 
split level 194: [/input, 3080] 
split level 195: [/input, 3255] 
split level 196: [/input, 849] 
split level 197: [/input, 1982] 
split level 198: [/input, 1998] 
split level 199: [/input-8, 1227] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4264078140258789
10 lb beta sum: 0.0, worst -0.4264187812805176
Time: prepare 0.0118    bound 0.0972    transfer 0.0018    finalize 0.0028    func 0.1162    
Accumulated time: func 0.2024    prepare 0.0219    bound 0.1828    transfer 0.0019    finalize 0.0030    
all_split False
======================Cut inference begins======================
max lb tensor(0.19880438) min lb tensor(-0.42640781)
Number of Verified Splits: 3 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.010698795318603516 
BICCOS Cumulative time: 0.010698795318603516
Preprocessing time: 0.010204553604125977 Inference time: 0.00016498565673828125 Add cuts time: 8.654594421386719e-05 Cut analysis time: 0.00024271011352539062
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.41316 (1), -0.41290 (1), -0.41276 (1), -0.41251 (1), -0.41246 (1), -0.41178 (1), -0.41117 (1), -0.41097 (1), -0.41088 (1), -0.41058 (1), -0.41009 (1), -0.40992 (1), -0.40989 (1), -0.40921 (1), -0.40902 (1), -0.40866 (1), -0.40837 (1), -0.40821 (1), -0.40724 (1), -0.40678 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5116    set_bounds 0.0125    solve 0.1163    add 0.0683    
Accumulated time: pickout 0.0003    decision 0.5116    set_bounds 0.0125    solve 0.1163    add 0.0683    
Current (lb-rhs): -0.4131631851196289
50 domains visited
Cumulative time: 0.8174178600311279

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 35] [/input-12, 21] [/input-12, 21] [/input-12, 21] [/input-12, 35] [/input-12, 21] [/input-12, 21] [/input-12, 21] [/input-12, 21] [/input-12, 21] 
split level 1: [/input-12, 60] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 11] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] 
split level 2: [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 60] [/input-12, 60] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] 
split level 3: [/input-12, 1] [/input-12, 60] [/input-12, 60] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 60] [/input-12, 60] [/input-12, 60] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4112510681152344
10 lb beta sum: 0.5693191885948181, worst -0.38773423433303833
Time: prepare 0.0081    bound 0.1163    transfer 0.0010    finalize 0.0026    func 0.1307    
Accumulated time: func 0.3331    prepare 0.0303    bound 0.2992    transfer 0.0029    finalize 0.0056    
all_split False
======================Cut inference begins======================
max lb tensor(0.58580673) min lb tensor(-0.38761294)
Number of Verified Splits: 59 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.01589512825012207 
BICCOS Cumulative time: 0.026593923568725586
Preprocessing time: 0.011904478073120117 Inference time: 0.00215911865234375 Add cuts time: 0.0014879703521728516 Cut analysis time: 0.00034356117248535156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10938 (2), -0.10823 (2), -0.10765 (2), -0.10728 (2), -0.10569 (2), -0.10527 (2), -0.10464 (2), -0.10422 (2), -0.10362 (2), -0.10325 (2), -0.10080 (2), -0.10051 (2), -0.09948 (2), -0.09926 (2), -0.09747 (2), -0.09679 (2), -0.09669 (2), -0.09646 (2), -0.09620 (2), -0.09377 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0197    set_bounds 0.0120    solve 0.1308    add 0.0809    
Accumulated time: pickout 0.0014    decision 0.5313    set_bounds 0.0245    solve 0.2471    add 0.1492    
Current (lb-rhs): -0.10937660932540894
100 domains visited
Cumulative time: 1.0780422687530518

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 21] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 21] [/input-12, 35] [/input-12, 35] [/input-12, 35] 
split level 1: [/input-12, 10] [/input-12, 60] [/input-12, 11] [/input-12, 11] [/input-12, 10] [/input-12, 60] [/input-12, 10] [/input-12, 60] [/input-12, 10] [/input-12, 60] 
split level 2: [/input-12, 11] [/input-12, 11] [/input-12, 1] [/input-12, 60] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] 
split level 3: [/input-12, 1] [/input-12, 1] [/input-12, 6] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13401412963867188
10 lb beta sum: 1.2086396217346191, worst -0.07549935579299927
Time: prepare 0.0082    bound 0.1148    transfer 0.0008    finalize 0.0024    func 0.1288    
Accumulated time: func 0.4619    prepare 0.0388    bound 0.4140    transfer 0.0037    finalize 0.0079    
all_split False
======================Cut inference begins======================
max lb tensor(0.34441668) min lb tensor(-0.07277387)
Number of Verified Splits: 387 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 7
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.03776383399963379 
BICCOS Cumulative time: 0.06435775756835938
Preprocessing time: 0.011789560317993164 Inference time: 0.016209125518798828 Add cuts time: 0.009430646896362305 Cut analysis time: 0.0003345012664794922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07277 (3), -0.04744 (3), -0.03877 (3), -0.03626 (3), 
Length of domains: 4
Time: pickout 0.0011    decision 0.0198    set_bounds 0.0156    solve 0.1289    add 0.1042    
Accumulated time: pickout 0.0025    decision 0.5511    set_bounds 0.0401    solve 0.3761    add 0.2534    
Current (lb-rhs): -0.07277387380599976
104 domains visited
Cumulative time: 1.385558843612671

Shallow-BaB round 4
batch: 4
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 80] 
split level 1: [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 74] 
split level 2: [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 10] 
split level 3: [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 11] 
split level 4: [/input-12, 60] [/input-12, 11] [/input-12, 11] [/input-12, 60] 
split level 5: [/input-12, 1] [/input-12, 1] [/input-12, 60] [/input-12, 1] 
split level 6: [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] 
split level 7: [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] 
split level 8: [/input-8, 827] [/input-8, 827] [/input-8, 827] [/input-8, 827] 
split level 9: [/input-8, 1075] [/input-8, 1075] [/input-8, 1075] [/input-8, 1075] 
split level 10: [/input-8, 684] [/input-8, 684] [/input-8, 684] [/input-8, 684] 
split level 11: [/input-8, 812] [/input-8, 812] [/input-8, 812] [/input-8, 812] 
split level 12: [/input-8, 1074] [/input-8, 1074] [/input-8, 1074] [/input-8, 1074] 
split level 13: [/input-8, 106] [/input-8, 106] [/input-8, 106] [/input-8, 106] 
split level 14: [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] 
split level 15: [/input-8, 844] [/input-8, 844] [/input-8, 844] [/input-8, 844] 
split level 16: [/input-8, 678] [/input-8, 678] [/input, 1790] [/input-8, 678] 
split level 17: [/input, 1790] [/input, 1790] [/input, 2726] [/input, 1790] 
split level 18: [/input, 2726] [/input, 2726] [/input-8, 403] [/input, 2726] 
split level 19: [/input-8, 1332] [/input-8, 403] [/input-8, 1332] [/input-8, 403] 
split level 20: [/input-8, 270] [/input-8, 270] [/input-8, 270] [/input-8, 1332] 
split level 21: [/input-8, 403] [/input-8, 1332] [/input, 481] [/input-8, 270] 
split level 22: [/input, 481] [/input, 481] [/input, 3158] [/input, 481] 
split level 23: [/input, 3158] [/input, 3158] [/input, 2133] [/input, 3158] 
split level 24: [/input-8, 1734] [/input, 2133] [/input-8, 1734] [/input, 2133] 
split level 25: [/input, 2422] [/input-8, 1734] [/input, 2392] [/input-8, 1734] 
split level 26: [/input, 2133] [/input, 635] [/input, 449] [/input, 449] 
split level 27: [/input, 449] [/input, 449] [/input, 635] [/input, 635] 
split level 28: [/input-8, 1618] [/input-8, 1618] [/input, 3173] [/input, 3173] 
split level 29: [/input, 3173] [/input-8, 1629] [/input-8, 1618] [/input-8, 1618] 
split level 30: [/input, 635] [/input, 3173] [/input-8, 1629] [/input-8, 1629] 
split level 31: [/input-8, 1629] [/input-8, 1861] [/input-8, 1861] [/input-8, 1861] 
split level 32: [/input-8, 1861] [/input-8, 1046] [/input-8, 1046] [/input-8, 1046] 
split level 33: [/input-8, 1046] [/input, 2388] [/input-8, 846] [/input, 2388] 
split level 34: [/input, 2388] [/input-8, 1445] [/input-8, 1445] [/input-8, 846] 
split level 35: [/input-8, 846] [/input, 163] [/input, 2388] [/input-8, 1937] 
split level 36: [/input-8, 1445] [/input-8, 846] [/input-8, 1937] [/input, 2131] 
split level 37: [/input-8, 1937] [/input-8, 1937] [/input, 2131] [/input, 163] 
split level 38: [/input, 163] [/input, 2131] [/input, 163] [/input, 1653] 
split level 39: [/input, 2131] [/input, 1653] [/input, 1655] [/input-8, 1445] 
split level 40: [/input, 1653] [/input, 1756] [/input, 1653] [/input, 1655] 
split level 41: [/input, 1655] [/input, 1655] [/input, 1756] [/input, 1756] 
split level 42: [/input, 1756] [/input, 1619] [/input, 1619] [/input, 1619] 
split level 43: [/input, 1619] [/input, 1654] [/input, 1654] [/input, 1654] 
split level 44: [/input, 1654] [/input-8, 394] [/input, 2268] [/input, 2268] 
split level 45: [/input, 2268] [/input, 2268] [/input, 2359] [/input, 2359] 
split level 46: [/input, 2359] [/input, 2359] [/input, 2115] [/input, 3255] 
split level 47: [/input, 2115] [/input, 3255] [/input, 3255] [/input, 2115] 
split level 48: [/input, 3255] [/input, 2115] [/input, 2386] [/input, 2386] 
split level 49: [/input, 2386] [/input, 2386] [/input, 1604] [/input, 1604] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09569263458251953
10 lb beta sum: 1.1732605695724487, worst -0.00615498423576355

all verified at 11th iter
Time: prepare 0.0086    bound 0.0679    transfer 0.0008    finalize 0.0025    func 0.0823    
Accumulated time: func 0.5442    prepare 0.0499    bound 0.4818    transfer 0.0045    finalize 0.0104    
all_split False
======================Cut inference begins======================
max lb tensor(0.43087453) min lb tensor(0.00243902)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.03732132911682129 
BICCOS Cumulative time: 0.10167908668518066
Preprocessing time: 0.011487483978271484 Inference time: 0.017450332641601562 Add cuts time: 0.008055925369262695 Cut analysis time: 0.0003275871276855469
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0006    decision 0.1362    set_bounds 0.0118    solve 0.0824    add 0.0237    
Accumulated time: pickout 0.0031    decision 0.6873    set_bounds 0.0518    solve 0.4584    add 0.2771    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
104 domains visited
No domains left, MTS early stop!
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([93]), tensor([-1.]), tensor([0]), tensor([-5.34986170e-21]), tensor([0]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([93, 21, 35, 80]), tensor([ 1., -1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([2.04339075e-16, 1.52624622e-01, 2.07866891e-03, 1.33383736e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([93, 21, 35, 80]), tensor([ 1., -1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([2.04339075e-16, 1.52624622e-01, 2.07866891e-03, 1.06299236e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([93, 21, 35]), tensor([ 1., -1.,  1.]), tensor([0, 0, 0]), tensor([2.04339075e-16, 1.52624622e-01, 1.45448282e-01]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([93, 21]), tensor([1., 1.]), tensor([0, 0]), tensor([2.04339075e-16, 2.89281905e-01]), tensor([0, 1]))}
Shallow branching resets to n domains:  5
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4164590835571289
10 lb beta sum: 1.2698882818222046, worst -0.25038942694664
Time: prepare 0.0004    bound 0.1162    transfer 0.0001    finalize 0.0002    func 0.1170    
Accumulated time: func 0.6612    prepare 0.0502    bound 0.5981    transfer 0.0047    finalize 0.0106    
After pruning, left:  1

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 21] 
split level 1: [/input-12, 35] 
split level 2: [/input-12, 74] 
split level 3: [/input-12, 10] 
split level 4: [/input-12, 11] 
split level 5: [/input-12, 60] 
split level 6: [/input-12, 1] 
split level 7: [/input-12, 6] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4877811670303345, worst -0.09555256366729736
10 lb beta sum: 1.4877811670303345, worst -0.09479820728302002
Time: prepare 0.0099    bound 0.1102    transfer 0.0009    finalize 0.0013    func 0.1242    
Accumulated time: func 0.7853    prepare 0.0606    bound 0.7083    transfer 0.0056    finalize 0.0119    
all_split False
======================Cut inference begins======================
max lb tensor(1.24170387) min lb tensor(-0.09455788)
Number of Verified Splits: 251 of 256
Stop inferencing: Max iteration reached.
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.0003190040588378906 
BICCOS Cumulative time: 0.10199809074401855
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09456 (8), -0.05371 (8), -0.03189 (8), -0.01183 (8), -0.00284 (8), 
Length of domains: 5
Time: pickout 0.0004    decision 0.0214    set_bounds 0.0211    solve 0.1243    add 0.0006    
Accumulated time: pickout 0.0035    decision 0.7087    set_bounds 0.0730    solve 0.5827    add 0.2777    
Current (lb-rhs): -0.09455788135528564
109 domains visited
Cumulative time: 1.9753458499908447

BaB round 2
batch: 5
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] 
split level 1: [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] 
split level 2: [/input-8, 1075] [/input-8, 827] [/input-8, 1075] [/input-8, 1075] [/input-8, 827] 
split level 3: [/input-8, 684] [/input-8, 684] [/input-8, 684] [/input-8, 684] [/input-8, 684] 
split level 4: [/input-8, 812] [/input-8, 812] [/input-8, 812] [/input-8, 812] [/input-8, 812] 
split level 5: [/input-8, 106] [/input-8, 106] [/input-8, 106] [/input-8, 106] [/input-8, 1332] 
cut re-enabled after branching node selection
0 lb beta sum: 1.487781286239624, worst -0.06210291385650635
10 lb beta sum: 1.487781286239624, worst -0.06163942813873291
Time: prepare 0.0143    bound 0.1126    transfer 0.0006    finalize 0.0016    func 0.1311    
Accumulated time: func 0.9164    prepare 0.0752    bound 0.8209    transfer 0.0062    finalize 0.0135    
all_split False
======================Cut inference begins======================
max lb tensor(0.50133598) min lb tensor(-0.06143248)
Number of Verified Splits: 299 of 320
Stop inferencing: Max iteration reached.
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.0004229545593261719 
BICCOS Cumulative time: 0.10242104530334473
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06143 (14), -0.05436 (14), -0.05300 (14), -0.05096 (14), -0.04841 (14), -0.04039 (14), -0.03972 (14), -0.03670 (14), -0.02139 (14), -0.01823 (14), -0.01771 (14), -0.01588 (14), -0.01555 (14), -0.01417 (14), -0.01090 (14), -0.00909 (14), -0.00787 (14), -0.00376 (14), -0.00201 (14), -0.00169 (14), 
Length of domains: 21
Time: pickout 0.0007    decision 0.0178    set_bounds 0.0269    solve 0.1312    add 0.0010    
Accumulated time: pickout 0.0042    decision 0.7265    set_bounds 0.0999    solve 0.7139    add 0.2787    
Current (lb-rhs): -0.061432480812072754
130 domains visited
Cumulative time: 2.1545963287353516

BaB round 3
batch: 21
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 827] [/input-8, 827] [/input-8, 827] [/input-8, 827] [/input-8, 827] [/input-8, 827] [/input-8, 827] [/input-8, 827] [/input-8, 827] [/input-8, 827] 
split level 1: [/input-8, 1074] [/input-8, 1074] [/input-8, 1074] [/input-8, 1074] [/input-8, 1074] [/input-8, 1074] [/input-8, 1074] [/input-8, 1074] [/input-8, 1074] [/input-8, 1074] 
split level 2: [/input-8, 108] [/input-8, 1332] [/input-8, 1332] [/input-8, 1332] [/input-8, 1332] [/input-8, 1332] [/input-8, 1332] [/input-8, 1332] [/input-8, 1332] [/input-8, 1332] 
split level 3: [/input-8, 1332] [/input-8, 861] [/input-8, 108] [/input-8, 108] [/input-8, 861] [/input-8, 108] [/input-8, 861] [/input-8, 108] [/input-8, 861] [/input-8, 108] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4877811670303345, worst -0.04736435413360596
10 lb beta sum: 1.4877811670303345, worst -0.04707920551300049
Time: prepare 0.0149    bound 0.1186    transfer 0.0015    finalize 0.1598    func 0.2969    
Accumulated time: func 1.2133    prepare 0.0903    bound 0.9395    transfer 0.0076    finalize 0.1732    
all_split False
======================Cut inference begins======================
max lb tensor(0.06531370) min lb tensor(-0.04691756)
Number of Verified Splits: 269 of 336
Stop inferencing: Max iteration reached.
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.0005528926849365234 
BICCOS Cumulative time: 0.10297393798828125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04692 (18), -0.04513 (18), -0.04314 (18), -0.04191 (18), -0.03987 (18), -0.03901 (18), -0.03822 (18), -0.03580 (18), -0.03566 (18), -0.03531 (18), -0.03512 (18), -0.03467 (18), -0.03432 (18), -0.03380 (18), -0.03340 (18), -0.03333 (18), -0.03255 (18), -0.03243 (18), -0.03227 (18), -0.03113 (18), 
Length of domains: 67
Time: pickout 0.0013    decision 0.0170    set_bounds 0.0189    solve 0.2970    add 0.0020    
Accumulated time: pickout 0.0055    decision 0.7434    set_bounds 0.1187    solve 1.0109    add 0.2807    
Current (lb-rhs): -0.04691755771636963
197 domains visited
Cumulative time: 2.4928581714630127

BaB round 4
batch: 67
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 817] [/input-8, 817] [/input-8, 817] [/input-8, 817] [/input-8, 403] [/input-8, 403] [/input-8, 403] [/input-8, 403] [/input-8, 817] [/input-8, 817] 
split level 1: [/input-8, 270] [/input-8, 270] [/input-8, 270] [/input-8, 270] [/input-8, 270] [/input-8, 270] [/input-8, 270] [/input-8, 270] [/input-8, 270] [/input-8, 270] 
cut re-enabled after branching node selection
0 lb beta sum: 1.487781047821045, worst -0.04108250141143799
10 lb beta sum: 1.487781047821045, worst -0.040909409523010254
Time: prepare 0.0120    bound 0.1162    transfer 0.0016    finalize 0.0014    func 0.1330    
Accumulated time: func 1.3463    prepare 0.1025    bound 1.0557    transfer 0.0092    finalize 0.1746    
all_split False
======================Cut inference begins======================
max lb tensor(0.01042545) min lb tensor(-0.04081452)
Number of Verified Splits: 73 of 268
Stop inferencing: Max iteration reached.
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.0003426074981689453 
BICCOS Cumulative time: 0.1033165454864502
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04081 (20), -0.03886 (20), -0.03832 (20), -0.03701 (20), -0.03637 (20), -0.03563 (20), -0.03452 (20), -0.03390 (20), -0.03390 (20), -0.03313 (20), -0.03293 (20), -0.03223 (20), -0.03194 (20), -0.03141 (20), -0.03139 (20), -0.03043 (20), -0.03009 (20), -0.02982 (20), -0.02974 (20), -0.02952 (20), 
Length of domains: 195
Time: pickout 0.0020    decision 0.0182    set_bounds 0.0124    solve 0.1331    add 0.0040    
Accumulated time: pickout 0.0075    decision 0.7616    set_bounds 0.1311    solve 1.1440    add 0.2847    
Current (lb-rhs): -0.04081451892852783
392 domains visited
Cumulative time: 2.6633331775665283

BaB round 5
batch: 195
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 403] [/input-8, 64] [/input-8, 64] [/input-8, 64] [/input-8, 64] [/input-8, 64] [/input-8, 403] [/input-8, 64] [/input-8, 64] [/input-8, 64] 
cut re-enabled after branching node selection
0 lb beta sum: 1.487781286239624, worst -0.03967487812042236
10 lb beta sum: 1.487781286239624, worst -0.03956806659698486
Time: prepare 0.0174    bound 0.1195    transfer 0.0007    finalize 0.0019    func 0.1421    
Accumulated time: func 1.4884    prepare 0.1201    bound 1.1752    transfer 0.0100    finalize 0.1765    
all_split False
======================Cut inference begins======================
max lb tensor(0.00882137) min lb tensor(-0.03952277)
Number of Verified Splits: 110 of 390
Stop inferencing: Max iteration reached.
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.00033974647521972656 
BICCOS Cumulative time: 0.10365629196166992
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03952 (21), -0.03747 (21), -0.03703 (21), -0.03572 (21), -0.03497 (21), -0.03422 (21), -0.03322 (21), -0.03271 (21), -0.03204 (21), -0.03172 (21), -0.03168 (21), -0.03102 (21), -0.03022 (21), -0.02999 (21), -0.02952 (21), -0.02918 (21), -0.02864 (21), -0.02853 (21), -0.02824 (21), -0.02823 (21), 
Length of domains: 280
Time: pickout 0.0032    decision 0.0216    set_bounds 0.0163    solve 0.1422    add 0.0018    
Accumulated time: pickout 0.0107    decision 0.7832    set_bounds 0.1474    solve 1.2862    add 0.2865    
Current (lb-rhs): -0.039522767066955566
672 domains visited
Cumulative time: 2.8497235774993896

BaB round 6
batch: 280
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 817] [/input-8, 817] [/input-8, 817] [/input-8, 817] [/input-8, 403] [/input-8, 64] [/input-8, 403] [/input-8, 403] [/input-8, 817] [/input-8, 817] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4877811670303345, worst -0.0376964807510376
10 lb beta sum: 1.4877811670303345, worst -0.03764021396636963
Time: prepare 0.0248    bound 0.1193    transfer 0.0024    finalize 0.0031    func 0.1535    
Accumulated time: func 1.6419    prepare 0.1451    bound 1.2945    transfer 0.0123    finalize 0.1796    
all_split False
======================Cut inference begins======================
max lb tensor(0.00726211) min lb tensor(-0.03759205)
Number of Verified Splits: 202 of 560
Stop inferencing: Max iteration reached.
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.00038743019104003906 
BICCOS Cumulative time: 0.10404372215270996
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03759 (22), -0.03547 (22), -0.03509 (22), -0.03378 (22), -0.03297 (22), -0.03219 (22), -0.03128 (22), -0.03088 (22), -0.02990 (22), -0.02979 (22), -0.02968 (22), -0.02915 (22), -0.02837 (22), -0.02778 (22), -0.02737 (22), -0.02729 (22), -0.02680 (22), -0.02665 (22), -0.02630 (22), -0.02609 (22), 
Length of domains: 358
Time: pickout 0.0046    decision 0.0265    set_bounds 0.0229    solve 0.1539    add 0.0051    
Accumulated time: pickout 0.0153    decision 0.8097    set_bounds 0.1704    solve 1.4400    add 0.2917    
Current (lb-rhs): -0.03759205341339111
1030 domains visited
Cumulative time: 3.065563440322876

BaB round 7
batch: 358
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2133] [/input, 2133] [/input, 2133] [/input, 2133] [/input, 2133] [/input, 2133] [/input, 2133] [/input, 2133] [/input, 2133] [/input, 2133] 
cut re-enabled after branching node selection
0 lb beta sum: 1.487781047821045, worst -0.03457319736480713
10 lb beta sum: 1.487781047821045, worst -0.03452122211456299
Time: prepare 0.0363    bound 0.1207    transfer 0.0032    finalize 0.0028    func 0.1676    
Accumulated time: func 1.8096    prepare 0.1816    bound 1.4152    transfer 0.0156    finalize 0.1824    
all_split False
======================Cut inference begins======================
max lb tensor(0.00376451) min lb tensor(-0.03449976)
Number of Verified Splits: 156 of 716
Stop inferencing: Max iteration reached.
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.00035119056701660156 
BICCOS Cumulative time: 0.10439491271972656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03450 (23), -0.03385 (23), -0.03230 (23), -0.03205 (23), -0.03165 (23), -0.03112 (23), -0.03069 (23), -0.03005 (23), -0.02985 (23), -0.02898 (23), -0.02892 (23), -0.02833 (23), -0.02824 (23), -0.02784 (23), -0.02731 (23), -0.02719 (23), -0.02674 (23), -0.02665 (23), -0.02653 (23), -0.02609 (23), 
Length of domains: 560
Time: pickout 0.0070    decision 0.0306    set_bounds 0.0169    solve 0.1678    add 0.0023    
Accumulated time: pickout 0.0223    decision 0.8403    set_bounds 0.1872    solve 1.6079    add 0.2939    
Current (lb-rhs): -0.03449976444244385
1590 domains visited
Cumulative time: 3.291973829269409

BaB round 8
batch: 560
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 424] [/input, 424] [/input, 481] [/input, 424] [/input-8, 1331] [/input, 424] [/input-8, 1618] [/input, 481] [/input-8, 1618] [/input-8, 1331] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4877811670303345, worst -0.032193779945373535
10 lb beta sum: 1.4877811670303345, worst -0.03219425678253174
Time: prepare 0.0576    bound 0.1244    transfer 0.0034    finalize 0.0053    func 0.1987    
Accumulated time: func 2.0082    prepare 0.2394    bound 1.5396    transfer 0.0190    finalize 0.1877    
all_split False
======================Cut inference begins======================
max lb tensor(0.01591384) min lb tensor(-0.03217614)
Number of Verified Splits: 283 of 1120
Stop inferencing: Max iteration reached.
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.0003631114959716797 
BICCOS Cumulative time: 0.10475802421569824
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03218 (24), -0.03154 (24), -0.02992 (24), -0.02974 (24), -0.02967 (24), -0.02929 (24), -0.02904 (24), -0.02881 (24), -0.02779 (24), -0.02748 (24), -0.02742 (24), -0.02723 (24), -0.02716 (24), -0.02678 (24), -0.02655 (24), -0.02630 (24), -0.02605 (24), -0.02552 (24), -0.02541 (24), -0.02536 (24), 
Length of domains: 837
Time: pickout 0.0097    decision 0.0423    set_bounds 0.0482    solve 0.1989    add 0.0087    
Accumulated time: pickout 0.0321    decision 0.8826    set_bounds 0.2354    solve 1.8068    add 0.3026    
Current (lb-rhs): -0.03217613697052002
2427 domains visited
Cumulative time: 3.602062225341797

BaB round 9
batch: 837
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 481] [/input-8, 1331] [/input, 481] [/input-8, 861] [/input-8, 1331] [/input, 481] [/input-8, 1331] [/input-8, 861] [/input, 481] [/input-8, 861] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4877809286117554, worst -0.02964603900909424
10 lb beta sum: 1.4877809286117554, worst -0.02964317798614502
Time: prepare 0.0851    bound 0.1383    transfer 0.0088    finalize 0.0087    func 0.2515    
Accumulated time: func 2.2597    prepare 0.3247    bound 1.6779    transfer 0.0278    finalize 0.1963    
all_split False
======================Cut inference begins======================
max lb tensor(0.01641548) min lb tensor(-0.02963078)
Number of Verified Splits: 487 of 1674
Stop inferencing: Max iteration reached.
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.00038814544677734375 
BICCOS Cumulative time: 0.10514616966247559
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02963 (25), -0.02901 (25), -0.02866 (25), -0.02804 (25), -0.02731 (25), -0.02720 (25), -0.02712 (25), -0.02669 (25), -0.02649 (25), -0.02634 (25), -0.02627 (25), -0.02623 (25), -0.02614 (25), -0.02572 (25), -0.02552 (25), -0.02540 (25), -0.02529 (25), -0.02488 (25), -0.02480 (25), -0.02476 (25), 
Length of domains: 1187
Time: pickout 0.0187    decision 0.0574    set_bounds 0.0718    solve 0.2525    add 0.0089    
Accumulated time: pickout 0.0508    decision 0.9400    set_bounds 0.3072    solve 2.0593    add 0.3116    
Current (lb-rhs): -0.02963078022003174
3614 domains visited
Cumulative time: 4.015443801879883

BaB round 10
batch: 1187
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 861] [/input-8, 75] [/input-8, 861] [/input, 449] [/input-8, 861] [/input, 449] [/input-8, 75] [/input-8, 861] [/input-8, 861] [/input-8, 861] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4877811670303345, worst -0.028360486030578613
10 lb beta sum: 1.4877811670303345, worst -0.028347134590148926
Time: prepare 0.1213    bound 0.1571    transfer 0.0138    finalize 0.0125    func 0.3207    
Accumulated time: func 2.5805    prepare 0.4462    bound 1.8350    transfer 0.0416    finalize 0.2089    
all_split False
======================Cut inference begins======================
max lb tensor(0.01602876) min lb tensor(-0.02834523)
Number of Verified Splits: 1112 of 2374
Stop inferencing: Max iteration reached.
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.0004150867462158203 
BICCOS Cumulative time: 0.1055612564086914
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02835 (26), -0.02773 (26), -0.02738 (26), -0.02677 (26), -0.02592 (26), -0.02585 (26), -0.02582 (26), -0.02524 (26), -0.02521 (26), -0.02499 (26), -0.02495 (26), -0.02490 (26), -0.02486 (26), -0.02429 (26), -0.02425 (26), -0.02403 (26), -0.02343 (26), -0.02339 (26), -0.02333 (26), -0.02284 (26), 
Length of domains: 1262
Time: pickout 0.0219    decision 0.0747    set_bounds 0.0988    solve 0.3213    add 0.0078    
Accumulated time: pickout 0.0727    decision 1.0146    set_bounds 0.4060    solve 2.3806    add 0.3193    
Current (lb-rhs): -0.028345227241516113
4876 domains visited
Cumulative time: 4.547420978546143

BaB round 11
batch: 1262
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2726] [/input, 2726] [/input-8, 75] [/input-8, 75] [/input-8, 1629] [/input-8, 1629] [/input, 2726] [/input, 2726] [/input-8, 75] [/input, 2726] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4877811670303345, worst -0.02524864673614502
10 lb beta sum: 1.4877811670303345, worst -0.025238633155822754
Time: prepare 0.1294    bound 0.1652    transfer 0.0102    finalize 0.0138    func 0.3355    
Accumulated time: func 2.9159    prepare 0.5759    bound 2.0002    transfer 0.0518    finalize 0.2227    
all_split False
======================Cut inference begins======================
max lb tensor(0.01585472) min lb tensor(-0.02523291)
Number of Verified Splits: 1200 of 2524
Stop inferencing: Max iteration reached.
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.0004260540008544922 
BICCOS Cumulative time: 0.1059873104095459
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02523 (27), -0.02514 (27), -0.02488 (27), -0.02449 (27), -0.02428 (27), -0.02419 (27), -0.02392 (27), -0.02353 (27), -0.02289 (27), -0.02274 (27), -0.02272 (27), -0.02269 (27), -0.02265 (27), -0.02260 (27), -0.02238 (27), -0.02234 (27), -0.02229 (27), -0.02199 (27), -0.02195 (27), -0.02194 (27), 
Length of domains: 1324
Time: pickout 0.0278    decision 0.2099    set_bounds 0.1074    solve 0.3360    add 0.0080    
Accumulated time: pickout 0.1005    decision 1.2245    set_bounds 0.5134    solve 2.7166    add 0.3273    
Current (lb-rhs): -0.025232911109924316
6200 domains visited
Cumulative time: 5.244994401931763

BaB round 12
batch: 1324
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1629] [/input-8, 1629] [/input-8, 75] [/input-8, 1618] [/input-8, 1629] [/input, 2726] [/input, 3994] [/input-8, 1629] [/input-8, 970] [/input-8, 970] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4877811670303345, worst -0.023629307746887207
10 lb beta sum: 1.4877811670303345, worst -0.02358877658843994
Time: prepare 0.1361    bound 0.1699    transfer 0.0044    finalize 0.0142    func 0.3423    
Accumulated time: func 3.2582    prepare 0.7123    bound 2.1701    transfer 0.0562    finalize 0.2369    
all_split False
======================Cut inference begins======================
max lb tensor(0.00994146) min lb tensor(-0.02358305)
Number of Verified Splits: 1092 of 2648
Stop inferencing: Max iteration reached.
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.0005562305450439453 
BICCOS Cumulative time: 0.10654354095458984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02358 (28), -0.02349 (28), -0.02323 (28), -0.02282 (28), -0.02262 (28), -0.02253 (28), -0.02227 (28), -0.02187 (28), -0.02119 (28), -0.02109 (28), -0.02105 (28), -0.02103 (28), -0.02099 (28), -0.02094 (28), -0.02073 (28), -0.02068 (28), -0.02059 (28), -0.02033 (28), -0.02028 (28), -0.02023 (28), 
Length of domains: 1556
Time: pickout 0.0234    decision 0.0845    set_bounds 0.1122    solve 0.3428    add 0.0125    
Accumulated time: pickout 0.1239    decision 1.3090    set_bounds 0.6256    solve 3.0593    add 0.3398    
Current (lb-rhs): -0.023583054542541504
7756 domains visited
Cumulative time: 5.828680753707886

BaB round 13
batch: 1556
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 678] [/input, 2726] [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input, 2726] [/input-8, 678] [/input-8, 75] [/input-8, 75] [/input-8, 1618] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4877814054489136, worst -0.02158176898956299
10 lb beta sum: 1.4877814054489136, worst -0.02157747745513916
Time: prepare 0.1667    bound 0.1918    transfer 0.0194    finalize 0.0173    func 0.4166    
Accumulated time: func 3.6747    prepare 0.8792    bound 2.3618    transfer 0.0756    finalize 0.2542    
all_split False
======================Cut inference begins======================
max lb tensor(0.00865161) min lb tensor(-0.02157271)
Number of Verified Splits: 1178 of 3112
Stop inferencing: Max iteration reached.
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.0004904270172119141 
BICCOS Cumulative time: 0.10703396797180176
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02157 (29), -0.02149 (29), -0.02121 (29), -0.02082 (29), -0.02061 (29), -0.02053 (29), -0.02025 (29), -0.01986 (29), -0.01952 (29), -0.01945 (29), -0.01930 (29), -0.01906 (29), -0.01902 (29), -0.01899 (29), -0.01893 (29), -0.01870 (29), -0.01867 (29), -0.01865 (29), -0.01857 (29), -0.01850 (29), 
Length of domains: 1934
Time: pickout 0.0378    decision 0.0981    set_bounds 0.1329    solve 0.4174    add 0.0110    
Accumulated time: pickout 0.1617    decision 1.4071    set_bounds 0.7585    solve 3.4767    add 0.3508    
Current (lb-rhs): -0.02157270908355713
9690 domains visited
Cumulative time: 6.535452842712402

BaB round 14
batch: 1934
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2726] [/input, 3994] [/input, 2726] [/input-8, 1629] [/input, 2726] [/input, 3994] [/input-8, 1629] [/input, 2726] [/input, 3994] [/input, 2726] 
cut re-enabled after branching node selection
0 lb beta sum: 1.487781286239624, worst -0.018717408180236816
10 lb beta sum: 1.487781286239624, worst -0.018599629402160645
Time: prepare 0.2003    bound 0.2232    transfer 0.0435    finalize 0.0245    func 0.5164    
Accumulated time: func 4.1912    prepare 1.0798    bound 2.5850    transfer 0.1191    finalize 0.2786    
all_split False
======================Cut inference begins======================
max lb tensor(0.00878656) min lb tensor(-0.01858342)
Number of Verified Splits: 1527 of 3868
Stop inferencing: Max iteration reached.
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.00047135353088378906 
BICCOS Cumulative time: 0.10750532150268555
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01858 (30), -0.01850 (30), -0.01844 (30), -0.01836 (30), -0.01822 (30), -0.01808 (30), -0.01782 (30), -0.01768 (30), -0.01762 (30), -0.01754 (30), -0.01748 (30), -0.01740 (30), -0.01726 (30), -0.01712 (30), -0.01686 (30), -0.01679 (30), -0.01673 (30), -0.01648 (30), -0.01640 (30), -0.01635 (30), 
Length of domains: 2341
Time: pickout 0.0463    decision 0.2860    set_bounds 0.1661    solve 0.5175    add 0.0122    
Accumulated time: pickout 0.2080    decision 1.6930    set_bounds 0.9246    solve 3.9942    add 0.3630    
Current (lb-rhs): -0.01858341693878174
12031 domains visited
Cumulative time: 7.575932264328003

BaB round 15
batch: 2341
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 1618] [/input, 2726] [/input-8, 678] [/input-8, 1618] 
cut re-enabled after branching node selection
0 lb beta sum: 1.487781286239624, worst -0.01737844944000244
10 lb beta sum: 1.487781286239624, worst -0.017369866371154785
Time: prepare 0.2421    bound 0.2563    transfer 0.0217    finalize 0.0275    func 0.7142    
Accumulated time: func 4.9054    prepare 1.3221    bound 2.8414    transfer 0.1408    finalize 0.3061    
all_split False
======================Cut inference begins======================
max lb tensor(0.00886333) min lb tensor(-0.01736081)
Number of Verified Splits: 2580 of 4682
Stop inferencing: Max iteration reached.
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.0005781650543212891 
BICCOS Cumulative time: 0.10808348655700684
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01736 (31), -0.01727 (31), -0.01726 (31), -0.01718 (31), -0.01700 (31), -0.01690 (31), -0.01660 (31), -0.01651 (31), -0.01640 (31), -0.01632 (31), -0.01630 (31), -0.01622 (31), -0.01604 (31), -0.01595 (31), -0.01565 (31), -0.01555 (31), -0.01523 (31), -0.01517 (31), -0.01515 (31), -0.01509 (31), 
Length of domains: 2102
Time: pickout 0.0462    decision 0.1390    set_bounds 0.2016    solve 0.7151    add 0.0137    
Accumulated time: pickout 0.2542    decision 1.8320    set_bounds 1.1262    solve 4.7093    add 0.3766    
Current (lb-rhs): -0.017360806465148926
14133 domains visited
Cumulative time: 8.713831901550293

BaB round 16
batch: 2102
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input, 2726] [/input, 2726] [/input, 2726] [/input, 2726] [/input-8, 678] [/input-8, 678] [/input-8, 678] 
cut re-enabled after branching node selection
0 lb beta sum: 1.487781047821045, worst -0.016436219215393066
10 lb beta sum: 1.487781047821045, worst -0.0164414644241333
Time: prepare 0.2155    bound 0.2395    transfer 0.0054    finalize 0.0213    func 0.5088    
Accumulated time: func 5.4142    prepare 1.5378    bound 3.0808    transfer 0.1462    finalize 0.3274    
all_split False
======================Cut inference begins======================
max lb tensor(0.00982273) min lb tensor(-0.01642811)
Number of Verified Splits: 2333 of 4204
Stop inferencing: Max iteration reached.
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.0005595684051513672 
BICCOS Cumulative time: 0.1086430549621582
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01643 (32), -0.01635 (32), -0.01634 (32), -0.01625 (32), -0.01607 (32), -0.01597 (32), -0.01567 (32), -0.01547 (32), -0.01538 (32), -0.01537 (32), -0.01535 (32), -0.01529 (32), -0.01511 (32), -0.01479 (32), -0.01470 (32), -0.01462 (32), -0.01428 (32), -0.01423 (32), -0.01421 (32), -0.01415 (32), 
Length of domains: 1871
Time: pickout 0.0502    decision 0.1249    set_bounds 0.1837    solve 0.5102    add 0.0082    
Accumulated time: pickout 0.3044    decision 1.9569    set_bounds 1.3099    solve 5.2195    add 0.3849    
Current (lb-rhs): -0.016428112983703613
16004 domains visited
Cumulative time: 9.608161687850952

BaB round 17
batch: 1871
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 844] [/input-8, 844] [/input-8, 844] [/input-8, 844] [/input-8, 844] [/input-8, 844] [/input-8, 844] [/input-8, 844] [/input-8, 844] [/input-8, 844] 
cut re-enabled after branching node selection
0 lb beta sum: 1.487781286239624, worst -0.015275120735168457
10 lb beta sum: 1.487781286239624, worst -0.015285134315490723
Time: prepare 0.1943    bound 0.2176    transfer 0.0051    finalize 0.0210    func 0.6282    
Accumulated time: func 6.0425    prepare 1.7323    bound 3.2984    transfer 0.1512    finalize 0.3484    
all_split False
======================Cut inference begins======================
max lb tensor(0.01016796) min lb tensor(-0.01527369)
Number of Verified Splits: 2117 of 3742
Stop inferencing: Max iteration reached.
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.0006363391876220703 
BICCOS Cumulative time: 0.10927939414978027
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01527 (33), -0.01519 (33), -0.01518 (33), -0.01510 (33), -0.01491 (33), -0.01482 (33), -0.01452 (33), -0.01442 (33), -0.01431 (33), -0.01423 (33), -0.01422 (33), -0.01414 (33), -0.01395 (33), -0.01386 (33), -0.01355 (33), -0.01347 (33), -0.01310 (33), -0.01306 (33), -0.01303 (33), -0.01299 (33), 
Length of domains: 1625
Time: pickout 0.0373    decision 0.1125    set_bounds 0.1618    solve 0.6290    add 0.0088    
Accumulated time: pickout 0.3417    decision 2.0693    set_bounds 1.4717    solve 5.8485    add 0.3937    
Current (lb-rhs): -0.015273690223693848
17629 domains visited
Cumulative time: 10.574389696121216

BaB round 18
batch: 1625
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input, 424] [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input, 424] [/input-8, 970] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4877811670303345, worst -0.013939976692199707
10 lb beta sum: 1.4877811670303345, worst -0.013944745063781738
Time: prepare 0.1693    bound 0.1967    transfer 0.0132    finalize 0.0177    func 0.4184    
Accumulated time: func 6.4609    prepare 1.9018    bound 3.4952    transfer 0.1645    finalize 0.3661    
all_split False
======================Cut inference begins======================
max lb tensor(0.01030958) min lb tensor(-0.01393712)
Number of Verified Splits: 1931 of 3250
Stop inferencing: Max iteration reached.
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.0004417896270751953 
BICCOS Cumulative time: 0.10972118377685547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01394 (34), -0.01385 (34), -0.01384 (34), -0.01376 (34), -0.01358 (34), -0.01348 (34), -0.01318 (34), -0.01309 (34), -0.01298 (34), -0.01289 (34), -0.01289 (34), -0.01280 (34), -0.01262 (34), -0.01252 (34), -0.01222 (34), -0.01212 (34), -0.01177 (34), -0.01173 (34), -0.01169 (34), -0.01166 (34), 
Length of domains: 1319
Time: pickout 0.0325    decision 0.1005    set_bounds 0.1426    solve 0.4191    add 0.0127    
Accumulated time: pickout 0.3742    decision 2.1699    set_bounds 1.6143    solve 6.2675    add 0.4064    
Current (lb-rhs): -0.013937115669250488
18948 domains visited
Cumulative time: 11.296213150024414

BaB round 19
batch: 1319
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 67] [/input-8, 67] [/input-8, 67] [/input-8, 67] [/input-8, 67] [/input-8, 67] [/input-8, 67] [/input-8, 67] [/input-8, 844] [/input-8, 844] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4877811670303345, worst -0.01310265064239502
10 lb beta sum: 1.4877811670303345, worst -0.013111710548400879
Time: prepare 0.1349    bound 0.1717    transfer 0.0052    finalize 0.0138    func 0.3434    
Accumulated time: func 6.8042    prepare 2.0370    bound 3.6669    transfer 0.1696    finalize 0.3799    
all_split False
======================Cut inference begins======================
max lb tensor(0.01172912) min lb tensor(-0.01309884)
Number of Verified Splits: 1597 of 2638
Stop inferencing: Max iteration reached.
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.00041675567626953125 
BICCOS Cumulative time: 0.110137939453125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01310 (35), -0.01302 (35), -0.01299 (35), -0.01291 (35), -0.01275 (35), -0.01263 (35), -0.01234 (35), -0.01223 (35), -0.01214 (35), -0.01207 (35), -0.01203 (35), -0.01195 (35), -0.01178 (35), -0.01166 (35), -0.01138 (35), -0.01126 (35), -0.01090 (35), -0.01085 (35), -0.01079 (35), -0.01074 (35), 
Length of domains: 1041
Time: pickout 0.0321    decision 0.0823    set_bounds 0.1155    solve 0.3440    add 0.0045    
Accumulated time: pickout 0.4063    decision 2.2522    set_bounds 1.7297    solve 6.6115    add 0.4109    
Current (lb-rhs): -0.013098835945129395
19989 domains visited
Cumulative time: 11.88704776763916

BaB round 20
batch: 1041
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input-8, 67] [/input-8, 67] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4877811670303345, worst -0.011013150215148926
10 lb beta sum: 1.4877811670303345, worst -0.011008381843566895
Time: prepare 0.1067    bound 0.1474    transfer 0.0030    finalize 0.0119    func 0.2827    
Accumulated time: func 7.0869    prepare 2.1439    bound 3.8143    transfer 0.1726    finalize 0.3918    
all_split False
======================Cut inference begins======================
max lb tensor(0.00500381) min lb tensor(-0.01100075)
Number of Verified Splits: 1143 of 2082
Stop inferencing: Max iteration reached.
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.00041031837463378906 
BICCOS Cumulative time: 0.11054825782775879
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01100 (36), -0.01088 (36), -0.01088 (36), -0.01076 (36), -0.01061 (36), -0.01049 (36), -0.01026 (36), -0.01014 (36), -0.01004 (36), -0.00992 (36), -0.00992 (36), -0.00980 (36), -0.00976 (36), -0.00967 (36), -0.00965 (36), -0.00965 (36), -0.00956 (36), -0.00955 (36), -0.00953 (36), -0.00944 (36), 
Length of domains: 939
Time: pickout 0.0216    decision 0.0679    set_bounds 0.0900    solve 0.2839    add 0.0043    
Accumulated time: pickout 0.4279    decision 2.3201    set_bounds 1.8197    solve 6.8954    add 0.4152    
Current (lb-rhs): -0.011000752449035645
20928 domains visited
Cumulative time: 12.362915277481079

BaB round 21
batch: 939
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 3994] [/input-8, 67] [/input, 3994] [/input-8, 67] [/input, 3994] [/input-8, 67] [/input-8, 67] [/input-8, 970] [/input-8, 67] [/input, 3994] 
cut re-enabled after branching node selection
0 lb beta sum: 1.487781286239624, worst -0.009251713752746582
10 lb beta sum: 1.487781286239624, worst -0.009256482124328613
Time: prepare 0.0974    bound 0.1480    transfer 0.0105    finalize 0.0106    func 0.2798    
Accumulated time: func 7.3667    prepare 2.2416    bound 3.9624    transfer 0.1831    finalize 0.4024    
all_split False
======================Cut inference begins======================
max lb tensor(0.00498712) min lb tensor(-0.00924742)
Number of Verified Splits: 1015 of 1878
Stop inferencing: Max iteration reached.
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.0004012584686279297 
BICCOS Cumulative time: 0.11094951629638672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00925 (37), -0.00913 (37), -0.00912 (37), -0.00900 (37), -0.00885 (37), -0.00873 (37), -0.00850 (37), -0.00838 (37), -0.00828 (37), -0.00817 (37), -0.00816 (37), -0.00804 (37), -0.00794 (37), -0.00789 (37), -0.00787 (37), -0.00783 (37), -0.00777 (37), -0.00776 (37), -0.00776 (37), -0.00765 (37), 
Length of domains: 863
Time: pickout 0.0210    decision 0.1894    set_bounds 0.0814    solve 0.2802    add 0.0056    
Accumulated time: pickout 0.4489    decision 2.5095    set_bounds 1.9011    solve 7.1756    add 0.4208    
Current (lb-rhs): -0.009247422218322754
21791 domains visited
Cumulative time: 12.948844909667969

BaB round 22
batch: 863
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 970] [/input-8, 970] [/input, 3994] [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input-8, 1847] [/input-8, 1847] [/input-8, 75] [/input-8, 1847] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4877811670303345, worst -0.007870316505432129
10 lb beta sum: 1.4877811670303345, worst -0.007861733436584473
Time: prepare 0.0884    bound 0.1391    transfer 0.0024    finalize 0.0104    func 0.2514    
Accumulated time: func 7.6181    prepare 2.3303    bound 4.1014    transfer 0.1856    finalize 0.4127    
all_split False
======================Cut inference begins======================
max lb tensor(0.01122367) min lb tensor(-0.00784457)
Number of Verified Splits: 846 of 1726
Stop inferencing: Max iteration reached.
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.0004584789276123047 
BICCOS Cumulative time: 0.11140799522399902
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00784 (38), -0.00773 (38), -0.00772 (38), -0.00760 (38), -0.00745 (38), -0.00733 (38), -0.00710 (38), -0.00698 (38), -0.00689 (38), -0.00677 (38), -0.00676 (38), -0.00664 (38), -0.00654 (38), -0.00649 (38), -0.00647 (38), -0.00643 (38), -0.00638 (38), -0.00636 (38), -0.00635 (38), -0.00624 (38), 
Length of domains: 880
Time: pickout 0.0211    decision 0.0573    set_bounds 0.0726    solve 0.2528    add 0.0037    
Accumulated time: pickout 0.4700    decision 2.5668    set_bounds 1.9737    solve 7.4284    add 0.4245    
Current (lb-rhs): -0.00784456729888916
22671 domains visited
Cumulative time: 13.363335609436035

BaB round 23
batch: 880
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] 
cut re-enabled after branching node selection
0 lb beta sum: 1.487781286239624, worst -0.0070258378982543945
10 lb beta sum: 1.487781286239624, worst -0.007018685340881348
Time: prepare 0.0906    bound 0.1402    transfer 0.0027    finalize 0.0093    func 0.2540    
Accumulated time: func 7.8721    prepare 2.4211    bound 4.2416    transfer 0.1883    finalize 0.4220    
all_split False
======================Cut inference begins======================
max lb tensor(0.01139724) min lb tensor(-0.00700247)
Number of Verified Splits: 1114 of 1760
Stop inferencing: Max iteration reached.
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.00039649009704589844 
BICCOS Cumulative time: 0.11180448532104492
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00700 (39), -0.00689 (39), -0.00688 (39), -0.00676 (39), -0.00660 (39), -0.00648 (39), -0.00623 (39), -0.00612 (39), -0.00605 (39), -0.00593 (39), -0.00592 (39), -0.00580 (39), -0.00564 (39), -0.00559 (39), -0.00552 (39), -0.00550 (39), -0.00547 (39), -0.00539 (39), -0.00538 (39), -0.00538 (39), 
Length of domains: 646
Time: pickout 0.0225    decision 0.0586    set_bounds 0.0763    solve 0.2552    add 0.0070    
Accumulated time: pickout 0.4925    decision 2.6254    set_bounds 2.0501    solve 7.6836    add 0.4314    
Current (lb-rhs): -0.007002472877502441
23317 domains visited
Cumulative time: 13.789424419403076

BaB round 24
batch: 646
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1935] [/input-8, 1935] [/input-8, 1935] [/input, 424] [/input-8, 1935] [/input-8, 1935] [/input, 424] [/input-8, 1935] [/input-8, 1935] [/input-8, 1935] 
cut re-enabled after branching node selection
0 lb beta sum: 1.487781047821045, worst -0.00536501407623291
10 lb beta sum: 1.487781047821045, worst -0.0053282976150512695
Time: prepare 0.0709    bound 0.1304    transfer 0.0081    finalize 0.0078    func 0.2256    
Accumulated time: func 8.0977    prepare 2.4922    bound 4.3721    transfer 0.1963    finalize 0.4298    
all_split False
======================Cut inference begins======================
max lb tensor(0.00258577) min lb tensor(-0.00529444)
Number of Verified Splits: 894 of 1292
Stop inferencing: Max iteration reached.
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.000392913818359375 
BICCOS Cumulative time: 0.1121973991394043
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00529 (40), -0.00518 (40), -0.00517 (40), -0.00505 (40), -0.00489 (40), -0.00478 (40), -0.00453 (40), -0.00441 (40), -0.00434 (40), -0.00422 (40), -0.00422 (40), -0.00410 (40), -0.00394 (40), -0.00388 (40), -0.00381 (40), -0.00379 (40), -0.00376 (40), -0.00370 (40), -0.00367 (40), -0.00366 (40), 
Length of domains: 398
Time: pickout 0.0157    decision 0.0455    set_bounds 0.0574    solve 0.2259    add 0.0021    
Accumulated time: pickout 0.5082    decision 2.6709    set_bounds 2.1075    solve 7.9094    add 0.4335    
Current (lb-rhs): -0.005294442176818848
23715 domains visited
Cumulative time: 14.141649961471558

BaB round 25
batch: 398
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1734] [/input-8, 1734] [/input-8, 1734] [/input-8, 1734] [/input-8, 1734] [/input-8, 1734] [/input-8, 1734] [/input-8, 1734] [/input-8, 1734] [/input-8, 1734] 
cut re-enabled after branching node selection
0 lb beta sum: 1.487781047821045, worst -0.004162430763244629
10 lb beta sum: 1.487781047821045, worst -0.004102826118469238
Time: prepare 0.0408    bound 0.1215    transfer 0.0013    finalize 0.0047    func 0.1735    
Accumulated time: func 8.2712    prepare 2.5332    bound 4.4935    transfer 0.1976    finalize 0.4346    
all_split False
======================Cut inference begins======================
max lb tensor(0.00434196) min lb tensor(-0.00408423)
Number of Verified Splits: 625 of 796
Stop inferencing: Max iteration reached.
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.0003750324249267578 
BICCOS Cumulative time: 0.11257243156433105
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00408 (41), -0.00396 (41), -0.00396 (41), -0.00384 (41), -0.00368 (41), -0.00356 (41), -0.00331 (41), -0.00320 (41), -0.00313 (41), -0.00301 (41), -0.00301 (41), -0.00289 (41), -0.00272 (41), -0.00265 (41), -0.00260 (41), -0.00258 (41), -0.00254 (41), -0.00248 (41), -0.00247 (41), -0.00245 (41), 
Length of domains: 171
Time: pickout 0.0095    decision 0.0325    set_bounds 0.0339    solve 0.1737    add 0.0014    
Accumulated time: pickout 0.5178    decision 2.7034    set_bounds 2.1414    solve 8.0831    add 0.4349    
Current (lb-rhs): -0.004084229469299316
23886 domains visited
Cumulative time: 14.396031379699707

BaB round 26
batch: 171
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 3192] [/input, 3192] [/input, 3192] [/input, 3192] [/input, 3192] [/input, 3192] [/input, 3192] [/input, 3192] [/input, 3192] [/input, 3192] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4877811670303345, worst -0.00238955020904541
10 lb beta sum: 1.4877811670303345, worst -0.0023866891860961914
Time: prepare 0.0176    bound 0.1186    transfer 0.0020    finalize 0.0018    func 0.1423    
Accumulated time: func 8.4134    prepare 2.5510    bound 4.6122    transfer 0.1996    finalize 0.4364    
all_split False
======================Cut inference begins======================
max lb tensor(0.00261533) min lb tensor(-0.00238240)
Number of Verified Splits: 290 of 342
Stop inferencing: Max iteration reached.
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.00035881996154785156 
BICCOS Cumulative time: 0.1129312515258789
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00238 (42), -0.00226 (42), -0.00226 (42), -0.00214 (42), -0.00198 (42), -0.00186 (42), -0.00162 (42), -0.00150 (42), -0.00143 (42), -0.00133 (42), -0.00130 (42), -0.00130 (42), -0.00123 (42), -0.00121 (42), -0.00118 (42), -0.00111 (42), -0.00101 (42), -0.00095 (42), -0.00093 (42), -0.00089 (42), 
Length of domains: 52
Time: pickout 0.0049    decision 0.0203    set_bounds 0.0144    solve 0.1428    add 0.0015    
Accumulated time: pickout 0.5227    decision 2.7237    set_bounds 2.1559    solve 8.2259    add 0.4364    
Current (lb-rhs): -0.0023823976516723633
23938 domains visited
Cumulative time: 14.582030773162842

BaB round 27
batch: 52
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1861] [/input-8, 1861] [/input-8, 1861] [/input-8, 1861] [/input-8, 1861] [/input-8, 1861] [/input-8, 1861] [/input-8, 1861] [/input-8, 1861] [/input-8, 1861] 
split level 1: [/input, 424] [/input, 424] [/input, 424] [/input, 424] [/input, 424] [/input, 424] [/input, 424] [/input, 424] [/input, 424] [/input, 424] 
cut re-enabled after branching node selection
0 lb beta sum: 1.487781286239624, worst 0.001295924186706543

all verified at 0th iter
Time: prepare 0.0109    bound 0.0045    transfer 0.0005    finalize 0.0011    func 0.0183    
Accumulated time: func 8.4318    prepare 2.5622    bound 4.6167    transfer 0.2000    finalize 0.4375    
all_split False
======================Cut inference begins======================
max lb tensor(0.00675094) min lb tensor(0.00129592)
Number of Verified Splits: 208 of 208
Stop inferencing: Max iteration reached.
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.0003314018249511719 
BICCOS Cumulative time: 0.11326265335083008
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0021    decision 0.0168    set_bounds 0.0166    solve 0.0184    add 0.0001    
Accumulated time: pickout 0.5248    decision 2.7405    set_bounds 2.1725    solve 8.2443    add 0.4364    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
23938 domains visited
Cumulative time: 14.637318134307861


Properties batch 8, size 1
Remaining timeout: 183.83895993232727
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 16.1612 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 90, vnnlib ID: 90 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-3.92437601, -4.53821707, -1.81814766, -0.89523673, -2.18286943,
         -1.50445235, -2.81978679, -2.90949965, -4.78050327, -3.54446316]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [640]; unstable size 640; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 228, 1, 640] with unstable size 227 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 640] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 640] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [227]; unstable size 227; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 227] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 227] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.54901552, -0.55123186, -2.14694476, -2.65342498, -1.82377005,
         -2.15827680, -1.06202722,  0.01771510, -1.15435982]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.92437601, -4.53821707, -1.81814766, -0.89523673, -2.18286943,
         -1.50445235, -2.81978679, -2.90949965, -4.78050327, -3.54446316]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.92437601, -4.53821659, -1.81814742, -0.89523673, -2.18286896,
          -1.50445259, -2.81978631, -2.90949917, -4.78050327, -3.54446268],
         [-3.92437601, -4.53821659, -1.81814742, -0.89523673, -2.18286896,
          -1.50445259, -2.81978631, -2.90949917, -4.78050327, -3.54446268]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.10458970,  1.71843028, -1.00163889, -1.92454958, -0.63691735,
          -1.31533372,  0.08971286,  0.72467637]]], device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         ...,


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]]]], device='cuda:0') torch.Size([1, 8, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0839 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 91, vnnlib ID: 91 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.28595638,  -5.88002491, -13.45972347, -12.72046280, -11.91884041,
         -13.39254284, -13.69190216, -11.92345619, -11.07378769,  -5.33333635]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [628]; unstable size 628; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 195, 1, 628] with unstable size 194 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 628] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 628] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [194]; unstable size 194; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 194] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 194] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.77330256,  5.60239172,  4.83423853,  3.93323040,  5.32919168,
          5.82401514,  3.69637299,  3.85418463, -1.36576104]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.28595638,  -5.88002491, -13.45972347, -12.72046280, -11.91884041,
         -13.39254284, -13.69190216, -11.92345619, -11.07378769,  -5.33333635]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.28595638,  -5.88002491, -13.45972347, -12.72046280, -11.91884041,
          -13.39254284, -13.69190216, -11.92345619, -11.07378769,  -5.33333635]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.54668856]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.32222211, -1.24285710, -1.14761901,  ..., -1.32222211,
            -1.32222211, -1.21111107],
           [-1.25873005, -1.24285710, -1.16349196,  ..., -1.32222211,
            -1.32222211, -1.32222211],
           [-1.22698402, -1.22698402, -1.21111107,  ..., -1.33809519,
            -1.32222211, -1.21111107],
           ...,
           [ 0.97936511,  0.99523818,  0.99523818,  ...,  1.04285717,
             1.05873048,  1.04285717],
           [ 1.04285717,  1.04285717,  1.02698421,  ...,  1.05873048,
             1.10634947,  1.13809550],
           [ 1.04285717,  1.04285717,  1.04285717,  ...,  1.01111114,
             1.07460344,  1.07460344]],

          [[-1.56199670, -1.48148143, -1.38486302,  ..., -1.46537840,
            -1.46537840, -1.35265696],
           [-1.44927526, -1.43317223, -1.35265696,  ..., -1.46537840,
            -1.46537840, -1.46537840],
           [-1.40096617, -1.40096617, -1.38486302,  ..., -1.48148143,
            -1.46537840, -1.35265696],
           ...,
           [ 0.72463775,  0.74074084,  0.74074084,  ...,  0.86956531,
             0.88566834,  0.86956531],
           [ 0.78904998,  0.78904998,  0.77294695,  ...,  0.88566834,
             0.93397754,  0.96618366],
           [ 0.78904998,  0.78904998,  0.78904998,  ...,  0.83735919,
             0.90177143,  0.90177143]],

          [[-1.30284870, -1.22788620, -1.13793111,  ..., -1.25787115,
            -1.25787115, -1.15292358],
           [-1.21289361, -1.19790113, -1.12293863,  ..., -1.25787115,
            -1.25787115, -1.25787115],
           [-1.16791618, -1.16791618, -1.15292358,  ..., -1.27286363,
            -1.25787115, -1.15292358],
           ...,
           [ 0.84107965,  0.85607213,  0.85607213,  ...,  0.94602716,
             0.96101969,  0.94602716],
           [ 0.90104967,  0.90104967,  0.88605714,  ...,  0.96101969,
             1.00599718,  1.03598225],
           [ 0.90104967,  0.90104967,  0.90104967,  ...,  0.91604215,
             0.97601217,  0.97601217]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0700 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 92, vnnlib ID: 92 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.22173882,  -9.89736652,  -4.68373394,  -3.01329088,  -4.28179979,
          -2.86711979,  -5.53003645,  -5.05347300, -11.67127705,  -7.88633108]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [485]; unstable size 485; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 197, 1, 485] with unstable size 196 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 485] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 485] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [196]; unstable size 196; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 196] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 196] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.00222683,  5.24682570,  0.82175875, -0.20462835,  0.32712030,
          1.14493704,  1.33189166,  7.36666679,  3.64896512]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.22173882,  -9.89736652,  -4.68373394,  -3.01329088,  -4.28179979,
          -2.86711979,  -5.53003645,  -5.05347300, -11.67127705,  -7.88633108]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.24767017,  -9.97193718,  -4.73787022,  -3.23425245,  -4.31496525,
           -3.29052877,  -5.42143679,  -5.31018877, -11.66250134,  -7.98117399]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.05627632]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0056 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0684 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 93, vnnlib ID: 93 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.15195465,  -9.58116150, -14.61256504, -15.32470417, -14.07134438,
         -16.02833176, -16.91090012, -13.49322128, -10.77580357, -11.62801266]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [531]; unstable size 531; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 185, 1, 531] with unstable size 184 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 531] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 531] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [184]; unstable size 184; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 184] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 184] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.31977224, 3.21350336, 3.97968602, 2.74568677, 4.38296223, 5.60134363,
         1.73482704, 0.05008936, 1.12907434]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0443 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 94, vnnlib ID: 94 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -6.19431782, -14.89802456,  -8.13741684,  -9.92391682,  -9.58477306,
          -9.65702534, -11.04900360, -13.72198963,  -7.17759037, -14.95812511]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [488]; unstable size 488; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 144, 1, 488] with unstable size 143 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 488] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 488] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [143]; unstable size 143; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 143] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 143] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.41919065,  6.05724716,  1.13111079,  0.98754287,  0.83572435,
          2.28893924,  4.95927286, -1.78601420,  6.10188055]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.19431782, -14.89802456,  -8.13741684,  -9.92391682,  -9.58477306,
          -9.65702534, -11.04900360, -13.72198963,  -7.17759037, -14.95812511]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.19431925, -14.89802551,  -8.13741779,  -9.92391777,  -9.58477402,
           -9.65702629, -11.04900360, -13.72199059,  -7.17759132, -14.95812702],
         [ -6.19431925, -14.89802551,  -8.13741779,  -9.92391777,  -9.58477402,
           -9.65702629, -11.04900360, -13.72199059,  -7.17759132, -14.95812702]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-1.94309855, -0.95982647]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-9.88888860e-01, -8.93650770e-01, -7.66666651e-01,  ...,
            -5.12698412e-01, -2.26984024e-01,  1.36031771e+00],
           [-9.73015904e-01, -9.09523785e-01, -8.14285696e-01,  ...,
            -5.76190472e-01, -4.33333218e-01,  1.53968334e-01],
           [-8.77777755e-01, -8.61904740e-01, -7.82539666e-01,  ...,
            -5.12698412e-01, -4.49206233e-01, -6.82538673e-02],
           ...,
           [-1.27460313e+00, -1.16349196e+00, -1.09999990e+00,  ...,
            -1.14761901e+00, -9.73015904e-01, -8.41268823e-02],
           [-9.73015904e-01, -9.25396800e-01, -8.93650770e-01,  ...,
            -9.25396800e-01, -7.66666651e-01, -6.82538673e-02],
           [ 8.84127021e-01, -1.31745934e-01, -1.95237994e-01,  ...,
            -2.26984024e-01, -2.11111009e-01,  1.53968334e-01]],

          [[ 1.93236828e-01,  3.54267418e-01,  4.34782714e-01,  ...,
             6.60225511e-01,  6.44122481e-01,  1.57810009e+00],
           [ 3.22061300e-01,  4.34782714e-01,  4.83091891e-01,  ...,
             6.76328599e-01,  5.79710245e-01,  4.66988832e-01],
           [ 3.38164359e-01,  4.18679655e-01,  4.50885773e-01,  ...,
             6.44122481e-01,  5.31401038e-01,  2.25442946e-01],
           ...,
           [ 1.22934580e-07,  1.12721533e-01,  1.28824592e-01,  ...,
             2.41546005e-01,  1.12721533e-01,  1.44927651e-01],
           [ 3.22062373e-02, -1.61029361e-02,  1.61031820e-02,  ...,
             1.28824592e-01,  1.61031820e-02,  1.12721533e-01],
           [ 1.30434811e+00,  1.12721533e-01,  9.66184735e-02,  ...,
             1.44927651e-01,  9.66184735e-02,  1.44927651e-01]],

          [[ 1.11094475e+00,  1.24587750e+00,  1.23088503e+00,  ...,
             1.47076499e+00,  1.33583248e+00,  1.84557760e+00],
           [ 1.23088503e+00,  1.32084000e+00,  1.29085493e+00,  ...,
             1.54572761e+00,  1.45577252e+00,  1.00599718e+00],
           [ 1.15592217e+00,  1.21589243e+00,  1.17091501e+00,  ...,
             1.47076499e+00,  1.41079497e+00,  8.11094642e-01],
           ...,
           [ 7.81109631e-01,  1.06596720e+00,  1.06596720e+00,  ...,
             1.06596720e+00,  9.46027160e-01,  8.26087117e-01],
           [ 6.91154599e-01,  8.56072128e-01,  8.56072128e-01,  ...,
             8.86057138e-01,  7.81109631e-01,  7.81109631e-01],
           [ 1.59070504e+00,  7.81109631e-01,  7.06147075e-01,  ...,
             7.21139610e-01,  6.61169589e-01,  7.06147075e-01]]],


         [[[-9.88888860e-01, -8.93650770e-01, -7.66666651e-01,  ...,
            -5.12698412e-01, -2.26984024e-01,  1.36031771e+00],
           [-9.73015904e-01, -9.09523785e-01, -8.14285696e-01,  ...,
            -5.76190472e-01, -4.33333218e-01,  1.53968334e-01],
           [-8.77777755e-01, -8.61904740e-01, -7.82539666e-01,  ...,
            -5.12698412e-01, -4.49206233e-01, -6.82538673e-02],
           ...,
           [-1.27460313e+00, -1.16349196e+00, -1.09999990e+00,  ...,
            -1.14761901e+00, -9.73015904e-01, -8.41268823e-02],
           [-9.73015904e-01, -9.25396800e-01, -8.93650770e-01,  ...,
            -9.25396800e-01, -7.66666651e-01, -6.82538673e-02],
           [ 8.84127021e-01, -1.31745934e-01, -1.95237994e-01,  ...,
            -2.26984024e-01, -2.11111009e-01,  1.53968334e-01]],

          [[ 1.93236828e-01,  3.54267418e-01,  4.34782714e-01,  ...,
             6.60225511e-01,  6.44122481e-01,  1.57810009e+00],
           [ 3.22061300e-01,  4.34782714e-01,  4.83091891e-01,  ...,
             6.76328599e-01,  5.79710245e-01,  4.66988832e-01],
           [ 3.38164359e-01,  4.18679655e-01,  4.50885773e-01,  ...,
             6.44122481e-01,  5.31401038e-01,  2.25442946e-01],
           ...,
           [ 1.22934580e-07,  1.12721533e-01,  1.28824592e-01,  ...,
             2.41546005e-01,  1.12721533e-01,  1.44927651e-01],
           [ 3.22062373e-02, -1.61029361e-02,  1.61031820e-02,  ...,
             1.28824592e-01,  1.61031820e-02,  1.12721533e-01],
           [ 1.30434811e+00,  1.12721533e-01,  9.66184735e-02,  ...,
             1.44927651e-01,  9.66184735e-02,  1.44927651e-01]],

          [[ 1.11094475e+00,  1.24587750e+00,  1.23088503e+00,  ...,
             1.47076499e+00,  1.33583248e+00,  1.84557760e+00],
           [ 1.23088503e+00,  1.32084000e+00,  1.29085493e+00,  ...,
             1.54572761e+00,  1.45577252e+00,  1.00599718e+00],
           [ 1.15592217e+00,  1.21589243e+00,  1.17091501e+00,  ...,
             1.47076499e+00,  1.41079497e+00,  8.11094642e-01],
           ...,
           [ 7.81109631e-01,  1.06596720e+00,  1.06596720e+00,  ...,
             1.06596720e+00,  9.46027160e-01,  8.26087117e-01],
           [ 6.91154599e-01,  8.56072128e-01,  8.56072128e-01,  ...,
             8.86057138e-01,  7.81109631e-01,  7.81109631e-01],
           [ 1.59070504e+00,  7.81109631e-01,  7.06147075e-01,  ...,
             7.21139610e-01,  6.61169589e-01,  7.06147075e-01]]]]],
       device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0786 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 95, vnnlib ID: 95 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.28730583,  -6.10024929,  -9.28009796,  -8.44915771,  -9.51987553,
          -8.47933578,  -8.97727776, -11.69865417,  -9.80428314,  -9.38548374]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [510]; unstable size 510; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 179, 1, 510] with unstable size 178 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 510] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 510] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [178]; unstable size 178; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 178] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 178] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.50108540,  1.35111046,  0.54155397,  1.42684984,  0.50430489,
          1.14256835,  3.30734301,  2.23950052,  2.31573248]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.28730583,  -6.10024929,  -9.28009796,  -8.44915771,  -9.51987553,
          -8.47933578,  -8.97727776, -11.69865417,  -9.80428314,  -9.38548374]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.26it/s]100%|██████████| 1/1 [00:00<00:00,  9.25it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.63890123,  -6.32812786,  -8.66560364,  -7.82581139,  -8.96019840,
           -7.87306643,  -8.56936741, -11.11590290,  -9.56170082,  -9.26755810]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.31077337]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1108 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 12.9192533493042
alpha/beta optimization time: 1.1978490352630615
initial alpha-crown bounds: tensor([[-0.44016099,  1.42102528,  0.61154747,  1.51243019,  0.57646084,
          1.21278620,  3.40189600,  2.28027105,  2.34299731]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.44016098976135254
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6200041770935
Verifying property 0 with 1 instances.
##### Instance 95 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.44016099]], device='cuda:0') need to verify.
Model prediction is: tensor([ -7.28730583,  -6.10024929,  -9.28009796,  -8.44915771,  -9.51987553,
         -8.47933578,  -8.97727776, -11.69865417,  -9.80428314,  -9.38548374],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.44016099]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 510
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 175
Node /15 input 0: size torch.Size([100]) unstable 18
-----------------
# of unstable neurons: 703
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010323524475097656
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4401588439941406
10 lb beta sum: 0.0, worst -0.44016194343566895
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0519    transfer 0.0001    finalize 0.0001    func 0.0524    
Accumulated time: func 0.0524    prepare 0.0002    bound 0.0519    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 10] 
split level 1: [/input-12, 28] 
split level 2: [/input-12, 6] 
split level 3: [/input-12, 15] 
split level 4: [/input-12, 58] 
split level 5: [/input-12, 29] 
split level 6: [/input-12, 35] 
split level 7: [/input-12, 82] 
split level 8: [/input-12, 45] 
split level 9: [/input-12, 93] 
split level 10: [/input-8, 1428] 
split level 11: [/input-12, 11] 
split level 12: [/input-8, 781] 
split level 13: [/input-8, 893] 
split level 14: [/input-8, 1422] 
split level 15: [/input-12, 90] 
split level 16: [/input-8, 162] 
split level 17: [/input-8, 173] 
split level 18: [/input-8, 1421] 
split level 19: [/input-8, 894] 
split level 20: [/input-8, 697] 
split level 21: [/input, 1771] 
split level 22: [/input-8, 1916] 
split level 23: [/input-8, 557] 
split level 24: [/input-8, 790] 
split level 25: [/input-8, 655] 
split level 26: [/input-8, 597] 
split level 27: [/input-8, 1019] 
split level 28: [/input-8, 130] 
split level 29: [/input-8, 938] 
split level 30: [/input-8, 797] 
split level 31: [/input-8, 1010] 
split level 32: [/input-8, 793] 
split level 33: [/input-8, 565] 
split level 34: [/input-8, 672] 
split level 35: [/input-8, 1938] 
split level 36: [/input-8, 661] 
split level 37: [/input-8, 618] 
split level 38: [/input-8, 1466] 
split level 39: [/input-8, 1875] 
split level 40: [/input, 2537] 
split level 41: [/input-8, 680] 
split level 42: [/input-8, 1868] 
split level 43: [/input, 995] 
split level 44: [/input-8, 1431] 
split level 45: [/input, 2131] 
split level 46: [/input-8, 1090] 
split level 47: [/input, 1772] 
split level 48: [/input-8, 129] 
split level 49: [/input, 1457] 
split level 50: [/input, 1640] 
split level 51: [/input-8, 1619] 
split level 52: [/input, 3523] 
split level 53: [/input-8, 68] 
split level 54: [/input-8, 936] 
split level 55: [/input, 3505] 
split level 56: [/input-8, 503] 
split level 57: [/input-8, 1135] 
split level 58: [/input, 1708] 
split level 59: [/input, 2541] 
split level 60: [/input, 404] 
split level 61: [/input, 2520] 
split level 62: [/input-8, 1576] 
split level 63: [/input-8, 591] 
split level 64: [/input, 2456] 
split level 65: [/input, 3254] 
split level 66: [/input, 2540] 
split level 67: [/input-8, 985] 
split level 68: [/input, 3255] 
split level 69: [/input, 916] 
split level 70: [/input, 3990] 
split level 71: [/input, 822] 
split level 72: [/input, 2750] 
split level 73: [/input-8, 944] 
split level 74: [/input, 3397] 
split level 75: [/input, 2510] 
split level 76: [/input, 1474] 
split level 77: [/input, 2726] 
split level 78: [/input-8, 1011] 
split level 79: [/input, 2150] 
split level 80: [/input, 2252] 
split level 81: [/input, 2766] 
split level 82: [/input, 1369] 
split level 83: [/input, 3489] 
split level 84: [/input, 1502] 
split level 85: [/input, 2536] 
split level 86: [/input, 238] 
split level 87: [/input-8, 1423] 
split level 88: [/input, 2747] 
split level 89: [/input, 3995] 
split level 90: [/input, 2524] 
split level 91: [/input, 2542] 
split level 92: [/input, 3550] 
split level 93: [/input, 2745] 
split level 94: [/input, 966] 
split level 95: [/input-8, 1631] 
split level 96: [/input, 2772] 
split level 97: [/input, 3504] 
split level 98: [/input, 2525] 
split level 99: [/input-8, 1478] 
split level 100: [/input, 1013] 
split level 101: [/input, 4051] 
split level 102: [/input, 3267] 
split level 103: [/input, 4025] 
split level 104: [/input, 227] 
split level 105: [/input, 242] 
split level 106: [/input-8, 1279] 
split level 107: [/input, 180] 
split level 108: [/input, 957] 
split level 109: [/input, 2538] 
split level 110: [/input, 830] 
split level 111: [/input, 3393] 
split level 112: [/input-8, 1623] 
split level 113: [/input, 2279] 
split level 114: [/input, 241] 
split level 115: [/input-8, 1474] 
split level 116: [/input, 197] 
split level 117: [/input-8, 1597] 
split level 118: [/input, 1575] 
split level 119: [/input-8, 835] 
split level 120: [/input, 3564] 
split level 121: [/input-8, 1446] 
split level 122: [/input, 2526] 
split level 123: [/input, 986] 
split level 124: [/input, 806] 
split level 125: [/input, 3249] 
split level 126: [/input, 4052] 
split level 127: [/input, 580] 
split level 128: [/input-8, 871] 
split level 129: [/input, 2509] 
split level 130: [/input, 3418] 
split level 131: [/input, 170] 
split level 132: [/input, 4059] 
split level 133: [/input, 228] 
split level 134: [/input-8, 510] 
split level 135: [/input, 1019] 
split level 136: [/input, 3553] 
split level 137: [/input, 3473] 
split level 138: [/input, 970] 
split level 139: [/input, 3434] 
split level 140: [/input, 499] 
split level 141: [/input, 3304] 
split level 142: [/input, 979] 
split level 143: [/input, 1401] 
split level 144: [/input, 933] 
split level 145: [/input, 229] 
split level 146: [/input, 950] 
split level 147: [/input, 4066] 
split level 148: [/input-8, 905] 
split level 149: [/input, 1516] 
split level 150: [/input, 3251] 
split level 151: [/input, 3306] 
split level 152: [/input-8, 934] 
split level 153: [/input, 1343] 
split level 154: [/input-8, 296] 
split level 155: [/input, 3265] 
split level 156: [/input, 1425] 
split level 157: [/input-8, 1947] 
split level 158: [/input, 2678] 
split level 159: [/input, 3270] 
split level 160: [/input, 4040] 
split level 161: [/input-8, 1617] 
split level 162: [/input, 1399] 
split level 163: [/input, 3268] 
split level 164: [/input, 2126] 
split level 165: [/input, 1014] 
split level 166: [/input, 1490] 
split level 167: [/input, 972] 
split level 168: [/input, 1137] 
split level 169: [/input-8, 973] 
split level 170: [/input, 815] 
split level 171: [/input-8, 1594] 
split level 172: [/input, 1501] 
split level 173: [/input, 2255] 
split level 174: [/input-8, 990] 
split level 175: [/input, 1154] 
split level 176: [/input-8, 511] 
split level 177: [/input, 2481] 
split level 178: [/input, 1008] 
split level 179: [/input, 4074] 
split level 180: [/input, 3172] 
split level 181: [/input-8, 1596] 
split level 182: [/input, 4065] 
split level 183: [/input, 2111] 
split level 184: [/input, 1770] 
split level 185: [/input, 3554] 
split level 186: [/input, 3281] 
split level 187: [/input, 2556] 
split level 188: [/input, 3305] 
split level 189: [/input-8, 1432] 
split level 190: [/input, 3520] 
split level 191: [/input, 1837] 
split level 192: [/input, 145] 
split level 193: [/input, 1500] 
split level 194: [/input-8, 1584] 
split level 195: [/input, 3974] 
split level 196: [/input, 3494] 
split level 197: [/input, 1051] 
split level 198: [/input, 2204] 
split level 199: [/input, 1788] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.44006502628326416
10 lb beta sum: 0.0, worst -0.4400707483291626
Time: prepare 0.0121    bound 0.0973    transfer 0.0023    finalize 0.0027    func 0.1170    
Accumulated time: func 0.1694    prepare 0.0220    bound 0.1492    transfer 0.0024    finalize 0.0029    
all_split False
======================Cut inference begins======================
max lb tensor(0.35100055) min lb tensor(-0.44006336)
Number of Verified Splits: 3 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.011281251907348633 
BICCOS Cumulative time: 0.011281251907348633
Preprocessing time: 0.010492324829101562 Inference time: 0.00015878677368164062 Add cuts time: 6.103515625e-05 Cut analysis time: 0.0005691051483154297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.42516 (1), -0.42421 (1), -0.42385 (1), -0.42276 (1), -0.42272 (1), -0.42075 (1), -0.42059 (1), -0.42047 (1), -0.42042 (1), -0.42035 (1), -0.41967 (1), -0.41944 (1), -0.41852 (1), -0.41801 (1), -0.41657 (1), -0.41579 (1), -0.41557 (1), -0.41538 (1), -0.41485 (1), -0.41405 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5043    set_bounds 0.0088    solve 0.1171    add 0.1813    
Accumulated time: pickout 0.0004    decision 0.5043    set_bounds 0.0088    solve 0.1171    add 0.1813    
Current (lb-rhs): -0.4251558780670166
50 domains visited
Cumulative time: 0.9017848968505859

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] 
split level 1: [/input-12, 15] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 15] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] 
split level 2: [/input-12, 35] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 35] [/input-12, 35] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] 
split level 3: [/input-12, 82] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 82] [/input-12, 82] [/input-12, 35] [/input-12, 82] [/input-12, 82] [/input-12, 35] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.37532496452331543
10 lb beta sum: 0.6084467172622681, worst -0.3628419041633606
Time: prepare 0.0080    bound 0.1146    transfer 0.0007    finalize 0.0023    func 0.1281    
Accumulated time: func 0.2975    prepare 0.0303    bound 0.2638    transfer 0.0031    finalize 0.0051    
all_split False
======================Cut inference begins======================
max lb tensor(0.36318707) min lb tensor(-0.36278450)
Number of Verified Splits: 75 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 11
#cuts >= 20: 0
BICCOS time: 0.016974687576293945 
BICCOS Cumulative time: 0.028255939483642578
Preprocessing time: 0.011852741241455078 Inference time: 0.0028247833251953125 Add cuts time: 0.0019268989562988281 Cut analysis time: 0.00037026405334472656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14134 (2), -0.14122 (2), -0.14117 (2), -0.14066 (2), -0.14013 (2), -0.14010 (2), -0.13622 (2), -0.13579 (2), -0.13515 (2), -0.13378 (2), -0.12988 (2), -0.12915 (2), -0.12676 (2), -0.12663 (2), -0.12167 (2), -0.12055 (2), -0.11939 (2), -0.11931 (2), -0.11856 (2), -0.11746 (2), 
Length of domains: 50
Time: pickout 0.0089    decision 0.0206    set_bounds 0.0127    solve 0.1282    add 0.0867    
Accumulated time: pickout 0.0092    decision 0.5249    set_bounds 0.0215    solve 0.2453    add 0.2680    
Current (lb-rhs): -0.14134091138839722
100 domains visited
Cumulative time: 1.1760742664337158

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 28] [/input-12, 28] [/input-12, 6] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] 
split level 1: [/input-12, 6] [/input-12, 6] [/input-12, 15] [/input-12, 15] [/input-12, 6] [/input-12, 15] [/input-12, 15] [/input-12, 29] [/input-12, 6] [/input-12, 6] 
split level 2: [/input-12, 15] [/input-12, 15] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 15] [/input-12, 35] [/input-12, 29] 
split level 3: [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1334676742553711
10 lb beta sum: 1.1941906213760376, worst -0.04293769598007202
Time: prepare 0.0071    bound 0.1165    transfer 0.0007    finalize 0.0026    func 0.1296    
Accumulated time: func 0.4271    prepare 0.0377    bound 0.3803    transfer 0.0038    finalize 0.0077    
all_split False
======================Cut inference begins======================
max lb tensor(0.56123012) min lb tensor(-0.00377798)
Number of Verified Splits: 399 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 10
#cuts >= 20: 0
BICCOS time: 0.037004709243774414 
BICCOS Cumulative time: 0.06526064872741699
Preprocessing time: 0.01164388656616211 Inference time: 0.017376422882080078 Add cuts time: 0.007653713226318359 Cut analysis time: 0.0003306865692138672
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0010    decision 0.0193    set_bounds 0.0152    solve 0.1297    add 0.0189    
Accumulated time: pickout 0.0102    decision 0.5442    set_bounds 0.0367    solve 0.3750    add 0.2869    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([ 6, 15]), tensor([-1., -1.]), tensor([0, 0]), tensor([1.17378818e-08, 7.73120970e-02]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([ 6, 15, 28]), tensor([-1.,  1., -1.]), tensor([0, 0, 0]), tensor([1.17378818e-08, 2.51376212e-01, 1.56401977e-01]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([ 6, 15, 28]), tensor([-1.,  1.,  1.]), tensor([0, 0, 0]), tensor([1.17378818e-08, 2.51376212e-01, 2.63931811e-01]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([ 6, 35, 28]), tensor([ 1., -1., -1.]), tensor([0, 0, 0]), tensor([-5.34985524e-21,  1.21965691e-01,  1.84667870e-01]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([ 6, 35, 28]), tensor([ 1., -1.,  1.]), tensor([0, 0, 0]), tensor([-5.34985524e-21,  1.21965691e-01,  2.85550416e-01]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([ 6, 35, 28]), tensor([ 1.,  1., -1.]), tensor([0, 0, 0]), tensor([-5.34985524e-21,  1.40132412e-01,  2.02286765e-01]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([ 6, 35, 28]), tensor([1., 1., 1.]), tensor([0, 0, 0]), tensor([-5.34985524e-21,  1.40132412e-01,  2.94437528e-01]), tensor([0, 1, 2]))}
Shallow branching resets to n domains:  7
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.32907867431640625
10 lb beta sum: 1.0122582912445068, worst -0.14498555660247803
Time: prepare 0.0004    bound 0.1176    transfer 0.0001    finalize 0.0002    func 0.1184    
Accumulated time: func 0.5456    prepare 0.0381    bound 0.4979    transfer 0.0040    finalize 0.0079    
After pruning, left:  1

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 10] 
split level 1: [/input-12, 28] 
split level 2: [/input-12, 58] 
split level 3: [/input-12, 29] 
split level 4: [/input-12, 35] 
split level 5: [/input-12, 82] 
split level 6: [/input-12, 93] 
split level 7: [/input-8, 173] 
cut re-enabled after branching node selection
0 lb beta sum: 2.389011859893799, worst 0.0322955846786499

all verified at 0th iter
Time: prepare 0.0114    bound 0.0046    transfer 0.0009    finalize 0.0014    func 0.0199    
Accumulated time: func 0.5655    prepare 0.0500    bound 0.5025    transfer 0.0049    finalize 0.0092    
all_split False
======================Cut inference begins======================
max lb tensor(1.61311305) min lb tensor(0.03229558)
Number of Verified Splits: 256 of 256
Stop inferencing: Max iteration reached.
Total number of valid cuts: 10.
#cuts 1-3: 10
#cuts >= 20: 0
BICCOS time: 0.00033402442932128906 
BICCOS Cumulative time: 0.06559467315673828
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0229    set_bounds 0.0257    solve 0.0200    add 0.0001    
Accumulated time: pickout 0.0106    decision 0.5671    set_bounds 0.0624    solve 0.3950    add 0.2870    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
Cumulative time: 1.6023178100585938


Properties batch 1, size 1
Remaining timeout: 196.79250764846802
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 196.79243302345276
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 196.7917628288269
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 196.79172730445862
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 196.7917070388794
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 196.79168796539307
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 196.7916693687439
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 196.7916510105133
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 3.2084 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 96, vnnlib ID: 96 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -5.44995165, -10.24393463,  -3.02499723,  -5.52738094,  -3.64600706,
          -4.67218781,  -4.64619398,  -5.73077822, -10.13163280,  -9.56945515]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [457]; unstable size 457; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 224, 1, 457] with unstable size 223 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 457] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 457] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [223]; unstable size 223; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 223] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 223] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.06982195,  3.56651163, -3.10427356, -0.30050850, -2.24185658,
         -1.43835664, -0.57025647,  3.45370197,  3.13693857]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -5.44995165, -10.24393463,  -3.02499723,  -5.52738094,  -3.64600706,
          -4.67218781,  -4.64619398,  -5.73077822, -10.13163280,  -9.56945515]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -5.44995213, -10.24393463,  -3.02499771,  -5.52738142,  -3.64600754,
           -4.67218828,  -4.64619493,  -5.73077869, -10.13163280,  -9.56945324],
         [ -5.44995213, -10.24393463,  -3.02499771,  -5.52738142,  -3.64600754,
           -4.67218828,  -4.64619493,  -5.73077869, -10.13163280,  -9.56945324]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.80375719, -1.62119722,  0.88118649, -1.00018740,  0.02599335,
           1.08458376]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]],


         [[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]],


         [[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]],


         [[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]],


         [[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]],


         [[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0423 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 97, vnnlib ID: 97 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.42443323, -12.86629391,  -5.06406689,  -6.59175348,  -5.65273857,
          -7.37562561,  -6.97437239,  -7.97660685,  -9.45366764, -11.25179768]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [815]; unstable size 815; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 348, 1, 815] with unstable size 347 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 815] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 815] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [347]; unstable size 347; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 347] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 347] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.99483013,  5.88476753,  0.52514780, -0.25146762,  1.10866022,
          0.87214196,  1.88426137,  2.11473417,  4.06170130]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.42443323, -12.86629391,  -5.06406689,  -6.59175348,  -5.65273857,
          -7.37562561,  -6.97437239,  -7.97660685,  -9.45366764, -11.25179768]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.35it/s]100%|██████████| 1/1 [00:00<00:00,  9.34it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.91634750, -12.22560024,  -4.62670612,  -5.97058296,  -4.77927256,
           -6.74498940,  -6.27670527,  -7.29330587,  -8.81531429, -10.70232105]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.15256643]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1097 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 18.199155807495117
alpha/beta optimization time: 1.165112018585205
initial alpha-crown bounds: tensor([[ 1.10888195,  6.06384706,  0.59163451, -0.20346975,  1.20185626,
          0.91255486,  1.97026229,  2.29743671,  4.25615120]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.20346975326538086
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.66201996803284
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.66197562217712
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.6619532108307
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.66193318367004
Verifying property 3 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.20346975]], device='cuda:0') need to verify.
Model prediction is: tensor([ -7.42443323, -12.86629391,  -5.06406689,  -6.59175348,  -5.65273857,
         -7.37562561,  -6.97437239,  -7.97660685,  -9.45366764, -11.25179768],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.20346975]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 815
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 334
Node /15 input 0: size torch.Size([100]) unstable 18
-----------------
# of unstable neurons: 1167
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010323524475097656
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2034694254398346
10 lb beta sum: 0.0, worst -0.2034754753112793
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0513    transfer 0.0001    finalize 0.0001    func 0.0518    
Accumulated time: func 0.0518    prepare 0.0002    bound 0.0513    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 41] 
split level 1: [/input-12, 46] 
split level 2: [/input-12, 32] 
split level 3: [/input-12, 33] 
split level 4: [/input-8, 289] 
split level 5: [/input-8, 457] 
split level 6: [/input-12, 60] 
split level 7: [/input-8, 290] 
split level 8: [/input-8, 843] 
split level 9: [/input-8, 1412] 
split level 10: [/input-8, 1003] 
split level 11: [/input, 2628] 
split level 12: [/input, 2629] 
split level 13: [/input-8, 116] 
split level 14: [/input-8, 421] 
split level 15: [/input-8, 866] 
split level 16: [/input-8, 1420] 
split level 17: [/input-8, 1749] 
split level 18: [/input-8, 1748] 
split level 19: [/input-8, 618] 
split level 20: [/input-8, 1756] 
split level 21: [/input, 476] 
split level 22: [/input-8, 1322] 
split level 23: [/input, 2630] 
split level 24: [/input-8, 2008] 
split level 25: [/input-8, 617] 
split level 26: [/input-8, 1490] 
split level 27: [/input-8, 310] 
split level 28: [/input-8, 619] 
split level 29: [/input-8, 1859] 
split level 30: [/input-8, 858] 
split level 31: [/input-8, 1443] 
split level 32: [/input, 2105] 
split level 33: [/input-8, 429] 
split level 34: [/input-8, 1747] 
split level 35: [/input, 3947] 
split level 36: [/input, 460] 
split level 37: [/input, 329] 
split level 38: [/input-8, 117] 
split level 39: [/input-8, 1004] 
split level 40: [/input, 475] 
split level 41: [/input-8, 1459] 
split level 42: [/input, 620] 
split level 43: [/input-8, 1966] 
split level 44: [/input, 330] 
split level 45: [/input-8, 489] 
split level 46: [/input-8, 2036] 
split level 47: [/input-8, 995] 
split level 48: [/input-8, 1482] 
split level 49: [/input-8, 932] 
split level 50: [/input, 2965] 
split level 51: [/input-8, 477] 
split level 52: [/input, 2326] 
split level 53: [/input-8, 456] 
split level 54: [/input-8, 473] 
split level 55: [/input-8, 928] 
split level 56: [/input, 3148] 
split level 57: [/input-8, 874] 
split level 58: [/input-8, 1331] 
split level 59: [/input, 2122] 
split level 60: [/input-8, 1460] 
split level 61: [/input, 3494] 
split level 62: [/input-8, 978] 
split level 63: [/input-8, 291] 
split level 64: [/input, 2642] 
split level 65: [/input, 3692] 
split level 66: [/input, 1097] 
split level 67: [/input, 236] 
split level 68: [/input, 458] 
split level 69: [/input-8, 1757] 
split level 70: [/input-8, 963] 
split level 71: [/input, 1302] 
split level 72: [/input-8, 1011] 
split level 73: [/input, 2137] 
split level 74: [/input-8, 481] 
split level 75: [/input-8, 414] 
split level 76: [/input, 1557] 
split level 77: [/input-8, 929] 
split level 78: [/input-8, 413] 
split level 79: [/input, 2981] 
split level 80: [/input, 1590] 
split level 81: [/input, 2359] 
split level 82: [/input, 426] 
split level 83: [/input, 3163] 
split level 84: [/input, 102] 
split level 85: [/input, 1370] 
split level 86: [/input, 3130] 
split level 87: [/input-8, 1427] 
split level 88: [/input-8, 264] 
split level 89: [/input, 3178] 
split level 90: [/input, 361] 
split level 91: [/input, 313] 
split level 92: [/input, 3515] 
split level 93: [/input, 2949] 
split level 94: [/input-8, 994] 
split level 95: [/input, 2155] 
split level 96: [/input-8, 2037] 
split level 97: [/input, 408] 
split level 98: [/input, 2087] 
split level 99: [/input-8, 1491] 
split level 100: [/input, 2236] 
split level 101: [/input-8, 1570] 
split level 102: [/input-8, 2033] 
split level 103: [/input-8, 940] 
split level 104: [/input, 132] 
split level 105: [/input, 252] 
split level 106: [/input, 2232] 
split level 107: [/input, 3195] 
split level 108: [/input, 1556] 
split level 109: [/input-8, 1323] 
split level 110: [/input-8, 2000] 
split level 111: [/input, 1368] 
split level 112: [/input, 3946] 
split level 113: [/input, 3096] 
split level 114: [/input-8, 474] 
split level 115: [/input-8, 948] 
split level 116: [/input-8, 620] 
split level 117: [/input-8, 2001] 
split level 118: [/input, 2392] 
split level 119: [/input-8, 586] 
split level 120: [/input, 2235] 
split level 121: [/input-8, 1483] 
split level 122: [/input, 3400] 
split level 123: [/input-8, 1489] 
split level 124: [/input-8, 859] 
split level 125: [/input, 2343] 
split level 126: [/input, 2342] 
split level 127: [/input-8, 1950] 
split level 128: [/input, 3180] 
split level 129: [/input, 3912] 
split level 130: [/input-8, 1765] 
split level 131: [/input-8, 1568] 
split level 132: [/input, 2357] 
split level 133: [/input, 134] 
split level 134: [/input-8, 1554] 
split level 135: [/input, 3177] 
split level 136: [/input, 2325] 
split level 137: [/input, 2071] 
split level 138: [/input-8, 1576] 
split level 139: [/input, 3131] 
split level 140: [/input-8, 1426] 
split level 141: [/input, 2154] 
split level 142: [/input, 3690] 
split level 143: [/input-8, 1986] 
split level 144: [/input, 3923] 
split level 145: [/input-8, 397] 
split level 146: [/input, 2361] 
split level 147: [/input, 1317] 
split level 148: [/input-8, 979] 
split level 149: [/input, 2268] 
split level 150: [/input, 2950] 
split level 151: [/input-8, 1006] 
split level 152: [/input, 2373] 
split level 153: [/input, 3655] 
split level 154: [/input-8, 126] 
split level 155: [/input, 2425] 
split level 156: [/input, 1446] 
split level 157: [/input, 3192] 
split level 158: [/input, 2067] 
split level 159: [/input-8, 450] 
split level 160: [/input-8, 1553] 
split level 161: [/input, 3658] 
split level 162: [/input-8, 1552] 
split level 163: [/input, 2262] 
split level 164: [/input, 2072] 
split level 165: [/input, 4009] 
split level 166: [/input, 2422] 
split level 167: [/input, 3095] 
split level 168: [/input, 2360] 
split level 169: [/input, 3113] 
split level 170: [/input, 3724] 
split level 171: [/input, 3708] 
split level 172: [/input, 2948] 
split level 173: [/input, 2982] 
split level 174: [/input-8, 495] 
split level 175: [/input, 2421] 
split level 176: [/input, 3189] 
split level 177: [/input, 3492] 
split level 178: [/input, 2243] 
split level 179: [/input-8, 867] 
split level 180: [/input, 2227] 
split level 181: [/input, 114] 
split level 182: [/input, 3660] 
split level 183: [/input, 2563] 
split level 184: [/input, 220] 
split level 185: [/input, 1338] 
split level 186: [/input, 2967] 
split level 187: [/input, 1572] 
split level 188: [/input, 116] 
split level 189: [/input, 2054] 
split level 190: [/input, 2375] 
split level 191: [/input, 360] 
split level 192: [/input, 3212] 
split level 193: [/input, 3350] 
split level 194: [/input-8, 1001] 
split level 195: [/input, 117] 
split level 196: [/input, 3642] 
split level 197: [/input, 1484] 
split level 198: [/input, 2884] 
split level 199: [/input, 2997] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20346954464912415
10 lb beta sum: 0.0, worst -0.20347514748573303
Time: prepare 0.0121    bound 0.0962    transfer 0.0024    finalize 0.0030    func 0.1164    
Accumulated time: func 0.1682    prepare 0.0236    bound 0.1475    transfer 0.0025    finalize 0.0031    
all_split False
======================Cut inference begins======================
max lb tensor(0.04398450) min lb tensor(-0.20346943)
Number of Verified Splits: 2 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.010573863983154297 
BICCOS Cumulative time: 0.010573863983154297
Preprocessing time: 0.010147809982299805 Inference time: 0.00011777877807617188 Add cuts time: 7.367134094238281e-05 Cut analysis time: 0.0002346038818359375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19579 (1), -0.19577 (1), -0.19563 (1), -0.19537 (1), -0.19524 (1), -0.19521 (1), -0.19499 (1), -0.19495 (1), -0.19479 (1), -0.19442 (1), -0.19434 (1), -0.19433 (1), -0.19426 (1), -0.19424 (1), -0.19423 (1), -0.19393 (1), -0.19365 (1), -0.19335 (1), -0.19321 (1), -0.19306 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5135    set_bounds 0.0095    solve 0.1165    add 0.0749    
Accumulated time: pickout 0.0003    decision 0.5135    set_bounds 0.0095    solve 0.1165    add 0.0749    
Current (lb-rhs): -0.1957947015762329
50 domains visited
Cumulative time: 0.7961339950561523

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 46] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] 
split level 1: [/input-12, 46] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] 
split level 2: [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] 
split level 3: [/input-8, 429] [/input-8, 290] [/input-8, 290] [/input-8, 290] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-8, 290] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1901342272758484
10 lb beta sum: 0.40796828269958496, worst -0.1628502607345581
Time: prepare 0.0086    bound 0.1144    transfer 0.0008    finalize 0.0026    func 0.1289    
Accumulated time: func 0.2971    prepare 0.0324    bound 0.2619    transfer 0.0033    finalize 0.0057    
all_split False
======================Cut inference begins======================
max lb tensor(0.22742066) min lb tensor(-0.16281150)
Number of Verified Splits: 99 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.017426252365112305 
BICCOS Cumulative time: 0.0280001163482666
Preprocessing time: 0.011794567108154297 Inference time: 0.0034868717193603516 Add cuts time: 0.0019083023071289062 Cut analysis time: 0.00023651123046875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04542 (2), -0.04449 (2), -0.04439 (2), -0.04424 (2), -0.04379 (2), -0.04361 (2), -0.04301 (2), -0.04264 (2), -0.04241 (2), -0.04182 (2), -0.04168 (2), -0.04151 (2), -0.04139 (2), -0.04121 (2), -0.04113 (2), -0.04091 (2), -0.04069 (2), -0.04058 (2), -0.04027 (2), -0.03996 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0196    set_bounds 0.0114    solve 0.1290    add 0.0840    
Accumulated time: pickout 0.0015    decision 0.5332    set_bounds 0.0209    solve 0.2455    add 0.1588    
Current (lb-rhs): -0.04542192816734314
100 domains visited
Cumulative time: 1.0589346885681152

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] 
split level 1: [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] 
split level 2: [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-8, 289] [/input-12, 33] [/input-8, 289] [/input-12, 33] [/input-12, 33] [/input-12, 33] 
split level 3: [/input-8, 290] [/input-8, 290] [/input-8, 290] [/input-8, 290] [/input-8, 290] [/input-8, 290] [/input-8, 290] [/input, 2072] [/input-8, 290] [/input-8, 290] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07779151201248169
10 lb beta sum: 0.5109068751335144, worst -0.04789471626281738
Time: prepare 0.0092    bound 0.1142    transfer 0.0007    finalize 0.0024    func 0.1297    
Accumulated time: func 0.4268    prepare 0.0418    bound 0.3761    transfer 0.0040    finalize 0.0081    
all_split False
======================Cut inference begins======================
max lb tensor(0.17879450) min lb tensor(-0.04343298)
Number of Verified Splits: 108 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 6
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0185849666595459 
BICCOS Cumulative time: 0.0465850830078125
Preprocessing time: 0.011718988418579102 Inference time: 0.004081249237060547 Add cuts time: 0.002399444580078125 Cut analysis time: 0.000385284423828125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01233 (3), -0.01228 (3), -0.01217 (3), -0.01176 (3), -0.01173 (3), -0.01172 (3), -0.01160 (3), -0.01152 (3), -0.01137 (3), -0.01133 (3), -0.01128 (3), -0.01122 (3), -0.01106 (3), -0.01089 (3), -0.01088 (3), -0.01078 (3), -0.01067 (3), -0.01060 (3), -0.01049 (3), -0.01025 (3), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0191    set_bounds 0.0150    solve 0.1298    add 0.0885    
Accumulated time: pickout 0.0026    decision 0.5523    set_bounds 0.0359    solve 0.3752    add 0.2474    
Current (lb-rhs): -0.01233142614364624
150 domains visited
Cumulative time: 1.331272840499878

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] 
split level 1: [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] 
split level 2: [/input-8, 290] [/input-8, 289] [/input-8, 289] [/input-8, 290] [/input-8, 289] [/input-12, 33] [/input-8, 289] [/input-8, 289] [/input-8, 289] [/input-8, 289] 
split level 3: [/input, 2072] [/input-8, 290] [/input-8, 290] [/input, 2630] [/input-8, 290] [/input, 2071] [/input-8, 290] [/input-8, 290] [/input-8, 290] [/input-8, 290] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.051233530044555664
10 lb beta sum: 0.5603479743003845, worst -0.10456785559654236
Time: prepare 0.0094    bound 0.1301    transfer 0.0008    finalize 0.0025    func 0.1455    
Accumulated time: func 0.5722    prepare 0.0515    bound 0.5063    transfer 0.0048    finalize 0.0106    
all_split False
======================Cut inference begins======================
max lb tensor(0.20295922) min lb tensor(-0.00795183)
Number of Verified Splits: 316 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 45.
#cuts 1-3: 11
#cuts 4-6: 34
#cuts >= 20: 0
BICCOS time: 0.03692007064819336 
BICCOS Cumulative time: 0.08350515365600586
Preprocessing time: 0.012591123580932617 Inference time: 0.013471126556396484 Add cuts time: 0.009549617767333984 Cut analysis time: 0.0013082027435302734
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00795 (4), -0.00793 (4), -0.00736 (4), -0.00732 (4), -0.00727 (4), -0.00722 (4), -0.00478 (4), -0.00461 (4), -0.00450 (4), -0.00258 (4), -0.00124 (4), -0.00124 (4), 
Length of domains: 12
Time: pickout 0.0011    decision 0.0192    set_bounds 0.0158    solve 0.1456    add 0.2662    
Accumulated time: pickout 0.0037    decision 0.5715    set_bounds 0.0517    solve 0.5208    add 0.5136    
Current (lb-rhs): -0.007951825857162476
162 domains visited
Cumulative time: 1.816436767578125

Shallow-BaB round 5
batch: 12
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 32] [/input-12, 41] [/input-12, 32] 
split level 1: [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-8, 457] [/input-8, 457] [/input-8, 457] [/input-8, 457] 
split level 2: [/input-8, 457] [/input-8, 289] [/input-8, 457] [/input-8, 457] [/input-8, 457] [/input-8, 457] [/input-8, 289] [/input-8, 289] [/input-8, 289] [/input-8, 289] 
split level 3: [/input-8, 289] [/input-8, 457] [/input-8, 289] [/input-8, 290] [/input-8, 290] [/input-8, 290] [/input-8, 290] [/input-8, 290] [/input-8, 290] [/input-8, 843] 
split level 4: [/input-8, 843] [/input-8, 843] [/input-8, 843] [/input-8, 843] [/input-8, 843] [/input-8, 843] [/input-8, 843] [/input-8, 843] [/input-8, 843] [/input-8, 290] 
split level 5: [/input-8, 1003] [/input-8, 1003] [/input-8, 1003] [/input-8, 1003] [/input-8, 1003] [/input-8, 1003] [/input-8, 1003] [/input-8, 1003] [/input-8, 1003] [/input-8, 1003] 
split level 6: [/input-8, 116] [/input-8, 116] [/input-8, 116] [/input-8, 116] [/input-8, 116] [/input-8, 116] [/input-8, 116] [/input-8, 116] [/input-8, 116] [/input-8, 116] 
split level 7: [/input-8, 1749] [/input-8, 1749] [/input-8, 1749] [/input-8, 1749] [/input-8, 1749] [/input-8, 1749] [/input-8, 1749] [/input-8, 1749] [/input-8, 1749] [/input-8, 1749] 
split level 8: [/input-8, 1748] [/input-8, 1748] [/input-8, 1748] [/input-8, 1748] [/input-8, 1748] [/input-8, 1748] [/input-8, 1748] [/input-8, 1748] [/input-8, 1748] [/input-8, 117] 
split level 9: [/input-8, 117] [/input-8, 117] [/input-8, 1490] [/input-8, 117] [/input-8, 117] [/input-8, 1490] [/input-8, 117] [/input-8, 117] [/input-8, 117] [/input-8, 1748] 
split level 10: [/input-8, 1331] [/input-8, 1490] [/input-8, 117] [/input-8, 1331] [/input-8, 1490] [/input-8, 117] [/input-8, 1331] [/input-8, 1331] [/input-8, 1490] [/input-8, 1490] 
split level 11: [/input-8, 995] [/input-8, 1331] [/input-8, 1331] [/input-8, 995] [/input-8, 1331] [/input-8, 1331] [/input-8, 995] [/input-8, 995] [/input-8, 1331] [/input-8, 1331] 
split level 12: [/input-8, 874] [/input-8, 1859] [/input-8, 874] [/input-8, 874] [/input-8, 1859] [/input-8, 874] [/input-8, 874] [/input-8, 874] [/input-8, 1859] [/input-8, 1859] 
split level 13: [/input, 2087] [/input-8, 995] [/input-8, 995] [/input, 2087] [/input-8, 995] [/input-8, 995] [/input, 2087] [/input-8, 1323] [/input-8, 995] [/input-8, 874] 
split level 14: [/input-8, 1323] [/input-8, 874] [/input-8, 1323] [/input-8, 1323] [/input-8, 874] [/input-8, 1323] [/input-8, 1323] [/input, 2087] [/input-8, 874] [/input-8, 995] 
split level 15: [/input, 3400] [/input-8, 1323] [/input, 3961] [/input, 3400] [/input-8, 1323] [/input, 3961] [/input, 3400] [/input, 3400] [/input-8, 1323] [/input-8, 1323] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04878687858581543
10 lb beta sum: 0.5863900780677795, worst -0.1257951557636261
Time: prepare 0.0089    bound 0.1443    transfer 0.0050    finalize 0.0033    func 0.1639    
Accumulated time: func 0.7361    prepare 0.0612    bound 0.6506    transfer 0.0098    finalize 0.0139    
all_split False
======================Cut inference begins======================
max lb tensor(0.19631273) min lb tensor(0.00010225)
Number of Verified Splits: 384 of 384
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.04703879356384277 
BICCOS Cumulative time: 0.13054394721984863
Preprocessing time: 0.011135578155517578 Inference time: 0.018107175827026367 Add cuts time: 0.01595759391784668 Cut analysis time: 0.0018384456634521484
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0008    decision 0.0506    set_bounds 0.0146    solve 0.1640    add 0.0330    
Accumulated time: pickout 0.0045    decision 0.6221    set_bounds 0.0663    solve 0.6848    add 0.5467    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
162 domains visited
No domains left, MTS early stop!
Restore {'/input': ([], [], [], [], []), '/input-8': (tensor([1420]), tensor([-1.]), tensor([0]), tensor([-5.34986170e-21]), tensor([0])), '/input-12': ([], [], [], [], [])}
Restore {'/input': ([], [], [], [], []), '/input-8': ([1420], [1.0], [0], [-5.349861697520598e-21], [0]), '/input-12': (tensor([46, 33, 41, 32]), tensor([-1., -1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([0.15441157, 0.02208425, 0.00444536, 0.02449309]), tensor([1, 2, 3, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([1420], [1.0], [0], [-5.349861697520598e-21], [0]), '/input-12': (tensor([46, 33, 41, 32]), tensor([-1., -1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([0.15441157, 0.02208425, 0.00444536, 0.00856736]), tensor([1, 2, 3, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([1420], [1.0], [0], [-5.349861697520598e-21], [0]), '/input-12': (tensor([46, 33, 41]), tensor([-1., -1.,  1.]), tensor([0, 0, 0]), tensor([0.15441157, 0.02208425, 0.15461947]), tensor([1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([1420], [1.0], [0], [-5.349861697520598e-21], [0]), '/input-12': (tensor([46, 33, 41]), tensor([-1.,  1., -1.]), tensor([0, 0, 0]), tensor([0.15441157, 0.03192912, 0.00751992]), tensor([1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([1420], [1.0], [0], [-5.349861697520598e-21], [0]), '/input-12': (tensor([46, 33, 41]), tensor([-1.,  1.,  1.]), tensor([0, 0, 0]), tensor([0.15441157, 0.03192912, 0.15662159]), tensor([1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([1420], [1.0], [0], [-5.349861697520598e-21], [0]), '/input-12': (tensor([46]), tensor([1.]), tensor([0]), tensor([5.61332314e-10]), tensor([1]))}
Shallow branching resets to n domains:  7
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2022702991962433
10 lb beta sum: 0.37241193652153015, worst -0.16113585233688354
Time: prepare 0.0005    bound 0.1391    transfer 0.0002    finalize 0.0002    func 0.1400    
Accumulated time: func 0.8762    prepare 0.0617    bound 0.7897    transfer 0.0099    finalize 0.0141    
After pruning, left:  3

Back to Regular BaB

BaB round 1
batch: 3
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 41] [/input-12, 32] [/input-12, 41] 
split level 1: [/input-12, 46] [/input-8, 457] [/input-12, 32] 
split level 2: [/input-12, 32] [/input-8, 289] [/input-12, 33] 
split level 3: [/input-12, 33] [/input-8, 290] [/input-8, 289] 
split level 4: [/input-8, 289] [/input-8, 116] [/input-8, 290] 
split level 5: [/input-8, 290] [/input-8, 1749] [/input-8, 1748] 
split level 6: [/input-8, 1748] [/input-8, 1748] [/input-8, 429] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7602428197860718, worst -0.09997257590293884
10 lb beta sum: 0.762776255607605, worst -0.14715707302093506
Time: prepare 0.0172    bound 0.1400    transfer 0.0007    finalize 0.0019    func 0.1623    
Accumulated time: func 1.0385    prepare 0.0793    bound 0.9297    transfer 0.0106    finalize 0.0159    
all_split False
======================Cut inference begins======================
max lb tensor(0.47318986) min lb tensor(-0.09931508)
Number of Verified Splits: 332 of 384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.0003750324249267578 
BICCOS Cumulative time: 0.1309189796447754
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09932 (7), -0.09594 (7), -0.09544 (7), -0.09433 (7), -0.09311 (7), -0.09095 (7), -0.09040 (7), -0.08816 (7), -0.08244 (7), -0.08218 (7), -0.08161 (7), -0.08068 (7), -0.07908 (7), -0.07882 (7), -0.07863 (7), -0.07843 (7), -0.07834 (7), -0.07771 (7), -0.07715 (7), -0.07660 (7), 
Length of domains: 52
Time: pickout 0.0006    decision 0.0198    set_bounds 0.0403    solve 0.1625    add 0.0014    
Accumulated time: pickout 0.0051    decision 0.6420    set_bounds 0.1066    solve 0.8473    add 0.5481    
Current (lb-rhs): -0.09931507706642151
214 domains visited
Cumulative time: 2.509925127029419

BaB round 2
batch: 52
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 457] [/input-8, 457] [/input-8, 457] [/input-8, 457] [/input-8, 457] [/input-8, 457] [/input-8, 457] [/input-8, 457] [/input-8, 457] [/input-8, 457] 
split level 1: [/input-8, 421] [/input-8, 421] [/input-8, 421] [/input-8, 421] [/input-8, 421] [/input-8, 421] [/input-8, 421] [/input-8, 1749] [/input-8, 421] [/input-8, 421] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8087688088417053, worst -0.09498849511146545
10 lb beta sum: 0.8088573813438416, worst -0.09484252333641052
Time: prepare 0.0094    bound 0.1451    transfer 0.0012    finalize 0.0013    func 0.1585    
Accumulated time: func 1.1970    prepare 0.0889    bound 1.0748    transfer 0.0118    finalize 0.0172    
all_split False
======================Cut inference begins======================
max lb tensor(0.02394798) min lb tensor(-0.09477487)
Number of Verified Splits: 13 of 208
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.0003635883331298828 
BICCOS Cumulative time: 0.13128256797790527
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09477 (9), -0.09135 (9), -0.09061 (9), -0.09034 (9), -0.08981 (9), -0.08802 (9), -0.08717 (9), -0.08638 (9), -0.08581 (9), -0.08560 (9), -0.08533 (9), -0.08357 (9), -0.08302 (9), -0.08216 (9), -0.08081 (9), -0.07856 (9), -0.07775 (9), -0.07746 (9), -0.07687 (9), -0.07634 (9), 
Length of domains: 195
Time: pickout 0.0018    decision 0.0133    set_bounds 0.0096    solve 0.1585    add 0.0032    
Accumulated time: pickout 0.0069    decision 0.6553    set_bounds 0.1162    solve 1.0058    add 0.5513    
Current (lb-rhs): -0.09477487206459045
409 domains visited
Cumulative time: 2.6970341205596924

BaB round 3
batch: 195
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1749] [/input-8, 1749] [/input-8, 1859] [/input-8, 1749] [/input-8, 1749] [/input-8, 1749] [/input-8, 1749] [/input-8, 1749] [/input-8, 1749] [/input-8, 1749] 
cut re-enabled after branching node selection
0 lb beta sum: 0.804793655872345, worst -0.092841237783432
10 lb beta sum: 0.804793655872345, worst -0.09274229407310486
Time: prepare 0.0177    bound 0.1437    transfer 0.0008    finalize 0.0027    func 0.1675    
Accumulated time: func 1.3645    prepare 0.1068    bound 1.2185    transfer 0.0127    finalize 0.0199    
all_split False
======================Cut inference begins======================
max lb tensor(0.00864866) min lb tensor(-0.09268960)
Number of Verified Splits: 4 of 390
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.0003592967987060547 
BICCOS Cumulative time: 0.13164186477661133
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09269 (10), -0.08888 (10), -0.08846 (10), -0.08772 (10), -0.08598 (10), -0.08500 (10), -0.08464 (10), -0.08390 (10), -0.08364 (10), -0.08343 (10), -0.08268 (10), -0.08150 (10), -0.08098 (10), -0.08097 (10), -0.08056 (10), -0.08025 (10), -0.07996 (10), -0.07967 (10), -0.07933 (10), -0.07861 (10), 
Length of domains: 386
Time: pickout 0.0027    decision 0.0195    set_bounds 0.0164    solve 0.1676    add 0.0027    
Accumulated time: pickout 0.0096    decision 0.6748    set_bounds 0.1326    solve 1.1734    add 0.5540    
Current (lb-rhs): -0.09268960356712341
795 domains visited
Cumulative time: 2.9068140983581543

BaB round 4
batch: 386
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1003] [/input-8, 1003] [/input-8, 1749] [/input-8, 1003] [/input-8, 429] [/input-8, 1859] [/input-8, 1003] [/input-8, 1003] [/input-8, 1859] [/input-8, 1003] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8039455413818359, worst -0.0905519425868988
10 lb beta sum: 0.8039455413818359, worst -0.09048005938529968
Time: prepare 0.0350    bound 0.1545    transfer 0.0013    finalize 0.0046    func 0.2004    
Accumulated time: func 1.5649    prepare 0.1420    bound 1.3730    transfer 0.0140    finalize 0.0245    
all_split False
======================Cut inference begins======================
max lb tensor(0.00743049) min lb tensor(-0.09045169)
Number of Verified Splits: 2 of 772
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.0004146099090576172 
BICCOS Cumulative time: 0.13205647468566895
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09045 (11), -0.08662 (11), -0.08616 (11), -0.08558 (11), -0.08393 (11), -0.08298 (11), -0.08233 (11), -0.08175 (11), -0.08126 (11), -0.08114 (11), -0.08102 (11), -0.08024 (11), -0.07935 (11), -0.07900 (11), -0.07822 (11), -0.07818 (11), -0.07807 (11), -0.07801 (11), -0.07748 (11), -0.07736 (11), 
Length of domains: 770
Time: pickout 0.0064    decision 0.0320    set_bounds 0.0313    solve 0.2006    add 0.0069    
Accumulated time: pickout 0.0160    decision 0.7068    set_bounds 0.1638    solve 1.3741    add 0.5609    
Current (lb-rhs): -0.0904516875743866
1565 domains visited
Cumulative time: 3.185398817062378

BaB round 5
batch: 770
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1859] [/input-8, 1859] [/input, 620] [/input-8, 1859] [/input-8, 1003] [/input, 620] [/input-8, 1859] [/input-8, 1859] [/input, 620] [/input-8, 1859] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8037225008010864, worst -0.08637556433677673
10 lb beta sum: 0.8037225008010864, worst -0.08627364039421082
Time: prepare 0.0706    bound 0.1849    transfer 0.0069    finalize 0.0088    func 0.2814    
Accumulated time: func 1.8464    prepare 0.2127    bound 1.5579    transfer 0.0209    finalize 0.0333    
all_split False
======================Cut inference begins======================
max lb tensor(0.01004091) min lb tensor(-0.08623663)
Number of Verified Splits: 18 of 1540
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.0004494190216064453 
BICCOS Cumulative time: 0.1325058937072754
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08624 (12), -0.08584 (12), -0.08379 (12), -0.08214 (12), -0.08187 (12), -0.08184 (12), -0.08134 (12), -0.08126 (12), -0.08096 (12), -0.08085 (12), -0.07928 (12), -0.07892 (12), -0.07830 (12), -0.07796 (12), -0.07740 (12), -0.07739 (12), -0.07719 (12), -0.07702 (12), -0.07681 (12), -0.07655 (12), 
Length of domains: 1522
Time: pickout 0.0132    decision 0.0541    set_bounds 0.0609    solve 0.2818    add 0.0124    
Accumulated time: pickout 0.0292    decision 0.7609    set_bounds 0.2247    solve 1.6558    add 0.5733    
Current (lb-rhs): -0.0862366259098053
3087 domains visited
Cumulative time: 3.609773874282837

BaB round 6
batch: 1522
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1490] [/input-8, 1490] [/input, 330] [/input-8, 1490] [/input-8, 843] [/input, 330] [/input-8, 1490] [/input-8, 1490] [/input, 330] [/input-8, 1490] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8034964799880981, worst -0.0843794047832489
10 lb beta sum: 0.8034964799880981, worst -0.08433225750923157
Time: prepare 0.1422    bound 0.3048    transfer 0.0188    finalize 0.0168    func 0.5022    
Accumulated time: func 2.3485    prepare 0.3552    bound 1.8627    transfer 0.0397    finalize 0.0501    
all_split False
======================Cut inference begins======================
max lb tensor(0.01267627) min lb tensor(-0.08430871)
Number of Verified Splits: 161 of 3044
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.0004887580871582031 
BICCOS Cumulative time: 0.1329946517944336
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08431 (13), -0.08390 (13), -0.08184 (13), -0.08023 (13), -0.08000 (13), -0.07988 (13), -0.07958 (13), -0.07936 (13), -0.07933 (13), -0.07895 (13), -0.07892 (13), -0.07800 (13), -0.07776 (13), -0.07700 (13), -0.07695 (13), -0.07687 (13), -0.07633 (13), -0.07611 (13), -0.07592 (13), -0.07589 (13), 
Length of domains: 2883
Time: pickout 0.0206    decision 0.0935    set_bounds 0.2603    solve 0.5033    add 0.0182    
Accumulated time: pickout 0.0498    decision 0.8544    set_bounds 0.4850    solve 2.1592    add 0.5916    
Current (lb-rhs): -0.08430871367454529
5970 domains visited
Cumulative time: 4.510374307632446

BaB round 7
batch: 2883
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 620] [/input-8, 429] [/input-8, 843] [/input, 620] [/input-8, 1859] [/input-8, 843] [/input, 620] [/input-8, 429] [/input-8, 843] [/input, 620] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8034870028495789, worst -0.08153662085533142
10 lb beta sum: 0.8034870028495789, worst -0.08151456713676453
Time: prepare 0.2758    bound 0.5165    transfer 0.0438    finalize 0.2103    func 1.0830    
Accumulated time: func 3.4315    prepare 0.6313    bound 2.3792    transfer 0.0835    finalize 0.2605    
all_split False
======================Cut inference begins======================
max lb tensor(0.01108113) min lb tensor(-0.08150110)
Number of Verified Splits: 344 of 5766
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.0005855560302734375 
BICCOS Cumulative time: 0.13358020782470703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08150 (14), -0.08109 (14), -0.07965 (14), -0.07924 (14), -0.07763 (14), -0.07742 (14), -0.07723 (14), -0.07709 (14), -0.07675 (14), -0.07668 (14), -0.07655 (14), -0.07653 (14), -0.07612 (14), -0.07583 (14), -0.07569 (14), -0.07557 (14), -0.07529 (14), -0.07529 (14), -0.07489 (14), -0.07471 (14), 
Length of domains: 5422
Time: pickout 0.0415    decision 0.1665    set_bounds 0.2278    solve 1.0843    add 0.0292    
Accumulated time: pickout 0.0913    decision 1.0209    set_bounds 0.7128    solve 3.2434    add 0.6208    
Current (lb-rhs): -0.08150109648704529
11392 domains visited
Cumulative time: 6.067325592041016

BaB round 8
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 995] [/input, 620] [/input-8, 1003] [/input-8, 995] [/input, 620] [/input-8, 1003] [/input, 330] [/input, 620] [/input-8, 1003] [/input, 330] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8034826517105103, worst -0.08119973540306091
10 lb beta sum: 0.8034826517105103, worst -0.0811934769153595
Time: prepare 0.4046    bound 0.6960    transfer 0.0493    finalize 0.2073    func 1.4102    
Accumulated time: func 4.8417    prepare 1.0361    bound 3.0752    transfer 0.1328    finalize 0.4678    
all_split False
======================Cut inference begins======================
max lb tensor(0.00870538) min lb tensor(-0.08118322)
Number of Verified Splits: 482 of 8192
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.0006330013275146484 
BICCOS Cumulative time: 0.13421320915222168
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08118 (15), -0.08077 (15), -0.07932 (15), -0.07891 (15), -0.07730 (15), -0.07688 (15), -0.07677 (15), -0.07636 (15), -0.07621 (15), -0.07580 (15), -0.07537 (15), -0.07529 (14), -0.07496 (15), -0.07489 (14), -0.07460 (15), -0.07455 (15), -0.07435 (15), -0.07427 (15), -0.07395 (15), -0.07371 (15), 
Length of domains: 9036
Time: pickout 0.0562    decision 0.2291    set_bounds 0.3212    solve 1.4128    add 0.0520    
Accumulated time: pickout 0.1475    decision 1.2500    set_bounds 1.0340    solve 4.6562    add 0.6728    
Current (lb-rhs): -0.08118322491645813
19102 domains visited
current_vram/total_varm: 10.7GB/99.9GB, batch_size increase to 8192
Cumulative time: 8.152606964111328

BaB round 9
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 995] [/input-8, 477] [/input, 2087] [/input-8, 473] [/input-8, 477] [/input-8, 473] [/input-8, 477] [/input, 330] [/input-8, 473] [/input-8, 477] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8034718632698059, worst -0.07897421717643738
10 lb beta sum: 0.8034718632698059, worst -0.07896992564201355
Time: prepare 0.8242    bound 1.3266    transfer 0.0612    finalize 0.2990    func 2.6172    
Accumulated time: func 7.4590    prepare 1.8607    bound 4.4018    transfer 0.1940    finalize 0.7667    
all_split False
======================Cut inference begins======================
max lb tensor(0.01659721) min lb tensor(-0.07896051)
Number of Verified Splits: 1578 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.0006644725799560547 
BICCOS Cumulative time: 0.13487768173217773
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07896 (16), -0.07855 (16), -0.07713 (16), -0.07711 (16), -0.07672 (16), -0.07669 (16), -0.07529 (16), -0.07507 (16), -0.07498 (15), -0.07489 (16), -0.07467 (16), -0.07457 (15), -0.07387 (16), -0.07347 (16), -0.07340 (16), -0.07323 (16), -0.07313 (16), -0.07310 (16), -0.07305 (15), -0.07299 (16), 
Length of domains: 15650
Time: pickout 0.1218    decision 0.4529    set_bounds 0.8786    solve 2.6201    add 0.0545    
Accumulated time: pickout 0.2694    decision 1.7029    set_bounds 1.9126    solve 7.2763    add 0.7273    
Current (lb-rhs): -0.07896050810813904
33908 domains visited
current_vram/total_varm: 25.2GB/99.9GB, batch_size increase to 16384
Cumulative time: 12.306406021118164

BaB round 10
batch: 15650
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 473] [/input-8, 477] [/input-8, 477] [/input-8, 473] [/input-8, 477] [/input-8, 477] [/input-8, 477] [/input-8, 477] [/input, 2087] [/input-8, 995] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8034633994102478, worst -0.07752653956413269
10 lb beta sum: 0.8034633994102478, worst -0.07750996947288513
Time: prepare 1.5764    bound 2.4548    transfer 0.1533    finalize 0.5010    func 4.8860    
Accumulated time: func 12.3450    prepare 3.4375    bound 6.8567    transfer 0.3473    finalize 1.2677    
all_split False
======================Cut inference begins======================
max lb tensor(0.01714811) min lb tensor(-0.07750234)
Number of Verified Splits: 3857 of 31300
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.0007703304290771484 
BICCOS Cumulative time: 0.13564801216125488
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07750 (17), -0.07709 (17), -0.07563 (17), -0.07553 (17), -0.07522 (17), -0.07512 (17), -0.07367 (17), -0.07360 (17), -0.07326 (17), -0.07319 (17), -0.07285 (17), -0.07237 (17), -0.07234 (17), -0.07205 (16), -0.07200 (17), -0.07195 (17), -0.07194 (17), -0.07173 (17), -0.07165 (16), -0.07159 (17), 
Length of domains: 27443
Time: pickout 0.3048    decision 1.1121    set_bounds 1.5623    solve 4.8915    add 0.1384    
Accumulated time: pickout 0.5742    decision 2.8150    set_bounds 3.4749    solve 12.1678    add 0.8657    
Current (lb-rhs): -0.07750234007835388
61351 domains visited
Cumulative time: 20.36689019203186

BaB round 11
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 617] [/input-8, 473] [/input-8, 116] [/input-8, 617] [/input-8, 995] [/input-8, 843] [/input-8, 995] [/input-8, 116] [/input-8, 477] [/input-8, 843] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8034551739692688, worst -0.07504221796989441
10 lb beta sum: 0.8034551739692688, worst -0.07503935694694519
Time: prepare 1.7365    bound 2.5698    transfer 0.1599    finalize 0.2141    func 5.2489    
Accumulated time: func 17.5939    prepare 5.1744    bound 9.4264    transfer 0.5072    finalize 1.4818    
all_split False
======================Cut inference begins======================
max lb tensor(0.22836223) min lb tensor(-0.07503399)
Number of Verified Splits: 4443 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.0007827281951904297 
BICCOS Cumulative time: 0.1364307403564453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07503 (18), -0.07462 (18), -0.07324 (18), -0.07314 (18), -0.07306 (18), -0.07283 (18), -0.07273 (18), -0.07265 (18), -0.07135 (18), -0.07127 (18), -0.07117 (18), -0.07105 (18), -0.07094 (18), -0.07089 (17), -0.07086 (18), -0.07076 (18), -0.07065 (18), -0.07045 (17), -0.07038 (18), -0.07007 (17), 
Length of domains: 39384
Time: pickout 0.2559    decision 1.6928    set_bounds 1.6976    solve 5.2551    add 0.1577    
Accumulated time: pickout 0.8301    decision 4.5079    set_bounds 5.1725    solve 17.4229    add 1.0234    
Current (lb-rhs): -0.0750339925289154
89676 domains visited
Cumulative time: 29.49235725402832

BaB round 12
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 116] [/input-8, 116] [/input-8, 473] [/input, 330] [/input-8, 617] [/input-8, 473] [/input-8, 116] [/input-8, 617] [/input-8, 473] [/input, 330] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8034468293190002, worst -0.07146134972572327
10 lb beta sum: 0.8034468293190002, worst -0.07146534323692322
Time: prepare 1.7345    bound 2.5689    transfer 0.1576    finalize 0.6640    func 5.3410    
Accumulated time: func 22.9348    prepare 6.9093    bound 11.9953    transfer 0.6648    finalize 2.1458    
all_split False
======================Cut inference begins======================
max lb tensor(0.23355456) min lb tensor(-0.07140306)
Number of Verified Splits: 5117 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.0008685588836669922 
BICCOS Cumulative time: 0.1372992992401123
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07503 (18), -0.07462 (18), -0.07314 (18), -0.07306 (18), -0.07273 (18), -0.07265 (18), -0.07140 (19), -0.07135 (18), -0.07117 (18), -0.07105 (18), -0.07099 (19), -0.07094 (18), -0.07076 (18), -0.07065 (18), -0.07045 (17), -0.07038 (18), -0.07007 (17), -0.06987 (18), -0.06966 (18), -0.06953 (18), 
Length of domains: 50651
Time: pickout 0.2540    decision 1.6555    set_bounds 1.7693    solve 5.3472    add 0.1123    
Accumulated time: pickout 1.0841    decision 6.1634    set_bounds 6.9419    solve 22.7701    add 1.1356    
Current (lb-rhs): -0.0750339925289154
117327 domains visited
Cumulative time: 38.70667052268982

BaB round 13
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 458] [/input-8, 617] [/input, 475] [/input-8, 617] [/input-8, 116] [/input-8, 617] [/input-8, 617] [/input, 475] [/input, 458] [/input-8, 617] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8034476041793823, worst -0.07325097918510437
10 lb beta sum: 0.8034476041793823, worst -0.07322558760643005
Time: prepare 1.7649    bound 2.5666    transfer 0.1604    finalize 0.7681    func 5.4730    
Accumulated time: func 28.4078    prepare 8.6746    bound 14.5619    transfer 0.8252    finalize 2.9139    
all_split False
======================Cut inference begins======================
max lb tensor(0.22863215) min lb tensor(-0.07321176)
Number of Verified Splits: 5637 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.0008001327514648438 
BICCOS Cumulative time: 0.13809943199157715
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07321 (19), -0.07314 (18), -0.07280 (19), -0.07273 (18), -0.07140 (19), -0.07124 (19), -0.07117 (18), -0.07099 (19), -0.07083 (19), -0.07076 (18), -0.06987 (18), -0.06955 (19), -0.06948 (18), -0.06944 (19), -0.06923 (19), -0.06916 (18), -0.06912 (19), -0.06902 (19), -0.06882 (19), -0.06874 (18), 
Length of domains: 61398
Time: pickout 0.2605    decision 1.8754    set_bounds 1.4513    solve 5.4793    add 0.1134    
Accumulated time: pickout 1.3447    decision 8.0387    set_bounds 8.3932    solve 28.2494    add 1.2491    
Current (lb-rhs): -0.07321175932884216
144458 domains visited
Cumulative time: 47.95944356918335

BaB round 14
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2087] [/input-8, 617] [/input-8, 473] [/input-8, 617] [/input, 2087] [/input-8, 477] [/input-8, 473] [/input-8, 843] [/input-8, 617] [/input-8, 843] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8034402132034302, worst -0.07135090231895447
10 lb beta sum: 0.8034402132034302, worst -0.07141914963722229
Time: prepare 1.7719    bound 2.5666    transfer 0.1601    finalize 0.2580    func 4.9691    
Accumulated time: func 33.3769    prepare 10.4469    bound 17.1285    transfer 0.9853    finalize 3.1719    
all_split False
======================Cut inference begins======================
max lb tensor(0.23014092) min lb tensor(-0.07131645)
Number of Verified Splits: 6296 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.0008411407470703125 
BICCOS Cumulative time: 0.13894057273864746
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07321 (19), -0.07280 (19), -0.07140 (19), -0.07132 (19), -0.07124 (19), -0.07099 (19), -0.07089 (19), -0.07083 (19), -0.06955 (19), -0.06944 (19), -0.06936 (19), -0.06923 (19), -0.06912 (19), -0.06902 (19), -0.06891 (19), -0.06882 (19), -0.06856 (19), -0.06842 (18), -0.06818 (19), -0.06804 (19), 
Length of domains: 71486
Time: pickout 0.2643    decision 1.6577    set_bounds 2.0017    solve 5.5709    add 0.2169    
Accumulated time: pickout 1.6089    decision 9.6965    set_bounds 10.3948    solve 33.8203    add 1.4659    
Current (lb-rhs): -0.07321175932884216
170930 domains visited
Cumulative time: 57.75198245048523

BaB round 15
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 458] [/input-8, 843] [/input-8, 843] [/input-8, 617] [/input-8, 874] [/input-8, 843] [/input-8, 874] [/input, 458] [/input-12, 60] [/input-12, 60] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8034420013427734, worst -0.07098731398582458
10 lb beta sum: 0.8034420013427734, worst -0.071012943983078
Time: prepare 1.7545    bound 2.5690    transfer 0.1601    finalize 0.2360    func 4.9373    
Accumulated time: func 38.3142    prepare 12.2018    bound 19.6975    transfer 1.1454    finalize 3.4079    
all_split False
======================Cut inference begins======================
max lb tensor(0.23294482) min lb tensor(-0.07095864)
Number of Verified Splits: 6698 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.0008568763732910156 
BICCOS Cumulative time: 0.13979744911193848
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07321 (19), -0.07280 (19), -0.07132 (19), -0.07124 (19), -0.07096 (20), -0.07089 (19), -0.07083 (19), -0.06955 (19), -0.06936 (19), -0.06923 (19), -0.06912 (19), -0.06902 (20), -0.06891 (19), -0.06882 (19), -0.06856 (19), -0.06846 (20), -0.06804 (19), -0.06799 (18), -0.06776 (20), -0.06771 (19), 
Length of domains: 81172
Time: pickout 0.2779    decision 1.6642    set_bounds 2.1745    solve 4.9443    add 0.1148    
Accumulated time: pickout 1.8868    decision 11.3607    set_bounds 12.5694    solve 38.7647    add 1.5807    
Current (lb-rhs): -0.07321175932884216
197000 domains visited
Cumulative time: 67.02264475822449

BaB round 16
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 617] [/input-8, 116] [/input, 458] [/input-8, 995] [/input-8, 116] [/input-8, 473] [/input-8, 116] [/input-8, 473] [/input-8, 116] [/input, 475] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8034376502037048, worst -0.07279655337333679
10 lb beta sum: 0.8034376502037048, worst -0.07279333472251892
Time: prepare 1.7772    bound 2.5681    transfer 0.1585    finalize 0.2084    func 4.9330    
Accumulated time: func 43.2473    prepare 13.9794    bound 22.2656    transfer 1.3039    finalize 3.6163    
all_split False
======================Cut inference begins======================
max lb tensor(0.24134851) min lb tensor(-0.07278690)
Number of Verified Splits: 6439 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.0009622573852539062 
BICCOS Cumulative time: 0.14075970649719238
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07279 (20), -0.07132 (19), -0.07096 (20), -0.07089 (19), -0.07082 (20), -0.07029 (20), -0.06936 (20), -0.06936 (19), -0.06905 (20), -0.06902 (20), -0.06891 (19), -0.06881 (20), -0.06846 (20), -0.06833 (20), -0.06804 (19), -0.06799 (18), -0.06776 (20), -0.06770 (20), -0.06766 (19), -0.06759 (18), 
Length of domains: 91117
Time: pickout 0.2832    decision 1.6637    set_bounds 2.1224    solve 4.9402    add 0.1120    
Accumulated time: pickout 2.1701    decision 13.0244    set_bounds 14.6918    solve 43.7048    add 1.6927    
Current (lb-rhs): -0.07278689742088318
223329 domains visited
Cumulative time: 76.25437116622925

BaB round 17
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 458] [/input-8, 874] [/input, 458] [/input-8, 995] [/input, 458] [/input, 458] [/input, 458] [/input-8, 473] [/input, 458] [/input, 458] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8034346103668213, worst -0.07088872790336609
10 lb beta sum: 0.8034346103668213, worst -0.0709618628025055
Time: prepare 1.7861    bound 2.5723    transfer 0.1565    finalize 1.0563    func 5.7871    
Accumulated time: func 49.0344    prepare 15.7660    bound 24.8379    transfer 1.4604    finalize 4.6726    
all_split False
======================Cut inference begins======================
max lb tensor(0.23279041) min lb tensor(-0.07087919)
Number of Verified Splits: 7508 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.0008339881896972656 
BICCOS Cumulative time: 0.14159369468688965
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07279 (20), -0.07096 (20), -0.07088 (20), -0.07082 (20), -0.07029 (20), -0.06936 (20), -0.06905 (20), -0.06902 (20), -0.06891 (20), -0.06881 (20), -0.06846 (20), -0.06838 (20), -0.06833 (20), -0.06776 (20), -0.06770 (20), -0.06764 (20), -0.06753 (20), -0.06747 (20), -0.06742 (20), -0.06723 (20), 
Length of domains: 99993
Time: pickout 0.2847    decision 2.4199    set_bounds 1.5198    solve 5.7945    add 0.2589    
Accumulated time: pickout 2.4547    decision 15.4443    set_bounds 16.2115    solve 49.4994    add 1.9516    
Current (lb-rhs): -0.07278689742088318
248589 domains visited
Cumulative time: 86.64261555671692

BaB round 18
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 995] [/input-8, 617] [/input-8, 473] [/input-8, 874] [/input-8, 617] [/input-12, 60] [/input-12, 60] [/input-8, 617] [/input-8, 473] [/input-8, 995] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8034300208091736, worst -0.06437405943870544
10 lb beta sum: 0.8034300208091736, worst -0.06460216641426086
Time: prepare 1.8075    bound 2.5732    transfer 0.1600    finalize 1.1381    func 5.8949    
Accumulated time: func 54.9292    prepare 17.5739    bound 27.4110    transfer 1.6204    finalize 5.8107    
all_split False
======================Cut inference begins======================
max lb tensor(0.24488181) min lb tensor(-0.06427231)
Number of Verified Splits: 7143 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.0009081363677978516 
BICCOS Cumulative time: 0.1425018310546875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07279 (20), -0.07096 (20), -0.07088 (20), -0.07082 (20), -0.07029 (20), -0.06936 (20), -0.06905 (20), -0.06902 (20), -0.06891 (20), -0.06881 (20), -0.06846 (20), -0.06838 (20), -0.06833 (20), -0.06776 (20), -0.06770 (20), -0.06764 (20), -0.06753 (20), -0.06747 (20), -0.06742 (20), -0.06723 (20), 
Length of domains: 109234
Time: pickout 0.2844    decision 1.6767    set_bounds 1.5288    solve 5.9024    add 0.1235    
Accumulated time: pickout 2.7392    decision 17.1210    set_bounds 17.7404    solve 55.4017    add 2.0750    
Current (lb-rhs): -0.07278689742088318
274214 domains visited
Cumulative time: 96.26813578605652

BaB round 19
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2087] [/input, 458] [/input-8, 995] [/input-8, 116] [/input, 458] [/input-8, 995] [/input, 458] [/input-8, 617] [/input-8, 116] [/input, 458] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8034268617630005, worst -0.0701121985912323
10 lb beta sum: 0.8034268617630005, worst -0.07016906142234802
Time: prepare 1.8039    bound 2.5702    transfer 0.2406    finalize 0.2303    func 5.0616    
Accumulated time: func 59.9908    prepare 19.3782    bound 29.9812    transfer 1.8609    finalize 6.0410    
all_split False
======================Cut inference begins======================
max lb tensor(0.23987174) min lb tensor(-0.07010677)
Number of Verified Splits: 6950 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.0009195804595947266 
BICCOS Cumulative time: 0.14342141151428223
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07279 (20), -0.07088 (20), -0.07082 (20), -0.07029 (20), -0.07011 (21), -0.06936 (20), -0.06905 (20), -0.06891 (20), -0.06881 (20), -0.06846 (20), -0.06838 (20), -0.06833 (20), -0.06818 (21), -0.06770 (20), -0.06764 (20), -0.06747 (21), -0.06747 (20), -0.06742 (20), -0.06723 (20), -0.06711 (20), 
Length of domains: 118668
Time: pickout 0.2948    decision 1.6684    set_bounds 2.5012    solve 5.0688    add 0.1062    
Accumulated time: pickout 3.0340    decision 18.7894    set_bounds 20.2416    solve 60.4705    add 2.1812    
Current (lb-rhs): -0.07278689742088318
300032 domains visited
Cumulative time: 106.0330581665039

BaB round 20
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 458] [/input-8, 617] [/input-8, 995] [/input-8, 617] [/input-8, 473] [/input-8, 995] [/input-8, 617] [/input-12, 60] [/input-8, 473] [/input-8, 995] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8034269213676453, worst -0.0684603750705719
10 lb beta sum: 0.8034269213676453, worst -0.06850990653038025
Time: prepare 1.8209    bound 2.5682    transfer 0.2584    finalize 0.2385    func 5.1037    
Accumulated time: func 65.0945    prepare 21.1994    bound 32.5494    transfer 2.1194    finalize 6.2795    
all_split False
======================Cut inference begins======================
max lb tensor(0.24192700) min lb tensor(-0.06844482)
Number of Verified Splits: 7961 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.0008640289306640625 
BICCOS Cumulative time: 0.1442854404449463
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07279 (20), -0.07088 (20), -0.07082 (20), -0.07029 (20), -0.07011 (21), -0.06936 (20), -0.06905 (20), -0.06891 (20), -0.06881 (20), -0.06844 (21), -0.06838 (20), -0.06833 (20), -0.06818 (21), -0.06770 (20), -0.06764 (20), -0.06747 (21), -0.06747 (20), -0.06742 (20), -0.06723 (20), -0.06711 (20), 
Length of domains: 127091
Time: pickout 0.2963    decision 1.6831    set_bounds 2.6070    solve 5.1113    add 0.1260    
Accumulated time: pickout 3.3303    decision 20.4725    set_bounds 22.8485    solve 65.5818    add 2.3073    
Current (lb-rhs): -0.07278689742088318
324839 domains visited
Cumulative time: 115.99819469451904

BaB round 21
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 116] [/input, 475] [/input-8, 995] [/input, 2137] [/input, 475] [/input-8, 116] [/input, 475] [/input-8, 874] [/input-8, 473] [/input-8, 473] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8034318685531616, worst -0.07194098830223083
10 lb beta sum: 0.8034318685531616, worst -0.07194218039512634
Time: prepare 1.8057    bound 2.5677    transfer 0.2564    finalize 0.2359    func 5.0810    
Accumulated time: func 70.1755    prepare 23.0056    bound 35.1171    transfer 2.3757    finalize 6.5154    
all_split False
======================Cut inference begins======================
max lb tensor(0.24193215) min lb tensor(-0.07193336)
Number of Verified Splits: 7450 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.0008435249328613281 
BICCOS Cumulative time: 0.14512896537780762
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07193 (21), -0.07088 (20), -0.07029 (20), -0.07011 (21), -0.06997 (21), -0.06932 (21), -0.06891 (20), -0.06879 (21), -0.06844 (21), -0.06838 (20), -0.06833 (20), -0.06820 (21), -0.06818 (21), -0.06796 (21), -0.06764 (20), -0.06747 (21), -0.06747 (20), -0.06737 (21), -0.06696 (21), -0.06691 (21), 
Length of domains: 136025
Time: pickout 0.3259    decision 1.6759    set_bounds 2.6488    solve 5.0895    add 0.1021    
Accumulated time: pickout 3.6561    decision 22.1484    set_bounds 25.4974    solve 70.6713    add 2.4093    
Current (lb-rhs): -0.07193335890769958
350157 domains visited
Cumulative time: 125.99583911895752

BaB round 22
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 116] [/input-8, 995] [/input-8, 995] [/input-8, 995] [/input-8, 995] [/input-8, 995] [/input-12, 60] [/input-8, 116] [/input-8, 116] [/input-12, 60] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8034298419952393, worst -0.07029220461845398
10 lb beta sum: 0.8034298419952393, worst -0.07028350234031677
Time: prepare 3.0248    bound 2.5670    transfer 0.2588    finalize 0.2380    func 6.3041    
Accumulated time: func 76.4795    prepare 26.0308    bound 37.6840    transfer 2.6345    finalize 6.7534    
all_split False
======================Cut inference begins======================
max lb tensor(0.24597630) min lb tensor(-0.07027230)
Number of Verified Splits: 8617 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.0008802413940429688 
BICCOS Cumulative time: 0.14600920677185059
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07193 (21), -0.07088 (20), -0.07027 (21), -0.07011 (21), -0.06997 (21), -0.06932 (21), -0.06891 (20), -0.06879 (21), -0.06844 (21), -0.06838 (20), -0.06831 (21), -0.06820 (21), -0.06818 (21), -0.06796 (21), -0.06764 (20), -0.06747 (21), -0.06747 (20), -0.06737 (21), -0.06696 (21), -0.06691 (21), 
Length of domains: 143792
Time: pickout 0.3046    decision 1.6717    set_bounds 1.5019    solve 6.3165    add 0.0834    
Accumulated time: pickout 3.9607    decision 23.8202    set_bounds 26.9992    solve 76.9878    add 2.4927    
Current (lb-rhs): -0.07193335890769958
374308 domains visited
Cumulative time: 136.04551935195923

BaB round 23
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input, 475] [/input, 2071] [/input-12, 60] [/input-8, 473] [/input, 475] [/input, 2071] [/input-8, 995] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8034272193908691, worst -0.07003280520439148
10 lb beta sum: 0.8034272193908691, worst -0.07006797194480896
Time: prepare 1.8123    bound 2.5693    transfer 0.2435    finalize 1.5781    func 6.4161    
Accumulated time: func 82.8957    prepare 27.8435    bound 40.2534    transfer 2.8780    finalize 8.3315    
all_split False
======================Cut inference begins======================
max lb tensor(0.24100649) min lb tensor(-0.07002077)
Number of Verified Splits: 9447 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.0008294582366943359 
BICCOS Cumulative time: 0.14683866500854492
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07193 (21), -0.07027 (21), -0.07011 (21), -0.07002 (21), -0.06997 (21), -0.06932 (21), -0.06879 (21), -0.06844 (21), -0.06836 (21), -0.06831 (21), -0.06820 (21), -0.06818 (21), -0.06807 (21), -0.06796 (21), -0.06747 (21), -0.06741 (21), -0.06737 (21), -0.06696 (21), -0.06691 (21), -0.06688 (21), 
Length of domains: 150729
Time: pickout 0.3052    decision 1.6749    set_bounds 1.5361    solve 6.4241    add 0.1096    
Accumulated time: pickout 4.2660    decision 25.4951    set_bounds 28.5354    solve 83.4119    add 2.6024    
Current (lb-rhs): -0.07193335890769958
397629 domains visited
Cumulative time: 146.2106478214264

BaB round 24
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 874] [/input-12, 60] [/input-8, 874] [/input-12, 60] [/input-8, 995] [/input, 460] [/input, 460] [/input, 2071] [/input-8, 995] [/input, 460] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8034244775772095, worst -0.06641992926597595
10 lb beta sum: 0.8034244775772095, worst -0.06649479269981384
Time: prepare 1.8152    bound 2.5686    transfer 0.2441    finalize 0.2081    func 5.0557    
Accumulated time: func 87.9514    prepare 29.6592    bound 42.8220    transfer 3.1221    finalize 8.5395    
all_split False
======================Cut inference begins======================
max lb tensor(0.24599013) min lb tensor(-0.06638393)
Number of Verified Splits: 8327 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.0010249614715576172 
BICCOS Cumulative time: 0.14786362648010254
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07193 (21), -0.07027 (21), -0.07011 (21), -0.07002 (21), -0.06997 (21), -0.06932 (21), -0.06879 (21), -0.06844 (21), -0.06836 (21), -0.06831 (21), -0.06820 (21), -0.06818 (21), -0.06807 (21), -0.06796 (21), -0.06747 (21), -0.06741 (21), -0.06737 (21), -0.06696 (21), -0.06691 (21), -0.06688 (21), 
Length of domains: 158786
Time: pickout 0.3075    decision 1.6734    set_bounds 1.5245    solve 5.0629    add 0.1125    
Accumulated time: pickout 4.5735    decision 27.1685    set_bounds 30.0599    solve 88.4748    add 2.7148    
Current (lb-rhs): -0.07193335890769958
422070 domains visited
Cumulative time: 155.04916262626648

BaB round 25
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 458] [/input, 458] [/input, 475] [/input, 458] [/input-12, 60] [/input, 458] [/input, 458] [/input-12, 60] [/input-8, 874] [/input, 475] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8034216165542603, worst -0.061771124601364136
10 lb beta sum: 0.8034216165542603, worst -0.06269410252571106
Time: prepare 1.8243    bound 2.5713    transfer 0.2399    finalize 0.2188    func 5.0740    
Accumulated time: func 93.0254    prepare 31.4839    bound 45.3933    transfer 3.3620    finalize 8.7583    
all_split False
======================Cut inference begins======================
max lb tensor(0.24471754) min lb tensor(-0.06175229)
Number of Verified Splits: 9523 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.001161813735961914 
BICCOS Cumulative time: 0.14902544021606445
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07193 (21), -0.07027 (21), -0.07011 (21), -0.07002 (21), -0.06997 (21), -0.06932 (21), -0.06879 (21), -0.06844 (21), -0.06836 (21), -0.06831 (21), -0.06820 (21), -0.06818 (21), -0.06807 (21), -0.06796 (21), -0.06747 (21), -0.06741 (21), -0.06737 (21), -0.06696 (21), -0.06691 (21), -0.06688 (21), 
Length of domains: 165647
Time: pickout 0.3136    decision 3.0928    set_bounds 1.5261    solve 5.0813    add 0.2692    
Accumulated time: pickout 4.8872    decision 30.2613    set_bounds 31.5860    solve 93.5561    add 2.9840    
Current (lb-rhs): -0.07193335890769958
445315 domains visited
Cumulative time: 165.5302300453186

BaB round 26
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 473] [/input-8, 473] [/input-8, 473] [/input, 475] [/input, 458] [/input, 330] [/input, 458] [/input, 475] [/input, 458] [/input, 330] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8034199476242065, worst -0.06828364729881287
10 lb beta sum: 0.8034199476242065, worst -0.06824323534965515
Time: prepare 1.8230    bound 2.5686    transfer 0.2494    finalize 0.2293    func 5.0863    
Accumulated time: func 98.1116    prepare 33.3073    bound 47.9619    transfer 3.6114    finalize 8.9876    
all_split False
======================Cut inference begins======================
max lb tensor(0.24431929) min lb tensor(-0.06820521)
Number of Verified Splits: 8211 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.0010352134704589844 
BICCOS Cumulative time: 0.15006065368652344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07193 (21), -0.07027 (21), -0.07002 (21), -0.06997 (21), -0.06932 (21), -0.06879 (21), -0.06844 (21), -0.06836 (21), -0.06831 (21), -0.06821 (22), -0.06820 (21), -0.06807 (21), -0.06796 (21), -0.06741 (21), -0.06737 (21), -0.06688 (21), -0.06684 (21), -0.06679 (21), -0.06663 (22), -0.06655 (21), 
Length of domains: 173820
Time: pickout 0.3216    decision 3.1937    set_bounds 1.5239    solve 5.0935    add 0.1161    
Accumulated time: pickout 5.2088    decision 33.4549    set_bounds 33.1098    solve 98.6496    add 3.1001    
Current (lb-rhs): -0.07193335890769958
469872 domains visited
Cumulative time: 175.93207931518555

BaB round 27
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input, 458] [/input-8, 874] [/input, 458] [/input, 2137] [/input-12, 60] [/input-12, 60] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8034182786941528, worst -0.06760212779045105
10 lb beta sum: 0.8034182786941528, worst -0.06761190295219421
Time: prepare 3.3882    bound 2.5673    transfer 0.2430    finalize 0.2320    func 6.6411    
Accumulated time: func 104.7527    prepare 36.6959    bound 50.5292    transfer 3.8543    finalize 9.2196    
all_split False
======================Cut inference begins======================
max lb tensor(0.24084081) min lb tensor(-0.06757769)
Number of Verified Splits: 8801 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.0008981227874755859 
BICCOS Cumulative time: 0.15095877647399902
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07193 (21), -0.07027 (21), -0.07002 (21), -0.06997 (21), -0.06932 (21), -0.06879 (21), -0.06836 (21), -0.06831 (21), -0.06821 (22), -0.06820 (21), -0.06807 (21), -0.06796 (21), -0.06758 (22), -0.06741 (21), -0.06737 (21), -0.06688 (21), -0.06684 (21), -0.06679 (21), -0.06663 (22), -0.06655 (21), 
Length of domains: 181403
Time: pickout 0.3212    decision 1.6887    set_bounds 1.5489    solve 6.6486    add 0.0951    
Accumulated time: pickout 5.5300    decision 35.1437    set_bounds 34.6587    solve 105.2983    add 3.1952    
Current (lb-rhs): -0.07193335890769958
493839 domains visited
Cumulative time: 186.4018669128418

BaB round 28
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 475] [/input, 475] [/input-8, 995] [/input, 475] [/input, 475] [/input, 458] [/input, 475] [/input, 475] [/input-12, 60] [/input-12, 60] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8034167885780334, worst -0.06366649270057678
10 lb beta sum: 0.8034167885780334, worst -0.06367072463035583
Time: prepare 1.8408    bound 2.5665    transfer 0.2454    finalize 0.2554    func 5.1248    
Accumulated time: func 109.8776    prepare 38.5371    bound 53.0957    transfer 4.0997    finalize 9.4750    
all_split False
======================Cut inference begins======================
max lb tensor(0.24320766) min lb tensor(-0.06361845)
Number of Verified Splits: 9255 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.0009884834289550781 
BICCOS Cumulative time: 0.1519472599029541
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07193 (21), -0.07027 (21), -0.07002 (21), -0.06997 (21), -0.06932 (21), -0.06879 (21), -0.06836 (21), -0.06831 (21), -0.06821 (22), -0.06820 (21), -0.06807 (21), -0.06796 (21), -0.06758 (22), -0.06741 (21), -0.06737 (21), -0.06688 (21), -0.06684 (21), -0.06679 (21), -0.06663 (22), -0.06655 (21), 
Length of domains: 188532
Time: pickout 0.3211    decision 1.6876    set_bounds 1.5975    solve 5.1325    add 0.2487    
Accumulated time: pickout 5.8511    decision 36.8313    set_bounds 36.2562    solve 110.4308    add 3.4440    
Current (lb-rhs): -0.07193335890769958
517352 domains visited
Cumulative time: 195.57247376441956

BaB round 29
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 60] [/input-8, 116] [/input-8, 874] [/input-12, 60] [/input, 475] [/input-12, 60] [/input-8, 116] [/input-12, 60] [/input-12, 60] [/input-12, 60] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8034229278564453, worst -0.06847944855690002
10 lb beta sum: 0.8034229278564453, worst -0.06849989295005798
Time: prepare 1.8125    bound 2.5669    transfer 0.2460    finalize 0.2536    func 5.0910    
Accumulated time: func 114.9685    prepare 40.3500    bound 55.6626    transfer 4.3457    finalize 9.7286    
all_split False
======================Cut inference begins======================
max lb tensor(0.24291557) min lb tensor(-0.06847027)
Number of Verified Splits: 7557 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 57.
#cuts 1-3: 11
#cuts 4-6: 46
#cuts >= 20: 0
BICCOS time: 0.0009827613830566406 
BICCOS Cumulative time: 0.15293002128601074
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07193 (21), -0.07027 (21), -0.07002 (21), -0.06997 (21), -0.06847 (22), -0.06836 (21), -0.06831 (21), -0.06821 (22), -0.06807 (21), -0.06796 (21), -0.06758 (22), -0.06741 (21), -0.06688 (21), -0.06688 (22), -0.06679 (21), -0.06663 (22), -0.06655 (21), -0.06653 (22), -0.06639 (21), -0.06638 (21), 
Length of domains: 197359
Time: pickout 0.3266    decision 3.1598    set_bounds 1.5839    solve 5.0982    add 0.2243    
Accumulated time: pickout 6.1777    decision 39.9911    set_bounds 37.8401    solve 115.5290    add 3.6683    
Current (lb-rhs): -0.07193335890769958
542563 domains visited
Time out!!!!!!!!
Result: unknown in 209.3990 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 98, vnnlib ID: 98 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.97282171, -9.59043694, -6.44806576, -4.78952980, -4.97297287,
         -4.42642069, -6.68016386, -6.68106413, -7.70960140, -9.47742367]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [664]; unstable size 664; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 240, 1, 664] with unstable size 239 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 664] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 664] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [239]; unstable size 239; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 239] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 239] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.04075253,  2.86903405,  0.75436568,  0.06829160, -0.61994463,
          1.08730936,  0.85343850,  1.25660872,  3.10610676]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.97282171, -9.59043694, -6.44806576, -4.78952980, -4.97297287,
         -4.42642069, -6.68016386, -6.68106413, -7.70960140, -9.47742367]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.18765354, -9.77073288, -6.59089756, -5.29431868, -4.97382355,
          -4.98171186, -7.01910067, -6.92423296, -7.98603344, -9.82796764]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.00788832]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0072 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0753 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 99, vnnlib ID: 99 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.23901796, -6.11622238, -0.89747995, -2.37960625, -1.48292530,
         -3.00284576, -1.44222963, -3.95331812, -5.41394901, -6.03653765]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [445]; unstable size 445; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 180, 1, 445] with unstable size 179 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 445] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 445] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [179]; unstable size 179; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 179] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 179] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.11019540,  3.76489162, -1.18024492,  0.25222433, -0.68485975,
          0.81499940,  1.69955850,  2.79094529,  3.59716272]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.23901796, -6.11622238, -0.89747995, -2.37960625, -1.48292530,
         -3.00284576, -1.44222963, -3.95331812, -5.41394901, -6.03653765]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.23901796, -6.11622334, -0.89747965, -2.37960601, -1.48292530,
          -3.00284576, -1.44222927, -3.95331812, -5.41394997, -6.03653717],
         [-4.23901796, -6.11622334, -0.89747965, -2.37960601, -1.48292530,
          -3.00284576, -1.44222927, -3.95331812, -5.41394997, -6.03653717]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.54474962,  0.04069602]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.05873025,  0.34444451,  0.05873025,  ..., -1.52857137,
            -1.48095226, -1.48095226],
           [ 0.04285724, -0.30634910, -0.44920623,  ..., -1.54444432,
            -1.56031740, -1.52857137],
           [-0.25873005, -0.63968253, -0.94126981,  ..., -1.54444432,
            -1.56031740, -1.54444432],
           ...,
           [-1.92539680, -1.92539680, -1.95714283,  ..., -1.73492062,
            -1.73492062, -1.75079370],
           [-1.90952384, -1.95714283, -1.96507931,  ..., -1.73492062,
            -1.75079370, -1.76666665],
           [-1.89365077, -1.90952384, -1.92539680,  ..., -1.76666665,
            -1.78253973, -1.78253973]],

          [[-0.16103047,  0.11272153, -0.20933965,  ..., -1.41706920,
            -1.36875999, -1.36875999],
           [-0.25764883, -0.56360704, -0.64412236,  ..., -1.43317223,
            -1.44927526, -1.41706920],
           [-0.51529789, -0.80515295, -1.03059578,  ..., -1.43317223,
            -1.44927526, -1.41706920],
           ...,
           [-1.88405800, -1.90016103, -1.91626418,  ..., -1.88405800,
            -1.90016103, -1.88405800],
           [-1.88405800, -1.93236721, -1.94847023,  ..., -1.90016103,
            -1.90016103, -1.90016103],
           [-1.91626418, -1.94847023, -1.95652175,  ..., -1.88405800,
            -1.91626418, -1.91626418]],

          [[-0.92803597, -0.65817088, -0.97301346,  ..., -1.68515754,
            -1.64767623, -1.64767623],
           [-1.00299859, -1.27286363, -1.34782624,  ..., -1.69265378,
            -1.68515754, -1.68515754],
           [-1.25787115, -1.48275876, -1.61769128,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.68515754, -1.68515754, -1.69265378,  ..., -1.64767623,
            -1.66266882, -1.67766130],
           [-1.68515754, -1.69265378, -1.69265378,  ..., -1.66266882,
            -1.67766130, -1.67766130],
           [-1.69265378, -1.68515754, -1.68515754,  ..., -1.66266882,
            -1.67766130, -1.68515754]]],


         [[[ 0.05873025,  0.34444451,  0.05873025,  ..., -1.52857137,
            -1.48095226, -1.48095226],
           [ 0.04285724, -0.30634910, -0.44920623,  ..., -1.54444432,
            -1.56031740, -1.52857137],
           [-0.25873005, -0.63968253, -0.94126981,  ..., -1.54444432,
            -1.56031740, -1.54444432],
           ...,
           [-1.92539680, -1.92539680, -1.95714283,  ..., -1.73492062,
            -1.73492062, -1.75079370],
           [-1.90952384, -1.95714283, -1.96507931,  ..., -1.73492062,
            -1.75079370, -1.76666665],
           [-1.89365077, -1.90952384, -1.92539680,  ..., -1.76666665,
            -1.78253973, -1.78253973]],

          [[-0.16103047,  0.11272153, -0.20933965,  ..., -1.41706920,
            -1.36875999, -1.36875999],
           [-0.25764883, -0.56360704, -0.64412236,  ..., -1.43317223,
            -1.44927526, -1.41706920],
           [-0.51529789, -0.80515295, -1.03059578,  ..., -1.43317223,
            -1.44927526, -1.41706920],
           ...,
           [-1.88405800, -1.90016103, -1.91626418,  ..., -1.88405800,
            -1.90016103, -1.88405800],
           [-1.88405800, -1.93236721, -1.94847023,  ..., -1.90016103,
            -1.90016103, -1.90016103],
           [-1.91626418, -1.94847023, -1.95652175,  ..., -1.88405800,
            -1.91626418, -1.91626418]],

          [[-0.92803597, -0.65817088, -0.97301346,  ..., -1.68515754,
            -1.64767623, -1.64767623],
           [-1.00299859, -1.27286363, -1.34782624,  ..., -1.69265378,
            -1.68515754, -1.68515754],
           [-1.25787115, -1.48275876, -1.61769128,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.68515754, -1.68515754, -1.69265378,  ..., -1.64767623,
            -1.66266882, -1.67766130],
           [-1.68515754, -1.69265378, -1.69265378,  ..., -1.66266882,
            -1.67766130, -1.67766130],
           [-1.69265378, -1.68515754, -1.68515754,  ..., -1.66266882,
            -1.67766130, -1.68515754]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0746 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 100, vnnlib ID: 100 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.53976345, -13.16501808,  -7.78616238,  -7.53348351,  -7.22956753,
          -7.13146210,  -9.51203918,  -8.66154480, -12.44145298, -11.93621635]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [583]; unstable size 583; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 279, 1, 583] with unstable size 278 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 583] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 583] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [278]; unstable size 278; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 278] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 278] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.95121783,  2.65530014, -1.12760592, -1.74681807, -0.90773940,
          0.75648630, -0.87717187,  2.33981371,  1.64043403]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.53976345, -13.16501808,  -7.78616238,  -7.53348351,  -7.22956753,
          -7.13146210,  -9.51203918,  -8.66154480, -12.44145298, -11.93621635]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.53976154, -13.16501617,  -7.78616142,  -7.53348160,  -7.22956657,
           -7.13146067,  -9.51203918,  -8.66154480, -12.44145107, -11.93621540],
         [-10.53976154, -13.16501617,  -7.78616142,  -7.53348160,  -7.22956657,
           -7.13146067,  -9.51203918,  -8.66154480, -12.44145107, -11.93621540]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.25267982, -0.30391502, -0.40202093,  1.12806320]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]],


         [[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]],


         [[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]],


         [[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0777 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 101, vnnlib ID: 101 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.08083820, -14.74164295, -15.41894627, -16.35571480, -15.69711781,
         -17.93531990, -17.23896980, -18.14307785, -10.66590214, -14.52196217]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [682]; unstable size 682; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 178, 1, 682] with unstable size 177 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 682] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 682] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [177]; unstable size 177; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 177] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 177] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.62306947,  3.08737016,  3.49406075,  4.42359018,  3.72971249,
          5.79383612,  5.18702316,  5.91974545,  2.72902703]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.08083820, -14.74164295, -15.41894627, -16.35571480, -15.69711781,
         -17.93531990, -17.23896980, -18.14307785, -10.66590214, -14.52196217]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.86083126, -14.65515518, -15.32081318, -16.32747269, -15.65061283,
          -17.88081551, -17.16146469, -17.99161720, -10.98882198, -14.44098759]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.12799072]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0050 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0293 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 102, vnnlib ID: 102 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.08662319, -10.92296124,  -4.84066486,  -5.63669729,  -5.64046621,
          -5.76534128,  -7.64309168,  -7.17506170,  -8.36095524,  -9.82923794]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [704]; unstable size 704; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 251, 1, 704] with unstable size 250 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 704] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 704] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [250]; unstable size 250; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 250] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 250] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.20884335,  3.62872148, -1.65299892, -0.98555779, -1.01563978,
          0.82072121,  0.33104610,  1.38739526,  2.34938669]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.08662319, -10.92296124,  -4.84066486,  -5.63669729,  -5.64046621,
          -5.76534128,  -7.64309168,  -7.17506170,  -8.36095524,  -9.82923794]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.08662319, -10.92296028,  -4.84066582,  -5.63669777,  -5.64046764,
           -5.76534081,  -7.64309168,  -7.17506170,  -8.36095524,  -9.82923794],
         [ -7.08662319, -10.92296028,  -4.84066582,  -5.63669777,  -5.64046764,
           -5.76534081,  -7.64309168,  -7.17506170,  -8.36095524,  -9.82923794]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.79980183, -0.00376987,  0.12487316]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 1.05873048,  1.48730183,  1.43968284,  ...,  1.12222254,
             0.82063496,  1.02698421],
           [ 1.29682565,  1.50317490,  1.55079389,  ...,  0.70952386,
             1.01111114,  1.37619078],
           [ 1.24920666,  1.50317490,  1.63015902,  ...,  0.58253974,
             1.04285717,  1.15396857],
           ...,
           [ 0.47142863,  0.64603180,  0.37619054,  ..., -0.35396814,
            -0.43333322, -0.44920623],
           [ 0.23333341,  0.42380959,  0.28095245,  ..., -0.48095238,
            -0.44920623, -0.52857143],
           [ 0.15396833,  0.32857150,  0.21746039,  ..., -0.49682540,
            -0.44920623, -0.54444444]],

          [[ 1.06280196,  1.51368785,  1.48148179,  ...,  1.07890511,
             0.78904998,  0.99838978],
           [ 1.32045114,  1.52979100,  1.57810009,  ...,  0.66022551,
             0.98228669,  1.35265732],
           [ 1.27214205,  1.52979100,  1.67471850,  ...,  0.54750413,
             0.99838978,  1.11111140],
           ...,
           [ 0.43478271,  0.61191636,  0.32206130,  ..., -0.48309177,
            -0.49919480, -0.49919480],
           [ 0.20933989,  0.40257660,  0.24154601,  ..., -0.56360704,
            -0.51529789, -0.57971013],
           [ 0.11272153,  0.30595824,  0.17713377,  ..., -0.56360704,
            -0.51529789, -0.61191624]],

          [[ 0.99100471,  1.36581755,  1.29085493,  ...,  0.76611710,
             0.54122955,  0.73613209],
           [ 1.20089996,  1.35082495,  1.36581755,  ...,  0.37631202,
             0.75112462,  1.11094475],
           [ 1.12593722,  1.33583248,  1.41079497,  ...,  0.24137947,
             0.79610211,  0.91604215],
           ...,
           [ 0.07646193,  0.25637197,  0.06146942,  ..., -0.52323836,
            -0.61319339, -0.61319339],
           [-0.16341813,  0.01649191, -0.07346311,  ..., -0.62818587,
            -0.59820086, -0.64317840],
           [-0.25337315, -0.11844061, -0.16341813,  ..., -0.62818587,
            -0.58320838, -0.65817088]]],


         [[[ 1.05873048,  1.48730183,  1.43968284,  ...,  1.12222254,
             0.82063496,  1.02698421],
           [ 1.29682565,  1.50317490,  1.55079389,  ...,  0.70952386,
             1.01111114,  1.37619078],
           [ 1.24920666,  1.50317490,  1.63015902,  ...,  0.58253974,
             1.04285717,  1.15396857],
           ...,
           [ 0.47142863,  0.64603180,  0.37619054,  ..., -0.35396814,
            -0.43333322, -0.44920623],
           [ 0.23333341,  0.42380959,  0.28095245,  ..., -0.48095238,
            -0.44920623, -0.52857143],
           [ 0.15396833,  0.32857150,  0.21746039,  ..., -0.49682540,
            -0.44920623, -0.54444444]],

          [[ 1.06280196,  1.51368785,  1.48148179,  ...,  1.07890511,
             0.78904998,  0.99838978],
           [ 1.32045114,  1.52979100,  1.57810009,  ...,  0.66022551,
             0.98228669,  1.35265732],
           [ 1.27214205,  1.52979100,  1.67471850,  ...,  0.54750413,
             0.99838978,  1.11111140],
           ...,
           [ 0.43478271,  0.61191636,  0.32206130,  ..., -0.48309177,
            -0.49919480, -0.49919480],
           [ 0.20933989,  0.40257660,  0.24154601,  ..., -0.56360704,
            -0.51529789, -0.57971013],
           [ 0.11272153,  0.30595824,  0.17713377,  ..., -0.56360704,
            -0.51529789, -0.61191624]],

          [[ 0.99100471,  1.36581755,  1.29085493,  ...,  0.76611710,
             0.54122955,  0.73613209],
           [ 1.20089996,  1.35082495,  1.36581755,  ...,  0.37631202,
             0.75112462,  1.11094475],
           [ 1.12593722,  1.33583248,  1.41079497,  ...,  0.24137947,
             0.79610211,  0.91604215],
           ...,
           [ 0.07646193,  0.25637197,  0.06146942,  ..., -0.52323836,
            -0.61319339, -0.61319339],
           [-0.16341813,  0.01649191, -0.07346311,  ..., -0.62818587,
            -0.59820086, -0.64317840],
           [-0.25337315, -0.11844061, -0.16341813,  ..., -0.62818587,
            -0.58320838, -0.65817088]]],


         [[[ 1.05873048,  1.48730183,  1.43968284,  ...,  1.12222254,
             0.82063496,  1.02698421],
           [ 1.29682565,  1.50317490,  1.55079389,  ...,  0.70952386,
             1.01111114,  1.37619078],
           [ 1.24920666,  1.50317490,  1.63015902,  ...,  0.58253974,
             1.04285717,  1.15396857],
           ...,
           [ 0.47142863,  0.64603180,  0.37619054,  ..., -0.35396814,
            -0.43333322, -0.44920623],
           [ 0.23333341,  0.42380959,  0.28095245,  ..., -0.48095238,
            -0.44920623, -0.52857143],
           [ 0.15396833,  0.32857150,  0.21746039,  ..., -0.49682540,
            -0.44920623, -0.54444444]],

          [[ 1.06280196,  1.51368785,  1.48148179,  ...,  1.07890511,
             0.78904998,  0.99838978],
           [ 1.32045114,  1.52979100,  1.57810009,  ...,  0.66022551,
             0.98228669,  1.35265732],
           [ 1.27214205,  1.52979100,  1.67471850,  ...,  0.54750413,
             0.99838978,  1.11111140],
           ...,
           [ 0.43478271,  0.61191636,  0.32206130,  ..., -0.48309177,
            -0.49919480, -0.49919480],
           [ 0.20933989,  0.40257660,  0.24154601,  ..., -0.56360704,
            -0.51529789, -0.57971013],
           [ 0.11272153,  0.30595824,  0.17713377,  ..., -0.56360704,
            -0.51529789, -0.61191624]],

          [[ 0.99100471,  1.36581755,  1.29085493,  ...,  0.76611710,
             0.54122955,  0.73613209],
           [ 1.20089996,  1.35082495,  1.36581755,  ...,  0.37631202,
             0.75112462,  1.11094475],
           [ 1.12593722,  1.33583248,  1.41079497,  ...,  0.24137947,
             0.79610211,  0.91604215],
           ...,
           [ 0.07646193,  0.25637197,  0.06146942,  ..., -0.52323836,
            -0.61319339, -0.61319339],
           [-0.16341813,  0.01649191, -0.07346311,  ..., -0.62818587,
            -0.59820086, -0.64317840],
           [-0.25337315, -0.11844061, -0.16341813,  ..., -0.62818587,
            -0.58320838, -0.65817088]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0719 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 103, vnnlib ID: 103 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.82976532, -12.37597370,  -4.80148506,  -8.27321815,  -4.32335472,
          -8.39564705,  -7.14005709,  -8.87581921, -10.65055561, -11.85609341]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [682]; unstable size 682; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 257, 1, 682] with unstable size 256 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 682] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 682] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [256]; unstable size 256; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 256] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 256] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.48958635,  6.85282898, -0.38445073,  3.19247007,  3.10144305,
          1.89875448,  3.66963387,  5.16848564,  6.31332350]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.82976532, -12.37597370,  -4.80148506,  -8.27321815,  -4.32335472,
          -8.39564705,  -7.14005709,  -8.87581921, -10.65055561, -11.85609341]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.38it/s]100%|██████████| 1/1 [00:00<00:00,  9.38it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.09303856, -12.88755322,  -4.96290588,  -8.65058517,  -4.84228325,
           -8.76727962,  -7.62690067,  -9.28729725, -11.05305099, -12.33880711]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.12062263]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1090 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 32.90011978149414
alpha/beta optimization time: 1.1625642776489258
initial alpha-crown bounds: tensor([[ 2.57450986,  6.94005299, -0.32821092,  3.23324490,  3.14501929,
          1.95601690,  3.71171665,  5.26033783,  6.40743446]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.3282109200954437
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.65713620185852
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.65709948539734
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.65707325935364
Verifying property 2 with 1 instances.
##### Instance 103 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.32821092]], device='cuda:0') need to verify.
Model prediction is: tensor([ -7.82976532, -12.37597370,  -4.80148506,  -8.27321815,  -4.32335472,
         -8.39564705,  -7.14005709,  -8.87581921, -10.65055561, -11.85609341],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.32821092]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 682
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 253
Node /15 input 0: size torch.Size([100]) unstable 14
-----------------
# of unstable neurons: 949
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00012803077697753906
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.32820820808410645
10 lb beta sum: 0.0, worst -0.3282141387462616
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0516    transfer 0.0001    finalize 0.0001    func 0.0521    
Accumulated time: func 0.0521    prepare 0.0002    bound 0.0516    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 54] 
split level 1: [/input-12, 1] 
split level 2: [/input-12, 37] 
split level 3: [/input-12, 72] 
split level 4: [/input-12, 26] 
split level 5: [/input-12, 44] 
split level 6: [/input-12, 51] 
split level 7: [/input-8, 1892] 
split level 8: [/input-8, 1365] 
split level 9: [/input-8, 542] 
split level 10: [/input-8, 533] 
split level 11: [/input-8, 1308] 
split level 12: [/input-8, 1363] 
split level 13: [/input-8, 523] 
split level 14: [/input-8, 1052] 
split level 15: [/input-8, 86] 
split level 16: [/input-8, 1886] 
split level 17: [/input-8, 1357] 
split level 18: [/input-8, 1891] 
split level 19: [/input-8, 1364] 
split level 20: [/input-8, 1356] 
split level 21: [/input-8, 1373] 
split level 22: [/input-8, 77] 
split level 23: [/input-8, 1370] 
split level 24: [/input-8, 1828] 
split level 25: [/input-8, 1067] 
split level 26: [/input-8, 1899] 
split level 27: [/input-8, 539] 
split level 28: [/input-8, 476] 
split level 29: [/input-8, 1812] 
split level 30: [/input-8, 1379] 
split level 31: [/input-8, 1900] 
split level 32: [/input-8, 76] 
split level 33: [/input-8, 1374] 
split level 34: [/input-8, 1068] 
split level 35: [/input-8, 1369] 
split level 36: [/input-8, 1366] 
split level 37: [/input-8, 1358] 
split level 38: [/input-8, 1044] 
split level 39: [/input-8, 1292] 
split level 40: [/input-8, 1894] 
split level 41: [/input-8, 1901] 
split level 42: [/input-8, 1378] 
split level 43: [/input-8, 1893] 
split level 44: [/input-8, 1346] 
split level 45: [/input-8, 1381] 
split level 46: [/input-8, 1876] 
split level 47: [/input-8, 916] 
split level 48: [/input-8, 1861] 
split level 49: [/input-8, 1310] 
split level 50: [/input-8, 517] 
split level 51: [/input-8, 1882] 
split level 52: [/input-8, 1289] 
split level 53: [/input-8, 1890] 
split level 54: [/input-8, 1349] 
split level 55: [/input-8, 1910] 
split level 56: [/input-8, 669] 
split level 57: [/input-8, 990] 
split level 58: [/input-8, 939] 
split level 59: [/input-8, 85] 
split level 60: [/input-8, 1902] 
split level 61: [/input-8, 1889] 
split level 62: [/input-8, 944] 
split level 63: [/input-8, 1382] 
split level 64: [/input-8, 1868] 
split level 65: [/input-8, 1019] 
split level 66: [/input-8, 1339] 
split level 67: [/input-8, 571] 
split level 68: [/input-8, 1350] 
split level 69: [/input-8, 1401] 
split level 70: [/input-8, 572] 
split level 71: [/input-8, 1090] 
split level 72: [/input-8, 92] 
split level 73: [/input-8, 1361] 
split level 74: [/input, 2492] 
split level 75: [/input-8, 931] 
split level 76: [/input-8, 936] 
split level 77: [/input-8, 518] 
split level 78: [/input-8, 932] 
split level 79: [/input-8, 951] 
split level 80: [/input-8, 1405] 
split level 81: [/input-8, 1353] 
split level 82: [/input-8, 969] 
split level 83: [/input, 2455] 
split level 84: [/input-8, 1080] 
split level 85: [/input-8, 1402] 
split level 86: [/input-8, 1827] 
split level 87: [/input-8, 868] 
split level 88: [/input-8, 1318] 
split level 89: [/input-8, 558] 
split level 90: [/input-8, 1396] 
split level 91: [/input-8, 1888] 
split level 92: [/input-8, 977] 
split level 93: [/input, 2536] 
split level 94: [/input-8, 943] 
split level 95: [/input, 2460] 
split level 96: [/input-8, 1880] 
split level 97: [/input, 1687] 
split level 98: [/input-8, 1326] 
split level 99: [/input-8, 1389] 
split level 100: [/input-8, 546] 
split level 101: [/input-12, 53] 
split level 102: [/input-8, 1430] 
split level 103: [/input, 3547] 
split level 104: [/input-8, 404] 
split level 105: [/input, 2475] 
split level 106: [/input-8, 844] 
split level 107: [/input, 2474] 
split level 108: [/input-8, 832] 
split level 109: [/input-8, 985] 
split level 110: [/input-8, 528] 
split level 111: [/input-8, 545] 
split level 112: [/input, 1689] 
split level 113: [/input-8, 537] 
split level 114: [/input-8, 915] 
split level 115: [/input, 1685] 
split level 116: [/input, 2522] 
split level 117: [/input, 3451] 
split level 118: [/input, 437] 
split level 119: [/input, 1723] 
split level 120: [/input-8, 566] 
split level 121: [/input, 2424] 
split level 122: [/input, 1684] 
split level 123: [/input-8, 564] 
split level 124: [/input, 2462] 
split level 125: [/input, 2477] 
split level 126: [/input, 487] 
split level 127: [/input-8, 561] 
split level 128: [/input, 3272] 
split level 129: [/input, 2883] 
split level 130: [/input, 2487] 
split level 131: [/input, 2523] 
split level 132: [/input, 2723] 
split level 133: [/input, 3303] 
split level 134: [/input, 3269] 
split level 135: [/input, 2472] 
split level 136: [/input, 1497] 
split level 137: [/input-8, 1424] 
split level 138: [/input, 4019] 
split level 139: [/input, 1513] 
split level 140: [/input, 1515] 
split level 141: [/input, 2533] 
split level 142: [/input-8, 64] 
split level 143: [/input-8, 1416] 
split level 144: [/input, 1132] 
split level 145: [/input, 471] 
split level 146: [/input, 2518] 
split level 147: [/input, 2554] 
split level 148: [/input, 2516] 
split level 149: [/input, 613] 
split level 150: [/input, 1668] 
split level 151: [/input, 2505] 
split level 152: [/input, 486] 
split level 153: [/input-8, 121] 
split level 154: [/input, 3531] 
split level 155: [/input, 2634] 
split level 156: [/input-8, 980] 
split level 157: [/input, 2264] 
split level 158: [/input, 2555] 
split level 159: [/input, 2551] 
split level 160: [/input, 474] 
split level 161: [/input, 455] 
split level 162: [/input-8, 1875] 
split level 163: [/input-8, 521] 
split level 164: [/input, 2244] 
split level 165: [/input, 438] 
split level 166: [/input, 2506] 
split level 167: [/input, 458] 
split level 168: [/input-8, 935] 
split level 169: [/input, 2500] 
split level 170: [/input, 2443] 
split level 171: [/input, 1674] 
split level 172: [/input, 3575] 
split level 173: [/input, 2553] 
split level 174: [/input, 1403] 
split level 175: [/input, 3577] 
split level 176: [/input, 3467] 
split level 177: [/input, 1499] 
split level 178: [/input-8, 1045] 
split level 179: [/input, 2539] 
split level 180: [/input, 489] 
split level 181: [/input, 2280] 
split level 182: [/input-8, 998] 
split level 183: [/input-8, 84] 
split level 184: [/input, 1117] 
split level 185: [/input, 3290] 
split level 186: [/input, 1751] 
split level 187: [/input, 2428] 
split level 188: [/input, 2249] 
split level 189: [/input, 1419] 
split level 190: [/input, 3256] 
split level 191: [/input, 2470] 
split level 192: [/input, 2429] 
split level 193: [/input, 3321] 
split level 194: [/input, 521] 
split level 195: [/input, 3579] 
split level 196: [/input, 2549] 
split level 197: [/input-8, 529] 
split level 198: [/input, 149] 
split level 199: [/input, 3572] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3281744122505188
10 lb beta sum: 0.0, worst -0.32816773653030396
Time: prepare 0.0120    bound 0.0963    transfer 0.0019    finalize 0.0030    func 0.1158    
Accumulated time: func 0.1678    prepare 0.0221    bound 0.1479    transfer 0.0020    finalize 0.0031    
all_split False
======================Cut inference begins======================
max lb tensor(-0.02066195) min lb tensor(-0.32815930)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.010309934616088867 
BICCOS Cumulative time: 0.010309934616088867
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.31694 (1), -0.31648 (1), -0.31636 (1), -0.31617 (1), -0.31571 (1), -0.31507 (1), -0.31478 (1), -0.31362 (1), -0.31352 (1), -0.31339 (1), -0.31337 (1), -0.31321 (1), -0.31234 (1), -0.31215 (1), -0.31212 (1), -0.31074 (1), -0.31035 (1), -0.31021 (1), -0.30959 (1), -0.30912 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5047    set_bounds 0.0085    solve 0.1158    add 0.0658    
Accumulated time: pickout 0.0003    decision 0.5047    set_bounds 0.0085    solve 0.1158    add 0.0658    
Current (lb-rhs): -0.3169371783733368
50 domains visited
Cumulative time: 0.772907018661499

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 54] [/input-12, 54] [/input-12, 1] [/input-12, 54] [/input-12, 54] [/input-12, 1] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] 
split level 1: [/input-12, 1] [/input-12, 1] [/input-12, 37] [/input-12, 37] [/input-12, 1] [/input-12, 37] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 37] 
split level 2: [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 37] [/input-12, 37] [/input-12, 26] [/input-12, 26] 
split level 3: [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 26] [/input-12, 51] [/input-12, 51] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.29596272110939026
10 lb beta sum: 0.0, worst -0.29588431119918823
Time: prepare 0.0133    bound 0.0946    transfer 0.0014    finalize 0.0023    func 0.1142    
Accumulated time: func 0.2820    prepare 0.0356    bound 0.2426    transfer 0.0034    finalize 0.0054    
all_split False
======================Cut inference begins======================
max lb tensor(0.16014063) min lb tensor(-0.29586691)
Number of Verified Splits: 27 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.013540267944335938 
BICCOS Cumulative time: 0.023850202560424805
Preprocessing time: 0.011752128601074219 Inference time: 0.0011587142944335938 Add cuts time: 0.0003452301025390625 Cut analysis time: 0.0002841949462890625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13613 (2), -0.13576 (2), -0.13385 (2), -0.13356 (2), -0.13349 (2), -0.13302 (2), -0.13233 (2), -0.13217 (2), -0.13213 (2), -0.13045 (2), -0.13022 (2), -0.12939 (2), -0.12920 (2), -0.12847 (2), -0.12797 (2), -0.12766 (2), -0.12625 (2), -0.12470 (2), -0.12452 (2), -0.12318 (2), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0218    set_bounds 0.0119    solve 0.1142    add 0.0786    
Accumulated time: pickout 0.0013    decision 0.5265    set_bounds 0.0204    solve 0.2301    add 0.1444    
Current (lb-rhs): -0.1361345648765564
100 domains visited
Cumulative time: 1.0141260623931885

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1] [/input-12, 1] [/input-12, 37] [/input-12, 1] [/input-12, 54] [/input-12, 37] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] 
split level 1: [/input-12, 37] [/input-12, 37] [/input-12, 26] [/input-12, 37] [/input-12, 1] [/input-12, 26] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] 
split level 2: [/input-12, 26] [/input-12, 26] [/input-12, 44] [/input-12, 26] [/input-12, 26] [/input-12, 44] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 44] 
split level 3: [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-8, 1364] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12922605872154236
10 lb beta sum: 0.4122401475906372, worst -0.28343191742897034
Time: prepare 0.0077    bound 0.1135    transfer 0.0007    finalize 0.0020    func 0.1271    
Accumulated time: func 0.4091    prepare 0.0435    bound 0.3561    transfer 0.0042    finalize 0.0074    
all_split False
======================Cut inference begins======================
max lb tensor(0.25799358) min lb tensor(-0.08397090)
Number of Verified Splits: 172 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 18
#cuts 4-6: 5
#cuts >= 20: 0
BICCOS time: 0.022518634796142578 
BICCOS Cumulative time: 0.04636883735656738
Preprocessing time: 0.011647462844848633 Inference time: 0.0075893402099609375 Add cuts time: 0.0026018619537353516 Cut analysis time: 0.0006799697875976562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01667 (3), -0.01619 (3), -0.01580 (3), -0.01579 (3), -0.01490 (3), -0.01458 (3), -0.01404 (3), -0.01403 (3), -0.01355 (3), -0.01335 (3), -0.01333 (3), -0.01322 (3), -0.01313 (3), -0.01236 (3), -0.01232 (3), -0.01227 (3), -0.01207 (3), -0.01174 (3), -0.01152 (3), -0.01142 (3), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0192    set_bounds 0.0153    solve 0.1272    add 0.0959    
Accumulated time: pickout 0.0023    decision 0.5457    set_bounds 0.0357    solve 0.3573    add 0.2403    
Current (lb-rhs): -0.0166739821434021
150 domains visited
Cumulative time: 1.2953910827636719

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 1] [/input-12, 54] [/input-12, 54] [/input-12, 1] [/input-12, 54] [/input-12, 1] [/input-12, 54] 
split level 1: [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] 
split level 2: [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] 
split level 3: [/input-8, 1373] [/input-8, 1373] [/input-12, 51] [/input-12, 51] [/input-8, 1364] [/input-12, 51] [/input-12, 51] [/input-8, 1373] [/input-12, 51] [/input-12, 51] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07622331380844116
10 lb beta sum: 0.47118258476257324, worst -0.24702149629592896
Time: prepare 0.0079    bound 0.1280    transfer 0.0008    finalize 0.0020    func 0.1413    
Accumulated time: func 0.5504    prepare 0.0517    bound 0.4841    transfer 0.0049    finalize 0.0094    
all_split False
======================Cut inference begins======================
max lb tensor(0.70417440) min lb tensor(-0.01225100)
Number of Verified Splits: 360 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.041385650634765625 
BICCOS Cumulative time: 0.08775448799133301
Preprocessing time: 0.011609554290771484 Inference time: 0.01707005500793457 Add cuts time: 0.011938810348510742 Cut analysis time: 0.0007672309875488281
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0010    decision 0.0190    set_bounds 0.0151    solve 0.1414    add 0.0237    
Accumulated time: pickout 0.0032    decision 0.5647    set_bounds 0.0507    solve 0.4986    add 0.2640    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
No domains left, MTS early stop!
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([54, 26, 51]), tensor([-1., -1., -1.]), tensor([0, 0, 0]), tensor([5.53769723e-08, 4.65825051e-02, 1.17932215e-01]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([54, 26, 51,  1]), tensor([-1., -1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([5.53769723e-08, 4.65825051e-02, 9.54549760e-02, 7.20525384e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([54, 26, 51,  1]), tensor([-1., -1.,  1.,  1.]), tensor([0, 0, 0, 0]), tensor([5.53769723e-08, 4.65825051e-02, 9.54549760e-02, 6.75343117e-03]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([54, 26, 51]), tensor([-1.,  1., -1.]), tensor([0, 0, 0]), tensor([5.53769723e-08, 5.04741818e-02, 1.12895861e-01]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([54, 26, 51,  1]), tensor([-1.,  1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([5.53769723e-08, 5.04741818e-02, 9.66434628e-02, 7.08642751e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([54, 26, 51,  1]), tensor([-1.,  1.,  1.,  1.]), tensor([0, 0, 0, 0]), tensor([5.53769723e-08, 5.04741818e-02, 9.66434628e-02, 7.61728128e-03]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([54,  1, 26]), tensor([ 1., -1., -1.]), tensor([0, 0, 0]), tensor([5.53769723e-08, 1.52891442e-01, 5.69475964e-02]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([54,  1, 26, 37]), tensor([ 1., -1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([5.53769723e-08, 1.52891442e-01, 9.16088298e-02, 8.94326419e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([54,  1, 26, 37]), tensor([ 1., -1.,  1.,  1.]), tensor([0, 0, 0, 0]), tensor([5.53769723e-08, 1.52891442e-01, 9.16088298e-02, 4.36793407e-03]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([54,  1]), tensor([1., 1.]), tensor([0, 0]), tensor([5.53769723e-08, 4.99390513e-02]), tensor([0, 1]))}
Shallow branching resets to n domains:  10
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20287179946899414
10 lb beta sum: 0.4709600508213043, worst -0.1919955611228943
Time: prepare 0.0004    bound 0.1230    transfer 0.0002    finalize 0.0002    func 0.1240    
Accumulated time: func 0.6744    prepare 0.0521    bound 0.6071    transfer 0.0052    finalize 0.0096    
After pruning, left:  2

Back to Regular BaB

BaB round 1
batch: 2
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 37] [/input-12, 37] 
split level 1: [/input-12, 44] [/input-12, 26] 
split level 2: [/input-12, 51] [/input-12, 51] 
split level 3: [/input-8, 1892] [/input-12, 44] 
split level 4: [/input-8, 1373] [/input-8, 1892] 
split level 5: [/input-8, 1364] [/input-8, 1364] 
split level 6: [/input-8, 1381] [/input-8, 1373] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5557711124420166, worst -0.10239993035793304
10 lb beta sum: 0.5842673778533936, worst -0.10126464068889618
Time: prepare 0.0115    bound 0.1260    transfer 0.0012    finalize 0.0018    func 0.2689    
Accumulated time: func 0.9432    prepare 0.0639    bound 0.7332    transfer 0.0064    finalize 0.0114    
all_split False
======================Cut inference begins======================
max lb tensor(0.24758393) min lb tensor(-0.10077377)
Number of Verified Splits: 224 of 256
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.0005235671997070312 
BICCOS Cumulative time: 0.08827805519104004
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10077 (7), -0.09811 (7), -0.09760 (7), -0.09500 (7), -0.08136 (7), -0.07868 (7), -0.07765 (7), -0.07497 (7), -0.06027 (7), -0.05894 (7), -0.05442 (7), -0.05400 (7), -0.04899 (7), -0.04678 (7), -0.04666 (7), -0.04465 (7), -0.04421 (7), -0.04300 (7), -0.03768 (7), -0.03718 (7), 
Length of domains: 32
Time: pickout 0.0005    decision 0.0191    set_bounds 0.0224    solve 0.2689    add 0.0011    
Accumulated time: pickout 0.0037    decision 0.5838    set_bounds 0.0732    solve 0.7676    add 0.2651    
Current (lb-rhs): -0.10077376663684845
182 domains visited
Cumulative time: 1.996901512145996

BaB round 2
batch: 32
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] 
split level 1: [/input-8, 1363] [/input-8, 1363] [/input-8, 1363] [/input-8, 1363] [/input-8, 1363] [/input-8, 1363] [/input-8, 1363] [/input-8, 1363] [/input-8, 1891] [/input-8, 1363] 
split level 2: [/input-8, 1891] [/input-8, 1886] [/input-8, 1891] [/input-8, 1886] [/input-8, 1891] [/input-8, 1886] [/input-8, 1891] [/input-8, 1886] [/input-8, 1363] [/input-8, 1886] 
cut re-enabled after branching node selection
0 lb beta sum: 0.48098599910736084, worst -0.0913478285074234
10 lb beta sum: 0.48098599910736084, worst -0.0907592624425888
Time: prepare 0.0116    bound 0.1261    transfer 0.0017    finalize 0.0012    func 0.1423    
Accumulated time: func 1.0855    prepare 0.0757    bound 0.8593    transfer 0.0080    finalize 0.0126    
all_split False
======================Cut inference begins======================
max lb tensor(0.29917088) min lb tensor(-0.09044276)
Number of Verified Splits: 146 of 256
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.0003352165222167969 
BICCOS Cumulative time: 0.08861327171325684
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09044 (10), -0.08769 (10), -0.08655 (10), -0.08445 (10), -0.08270 (10), -0.08212 (10), -0.08039 (10), -0.07927 (10), -0.07892 (10), -0.07615 (10), -0.07253 (10), -0.07146 (10), -0.07131 (10), -0.07009 (10), -0.06996 (10), -0.06946 (10), -0.06752 (10), -0.06688 (10), -0.06563 (10), -0.06452 (10), 
Length of domains: 110
Time: pickout 0.0015    decision 0.0162    set_bounds 0.0207    solve 0.1423    add 0.0018    
Accumulated time: pickout 0.0052    decision 0.6000    set_bounds 0.0939    solve 0.9099    add 0.2669    
Current (lb-rhs): -0.09044276177883148
292 domains visited
Cumulative time: 2.1815872192382812

BaB round 3
batch: 110
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1886] [/input-8, 1052] [/input-8, 1356] [/input-8, 539] [/input-8, 1356] [/input-8, 1052] [/input-8, 1067] [/input-8, 1356] [/input-8, 1052] [/input-8, 1356] 
cut re-enabled after branching node selection
0 lb beta sum: 0.48156169056892395, worst -0.08683453500270844
10 lb beta sum: 0.48156169056892395, worst -0.0864989310503006
Time: prepare 0.0099    bound 0.1328    transfer 0.0011    finalize 0.0011    func 0.1464    
Accumulated time: func 1.2319    prepare 0.0858    bound 0.9921    transfer 0.0092    finalize 0.0137    
all_split False
======================Cut inference begins======================
max lb tensor(0.01197222) min lb tensor(-0.08637689)
Number of Verified Splits: 34 of 220
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.00034499168395996094 
BICCOS Cumulative time: 0.0889582633972168
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08638 (11), -0.08255 (11), -0.08239 (11), -0.07953 (11), -0.07859 (11), -0.07825 (11), -0.07687 (11), -0.07656 (11), -0.07610 (11), -0.07422 (11), -0.07357 (11), -0.07259 (11), -0.07201 (11), -0.07171 (11), -0.07041 (11), -0.06882 (11), -0.06852 (11), -0.06813 (11), -0.06718 (11), -0.06633 (11), 
Length of domains: 186
Time: pickout 0.0021    decision 0.0168    set_bounds 0.0094    solve 0.1464    add 0.0044    
Accumulated time: pickout 0.0072    decision 0.6168    set_bounds 0.1033    solve 1.0564    add 0.2713    
Current (lb-rhs): -0.08637689054012299
478 domains visited
Cumulative time: 2.361448049545288

BaB round 4
batch: 186
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1886] [/input-8, 1067] [/input-8, 1886] [/input-8, 1828] [/input-8, 1886] [/input-8, 1356] [/input-8, 1357] [/input-8, 1356] [/input-8, 1067] [/input-8, 1357] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4820755124092102, worst -0.08243541419506073
10 lb beta sum: 0.4820755124092102, worst -0.08227096498012543
Time: prepare 0.0166    bound 0.1321    transfer 0.0017    finalize 0.0022    func 0.1551    
Accumulated time: func 1.3870    prepare 0.1026    bound 1.1243    transfer 0.0109    finalize 0.0159    
all_split False
======================Cut inference begins======================
max lb tensor(0.01320788) min lb tensor(-0.08217572)
Number of Verified Splits: 82 of 372
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.0003509521484375 
BICCOS Cumulative time: 0.0893092155456543
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08218 (12), -0.07811 (12), -0.07752 (12), -0.07520 (12), -0.07451 (12), -0.07434 (12), -0.07298 (12), -0.07273 (12), -0.07213 (12), -0.07180 (12), -0.06960 (12), -0.06917 (12), -0.06864 (12), -0.06805 (12), -0.06766 (12), -0.06759 (12), -0.06670 (12), -0.06662 (12), -0.06640 (12), -0.06495 (12), 
Length of domains: 290
Time: pickout 0.0027    decision 0.0208    set_bounds 0.0157    solve 0.1553    add 0.0027    
Accumulated time: pickout 0.0099    decision 0.6376    set_bounds 0.1190    solve 1.2116    add 0.2740    
Current (lb-rhs): -0.08217571675777435
768 domains visited
Cumulative time: 2.559588670730591

BaB round 5
batch: 290
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1356] [/input-8, 1828] [/input-8, 1067] [/input-8, 1828] [/input-8, 1886] [/input-8, 1828] [/input-8, 1356] [/input-8, 1067] [/input-8, 1828] [/input-8, 1357] 
cut re-enabled after branching node selection
0 lb beta sum: 0.48247089982032776, worst -0.07920713722705841
10 lb beta sum: 0.48247089982032776, worst -0.0790824145078659
Time: prepare 0.0258    bound 0.1362    transfer 0.0027    finalize 0.0025    func 0.1709    
Accumulated time: func 1.5579    prepare 0.1286    bound 1.2604    transfer 0.0136    finalize 0.0185    
all_split False
======================Cut inference begins======================
max lb tensor(0.02098402) min lb tensor(-0.07901157)
Number of Verified Splits: 196 of 580
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.0004315376281738281 
BICCOS Cumulative time: 0.08974075317382812
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07901 (13), -0.07699 (13), -0.07494 (13), -0.07154 (13), -0.07118 (13), -0.07025 (13), -0.06936 (13), -0.06876 (13), -0.06867 (13), -0.06862 (13), -0.06771 (13), -0.06588 (13), -0.06569 (13), -0.06467 (13), -0.06411 (13), -0.06365 (13), -0.06339 (13), -0.06239 (13), -0.06238 (13), -0.06223 (13), 
Length of domains: 384
Time: pickout 0.0043    decision 0.0261    set_bounds 0.0243    solve 0.1711    add 0.0029    
Accumulated time: pickout 0.0142    decision 0.6637    set_bounds 0.1433    solve 1.3827    add 0.2769    
Current (lb-rhs): -0.07901157438755035
1152 domains visited
Cumulative time: 2.7902424335479736

BaB round 6
batch: 384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1357] [/input-8, 1357] [/input-8, 1357] [/input-8, 1886] [/input-8, 1357] [/input-8, 1067] [/input-8, 1356] [/input-8, 1886] [/input-8, 1067] [/input-8, 1886] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4838225841522217, worst -0.07384888827800751
10 lb beta sum: 0.4838225841522217, worst -0.07365234196186066
Time: prepare 0.0340    bound 0.1347    transfer 0.0012    finalize 0.0032    func 0.1781    
Accumulated time: func 1.7359    prepare 0.1628    bound 1.3952    transfer 0.0148    finalize 0.0216    
all_split False
======================Cut inference begins======================
max lb tensor(0.01706763) min lb tensor(-0.07358257)
Number of Verified Splits: 156 of 768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.00039649009704589844 
BICCOS Cumulative time: 0.09013724327087402
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07358 (14), -0.07343 (14), -0.06984 (14), -0.06688 (14), -0.06633 (14), -0.06610 (14), -0.06571 (14), -0.06504 (14), -0.06405 (14), -0.06389 (14), -0.06347 (14), -0.06282 (14), -0.06226 (14), -0.06129 (14), -0.06068 (14), -0.06009 (14), -0.05953 (14), -0.05899 (14), -0.05880 (14), -0.05873 (14), 
Length of domains: 612
Time: pickout 0.0065    decision 0.0325    set_bounds 0.0321    solve 0.1783    add 0.0056    
Accumulated time: pickout 0.0208    decision 0.6961    set_bounds 0.1754    solve 1.5611    add 0.2826    
Current (lb-rhs): -0.07358257472515106
1764 domains visited
Cumulative time: 3.0469765663146973

BaB round 7
batch: 612
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1067] [/input-8, 539] [/input-8, 1067] [/input-8, 1891] [/input-8, 542] [/input-8, 542] [/input-8, 542] [/input-8, 542] [/input-8, 542] [/input-8, 542] 
cut re-enabled after branching node selection
0 lb beta sum: 0.48435935378074646, worst -0.07166244089603424
10 lb beta sum: 0.48435935378074646, worst -0.07159756124019623
Time: prepare 0.0537    bound 0.1416    transfer 0.0041    finalize 0.0050    func 0.2132    
Accumulated time: func 1.9491    prepare 0.2167    bound 1.5368    transfer 0.0189    finalize 0.0266    
all_split False
======================Cut inference begins======================
max lb tensor(0.01997028) min lb tensor(-0.07158394)
Number of Verified Splits: 405 of 1224
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.0003814697265625 
BICCOS Cumulative time: 0.09051871299743652
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07158 (15), -0.06934 (15), -0.06796 (15), -0.06449 (15), -0.06367 (15), -0.06344 (15), -0.06207 (15), -0.06160 (15), -0.06089 (15), -0.06088 (15), -0.06063 (15), -0.06020 (15), -0.05970 (15), -0.05941 (15), -0.05885 (15), -0.05872 (15), -0.05793 (15), -0.05745 (15), -0.05666 (15), -0.05664 (15), 
Length of domains: 819
Time: pickout 0.0096    decision 0.0444    set_bounds 0.0498    solve 0.2135    add 0.0062    
Accumulated time: pickout 0.0303    decision 0.7406    set_bounds 0.2251    solve 1.7746    add 0.2887    
Current (lb-rhs): -0.07158394157886505
2583 domains visited
Cumulative time: 3.373419761657715

BaB round 8
batch: 819
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 542] [/input-8, 542] [/input-8, 542] [/input-8, 542] [/input-8, 1356] [/input-8, 1356] [/input-8, 539] [/input-8, 539] [/input-8, 1356] [/input-8, 1356] 
cut re-enabled after branching node selection
0 lb beta sum: 0.48475170135498047, worst -0.07117937505245209
10 lb beta sum: 0.48475170135498047, worst -0.07117931544780731
Time: prepare 0.0721    bound 0.1539    transfer 0.0067    finalize 0.0075    func 0.2513    
Accumulated time: func 2.2004    prepare 0.2890    bound 1.6907    transfer 0.0256    finalize 0.0341    
all_split False
======================Cut inference begins======================
max lb tensor(0.01968534) min lb tensor(-0.07116954)
Number of Verified Splits: 541 of 1638
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.000438690185546875 
BICCOS Cumulative time: 0.0909574031829834
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07117 (16), -0.06738 (16), -0.06327 (16), -0.06219 (16), -0.06163 (16), -0.06001 (16), -0.05979 (16), -0.05892 (16), -0.05888 (16), -0.05774 (16), -0.05749 (16), -0.05719 (16), -0.05695 (16), -0.05674 (16), -0.05588 (16), -0.05550 (16), -0.05436 (16), -0.05428 (16), -0.05372 (16), -0.05314 (16), 
Length of domains: 1097
Time: pickout 0.0139    decision 0.0556    set_bounds 0.0663    solve 0.2516    add 0.0072    
Accumulated time: pickout 0.0442    decision 0.7962    set_bounds 0.2914    solve 2.0262    add 0.2959    
Current (lb-rhs): -0.07116954028606415
3680 domains visited
Cumulative time: 3.771907091140747

BaB round 9
batch: 1097
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 539] [/input-8, 1356] [/input-8, 539] [/input-8, 539] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4853329062461853, worst -0.06557120382785797
10 lb beta sum: 0.4853329062461853, worst -0.065433070063591
Time: prepare 0.0982    bound 0.1781    transfer 0.0157    finalize 0.0099    func 0.3162    
Accumulated time: func 2.5166    prepare 0.3874    bound 1.8688    transfer 0.0413    finalize 0.0440    
all_split False
======================Cut inference begins======================
max lb tensor(0.02884151) min lb tensor(-0.06541185)
Number of Verified Splits: 944 of 2194
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.0004036426544189453 
BICCOS Cumulative time: 0.09136104583740234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06541 (17), -0.06287 (17), -0.06190 (17), -0.06010 (17), -0.05971 (17), -0.05761 (17), -0.05713 (17), -0.05656 (17), -0.05634 (17), -0.05580 (17), -0.05556 (17), -0.05507 (17), -0.05433 (17), -0.05410 (17), -0.05407 (17), -0.05381 (17), -0.05279 (17), -0.05255 (17), -0.05253 (17), -0.05234 (17), 
Length of domains: 1250
Time: pickout 0.0180    decision 0.0701    set_bounds 0.2447    solve 0.3166    add 0.0060    
Accumulated time: pickout 0.0622    decision 0.8662    set_bounds 0.5361    solve 2.3428    add 0.3019    
Current (lb-rhs): -0.06541185081005096
4930 domains visited
Cumulative time: 4.434363842010498

BaB round 10
batch: 1250
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] 
cut re-enabled after branching node selection
0 lb beta sum: 0.48577868938446045, worst -0.06514392793178558
10 lb beta sum: 0.48577868938446045, worst -0.065140500664711
Time: prepare 0.1118    bound 0.1965    transfer 0.0061    finalize 0.0127    func 0.3437    
Accumulated time: func 2.8603    prepare 0.4995    bound 2.0653    transfer 0.0475    finalize 0.0567    
all_split False
======================Cut inference begins======================
max lb tensor(0.02291138) min lb tensor(-0.06513356)
Number of Verified Splits: 1105 of 2500
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.000423431396484375 
BICCOS Cumulative time: 0.09178447723388672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06513 (18), -0.06258 (18), -0.06147 (18), -0.05974 (18), -0.05926 (18), -0.05727 (18), -0.05688 (18), -0.05607 (18), -0.05595 (18), -0.05534 (18), -0.05484 (18), -0.05402 (18), -0.05377 (18), -0.05365 (18), -0.05333 (18), -0.05251 (18), -0.05225 (18), -0.05190 (18), -0.05149 (18), -0.05119 (18), 
Length of domains: 1395
Time: pickout 0.0264    decision 0.0788    set_bounds 0.1018    solve 0.3442    add 0.0068    
Accumulated time: pickout 0.0885    decision 0.9450    set_bounds 0.6378    solve 2.6870    add 0.3088    
Current (lb-rhs): -0.06513355672359467
6325 domains visited
Cumulative time: 5.00278115272522

BaB round 11
batch: 1395
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1292] [/input-8, 1292] [/input-8, 1292] [/input-8, 1292] [/input-8, 1292] [/input-8, 1292] [/input-8, 1292] [/input-8, 1292] [/input-8, 1292] [/input-8, 1292] 
cut re-enabled after branching node selection
0 lb beta sum: 0.48634740710258484, worst -0.059527233242988586
10 lb beta sum: 0.48634740710258484, worst -0.05950944125652313
Time: prepare 0.1260    bound 0.2131    transfer 0.0048    finalize 0.0140    func 0.5030    
Accumulated time: func 3.3633    prepare 0.6257    bound 2.2784    transfer 0.0522    finalize 0.0707    
all_split False
======================Cut inference begins======================
max lb tensor(0.01836573) min lb tensor(-0.05950527)
Number of Verified Splits: 769 of 2790
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.0005354881286621094 
BICCOS Cumulative time: 0.09231996536254883
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05951 (19), -0.05835 (19), -0.05749 (19), -0.05643 (19), -0.05532 (19), -0.05452 (19), -0.05417 (19), -0.05403 (19), -0.05288 (19), -0.05190 (19), -0.05180 (19), -0.05159 (19), -0.05108 (19), -0.05096 (19), -0.05054 (19), -0.05039 (19), -0.04967 (19), -0.04958 (19), -0.04922 (19), -0.04907 (19), 
Length of domains: 2021
Time: pickout 0.0237    decision 0.0857    set_bounds 0.1123    solve 0.5035    add 0.0207    
Accumulated time: pickout 0.1123    decision 1.0307    set_bounds 0.7501    solve 3.1905    add 0.3295    
Current (lb-rhs): -0.059505268931388855
8346 domains visited
Cumulative time: 5.755913734436035

BaB round 12
batch: 2021
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1893] [/input-8, 542] [/input-8, 542] [/input-8, 1893] [/input-8, 542] [/input-8, 1901] [/input-8, 1893] [/input-8, 1292] [/input, 2455] [/input-8, 1893] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4868362843990326, worst -0.05430327355861664
10 lb beta sum: 0.4868362843990326, worst -0.05428619682788849
Time: prepare 0.1854    bound 0.2793    transfer 0.0188    finalize 0.0216    func 0.5314    
Accumulated time: func 3.8947    prepare 0.8113    bound 2.5577    transfer 0.0710    finalize 0.0923    
all_split False
======================Cut inference begins======================
max lb tensor(0.01750521) min lb tensor(-0.05427690)
Number of Verified Splits: 975 of 4042
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.0004315376281738281 
BICCOS Cumulative time: 0.09275150299072266
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05428 (20), -0.05307 (20), -0.05291 (20), -0.05290 (20), -0.05219 (20), -0.05170 (20), -0.05072 (20), -0.04992 (20), -0.04903 (20), -0.04887 (20), -0.04883 (20), -0.04875 (20), -0.04845 (20), -0.04778 (20), -0.04757 (20), -0.04749 (20), -0.04734 (20), -0.04715 (20), -0.04667 (20), -0.04659 (20), 
Length of domains: 3067
Time: pickout 0.0382    decision 0.1193    set_bounds 0.1650    solve 0.5322    add 0.0163    
Accumulated time: pickout 0.1504    decision 1.1500    set_bounds 0.9151    solve 3.7227    add 0.3457    
Current (lb-rhs): -0.05427689850330353
11413 domains visited
Cumulative time: 6.63652229309082

BaB round 13
batch: 3067
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1891] [/input-8, 1891] [/input-8, 1893] [/input, 1670] [/input-8, 1893] [/input-8, 542] [/input-8, 1893] [/input-8, 1891] [/input-8, 1893] [/input-8, 1894] 
cut re-enabled after branching node selection
0 lb beta sum: 0.48715364933013916, worst -0.050477221608161926
10 lb beta sum: 0.48715364933013916, worst -0.050430938601493835
Time: prepare 0.2862    bound 0.3907    transfer 0.0305    finalize 0.0330    func 0.7801    
Accumulated time: func 4.6749    prepare 1.0977    bound 2.9484    transfer 0.1015    finalize 0.1253    
all_split False
======================Cut inference begins======================
max lb tensor(0.01798411) min lb tensor(-0.05040242)
Number of Verified Splits: 1514 of 6134
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.0004992485046386719 
BICCOS Cumulative time: 0.09325075149536133
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05040 (21), -0.04918 (21), -0.04827 (21), -0.04782 (21), -0.04751 (21), -0.04725 (21), -0.04719 (21), -0.04660 (21), -0.04628 (21), -0.04614 (21), -0.04597 (21), -0.04596 (21), -0.04574 (21), -0.04541 (21), -0.04530 (21), -0.04509 (21), -0.04502 (21), -0.04482 (21), -0.04392 (21), -0.04362 (21), 
Length of domains: 4620
Time: pickout 0.0516    decision 0.1752    set_bounds 0.3870    solve 0.7814    add 0.0312    
Accumulated time: pickout 0.2020    decision 1.3252    set_bounds 1.3021    solve 4.5041    add 0.3770    
Current (lb-rhs): -0.05040241777896881
16033 domains visited
Cumulative time: 8.078379392623901

BaB round 14
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1894] [/input-8, 1894] [/input-8, 1891] [/input-8, 1044] [/input-8, 1894] [/input-8, 1894] [/input-8, 1381] [/input-8, 1044] [/input-8, 1044] [/input-8, 931] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4872693419456482, worst -0.04569806158542633
10 lb beta sum: 0.4872693419456482, worst -0.0456249862909317
Time: prepare 0.3816    bound 0.4954    transfer 0.0294    finalize 0.0430    func 1.0012    
Accumulated time: func 5.6761    prepare 1.4795    bound 3.4438    transfer 0.1309    finalize 0.1683    
all_split False
======================Cut inference begins======================
max lb tensor(0.01878233) min lb tensor(-0.04559989)
Number of Verified Splits: 2550 of 8192
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.0006315708160400391 
BICCOS Cumulative time: 0.09388232231140137
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04918 (21), -0.04597 (21), -0.04560 (22), -0.04475 (22), -0.04474 (22), -0.04438 (22), -0.04404 (22), -0.04373 (22), -0.04362 (21), -0.04340 (22), -0.04337 (22), -0.04336 (22), -0.04302 (22), -0.04271 (22), -0.04220 (22), -0.04208 (21), -0.04194 (22), -0.04157 (22), -0.04094 (22), -0.04093 (22), 
Length of domains: 6166
Time: pickout 0.0654    decision 0.2267    set_bounds 0.5018    solve 1.1785    add 0.0381    
Accumulated time: pickout 0.2674    decision 1.5519    set_bounds 1.8039    solve 5.6826    add 0.4151    
Current (lb-rhs): -0.04917927086353302
21675 domains visited
current_vram/total_varm: 24.9GB/99.9GB, batch_size increase to 8192
Cumulative time: 10.11262583732605

BaB round 15
batch: 6166
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1044] [/input-8, 931] [/input-8, 1044] [/input-8, 1894] [/input-8, 1044] [/input-8, 1894] [/input-8, 1894] [/input-8, 1044] [/input-8, 1044] [/input-8, 1044] 
cut re-enabled after branching node selection
0 lb beta sum: 0.48731470108032227, worst -0.046339645981788635
10 lb beta sum: 0.48731470108032227, worst -0.046293750405311584
Time: prepare 0.5722    bound 0.7160    transfer 0.0474    finalize 0.0674    func 1.4810    
Accumulated time: func 7.1572    prepare 2.0519    bound 4.1598    transfer 0.1783    finalize 0.2357    
all_split False
======================Cut inference begins======================
max lb tensor(0.01853664) min lb tensor(-0.04627343)
Number of Verified Splits: 4359 of 12332
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.0006191730499267578 
BICCOS Cumulative time: 0.09450149536132812
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04627 (22), -0.04253 (23), -0.04160 (23), -0.04107 (22), -0.04036 (22), -0.04022 (23), -0.04020 (23), -0.03992 (23), -0.03960 (23), -0.03960 (23), -0.03945 (23), -0.03920 (23), -0.03906 (23), -0.03903 (23), -0.03889 (23), -0.03885 (22), -0.03872 (23), -0.03859 (23), -0.03858 (23), -0.03833 (23), 
Length of domains: 7973
Time: pickout 0.1171    decision 0.3425    set_bounds 0.6946    solve 1.4835    add 0.0345    
Accumulated time: pickout 0.3845    decision 1.8945    set_bounds 2.4985    solve 7.1661    add 0.4496    
Current (lb-rhs): -0.046273425221443176
29648 domains visited
Cumulative time: 12.822246551513672

BaB round 16
batch: 7973
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1381] [/input-8, 1044] [/input-8, 1894] [/input-8, 1044] [/input-8, 1044] [/input-8, 1381] [/input-8, 931] [/input-8, 931] [/input-8, 1044] [/input-8, 1381] 
cut re-enabled after branching node selection
0 lb beta sum: 0.48731884360313416, worst -0.04159890115261078
10 lb beta sum: 0.48731884360313416, worst -0.041534945368766785
Time: prepare 0.7375    bound 0.9043    transfer 0.0806    finalize 0.0966    func 1.9210    
Accumulated time: func 9.0781    prepare 2.7898    bound 5.0641    transfer 0.2589    finalize 0.3323    
all_split False
======================Cut inference begins======================
max lb tensor(0.01930211) min lb tensor(-0.04150863)
Number of Verified Splits: 5373 of 15946
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.0006983280181884766 
BICCOS Cumulative time: 0.0951998233795166
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04151 (23), -0.04061 (23), -0.03823 (23), -0.03812 (24), -0.03744 (23), -0.03724 (24), -0.03713 (24), -0.03628 (24), -0.03626 (24), -0.03620 (24), -0.03597 (23), -0.03592 (24), -0.03588 (24), -0.03574 (24), -0.03549 (24), -0.03533 (24), -0.03526 (24), -0.03518 (24), -0.03507 (24), -0.03498 (24), 
Length of domains: 10573
Time: pickout 0.1568    decision 0.6180    set_bounds 0.8699    solve 2.1564    add 0.0470    
Accumulated time: pickout 0.5414    decision 2.5125    set_bounds 3.3684    solve 9.3226    add 0.4966    
Current (lb-rhs): -0.04150862991809845
40221 domains visited
Cumulative time: 16.719938278198242

BaB round 17
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 931] [/input-8, 931] [/input-8, 931] [/input-8, 931] [/input-8, 931] [/input-8, 931] [/input-8, 571] [/input-8, 571] [/input-8, 1381] [/input-8, 931] 
cut re-enabled after branching node selection
0 lb beta sum: 0.48731881380081177, worst -0.037209346890449524
10 lb beta sum: 0.48731881380081177, worst -0.03713364899158478
Time: prepare 0.7634    bound 0.9223    transfer 0.0602    finalize 0.0891    func 1.9423    
Accumulated time: func 11.0204    prepare 3.5535    bound 5.9864    transfer 0.3191    finalize 0.4214    
all_split False
======================Cut inference begins======================
max lb tensor(0.02062877) min lb tensor(-0.03710522)
Number of Verified Splits: 5931 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.0007240772247314453 
BICCOS Cumulative time: 0.09592390060424805
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03713 (24), -0.03711 (24), -0.03622 (24), -0.03611 (24), -0.03543 (25), -0.03524 (24), -0.03507 (24), -0.03460 (24), -0.03453 (25), -0.03428 (24), -0.03384 (24), -0.03383 (25), -0.03375 (25), -0.03359 (24), -0.03359 (24), -0.03355 (25), -0.03326 (24), -0.03320 (25), -0.03305 (25), -0.03304 (25), 
Length of domains: 12834
Time: pickout 0.1338    decision 0.4539    set_bounds 0.9248    solve 2.1840    add 0.0404    
Accumulated time: pickout 0.6751    decision 2.9664    set_bounds 4.2932    solve 11.5066    add 0.5371    
Current (lb-rhs): -0.037127748131752014
50674 domains visited
current_vram/total_varm: 24.9GB/99.9GB, batch_size increase to 16384
Cumulative time: 20.513872623443604

BaB round 18
batch: 12834
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 571] [/input-8, 1358] [/input-8, 1358] [/input-8, 1358] [/input-8, 1358] [/input-8, 571] [/input-8, 1381] [/input-8, 571] [/input-8, 571] [/input-8, 571] 
cut re-enabled after branching node selection
0 lb beta sum: 0.48731881380081177, worst -0.03449009358882904
10 lb beta sum: 0.48731881380081177, worst -0.0344587117433548
Time: prepare 1.1949    bound 1.4152    transfer 0.1757    finalize 0.1664    func 3.1197    
Accumulated time: func 14.1402    prepare 4.7488    bound 7.4016    transfer 0.4948    finalize 0.5878    
all_split False
======================Cut inference begins======================
max lb tensor(0.01597528) min lb tensor(-0.03443246)
Number of Verified Splits: 11369 of 25668
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.0008971691131591797 
BICCOS Cumulative time: 0.09682106971740723
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03443 (25), -0.03441 (25), -0.03350 (25), -0.03341 (25), -0.03262 (26), -0.03253 (25), -0.03239 (25), -0.03206 (25), -0.03203 (25), -0.03170 (26), -0.03130 (25), -0.03115 (25), -0.03111 (25), -0.03104 (25), -0.03098 (26), -0.03089 (26), -0.03070 (26), -0.03029 (25), -0.03028 (25), -0.03024 (26), 
Length of domains: 14299
Time: pickout 0.2847    decision 0.7300    set_bounds 1.6038    solve 3.3998    add 0.0762    
Accumulated time: pickout 0.9598    decision 3.6964    set_bounds 5.8970    solve 14.9063    add 0.6133    
Current (lb-rhs): -0.03443245589733124
64973 domains visited
Cumulative time: 26.712902307510376

BaB round 19
batch: 14299
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1369] [/input-8, 1369] [/input-8, 1358] [/input-8, 1358] [/input-8, 1358] [/input-8, 1358] [/input-8, 1358] [/input-8, 1358] [/input-8, 1358] [/input-8, 1358] 
cut re-enabled after branching node selection
0 lb beta sum: 0.48731884360313416, worst -0.03183870017528534
10 lb beta sum: 0.48731884360313416, worst -0.03177289664745331
Time: prepare 1.3250    bound 1.5636    transfer 0.2033    finalize 0.1641    func 3.4385    
Accumulated time: func 17.5786    prepare 6.0742    bound 8.9652    transfer 0.6981    finalize 0.7519    
all_split False
======================Cut inference begins======================
max lb tensor(0.02122886) min lb tensor(-0.03174154)
Number of Verified Splits: 12320 of 28598
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.0008113384246826172 
BICCOS Cumulative time: 0.09763240814208984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03174 (26), -0.03159 (26), -0.03082 (26), -0.03072 (26), -0.03045 (27), -0.02982 (26), -0.02968 (27), -0.02936 (26), -0.02934 (26), -0.02922 (26), -0.02884 (27), -0.02870 (27), -0.02868 (27), -0.02847 (26), -0.02847 (26), -0.02834 (26), -0.02817 (26), -0.02808 (27), -0.02807 (27), -0.02800 (27), 
Length of domains: 16278
Time: pickout 0.3114    decision 0.8024    set_bounds 1.8359    solve 3.4447    add 0.0610    
Accumulated time: pickout 1.2712    decision 4.4988    set_bounds 7.7329    solve 18.3511    add 0.6743    
Current (lb-rhs): -0.03174154460430145
81251 domains visited
Cumulative time: 33.287041902542114

BaB round 20
batch: 16278
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1901] [/input-8, 1369] [/input-8, 1369] [/input-8, 1369] [/input-8, 1369] [/input-8, 1369] [/input-8, 1369] [/input-8, 1369] [/input-8, 1369] [/input-8, 1369] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4873187839984894, worst -0.02969871461391449
10 lb beta sum: 0.4873187839984894, worst -0.02959822118282318
Time: prepare 1.5262    bound 1.7672    transfer 0.2428    finalize 0.5559    func 4.3016    
Accumulated time: func 21.8803    prepare 7.6008    bound 10.7324    transfer 0.9409    finalize 1.3078    
all_split False
======================Cut inference begins======================
max lb tensor(0.01808317) min lb tensor(-0.02957241)
Number of Verified Splits: 14768 of 32556
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.0009148120880126953 
BICCOS Cumulative time: 0.09854722023010254
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02957 (27), -0.02943 (27), -0.02880 (27), -0.02855 (27), -0.02780 (27), -0.02720 (27), -0.02715 (27), -0.02706 (27), -0.02646 (27), -0.02642 (28), -0.02633 (27), -0.02618 (27), -0.02600 (27), -0.02597 (28), -0.02578 (28), -0.02566 (28), -0.02546 (27), -0.02546 (27), -0.02538 (27), -0.02523 (28), 
Length of domains: 17788
Time: pickout 0.3525    decision 1.1868    set_bounds 2.0379    solve 4.3092    add 0.0746    
Accumulated time: pickout 1.6237    decision 5.6856    set_bounds 9.7708    solve 22.6602    add 0.7488    
Current (lb-rhs): -0.029572412371635437
99039 domains visited
Cumulative time: 41.39374899864197

BaB round 21
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1308] [/input-8, 571] [/input-8, 571] [/input-8, 1381] [/input-8, 571] [/input-8, 571] [/input-8, 1901] [/input-8, 1901] [/input-8, 1901] [/input-8, 571] 
cut re-enabled after branching node selection
0 lb beta sum: 0.48731881380081177, worst -0.025741681456565857
10 lb beta sum: 0.48731881380081177, worst -0.02570594847202301
Time: prepare 1.5439    bound 1.7796    transfer 0.2407    finalize 0.5182    func 4.2940    
Accumulated time: func 26.1743    prepare 9.1451    bound 12.5120    transfer 1.1816    finalize 1.8260    
all_split False
======================Cut inference begins======================
max lb tensor(0.02014832) min lb tensor(-0.02568527)
Number of Verified Splits: 18631 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.0008289813995361328 
BICCOS Cumulative time: 0.09937620162963867
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02569 (28), -0.02554 (28), -0.02538 (27), -0.02499 (29), -0.02491 (28), -0.02481 (28), -0.02478 (28), -0.02463 (28), -0.02439 (29), -0.02437 (29), -0.02431 (27), -0.02413 (29), -0.02413 (28), -0.02407 (28), -0.02379 (28), -0.02375 (28), -0.02355 (29), -0.02352 (29), -0.02350 (29), -0.02342 (28), 
Length of domains: 15541
Time: pickout 0.2933    decision 1.7184    set_bounds 1.8105    solve 4.3012    add 0.0704    
Accumulated time: pickout 1.9170    decision 7.4041    set_bounds 11.5813    solve 26.9614    add 0.8192    
Current (lb-rhs): -0.02568526566028595
113176 domains visited
Cumulative time: 49.75371432304382

BaB round 22
batch: 15541
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1374] [/input-8, 1308] [/input-8, 1308] [/input-8, 1308] [/input-8, 1308] [/input-8, 1308] [/input-8, 1308] [/input-8, 1308] [/input-8, 1358] [/input-8, 1308] 
cut re-enabled after branching node selection
0 lb beta sum: 0.48731881380081177, worst -0.024262264370918274
10 lb beta sum: 0.48731881380081177, worst -0.02424846589565277
Time: prepare 1.4797    bound 1.6963    transfer 0.2238    finalize 0.5135    func 4.1183    
Accumulated time: func 30.2926    prepare 10.6252    bound 14.2083    transfer 1.4054    finalize 2.3395    
all_split False
======================Cut inference begins======================
max lb tensor(0.02089824) min lb tensor(-0.02423386)
Number of Verified Splits: 18358 of 31082
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.0007901191711425781 
BICCOS Cumulative time: 0.10016632080078125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02423 (29), -0.02412 (29), -0.02400 (30), -0.02350 (29), -0.02339 (30), -0.02339 (30), -0.02336 (29), -0.02325 (29), -0.02320 (29), -0.02314 (30), -0.02262 (29), -0.02256 (30), -0.02253 (29), -0.02242 (30), -0.02241 (30), -0.02232 (29), -0.02231 (29), -0.02205 (29), -0.02194 (29), -0.02180 (29), 
Length of domains: 12724
Time: pickout 0.2772    decision 1.1554    set_bounds 1.6872    solve 4.1262    add 0.0660    
Accumulated time: pickout 2.1942    decision 8.5595    set_bounds 13.2686    solve 31.0876    add 0.8852    
Current (lb-rhs): -0.0242338627576828
125900 domains visited
Cumulative time: 57.22899603843689

BaB round 23
batch: 12724
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 533] [/input, 2455] [/input-8, 533] [/input-8, 533] [/input-8, 533] [/input-8, 533] [/input-8, 533] [/input-8, 533] [/input-8, 533] [/input-8, 533] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4873187839984894, worst -0.023297980427742004
10 lb beta sum: 0.4873187839984894, worst -0.023265644907951355
Time: prepare 1.2190    bound 1.4047    transfer 0.1671    finalize 0.1783    func 3.1361    
Accumulated time: func 33.4287    prepare 11.8446    bound 15.6130    transfer 1.5726    finalize 2.5178    
all_split False
======================Cut inference begins======================
max lb tensor(0.02101223) min lb tensor(-0.02325301)
Number of Verified Splits: 15491 of 25448
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.0007746219635009766 
BICCOS Cumulative time: 0.10094094276428223
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02325 (30), -0.02301 (30), -0.02239 (30), -0.02227 (30), -0.02223 (30), -0.02215 (30), -0.02176 (31), -0.02143 (30), -0.02132 (30), -0.02123 (30), -0.02114 (31), -0.02113 (31), -0.02112 (30), -0.02096 (30), -0.02090 (31), -0.02070 (30), -0.02037 (30), -0.02034 (30), -0.02034 (30), -0.02030 (31), 
Length of domains: 9957
Time: pickout 0.2985    decision 0.9593    set_bounds 1.7089    solve 3.1430    add 0.0447    
Accumulated time: pickout 2.4928    decision 9.5188    set_bounds 14.9775    solve 34.2306    add 0.9299    
Current (lb-rhs): -0.023253008723258972
135857 domains visited
Cumulative time: 63.52383017539978

BaB round 24
batch: 9957
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 1687] [/input-8, 533] [/input-8, 1374] [/input-8, 1374] [/input-8, 1374] [/input-8, 1374] [/input-8, 1374] [/input-8, 1374] [/input-8, 1374] [/input-8, 533] 
cut re-enabled after branching node selection
0 lb beta sum: 0.48731881380081177, worst -0.02090616524219513
10 lb beta sum: 0.48731881380081177, worst -0.02088560163974762
Time: prepare 0.9683    bound 1.1115    transfer 0.1073    finalize 0.1260    func 2.4442    
Accumulated time: func 35.8729    prepare 12.8132    bound 16.7245    transfer 1.6798    finalize 2.6437    
all_split False
======================Cut inference begins======================
max lb tensor(0.02099375) min lb tensor(-0.02087535)
Number of Verified Splits: 11372 of 19914
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.0007803440093994141 
BICCOS Cumulative time: 0.10172128677368164
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02088 (31), -0.02077 (31), -0.02014 (31), -0.01990 (31), -0.01989 (31), -0.01984 (31), -0.01924 (31), -0.01923 (32), -0.01905 (31), -0.01904 (31), -0.01889 (32), -0.01885 (31), -0.01864 (30), -0.01859 (31), -0.01853 (31), -0.01845 (31), -0.01836 (32), -0.01805 (31), -0.01804 (30), -0.01801 (32), 
Length of domains: 8542
Time: pickout 0.1984    decision 0.7817    set_bounds 1.1322    solve 2.7267    add 0.0374    
Accumulated time: pickout 2.6911    decision 10.3004    set_bounds 16.1097    solve 36.9573    add 0.9673    
Current (lb-rhs): -0.020875349640846252
144399 domains visited
Cumulative time: 68.5018720626831

BaB round 25
batch: 8542
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2455] [/input-8, 1861] [/input-8, 1861] [/input-8, 1374] [/input-8, 1374] [/input-8, 1910] [/input-8, 1374] [/input-8, 1374] [/input-8, 1374] [/input-8, 1374] 
cut re-enabled after branching node selection
0 lb beta sum: 0.48731881380081177, worst -0.018390700221061707
10 lb beta sum: 0.48731881380081177, worst -0.018345698714256287
Time: prepare 0.8265    bound 0.9655    transfer 0.0870    finalize 0.0966    func 2.3356    
Accumulated time: func 38.2085    prepare 13.6400    bound 17.6900    transfer 1.7668    finalize 2.7404    
all_split False
======================Cut inference begins======================
max lb tensor(0.02004145) min lb tensor(-0.01831444)
Number of Verified Splits: 10531 of 17084
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.000736236572265625 
BICCOS Cumulative time: 0.10245752334594727
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01831 (32), -0.01823 (32), -0.01769 (32), -0.01761 (32), -0.01736 (32), -0.01732 (32), -0.01712 (33), -0.01682 (33), -0.01681 (32), -0.01648 (32), -0.01642 (32), -0.01637 (31), -0.01633 (32), -0.01625 (33), -0.01602 (32), -0.01594 (32), -0.01594 (33), -0.01592 (32), -0.01578 (31), -0.01561 (32), 
Length of domains: 6553
Time: pickout 0.1678    decision 0.4802    set_bounds 0.9661    solve 2.3395    add 0.0295    
Accumulated time: pickout 2.8590    decision 10.7806    set_bounds 17.0758    solve 39.2968    add 0.9968    
Current (lb-rhs): -0.018314436078071594
150952 domains visited
Cumulative time: 72.57121086120605

BaB round 26
batch: 6553
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1374] [/input-8, 1910] [/input-8, 1374] [/input-8, 1374] [/input-8, 1910] [/input-8, 1374] [/input-8, 1374] [/input, 2455] [/input-8, 1910] [/input-8, 1374] 
cut re-enabled after branching node selection
0 lb beta sum: 0.48731881380081177, worst -0.016319438815116882
10 lb beta sum: 0.48731881380081177, worst -0.016267016530036926
Time: prepare 0.6357    bound 0.7577    transfer 0.0514    finalize 0.0759    func 1.6061    
Accumulated time: func 39.8146    prepare 14.2760    bound 18.4477    transfer 1.8181    finalize 2.8163    
all_split False
======================Cut inference begins======================
max lb tensor(0.01826780) min lb tensor(-0.01624079)
Number of Verified Splits: 8268 of 13106
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.0006613731384277344 
BICCOS Cumulative time: 0.103118896484375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01624 (33), -0.01604 (33), -0.01556 (33), -0.01555 (33), -0.01517 (33), -0.01516 (33), -0.01483 (34), -0.01467 (33), -0.01453 (34), -0.01432 (33), -0.01430 (33), -0.01429 (33), -0.01418 (33), -0.01405 (34), -0.01395 (33), -0.01386 (32), -0.01373 (33), -0.01372 (34), -0.01357 (33), -0.01351 (33), 
Length of domains: 4838
Time: pickout 0.1605    decision 0.3726    set_bounds 0.7960    solve 1.6102    add 0.0269    
Accumulated time: pickout 3.0195    decision 11.1532    set_bounds 17.8717    solve 40.9070    add 1.0236    
Current (lb-rhs): -0.016240790486335754
155790 domains visited
Cumulative time: 75.60665583610535

BaB round 27
batch: 4838
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1374] [/input-8, 1374] [/input-8, 1374] [/input-8, 1374] [/input-8, 1812] [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] 
cut re-enabled after branching node selection
0 lb beta sum: 0.48731881380081177, worst -0.014079734683036804
10 lb beta sum: 0.48731881380081177, worst -0.01402159035205841
Time: prepare 0.4742    bound 0.5746    transfer 0.0503    finalize 0.0552    func 1.3954    
Accumulated time: func 41.2100    prepare 14.7504    bound 19.0224    transfer 1.8685    finalize 2.8715    
all_split False
======================Cut inference begins======================
max lb tensor(0.01685043) min lb tensor(-0.01400064)
Number of Verified Splits: 6140 of 9676
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.0006313323974609375 
BICCOS Cumulative time: 0.10375022888183594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01400 (34), -0.01374 (34), -0.01330 (34), -0.01326 (34), -0.01295 (34), -0.01290 (34), -0.01260 (35), -0.01244 (34), -0.01218 (34), -0.01206 (34), -0.01203 (34), -0.01189 (34), -0.01182 (35), -0.01169 (33), -0.01168 (34), -0.01143 (34), -0.01141 (34), -0.01134 (34), -0.01129 (34), -0.01121 (34), 
Length of domains: 3536
Time: pickout 0.0970    decision 0.2773    set_bounds 0.5890    solve 1.3978    add 0.0219    
Accumulated time: pickout 3.1165    decision 11.4305    set_bounds 18.4608    solve 42.3048    add 1.0456    
Current (lb-rhs): -0.01400063931941986
159326 domains visited
Cumulative time: 78.03997373580933

BaB round 28
batch: 3536
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1876] [/input-8, 1876] [/input-8, 1876] [/input-8, 1876] [/input-8, 1861] [/input-8, 1861] [/input-8, 1861] [/input-8, 1890] [/input-8, 1861] [/input, 1687] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4873187839984894, worst -0.01198376715183258
10 lb beta sum: 0.4873187839984894, worst -0.011787757277488708
Time: prepare 0.3394    bound 0.4397    transfer 0.0310    finalize 0.0382    func 0.8942    
Accumulated time: func 42.1042    prepare 15.0901    bound 19.4621    transfer 1.8995    finalize 2.9097    
all_split False
======================Cut inference begins======================
max lb tensor(0.01479457) min lb tensor(-0.01175140)
Number of Verified Splits: 5107 of 7072
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.0005433559417724609 
BICCOS Cumulative time: 0.1042935848236084
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01175 (35), -0.01131 (35), -0.01053 (35), -0.01047 (35), -0.01012 (36), -0.00983 (35), -0.00975 (35), -0.00967 (35), -0.00956 (35), -0.00954 (35), -0.00945 (34), -0.00944 (35), -0.00934 (36), -0.00922 (35), -0.00910 (35), -0.00908 (35), -0.00900 (35), -0.00896 (34), -0.00895 (35), -0.00892 (35), 
Length of domains: 1965
Time: pickout 0.0758    decision 0.2030    set_bounds 0.3172    solve 0.8963    add 0.0106    
Accumulated time: pickout 3.1924    decision 11.6334    set_bounds 18.7779    solve 43.2011    add 1.0562    
Current (lb-rhs): -0.01175139844417572
161291 domains visited
Cumulative time: 79.5822696685791

BaB round 29
batch: 1965
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1876] [/input-8, 1890] [/input-8, 1910] [/input-8, 1876] [/input-8, 1876] [/input-8, 1861] [/input-8, 1876] [/input-8, 1876] [/input-8, 1890] [/input-8, 1876] 
cut re-enabled after branching node selection
0 lb beta sum: 0.48731887340545654, worst -0.009350791573524475
10 lb beta sum: 0.48731887340545654, worst -0.009287998080253601
Time: prepare 0.1869    bound 0.2758    transfer 0.0070    finalize 0.0214    func 0.5166    
Accumulated time: func 42.6207    prepare 15.2772    bound 19.7379    transfer 1.9065    finalize 2.9311    
all_split False
======================Cut inference begins======================
max lb tensor(0.00803395) min lb tensor(-0.00926711)
Number of Verified Splits: 3079 of 3930
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.0005624294281005859 
BICCOS Cumulative time: 0.10485601425170898
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00927 (36), -0.00887 (36), -0.00808 (36), -0.00802 (36), -0.00734 (36), -0.00730 (36), -0.00722 (36), -0.00712 (36), -0.00706 (36), -0.00700 (35), -0.00696 (36), -0.00676 (36), -0.00668 (37), -0.00660 (37), -0.00659 (36), -0.00659 (36), -0.00656 (36), -0.00649 (36), -0.00644 (36), -0.00629 (36), 
Length of domains: 851
Time: pickout 0.0405    decision 0.2565    set_bounds 0.1709    solve 0.5174    add 0.0033    
Accumulated time: pickout 3.2329    decision 11.8899    set_bounds 18.9488    solve 43.7186    add 1.0595    
Current (lb-rhs): -0.009267106652259827
162142 domains visited
Cumulative time: 80.59173083305359

BaB round 30
batch: 851
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1890] [/input-8, 1861] [/input-8, 1890] [/input-8, 1890] [/input-8, 1910] [/input-8, 1350] [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] 
cut re-enabled after branching node selection
0 lb beta sum: 0.48731881380081177, worst -0.005866572260856628
10 lb beta sum: 0.48731881380081177, worst -0.005828574299812317
Time: prepare 0.0795    bound 0.1558    transfer 0.0028    finalize 0.0097    func 0.2588    
Accumulated time: func 42.8795    prepare 15.3569    bound 19.8937    transfer 1.9093    finalize 2.9408    
all_split False
======================Cut inference begins======================
max lb tensor(0.01099400) min lb tensor(-0.00581510)
Number of Verified Splits: 1381 of 1702
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.0004024505615234375 
BICCOS Cumulative time: 0.10525846481323242
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00582 (37), -0.00549 (37), -0.00539 (37), -0.00536 (37), -0.00519 (37), -0.00503 (38), -0.00495 (38), -0.00471 (37), -0.00470 (37), -0.00464 (37), -0.00455 (36), -0.00454 (37), -0.00436 (38), -0.00426 (38), -0.00415 (37), -0.00411 (38), -0.00392 (37), -0.00392 (37), -0.00387 (37), -0.00384 (37), 
Length of domains: 321
Time: pickout 0.0187    decision 0.0580    set_bounds 0.0725    solve 0.2591    add 0.0016    
Accumulated time: pickout 3.2515    decision 11.9479    set_bounds 19.0213    solve 43.9777    add 1.0611    
Current (lb-rhs): -0.005815103650093079
162463 domains visited
Cumulative time: 81.01144409179688

BaB round 31
batch: 321
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2475] [/input, 2475] [/input, 2475] [/input, 2475] [/input, 2475] [/input-8, 1876] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4873187839984894, worst -0.004188075661659241
10 lb beta sum: 0.4873187839984894, worst -0.004162237048149109
Time: prepare 0.0299    bound 0.1394    transfer 0.0012    finalize 0.0042    func 0.1788    
Accumulated time: func 43.0583    prepare 15.3870    bound 20.0331    transfer 1.9105    finalize 2.9449    
all_split False
======================Cut inference begins======================
max lb tensor(0.01055814) min lb tensor(-0.00415309)
Number of Verified Splits: 515 of 642
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.00036525726318359375 
BICCOS Cumulative time: 0.10562372207641602
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00415 (38), -0.00390 (38), -0.00378 (38), -0.00368 (38), -0.00362 (39), -0.00350 (39), -0.00347 (38), -0.00312 (38), -0.00305 (38), -0.00302 (38), -0.00294 (38), -0.00290 (39), -0.00286 (39), -0.00271 (39), -0.00251 (38), -0.00231 (38), -0.00228 (38), -0.00222 (38), -0.00221 (38), -0.00217 (38), 
Length of domains: 127
Time: pickout 0.0069    decision 0.0288    set_bounds 0.0267    solve 0.1789    add 0.0012    
Accumulated time: pickout 3.2585    decision 11.9767    set_bounds 19.0480    solve 44.1566    add 1.0623    
Current (lb-rhs): -0.004153087735176086
162590 domains visited
Cumulative time: 81.25769114494324

BaB round 32
batch: 127
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] 
cut re-enabled after branching node selection
0 lb beta sum: 0.48731881380081177, worst -0.0027297288179397583
10 lb beta sum: 0.48731881380081177, worst -0.002723976969718933
Time: prepare 0.0120    bound 0.1325    transfer 0.0013    finalize 0.0015    func 0.1489    
Accumulated time: func 43.2072    prepare 15.3992    bound 20.1656    transfer 1.9118    finalize 2.9464    
all_split False
======================Cut inference begins======================
max lb tensor(0.01075985) min lb tensor(-0.00271414)
Number of Verified Splits: 225 of 254
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.00036978721618652344 
BICCOS Cumulative time: 0.10599350929260254
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00271 (39), -0.00249 (39), -0.00233 (39), -0.00219 (39), -0.00173 (39), -0.00160 (39), -0.00159 (39), -0.00153 (39), -0.00137 (39), -0.00102 (39), -0.00089 (39), -0.00085 (39), -0.00080 (39), -0.00061 (39), -0.00043 (39), -0.00043 (39), -0.00035 (40), -0.00034 (39), -0.00027 (39), -0.00026 (39), 
Length of domains: 29
Time: pickout 0.0032    decision 0.0180    set_bounds 0.0106    solve 0.1489    add 0.0010    
Accumulated time: pickout 3.2616    decision 11.9947    set_bounds 19.0586    solve 44.3056    add 1.0633    
Current (lb-rhs): -0.0027141422033309937
162619 domains visited
Cumulative time: 81.44138360023499

BaB round 33
batch: 29
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1068] [/input-8, 1068] [/input-8, 1068] [/input-8, 1019] [/input-8, 944] [/input-8, 868] [/input-8, 1019] [/input-8, 868] [/input-8, 1019] [/input-8, 1019] 
split level 1: [/input-8, 1019] [/input-8, 1019] [/input-8, 868] [/input-8, 1902] [/input-8, 1902] [/input-8, 1019] [/input-8, 1902] [/input-8, 1019] [/input-8, 868] [/input-8, 1902] 
split level 2: [/input-8, 868] [/input-8, 1902] [/input-8, 1019] [/input-8, 1361] [/input-8, 1361] [/input, 1689] [/input-8, 1361] [/input-8, 1902] [/input-8, 1902] [/input-8, 1361] 
cut re-enabled after branching node selection
0 lb beta sum: 0.48731881380081177, worst 0.00547809898853302

all verified at 0th iter
Time: prepare 0.0107    bound 0.0068    transfer 0.0008    finalize 0.0014    func 0.0212    
Accumulated time: func 43.2284    prepare 15.4101    bound 20.1724    transfer 1.9126    finalize 2.9478    
all_split False
======================Cut inference begins======================
max lb tensor(0.01649030) min lb tensor(0.00547810)
Number of Verified Splits: 232 of 232
Stop inferencing: Max iteration reached.
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.00032782554626464844 
BICCOS Cumulative time: 0.10632133483886719
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0012    decision 0.0144    set_bounds 0.0125    solve 0.0212    add 0.0001    
Accumulated time: pickout 3.2628    decision 12.0091    set_bounds 19.0711    solve 44.3268    add 1.0634    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
162619 domains visited
Cumulative time: 81.4921178817749


Properties batch 3, size 1
Remaining timeout: 116.94920563697815
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 116.94912219047546
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 116.94909811019897
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 116.94907855987549
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 116.9490578174591
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 116.94903898239136
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 83.0510 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 104, vnnlib ID: 104 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-3.93376207, -6.71706390, -2.45791340, -1.94786179, -3.43069839,
         -0.01497591, -4.77984476, -2.99772120, -6.68260002, -5.67084932]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [775]; unstable size 775; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 265, 1, 775] with unstable size 264 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 775] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 775] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [264]; unstable size 264; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 264] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 264] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.31793857, 4.18651628, 1.24683022, 1.51535225, 1.97004533, 3.30763984,
         1.65014243, 4.22078037, 3.37990856]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0646 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 105, vnnlib ID: 105 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -6.58880043, -10.13493252,  -4.93114376,  -6.19413185,  -6.14457750,
          -6.40420198,  -6.35660315,  -6.51874971,  -8.22681046,  -9.13034344]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [623]; unstable size 623; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 253, 1, 623] with unstable size 252 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 623] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 623] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [252]; unstable size 252; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 252] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 252] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.65812552,  1.61883938, -2.82501531, -1.14642096, -1.45474672,
         -0.98869789, -1.28088343, -0.29947925,  0.88783240]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.58880043, -10.13493252,  -4.93114376,  -6.19413185,  -6.14457750,
          -6.40420198,  -6.35660315,  -6.51874971,  -8.22681046,  -9.13034344]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.58880091, -10.13493347,  -4.93114376,  -6.19413280,  -6.14457798,
           -6.40420198,  -6.35660315,  -6.51874971,  -8.22680950,  -9.13034534],
         [ -6.58880091, -10.13493347,  -4.93114376,  -6.19413280,  -6.14457798,
           -6.40420198,  -6.35660315,  -6.51874971,  -8.22680950,  -9.13034534]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.07005119, -1.58760595, -0.32461691, -0.37417173, -0.11454773,
          -0.16214657,  1.70805979]]], device='cuda:0')
number of violation:  5
clean attack image tensor([[[[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         ...,


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]]]], device='cuda:0') torch.Size([1, 7, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0818 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 106, vnnlib ID: 106 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -6.73701859,  -4.31693745,  -8.52546501,  -9.33157349,  -8.00366402,
         -10.34507942,  -9.10334110,  -9.12430954,  -4.68865204,  -6.33631182]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [549]; unstable size 549; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 168, 1, 549] with unstable size 167 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 549] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 549] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [167]; unstable size 167; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 167] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 167] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.18721008,  2.73353958,  3.30611420,  2.10224676,  4.03056717,
          3.46064329,  2.85602856, -0.83577204,  1.03666842]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.73701859,  -4.31693745,  -8.52546501,  -9.33157349,  -8.00366402,
         -10.34507942,  -9.10334110,  -9.12430954,  -4.68865204,  -6.33631182]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.89133787,  -4.93664169,  -8.66371727,  -9.56306934,  -8.16865921,
          -10.62470722,  -9.37549400,  -9.37268066,  -4.54248905,  -6.85806894]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.39415264]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0058 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0731 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 107, vnnlib ID: 107 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.25630188, -18.41019440, -14.19659901, -16.87197685, -15.07205296,
         -17.43015480, -17.99939728, -16.44446564, -13.78191662, -17.80060196]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [636]; unstable size 636; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 232, 1, 636] with unstable size 231 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 636] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 636] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [231]; unstable size 231; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 231] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 231] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.34137392,  0.70376396,  3.10112023,  1.09246945,  3.41379499,
          3.82853627,  1.99575388, -0.16639972,  3.65535450]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.25630188, -18.41019440, -14.19659901, -16.87197685, -15.07205296,
         -17.43015480, -17.99939728, -16.44446564, -13.78191662, -17.80060196]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.38it/s]100%|██████████| 1/1 [00:00<00:00,  9.37it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.98635578, -17.72829819, -13.82835865, -16.31543732, -14.73994732,
          -16.84854698, -17.46200371, -16.24205780, -12.71058083, -17.06022263]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.72422504]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1091 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 22.566570281982422
alpha/beta optimization time: 1.172762155532837
initial alpha-crown bounds: tensor([[ 4.41341925,  0.78251982,  3.14730644,  1.16422844,  3.46807480,
          3.87462139,  2.07521391, -0.08283904,  3.72402501]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.08283904194831848
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6505708694458
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.65053510665894
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.65051245689392
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.65049242973328
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.65047407150269
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.65045499801636
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 198.65043711662292
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 198.65041780471802
Verifying property 7 with 1 instances.
##### Instance 107 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.08283904]], device='cuda:0') need to verify.
Model prediction is: tensor([-12.25630188, -18.41019440, -14.19659901, -16.87197685, -15.07205296,
        -17.43015480, -17.99939728, -16.44446564, -13.78191662, -17.80060196],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.08283904]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 636
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 225
Node /15 input 0: size torch.Size([100]) unstable 18
-----------------
# of unstable neurons: 879
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00013208389282226562
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08283671736717224
10 lb beta sum: 0.0, worst -0.08285492658615112
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0564    transfer 0.0001    finalize 0.0001    func 0.0569    
Accumulated time: func 0.0569    prepare 0.0002    bound 0.0564    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 44] 
split level 1: [/input-12, 17] 
split level 2: [/input-12, 46] 
split level 3: [/input-12, 78] 
split level 4: [/input-12, 9] 
split level 5: [/input-8, 1516] 
split level 6: [/input-8, 1388] 
split level 7: [/input-8, 1523] 
split level 8: [/input-12, 99] 
split level 9: [/input-8, 1323] 
split level 10: [/input-8, 1386] 
split level 11: [/input-8, 1396] 
split level 12: [/input-8, 1076] 
split level 13: [/input-8, 618] 
split level 14: [/input-8, 1069] 
split level 15: [/input-8, 1077] 
split level 16: [/input-8, 1342] 
split level 17: [/input-8, 1395] 
split level 18: [/input-8, 1339] 
split level 19: [/input-8, 1390] 
split level 20: [/input-12, 40] 
split level 21: [/input-8, 1084] 
split level 22: [/input-8, 294] 
split level 23: [/input-8, 421] 
split level 24: [/input-8, 666] 
split level 25: [/input-8, 1070] 
split level 26: [/input-8, 673] 
split level 27: [/input-8, 571] 
split level 28: [/input-8, 1340] 
split level 29: [/input, 1659] 
split level 30: [/input-8, 1443] 
split level 31: [/input-8, 657] 
split level 32: [/input-8, 1341] 
split level 33: [/input-8, 1133] 
split level 34: [/input-8, 687] 
split level 35: [/input-8, 403] 
split level 36: [/input, 1660] 
split level 37: [/input-12, 32] 
split level 38: [/input-8, 1514] 
split level 39: [/input-8, 797] 
split level 40: [/input-8, 484] 
split level 41: [/input, 1625] 
split level 42: [/input-8, 1905] 
split level 43: [/input-8, 402] 
split level 44: [/input-8, 295] 
split level 45: [/input-8, 796] 
split level 46: [/input, 4066] 
split level 47: [/input-8, 278] 
split level 48: [/input, 3399] 
split level 49: [/input-8, 1085] 
split level 50: [/input-8, 846] 
split level 51: [/input, 199] 
split level 52: [/input-8, 803] 
split level 53: [/input-8, 1134] 
split level 54: [/input-8, 1573] 
split level 55: [/input-8, 871] 
split level 56: [/input, 168] 
split level 57: [/input-8, 1138] 
split level 58: [/input-8, 924] 
split level 59: [/input, 447] 
split level 60: [/input, 1595] 
split level 61: [/input-8, 486] 
split level 62: [/input-8, 1436] 
split level 63: [/input-8, 932] 
split level 64: [/input-8, 1402] 
split level 65: [/input-8, 1056] 
split level 66: [/input-8, 1264] 
split level 67: [/input-8, 1136] 
split level 68: [/input-8, 1130] 
split level 69: [/input-8, 1513] 
split level 70: [/input-8, 404] 
split level 71: [/input-8, 1334] 
split level 72: [/input-8, 993] 
split level 73: [/input, 462] 
split level 74: [/input, 1624] 
split level 75: [/input-8, 483] 
split level 76: [/input, 1365] 
split level 77: [/input, 190] 
split level 78: [/input, 2136] 
split level 79: [/input-8, 521] 
split level 80: [/input-8, 1110] 
split level 81: [/input-8, 97] 
split level 82: [/input, 4069] 
split level 83: [/input, 407] 
split level 84: [/input-8, 77] 
split level 85: [/input, 226] 
split level 86: [/input-8, 1446] 
split level 87: [/input, 4049] 
split level 88: [/input-8, 1307] 
split level 89: [/input, 2135] 
split level 90: [/input, 2244] 
split level 91: [/input, 1335] 
split level 92: [/input, 459] 
split level 93: [/input, 4035] 
split level 94: [/input-8, 795] 
split level 95: [/input, 1629] 
split level 96: [/input-8, 1378] 
split level 97: [/input, 3157] 
split level 98: [/input, 2152] 
split level 99: [/input, 4050] 
split level 100: [/input, 2753] 
split level 101: [/input, 1643] 
split level 102: [/input, 3492] 
split level 103: [/input, 4056] 
split level 104: [/input, 4067] 
split level 105: [/input, 2214] 
split level 106: [/input-8, 1485] 
split level 107: [/input, 225] 
split level 108: [/input-8, 1141] 
split level 109: [/input, 3753] 
split level 110: [/input-8, 2025] 
split level 111: [/input-8, 1615] 
split level 112: [/input, 3429] 
split level 113: [/input, 2187] 
split level 114: [/input-8, 685] 
split level 115: [/input, 358] 
split level 116: [/input, 488] 
split level 117: [/input-8, 2034] 
split level 118: [/input, 3277] 
split level 119: [/input-8, 1040] 
split level 120: [/input-8, 1438] 
split level 121: [/input, 3140] 
split level 122: [/input, 3781] 
split level 123: [/input, 1430] 
split level 124: [/input-8, 461] 
split level 125: [/input-8, 81] 
split level 126: [/input, 2360] 
split level 127: [/input, 3142] 
split level 128: [/input, 2139] 
split level 129: [/input, 242] 
split level 130: [/input, 492] 
split level 131: [/input, 457] 
split level 132: [/input, 2198] 
split level 133: [/input, 458] 
split level 134: [/input-8, 2033] 
split level 135: [/input, 2119] 
split level 136: [/input, 296] 
split level 137: [/input, 2373] 
split level 138: [/input-8, 302] 
split level 139: [/input, 3125] 
split level 140: [/input-8, 975] 
split level 141: [/input, 3709] 
split level 142: [/input-8, 642] 
split level 143: [/input-8, 1472] 
split level 144: [/input-8, 2037] 
split level 145: [/input, 3797] 
split level 146: [/input, 3737] 
split level 147: [/input, 3960] 
split level 148: [/input, 3445] 
split level 149: [/input-8, 1473] 
split level 150: [/input-8, 423] 
split level 151: [/input-8, 1346] 
split level 152: [/input-8, 1021] 
split level 153: [/input, 3263] 
split level 154: [/input, 3126] 
split level 155: [/input, 3292] 
split level 156: [/input, 3231] 
split level 157: [/input, 280] 
split level 158: [/input, 312] 
split level 159: [/input-8, 839] 
split level 160: [/input, 1446] 
split level 161: [/input, 3411] 
split level 162: [/input, 279] 
split level 163: [/input, 2256] 
split level 164: [/input, 2548] 
split level 165: [/input, 227] 
split level 166: [/input-8, 1818] 
split level 167: [/input, 2513] 
split level 168: [/input, 1439] 
split level 169: [/input, 3187] 
split level 170: [/input, 2165] 
split level 171: [/input, 2228] 
split level 172: [/input, 1966] 
split level 173: [/input, 876] 
split level 174: [/input, 136] 
split level 175: [/input-8, 2032] 
split level 176: [/input, 1455] 
split level 177: [/input-8, 1240] 
split level 178: [/input-8, 864] 
split level 179: [/input, 2794] 
split level 180: [/input, 2530] 
split level 181: [/input, 1160] 
split level 182: [/input, 4076] 
split level 183: [/input, 3870] 
split level 184: [/input, 1437] 
split level 185: [/input, 293] 
split level 186: [/input, 1469] 
split level 187: [/input, 3260] 
split level 188: [/input-8, 2038] 
split level 189: [/input, 2181] 
split level 190: [/input, 3307] 
split level 191: [/input, 2532] 
split level 192: [/input, 1414] 
split level 193: [/input, 2374] 
split level 194: [/input, 2586] 
split level 195: [/input, 3813] 
split level 196: [/input, 1347] 
split level 197: [/input-8, 945] 
split level 198: [/input, 877] 
split level 199: [/input, 282] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08275943994522095
10 lb beta sum: 0.0, worst -0.08275949954986572
Time: prepare 0.0116    bound 0.0966    transfer 0.0016    finalize 0.0031    func 0.1155    
Accumulated time: func 0.1724    prepare 0.0217    bound 0.1530    transfer 0.0017    finalize 0.0032    
all_split False
======================Cut inference begins======================
max lb tensor(0.28787231) min lb tensor(-0.08275044)
Number of Verified Splits: 11 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.010785341262817383 
BICCOS Cumulative time: 0.010785341262817383
Preprocessing time: 0.010024070739746094 Inference time: 0.0004439353942871094 Add cuts time: 0.0001533031463623047 Cut analysis time: 0.000164031982421875
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.5015    set_bounds 0.0085    solve 0.1156    add 0.0100    
Accumulated time: pickout 0.0003    decision 0.5015    set_bounds 0.0085    solve 0.1156    add 0.0100    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([44]), tensor([-1.]), tensor([0]), tensor([3.39462347e-11]), tensor([0]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([44]), tensor([1.]), tensor([0]), tensor([-5.34985524e-21]), tensor([0]))}
Shallow branching resets to n domains:  2
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.007995009422302246

all verified at 1th iter
Time: prepare 0.0003    bound 0.0096    transfer 0.0001    finalize 0.0001    func 0.0102    
Accumulated time: func 0.1826    prepare 0.0220    bound 0.1626    transfer 0.0018    finalize 0.0033    
After pruning, left:  0

Back to Regular BaB


Properties batch 8, size 1
Remaining timeout: 197.7590069770813
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.2411 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 108, vnnlib ID: 108 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.67031240,  -9.52653027,  -5.79421425,  -5.15730333,  -5.24825621,
          -5.88681936,  -4.92760229,  -6.80504274, -10.24907398,  -9.07698536]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [634]; unstable size 634; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 245, 1, 634] with unstable size 244 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 634] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 634] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [244]; unstable size 244; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 244] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 244] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.24761379,  2.93305993, -0.23562050, -0.90710115,  0.36504626,
         -1.18999720,  0.08451056,  3.42949820,  2.57326126]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.67031240,  -9.52653027,  -5.79421425,  -5.15730333,  -5.24825621,
          -5.88681936,  -4.92760229,  -6.80504274, -10.24907398,  -9.07698536]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.67031288,  -9.52653027,  -5.79421329,  -5.15730429,  -5.24825621,
           -5.88681889,  -4.92760229,  -6.80504179, -10.24907398,  -9.07698536],
         [ -7.67031288,  -9.52653027,  -5.79421329,  -5.15730429,  -5.24825621,
           -5.88681889,  -4.92760229,  -6.80504179, -10.24907398,  -9.07698536]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.63690901,  0.09095192, -0.22970200]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.97301590, -1.03650784, -1.13174593,  ..., -0.84603173,
            -0.46507925, -0.29047608],
           [-0.97301590, -1.03650784, -1.14761901,  ..., -0.94126981,
            -0.41746020, -0.03650784],
           [-0.95714283, -1.02063489, -1.13174593,  ..., -1.06825387,
            -0.25873005,  0.09047628],
           ...,
           [-0.43333322,  0.15396833,  0.13809532,  ..., -1.63968253,
            -0.83015871, -0.09999990],
           [-0.16349196,  0.10634929, -0.13174593,  ..., -1.40158725,
            -0.79841268, -0.09999990],
           [-0.06825387,  0.05873025,  0.09047628,  ..., -1.00476182,
            -0.73492062, -0.09999990]],

          [[-1.49758446, -1.52979064, -1.54589367,  ..., -1.12721407,
            -0.88566822, -0.77294683],
           [-1.49758446, -1.52979064, -1.57809973,  ..., -1.20772946,
            -0.82125598, -0.53140092],
           [-1.48148143, -1.49758446, -1.54589367,  ..., -1.35265696,
            -0.64412236, -0.40257636],
           ...,
           [-1.11111104, -0.37037024, -0.48309177,  ..., -1.78743970,
            -0.90177131, -0.28985494],
           [-0.90177131, -0.43478248, -0.75684375,  ..., -1.64251208,
            -0.88566822, -0.27375188],
           [-0.83735907, -0.49919480, -0.51529789,  ..., -1.35265696,
            -0.83735907, -0.25764883]],

          [[-0.23838064, -0.38830581, -0.40329832,  ..., -1.00299859,
            -1.03298354, -1.03298354],
           [-0.25337315, -0.40329832, -0.43328333,  ..., -1.06296861,
            -0.95802099, -0.80809593],
           [-0.23838064, -0.37331331, -0.41829082,  ..., -1.22788620,
            -0.76311839, -0.68815589],
           ...,
           [ 0.07646193, -0.01349309, -0.44827583,  ..., -1.07796109,
            -0.67316341, -0.35832080],
           [ 0.25637197, -0.07346311, -0.65817088,  ..., -0.86806595,
            -0.64317840, -0.34332830],
           [ 0.31634200, -0.04347810, -0.29835078,  ..., -0.52323836,
            -0.58320838, -0.34332830]]],


         [[[-0.97301590, -1.03650784, -1.13174593,  ..., -0.84603173,
            -0.46507925, -0.29047608],
           [-0.97301590, -1.03650784, -1.14761901,  ..., -0.94126981,
            -0.41746020, -0.03650784],
           [-0.95714283, -1.02063489, -1.13174593,  ..., -1.06825387,
            -0.25873005,  0.09047628],
           ...,
           [-0.43333322,  0.15396833,  0.13809532,  ..., -1.63968253,
            -0.83015871, -0.09999990],
           [-0.16349196,  0.10634929, -0.13174593,  ..., -1.40158725,
            -0.79841268, -0.09999990],
           [-0.06825387,  0.05873025,  0.09047628,  ..., -1.00476182,
            -0.73492062, -0.09999990]],

          [[-1.49758446, -1.52979064, -1.54589367,  ..., -1.12721407,
            -0.88566822, -0.77294683],
           [-1.49758446, -1.52979064, -1.57809973,  ..., -1.20772946,
            -0.82125598, -0.53140092],
           [-1.48148143, -1.49758446, -1.54589367,  ..., -1.35265696,
            -0.64412236, -0.40257636],
           ...,
           [-1.11111104, -0.37037024, -0.48309177,  ..., -1.78743970,
            -0.90177131, -0.28985494],
           [-0.90177131, -0.43478248, -0.75684375,  ..., -1.64251208,
            -0.88566822, -0.27375188],
           [-0.83735907, -0.49919480, -0.51529789,  ..., -1.35265696,
            -0.83735907, -0.25764883]],

          [[-0.23838064, -0.38830581, -0.40329832,  ..., -1.00299859,
            -1.03298354, -1.03298354],
           [-0.25337315, -0.40329832, -0.43328333,  ..., -1.06296861,
            -0.95802099, -0.80809593],
           [-0.23838064, -0.37331331, -0.41829082,  ..., -1.22788620,
            -0.76311839, -0.68815589],
           ...,
           [ 0.07646193, -0.01349309, -0.44827583,  ..., -1.07796109,
            -0.67316341, -0.35832080],
           [ 0.25637197, -0.07346311, -0.65817088,  ..., -0.86806595,
            -0.64317840, -0.34332830],
           [ 0.31634200, -0.04347810, -0.29835078,  ..., -0.52323836,
            -0.58320838, -0.34332830]]],


         [[[-0.97301590, -1.03650784, -1.13174593,  ..., -0.84603173,
            -0.46507925, -0.29047608],
           [-0.97301590, -1.03650784, -1.14761901,  ..., -0.94126981,
            -0.41746020, -0.03650784],
           [-0.95714283, -1.02063489, -1.13174593,  ..., -1.06825387,
            -0.25873005,  0.09047628],
           ...,
           [-0.43333322,  0.15396833,  0.13809532,  ..., -1.63968253,
            -0.83015871, -0.09999990],
           [-0.16349196,  0.10634929, -0.13174593,  ..., -1.40158725,
            -0.79841268, -0.09999990],
           [-0.06825387,  0.05873025,  0.09047628,  ..., -1.00476182,
            -0.73492062, -0.09999990]],

          [[-1.49758446, -1.52979064, -1.54589367,  ..., -1.12721407,
            -0.88566822, -0.77294683],
           [-1.49758446, -1.52979064, -1.57809973,  ..., -1.20772946,
            -0.82125598, -0.53140092],
           [-1.48148143, -1.49758446, -1.54589367,  ..., -1.35265696,
            -0.64412236, -0.40257636],
           ...,
           [-1.11111104, -0.37037024, -0.48309177,  ..., -1.78743970,
            -0.90177131, -0.28985494],
           [-0.90177131, -0.43478248, -0.75684375,  ..., -1.64251208,
            -0.88566822, -0.27375188],
           [-0.83735907, -0.49919480, -0.51529789,  ..., -1.35265696,
            -0.83735907, -0.25764883]],

          [[-0.23838064, -0.38830581, -0.40329832,  ..., -1.00299859,
            -1.03298354, -1.03298354],
           [-0.25337315, -0.40329832, -0.43328333,  ..., -1.06296861,
            -0.95802099, -0.80809593],
           [-0.23838064, -0.37331331, -0.41829082,  ..., -1.22788620,
            -0.76311839, -0.68815589],
           ...,
           [ 0.07646193, -0.01349309, -0.44827583,  ..., -1.07796109,
            -0.67316341, -0.35832080],
           [ 0.25637197, -0.07346311, -0.65817088,  ..., -0.86806595,
            -0.64317840, -0.34332830],
           [ 0.31634200, -0.04347810, -0.29835078,  ..., -0.52323836,
            -0.58320838, -0.34332830]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0392 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 109, vnnlib ID: 109 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -4.68137455, -11.11765766,  -8.01337242,  -9.71148872,  -8.79326439,
         -10.48354340, -10.25170231, -11.03672123,  -9.45322895, -10.81242466]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [555]; unstable size 555; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 118, 1, 555] with unstable size 117 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 555] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 555] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [117]; unstable size 117; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 117] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 117] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.02142048, 2.59467483, 4.01387072, 3.15092111, 4.53091240, 4.70333385,
         4.88892937, 3.85758591, 5.04689884]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0649 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 110, vnnlib ID: 110 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.59310770, -8.98699856, -1.98446643, -1.86275947, -2.02259350,
         -2.92739010,  0.91057259, -5.46356249, -8.21526527, -9.22765255]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [455]; unstable size 455; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 269, 1, 455] with unstable size 268 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 455] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 455] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [268]; unstable size 268; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 268] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 268] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.81164646, 7.72943878, 1.56485271, 1.38150597, 1.52279806, 2.12491894,
         4.28514671, 7.13579178, 8.30116081]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0732 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 111, vnnlib ID: 111 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.92330647, -14.34430218,  -7.27562428, -10.29554081,  -6.15860891,
         -10.20837307,  -9.93119907,  -8.65463638, -13.25779629, -14.20930576]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [611]; unstable size 611; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 254, 1, 611] with unstable size 253 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 611] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 611] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [253]; unstable size 253; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 253] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 253] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.99095154,  5.73210239, -0.06892407,  3.12794566,  2.97227120,
          2.38821363,  1.26658010,  4.99652815,  5.76884413]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.92330647, -14.34430218,  -7.27562428, -10.29554081,  -6.15860891,
         -10.20837307,  -9.93119907,  -8.65463638, -13.25779629, -14.20930576]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.11it/s]100%|██████████| 1/1 [00:00<00:00,  9.10it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.49070644, -14.02054882,  -6.77474308, -10.01947308,  -6.14811516,
           -9.94418907,  -9.79620838,  -8.69151878, -12.92936230, -13.88387489]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.62662792]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1126 seconds.
PGD attack failed
verified_status unknown
verified_success False

all verified at 9th iter
best_l after optimization: 29.920610427856445
alpha/beta optimization time: 0.11525464057922363
initial alpha-crown bounds: tensor([[3.09697390e+00, 5.84763861e+00, 1.91938877e-03, 3.17881012e+00,
         3.02511549e+00, 2.45539427e+00, 1.32388210e+00, 5.10637712e+00,
         5.88449955e+00]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 0 ; Worst class: (+ rhs) 0.001919388771057129
verified with init bound!
Result: safe-incomplete in 0.2945 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 112, vnnlib ID: 112 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.39937687, -6.31978703, -7.08044434, -6.31649590, -8.13005733,
         -7.18079948, -7.62912607, -6.36020851, -5.32509041, -4.25607824]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [646]; unstable size 646; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 172, 1, 646] with unstable size 171 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 646] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 646] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [171]; unstable size 171; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 171] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 171] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.06740236,  0.96642995,  1.28222084,  0.65053344,  2.26329422,
          1.44973636,  2.01239896,  0.51637983, -0.32224512]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.39937687, -6.31978703, -7.08044434, -6.31649590, -8.13005733,
         -7.18079948, -7.62912607, -6.36020851, -5.32509041, -4.25607824]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.38it/s]100%|██████████| 1/1 [00:00<00:00,  9.38it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.57936287, -6.66815186, -7.30564022, -6.68102264, -8.49092770,
          -7.56898642, -7.92801905, -6.75226736, -5.11898041, -4.89544821]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.22353220]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1090 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 10.232053756713867
alpha/beta optimization time: 1.1754701137542725
initial alpha-crown bounds: tensor([[ 1.09233940,  1.00209808,  1.32075167,  0.68928862,  2.30610180,
          1.48740745,  2.04873037,  0.55730414, -0.27196836]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.27196836471557617
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6428108215332
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.64277386665344
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.64275121688843
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.64273047447205
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.6427116394043
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.6426932811737
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 198.64267492294312
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 198.6426558494568
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 198.6426374912262
Verifying property 8 with 1 instances.
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.27196836]], device='cuda:0') need to verify.
Model prediction is: tensor([-6.39937687, -6.31978703, -7.08044434, -6.31649590, -8.13005733,
        -7.18079948, -7.62912607, -6.36020851, -5.32509041, -4.25607824],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.27196836]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 646
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 166
Node /15 input 0: size torch.Size([100]) unstable 15
-----------------
# of unstable neurons: 827
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.799003601074219e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.27196764945983887
10 lb beta sum: 0.0, worst -0.2719728946685791
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0512    transfer 0.0001    finalize 0.0001    func 0.0516    
Accumulated time: func 0.0516    prepare 0.0002    bound 0.0512    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 21] 
split level 1: [/input-12, 68] 
split level 2: [/input-12, 78] 
split level 3: [/input-12, 1] 
split level 4: [/input-12, 51] 
split level 5: [/input-8, 1890] 
split level 6: [/input-12, 55] 
split level 7: [/input-8, 1121] 
split level 8: [/input-8, 477] 
split level 9: [/input-8, 1124] 
split level 10: [/input-8, 1888] 
split level 11: [/input-8, 1331] 
split level 12: [/input-8, 1132] 
split level 13: [/input-8, 1840] 
split level 14: [/input-8, 1131] 
split level 15: [/input-8, 1381] 
split level 16: [/input-8, 1898] 
split level 17: [/input-8, 1506] 
split level 18: [/input-8, 802] 
split level 19: [/input-8, 1069] 
split level 20: [/input-8, 1113] 
split level 21: [/input-8, 932] 
split level 22: [/input, 1787] 
split level 23: [/input, 1518] 
split level 24: [/input-12, 54] 
split level 25: [/input, 2676] 
split level 26: [/input, 1770] 
split level 27: [/input-8, 1067] 
split level 28: [/input-8, 1049] 
split level 29: [/input-8, 1062] 
split level 30: [/input, 762] 
split level 31: [/input-8, 413] 
split level 32: [/input, 3581] 
split level 33: [/input, 1768] 
split level 34: [/input, 3383] 
split level 35: [/input, 1517] 
split level 36: [/input-8, 1035] 
split level 37: [/input-8, 942] 
split level 38: [/input, 1637] 
split level 39: [/input-8, 1894] 
split level 40: [/input-8, 1332] 
split level 41: [/input-8, 1509] 
split level 42: [/input-8, 1382] 
split level 43: [/input, 2168] 
split level 44: [/input, 3566] 
split level 45: [/input-8, 808] 
split level 46: [/input, 3580] 
split level 47: [/input-8, 623] 
split level 48: [/input, 2420] 
split level 49: [/input, 2269] 
split level 50: [/input, 2362] 
split level 51: [/input-8, 769] 
split level 52: [/input-8, 1897] 
split level 53: [/input-8, 1906] 
split level 54: [/input-8, 1857] 
split level 55: [/input, 2283] 
split level 56: [/input, 2617] 
split level 57: [/input, 4075] 
split level 58: [/input-8, 1465] 
split level 59: [/input, 1368] 
split level 60: [/input-8, 2041] 
split level 61: [/input, 1769] 
split level 62: [/input-8, 409] 
split level 63: [/input, 3914] 
split level 64: [/input-8, 81] 
split level 65: [/input-8, 2033] 
split level 66: [/input, 2683] 
split level 67: [/input, 3550] 
split level 68: [/input-8, 89] 
split level 69: [/input, 1753] 
split level 70: [/input, 2954] 
split level 71: [/input, 3043] 
split level 72: [/input-8, 1581] 
split level 73: [/input, 2798] 
split level 74: [/input-8, 1482] 
split level 75: [/input, 1519] 
split level 76: [/input-8, 1080] 
split level 77: [/input, 2884] 
split level 78: [/input, 3942] 
split level 79: [/input-8, 2046] 
split level 80: [/input, 2392] 
split level 81: [/input-8, 1441] 
split level 82: [/input-8, 893] 
split level 83: [/input-8, 96] 
split level 84: [/input, 1534] 
split level 85: [/input, 1987] 
split level 86: [/input-8, 1498] 
split level 87: [/input, 3929] 
split level 88: [/input-8, 1910] 
split level 89: [/input, 2691] 
split level 90: [/input, 3945] 
split level 91: [/input, 2393] 
split level 92: [/input-8, 72] 
split level 93: [/input-8, 1743] 
split level 94: [/input-8, 1440] 
split level 95: [/input, 2712] 
split level 96: [/input, 1949] 
split level 97: [/input, 2039] 
split level 98: [/input, 1622] 
split level 99: [/input, 1980] 
split level 100: [/input, 2005] 
split level 101: [/input, 581] 
split level 102: [/input, 3578] 
split level 103: [/input, 1503] 
split level 104: [/input, 3415] 
split level 105: [/input, 3928] 
split level 106: [/input, 1651] 
split level 107: [/input, 2359] 
split level 108: [/input, 1995] 
split level 109: [/input, 2949] 
split level 110: [/input-8, 1751] 
split level 111: [/input, 2932] 
split level 112: [/input, 2377] 
split level 113: [/input, 3907] 
split level 114: [/input, 3722] 
split level 115: [/input, 3796] 
split level 116: [/input, 1948] 
split level 117: [/input, 310] 
split level 118: [/input, 3779] 
split level 119: [/input-8, 2031] 
split level 120: [/input, 1964] 
split level 121: [/input, 1212] 
split level 122: [/input, 2011] 
split level 123: [/input, 4078] 
split level 124: [/input, 1685] 
split level 125: [/input, 1752] 
split level 126: [/input, 1988] 
split level 127: [/input, 2407] 
split level 128: [/input-8, 789] 
split level 129: [/input, 2826] 
split level 130: [/input-8, 2035] 
split level 131: [/input, 2388] 
split level 132: [/input, 3978] 
split level 133: [/input, 3718] 
split level 134: [/input, 1767] 
split level 135: [/input, 3310] 
split level 136: [/input, 1791] 
split level 137: [/input, 2542] 
split level 138: [/input, 3927] 
split level 139: [/input, 628] 
split level 140: [/input-8, 1371] 
split level 141: [/input-8, 2037] 
split level 142: [/input-8, 2019] 
split level 143: [/input, 2711] 
split level 144: [/input, 2994] 
split level 145: [/input, 3110] 
split level 146: [/input, 1592] 
split level 147: [/input-8, 936] 
split level 148: [/input-8, 2034] 
split level 149: [/input, 2024] 
split level 150: [/input, 2550] 
split level 151: [/input, 1502] 
split level 152: [/input, 2008] 
split level 153: [/input, 3180] 
split level 154: [/input, 3979] 
split level 155: [/input, 2900] 
split level 156: [/input, 3997] 
split level 157: [/input, 3730] 
split level 158: [/input, 3996] 
split level 159: [/input, 3027] 
split level 160: [/input-8, 2036] 
split level 161: [/input, 4012] 
split level 162: [/input, 2004] 
split level 163: [/input, 2023] 
split level 164: [/input, 3398] 
split level 165: [/input, 2006] 
split level 166: [/input, 2916] 
split level 167: [/input-8, 1488] 
split level 168: [/input, 2868] 
split level 169: [/input, 231] 
split level 170: [/input, 3128] 
split level 171: [/input, 2184] 
split level 172: [/input-8, 1974] 
split level 173: [/input, 3143] 
split level 174: [/input-8, 1032] 
split level 175: [/input, 3159] 
split level 176: [/input, 2007] 
split level 177: [/input, 2380] 
split level 178: [/input, 1400] 
split level 179: [/input, 3111] 
split level 180: [/input, 1873] 
split level 181: [/input, 2021] 
split level 182: [/input, 1383] 
split level 183: [/input, 3890] 
split level 184: [/input, 2022] 
split level 185: [/input, 3926] 
split level 186: [/input-8, 1618] 
split level 187: [/input, 3723] 
split level 188: [/input-8, 1449] 
split level 189: [/input, 2010] 
split level 190: [/input, 3156] 
split level 191: [/input, 1287] 
split level 192: [/input-8, 157] 
split level 193: [/input-8, 1501] 
split level 194: [/input, 2137] 
split level 195: [/input, 2918] 
split level 196: [/input, 2858] 
split level 197: [/input-8, 1416] 
split level 198: [/input, 618] 
split level 199: [/input, 1260] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.27196812629699707
10 lb beta sum: 0.0, worst -0.2719743251800537
Time: prepare 0.0127    bound 0.0995    transfer 0.0013    finalize 0.0028    func 0.1188    
Accumulated time: func 0.1705    prepare 0.0228    bound 0.1507    transfer 0.0014    finalize 0.0029    
all_split False
======================Cut inference begins======================
max lb tensor(0.31710100) min lb tensor(-0.27196598)
Number of Verified Splits: 6 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.010760784149169922 
BICCOS Cumulative time: 0.010760784149169922
Preprocessing time: 0.009821176528930664 Inference time: 0.00025653839111328125 Add cuts time: 8.988380432128906e-05 Cut analysis time: 0.0005931854248046875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.26063 (1), -0.26061 (1), -0.26035 (1), -0.26031 (1), -0.26028 (1), -0.25989 (1), -0.25972 (1), -0.25968 (1), -0.25931 (1), -0.25924 (1), -0.25869 (1), -0.25819 (1), -0.25739 (1), -0.25723 (1), -0.25698 (1), -0.25687 (1), -0.25671 (1), -0.25577 (1), -0.25550 (1), -0.25478 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5089    set_bounds 0.0096    solve 0.1189    add 0.1334    
Accumulated time: pickout 0.0003    decision 0.5089    set_bounds 0.0096    solve 0.1189    add 0.1334    
Current (lb-rhs): -0.2606346607208252
50 domains visited
Cumulative time: 0.8516414165496826

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 21] [/input-12, 68] [/input-12, 21] [/input-12, 21] [/input-12, 21] [/input-12, 21] [/input-12, 21] [/input-12, 21] [/input-12, 21] [/input-12, 21] 
split level 1: [/input-12, 68] [/input-12, 1] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] 
split level 2: [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] 
split level 3: [/input-12, 1] [/input-8, 1890] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.24576377868652344
10 lb beta sum: 1.0268968343734741, worst -0.03684055805206299
Time: prepare 0.0090    bound 0.1171    transfer 0.0007    finalize 0.0028    func 0.1323    
Accumulated time: func 0.3028    prepare 0.0322    bound 0.2677    transfer 0.0022    finalize 0.0057    
all_split False
======================Cut inference begins======================
max lb tensor(0.53197360) min lb tensor(-0.03660518)
Number of Verified Splits: 241 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 17
#cuts >= 20: 0
BICCOS time: 0.025417804718017578 
BICCOS Cumulative time: 0.0361785888671875
Preprocessing time: 0.012457132339477539 Inference time: 0.008867979049682617 Add cuts time: 0.0036995410919189453 Cut analysis time: 0.00039315223693847656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01761 (2), -0.01759 (2), -0.01756 (2), -0.01755 (2), -0.01751 (2), -0.01738 (2), -0.01686 (2), -0.01683 (2), -0.01681 (2), -0.01671 (2), -0.01540 (2), -0.01538 (2), -0.01537 (2), -0.01519 (2), -0.01439 (2), -0.01439 (2), -0.01437 (2), -0.01430 (2), -0.01429 (2), -0.01427 (2), 
Length of domains: 50
Time: pickout 0.0015    decision 0.0228    set_bounds 0.0143    solve 0.1325    add 0.0956    
Accumulated time: pickout 0.0019    decision 0.5318    set_bounds 0.0239    solve 0.2514    add 0.2290    
Current (lb-rhs): -0.017612934112548828
100 domains visited
Cumulative time: 1.1440842151641846

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 68] [/input-12, 21] [/input-12, 21] [/input-12, 21] [/input-12, 68] [/input-12, 68] [/input-12, 21] [/input-12, 21] [/input-12, 21] [/input-12, 21] 
split level 1: [/input-12, 1] [/input-12, 68] [/input-12, 78] [/input-12, 68] [/input-12, 1] [/input-12, 1] [/input-12, 78] [/input-12, 68] [/input-12, 68] [/input-12, 78] 
split level 2: [/input-12, 78] [/input-12, 78] [/input-12, 1] [/input-12, 1] [/input-12, 78] [/input-12, 78] [/input-12, 1] [/input-12, 78] [/input-12, 1] [/input-12, 1] 
split level 3: [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22659945487976074

all verified at 8th iter
Time: prepare 0.0091    bound 0.0581    transfer 0.0007    finalize 0.0022    func 0.0728    
Accumulated time: func 0.3756    prepare 0.0415    bound 0.3258    transfer 0.0029    finalize 0.0080    
all_split False
======================Cut inference begins======================
max lb tensor(0.42608428) min lb tensor(0.00041413)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 67.
#cuts 1-3: 67
#cuts >= 20: 0
BICCOS time: 0.03703641891479492 
BICCOS Cumulative time: 0.07321500778198242
Preprocessing time: 0.011626005172729492 Inference time: 0.015142679214477539 Add cuts time: 0.008982658386230469 Cut analysis time: 0.0012850761413574219
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0192    set_bounds 0.0159    solve 0.0728    add 0.0232    
Accumulated time: pickout 0.0030    decision 0.5509    set_bounds 0.0399    solve 0.3242    add 0.2522    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!
Restore {'/input': ([], [], [], [], []), '/input-8': ([1331], [-1.0], [0], [-5.349861697520598e-21], [0]), '/input-12': (tensor([21, 68]), tensor([-1., -1.]), tensor([0, 0]), tensor([5.06382158e-11, 1.58576056e-01]), tensor([1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([1331], [-1.0], [0], [-5.349861697520598e-21], [0]), '/input-12': (tensor([21, 68]), tensor([-1.,  1.]), tensor([0, 0]), tensor([5.06382158e-11, 1.85791720e-02]), tensor([1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([1331], [-1.0], [0], [-5.349861697520598e-21], [0]), '/input-12': (tensor([21]), tensor([1.]), tensor([0]), tensor([0.28105932]), tensor([1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': (tensor([1331]), tensor([1.]), tensor([0]), tensor([-5.34986170e-21]), tensor([0])), '/input-12': ([], [], [], [], [])}
Shallow branching resets to n domains:  4
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.27009057998657227
10 lb beta sum: 2.570051431655884, worst -0.009092330932617188
Time: prepare 0.0004    bound 0.1369    transfer 0.0001    finalize 0.0002    func 0.1376    
Accumulated time: func 0.5132    prepare 0.0419    bound 0.4627    transfer 0.0030    finalize 0.0081    
After pruning, left:  1

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 21] 
split level 1: [/input-12, 68] 
split level 2: [/input-12, 78] 
split level 3: [/input-12, 1] 
split level 4: [/input-8, 1890] 
split level 5: [/input-8, 1132] 
split level 6: [/input-8, 1131] 
split level 7: [/input-8, 1898] 
cut re-enabled after branching node selection
0 lb beta sum: 5.27402925491333, worst 0.020579814910888672

all verified at 0th iter
Time: prepare 0.0115    bound 0.0053    transfer 0.0020    finalize 0.0012    func 0.0218    
Accumulated time: func 0.5349    prepare 0.0539    bound 0.4681    transfer 0.0050    finalize 0.0094    
all_split False
======================Cut inference begins======================
max lb tensor(1.32283759) min lb tensor(0.02057981)
Number of Verified Splits: 256 of 256
Stop inferencing: Max iteration reached.
Total number of valid cuts: 67.
#cuts 1-3: 67
#cuts >= 20: 0
BICCOS time: 0.00033855438232421875 
BICCOS Cumulative time: 0.07355356216430664
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0214    set_bounds 0.0254    solve 0.0218    add 0.0001    
Accumulated time: pickout 0.0034    decision 0.5723    set_bounds 0.0652    solve 0.3461    add 0.2523    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
Cumulative time: 1.5315184593200684

Result: safe in 3.0695 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 113, vnnlib ID: 113 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.78284311, -8.25498867, -3.91874337, -1.90788758, -4.97474670,
         -1.46400177, -6.09554291, -3.89886856, -8.36994171, -6.97793961]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [667]; unstable size 667; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 214, 1, 667] with unstable size 213 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 667] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 667] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [213]; unstable size 213; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 213] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 213] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.60612774,  4.23385668,  0.99936318,  2.04068422, -0.70643753,
          3.00155044,  1.31167316,  4.90406227,  3.47214890]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.78284311, -8.25498867, -3.91874337, -1.90788758, -4.97474670,
         -1.46400177, -6.09554291, -3.89886856, -8.36994171, -6.97793961]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.78284311, -8.25498867, -3.91874337, -1.90788758, -4.97474670,
          -1.46400177, -6.09554291, -3.89886856, -8.36994171, -6.97793961]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.44388580]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.03650784, -1.00476182, -0.75079364,  ..., -0.68730158,
            -0.90952379, -1.62380958],
           [-0.44920623, -0.95714283, -0.67142856,  ..., -0.32222211,
            -0.65555555, -1.62380958],
           [-0.09999990, -0.92539680, -0.63968253,  ..., -0.22698402,
            -0.57619047, -1.63968253],
           ...,
           [-0.27460307, -0.29047608, -0.33809513,  ..., -0.87777776,
            -0.51269841, -0.48095238],
           [-0.30634910, -0.30634910, -0.33809513,  ..., -1.09999990,
            -0.65555555, -0.49682540],
           [-0.40158719, -0.40158719, -0.41746020,  ..., -1.29047608,
            -0.87777776, -0.62380952]],

          [[-1.62640905, -1.72302747, -1.65861523,  ..., -1.49758446,
            -1.57809973, -1.75523353],
           [-1.38486302, -1.77133656, -1.61030602,  ..., -1.35265696,
            -1.49758446, -1.75523353],
           [-1.09500802, -1.80354273, -1.62640905,  ..., -1.22383249,
            -1.40096617, -1.75523353],
           ...,
           [-1.25603855, -1.25603855, -1.28824472,  ..., -0.72463763,
            -0.43478248, -0.51529789],
           [-1.28824472, -1.25603855, -1.28824472,  ..., -0.88566822,
            -0.48309177, -0.45088565],
           [-1.33655393, -1.33655393, -1.33655393,  ..., -1.12721407,
            -0.67632848, -0.46698871]],

          [[-1.48275876, -1.52773619, -1.49775124,  ..., -1.28785622,
            -1.34782624, -1.42278874],
           [-1.15292358, -1.55772126, -1.54272878,  ..., -1.12293863,
            -1.19790113, -1.42278874],
           [-0.89805096, -1.54272878, -1.51274371,  ..., -1.06296861,
            -1.13793111, -1.43778121],
           ...,
           [-0.94302845, -0.94302845, -0.95802099,  ..., -0.61319339,
            -0.38830581, -0.52323836],
           [-0.94302845, -0.94302845, -0.94302845,  ..., -0.70314842,
            -0.34332830, -0.38830581],
           [-0.98800600, -1.00299859, -1.00299859,  ..., -0.89805096,
            -0.52323836, -0.31334329]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0698 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 114, vnnlib ID: 114 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.20003605, -18.01286888, -15.99082375, -17.43127060, -15.99804783,
         -18.05647850, -17.26184273, -18.19654465, -14.18293667, -18.52462387]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [575]; unstable size 575; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 278, 1, 575] with unstable size 277 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 575] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 575] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [277]; unstable size 277; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 277] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 277] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.64699364, 2.80865264, 4.23958683, 2.61277103, 4.73358536, 3.88175774,
         4.35204268, 1.01147699, 5.09978485]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0634 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 115, vnnlib ID: 115 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.36256695, -13.41296291,  -7.44461441,  -8.80130768,  -6.03208971,
          -9.45968819,  -8.73321247,  -9.01270103, -12.02322006, -13.37573814]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [544]; unstable size 544; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 300, 1, 544] with unstable size 299 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 544] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 544] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [299]; unstable size 299; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 299] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 299] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.81327713, 5.48521519, 0.46946681, 1.82796860, 2.35864878, 1.48084855,
         1.92163324, 4.35953045, 5.34309292]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0738 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 116, vnnlib ID: 116 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.81765366, -7.31970978, -3.61689496, -2.33775973, -4.04815769,
         -1.70513523, -4.43761539, -2.28235054, -5.83187103, -5.49887180]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [659]; unstable size 659; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 163, 1, 659] with unstable size 162 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 659] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 659] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [162]; unstable size 162; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 162] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 162] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.62464476,  3.89426279,  0.79460692,  0.29400685,  1.47056746,
          1.78599656, -0.22967982,  2.20870399,  2.15642881]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.81765366, -7.31970978, -3.61689496, -2.33775973, -4.04815769,
         -1.70513523, -4.43761539, -2.28235054, -5.83187103, -5.49887180]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.18it/s]100%|██████████| 1/1 [00:00<00:00,  9.17it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.89979172, -7.36104774, -3.67233706, -2.66874647, -4.12950802,
          -2.08822346, -4.72593451, -2.15821362, -6.01429844, -5.55949211]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.06999016]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1117 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 16.392478942871094
alpha/beta optimization time: 1.1761493682861328
initial alpha-crown bounds: tensor([[ 3.67620087,  3.94920111,  0.83800316,  0.30350506,  1.50146961,
          1.81741738, -0.19317877,  2.29632807,  2.20353222]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.19317877292633057
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.63700151443481
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.63696599006653
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.63694405555725
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.6369240283966
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.63690567016602
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.6368865966797
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 198.63686847686768
Verifying property 6 with 1 instances.
##### Instance 116 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.19317877]], device='cuda:0') need to verify.
Model prediction is: tensor([-6.81765366, -7.31970978, -3.61689496, -2.33775973, -4.04815769,
        -1.70513523, -4.43761539, -2.28235054, -5.83187103, -5.49887180],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.19317877]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 659
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 159
Node /15 input 0: size torch.Size([100]) unstable 16
-----------------
# of unstable neurons: 834
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.0001049041748046875
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19317781925201416
10 lb beta sum: 0.0, worst -0.19318127632141113
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0516    transfer 0.0001    finalize 0.0001    func 0.0520    
Accumulated time: func 0.0520    prepare 0.0002    bound 0.0516    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 11] 
split level 1: [/input-12, 6] 
split level 2: [/input-12, 1] 
split level 3: [/input-12, 68] 
split level 4: [/input-12, 10] 
split level 5: [/input-12, 53] 
split level 6: [/input-8, 110] 
split level 7: [/input-8, 926] 
split level 8: [/input-8, 1460] 
split level 9: [/input-8, 162] 
split level 10: [/input-12, 64] 
split level 11: [/input-8, 486] 
split level 12: [/input-8, 1001] 
split level 13: [/input-8, 573] 
split level 14: [/input-8, 1017] 
split level 15: [/input-8, 1506] 
split level 16: [/input-8, 1058] 
split level 17: [/input-8, 998] 
split level 18: [/input-8, 102] 
split level 19: [/input-8, 1453] 
split level 20: [/input-8, 93] 
split level 21: [/input-8, 2036] 
split level 22: [/input-8, 619] 
split level 23: [/input-8, 1461] 
split level 24: [/input-8, 1329] 
split level 25: [/input, 2375] 
split level 26: [/input-8, 1523] 
split level 27: [/input-8, 598] 
split level 28: [/input, 481] 
split level 29: [/input-8, 1018] 
split level 30: [/input-8, 1009] 
split level 31: [/input-8, 2024] 
split level 32: [/input-8, 1421] 
split level 33: [/input-8, 993] 
split level 34: [/input-8, 1869] 
split level 35: [/input-8, 105] 
split level 36: [/input, 436] 
split level 37: [/input, 2430] 
split level 38: [/input, 1724] 
split level 39: [/input-8, 490] 
split level 40: [/input-8, 1765] 
split level 41: [/input, 2748] 
split level 42: [/input-8, 979] 
split level 43: [/input-8, 924] 
split level 44: [/input-8, 479] 
split level 45: [/input, 2071] 
split level 46: [/input-8, 1265] 
split level 47: [/input-8, 1467] 
split level 48: [/input, 497] 
split level 49: [/input, 2747] 
split level 50: [/input, 2397] 
split level 51: [/input-8, 892] 
split level 52: [/input-8, 521] 
split level 53: [/input-8, 1662] 
split level 54: [/input-8, 985] 
split level 55: [/input-8, 1466] 
split level 56: [/input-8, 1525] 
split level 57: [/input, 2446] 
split level 58: [/input-8, 497] 
split level 59: [/input-8, 585] 
split level 60: [/input-8, 969] 
split level 61: [/input, 1658] 
split level 62: [/input, 126] 
split level 63: [/input-8, 2041] 
split level 64: [/input, 455] 
split level 65: [/input, 285] 
split level 66: [/input-8, 1774] 
split level 67: [/input-8, 1518] 
split level 68: [/input, 1925] 
split level 69: [/input-8, 698] 
split level 70: [/input, 3027] 
split level 71: [/input, 2719] 
split level 72: [/input-8, 1514] 
split level 73: [/input-8, 2039] 
split level 74: [/input-8, 1805] 
split level 75: [/input, 196] 
split level 76: [/input-8, 78] 
split level 77: [/input-8, 1396] 
split level 78: [/input, 2215] 
split level 79: [/input, 3880] 
split level 80: [/input, 1642] 
split level 81: [/input-8, 481] 
split level 82: [/input, 2072] 
split level 83: [/input-8, 111] 
split level 84: [/input, 3021] 
split level 85: [/input, 2329] 
split level 86: [/input, 2380] 
split level 87: [/input-8, 2006] 
split level 88: [/input, 2749] 
split level 89: [/input, 440] 
split level 90: [/input-8, 1860] 
split level 91: [/input, 2763] 
split level 92: [/input, 2245] 
split level 93: [/input, 2463] 
split level 94: [/input-8, 2026] 
split level 95: [/input, 3025] 
split level 96: [/input, 3811] 
split level 97: [/input, 2984] 
split level 98: [/input-8, 564] 
split level 99: [/input, 3815] 
split level 100: [/input, 3223] 
split level 101: [/input-8, 1470] 
split level 102: [/input, 2280] 
split level 103: [/input, 2989] 
split level 104: [/input, 2597] 
split level 105: [/input, 3967] 
split level 106: [/input-8, 529] 
split level 107: [/input, 1246] 
split level 108: [/input, 3096] 
split level 109: [/input, 1560] 
split level 110: [/input, 1784] 
split level 111: [/input, 2714] 
split level 112: [/input-8, 121] 
split level 113: [/input, 3966] 
split level 114: [/input, 3099] 
split level 115: [/input, 2294] 
split level 116: [/input-8, 454] 
split level 117: [/input, 2248] 
split level 118: [/input, 2371] 
split level 119: [/input, 3198] 
split level 120: [/input, 2426] 
split level 121: [/input, 2089] 
split level 122: [/input, 3998] 
split level 123: [/input, 3000] 
split level 124: [/input-8, 103] 
split level 125: [/input, 3795] 
split level 126: [/input, 2381] 
split level 127: [/input, 3876] 
split level 128: [/input, 3793] 
split level 129: [/input, 3197] 
split level 130: [/input, 2302] 
split level 131: [/input, 1941] 
split level 132: [/input, 2238] 
split level 133: [/input, 2815] 
split level 134: [/input, 1783] 
split level 135: [/input, 1518] 
split level 136: [/input, 2615] 
split level 137: [/input, 3112] 
split level 138: [/input, 273] 
split level 139: [/input, 3233] 
split level 140: [/input, 2585] 
split level 141: [/input, 2973] 
split level 142: [/input, 1307] 
split level 143: [/input, 1878] 
split level 144: [/input-8, 987] 
split level 145: [/input, 3100] 
split level 146: [/input, 1481] 
split level 147: [/input, 1657] 
split level 148: [/input, 2587] 
split level 149: [/input, 1785] 
split level 150: [/input, 4051] 
split level 151: [/input-8, 527] 
split level 152: [/input, 4043] 
split level 153: [/input, 3104] 
split level 154: [/input, 3794] 
split level 155: [/input, 3140] 
split level 156: [/input, 2244] 
split level 157: [/input, 2298] 
split level 158: [/input, 3115] 
split level 159: [/input, 474] 
split level 160: [/input, 1801] 
split level 161: [/input, 3826] 
split level 162: [/input, 2372] 
split level 163: [/input, 1493] 
split level 164: [/input, 1942] 
split level 165: [/input, 1305] 
split level 166: [/input-8, 1413] 
split level 167: [/input, 3185] 
split level 168: [/input, 3980] 
split level 169: [/input, 2415] 
split level 170: [/input, 3866] 
split level 171: [/input, 3043] 
split level 172: [/input, 2354] 
split level 173: [/input, 3102] 
split level 174: [/input, 2368] 
split level 175: [/input, 3825] 
split level 176: [/input-8, 1397] 
split level 177: [/input, 2988] 
split level 178: [/input, 2257] 
split level 179: [/input, 3881] 
split level 180: [/input, 3107] 
split level 181: [/input-8, 2033] 
split level 182: [/input-8, 525] 
split level 183: [/input, 2807] 
split level 184: [/input, 3790] 
split level 185: [/input, 3822] 
split level 186: [/input, 3054] 
split level 187: [/input, 3169] 
split level 188: [/input, 1247] 
split level 189: [/input, 2053] 
split level 190: [/input, 95] 
split level 191: [/input-8, 2025] 
split level 192: [/input, 3820] 
split level 193: [/input, 1653] 
split level 194: [/input-8, 1554] 
split level 195: [/input, 3092] 
split level 196: [/input, 2311] 
split level 197: [/input, 3136] 
split level 198: [/input, 2097] 
split level 199: [/input, 3088] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19309020042419434
10 lb beta sum: 0.0, worst -0.19309484958648682
Time: prepare 0.0120    bound 0.0946    transfer 0.0008    finalize 0.0026    func 0.1130    
Accumulated time: func 0.1651    prepare 0.0219    bound 0.1462    transfer 0.0008    finalize 0.0027    
all_split False
======================Cut inference begins======================
max lb tensor(0.22569799) min lb tensor(-0.19308913)
Number of Verified Splits: 3 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.011561870574951172 
BICCOS Cumulative time: 0.011561870574951172
Preprocessing time: 0.011125802993774414 Inference time: 0.00015282630920410156 Add cuts time: 5.14984130859375e-05 Cut analysis time: 0.00023174285888671875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18751 (1), -0.18749 (1), -0.18735 (1), -0.18653 (1), -0.18647 (1), -0.18629 (1), -0.18607 (1), -0.18601 (1), -0.18572 (1), -0.18515 (1), -0.18504 (1), -0.18487 (1), -0.18453 (1), -0.18437 (1), -0.18431 (1), -0.18383 (1), -0.18302 (1), -0.18255 (1), -0.18149 (1), -0.18125 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5019    set_bounds 0.0085    solve 0.1131    add 0.0683    
Accumulated time: pickout 0.0003    decision 0.5019    set_bounds 0.0085    solve 0.1131    add 0.0683    
Current (lb-rhs): -0.1875094175338745
50 domains visited
Cumulative time: 0.7603733539581299

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] 
split level 1: [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] 
split level 2: [/input-12, 68] [/input-12, 10] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 10] [/input-12, 68] [/input-12, 68] [/input-12, 68] 
split level 3: [/input-12, 10] [/input-12, 53] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 53] [/input-12, 53] [/input-12, 10] [/input-12, 10] [/input-12, 10] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17298519611358643
10 lb beta sum: 0.4636729657649994, worst -0.1574435532093048
Time: prepare 0.0084    bound 0.1158    transfer 0.0007    finalize 0.0024    func 0.1299    
Accumulated time: func 0.2949    prepare 0.0305    bound 0.2621    transfer 0.0016    finalize 0.0051    
all_split False
======================Cut inference begins======================
max lb tensor(0.18049788) min lb tensor(-0.15740256)
Number of Verified Splits: 99 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.017302989959716797 
BICCOS Cumulative time: 0.02886486053466797
Preprocessing time: 0.011764287948608398 Inference time: 0.003545522689819336 Add cuts time: 0.001739501953125 Cut analysis time: 0.0002536773681640625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08632 (2), -0.08596 (2), -0.08590 (2), -0.08573 (2), -0.08541 (2), -0.08525 (2), -0.08522 (2), -0.08503 (2), -0.08445 (2), -0.08344 (2), -0.08337 (2), -0.08240 (2), -0.08172 (2), -0.08157 (2), -0.08088 (2), -0.08063 (2), -0.07994 (2), -0.07902 (2), -0.07897 (2), -0.07886 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0195    set_bounds 0.0117    solve 0.1299    add 0.0799    
Accumulated time: pickout 0.0014    decision 0.5213    set_bounds 0.0202    solve 0.2431    add 0.1482    
Current (lb-rhs): -0.08631521463394165
100 domains visited
Cumulative time: 1.0199687480926514

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 1] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] 
split level 1: [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 68] [/input-12, 68] [/input-12, 1] [/input-12, 6] [/input-12, 6] [/input-12, 1] [/input-12, 1] 
split level 2: [/input-12, 68] [/input-12, 10] [/input-12, 68] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 1] [/input-12, 1] [/input-12, 10] [/input-12, 10] 
split level 3: [/input-12, 53] [/input-8, 93] [/input-8, 93] [/input-12, 53] [/input-8, 93] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11706805229187012
10 lb beta sum: 0.6050634384155273, worst -0.09031292796134949
Time: prepare 0.0083    bound 0.1147    transfer 0.0012    finalize 0.0023    func 0.1298    
Accumulated time: func 0.4247    prepare 0.0391    bound 0.3768    transfer 0.0028    finalize 0.0074    
all_split False
======================Cut inference begins======================
max lb tensor(0.41315544) min lb tensor(-0.08440816)
Number of Verified Splits: 118 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 5
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.019303560256958008 
BICCOS Cumulative time: 0.04816842079162598
Preprocessing time: 0.011594772338867188 Inference time: 0.005257606506347656 Add cuts time: 0.002061128616333008 Cut analysis time: 0.00039005279541015625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04203 (3), -0.04177 (3), -0.04175 (3), -0.04160 (3), -0.04140 (3), -0.04020 (3), -0.04013 (3), -0.04010 (3), -0.04009 (3), -0.04008 (3), -0.03960 (3), -0.03951 (3), -0.03898 (3), -0.03818 (3), -0.03778 (3), -0.03772 (3), -0.03700 (3), -0.03681 (3), -0.03679 (3), -0.03669 (3), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0188    set_bounds 0.0162    solve 0.1299    add 0.0886    
Accumulated time: pickout 0.0024    decision 0.5402    set_bounds 0.0364    solve 0.3729    add 0.2367    
Current (lb-rhs): -0.04203474521636963
150 domains visited
Cumulative time: 1.2939977645874023

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 1] [/input-12, 11] [/input-12, 1] [/input-12, 11] [/input-12, 11] 
split level 1: [/input-12, 1] [/input-12, 1] [/input-12, 6] [/input-12, 6] [/input-12, 1] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 6] 
split level 2: [/input-12, 53] [/input-12, 53] [/input-12, 1] [/input-12, 1] [/input-12, 10] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 1] 
split level 3: [/input-8, 93] [/input-8, 93] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-8, 93] [/input-8, 93] [/input-8, 93] [/input-8, 93] [/input-12, 10] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07736122608184814
10 lb beta sum: 0.5771253108978271, worst -0.051670968532562256
Time: prepare 0.0084    bound 0.1296    transfer 0.0008    finalize 0.0023    func 0.1437    
Accumulated time: func 0.5684    prepare 0.0477    bound 0.5065    transfer 0.0036    finalize 0.0097    
all_split False
======================Cut inference begins======================
max lb tensor(0.23823118) min lb tensor(-0.04147387)
Number of Verified Splits: 173 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 4
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.023505687713623047 
BICCOS Cumulative time: 0.07167410850524902
Preprocessing time: 0.011523962020874023 Inference time: 0.008262872695922852 Add cuts time: 0.0033888816833496094 Cut analysis time: 0.0003299713134765625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02279 (4), -0.02274 (4), -0.02267 (4), -0.02264 (4), -0.02106 (4), -0.02092 (4), -0.01980 (4), -0.01962 (4), -0.01948 (4), -0.01943 (4), -0.01936 (4), -0.01927 (4), -0.01905 (4), -0.01894 (4), -0.01866 (4), -0.01828 (4), -0.01768 (4), -0.01760 (4), -0.01735 (4), -0.01714 (4), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0188    set_bounds 0.0153    solve 0.1438    add 0.2140    
Accumulated time: pickout 0.0035    decision 0.5590    set_bounds 0.0517    solve 0.5167    add 0.4507    
Current (lb-rhs): -0.022792458534240723
200 domains visited
Cumulative time: 1.7106719017028809

Shallow-BaB round 5
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] 
split level 1: [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] 
split level 2: [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] 
split level 3: [/input-8, 1460] [/input-8, 1460] [/input, 1724] [/input-8, 1460] [/input-8, 1460] [/input-8, 1460] [/input-8, 1460] [/input-8, 1460] [/input-8, 1460] [/input-8, 1460] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05926060676574707
10 lb beta sum: 0.41711097955703735, worst -0.037374138832092285
Time: prepare 0.0092    bound 0.1301    transfer 0.0008    finalize 0.0022    func 0.1450    
Accumulated time: func 0.7134    prepare 0.0572    bound 0.6366    transfer 0.0044    finalize 0.0119    
all_split False
======================Cut inference begins======================
max lb tensor(0.26413345) min lb tensor(-0.02279246)
Number of Verified Splits: 168 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 4
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.025033950805664062 
BICCOS Cumulative time: 0.09670805931091309
Preprocessing time: 0.011654853820800781 Inference time: 0.009044408798217773 Add cuts time: 0.00362396240234375 Cut analysis time: 0.0007107257843017578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00638 (5), -0.00636 (5), -0.00633 (5), -0.00633 (5), -0.00631 (5), -0.00630 (5), -0.00616 (5), -0.00614 (5), -0.00612 (5), -0.00611 (5), -0.00607 (5), -0.00602 (5), -0.00600 (5), -0.00593 (5), -0.00592 (5), -0.00587 (5), -0.00585 (5), -0.00584 (5), -0.00578 (5), -0.00548 (5), 
Length of domains: 50
Time: pickout 0.0012    decision 0.0191    set_bounds 0.0154    solve 0.1451    add 0.0990    
Accumulated time: pickout 0.0047    decision 0.5781    set_bounds 0.0671    solve 0.6619    add 0.5497    
Current (lb-rhs): -0.006382942199707031
250 domains visited
Cumulative time: 2.0158143043518066

Restore {'/input': ([], [], [], [], []), '/input-8': ([110], [-1.0], [0], [2.402932593639553e-40], [0]), '/input-12': (tensor([68, 11]), tensor([-1., -1.]), tensor([0, 0]), tensor([0.06779091, 0.23538844]), tensor([1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([110], [-1.0], [0], [2.402932593639553e-40], [0]), '/input-12': (tensor([68, 11]), tensor([-1.,  1.]), tensor([0, 0]), tensor([0.06779091, 0.00042181]), tensor([1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([110], [-1.0], [0], [2.402932593639553e-40], [0]), '/input-12': (tensor([68, 10, 53, 11]), tensor([ 1., -1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([0.09889160, 0.01847534, 0.02991842, 0.26704484]), tensor([1, 2, 3, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([110], [-1.0], [0], [2.402932593639553e-40], [0]), '/input-12': (tensor([68, 10, 53, 11]), tensor([ 1., -1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([0.09889160, 0.01847534, 0.02991842, 0.00093763]), tensor([1, 2, 3, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([110], [-1.0], [0], [2.402932593639553e-40], [0]), '/input-12': (tensor([68, 10, 53]), tensor([ 1., -1.,  1.]), tensor([0, 0, 0]), tensor([0.09889160, 0.01847534, 0.00854980]), tensor([1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([110], [-1.0], [0], [2.402932593639553e-40], [0]), '/input-12': (tensor([68, 10, 11]), tensor([ 1.,  1., -1.]), tensor([0, 0, 0]), tensor([0.09889160, 0.03448920, 0.23028348]), tensor([1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([110], [-1.0], [0], [2.402932593639553e-40], [0]), '/input-12': (tensor([68, 10, 11,  6]), tensor([ 1.,  1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([0.09889160, 0.03448920, 0.00108801, 0.06356327]), tensor([1, 2, 3, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([110], [-1.0], [0], [2.402932593639553e-40], [0]), '/input-12': (tensor([68, 10, 11,  6]), tensor([1., 1., 1., 1.]), tensor([0, 0, 0, 0]), tensor([0.09889160, 0.03448920, 0.00108801, 0.00052987]), tensor([1, 2, 3, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': (tensor([110]), tensor([1.]), tensor([0]), tensor([2.00971575e-20]), tensor([0])), '/input-12': ([], [], [], [], [])}
Shallow branching resets to n domains:  9
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19241559505462646
10 lb beta sum: 0.4281647205352783, worst -0.1542515754699707
Time: prepare 0.0005    bound 0.1386    transfer 0.0002    finalize 0.0002    func 0.1395    
Accumulated time: func 0.8529    prepare 0.0577    bound 0.7752    transfer 0.0046    finalize 0.0121    
After pruning, left:  5

Back to Regular BaB

BaB round 1
batch: 5
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6] [/input-12, 6] [/input-12, 11] [/input-12, 1] [/input-12, 11] 
split level 1: [/input-12, 1] [/input-12, 1] [/input-12, 6] [/input-12, 53] [/input-12, 6] 
split level 2: [/input-12, 10] [/input-8, 1460] [/input-12, 1] [/input-8, 1460] [/input-12, 1] 
split level 3: [/input-12, 53] [/input-12, 64] [/input-8, 1460] [/input-8, 1506] [/input-12, 68] 
split level 4: [/input-8, 1460] [/input-8, 1461] [/input-8, 1506] [/input, 1724] [/input-12, 10] 
split level 5: [/input, 1724] [/input, 1724] [/input, 1724] [/input-8, 993] [/input-12, 53] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7544559240341187, worst -0.10217273235321045
10 lb beta sum: 0.7544911503791809, worst -0.10202133655548096
Time: prepare 0.0161    bound 0.1394    transfer 0.0010    finalize 0.0021    func 0.1607    
Accumulated time: func 1.0137    prepare 0.0741    bound 0.9146    transfer 0.0056    finalize 0.0141    
all_split False
======================Cut inference begins======================
max lb tensor(0.39974844) min lb tensor(-0.10198605)
Number of Verified Splits: 290 of 320
Stop inferencing: Max iteration reached.
Total number of valid cuts: 15.
#cuts 1-3: 4
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.00032210350036621094 
BICCOS Cumulative time: 0.0970301628112793
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10199 (6), -0.08963 (6), -0.07870 (6), -0.07335 (6), -0.06774 (6), -0.04962 (6), -0.04821 (6), -0.04680 (6), -0.04024 (6), -0.04012 (6), -0.03998 (6), -0.03690 (6), -0.03289 (6), -0.03211 (6), -0.03161 (6), -0.02446 (6), -0.02302 (6), -0.01995 (6), -0.01472 (6), -0.01424 (6), 
Length of domains: 30
Time: pickout 0.0005    decision 0.0176    set_bounds 0.0350    solve 0.1608    add 0.0009    
Accumulated time: pickout 0.0052    decision 0.5957    set_bounds 0.1022    solve 0.8227    add 0.5507    
Current (lb-rhs): -0.10198605060577393
280 domains visited
Cumulative time: 2.3910610675811768

BaB round 2
batch: 30
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1058] [/input-8, 1058] [/input-8, 926] [/input-8, 1460] [/input-8, 926] [/input-8, 926] [/input-8, 926] [/input-8, 1460] [/input-8, 1453] [/input-8, 1058] 
split level 1: [/input-8, 1453] [/input-8, 1461] [/input-8, 1461] [/input-8, 1453] [/input-8, 1506] [/input-8, 1506] [/input-8, 1461] [/input-12, 64] [/input-8, 1461] [/input-8, 1461] 
split level 2: [/input-8, 1461] [/input, 2238] [/input, 2238] [/input-8, 1461] [/input-8, 1461] [/input, 2238] [/input, 2238] [/input-8, 1461] [/input, 2238] [/input, 2238] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8206359148025513, worst -0.0911179780960083
10 lb beta sum: 0.8209090232849121, worst -0.09104287624359131
Time: prepare 0.0121    bound 0.1403    transfer 0.0017    finalize 0.0014    func 0.1571    
Accumulated time: func 1.1708    prepare 0.0864    bound 1.0549    transfer 0.0073    finalize 0.0155    
all_split False
======================Cut inference begins======================
max lb tensor(0.11588573) min lb tensor(-0.09101152)
Number of Verified Splits: 106 of 240
Stop inferencing: Max iteration reached.
Total number of valid cuts: 15.
#cuts 1-3: 4
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.0003151893615722656 
BICCOS Cumulative time: 0.09734535217285156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09101 (9), -0.08883 (9), -0.08472 (9), -0.08359 (9), -0.08291 (9), -0.08251 (9), -0.08076 (9), -0.07651 (9), -0.07633 (9), -0.07553 (9), -0.07437 (9), -0.06849 (9), -0.06760 (9), -0.06451 (9), -0.06377 (9), -0.06029 (9), -0.06024 (9), -0.05855 (9), -0.05691 (9), -0.05646 (9), 
Length of domains: 134
Time: pickout 0.0014    decision 0.0122    set_bounds 0.0174    solve 0.1572    add 0.0014    
Accumulated time: pickout 0.0066    decision 0.6079    set_bounds 0.1195    solve 0.9798    add 0.5521    
Current (lb-rhs): -0.09101152420043945
414 domains visited
Cumulative time: 2.5815720558166504

BaB round 3
batch: 134
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 926] [/input-8, 162] [/input-12, 64] [/input-12, 64] [/input-8, 926] [/input-12, 64] [/input-8, 162] [/input-12, 64] [/input-12, 64] [/input-8, 926] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8146831393241882, worst -0.08873820304870605
10 lb beta sum: 0.814835250377655, worst -0.08871901035308838
Time: prepare 0.0134    bound 0.1406    transfer 0.0006    finalize 0.0016    func 0.1580    
Accumulated time: func 1.3288    prepare 0.1000    bound 1.1956    transfer 0.0079    finalize 0.0172    
all_split False
======================Cut inference begins======================
max lb tensor(0.10685784) min lb tensor(-0.08870602)
Number of Verified Splits: 83 of 268
Stop inferencing: Max iteration reached.
Total number of valid cuts: 15.
#cuts 1-3: 4
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.00035190582275390625 
BICCOS Cumulative time: 0.09769725799560547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08871 (10), -0.08654 (10), -0.08250 (10), -0.08161 (10), -0.08053 (10), -0.08027 (10), -0.07831 (10), -0.07421 (10), -0.07412 (10), -0.07336 (10), -0.07190 (10), -0.06764 (10), -0.06608 (10), -0.06549 (10), -0.06513 (10), -0.06441 (10), -0.06157 (10), -0.06132 (10), -0.06078 (10), -0.05953 (10), 
Length of domains: 185
Time: pickout 0.0023    decision 0.0188    set_bounds 0.0112    solve 0.1581    add 0.0013    
Accumulated time: pickout 0.0090    decision 0.6266    set_bounds 0.1308    solve 1.1380    add 0.5534    
Current (lb-rhs): -0.08870601654052734
599 domains visited
Cumulative time: 2.7742860317230225

BaB round 4
batch: 185
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 64] [/input-12, 64] [/input-8, 162] [/input-8, 993] [/input-8, 926] [/input-12, 64] [/input, 436] [/input-8, 993] [/input-8, 162] [/input, 436] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8403558135032654, worst -0.08665323257446289
10 lb beta sum: 0.8405739068984985, worst -0.08658039569854736
Time: prepare 0.0180    bound 0.1475    transfer 0.0018    finalize 0.0027    func 0.1724    
Accumulated time: func 1.5012    prepare 0.1182    bound 1.3431    transfer 0.0097    finalize 0.0199    
all_split False
======================Cut inference begins======================
max lb tensor(0.12093258) min lb tensor(-0.08657813)
Number of Verified Splits: 145 of 370
Stop inferencing: Max iteration reached.
Total number of valid cuts: 15.
#cuts 1-3: 4
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.00033736228942871094 
BICCOS Cumulative time: 0.09803462028503418
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08658 (11), -0.08440 (11), -0.07992 (11), -0.07941 (11), -0.07837 (11), -0.07769 (11), -0.07614 (11), -0.07215 (11), -0.07159 (11), -0.07094 (11), -0.06926 (11), -0.06530 (11), -0.06524 (11), -0.06500 (11), -0.06402 (11), -0.06364 (11), -0.06315 (11), -0.06295 (11), -0.06213 (11), -0.06193 (11), 
Length of domains: 225
Time: pickout 0.0027    decision 0.0208    set_bounds 0.0154    solve 0.1725    add 0.0017    
Accumulated time: pickout 0.0117    decision 0.6475    set_bounds 0.1462    solve 1.3105    add 0.5552    
Current (lb-rhs): -0.0865781307220459
824 domains visited
Cumulative time: 2.988847494125366

BaB round 5
batch: 225
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 162] [/input-8, 1453] [/input-8, 1453] [/input-8, 162] [/input-12, 64] [/input-8, 162] [/input-8, 1265] [/input-8, 1453] [/input-8, 162] [/input-12, 64] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8551403880119324, worst -0.08657848834991455
10 lb beta sum: 0.8553285002708435, worst -0.08658421039581299
Time: prepare 0.0217    bound 0.1493    transfer 0.0009    finalize 0.0030    func 0.1779    
Accumulated time: func 1.6790    prepare 0.1401    bound 1.4924    transfer 0.0105    finalize 0.0229    
all_split False
======================Cut inference begins======================
max lb tensor(0.08518338) min lb tensor(-0.08656669)
Number of Verified Splits: 108 of 450
Stop inferencing: Max iteration reached.
Total number of valid cuts: 15.
#cuts 1-3: 4
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.0003490447998046875 
BICCOS Cumulative time: 0.09838366508483887
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08657 (12), -0.08440 (12), -0.07991 (12), -0.07836 (12), -0.07769 (12), -0.07684 (12), -0.07611 (12), -0.07401 (12), -0.07157 (12), -0.06928 (12), -0.06926 (12), -0.06849 (12), -0.06670 (12), -0.06547 (12), -0.06521 (12), -0.06507 (12), -0.06373 (12), -0.06307 (12), -0.06277 (12), -0.06258 (12), 
Length of domains: 342
Time: pickout 0.0043    decision 0.0230    set_bounds 0.0187    solve 0.1780    add 0.0021    
Accumulated time: pickout 0.0160    decision 0.6705    set_bounds 0.1649    solve 1.4885    add 0.5573    
Current (lb-rhs): -0.08656668663024902
1166 domains visited
Cumulative time: 3.2163052558898926

BaB round 6
batch: 342
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1058] [/input-8, 1329] [/input-8, 1329] [/input-8, 1461] [/input-8, 1453] [/input-8, 993] [/input-8, 1329] [/input-8, 1058] [/input-8, 1453] [/input-8, 1265] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8592742681503296, worst -0.08437085151672363
10 lb beta sum: 0.8594001531600952, worst -0.08432483673095703
Time: prepare 0.0332    bound 0.1489    transfer 0.0017    finalize 0.0037    func 0.1919    
Accumulated time: func 1.8709    prepare 0.1735    bound 1.6413    transfer 0.0122    finalize 0.0265    
all_split False
======================Cut inference begins======================
max lb tensor(0.02370870) min lb tensor(-0.08430922)
Number of Verified Splits: 122 of 684
Stop inferencing: Max iteration reached.
Total number of valid cuts: 15.
#cuts 1-3: 4
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.00036835670471191406 
BICCOS Cumulative time: 0.09875202178955078
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08431 (13), -0.08189 (13), -0.07812 (13), -0.07767 (13), -0.07690 (13), -0.07593 (13), -0.07573 (13), -0.07518 (13), -0.07328 (13), -0.07261 (13), -0.07144 (13), -0.07082 (13), -0.07016 (13), -0.06985 (13), -0.06951 (13), -0.06917 (13), -0.06812 (13), -0.06738 (13), -0.06643 (13), -0.06512 (13), 
Length of domains: 562
Time: pickout 0.0060    decision 0.0294    set_bounds 0.0278    solve 0.1921    add 0.0025    
Accumulated time: pickout 0.0220    decision 0.6999    set_bounds 0.1928    solve 1.6807    add 0.5597    
Current (lb-rhs): -0.08430922031402588
1728 domains visited
Cumulative time: 3.4757955074310303

BaB round 7
batch: 562
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1506] [/input, 436] [/input-8, 1329] [/input-8, 1467] [/input-8, 1506] [/input-8, 1329] [/input-8, 1467] [/input-8, 1329] [/input, 436] [/input-8, 162] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8715672492980957, worst -0.08217036724090576
10 lb beta sum: 0.8716750144958496, worst -0.08207917213439941
Time: prepare 0.0547    bound 0.1620    transfer 0.0025    finalize 0.0069    func 0.2334    
Accumulated time: func 2.1043    prepare 0.2285    bound 1.8033    transfer 0.0148    finalize 0.0334    
all_split False
======================Cut inference begins======================
max lb tensor(0.01007521) min lb tensor(-0.08206105)
Number of Verified Splits: 165 of 1124
Stop inferencing: Max iteration reached.
Total number of valid cuts: 15.
#cuts 1-3: 4
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.00044918060302734375 
BICCOS Cumulative time: 0.09920120239257812
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08206 (14), -0.07964 (14), -0.07581 (14), -0.07535 (14), -0.07529 (14), -0.07459 (14), -0.07433 (14), -0.07371 (14), -0.07288 (14), -0.07285 (14), -0.07153 (14), -0.07124 (14), -0.07106 (14), -0.06912 (14), -0.06905 (14), -0.06902 (14), -0.06852 (14), -0.06844 (14), -0.06778 (14), -0.06776 (14), 
Length of domains: 959
Time: pickout 0.0081    decision 0.0423    set_bounds 0.0436    solve 0.2337    add 0.0041    
Accumulated time: pickout 0.0301    decision 0.7422    set_bounds 0.2364    solve 1.9143    add 0.5638    
Current (lb-rhs): -0.0820610523223877
2687 domains visited
Cumulative time: 3.8098978996276855

BaB round 8
batch: 959
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1329] [/input-8, 993] [/input, 436] [/input-8, 1453] [/input-8, 1329] [/input, 436] [/input-8, 1453] [/input-8, 598] [/input-8, 598] [/input-8, 993] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8815088272094727, worst -0.08081245422363281
10 lb beta sum: 0.8815521001815796, worst -0.0808175802230835
Time: prepare 0.0956    bound 0.2118    transfer 0.0071    finalize 0.0104    func 0.3373    
Accumulated time: func 2.4416    prepare 0.3243    bound 2.0152    transfer 0.0219    finalize 0.0438    
all_split False
======================Cut inference begins======================
max lb tensor(0.01118022) min lb tensor(-0.08079910)
Number of Verified Splits: 299 of 1918
Stop inferencing: Max iteration reached.
Total number of valid cuts: 15.
#cuts 1-3: 4
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.0004012584686279297 
BICCOS Cumulative time: 0.09960246086120605
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08080 (15), -0.07837 (15), -0.07743 (15), -0.07498 (15), -0.07452 (15), -0.07331 (15), -0.07331 (15), -0.07325 (15), -0.07264 (15), -0.07247 (15), -0.07244 (15), -0.07158 (15), -0.07114 (15), -0.07091 (15), -0.07077 (15), -0.07021 (15), -0.06988 (15), -0.06978 (15), -0.06970 (15), -0.06943 (15), 
Length of domains: 1619
Time: pickout 0.0169    decision 0.0637    set_bounds 0.0732    solve 0.3377    add 0.0101    
Accumulated time: pickout 0.0470    decision 0.8059    set_bounds 0.3096    solve 2.2520    add 0.5739    
Current (lb-rhs): -0.08079910278320312
4306 domains visited
Cumulative time: 4.314822196960449

BaB round 9
batch: 1619
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 598] [/input-8, 479] [/input-8, 993] [/input, 2748] [/input-8, 598] [/input-8, 993] [/input, 2748] [/input-8, 479] [/input-8, 993] [/input-8, 1453] 
cut re-enabled after branching node selection
0 lb beta sum: 0.895534098148346, worst -0.07738184928894043
10 lb beta sum: 0.8955522179603577, worst -0.07738900184631348
Time: prepare 0.1666    bound 0.3110    transfer 0.0215    finalize 0.0184    func 0.5385    
Accumulated time: func 2.9801    prepare 0.4911    bound 2.3261    transfer 0.0434    finalize 0.0623    
all_split False
======================Cut inference begins======================
max lb tensor(0.01124918) min lb tensor(-0.07737172)
Number of Verified Splits: 443 of 3238
Stop inferencing: Max iteration reached.
Total number of valid cuts: 15.
#cuts 1-3: 4
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.00048422813415527344 
BICCOS Cumulative time: 0.10008668899536133
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07737 (16), -0.07692 (16), -0.07495 (16), -0.07451 (16), -0.07385 (16), -0.07373 (16), -0.07142 (16), -0.07130 (16), -0.07108 (16), -0.07064 (16), -0.07043 (16), -0.06991 (16), -0.06987 (16), -0.06983 (16), -0.06941 (16), -0.06941 (16), -0.06919 (16), -0.06913 (16), -0.06902 (16), -0.06893 (16), 
Length of domains: 2795
Time: pickout 0.0242    decision 0.2517    set_bounds 0.1302    solve 0.5392    add 0.0109    
Accumulated time: pickout 0.0712    decision 1.0576    set_bounds 0.4398    solve 2.7911    add 0.5847    
Current (lb-rhs): -0.07737171649932861
7101 domains visited
Cumulative time: 5.278501272201538

BaB round 10
batch: 2795
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 436] [/input-8, 1009] [/input-8, 1009] [/input, 436] [/input, 2748] [/input-8, 1009] [/input, 2748] [/input-8, 1009] [/input-8, 1009] [/input-8, 979] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9040830135345459, worst -0.07543063163757324
10 lb beta sum: 0.9040830135345459, worst -0.07541835308074951
Time: prepare 0.2938    bound 0.4854    transfer 0.0466    finalize 0.1908    func 1.0527    
Accumulated time: func 4.0328    prepare 0.7852    bound 2.8116    transfer 0.0900    finalize 0.2531    
all_split False
======================Cut inference begins======================
max lb tensor(0.01548529) min lb tensor(-0.07540536)
Number of Verified Splits: 669 of 5590
Stop inferencing: Max iteration reached.
Total number of valid cuts: 15.
#cuts 1-3: 4
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.0005412101745605469 
BICCOS Cumulative time: 0.10062789916992188
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07541 (17), -0.07496 (17), -0.07278 (17), -0.07233 (17), -0.07204 (17), -0.07191 (17), -0.07076 (17), -0.07031 (17), -0.06924 (17), -0.06912 (17), -0.06907 (17), -0.06862 (17), -0.06859 (17), -0.06813 (17), -0.06805 (17), -0.06797 (17), -0.06773 (17), -0.06763 (17), -0.06733 (17), -0.06729 (17), 
Length of domains: 4921
Time: pickout 0.0423    decision 0.1630    set_bounds 0.2327    solve 1.0542    add 0.0215    
Accumulated time: pickout 0.1135    decision 1.2207    set_bounds 0.6725    solve 3.8454    add 0.6063    
Current (lb-rhs): -0.07540535926818848
12022 domains visited
Cumulative time: 6.80510950088501

BaB round 11
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 993] [/input-8, 93] [/input-8, 479] [/input-8, 993] [/input-8, 1009] [/input-8, 479] [/input-8, 93] [/input-8, 479] [/input-8, 598] [/input-8, 993] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9062942266464233, worst -0.07285547256469727
10 lb beta sum: 0.9062942266464233, worst -0.07286572456359863
Time: prepare 0.4351    bound 0.6752    transfer 0.0738    finalize 0.0505    func 1.4812    
Accumulated time: func 5.5141    prepare 1.2205    bound 3.4867    transfer 0.1638    finalize 0.3036    
all_split False
======================Cut inference begins======================
max lb tensor(0.12907165) min lb tensor(-0.07285070)
Number of Verified Splits: 1296 of 8192
Stop inferencing: Max iteration reached.
Total number of valid cuts: 15.
#cuts 1-3: 4
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.0006134510040283203 
BICCOS Cumulative time: 0.1012413501739502
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07285 (18), -0.07241 (18), -0.07221 (18), -0.07176 (18), -0.07083 (18), -0.07039 (18), -0.06948 (18), -0.06936 (18), -0.06882 (18), -0.06880 (18), -0.06871 (18), -0.06836 (18), -0.06743 (18), -0.06731 (18), -0.06721 (17), -0.06710 (18), -0.06666 (18), -0.06582 (18), -0.06576 (18), -0.06572 (18), 
Length of domains: 7721
Time: pickout 0.0645    decision 0.2302    set_bounds 0.3503    solve 1.4834    add 0.0392    
Accumulated time: pickout 0.1780    decision 1.4509    set_bounds 1.0228    solve 5.3288    add 0.6455    
Current (lb-rhs): -0.07285070419311523
18918 domains visited
current_vram/total_varm: 10.0GB/99.9GB, batch_size increase to 8192
Cumulative time: 8.989191770553589

BaB round 12
batch: 7721
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 479] [/input-8, 1453] [/input, 455] [/input-8, 1518] [/input-8, 598] [/input-8, 1466] [/input, 2748] [/input-8, 1009] [/input-8, 479] [/input-8, 479] 
cut re-enabled after branching node selection
0 lb beta sum: 0.913597822189331, worst -0.07160544395446777
10 lb beta sum: 0.913597822189331, worst -0.07160604000091553
Time: prepare 0.8208    bound 1.2063    transfer 0.0724    finalize 0.1014    func 2.3010    
Accumulated time: func 7.8151    prepare 2.0416    bound 4.6930    transfer 0.2362    finalize 0.4050    
all_split False
======================Cut inference begins======================
max lb tensor(0.13890189) min lb tensor(-0.07159781)
Number of Verified Splits: 2781 of 15442
Stop inferencing: Max iteration reached.
Total number of valid cuts: 15.
#cuts 1-3: 4
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.0005884170532226562 
BICCOS Cumulative time: 0.10182976722717285
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07160 (19), -0.07116 (19), -0.07095 (19), -0.07052 (19), -0.06828 (19), -0.06823 (19), -0.06810 (19), -0.06783 (19), -0.06762 (19), -0.06757 (19), -0.06745 (19), -0.06717 (19), -0.06625 (19), -0.06581 (19), -0.06560 (19), -0.06540 (18), -0.06516 (19), -0.06487 (19), -0.06476 (19), -0.06453 (19), 
Length of domains: 12661
Time: pickout 0.1494    decision 0.4317    set_bounds 0.8478    solve 2.3038    add 0.0572    
Accumulated time: pickout 0.3274    decision 1.8826    set_bounds 1.8707    solve 7.6326    add 0.7027    
Current (lb-rhs): -0.07159781455993652
31579 domains visited
Cumulative time: 12.811105251312256

BaB round 13
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1009] [/input, 2748] [/input-8, 1009] [/input-8, 598] [/input-8, 993] [/input, 2446] [/input-8, 479] [/input-8, 1009] [/input-8, 598] [/input, 2748] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9204082489013672, worst -0.06967854499816895
10 lb beta sum: 0.9204082489013672, worst -0.06968939304351807
Time: prepare 0.8762    bound 1.2736    transfer 0.0600    finalize 0.1007    func 2.4172    
Accumulated time: func 10.2323    prepare 2.9181    bound 5.9666    transfer 0.2962    finalize 0.5057    
all_split False
======================Cut inference begins======================
max lb tensor(0.14034587) min lb tensor(-0.06967854)
Number of Verified Splits: 2931 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 15.
#cuts 1-3: 4
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.0006482601165771484 
BICCOS Cumulative time: 0.10247802734375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06968 (20), -0.06924 (20), -0.06903 (20), -0.06859 (20), -0.06795 (20), -0.06762 (19), -0.06750 (20), -0.06732 (20), -0.06702 (20), -0.06686 (20), -0.06658 (20), -0.06630 (20), -0.06618 (20), -0.06593 (20), -0.06564 (20), -0.06560 (19), -0.06553 (20), -0.06516 (19), -0.06501 (20), -0.06457 (20), 
Length of domains: 17922
Time: pickout 0.1301    decision 0.6490    set_bounds 0.9712    solve 2.4205    add 0.0749    
Accumulated time: pickout 0.4576    decision 2.5316    set_bounds 2.8419    solve 10.0531    add 0.7775    
Current (lb-rhs): -0.06967854499816895
45032 domains visited
current_vram/total_varm: 28.8GB/99.9GB, batch_size increase to 16384
Cumulative time: 17.094753742218018

BaB round 14
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 969] [/input-8, 93] [/input, 2430] [/input-8, 1466] [/input, 455] [/input-8, 1329] [/input-8, 93] [/input-8, 1017] [/input-8, 1009] [/input-8, 1467] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9278612732887268, worst -0.06840252876281738
10 lb beta sum: 0.9278612732887268, worst -0.06837630271911621
Time: prepare 1.7558    bound 2.4741    transfer 0.2371    finalize 0.5156    func 5.1947    
Accumulated time: func 15.4271    prepare 4.6743    bound 8.4408    transfer 0.5333    finalize 1.0213    
all_split False
======================Cut inference begins======================
max lb tensor(0.01787221) min lb tensor(-0.06837010)
Number of Verified Splits: 7092 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 15.
#cuts 1-3: 4
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.0007340908050537109 
BICCOS Cumulative time: 0.10321211814880371
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06837 (21), -0.06793 (21), -0.06742 (21), -0.06698 (21), -0.06664 (21), -0.06637 (20), -0.06619 (21), -0.06571 (21), -0.06569 (21), -0.06527 (21), -0.06524 (21), -0.06499 (21), -0.06498 (21), -0.06487 (21), -0.06454 (21), -0.06436 (20), -0.06432 (21), -0.06404 (21), -0.06392 (21), -0.06391 (20), 
Length of domains: 27214
Time: pickout 0.2731    decision 1.6689    set_bounds 1.7391    solve 5.2008    add 0.1083    
Accumulated time: pickout 0.7307    decision 4.2006    set_bounds 4.5810    solve 15.2539    add 0.8858    
Current (lb-rhs): -0.06837010383605957
70708 domains visited
current_vram/total_varm: 42.2GB/99.9GB, batch_size increase to 32768
Cumulative time: 26.169420957565308

BaB round 15
batch: 27214
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1017] [/input-8, 1017] [/input, 455] [/input-8, 1017] [/input-8, 969] [/input, 2430] [/input-8, 598] [/input-8, 1017] [/input, 455] [/input, 2430] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9362890124320984, worst -0.06663346290588379
10 lb beta sum: 0.9362890124320984, worst -0.06664180755615234
Time: prepare 2.9693    bound 4.1055    transfer 0.4679    finalize 0.3772    func 8.7333    
Accumulated time: func 24.1604    prepare 7.6440    bound 12.5463    transfer 1.0012    finalize 1.3985    
all_split False
======================Cut inference begins======================
max lb tensor(0.01811016) min lb tensor(-0.06663144)
Number of Verified Splits: 12470 of 54428
Stop inferencing: Max iteration reached.
Total number of valid cuts: 15.
#cuts 1-3: 4
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.0010533332824707031 
BICCOS Cumulative time: 0.10426545143127441
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06663 (22), -0.06619 (22), -0.06612 (22), -0.06567 (22), -0.06490 (22), -0.06476 (21), -0.06445 (22), -0.06439 (22), -0.06396 (22), -0.06394 (22), -0.06391 (22), -0.06369 (22), -0.06352 (22), -0.06347 (22), -0.06324 (22), -0.06324 (22), -0.06313 (22), -0.06300 (22), -0.06275 (21), -0.06273 (22), 
Length of domains: 41958
Time: pickout 0.5751    decision 2.7492    set_bounds 3.2125    solve 8.7436    add 0.1357    
Accumulated time: pickout 1.3057    decision 6.9497    set_bounds 7.7935    solve 23.9974    add 1.0214    
Current (lb-rhs): -0.06663143634796143
112666 domains visited
Cumulative time: 41.743160009384155

BaB round 16
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 598] [/input-8, 1009] [/input-8, 969] [/input-8, 1329] [/input, 2430] [/input-8, 1017] [/input-8, 1017] [/input-8, 1009] [/input-8, 969] [/input-8, 1017] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9405108094215393, worst -0.06565618515014648
10 lb beta sum: 0.9405108094215393, worst -0.06564855575561523
Time: prepare 3.5933    bound 10.0861    transfer 0.5916    finalize 1.0499    func 15.7486    
Accumulated time: func 39.9089    prepare 11.2378    bound 22.6324    transfer 1.5928    finalize 2.4484    
all_split False
======================Cut inference begins======================
max lb tensor(0.02012932) min lb tensor(-0.06563330)
Number of Verified Splits: 14954 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 15.
#cuts 1-3: 4
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.026023387908935547 
BICCOS Cumulative time: 0.13028883934020996
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06563 (23), -0.06453 (23), -0.06443 (23), -0.06399 (23), -0.06345 (22), -0.06323 (23), -0.06290 (23), -0.06280 (23), -0.06269 (23), -0.06229 (23), -0.06225 (23), -0.06201 (23), -0.06186 (23), -0.06182 (23), -0.06157 (23), -0.06157 (23), -0.06150 (22), -0.06146 (23), -0.06144 (22), -0.06131 (23), 
Length of domains: 59772
Time: pickout 0.5736    decision 3.3729    set_bounds 3.7032    solve 15.7609    add 0.2109    
Accumulated time: pickout 1.8794    decision 10.3226    set_bounds 11.4967    solve 39.7584    add 1.2323    
Current (lb-rhs): -0.06563329696655273
163248 domains visited
Cumulative time: 65.73918628692627

BaB round 17
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1017] [/input-8, 1058] [/input-8, 1329] [/input-8, 479] [/input-8, 1017] [/input-8, 1058] [/input-8, 1329] [/input, 2748] [/input-8, 1017] [/input-8, 1329] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9445206522941589, worst -0.06179952621459961
10 lb beta sum: 0.9445206522941589, worst -0.06176495552062988
Time: prepare 3.8014    bound 10.0835    transfer 0.5982    finalize 0.5731    func 15.4979    
Accumulated time: func 55.4069    prepare 15.0398    bound 32.7159    transfer 2.1910    finalize 3.0215    
all_split False
======================Cut inference begins======================
max lb tensor(0.02009904) min lb tensor(-0.06175125)
Number of Verified Splits: 15638 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 15.
#cuts 1-3: 4
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.00112152099609375 
BICCOS Cumulative time: 0.1314103603363037
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06563 (23), -0.06453 (23), -0.06443 (23), -0.06399 (23), -0.06323 (23), -0.06280 (23), -0.06269 (23), -0.06229 (23), -0.06225 (23), -0.06201 (23), -0.06186 (23), -0.06182 (23), -0.06175 (23), -0.06157 (23), -0.06157 (23), -0.06146 (23), -0.06131 (23), -0.06126 (24), -0.06103 (23), -0.06092 (23), 
Length of domains: 76902
Time: pickout 0.7546    decision 5.2280    set_bounds 4.8236    solve 16.7917    add 0.2455    
Accumulated time: pickout 2.6339    decision 15.5506    set_bounds 16.3203    solve 56.5501    add 1.4778    
Current (lb-rhs): -0.06563329696655273
213146 domains visited
Cumulative time: 93.87244129180908

BaB round 18
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1329] [/input-8, 1058] [/input, 455] [/input-8, 924] [/input-8, 486] [/input-8, 162] [/input-8, 924] [/input-8, 486] [/input-8, 479] [/input-8, 1329] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9439684152603149, worst -0.06399703025817871
10 lb beta sum: 0.9439684152603149, worst -0.06397950649261475
Time: prepare 3.6292    bound 10.0883    transfer 0.6036    finalize 1.4022    func 16.1588    
Accumulated time: func 71.5657    prepare 18.6697    bound 42.8043    transfer 2.7946    finalize 4.4237    
all_split False
======================Cut inference begins======================
max lb tensor(0.02042305) min lb tensor(-0.06396699)
Number of Verified Splits: 17671 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 15.
#cuts 1-3: 4
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.0011563301086425781 
BICCOS Cumulative time: 0.1325666904449463
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06397 (24), -0.06350 (24), -0.06344 (24), -0.06297 (24), -0.06224 (24), -0.06176 (24), -0.06175 (23), -0.06170 (24), -0.06130 (24), -0.06126 (24), -0.06124 (24), -0.06101 (24), -0.06083 (24), -0.06079 (24), -0.06060 (24), -0.06054 (24), -0.06045 (24), -0.06030 (24), -0.06006 (24), -0.05991 (24), 
Length of domains: 91999
Time: pickout 0.7004    decision 3.4085    set_bounds 4.1949    solve 16.1727    add 0.1773    
Accumulated time: pickout 3.3343    decision 18.9591    set_bounds 20.5153    solve 72.7228    add 1.6551    
Current (lb-rhs): -0.06396698951721191
261011 domains visited
Cumulative time: 118.76461219787598

BaB round 19
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 455] [/input, 497] [/input, 2446] [/input-8, 598] [/input, 455] [/input, 497] [/input-8, 1009] [/input, 2446] [/input, 1642] [/input-8, 1467] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9476405382156372, worst -0.05948781967163086
10 lb beta sum: 0.9476405382156372, worst -0.059572815895080566
Time: prepare 3.6066    bound 10.0845    transfer 0.6060    finalize 0.5340    func 15.2683    
Accumulated time: func 86.8340    prepare 22.2767    bound 52.8888    transfer 3.4006    finalize 4.9578    
all_split False
======================Cut inference begins======================
max lb tensor(0.01974696) min lb tensor(-0.05946851)
Number of Verified Splits: 16041 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 15.
#cuts 1-3: 4
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.0013573169708251953 
BICCOS Cumulative time: 0.13392400741577148
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06397 (24), -0.06350 (24), -0.06344 (24), -0.06297 (24), -0.06224 (24), -0.06176 (24), -0.06175 (23), -0.06170 (24), -0.06130 (24), -0.06124 (24), -0.06101 (24), -0.06083 (24), -0.06079 (24), -0.06060 (24), -0.06054 (24), -0.06045 (24), -0.06030 (24), -0.06006 (24), -0.05991 (24), -0.05971 (23), 
Length of domains: 108726
Time: pickout 0.6090    decision 3.8247    set_bounds 4.3145    solve 15.2861    add 0.1848    
Accumulated time: pickout 3.9432    decision 22.7838    set_bounds 24.8297    solve 88.0089    add 1.8399    
Current (lb-rhs): -0.06396698951721191
310506 domains visited
Cumulative time: 143.24304604530334

BaB round 20
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1058] [/input-8, 1329] [/input, 2748] [/input-8, 969] [/input-8, 1396] [/input-8, 1466] [/input-8, 1467] [/input-8, 1329] [/input-8, 1466] [/input-8, 1009] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9470031261444092, worst -0.0617368221282959
10 lb beta sum: 0.9470031261444092, worst -0.0617368221282959
Time: prepare 3.6405    bound 10.0873    transfer 0.6064    finalize 0.5739    func 15.3636    
Accumulated time: func 102.1976    prepare 25.9177    bound 62.9761    transfer 4.0070    finalize 5.5317    
all_split False
======================Cut inference begins======================
max lb tensor(0.02408105) min lb tensor(-0.06172323)
Number of Verified Splits: 16411 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 15.
#cuts 1-3: 4
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.0438084602355957 
BICCOS Cumulative time: 0.1777324676513672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06397 (24), -0.06224 (24), -0.06176 (24), -0.06172 (25), -0.06166 (25), -0.06119 (25), -0.06077 (24), -0.06024 (25), -0.06018 (25), -0.05993 (25), -0.05971 (25), -0.05949 (25), -0.05947 (25), -0.05946 (25), -0.05922 (25), -0.05903 (25), -0.05900 (25), -0.05886 (24), -0.05879 (25), -0.05875 (25), 
Length of domains: 125083
Time: pickout 0.6165    decision 4.3047    set_bounds 4.3663    solve 16.5415    add 0.2029    
Accumulated time: pickout 4.5598    decision 27.0884    set_bounds 29.1960    solve 104.5503    add 2.0428    
Current (lb-rhs): -0.06396698951721191
359631 domains visited
Cumulative time: 169.55462408065796

BaB round 21
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1466] [/input, 497] [/input-8, 1467] [/input, 455] [/input-8, 598] [/input, 497] [/input, 455] [/input-8, 598] [/input, 497] [/input, 2446] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9466553926467896, worst -0.062207698822021484
10 lb beta sum: 0.9466553926467896, worst -0.06219923496246338
Time: prepare 3.6435    bound 10.0853    transfer 0.6000    finalize 0.5479    func 15.3202    
Accumulated time: func 117.5178    prepare 29.5618    bound 73.0614    transfer 4.6070    finalize 6.0796    
all_split False
======================Cut inference begins======================
max lb tensor(0.01961255) min lb tensor(-0.06218803)
Number of Verified Splits: 18396 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 15.
#cuts 1-3: 4
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.0012671947479248047 
BICCOS Cumulative time: 0.178999662399292
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06219 (25), -0.06172 (25), -0.06166 (25), -0.06119 (25), -0.06077 (24), -0.06071 (25), -0.06044 (25), -0.06024 (25), -0.06018 (25), -0.05999 (25), -0.05993 (25), -0.05971 (25), -0.05949 (25), -0.05947 (25), -0.05946 (25), -0.05922 (25), -0.05903 (25), -0.05900 (25), -0.05899 (25), -0.05886 (24), 
Length of domains: 139455
Time: pickout 0.6341    decision 3.3838    set_bounds 4.6271    solve 15.3376    add 0.1910    
Accumulated time: pickout 5.1938    decision 30.4722    set_bounds 33.8231    solve 119.8880    add 2.2338    
Current (lb-rhs): -0.062188029289245605
406771 domains visited
Cumulative time: 194.0250768661499

BaB round 22
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 93] [/input-8, 1018] [/input-8, 1018] [/input-8, 93] [/input-8, 924] [/input-8, 93] [/input-8, 1466] [/input-8, 1018] [/input-8, 2039] [/input-8, 969] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9483502507209778, worst -0.05770707130432129
10 lb beta sum: 0.9483502507209778, worst -0.057874441146850586
Time: prepare 3.6519    bound 10.0832    transfer 0.6016    finalize 0.5644    func 15.3404    
Accumulated time: func 132.8581    prepare 33.2142    bound 83.1446    transfer 5.2086    finalize 6.6440    
all_split False
======================Cut inference begins======================
max lb tensor(0.02361345) min lb tensor(-0.05766547)
Number of Verified Splits: 16748 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 15.
#cuts 1-3: 4
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.0012774467468261719 
BICCOS Cumulative time: 0.18027710914611816
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06219 (25), -0.06172 (25), -0.06166 (25), -0.06119 (25), -0.06077 (24), -0.06071 (25), -0.06044 (25), -0.06024 (25), -0.06018 (25), -0.05999 (25), -0.05993 (25), -0.05971 (25), -0.05949 (25), -0.05946 (25), -0.05922 (25), -0.05903 (25), -0.05900 (25), -0.05899 (25), -0.05879 (25), -0.05875 (25), 
Length of domains: 155475
Time: pickout 0.6333    decision 4.6105    set_bounds 4.6475    solve 15.3580    add 0.1951    
Accumulated time: pickout 5.8272    decision 35.0827    set_bounds 38.4706    solve 135.2460    add 2.4289    
Current (lb-rhs): -0.062188029289245605
455559 domains visited
Time out!!!!!!!!
Result: unknown in 222.4801 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 117, vnnlib ID: 117 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -5.05410433,  -7.98528099,  -7.76803017,  -8.62869644,  -7.58290386,
          -9.83789062,  -8.41322899, -10.12581921,  -1.82107425,  -8.20621872]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [462]; unstable size 462; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 196, 1, 462] with unstable size 195 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 462] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 462] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [195]; unstable size 195; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 195] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 195] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.12438488, 5.28402185, 4.66859245, 5.64474773, 4.65305614, 6.76825333,
         5.48563194, 7.03934669, 5.25850201]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0690 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 118, vnnlib ID: 118 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.12188244,  -7.11672592, -10.05889606, -10.35688305, -11.79731369,
          -9.88283920, -13.23313427,  -9.69955254,  -9.69626141,  -8.79122162]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [485]; unstable size 485; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 133, 1, 485] with unstable size 132 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 485] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 485] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [132]; unstable size 132; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 132] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 132] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.78854394, 1.30756712, 1.88601017, 3.26214218, 1.25751090, 4.64157391,
         1.15222812, 1.10766888, 0.93016058]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0705 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 119, vnnlib ID: 119 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.32807446, -12.10395241,  -6.98160744,  -7.09187889,  -7.17572021,
          -7.24349356,  -7.85012865,  -8.02880383, -10.09511280, -10.98221016]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [818]; unstable size 818; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 292, 1, 818] with unstable size 291 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 818] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 818] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [291]; unstable size 291; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 291] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 291] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.75854391,  3.26663327, -1.20437741, -1.10650253, -0.29332361,
         -0.34117436, -0.69933540,  1.05337393,  1.86989903]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.32807446, -12.10395241,  -6.98160744,  -7.09187889,  -7.17572021,
          -7.24349356,  -7.85012865,  -8.02880383, -10.09511280, -10.98221016]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.32807541, -12.10395432,  -6.98160744,  -7.09188032,  -7.17572117,
           -7.24349451,  -7.85012913,  -8.02880478, -10.09511280, -10.98221016],
         [ -9.32807541, -12.10395432,  -6.98160744,  -7.09188032,  -7.17572117,
           -7.24349451,  -7.85012913,  -8.02880478, -10.09511280, -10.98221016]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.11027288,  0.08384085,  0.15161419,  0.75824881,  0.93692446]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.11587298, -1.08412695, -0.89365077,  ..., -1.14761901,
            -1.21111107, -1.29047608],
           [-1.05238092, -1.00476182, -0.84603173,  ..., -0.51269841,
            -0.56031746, -0.63968253],
           [-0.41746020, -0.33809513, -0.29047608,  ...,  0.01111121,
            -0.06825387, -0.19523799],
           ...,
           [-0.48095238, -0.49682540, -0.49682540,  ..., -0.68730158,
            -0.71904761, -0.78253967],
           [-0.46507925, -0.48095238, -0.46507925,  ..., -0.60793650,
            -0.63968253, -0.71904761],
           [-0.38571417, -0.36984116, -0.35396814,  ..., -0.46507925,
            -0.49682540, -0.56031746]],

          [[-0.90177131, -0.93397743, -0.72463763,  ..., -1.17552328,
            -1.25603855, -1.36875999],
           [-0.88566822, -0.88566822, -0.67632848,  ..., -0.57971013,
            -0.64412236, -0.75684375],
           [-0.37037024, -0.28985494, -0.17713353,  ..., -0.09661824,
            -0.19323659, -0.35426718],
           ...,
           [-0.59581316, -0.61191624, -0.61191624,  ..., -0.98228657,
            -0.98228657, -0.98228657],
           [-0.59581316, -0.61191624, -0.59581316,  ..., -0.99838966,
            -0.95008045, -1.03059578],
           [-0.59581316, -0.57971013, -0.54750401,  ..., -0.70853460,
            -0.67632848, -0.75684375]],

          [[-0.49325335, -0.52323836, -0.28335828,  ..., -0.86806595,
            -0.95802099, -1.07796109],
           [-0.53823084, -0.52323836, -0.28335828,  ..., -0.34332830,
            -0.43328333, -0.55322337],
           [-0.14842562, -0.05847061,  0.10644694,  ...,  0.04647692,
            -0.05847061, -0.20839565],
           ...,
           [-0.55322337, -0.56821585, -0.56821585,  ..., -0.92803597,
            -0.91304344, -0.91304344],
           [-0.55322337, -0.56821585, -0.55322337,  ..., -0.86806595,
            -0.85307342, -0.92803597],
           [-0.53823084, -0.50824583, -0.49325335,  ..., -0.58320838,
            -0.58320838, -0.67316341]]],


         [[[-1.11587298, -1.08412695, -0.89365077,  ..., -1.14761901,
            -1.21111107, -1.29047608],
           [-1.05238092, -1.00476182, -0.84603173,  ..., -0.51269841,
            -0.56031746, -0.63968253],
           [-0.41746020, -0.33809513, -0.29047608,  ...,  0.01111121,
            -0.06825387, -0.19523799],
           ...,
           [-0.48095238, -0.49682540, -0.49682540,  ..., -0.68730158,
            -0.71904761, -0.78253967],
           [-0.46507925, -0.48095238, -0.46507925,  ..., -0.60793650,
            -0.63968253, -0.71904761],
           [-0.38571417, -0.36984116, -0.35396814,  ..., -0.46507925,
            -0.49682540, -0.56031746]],

          [[-0.90177131, -0.93397743, -0.72463763,  ..., -1.17552328,
            -1.25603855, -1.36875999],
           [-0.88566822, -0.88566822, -0.67632848,  ..., -0.57971013,
            -0.64412236, -0.75684375],
           [-0.37037024, -0.28985494, -0.17713353,  ..., -0.09661824,
            -0.19323659, -0.35426718],
           ...,
           [-0.59581316, -0.61191624, -0.61191624,  ..., -0.98228657,
            -0.98228657, -0.98228657],
           [-0.59581316, -0.61191624, -0.59581316,  ..., -0.99838966,
            -0.95008045, -1.03059578],
           [-0.59581316, -0.57971013, -0.54750401,  ..., -0.70853460,
            -0.67632848, -0.75684375]],

          [[-0.49325335, -0.52323836, -0.28335828,  ..., -0.86806595,
            -0.95802099, -1.07796109],
           [-0.53823084, -0.52323836, -0.28335828,  ..., -0.34332830,
            -0.43328333, -0.55322337],
           [-0.14842562, -0.05847061,  0.10644694,  ...,  0.04647692,
            -0.05847061, -0.20839565],
           ...,
           [-0.55322337, -0.56821585, -0.56821585,  ..., -0.92803597,
            -0.91304344, -0.91304344],
           [-0.55322337, -0.56821585, -0.55322337,  ..., -0.86806595,
            -0.85307342, -0.92803597],
           [-0.53823084, -0.50824583, -0.49325335,  ..., -0.58320838,
            -0.58320838, -0.67316341]]],


         [[[-1.11587298, -1.08412695, -0.89365077,  ..., -1.14761901,
            -1.21111107, -1.29047608],
           [-1.05238092, -1.00476182, -0.84603173,  ..., -0.51269841,
            -0.56031746, -0.63968253],
           [-0.41746020, -0.33809513, -0.29047608,  ...,  0.01111121,
            -0.06825387, -0.19523799],
           ...,
           [-0.48095238, -0.49682540, -0.49682540,  ..., -0.68730158,
            -0.71904761, -0.78253967],
           [-0.46507925, -0.48095238, -0.46507925,  ..., -0.60793650,
            -0.63968253, -0.71904761],
           [-0.38571417, -0.36984116, -0.35396814,  ..., -0.46507925,
            -0.49682540, -0.56031746]],

          [[-0.90177131, -0.93397743, -0.72463763,  ..., -1.17552328,
            -1.25603855, -1.36875999],
           [-0.88566822, -0.88566822, -0.67632848,  ..., -0.57971013,
            -0.64412236, -0.75684375],
           [-0.37037024, -0.28985494, -0.17713353,  ..., -0.09661824,
            -0.19323659, -0.35426718],
           ...,
           [-0.59581316, -0.61191624, -0.61191624,  ..., -0.98228657,
            -0.98228657, -0.98228657],
           [-0.59581316, -0.61191624, -0.59581316,  ..., -0.99838966,
            -0.95008045, -1.03059578],
           [-0.59581316, -0.57971013, -0.54750401,  ..., -0.70853460,
            -0.67632848, -0.75684375]],

          [[-0.49325335, -0.52323836, -0.28335828,  ..., -0.86806595,
            -0.95802099, -1.07796109],
           [-0.53823084, -0.52323836, -0.28335828,  ..., -0.34332830,
            -0.43328333, -0.55322337],
           [-0.14842562, -0.05847061,  0.10644694,  ...,  0.04647692,
            -0.05847061, -0.20839565],
           ...,
           [-0.55322337, -0.56821585, -0.56821585,  ..., -0.92803597,
            -0.91304344, -0.91304344],
           [-0.55322337, -0.56821585, -0.55322337,  ..., -0.86806595,
            -0.85307342, -0.92803597],
           [-0.53823084, -0.50824583, -0.49325335,  ..., -0.58320838,
            -0.58320838, -0.67316341]]],


         [[[-1.11587298, -1.08412695, -0.89365077,  ..., -1.14761901,
            -1.21111107, -1.29047608],
           [-1.05238092, -1.00476182, -0.84603173,  ..., -0.51269841,
            -0.56031746, -0.63968253],
           [-0.41746020, -0.33809513, -0.29047608,  ...,  0.01111121,
            -0.06825387, -0.19523799],
           ...,
           [-0.48095238, -0.49682540, -0.49682540,  ..., -0.68730158,
            -0.71904761, -0.78253967],
           [-0.46507925, -0.48095238, -0.46507925,  ..., -0.60793650,
            -0.63968253, -0.71904761],
           [-0.38571417, -0.36984116, -0.35396814,  ..., -0.46507925,
            -0.49682540, -0.56031746]],

          [[-0.90177131, -0.93397743, -0.72463763,  ..., -1.17552328,
            -1.25603855, -1.36875999],
           [-0.88566822, -0.88566822, -0.67632848,  ..., -0.57971013,
            -0.64412236, -0.75684375],
           [-0.37037024, -0.28985494, -0.17713353,  ..., -0.09661824,
            -0.19323659, -0.35426718],
           ...,
           [-0.59581316, -0.61191624, -0.61191624,  ..., -0.98228657,
            -0.98228657, -0.98228657],
           [-0.59581316, -0.61191624, -0.59581316,  ..., -0.99838966,
            -0.95008045, -1.03059578],
           [-0.59581316, -0.57971013, -0.54750401,  ..., -0.70853460,
            -0.67632848, -0.75684375]],

          [[-0.49325335, -0.52323836, -0.28335828,  ..., -0.86806595,
            -0.95802099, -1.07796109],
           [-0.53823084, -0.52323836, -0.28335828,  ..., -0.34332830,
            -0.43328333, -0.55322337],
           [-0.14842562, -0.05847061,  0.10644694,  ...,  0.04647692,
            -0.05847061, -0.20839565],
           ...,
           [-0.55322337, -0.56821585, -0.56821585,  ..., -0.92803597,
            -0.91304344, -0.91304344],
           [-0.55322337, -0.56821585, -0.55322337,  ..., -0.86806595,
            -0.85307342, -0.92803597],
           [-0.53823084, -0.50824583, -0.49325335,  ..., -0.58320838,
            -0.58320838, -0.67316341]]],


         [[[-1.11587298, -1.08412695, -0.89365077,  ..., -1.14761901,
            -1.21111107, -1.29047608],
           [-1.05238092, -1.00476182, -0.84603173,  ..., -0.51269841,
            -0.56031746, -0.63968253],
           [-0.41746020, -0.33809513, -0.29047608,  ...,  0.01111121,
            -0.06825387, -0.19523799],
           ...,
           [-0.48095238, -0.49682540, -0.49682540,  ..., -0.68730158,
            -0.71904761, -0.78253967],
           [-0.46507925, -0.48095238, -0.46507925,  ..., -0.60793650,
            -0.63968253, -0.71904761],
           [-0.38571417, -0.36984116, -0.35396814,  ..., -0.46507925,
            -0.49682540, -0.56031746]],

          [[-0.90177131, -0.93397743, -0.72463763,  ..., -1.17552328,
            -1.25603855, -1.36875999],
           [-0.88566822, -0.88566822, -0.67632848,  ..., -0.57971013,
            -0.64412236, -0.75684375],
           [-0.37037024, -0.28985494, -0.17713353,  ..., -0.09661824,
            -0.19323659, -0.35426718],
           ...,
           [-0.59581316, -0.61191624, -0.61191624,  ..., -0.98228657,
            -0.98228657, -0.98228657],
           [-0.59581316, -0.61191624, -0.59581316,  ..., -0.99838966,
            -0.95008045, -1.03059578],
           [-0.59581316, -0.57971013, -0.54750401,  ..., -0.70853460,
            -0.67632848, -0.75684375]],

          [[-0.49325335, -0.52323836, -0.28335828,  ..., -0.86806595,
            -0.95802099, -1.07796109],
           [-0.53823084, -0.52323836, -0.28335828,  ..., -0.34332830,
            -0.43328333, -0.55322337],
           [-0.14842562, -0.05847061,  0.10644694,  ...,  0.04647692,
            -0.05847061, -0.20839565],
           ...,
           [-0.55322337, -0.56821585, -0.56821585,  ..., -0.92803597,
            -0.91304344, -0.91304344],
           [-0.55322337, -0.56821585, -0.55322337,  ..., -0.86806595,
            -0.85307342, -0.92803597],
           [-0.53823084, -0.50824583, -0.49325335,  ..., -0.58320838,
            -0.58320838, -0.67316341]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0917 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 120, vnnlib ID: 120 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -3.83905172, -12.57908535,  -3.68583417,  -3.78964639,  -5.75812435,
          -4.08564281,  -7.30590010,  -4.61561012, -11.22108173, -10.78313065]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [686]; unstable size 686; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 99, 1, 686] with unstable size 98 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 6, 1, 686] with unstable size 5 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 686] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [98]; unstable size 98; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 6, 1, 98] with unstable size 5 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 98] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [5]; unstable size 5; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 7.90750694, -0.64292026, -0.82822919,  1.19824719, -0.54596645,
          2.64874268, -0.17078578,  6.71303511,  6.26933956]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -3.83905172, -12.57908535,  -3.68583417,  -3.78964639,  -5.75812435,
          -4.08564281,  -7.30590010,  -4.61561012, -11.22108173, -10.78313065]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -3.83905125, -12.57908630,  -3.68583441,  -3.78964591,  -5.75812483,
           -4.08564281,  -7.30589867,  -4.61561012, -11.22108078, -10.78313160],
         [ -3.83905125, -12.57908630,  -3.68583441,  -3.78964591,  -5.75812483,
           -4.08564281,  -7.30589867,  -4.61561012, -11.22108078, -10.78313160]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.15321684, -0.04940534,  0.24659157,  0.77655888]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[1.51904786, 1.48730183, 1.48730183,  ..., 1.53492093,
            1.55079389, 1.56666696],
           [1.55079389, 1.53492093, 1.51904786,  ..., 1.58253992,
            1.61428595, 1.63015902],
           [1.58253992, 1.56666696, 1.56666696,  ..., 1.67777801,
            1.70952404, 1.72539711],
           ...,
           [1.51904786, 1.45555580, 1.45555580,  ..., 1.67777801,
            1.66190505, 1.66190505],
           [1.48730183, 1.42380977, 1.42380977,  ..., 1.69365108,
            1.66190505, 1.66190505],
           [1.50317490, 1.43968284, 1.43968284,  ..., 1.72539711,
            1.69365108, 1.67777801]],

          [[1.51368785, 1.48148179, 1.48148179,  ..., 1.51368785,
            1.51368785, 1.54589403],
           [1.54589403, 1.51368785, 1.51368785,  ..., 1.57810009,
            1.61030626, 1.62640929],
           [1.57810009, 1.56199706, 1.57810009,  ..., 1.72302771,
            1.73913074, 1.75523376],
           ...,
           [1.44927561, 1.38486338, 1.38486338,  ..., 1.72302771,
            1.72302771, 1.72302771],
           [1.41706955, 1.35265732, 1.36876035,  ..., 1.72302771,
            1.72302771, 1.72302771],
           [1.43317258, 1.36876035, 1.38486338,  ..., 1.75523376,
            1.73913074, 1.73913074]],

          [[1.36581755, 1.33583248, 1.33583248,  ..., 1.36581755,
            1.36581755, 1.39580250],
           [1.39580250, 1.38081002, 1.36581755,  ..., 1.42578757,
            1.45577252, 1.47076499],
           [1.41079497, 1.41079497, 1.41079497,  ..., 1.54572761,
            1.56072009, 1.57571256],
           ...,
           [1.29085493, 1.23088503, 1.23088503,  ..., 1.54572761,
            1.56072009, 1.56072009],
           [1.26086998, 1.20089996, 1.20089996,  ..., 1.56072009,
            1.56072009, 1.56072009],
           [1.27586246, 1.21589243, 1.21589243,  ..., 1.57571256,
            1.57571256, 1.57571256]]],


         [[[1.51904786, 1.48730183, 1.48730183,  ..., 1.53492093,
            1.55079389, 1.56666696],
           [1.55079389, 1.53492093, 1.51904786,  ..., 1.58253992,
            1.61428595, 1.63015902],
           [1.58253992, 1.56666696, 1.56666696,  ..., 1.67777801,
            1.70952404, 1.72539711],
           ...,
           [1.51904786, 1.45555580, 1.45555580,  ..., 1.67777801,
            1.66190505, 1.66190505],
           [1.48730183, 1.42380977, 1.42380977,  ..., 1.69365108,
            1.66190505, 1.66190505],
           [1.50317490, 1.43968284, 1.43968284,  ..., 1.72539711,
            1.69365108, 1.67777801]],

          [[1.51368785, 1.48148179, 1.48148179,  ..., 1.51368785,
            1.51368785, 1.54589403],
           [1.54589403, 1.51368785, 1.51368785,  ..., 1.57810009,
            1.61030626, 1.62640929],
           [1.57810009, 1.56199706, 1.57810009,  ..., 1.72302771,
            1.73913074, 1.75523376],
           ...,
           [1.44927561, 1.38486338, 1.38486338,  ..., 1.72302771,
            1.72302771, 1.72302771],
           [1.41706955, 1.35265732, 1.36876035,  ..., 1.72302771,
            1.72302771, 1.72302771],
           [1.43317258, 1.36876035, 1.38486338,  ..., 1.75523376,
            1.73913074, 1.73913074]],

          [[1.36581755, 1.33583248, 1.33583248,  ..., 1.36581755,
            1.36581755, 1.39580250],
           [1.39580250, 1.38081002, 1.36581755,  ..., 1.42578757,
            1.45577252, 1.47076499],
           [1.41079497, 1.41079497, 1.41079497,  ..., 1.54572761,
            1.56072009, 1.57571256],
           ...,
           [1.29085493, 1.23088503, 1.23088503,  ..., 1.54572761,
            1.56072009, 1.56072009],
           [1.26086998, 1.20089996, 1.20089996,  ..., 1.56072009,
            1.56072009, 1.56072009],
           [1.27586246, 1.21589243, 1.21589243,  ..., 1.57571256,
            1.57571256, 1.57571256]]],


         [[[1.51904786, 1.48730183, 1.48730183,  ..., 1.53492093,
            1.55079389, 1.56666696],
           [1.55079389, 1.53492093, 1.51904786,  ..., 1.58253992,
            1.61428595, 1.63015902],
           [1.58253992, 1.56666696, 1.56666696,  ..., 1.67777801,
            1.70952404, 1.72539711],
           ...,
           [1.51904786, 1.45555580, 1.45555580,  ..., 1.67777801,
            1.66190505, 1.66190505],
           [1.48730183, 1.42380977, 1.42380977,  ..., 1.69365108,
            1.66190505, 1.66190505],
           [1.50317490, 1.43968284, 1.43968284,  ..., 1.72539711,
            1.69365108, 1.67777801]],

          [[1.51368785, 1.48148179, 1.48148179,  ..., 1.51368785,
            1.51368785, 1.54589403],
           [1.54589403, 1.51368785, 1.51368785,  ..., 1.57810009,
            1.61030626, 1.62640929],
           [1.57810009, 1.56199706, 1.57810009,  ..., 1.72302771,
            1.73913074, 1.75523376],
           ...,
           [1.44927561, 1.38486338, 1.38486338,  ..., 1.72302771,
            1.72302771, 1.72302771],
           [1.41706955, 1.35265732, 1.36876035,  ..., 1.72302771,
            1.72302771, 1.72302771],
           [1.43317258, 1.36876035, 1.38486338,  ..., 1.75523376,
            1.73913074, 1.73913074]],

          [[1.36581755, 1.33583248, 1.33583248,  ..., 1.36581755,
            1.36581755, 1.39580250],
           [1.39580250, 1.38081002, 1.36581755,  ..., 1.42578757,
            1.45577252, 1.47076499],
           [1.41079497, 1.41079497, 1.41079497,  ..., 1.54572761,
            1.56072009, 1.57571256],
           ...,
           [1.29085493, 1.23088503, 1.23088503,  ..., 1.54572761,
            1.56072009, 1.56072009],
           [1.26086998, 1.20089996, 1.20089996,  ..., 1.56072009,
            1.56072009, 1.56072009],
           [1.27586246, 1.21589243, 1.21589243,  ..., 1.57571256,
            1.57571256, 1.57571256]]],


         [[[1.51904786, 1.48730183, 1.48730183,  ..., 1.53492093,
            1.55079389, 1.56666696],
           [1.55079389, 1.53492093, 1.51904786,  ..., 1.58253992,
            1.61428595, 1.63015902],
           [1.58253992, 1.56666696, 1.56666696,  ..., 1.67777801,
            1.70952404, 1.72539711],
           ...,
           [1.51904786, 1.45555580, 1.45555580,  ..., 1.67777801,
            1.66190505, 1.66190505],
           [1.48730183, 1.42380977, 1.42380977,  ..., 1.69365108,
            1.66190505, 1.66190505],
           [1.50317490, 1.43968284, 1.43968284,  ..., 1.72539711,
            1.69365108, 1.67777801]],

          [[1.51368785, 1.48148179, 1.48148179,  ..., 1.51368785,
            1.51368785, 1.54589403],
           [1.54589403, 1.51368785, 1.51368785,  ..., 1.57810009,
            1.61030626, 1.62640929],
           [1.57810009, 1.56199706, 1.57810009,  ..., 1.72302771,
            1.73913074, 1.75523376],
           ...,
           [1.44927561, 1.38486338, 1.38486338,  ..., 1.72302771,
            1.72302771, 1.72302771],
           [1.41706955, 1.35265732, 1.36876035,  ..., 1.72302771,
            1.72302771, 1.72302771],
           [1.43317258, 1.36876035, 1.38486338,  ..., 1.75523376,
            1.73913074, 1.73913074]],

          [[1.36581755, 1.33583248, 1.33583248,  ..., 1.36581755,
            1.36581755, 1.39580250],
           [1.39580250, 1.38081002, 1.36581755,  ..., 1.42578757,
            1.45577252, 1.47076499],
           [1.41079497, 1.41079497, 1.41079497,  ..., 1.54572761,
            1.56072009, 1.57571256],
           ...,
           [1.29085493, 1.23088503, 1.23088503,  ..., 1.54572761,
            1.56072009, 1.56072009],
           [1.26086998, 1.20089996, 1.20089996,  ..., 1.56072009,
            1.56072009, 1.56072009],
           [1.27586246, 1.21589243, 1.21589243,  ..., 1.57571256,
            1.57571256, 1.57571256]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0792 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 121, vnnlib ID: 121 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.86313248,  -8.44097900, -13.20821190, -13.39188290, -12.26532078,
         -13.55902863, -14.16451168, -12.10001564, -14.36103153, -11.35003471]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [533]; unstable size 533; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 226, 1, 533] with unstable size 225 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 533] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 533] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [225]; unstable size 225; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 225] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 225] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.58184433, 2.47265148, 2.70894718, 1.52923870, 2.67172718, 3.54394722,
         1.39659882, 3.88951111, 1.85305727]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0430 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 122, vnnlib ID: 122 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.28887367,  -8.90356731, -12.90353107, -13.19761372, -12.63090992,
         -13.74266148, -14.50664043, -13.25693512,  -8.36382961, -11.89731884]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [470]; unstable size 470; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 191, 1, 470] with unstable size 190 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 470] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 470] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [190]; unstable size 190; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 190] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 190] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.83597136,  1.88928509,  2.30730486,  1.75963116,  2.61177921,
          3.72314882,  2.18467283, -1.76713872,  1.99258900]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.28887367,  -8.90356731, -12.90353107, -13.19761372, -12.63090992,
         -13.74266148, -14.50664043, -13.25693512,  -8.36382961, -11.89731884]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.28887367,  -8.90356731, -12.90353107, -13.19761372, -12.63090992,
          -13.74266148, -14.50664043, -13.25693512,  -8.36382961, -11.89731884]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.53973770]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.17936504, -0.97301590, -0.90952379,  ..., -1.27460313,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.83015871,  ..., -1.56031740,
            -1.65555561, -1.41746020],
           [-1.19523799, -1.17936504, -1.03650784,  ..., -1.44920623,
            -1.65555561, -1.52857137],
           ...,
           [ 0.69365084,  0.70952386,  0.72539687,  ..., -1.38571417,
            -1.43333328, -1.44920623],
           [ 0.74126989,  0.75714290,  0.77301592,  ..., -1.35396814,
            -1.41746020, -1.44920623],
           [ 0.77301592,  0.75714290,  0.72539687,  ..., -1.33809519,
            -1.38571417, -1.40158725]],

          [[-1.25603855, -0.91787434, -0.70853460,  ..., -0.91787434,
            -1.11111104, -0.91787434],
           [-1.20772946, -1.03059578, -0.67632848,  ..., -1.25603855,
            -1.38486302, -1.09500802],
           [-1.27214170, -1.23993552, -0.98228657,  ..., -1.17552328,
            -1.38486302, -1.23993552],
           ...,
           [ 0.53140104,  0.54750413,  0.56360716,  ..., -1.27214170,
            -1.32045078, -1.33655393],
           [ 0.57971025,  0.59581327,  0.61191636,  ..., -1.23993552,
            -1.30434775, -1.32045078],
           [ 0.61191636,  0.59581327,  0.57971025,  ..., -1.22383249,
            -1.28824472, -1.28824472]],

          [[-1.28785622, -1.07796109, -1.01799107,  ..., -1.37781119,
            -1.51274371, -1.42278874],
           [-1.22788620, -1.15292358, -0.92803597,  ..., -1.52773619,
            -1.55772126, -1.43778121],
           [-1.27286363, -1.28785622, -1.10794616,  ..., -1.21289361,
            -1.34782624, -1.36281872],
           ...,
           [ 0.54122955,  0.55622208,  0.57121456,  ..., -0.86806595,
            -0.91304344, -0.92803597],
           [ 0.58620709,  0.60119957,  0.60119957,  ..., -0.83808094,
            -0.89805096, -0.92803597],
           [ 0.61619210,  0.60119957,  0.58620709,  ..., -0.82308841,
            -0.88305843, -0.89805096]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0546 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 123, vnnlib ID: 123 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.10229683, -25.38055038, -21.73574066, -24.28678703, -25.19532585,
         -24.57376480, -24.21175194, -26.78511238, -20.36679649, -26.62832260]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [535]; unstable size 535; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 289, 1, 535] with unstable size 288 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 535] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 535] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [288]; unstable size 288; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 288] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 288] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.20215011,  3.29560661, -0.48173237,  2.02198076,  2.71108150,
          2.06479025,  1.99369431,  3.83842254,  4.76781845]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.10229683, -25.38055038, -21.73574066, -24.28678703, -25.19532585,
         -24.57376480, -24.21175194, -26.78511238, -20.36679649, -26.62832260]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.90987015, -24.70122147, -20.82708359, -23.43597221, -24.32200050,
          -23.68591499, -23.38396645, -25.73447037, -20.12191963, -25.80022812],
         [-19.90987015, -24.70122147, -20.82708359, -23.43597221, -24.32200050,
          -23.68591499, -23.38396645, -25.73447037, -20.12191963, -25.80022812]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.21204948,  0.70516396]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0064 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0706 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 124, vnnlib ID: 124 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-7.82584620, -7.63018703, -7.73003864, -7.25304461, -6.31065321,
         -8.23791885, -6.43050718, -6.84701109, -9.17996407, -7.64501524]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [632]; unstable size 632; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 261, 1, 632] with unstable size 260 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 632] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 632] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [260]; unstable size 260; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 260] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 260] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.27221322, -1.34621954, -1.80931950, -2.15861130, -2.98624754,
         -1.27028799, -2.80886602, -2.57974672, -0.39991641]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-7.82584620, -7.63018703, -7.73003864, -7.25304461, -6.31065321,
         -8.23791885, -6.43050718, -6.84701109, -9.17996407, -7.64501524]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.82584524, -7.63018608, -7.73003769, -7.25304365, -6.31065226,
          -8.23791599, -6.43050575, -6.84701014, -9.17996311, -7.64501333],
         [-7.82584524, -7.63018608, -7.73003769, -7.25304365, -6.31065226,
          -8.23791599, -6.43050575, -6.84701014, -9.17996311, -7.64501333]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.18083191, -0.01482725,  0.08502436, -0.39196968, -1.33436108,
           0.59290266, -1.21450758, -0.79800320,  1.53494978]]],
       device='cuda:0')
number of violation:  5
clean attack image tensor([[[[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         ...,


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]]]], device='cuda:0') torch.Size([1, 9, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0835 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 125, vnnlib ID: 125 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.10437679,  -8.96013069,  -8.69070339,  -8.62474823,  -9.76555538,
          -8.77996826, -10.66582012,  -9.75414944,  -7.47076607,  -8.44103909]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [743]; unstable size 743; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 170, 1, 743] with unstable size 169 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 743] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 743] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [169]; unstable size 169; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 169] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 169] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.60137367, -0.36385405, -1.25714493, -1.13711548, -0.05323458,
         -1.18301010,  0.78644753, -0.01430035, -2.42923403]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.10437679,  -8.96013069,  -8.69070339,  -8.62474823,  -9.76555538,
          -8.77996826, -10.66582012,  -9.75414944,  -7.47076607,  -8.44103909]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.10437679,  -8.96013069,  -8.69070339,  -8.62474823,  -9.76555729,
           -8.77996826, -10.66582012,  -9.75414848,  -7.47076511,  -8.44103909],
         [ -8.10437679,  -8.96013069,  -8.69070339,  -8.62474823,  -9.76555729,
           -8.77996826, -10.66582012,  -9.75414848,  -7.47076511,  -8.44103909]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.33666229,  0.51909161,  0.24966431,  0.18370914,  1.32451820,
           0.33892918,  1.31310940, -0.97027397]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         ...,


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]]]], device='cuda:0') torch.Size([1, 8, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0794 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 126, vnnlib ID: 126 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.85289669, -8.00897789, -3.25385118, -4.58932209, -3.74074745,
         -4.14678431, -4.96510458, -4.05580473, -7.93344116, -6.89174938]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [508]; unstable size 508; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 186, 1, 508] with unstable size 185 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 508] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 508] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [185]; unstable size 185; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 185] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 185] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.07057714,  2.60909081, -1.19970715,  0.02767661, -0.45064354,
          0.08406508, -0.38396728,  2.78343773,  1.49663746]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.85289669, -8.00897789, -3.25385118, -4.58932209, -3.74074745,
         -4.14678431, -4.96510458, -4.05580473, -7.93344116, -6.89174938]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.85289764, -8.00897884, -3.25385094, -4.58932209, -3.74074745,
          -4.14678431, -4.96510506, -4.05580473, -7.93344021, -6.89175034],
         [-6.85289764, -8.00897884, -3.25385094, -4.58932209, -3.74074745,
          -4.14678431, -4.96510506, -4.05580473, -7.93344021, -6.89175034]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.48689651,  0.40603685,  0.31505728]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.15872920e-01, -8.41268823e-02, -1.15872920e-01,  ...,
             4.71428633e-01, -5.44444442e-01, -7.82539666e-01],
           [ 5.03174663e-01,  2.01587379e-01,  5.87302521e-02,  ...,
             7.09523857e-01, -5.12698412e-01, -8.30158710e-01],
           [ 8.20634961e-01,  5.03174663e-01,  2.96825469e-01,  ...,
             7.57142901e-01, -6.39682531e-01, -8.46031725e-01],
           ...,
           [-4.96825397e-01, -4.96825397e-01, -5.44444442e-01,  ...,
            -9.73015904e-01, -9.57142830e-01, -8.93650770e-01],
           [-5.76190472e-01, -6.23809516e-01, -6.07936502e-01,  ...,
            -7.66666651e-01, -9.25396800e-01, -9.57142830e-01],
           [-4.17460203e-01, -7.19047606e-01, -6.71428561e-01,  ...,
            -8.46031725e-01, -9.41269815e-01, -9.25396800e-01]],

          [[ 6.44122481e-01,  4.66988832e-01,  1.44927651e-01,  ...,
             9.82286692e-01, -5.79710126e-01, -8.69565189e-01],
           [ 1.14331758e+00,  8.69565308e-01,  4.34782714e-01,  ...,
             1.03059590e+00, -5.47504008e-01, -9.33977425e-01],
           [ 1.35265732e+00,  1.01449287e+00,  4.34782714e-01,  ...,
             7.72946954e-01, -6.92431509e-01, -9.50080454e-01],
           ...,
           [-9.66182351e-02,  1.22934580e-07,  1.22934580e-07,  ...,
            -1.51368749e+00, -1.35265696e+00, -1.09500802e+00],
           [-3.38164121e-01, -3.38164121e-01, -2.41545767e-01,  ...,
            -1.04669881e+00, -1.14331722e+00, -1.17552328e+00],
           [-3.22061062e-01, -4.83091772e-01, -3.22061062e-01,  ...,
            -9.33977425e-01, -1.06280184e+00, -1.07890499e+00]],

          [[-5.98200858e-01, -7.78110921e-01, -9.73013461e-01,  ...,
            -5.83208382e-01, -1.21289361e+00, -1.34782624e+00],
           [-2.38380641e-01, -4.78260815e-01, -5.53223372e-01,  ...,
            -4.33283329e-01, -1.27286363e+00, -1.28785622e+00],
           [-1.63418129e-01, -3.58320802e-01, -4.63268340e-01,  ...,
             1.51424453e-01, -1.42278874e+00, -1.34782624e+00],
           ...,
           [-8.08095932e-01, -7.03148425e-01, -9.88005996e-01,  ...,
            -1.49775124e+00, -1.43778121e+00, -1.40779614e+00],
           [-8.08095932e-01, -4.78260815e-01, -5.53223372e-01,  ...,
            -1.22788620e+00, -1.34782624e+00, -1.40779614e+00],
           [-7.48125911e-01, -8.83058429e-01, -1.04797614e+00,  ...,
            -1.24287868e+00, -1.30284870e+00, -1.24287868e+00]]],


         [[[-1.15872920e-01, -8.41268823e-02, -1.15872920e-01,  ...,
             4.71428633e-01, -5.44444442e-01, -7.82539666e-01],
           [ 5.03174663e-01,  2.01587379e-01,  5.87302521e-02,  ...,
             7.09523857e-01, -5.12698412e-01, -8.30158710e-01],
           [ 8.20634961e-01,  5.03174663e-01,  2.96825469e-01,  ...,
             7.57142901e-01, -6.39682531e-01, -8.46031725e-01],
           ...,
           [-4.96825397e-01, -4.96825397e-01, -5.44444442e-01,  ...,
            -9.73015904e-01, -9.57142830e-01, -8.93650770e-01],
           [-5.76190472e-01, -6.23809516e-01, -6.07936502e-01,  ...,
            -7.66666651e-01, -9.25396800e-01, -9.57142830e-01],
           [-4.17460203e-01, -7.19047606e-01, -6.71428561e-01,  ...,
            -8.46031725e-01, -9.41269815e-01, -9.25396800e-01]],

          [[ 6.44122481e-01,  4.66988832e-01,  1.44927651e-01,  ...,
             9.82286692e-01, -5.79710126e-01, -8.69565189e-01],
           [ 1.14331758e+00,  8.69565308e-01,  4.34782714e-01,  ...,
             1.03059590e+00, -5.47504008e-01, -9.33977425e-01],
           [ 1.35265732e+00,  1.01449287e+00,  4.34782714e-01,  ...,
             7.72946954e-01, -6.92431509e-01, -9.50080454e-01],
           ...,
           [-9.66182351e-02,  1.22934580e-07,  1.22934580e-07,  ...,
            -1.51368749e+00, -1.35265696e+00, -1.09500802e+00],
           [-3.38164121e-01, -3.38164121e-01, -2.41545767e-01,  ...,
            -1.04669881e+00, -1.14331722e+00, -1.17552328e+00],
           [-3.22061062e-01, -4.83091772e-01, -3.22061062e-01,  ...,
            -9.33977425e-01, -1.06280184e+00, -1.07890499e+00]],

          [[-5.98200858e-01, -7.78110921e-01, -9.73013461e-01,  ...,
            -5.83208382e-01, -1.21289361e+00, -1.34782624e+00],
           [-2.38380641e-01, -4.78260815e-01, -5.53223372e-01,  ...,
            -4.33283329e-01, -1.27286363e+00, -1.28785622e+00],
           [-1.63418129e-01, -3.58320802e-01, -4.63268340e-01,  ...,
             1.51424453e-01, -1.42278874e+00, -1.34782624e+00],
           ...,
           [-8.08095932e-01, -7.03148425e-01, -9.88005996e-01,  ...,
            -1.49775124e+00, -1.43778121e+00, -1.40779614e+00],
           [-8.08095932e-01, -4.78260815e-01, -5.53223372e-01,  ...,
            -1.22788620e+00, -1.34782624e+00, -1.40779614e+00],
           [-7.48125911e-01, -8.83058429e-01, -1.04797614e+00,  ...,
            -1.24287868e+00, -1.30284870e+00, -1.24287868e+00]]],


         [[[-1.15872920e-01, -8.41268823e-02, -1.15872920e-01,  ...,
             4.71428633e-01, -5.44444442e-01, -7.82539666e-01],
           [ 5.03174663e-01,  2.01587379e-01,  5.87302521e-02,  ...,
             7.09523857e-01, -5.12698412e-01, -8.30158710e-01],
           [ 8.20634961e-01,  5.03174663e-01,  2.96825469e-01,  ...,
             7.57142901e-01, -6.39682531e-01, -8.46031725e-01],
           ...,
           [-4.96825397e-01, -4.96825397e-01, -5.44444442e-01,  ...,
            -9.73015904e-01, -9.57142830e-01, -8.93650770e-01],
           [-5.76190472e-01, -6.23809516e-01, -6.07936502e-01,  ...,
            -7.66666651e-01, -9.25396800e-01, -9.57142830e-01],
           [-4.17460203e-01, -7.19047606e-01, -6.71428561e-01,  ...,
            -8.46031725e-01, -9.41269815e-01, -9.25396800e-01]],

          [[ 6.44122481e-01,  4.66988832e-01,  1.44927651e-01,  ...,
             9.82286692e-01, -5.79710126e-01, -8.69565189e-01],
           [ 1.14331758e+00,  8.69565308e-01,  4.34782714e-01,  ...,
             1.03059590e+00, -5.47504008e-01, -9.33977425e-01],
           [ 1.35265732e+00,  1.01449287e+00,  4.34782714e-01,  ...,
             7.72946954e-01, -6.92431509e-01, -9.50080454e-01],
           ...,
           [-9.66182351e-02,  1.22934580e-07,  1.22934580e-07,  ...,
            -1.51368749e+00, -1.35265696e+00, -1.09500802e+00],
           [-3.38164121e-01, -3.38164121e-01, -2.41545767e-01,  ...,
            -1.04669881e+00, -1.14331722e+00, -1.17552328e+00],
           [-3.22061062e-01, -4.83091772e-01, -3.22061062e-01,  ...,
            -9.33977425e-01, -1.06280184e+00, -1.07890499e+00]],

          [[-5.98200858e-01, -7.78110921e-01, -9.73013461e-01,  ...,
            -5.83208382e-01, -1.21289361e+00, -1.34782624e+00],
           [-2.38380641e-01, -4.78260815e-01, -5.53223372e-01,  ...,
            -4.33283329e-01, -1.27286363e+00, -1.28785622e+00],
           [-1.63418129e-01, -3.58320802e-01, -4.63268340e-01,  ...,
             1.51424453e-01, -1.42278874e+00, -1.34782624e+00],
           ...,
           [-8.08095932e-01, -7.03148425e-01, -9.88005996e-01,  ...,
            -1.49775124e+00, -1.43778121e+00, -1.40779614e+00],
           [-8.08095932e-01, -4.78260815e-01, -5.53223372e-01,  ...,
            -1.22788620e+00, -1.34782624e+00, -1.40779614e+00],
           [-7.48125911e-01, -8.83058429e-01, -1.04797614e+00,  ...,
            -1.24287868e+00, -1.30284870e+00, -1.24287868e+00]]]]],
       device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0827 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 127, vnnlib ID: 127 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.57729053, -10.22089481,  -8.00115299,  -7.89926720,  -8.22076607,
          -9.08212662,  -9.97586060,  -9.23946381,  -7.82561684,  -9.45760345]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [685]; unstable size 685; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 209, 1, 685] with unstable size 208 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 685] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 685] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [208]; unstable size 208; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 208] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 208] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.39561701,  1.13157177, -1.32989621, -1.52063870, -1.36703968,
         -0.59409851,  0.40751386, -0.57752252,  0.47539330]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.57729053, -10.22089481,  -8.00115299,  -7.89926720,  -8.22076607,
          -9.08212662,  -9.97586060,  -9.23946381,  -7.82561684,  -9.45760345]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.57729101, -10.22089481,  -8.00115299,  -7.89926624,  -8.22076702,
           -9.08212757,  -9.97586155,  -9.23946476,  -7.82561779,  -9.45760345],
         [ -7.57729101, -10.22089481,  -8.00115299,  -7.89926624,  -8.22076702,
           -9.08212757,  -9.97586155,  -9.23946476,  -7.82561779,  -9.45760345]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.24832678,  0.17553520,  0.07364845,  0.39514923,  1.25650978,
           1.41384697]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[1.09047651, 1.07460344, 1.10634947,  ..., 0.94761908,
            0.90000004, 0.88412702],
           [1.16984153, 1.12222254, 1.12222254,  ..., 0.97936511,
            0.93174607, 0.91587305],
           [1.16984153, 1.10634947, 1.10634947,  ..., 0.93174607,
            0.90000004, 0.88412702],
           ...,
           [0.70952386, 0.66190481, 0.67777783,  ..., 0.50317466,
            0.47142863, 0.45555562],
           [0.77301592, 0.72539687, 0.72539687,  ..., 0.58253974,
            0.56666672, 0.53492069],
           [0.82063496, 0.75714290, 0.72539687,  ..., 0.64603180,
            0.59841275, 0.51904768]],

          [[1.01449287, 1.01449287, 1.03059590,  ..., 0.88566834,
            0.83735919, 0.82125610],
           [1.09500813, 1.04669893, 1.04669893,  ..., 0.90177143,
            0.86956531, 0.85346222],
           [1.09500813, 1.03059590, 1.03059590,  ..., 0.86956531,
            0.83735919, 0.80515307],
           ...,
           [0.69243163, 0.64412248, 0.66022551,  ..., 0.46698883,
            0.43478271, 0.41867965],
           [0.74074084, 0.69243163, 0.70853472,  ..., 0.51529801,
            0.49919492, 0.45088577],
           [0.75684386, 0.67632860, 0.69243163,  ..., 0.59581327,
            0.54750413, 0.48309189]],

          [[0.91604215, 0.91604215, 0.93103468,  ..., 0.84107965,
            0.79610211, 0.78110963],
           [0.99100471, 0.94602716, 0.94602716,  ..., 0.85607213,
            0.82608712, 0.81109464],
           [0.99100471, 0.93103468, 0.93103468,  ..., 0.82608712,
            0.79610211, 0.76611710],
           ...,
           [0.72113961, 0.69115460, 0.70614707,  ..., 0.52623707,
            0.49625200, 0.48125952],
           [0.78110963, 0.73613209, 0.75112462,  ..., 0.58620709,
            0.55622208, 0.52623707],
           [0.81109464, 0.73613209, 0.73613209,  ..., 0.64617711,
            0.60119957, 0.54122955]]],


         [[[1.09047651, 1.07460344, 1.10634947,  ..., 0.94761908,
            0.90000004, 0.88412702],
           [1.16984153, 1.12222254, 1.12222254,  ..., 0.97936511,
            0.93174607, 0.91587305],
           [1.16984153, 1.10634947, 1.10634947,  ..., 0.93174607,
            0.90000004, 0.88412702],
           ...,
           [0.70952386, 0.66190481, 0.67777783,  ..., 0.50317466,
            0.47142863, 0.45555562],
           [0.77301592, 0.72539687, 0.72539687,  ..., 0.58253974,
            0.56666672, 0.53492069],
           [0.82063496, 0.75714290, 0.72539687,  ..., 0.64603180,
            0.59841275, 0.51904768]],

          [[1.01449287, 1.01449287, 1.03059590,  ..., 0.88566834,
            0.83735919, 0.82125610],
           [1.09500813, 1.04669893, 1.04669893,  ..., 0.90177143,
            0.86956531, 0.85346222],
           [1.09500813, 1.03059590, 1.03059590,  ..., 0.86956531,
            0.83735919, 0.80515307],
           ...,
           [0.69243163, 0.64412248, 0.66022551,  ..., 0.46698883,
            0.43478271, 0.41867965],
           [0.74074084, 0.69243163, 0.70853472,  ..., 0.51529801,
            0.49919492, 0.45088577],
           [0.75684386, 0.67632860, 0.69243163,  ..., 0.59581327,
            0.54750413, 0.48309189]],

          [[0.91604215, 0.91604215, 0.93103468,  ..., 0.84107965,
            0.79610211, 0.78110963],
           [0.99100471, 0.94602716, 0.94602716,  ..., 0.85607213,
            0.82608712, 0.81109464],
           [0.99100471, 0.93103468, 0.93103468,  ..., 0.82608712,
            0.79610211, 0.76611710],
           ...,
           [0.72113961, 0.69115460, 0.70614707,  ..., 0.52623707,
            0.49625200, 0.48125952],
           [0.78110963, 0.73613209, 0.75112462,  ..., 0.58620709,
            0.55622208, 0.52623707],
           [0.81109464, 0.73613209, 0.73613209,  ..., 0.64617711,
            0.60119957, 0.54122955]]],


         [[[1.09047651, 1.07460344, 1.10634947,  ..., 0.94761908,
            0.90000004, 0.88412702],
           [1.16984153, 1.12222254, 1.12222254,  ..., 0.97936511,
            0.93174607, 0.91587305],
           [1.16984153, 1.10634947, 1.10634947,  ..., 0.93174607,
            0.90000004, 0.88412702],
           ...,
           [0.70952386, 0.66190481, 0.67777783,  ..., 0.50317466,
            0.47142863, 0.45555562],
           [0.77301592, 0.72539687, 0.72539687,  ..., 0.58253974,
            0.56666672, 0.53492069],
           [0.82063496, 0.75714290, 0.72539687,  ..., 0.64603180,
            0.59841275, 0.51904768]],

          [[1.01449287, 1.01449287, 1.03059590,  ..., 0.88566834,
            0.83735919, 0.82125610],
           [1.09500813, 1.04669893, 1.04669893,  ..., 0.90177143,
            0.86956531, 0.85346222],
           [1.09500813, 1.03059590, 1.03059590,  ..., 0.86956531,
            0.83735919, 0.80515307],
           ...,
           [0.69243163, 0.64412248, 0.66022551,  ..., 0.46698883,
            0.43478271, 0.41867965],
           [0.74074084, 0.69243163, 0.70853472,  ..., 0.51529801,
            0.49919492, 0.45088577],
           [0.75684386, 0.67632860, 0.69243163,  ..., 0.59581327,
            0.54750413, 0.48309189]],

          [[0.91604215, 0.91604215, 0.93103468,  ..., 0.84107965,
            0.79610211, 0.78110963],
           [0.99100471, 0.94602716, 0.94602716,  ..., 0.85607213,
            0.82608712, 0.81109464],
           [0.99100471, 0.93103468, 0.93103468,  ..., 0.82608712,
            0.79610211, 0.76611710],
           ...,
           [0.72113961, 0.69115460, 0.70614707,  ..., 0.52623707,
            0.49625200, 0.48125952],
           [0.78110963, 0.73613209, 0.75112462,  ..., 0.58620709,
            0.55622208, 0.52623707],
           [0.81109464, 0.73613209, 0.73613209,  ..., 0.64617711,
            0.60119957, 0.54122955]]],


         [[[1.09047651, 1.07460344, 1.10634947,  ..., 0.94761908,
            0.90000004, 0.88412702],
           [1.16984153, 1.12222254, 1.12222254,  ..., 0.97936511,
            0.93174607, 0.91587305],
           [1.16984153, 1.10634947, 1.10634947,  ..., 0.93174607,
            0.90000004, 0.88412702],
           ...,
           [0.70952386, 0.66190481, 0.67777783,  ..., 0.50317466,
            0.47142863, 0.45555562],
           [0.77301592, 0.72539687, 0.72539687,  ..., 0.58253974,
            0.56666672, 0.53492069],
           [0.82063496, 0.75714290, 0.72539687,  ..., 0.64603180,
            0.59841275, 0.51904768]],

          [[1.01449287, 1.01449287, 1.03059590,  ..., 0.88566834,
            0.83735919, 0.82125610],
           [1.09500813, 1.04669893, 1.04669893,  ..., 0.90177143,
            0.86956531, 0.85346222],
           [1.09500813, 1.03059590, 1.03059590,  ..., 0.86956531,
            0.83735919, 0.80515307],
           ...,
           [0.69243163, 0.64412248, 0.66022551,  ..., 0.46698883,
            0.43478271, 0.41867965],
           [0.74074084, 0.69243163, 0.70853472,  ..., 0.51529801,
            0.49919492, 0.45088577],
           [0.75684386, 0.67632860, 0.69243163,  ..., 0.59581327,
            0.54750413, 0.48309189]],

          [[0.91604215, 0.91604215, 0.93103468,  ..., 0.84107965,
            0.79610211, 0.78110963],
           [0.99100471, 0.94602716, 0.94602716,  ..., 0.85607213,
            0.82608712, 0.81109464],
           [0.99100471, 0.93103468, 0.93103468,  ..., 0.82608712,
            0.79610211, 0.76611710],
           ...,
           [0.72113961, 0.69115460, 0.70614707,  ..., 0.52623707,
            0.49625200, 0.48125952],
           [0.78110963, 0.73613209, 0.75112462,  ..., 0.58620709,
            0.55622208, 0.52623707],
           [0.81109464, 0.73613209, 0.73613209,  ..., 0.64617711,
            0.60119957, 0.54122955]]],


         [[[1.09047651, 1.07460344, 1.10634947,  ..., 0.94761908,
            0.90000004, 0.88412702],
           [1.16984153, 1.12222254, 1.12222254,  ..., 0.97936511,
            0.93174607, 0.91587305],
           [1.16984153, 1.10634947, 1.10634947,  ..., 0.93174607,
            0.90000004, 0.88412702],
           ...,
           [0.70952386, 0.66190481, 0.67777783,  ..., 0.50317466,
            0.47142863, 0.45555562],
           [0.77301592, 0.72539687, 0.72539687,  ..., 0.58253974,
            0.56666672, 0.53492069],
           [0.82063496, 0.75714290, 0.72539687,  ..., 0.64603180,
            0.59841275, 0.51904768]],

          [[1.01449287, 1.01449287, 1.03059590,  ..., 0.88566834,
            0.83735919, 0.82125610],
           [1.09500813, 1.04669893, 1.04669893,  ..., 0.90177143,
            0.86956531, 0.85346222],
           [1.09500813, 1.03059590, 1.03059590,  ..., 0.86956531,
            0.83735919, 0.80515307],
           ...,
           [0.69243163, 0.64412248, 0.66022551,  ..., 0.46698883,
            0.43478271, 0.41867965],
           [0.74074084, 0.69243163, 0.70853472,  ..., 0.51529801,
            0.49919492, 0.45088577],
           [0.75684386, 0.67632860, 0.69243163,  ..., 0.59581327,
            0.54750413, 0.48309189]],

          [[0.91604215, 0.91604215, 0.93103468,  ..., 0.84107965,
            0.79610211, 0.78110963],
           [0.99100471, 0.94602716, 0.94602716,  ..., 0.85607213,
            0.82608712, 0.81109464],
           [0.99100471, 0.93103468, 0.93103468,  ..., 0.82608712,
            0.79610211, 0.76611710],
           ...,
           [0.72113961, 0.69115460, 0.70614707,  ..., 0.52623707,
            0.49625200, 0.48125952],
           [0.78110963, 0.73613209, 0.75112462,  ..., 0.58620709,
            0.55622208, 0.52623707],
           [0.81109464, 0.73613209, 0.73613209,  ..., 0.64617711,
            0.60119957, 0.54122955]]],


         [[[1.09047651, 1.07460344, 1.10634947,  ..., 0.94761908,
            0.90000004, 0.88412702],
           [1.16984153, 1.12222254, 1.12222254,  ..., 0.97936511,
            0.93174607, 0.91587305],
           [1.16984153, 1.10634947, 1.10634947,  ..., 0.93174607,
            0.90000004, 0.88412702],
           ...,
           [0.70952386, 0.66190481, 0.67777783,  ..., 0.50317466,
            0.47142863, 0.45555562],
           [0.77301592, 0.72539687, 0.72539687,  ..., 0.58253974,
            0.56666672, 0.53492069],
           [0.82063496, 0.75714290, 0.72539687,  ..., 0.64603180,
            0.59841275, 0.51904768]],

          [[1.01449287, 1.01449287, 1.03059590,  ..., 0.88566834,
            0.83735919, 0.82125610],
           [1.09500813, 1.04669893, 1.04669893,  ..., 0.90177143,
            0.86956531, 0.85346222],
           [1.09500813, 1.03059590, 1.03059590,  ..., 0.86956531,
            0.83735919, 0.80515307],
           ...,
           [0.69243163, 0.64412248, 0.66022551,  ..., 0.46698883,
            0.43478271, 0.41867965],
           [0.74074084, 0.69243163, 0.70853472,  ..., 0.51529801,
            0.49919492, 0.45088577],
           [0.75684386, 0.67632860, 0.69243163,  ..., 0.59581327,
            0.54750413, 0.48309189]],

          [[0.91604215, 0.91604215, 0.93103468,  ..., 0.84107965,
            0.79610211, 0.78110963],
           [0.99100471, 0.94602716, 0.94602716,  ..., 0.85607213,
            0.82608712, 0.81109464],
           [0.99100471, 0.93103468, 0.93103468,  ..., 0.82608712,
            0.79610211, 0.76611710],
           ...,
           [0.72113961, 0.69115460, 0.70614707,  ..., 0.52623707,
            0.49625200, 0.48125952],
           [0.78110963, 0.73613209, 0.75112462,  ..., 0.58620709,
            0.55622208, 0.52623707],
           [0.81109464, 0.73613209, 0.73613209,  ..., 0.64617711,
            0.60119957, 0.54122955]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0790 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 128, vnnlib ID: 128 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.12257195, -8.18585014, -3.72392344, -4.82489967, -3.27657938,
         -4.91832876, -4.09014797, -4.34730959, -7.98648739, -6.16137838]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [563]; unstable size 563; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 239, 1, 563] with unstable size 238 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 563] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 563] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [238]; unstable size 238; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 238] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 238] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.90272880,  1.91782308, -1.66059661, -0.46604300, -2.21083927,
         -0.55527300, -1.51988947,  1.75675309, -0.03911400]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.12257195, -8.18585014, -3.72392344, -4.82489967, -3.27657938,
         -4.91832876, -4.09014797, -4.34730959, -7.98648739, -6.16137838]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.12257195, -8.18585014, -3.72392321, -4.82489920, -3.27657890,
          -4.91832876, -4.09014797, -4.34730911, -7.98648739, -6.16137838],
         [-5.12257195, -8.18585014, -3.72392321, -4.82489920, -3.27657890,
          -4.91832876, -4.09014797, -4.34730911, -7.98648739, -6.16137838]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.03242397, -0.36622477,  0.73475122, -0.81356907,  0.82818079,
           0.25716114,  2.07123041]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 4.28572372e-02,  5.87302521e-02, -4.76180762e-03,  ...,
            -1.15872920e-01, -4.76180762e-03,  2.01587379e-01],
           [ 2.17460394e-01,  1.53968334e-01,  1.85714364e-01,  ...,
            -1.95237994e-01, -8.41268823e-02,  4.28572372e-02],
           [ 1.11112073e-02,  1.69841349e-01,  5.34920692e-01,  ...,
            -2.90476084e-01, -8.41268823e-02, -1.15872920e-01],
           ...,
           [ 5.34920692e-01, -1.16349196e+00, -1.95714283e+00,  ...,
            -4.49206233e-01, -5.28571427e-01, -3.85714173e-01],
           [ 1.69841349e-01, -1.05238092e+00, -1.63968253e+00,  ...,
            -2.74603069e-01, -6.07936502e-01, -4.80952382e-01],
           [ 7.46032670e-02, -5.28571427e-01, -9.73015904e-01,  ...,
            -2.74603069e-01, -3.85714173e-01, -3.69841158e-01]],

          [[ 1.93236828e-01,  1.61030710e-01,  4.83092964e-02,  ...,
            -1.28824353e-01, -1.61029361e-02,  1.61030710e-01],
           [ 3.05958241e-01,  2.09339887e-01,  2.41546005e-01,  ...,
            -1.28824353e-01, -3.22059989e-02,  6.44123554e-02],
           [ 4.83092964e-02,  1.77133769e-01,  6.11916363e-01,  ...,
            -1.77133530e-01,  3.22062373e-02, -4.83090580e-02],
           ...,
           [ 4.66988832e-01, -1.22383249e+00, -1.95652175e+00,  ...,
            -5.79710126e-01, -7.08534598e-01, -5.79710126e-01],
           [ 1.12721533e-01, -1.11111104e+00, -1.65861523e+00,  ...,
            -4.02576357e-01, -7.89049864e-01, -6.60225391e-01],
           [ 3.22062373e-02, -5.95813155e-01, -1.03059578e+00,  ...,
            -4.34782475e-01, -5.63607037e-01, -4.99194801e-01]],

          [[ 2.86356986e-01,  1.81409463e-01,  9.14544314e-02,  ...,
             1.49940979e-03, -4.34781015e-02,  4.64769229e-02],
           [ 2.86356986e-01,  1.36431947e-01,  2.56371975e-01,  ...,
             3.14844176e-02, -1.34930937e-02,  3.14844176e-02],
           [-2.98350781e-01, -1.93403140e-01,  3.91304523e-01,  ...,
            -1.34930937e-02,  6.14694245e-02, -2.84855980e-02],
           ...,
           [ 1.96401969e-01, -1.12293863e+00, -1.69265378e+00,  ...,
            -9.43028450e-01, -9.13043439e-01, -8.68065953e-01],
           [-1.33433133e-01, -1.06296861e+00, -1.52773619e+00,  ...,
            -7.48125911e-01, -1.01799107e+00, -9.88005996e-01],
           [-1.93403140e-01, -6.43178403e-01, -1.07796109e+00,  ...,
            -7.33133376e-01, -9.28035975e-01, -8.68065953e-01]]],


         [[[ 4.28572372e-02,  5.87302521e-02, -4.76180762e-03,  ...,
            -1.15872920e-01, -4.76180762e-03,  2.01587379e-01],
           [ 2.17460394e-01,  1.53968334e-01,  1.85714364e-01,  ...,
            -1.95237994e-01, -8.41268823e-02,  4.28572372e-02],
           [ 1.11112073e-02,  1.69841349e-01,  5.34920692e-01,  ...,
            -2.90476084e-01, -8.41268823e-02, -1.15872920e-01],
           ...,
           [ 5.34920692e-01, -1.16349196e+00, -1.95714283e+00,  ...,
            -4.49206233e-01, -5.28571427e-01, -3.85714173e-01],
           [ 1.69841349e-01, -1.05238092e+00, -1.63968253e+00,  ...,
            -2.74603069e-01, -6.07936502e-01, -4.80952382e-01],
           [ 7.46032670e-02, -5.28571427e-01, -9.73015904e-01,  ...,
            -2.74603069e-01, -3.85714173e-01, -3.69841158e-01]],

          [[ 1.93236828e-01,  1.61030710e-01,  4.83092964e-02,  ...,
            -1.28824353e-01, -1.61029361e-02,  1.61030710e-01],
           [ 3.05958241e-01,  2.09339887e-01,  2.41546005e-01,  ...,
            -1.28824353e-01, -3.22059989e-02,  6.44123554e-02],
           [ 4.83092964e-02,  1.77133769e-01,  6.11916363e-01,  ...,
            -1.77133530e-01,  3.22062373e-02, -4.83090580e-02],
           ...,
           [ 4.66988832e-01, -1.22383249e+00, -1.95652175e+00,  ...,
            -5.79710126e-01, -7.08534598e-01, -5.79710126e-01],
           [ 1.12721533e-01, -1.11111104e+00, -1.65861523e+00,  ...,
            -4.02576357e-01, -7.89049864e-01, -6.60225391e-01],
           [ 3.22062373e-02, -5.95813155e-01, -1.03059578e+00,  ...,
            -4.34782475e-01, -5.63607037e-01, -4.99194801e-01]],

          [[ 2.86356986e-01,  1.81409463e-01,  9.14544314e-02,  ...,
             1.49940979e-03, -4.34781015e-02,  4.64769229e-02],
           [ 2.86356986e-01,  1.36431947e-01,  2.56371975e-01,  ...,
             3.14844176e-02, -1.34930937e-02,  3.14844176e-02],
           [-2.98350781e-01, -1.93403140e-01,  3.91304523e-01,  ...,
            -1.34930937e-02,  6.14694245e-02, -2.84855980e-02],
           ...,
           [ 1.96401969e-01, -1.12293863e+00, -1.69265378e+00,  ...,
            -9.43028450e-01, -9.13043439e-01, -8.68065953e-01],
           [-1.33433133e-01, -1.06296861e+00, -1.52773619e+00,  ...,
            -7.48125911e-01, -1.01799107e+00, -9.88005996e-01],
           [-1.93403140e-01, -6.43178403e-01, -1.07796109e+00,  ...,
            -7.33133376e-01, -9.28035975e-01, -8.68065953e-01]]],


         [[[ 4.28572372e-02,  5.87302521e-02, -4.76180762e-03,  ...,
            -1.15872920e-01, -4.76180762e-03,  2.01587379e-01],
           [ 2.17460394e-01,  1.53968334e-01,  1.85714364e-01,  ...,
            -1.95237994e-01, -8.41268823e-02,  4.28572372e-02],
           [ 1.11112073e-02,  1.69841349e-01,  5.34920692e-01,  ...,
            -2.90476084e-01, -8.41268823e-02, -1.15872920e-01],
           ...,
           [ 5.34920692e-01, -1.16349196e+00, -1.95714283e+00,  ...,
            -4.49206233e-01, -5.28571427e-01, -3.85714173e-01],
           [ 1.69841349e-01, -1.05238092e+00, -1.63968253e+00,  ...,
            -2.74603069e-01, -6.07936502e-01, -4.80952382e-01],
           [ 7.46032670e-02, -5.28571427e-01, -9.73015904e-01,  ...,
            -2.74603069e-01, -3.85714173e-01, -3.69841158e-01]],

          [[ 1.93236828e-01,  1.61030710e-01,  4.83092964e-02,  ...,
            -1.28824353e-01, -1.61029361e-02,  1.61030710e-01],
           [ 3.05958241e-01,  2.09339887e-01,  2.41546005e-01,  ...,
            -1.28824353e-01, -3.22059989e-02,  6.44123554e-02],
           [ 4.83092964e-02,  1.77133769e-01,  6.11916363e-01,  ...,
            -1.77133530e-01,  3.22062373e-02, -4.83090580e-02],
           ...,
           [ 4.66988832e-01, -1.22383249e+00, -1.95652175e+00,  ...,
            -5.79710126e-01, -7.08534598e-01, -5.79710126e-01],
           [ 1.12721533e-01, -1.11111104e+00, -1.65861523e+00,  ...,
            -4.02576357e-01, -7.89049864e-01, -6.60225391e-01],
           [ 3.22062373e-02, -5.95813155e-01, -1.03059578e+00,  ...,
            -4.34782475e-01, -5.63607037e-01, -4.99194801e-01]],

          [[ 2.86356986e-01,  1.81409463e-01,  9.14544314e-02,  ...,
             1.49940979e-03, -4.34781015e-02,  4.64769229e-02],
           [ 2.86356986e-01,  1.36431947e-01,  2.56371975e-01,  ...,
             3.14844176e-02, -1.34930937e-02,  3.14844176e-02],
           [-2.98350781e-01, -1.93403140e-01,  3.91304523e-01,  ...,
            -1.34930937e-02,  6.14694245e-02, -2.84855980e-02],
           ...,
           [ 1.96401969e-01, -1.12293863e+00, -1.69265378e+00,  ...,
            -9.43028450e-01, -9.13043439e-01, -8.68065953e-01],
           [-1.33433133e-01, -1.06296861e+00, -1.52773619e+00,  ...,
            -7.48125911e-01, -1.01799107e+00, -9.88005996e-01],
           [-1.93403140e-01, -6.43178403e-01, -1.07796109e+00,  ...,
            -7.33133376e-01, -9.28035975e-01, -8.68065953e-01]]],


         ...,


         [[[ 4.28572372e-02,  5.87302521e-02, -4.76180762e-03,  ...,
            -1.15872920e-01, -4.76180762e-03,  2.01587379e-01],
           [ 2.17460394e-01,  1.53968334e-01,  1.85714364e-01,  ...,
            -1.95237994e-01, -8.41268823e-02,  4.28572372e-02],
           [ 1.11112073e-02,  1.69841349e-01,  5.34920692e-01,  ...,
            -2.90476084e-01, -8.41268823e-02, -1.15872920e-01],
           ...,
           [ 5.34920692e-01, -1.16349196e+00, -1.95714283e+00,  ...,
            -4.49206233e-01, -5.28571427e-01, -3.85714173e-01],
           [ 1.69841349e-01, -1.05238092e+00, -1.63968253e+00,  ...,
            -2.74603069e-01, -6.07936502e-01, -4.80952382e-01],
           [ 7.46032670e-02, -5.28571427e-01, -9.73015904e-01,  ...,
            -2.74603069e-01, -3.85714173e-01, -3.69841158e-01]],

          [[ 1.93236828e-01,  1.61030710e-01,  4.83092964e-02,  ...,
            -1.28824353e-01, -1.61029361e-02,  1.61030710e-01],
           [ 3.05958241e-01,  2.09339887e-01,  2.41546005e-01,  ...,
            -1.28824353e-01, -3.22059989e-02,  6.44123554e-02],
           [ 4.83092964e-02,  1.77133769e-01,  6.11916363e-01,  ...,
            -1.77133530e-01,  3.22062373e-02, -4.83090580e-02],
           ...,
           [ 4.66988832e-01, -1.22383249e+00, -1.95652175e+00,  ...,
            -5.79710126e-01, -7.08534598e-01, -5.79710126e-01],
           [ 1.12721533e-01, -1.11111104e+00, -1.65861523e+00,  ...,
            -4.02576357e-01, -7.89049864e-01, -6.60225391e-01],
           [ 3.22062373e-02, -5.95813155e-01, -1.03059578e+00,  ...,
            -4.34782475e-01, -5.63607037e-01, -4.99194801e-01]],

          [[ 2.86356986e-01,  1.81409463e-01,  9.14544314e-02,  ...,
             1.49940979e-03, -4.34781015e-02,  4.64769229e-02],
           [ 2.86356986e-01,  1.36431947e-01,  2.56371975e-01,  ...,
             3.14844176e-02, -1.34930937e-02,  3.14844176e-02],
           [-2.98350781e-01, -1.93403140e-01,  3.91304523e-01,  ...,
            -1.34930937e-02,  6.14694245e-02, -2.84855980e-02],
           ...,
           [ 1.96401969e-01, -1.12293863e+00, -1.69265378e+00,  ...,
            -9.43028450e-01, -9.13043439e-01, -8.68065953e-01],
           [-1.33433133e-01, -1.06296861e+00, -1.52773619e+00,  ...,
            -7.48125911e-01, -1.01799107e+00, -9.88005996e-01],
           [-1.93403140e-01, -6.43178403e-01, -1.07796109e+00,  ...,
            -7.33133376e-01, -9.28035975e-01, -8.68065953e-01]]],


         [[[ 4.28572372e-02,  5.87302521e-02, -4.76180762e-03,  ...,
            -1.15872920e-01, -4.76180762e-03,  2.01587379e-01],
           [ 2.17460394e-01,  1.53968334e-01,  1.85714364e-01,  ...,
            -1.95237994e-01, -8.41268823e-02,  4.28572372e-02],
           [ 1.11112073e-02,  1.69841349e-01,  5.34920692e-01,  ...,
            -2.90476084e-01, -8.41268823e-02, -1.15872920e-01],
           ...,
           [ 5.34920692e-01, -1.16349196e+00, -1.95714283e+00,  ...,
            -4.49206233e-01, -5.28571427e-01, -3.85714173e-01],
           [ 1.69841349e-01, -1.05238092e+00, -1.63968253e+00,  ...,
            -2.74603069e-01, -6.07936502e-01, -4.80952382e-01],
           [ 7.46032670e-02, -5.28571427e-01, -9.73015904e-01,  ...,
            -2.74603069e-01, -3.85714173e-01, -3.69841158e-01]],

          [[ 1.93236828e-01,  1.61030710e-01,  4.83092964e-02,  ...,
            -1.28824353e-01, -1.61029361e-02,  1.61030710e-01],
           [ 3.05958241e-01,  2.09339887e-01,  2.41546005e-01,  ...,
            -1.28824353e-01, -3.22059989e-02,  6.44123554e-02],
           [ 4.83092964e-02,  1.77133769e-01,  6.11916363e-01,  ...,
            -1.77133530e-01,  3.22062373e-02, -4.83090580e-02],
           ...,
           [ 4.66988832e-01, -1.22383249e+00, -1.95652175e+00,  ...,
            -5.79710126e-01, -7.08534598e-01, -5.79710126e-01],
           [ 1.12721533e-01, -1.11111104e+00, -1.65861523e+00,  ...,
            -4.02576357e-01, -7.89049864e-01, -6.60225391e-01],
           [ 3.22062373e-02, -5.95813155e-01, -1.03059578e+00,  ...,
            -4.34782475e-01, -5.63607037e-01, -4.99194801e-01]],

          [[ 2.86356986e-01,  1.81409463e-01,  9.14544314e-02,  ...,
             1.49940979e-03, -4.34781015e-02,  4.64769229e-02],
           [ 2.86356986e-01,  1.36431947e-01,  2.56371975e-01,  ...,
             3.14844176e-02, -1.34930937e-02,  3.14844176e-02],
           [-2.98350781e-01, -1.93403140e-01,  3.91304523e-01,  ...,
            -1.34930937e-02,  6.14694245e-02, -2.84855980e-02],
           ...,
           [ 1.96401969e-01, -1.12293863e+00, -1.69265378e+00,  ...,
            -9.43028450e-01, -9.13043439e-01, -8.68065953e-01],
           [-1.33433133e-01, -1.06296861e+00, -1.52773619e+00,  ...,
            -7.48125911e-01, -1.01799107e+00, -9.88005996e-01],
           [-1.93403140e-01, -6.43178403e-01, -1.07796109e+00,  ...,
            -7.33133376e-01, -9.28035975e-01, -8.68065953e-01]]],


         [[[ 4.28572372e-02,  5.87302521e-02, -4.76180762e-03,  ...,
            -1.15872920e-01, -4.76180762e-03,  2.01587379e-01],
           [ 2.17460394e-01,  1.53968334e-01,  1.85714364e-01,  ...,
            -1.95237994e-01, -8.41268823e-02,  4.28572372e-02],
           [ 1.11112073e-02,  1.69841349e-01,  5.34920692e-01,  ...,
            -2.90476084e-01, -8.41268823e-02, -1.15872920e-01],
           ...,
           [ 5.34920692e-01, -1.16349196e+00, -1.95714283e+00,  ...,
            -4.49206233e-01, -5.28571427e-01, -3.85714173e-01],
           [ 1.69841349e-01, -1.05238092e+00, -1.63968253e+00,  ...,
            -2.74603069e-01, -6.07936502e-01, -4.80952382e-01],
           [ 7.46032670e-02, -5.28571427e-01, -9.73015904e-01,  ...,
            -2.74603069e-01, -3.85714173e-01, -3.69841158e-01]],

          [[ 1.93236828e-01,  1.61030710e-01,  4.83092964e-02,  ...,
            -1.28824353e-01, -1.61029361e-02,  1.61030710e-01],
           [ 3.05958241e-01,  2.09339887e-01,  2.41546005e-01,  ...,
            -1.28824353e-01, -3.22059989e-02,  6.44123554e-02],
           [ 4.83092964e-02,  1.77133769e-01,  6.11916363e-01,  ...,
            -1.77133530e-01,  3.22062373e-02, -4.83090580e-02],
           ...,
           [ 4.66988832e-01, -1.22383249e+00, -1.95652175e+00,  ...,
            -5.79710126e-01, -7.08534598e-01, -5.79710126e-01],
           [ 1.12721533e-01, -1.11111104e+00, -1.65861523e+00,  ...,
            -4.02576357e-01, -7.89049864e-01, -6.60225391e-01],
           [ 3.22062373e-02, -5.95813155e-01, -1.03059578e+00,  ...,
            -4.34782475e-01, -5.63607037e-01, -4.99194801e-01]],

          [[ 2.86356986e-01,  1.81409463e-01,  9.14544314e-02,  ...,
             1.49940979e-03, -4.34781015e-02,  4.64769229e-02],
           [ 2.86356986e-01,  1.36431947e-01,  2.56371975e-01,  ...,
             3.14844176e-02, -1.34930937e-02,  3.14844176e-02],
           [-2.98350781e-01, -1.93403140e-01,  3.91304523e-01,  ...,
            -1.34930937e-02,  6.14694245e-02, -2.84855980e-02],
           ...,
           [ 1.96401969e-01, -1.12293863e+00, -1.69265378e+00,  ...,
            -9.43028450e-01, -9.13043439e-01, -8.68065953e-01],
           [-1.33433133e-01, -1.06296861e+00, -1.52773619e+00,  ...,
            -7.48125911e-01, -1.01799107e+00, -9.88005996e-01],
           [-1.93403140e-01, -6.43178403e-01, -1.07796109e+00,  ...,
            -7.33133376e-01, -9.28035975e-01, -8.68065953e-01]]]]],
       device='cuda:0') torch.Size([1, 7, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0783 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 129, vnnlib ID: 129 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.31356716, -13.91007519,  -9.13539219,  -8.59541893,  -8.22070026,
          -8.21194839, -10.18828583, -10.88986969, -10.20756531, -12.20699596]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [584]; unstable size 584; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 263, 1, 584] with unstable size 262 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 584] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 584] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [262]; unstable size 262; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 262] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 262] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.54147208,  3.51587963, -0.48492050, -0.11444473, -1.27845073,
          0.64233279,  1.06292808,  0.06253465,  1.78522778]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.31356716, -13.91007519,  -9.13539219,  -8.59541893,  -8.22070026,
          -8.21194839, -10.18828583, -10.88986969, -10.20756531, -12.20699596]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.32136536, -13.92663002,  -9.13717842,  -8.60724545,  -8.21953201,
           -8.22270298, -10.20281887, -10.89065933, -10.21816635, -12.22472954],
         [ -9.32136536, -13.92663002,  -9.13717842,  -8.60724545,  -8.21953201,
           -8.22270298, -10.20281887, -10.89065933, -10.21816635, -12.22472954]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.09866238,  0.91447544,  0.38454247, -0.00317097]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0050 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0726 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 130, vnnlib ID: 130 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.37966061, -10.86174870,  -6.27118492,  -7.18504333,  -4.88041210,
          -7.02919436,  -7.02008009,  -5.68175220, -12.22475624,  -9.74924088]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [468]; unstable size 468; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 198, 1, 468] with unstable size 197 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 468] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 468] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [197]; unstable size 197; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 197] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 197] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.92446530,  1.83843052, -1.80397654, -0.25452489, -3.28706479,
         -1.12619352, -2.72712851,  3.37554145,  1.23327696]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.37966061, -10.86174870,  -6.27118492,  -7.18504333,  -4.88041210,
          -7.02919436,  -7.02008009,  -5.68175220, -12.22475624,  -9.74924088]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.37965965, -10.86174679,  -6.27118492,  -7.18504381,  -4.88041258,
           -7.02919531,  -7.02007914,  -5.68175268, -12.22475624,  -9.74924088],
         [ -9.37965965, -10.86174679,  -6.27118492,  -7.18504381,  -4.88041258,
           -7.02919531,  -7.02007914,  -5.68175268, -12.22475624,  -9.74924088]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.75801039,  0.15584850, -2.14878273, -0.00911617, -1.34744263]]],
       device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]],


         [[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]],


         [[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]],


         [[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]],


         [[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0818 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 131, vnnlib ID: 131 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.35881138, -13.11242390,  -9.13916874, -10.32992744,  -9.78460979,
         -10.37751198, -11.98755741, -12.49197388,  -5.29605007, -12.74240780]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [574]; unstable size 574; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 193, 1, 574] with unstable size 192 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 574] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 574] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [192]; unstable size 192; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 192] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 192] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.78351951, 6.23856449, 2.09941626, 3.41462421, 2.79624510, 3.32999039,
         5.10516310, 5.41959763, 6.04746437]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0548 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 132, vnnlib ID: 132 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.14653015,  -8.83935356, -17.06118393, -16.39709473, -15.91677952,
         -18.22977066, -16.70629501, -16.62640762, -11.32539654,  -9.82044125]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [660]; unstable size 660; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 143, 1, 660] with unstable size 142 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 660] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 660] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [142]; unstable size 142; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 142] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 142] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.91259813,  6.46374846,  5.83736420,  5.29915905,  7.56130886,
          6.20057487,  5.96402264,  1.06313705, -0.07201350]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.14653015,  -8.83935356, -17.06118393, -16.39709473, -15.91677952,
         -18.22977066, -16.70629501, -16.62640762, -11.32539654,  -9.82044125]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.17it/s]100%|██████████| 1/1 [00:00<00:00,  9.16it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.66808319,  -8.80762291, -16.54941559, -15.81319427, -15.26967907,
          -17.61644936, -16.17386246, -15.95940590, -11.03059864,  -9.22308636]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.41546345]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1118 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 39.909873962402344
alpha/beta optimization time: 1.2000775337219238
initial alpha-crown bounds: tensor([[ 0.98155403,  6.54999447,  5.92335987,  5.37160492,  7.64936447,
          6.28046894,  6.04217911,  1.13449478, -0.02314544]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.023145437240600586
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.61466813087463
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.6146216392517
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.61459589004517
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.61457419395447
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.6145555973053
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.6145362854004
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 198.61451768875122
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 198.61449718475342
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 198.61447882652283
Verifying property 8 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.02314544]], device='cuda:0') need to verify.
Model prediction is: tensor([-11.14653015,  -8.83935356, -17.06118393, -16.39709473, -15.91677952,
        -18.22977066, -16.70629501, -16.62640762, -11.32539654,  -9.82044125],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.02314544]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 660
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 139
Node /15 input 0: size torch.Size([100]) unstable 12
-----------------
# of unstable neurons: 811
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011110305786132812
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.023144125938415527
10 lb beta sum: 0.0, worst -0.02314591407775879
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0526    transfer 0.0001    finalize 0.0001    func 0.0531    
Accumulated time: func 0.0531    prepare 0.0002    bound 0.0526    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 32] 
split level 1: [/input-12, 37] 
split level 2: [/input-8, 1436] 
split level 3: [/input-12, 25] 
split level 4: [/input-8, 796] 
split level 5: [/input-8, 1438] 
split level 6: [/input-12, 26] 
split level 7: [/input-8, 987] 
split level 8: [/input-12, 90] 
split level 9: [/input-12, 11] 
split level 10: [/input-8, 563] 
split level 11: [/input-8, 812] 
split level 12: [/input-8, 690] 
split level 13: [/input-8, 1076] 
split level 14: [/input-8, 821] 
split level 15: [/input-8, 169] 
split level 16: [/input-8, 1425] 
split level 17: [/input, 360] 
split level 18: [/input-12, 78] 
split level 19: [/input-12, 60] 
split level 20: [/input-8, 1646] 
split level 21: [/input-8, 788] 
split level 22: [/input-8, 1964] 
split level 23: [/input-8, 797] 
split level 24: [/input-8, 1326] 
split level 25: [/input, 1416] 
split level 26: [/input-8, 1322] 
split level 27: [/input-8, 1947] 
split level 28: [/input-8, 179] 
split level 29: [/input, 2454] 
split level 30: [/input, 364] 
split level 31: [/input, 2471] 
split level 32: [/input-8, 1519] 
split level 33: [/input-8, 787] 
split level 34: [/input, 420] 
split level 35: [/input, 3272] 
split level 36: [/input-8, 884] 
split level 37: [/input, 4065] 
split level 38: [/input, 3239] 
split level 39: [/input-8, 681] 
split level 40: [/input, 343] 
split level 41: [/input, 2184] 
split level 42: [/input, 1617] 
split level 43: [/input-8, 1962] 
split level 44: [/input-8, 1454] 
split level 45: [/input, 449] 
split level 46: [/input, 3269] 
split level 47: [/input-8, 1520] 
split level 48: [/input, 448] 
split level 49: [/input, 645] 
split level 50: [/input, 1495] 
split level 51: [/input-8, 1305] 
split level 52: [/input-8, 571] 
split level 53: [/input, 421] 
split level 54: [/input, 1431] 
split level 55: [/input, 4066] 
split level 56: [/input-8, 573] 
split level 57: [/input, 398] 
split level 58: [/input-8, 1289] 
split level 59: [/input-8, 1318] 
split level 60: [/input, 3287] 
split level 61: [/input, 3383] 
split level 62: [/input, 380] 
split level 63: [/input, 1404] 
split level 64: [/input, 1618] 
split level 65: [/input, 2121] 
split level 66: [/input, 1494] 
split level 67: [/input, 419] 
split level 68: [/input, 2469] 
split level 69: [/input, 404] 
split level 70: [/input, 422] 
split level 71: [/input-8, 570] 
split level 72: [/input, 2505] 
split level 73: [/input-8, 1508] 
split level 74: [/input, 2489] 
split level 75: [/input-8, 1505] 
split level 76: [/input, 3541] 
split level 77: [/input, 2266] 
split level 78: [/input, 1769] 
split level 79: [/input, 2507] 
split level 80: [/input, 3253] 
split level 81: [/input-8, 1353] 
split level 82: [/input, 2625] 
split level 83: [/input, 3221] 
split level 84: [/input, 3257] 
split level 85: [/input, 3527] 
split level 86: [/input, 3283] 
split level 87: [/input, 1447] 
split level 88: [/input-8, 2010] 
split level 89: [/input-8, 1039] 
split level 90: [/input-8, 540] 
split level 91: [/input, 1185] 
split level 92: [/input, 1500] 
split level 93: [/input, 2120] 
split level 94: [/input, 3166] 
split level 95: [/input, 2119] 
split level 96: [/input, 2200] 
split level 97: [/input, 4064] 
split level 98: [/input-8, 822] 
split level 99: [/input, 2504] 
split level 100: [/input, 110] 
split level 101: [/input, 1509] 
split level 102: [/input, 1367] 
split level 103: [/input, 3865] 
split level 104: [/input, 3219] 
split level 105: [/input, 3302] 
split level 106: [/input, 3385] 
split level 107: [/input, 929] 
split level 108: [/input, 4014] 
split level 109: [/input, 2538] 
split level 110: [/input, 1379] 
split level 111: [/input, 415] 
split level 112: [/input, 3547] 
split level 113: [/input-8, 679] 
split level 114: [/input, 3386] 
split level 115: [/input, 1451] 
split level 116: [/input, 3384] 
split level 117: [/input, 3542] 
split level 118: [/input, 1770] 
split level 119: [/input, 2530] 
split level 120: [/input, 1381] 
split level 121: [/input, 1403] 
split level 122: [/input, 2104] 
split level 123: [/input, 3284] 
split level 124: [/input, 41] 
split level 125: [/input, 227] 
split level 126: [/input, 3305] 
split level 127: [/input, 3291] 
split level 128: [/input, 3308] 
split level 129: [/input, 3282] 
split level 130: [/input, 3866] 
split level 131: [/input, 2523] 
split level 132: [/input, 373] 
split level 133: [/input, 3345] 
split level 134: [/input, 2346] 
split level 135: [/input, 3329] 
split level 136: [/input, 3150] 
split level 137: [/input, 3881] 
split level 138: [/input, 2534] 
split level 139: [/input-8, 546] 
split level 140: [/input, 2332] 
split level 141: [/input, 3556] 
split level 142: [/input, 2514] 
split level 143: [/input, 4067] 
split level 144: [/input, 4032] 
split level 145: [/input, 40] 
split level 146: [/input, 2345] 
split level 147: [/input, 2146] 
split level 148: [/input, 1335] 
split level 149: [/input, 3559] 
split level 150: [/input, 3868] 
split level 151: [/input, 2257] 
split level 152: [/input, 3884] 
split level 153: [/input, 3867] 
split level 154: [/input, 3915] 
split level 155: [/input, 2099] 
split level 156: [/input, 3883] 
split level 157: [/input, 2519] 
split level 158: [/input, 2155] 
split level 159: [/input, 2397] 
split level 160: [/input, 3304] 
split level 161: [/input, 3934] 
split level 162: [/input, 3165] 
split level 163: [/input, 3364] 
split level 164: [/input, 2329] 
split level 165: [/input-8, 1378] 
split level 166: [/input, 2539] 
split level 167: [/input, 2347] 
split level 168: [/input, 3864] 
split level 169: [/input-8, 1354] 
split level 170: [/input, 3199] 
split level 171: [/input, 2331] 
split level 172: [/input, 3330] 
split level 173: [/input, 3097] 
split level 174: [/input, 2348] 
split level 175: [/input, 3882] 
split level 176: [/input, 899] 
split level 177: [/input, 713] 
split level 178: [/input, 3863] 
split level 179: [/input, 3202] 
split level 180: [/input, 3870] 
split level 181: [/input, 3861] 
split level 182: [/input, 3363] 
split level 183: [/input, 3879] 
split level 184: [/input, 3354] 
split level 185: [/input, 3880] 
split level 186: [/input, 87] 
split level 187: [/input, 1775] 
split level 188: [/input, 3862] 
split level 189: [/input, 3296] 
split level 190: [/input, 3860] 
split level 191: [/input, 3332] 
split level 192: [/input, 2327] 
split level 193: [/input, 3349] 
split level 194: [/input, 1282] 
split level 195: [/input, 498] 
split level 196: [/input, 3398] 
split level 197: [/input, 2856] 
split level 198: [/input, 1515] 
split level 199: [/input, 2855] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.02312600612640381
10 lb beta sum: 0.0, worst -0.023123979568481445
Time: prepare 0.0118    bound 0.0989    transfer 0.0028    finalize 0.0031    func 0.1192    
Accumulated time: func 0.1723    prepare 0.0221    bound 0.1515    transfer 0.0029    finalize 0.0032    
all_split False
======================Cut inference begins======================
max lb tensor(0.22483754) min lb tensor(-0.02311862)
Number of Verified Splits: 17 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.011723756790161133 
BICCOS Cumulative time: 0.011723756790161133
Preprocessing time: 0.010592222213745117 Inference time: 0.0007266998291015625 Add cuts time: 0.0002205371856689453 Cut analysis time: 0.0001842975616455078
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.5182    set_bounds 0.0100    solve 0.1193    add 0.0105    
Accumulated time: pickout 0.0004    decision 0.5182    set_bounds 0.0100    solve 0.1193    add 0.0105    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([32]), tensor([-1.]), tensor([0]), tensor([-5.34985524e-21]), tensor([0]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([32]), tensor([1.]), tensor([0]), tensor([5.43109446e-11]), tensor([0]))}
Shallow branching resets to n domains:  2
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.1283351182937622

all verified at 0th iter
Time: prepare 0.0004    bound 0.0045    transfer 0.0001    finalize 0.0001    func 0.0051    
Accumulated time: func 0.1775    prepare 0.0225    bound 0.1560    transfer 0.0030    finalize 0.0034    
After pruning, left:  0

Back to Regular BaB

Result: safe in 2.3474 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 133, vnnlib ID: 133 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.25358391, -24.01944351, -13.62016106, -15.25064659, -19.34745598,
         -15.90201569, -19.20198250, -17.42230415, -21.89736557, -21.49999237]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [554]; unstable size 554; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 98, 1, 554] with unstable size 97 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 3, 1, 554] with unstable size 2 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 554] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [97]; unstable size 97; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 3, 1, 97] with unstable size 2 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 97] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [2]; unstable size 2; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 2] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.17918015, 9.69885063, 1.01258540, 5.11245012, 1.56947899, 4.91068316,
         3.15387392, 7.60085821, 7.21997833]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0711 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 134, vnnlib ID: 134 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.00686455, -14.29141140, -14.37695026, -15.86271286, -15.28532314,
         -17.60468292, -14.91024494, -17.65866089, -10.37097645, -14.77221203]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [752]; unstable size 752; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 224, 1, 752] with unstable size 223 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 752] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 752] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [223]; unstable size 223; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 223] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 223] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.77094555,  1.88772810,  3.21973896,  2.86656523,  4.79594135,
          2.18563199,  4.89809752, -1.79894876,  2.22324061]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.00686455, -14.29141140, -14.37695026, -15.86271286, -15.28532314,
         -17.60468292, -14.91024494, -17.65866089, -10.37097645, -14.77221203]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.00686455, -14.29141140, -14.37695026, -15.86271286, -15.28532314,
          -17.60468292, -14.91024494, -17.65866089, -10.37097645, -14.77221203]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.63588810]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.15396857,  1.01111114,  1.01111114,  ...,  1.02698421,
             1.04285717,  1.10634947],
           [ 1.02698421,  0.94761908,  0.94761908,  ...,  1.12222254,
             1.12222254,  1.16984153],
           [ 0.99523818,  0.91587305,  0.86825401,  ...,  1.12222254,
             1.13809550,  1.16984153],
           ...,
           [-0.14761895, -0.41746020, -0.43333322,  ..., -0.36984116,
            -0.33809513, -0.41746020],
           [-0.30634910, -0.56031746, -0.57619047,  ..., -0.68730158,
            -0.54444444, -0.36984116],
           [-0.22698402, -0.33809513, -0.40158719,  ..., -0.59206349,
            -0.32222211, -0.14761895]],

          [[ 1.20772982,  1.06280196,  1.06280196,  ...,  1.07890511,
             1.09500813,  1.15942061],
           [ 1.07890511,  0.99838978,  0.99838978,  ...,  1.17552364,
             1.17552364,  1.22383285],
           [ 1.04669893,  0.96618366,  0.91787446,  ...,  1.17552364,
             1.19162667,  1.22383285],
           ...,
           [-0.11272129, -0.38647330, -0.40257636,  ..., -0.33816412,
            -0.30595800, -0.38647330],
           [-0.27375188, -0.53140092, -0.54750401,  ..., -0.66022539,
            -0.51529789, -0.33816412],
           [-0.19323659, -0.30595800, -0.37037024,  ..., -0.56360704,
            -0.28985494, -0.11272129]],

          [[ 1.26086998,  1.12593722,  1.12593722,  ...,  1.14092970,
             1.15592217,  1.21589243],
           [ 1.14092970,  1.06596720,  1.06596720,  ...,  1.23088503,
             1.23088503,  1.27586246],
           [ 1.11094475,  1.03598225,  0.99100471,  ...,  1.23088503,
             1.24587750,  1.27586246],
           ...,
           [ 0.03148442, -0.22338814, -0.23838064,  ..., -0.17841063,
            -0.14842562, -0.22338814],
           [-0.11844061, -0.35832080, -0.37331331,  ..., -0.47826082,
            -0.34332830, -0.17841063],
           [-0.04347810, -0.14842562, -0.20839565,  ..., -0.38830581,
            -0.13343313,  0.03148442]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0801 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 135, vnnlib ID: 135 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.44892406,  -4.04770756, -11.04793358,  -9.86121178,  -9.30945015,
         -10.61656761, -11.13577747,  -9.78641891,  -8.20079136,  -4.34282255]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [511]; unstable size 511; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 204, 1, 511] with unstable size 203 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 511] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 511] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [203]; unstable size 203; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 203] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 203] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.79137325,  4.81029177,  3.58750963,  3.09708118,  4.12102699,
          5.00578594,  3.13694334,  2.81165600, -0.60362840]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.44892406,  -4.04770756, -11.04793358,  -9.86121178,  -9.30945015,
         -10.61656761, -11.13577747,  -9.78641891,  -8.20079136,  -4.34282255]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-8.17292595, -3.44921255, -9.58248615, -8.45668793, -7.94491386,
          -9.12796783, -9.80561256, -8.33679199, -7.18043041, -3.17307949]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.27613306]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0059 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0764 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 136, vnnlib ID: 136 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.25000286, -9.54972458, -6.18170929, -5.75074911, -6.05999041,
         -5.86923456, -7.27043962, -7.67426729, -6.16280842, -8.88309860]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [683]; unstable size 683; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 150, 1, 683] with unstable size 149 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 683] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 683] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [149]; unstable size 149; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 149] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 149] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.00514364, 1.08236074, 0.27113563, 0.77234685, 0.24157661, 1.78406549,
         1.89451599, 0.67536879, 3.36466646]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0722 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 137, vnnlib ID: 137 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.10846710, -8.76792812, -2.56949711, -3.15299773, -2.80712223,
         -3.16891909, -2.61646676, -4.73773241, -8.38235092, -7.32381153]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [508]; unstable size 508; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 298, 1, 508] with unstable size 297 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 508] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 508] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [297]; unstable size 297; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 297] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 297] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.63653505,  3.73463655, -1.26144505, -0.64267176, -1.08236945,
         -0.74575388,  0.71406746,  3.06178951,  2.80588961]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.10846710, -8.76792812, -2.56949711, -3.15299773, -2.80712223,
         -3.16891909, -2.61646676, -4.73773241, -8.38235092, -7.32381153]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.10846806, -8.76792812, -2.56949711, -3.15299821, -2.80712175,
          -3.16891956, -2.61646700, -4.73773289, -8.38235092, -7.32381201],
         [-6.10846806, -8.76792812, -2.56949711, -3.15299821, -2.80712175,
          -3.16891956, -2.61646700, -4.73773289, -8.38235092, -7.32381201]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.04696989,  0.53653121,  0.19065475,  0.55245256]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.24285710, -1.30634916, -1.09999990,  ...,  0.05873025,
            -0.46507925, -0.57619047],
           [-1.11587298, -1.16349196, -1.09999990,  ..., -0.24285704,
            -0.65555555, -0.79841268],
           [-1.19523799, -1.13174593, -0.84603173,  ..., -0.14761895,
            -0.84603173, -0.75079364],
           ...,
           [ 1.15396857, -0.57619047, -1.44920623,  ..., -0.70317459,
            -0.68730158, -0.48095238],
           [ 1.63015902,  0.58253974, -0.02063482,  ..., -0.86190474,
            -0.79841268, -0.43333322],
           [ 1.67777801,  1.39206374,  1.16984153,  ..., -1.03650784,
            -1.08412695, -0.89365077]],

          [[-1.11111104, -1.20772946, -1.01449275,  ...,  0.08051541,
            -0.53140092, -0.62801927],
           [-1.01449275, -1.06280184, -0.98228657,  ..., -0.22544271,
            -0.64412236, -0.77294683],
           [-1.11111104, -1.01449275, -0.72463763,  ..., -0.11272129,
            -0.77294683, -0.72463763],
           ...,
           [ 0.99838978, -0.66022539, -1.30434775,  ..., -0.78904986,
            -0.85346210, -0.66022539],
           [ 1.52979100,  0.43478271, -0.06441211,  ..., -0.80515295,
            -0.77294683, -0.57971013],
           [ 1.64251232,  1.27214205,  0.95008057,  ..., -0.93397743,
            -1.04669881, -0.96618354]],

          [[-0.55322337, -0.70314842, -0.55322337,  ...,  0.60119957,
            -0.17841063, -0.23838064],
           [-0.52323836, -0.55322337, -0.46326834,  ...,  0.33133450,
            -0.17841063, -0.35832080],
           [-0.64317840, -0.58320838, -0.22338814,  ...,  0.40629703,
            -0.20839565, -0.28335828],
           ...,
           [ 1.08095968, -0.31334329, -0.65817088,  ..., -0.35832080,
            -0.56821585, -0.38830581],
           [ 1.53073502,  0.60119957,  0.40629703,  ..., -0.26836565,
            -0.35832080, -0.22338814],
           [ 1.66566753,  1.26086998,  1.03598225,  ..., -0.31334329,
            -0.55322337, -0.52323836]]],


         [[[-1.24285710, -1.30634916, -1.09999990,  ...,  0.05873025,
            -0.46507925, -0.57619047],
           [-1.11587298, -1.16349196, -1.09999990,  ..., -0.24285704,
            -0.65555555, -0.79841268],
           [-1.19523799, -1.13174593, -0.84603173,  ..., -0.14761895,
            -0.84603173, -0.75079364],
           ...,
           [ 1.15396857, -0.57619047, -1.44920623,  ..., -0.70317459,
            -0.68730158, -0.48095238],
           [ 1.63015902,  0.58253974, -0.02063482,  ..., -0.86190474,
            -0.79841268, -0.43333322],
           [ 1.67777801,  1.39206374,  1.16984153,  ..., -1.03650784,
            -1.08412695, -0.89365077]],

          [[-1.11111104, -1.20772946, -1.01449275,  ...,  0.08051541,
            -0.53140092, -0.62801927],
           [-1.01449275, -1.06280184, -0.98228657,  ..., -0.22544271,
            -0.64412236, -0.77294683],
           [-1.11111104, -1.01449275, -0.72463763,  ..., -0.11272129,
            -0.77294683, -0.72463763],
           ...,
           [ 0.99838978, -0.66022539, -1.30434775,  ..., -0.78904986,
            -0.85346210, -0.66022539],
           [ 1.52979100,  0.43478271, -0.06441211,  ..., -0.80515295,
            -0.77294683, -0.57971013],
           [ 1.64251232,  1.27214205,  0.95008057,  ..., -0.93397743,
            -1.04669881, -0.96618354]],

          [[-0.55322337, -0.70314842, -0.55322337,  ...,  0.60119957,
            -0.17841063, -0.23838064],
           [-0.52323836, -0.55322337, -0.46326834,  ...,  0.33133450,
            -0.17841063, -0.35832080],
           [-0.64317840, -0.58320838, -0.22338814,  ...,  0.40629703,
            -0.20839565, -0.28335828],
           ...,
           [ 1.08095968, -0.31334329, -0.65817088,  ..., -0.35832080,
            -0.56821585, -0.38830581],
           [ 1.53073502,  0.60119957,  0.40629703,  ..., -0.26836565,
            -0.35832080, -0.22338814],
           [ 1.66566753,  1.26086998,  1.03598225,  ..., -0.31334329,
            -0.55322337, -0.52323836]]],


         [[[-1.24285710, -1.30634916, -1.09999990,  ...,  0.05873025,
            -0.46507925, -0.57619047],
           [-1.11587298, -1.16349196, -1.09999990,  ..., -0.24285704,
            -0.65555555, -0.79841268],
           [-1.19523799, -1.13174593, -0.84603173,  ..., -0.14761895,
            -0.84603173, -0.75079364],
           ...,
           [ 1.15396857, -0.57619047, -1.44920623,  ..., -0.70317459,
            -0.68730158, -0.48095238],
           [ 1.63015902,  0.58253974, -0.02063482,  ..., -0.86190474,
            -0.79841268, -0.43333322],
           [ 1.67777801,  1.39206374,  1.16984153,  ..., -1.03650784,
            -1.08412695, -0.89365077]],

          [[-1.11111104, -1.20772946, -1.01449275,  ...,  0.08051541,
            -0.53140092, -0.62801927],
           [-1.01449275, -1.06280184, -0.98228657,  ..., -0.22544271,
            -0.64412236, -0.77294683],
           [-1.11111104, -1.01449275, -0.72463763,  ..., -0.11272129,
            -0.77294683, -0.72463763],
           ...,
           [ 0.99838978, -0.66022539, -1.30434775,  ..., -0.78904986,
            -0.85346210, -0.66022539],
           [ 1.52979100,  0.43478271, -0.06441211,  ..., -0.80515295,
            -0.77294683, -0.57971013],
           [ 1.64251232,  1.27214205,  0.95008057,  ..., -0.93397743,
            -1.04669881, -0.96618354]],

          [[-0.55322337, -0.70314842, -0.55322337,  ...,  0.60119957,
            -0.17841063, -0.23838064],
           [-0.52323836, -0.55322337, -0.46326834,  ...,  0.33133450,
            -0.17841063, -0.35832080],
           [-0.64317840, -0.58320838, -0.22338814,  ...,  0.40629703,
            -0.20839565, -0.28335828],
           ...,
           [ 1.08095968, -0.31334329, -0.65817088,  ..., -0.35832080,
            -0.56821585, -0.38830581],
           [ 1.53073502,  0.60119957,  0.40629703,  ..., -0.26836565,
            -0.35832080, -0.22338814],
           [ 1.66566753,  1.26086998,  1.03598225,  ..., -0.31334329,
            -0.55322337, -0.52323836]]],


         [[[-1.24285710, -1.30634916, -1.09999990,  ...,  0.05873025,
            -0.46507925, -0.57619047],
           [-1.11587298, -1.16349196, -1.09999990,  ..., -0.24285704,
            -0.65555555, -0.79841268],
           [-1.19523799, -1.13174593, -0.84603173,  ..., -0.14761895,
            -0.84603173, -0.75079364],
           ...,
           [ 1.15396857, -0.57619047, -1.44920623,  ..., -0.70317459,
            -0.68730158, -0.48095238],
           [ 1.63015902,  0.58253974, -0.02063482,  ..., -0.86190474,
            -0.79841268, -0.43333322],
           [ 1.67777801,  1.39206374,  1.16984153,  ..., -1.03650784,
            -1.08412695, -0.89365077]],

          [[-1.11111104, -1.20772946, -1.01449275,  ...,  0.08051541,
            -0.53140092, -0.62801927],
           [-1.01449275, -1.06280184, -0.98228657,  ..., -0.22544271,
            -0.64412236, -0.77294683],
           [-1.11111104, -1.01449275, -0.72463763,  ..., -0.11272129,
            -0.77294683, -0.72463763],
           ...,
           [ 0.99838978, -0.66022539, -1.30434775,  ..., -0.78904986,
            -0.85346210, -0.66022539],
           [ 1.52979100,  0.43478271, -0.06441211,  ..., -0.80515295,
            -0.77294683, -0.57971013],
           [ 1.64251232,  1.27214205,  0.95008057,  ..., -0.93397743,
            -1.04669881, -0.96618354]],

          [[-0.55322337, -0.70314842, -0.55322337,  ...,  0.60119957,
            -0.17841063, -0.23838064],
           [-0.52323836, -0.55322337, -0.46326834,  ...,  0.33133450,
            -0.17841063, -0.35832080],
           [-0.64317840, -0.58320838, -0.22338814,  ...,  0.40629703,
            -0.20839565, -0.28335828],
           ...,
           [ 1.08095968, -0.31334329, -0.65817088,  ..., -0.35832080,
            -0.56821585, -0.38830581],
           [ 1.53073502,  0.60119957,  0.40629703,  ..., -0.26836565,
            -0.35832080, -0.22338814],
           [ 1.66566753,  1.26086998,  1.03598225,  ..., -0.31334329,
            -0.55322337, -0.52323836]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0665 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 138, vnnlib ID: 138 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.98990536, -11.53243732,  -9.55218792,  -9.34306908,  -9.59223843,
         -10.21041489,  -9.89879131, -10.73451996, -10.49936199,  -8.82808018]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [578]; unstable size 578; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 189, 1, 578] with unstable size 188 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 578] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 578] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [188]; unstable size 188; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 188] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 188] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 9.28026438e-01, -4.45046067e-01, -7.57262468e-01, -6.84046268e-01,
         -8.51869583e-04, -3.69360447e-01,  3.41860294e-01,  4.21400547e-01,
         -1.54338741e+00]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.98990536, -11.53243732,  -9.55218792,  -9.34306908,  -9.59223843,
         -10.21041489,  -9.89879131, -10.73451996, -10.49936199,  -8.82808018]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.98990536, -11.53243637,  -9.55218792,  -9.34306812,  -9.59223938,
          -10.21041393,  -9.89879227, -10.73451996, -10.49936199,  -8.82808018],
         [ -8.98990536, -11.53243637,  -9.55218792,  -9.34306812,  -9.59223938,
          -10.21041393,  -9.89879227, -10.73451996, -10.49936199,  -8.82808018]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.56228256,  0.35316277,  0.60233402,  1.22050858,  0.90888691,
          -0.16182518]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.81428570, -0.87777776, -0.94126981,  ...,  0.16984135,
             0.72539687,  1.91587329],
           [-0.94126981, -1.06825387, -1.11587298,  ...,  0.10634929,
             0.67777783,  1.88412726],
           [-1.03650784, -1.11587298, -1.08412695,  ...,  0.09047628,
             0.66190481,  1.90000021],
           ...,
           [ 1.21746063,  1.29682565,  1.40793681,  ...,  0.70952386,
             1.15396857,  1.96349227],
           [ 1.93174624,  1.86825418,  1.86825418,  ...,  1.83650815,
             1.93174624,  2.03492069],
           [ 2.04285717,  2.04285717,  2.04285717,  ...,  2.04285717,
             2.04285717,  2.04285717]],

          [[-0.38647330, -0.41867942, -0.43478248,  ...,  0.59581327,
             0.96618366,  2.01288271],
           [-0.45088565, -0.49919480, -0.51529789,  ...,  0.54750413,
             0.93397754,  1.99677968],
           [-0.49919480, -0.53140092, -0.54750401,  ...,  0.51529801,
             0.91787446,  2.01288271],
           ...,
           [ 1.30434811,  1.38486338,  1.49758482,  ...,  0.98228669,
             1.28824508,  2.02898574],
           [ 1.99677968,  1.93236744,  1.93236744,  ...,  1.98067665,
             1.99677968,  2.07729483],
           [ 2.10950065,  2.10950065,  2.10950065,  ...,  2.10950065,
             2.10950065,  2.10950065]],

          [[ 0.25637197,  0.27136448,  0.21139447,  ...,  1.05097473,
             1.21589243,  2.02548766],
           [ 0.18140946,  0.24137947,  0.16641696,  ...,  0.99100471,
             1.17091501,  2.01049519],
           [ 0.13643195,  0.21139447,  0.06146942,  ...,  0.97601217,
             1.17091501,  2.01049519],
           ...,
           [ 1.45577252,  1.53073502,  1.65067506,  ...,  1.24587750,
             1.42578757,  2.04048014],
           [ 2.02548766,  1.98051023,  1.98051023,  ...,  2.01049519,
             2.01049519,  2.08545780],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  2.10045004,
             2.09295392,  2.09295392]]],


         [[[-0.81428570, -0.87777776, -0.94126981,  ...,  0.16984135,
             0.72539687,  1.91587329],
           [-0.94126981, -1.06825387, -1.11587298,  ...,  0.10634929,
             0.67777783,  1.88412726],
           [-1.03650784, -1.11587298, -1.08412695,  ...,  0.09047628,
             0.66190481,  1.90000021],
           ...,
           [ 1.21746063,  1.29682565,  1.40793681,  ...,  0.70952386,
             1.15396857,  1.96349227],
           [ 1.93174624,  1.86825418,  1.86825418,  ...,  1.83650815,
             1.93174624,  2.03492069],
           [ 2.04285717,  2.04285717,  2.04285717,  ...,  2.04285717,
             2.04285717,  2.04285717]],

          [[-0.38647330, -0.41867942, -0.43478248,  ...,  0.59581327,
             0.96618366,  2.01288271],
           [-0.45088565, -0.49919480, -0.51529789,  ...,  0.54750413,
             0.93397754,  1.99677968],
           [-0.49919480, -0.53140092, -0.54750401,  ...,  0.51529801,
             0.91787446,  2.01288271],
           ...,
           [ 1.30434811,  1.38486338,  1.49758482,  ...,  0.98228669,
             1.28824508,  2.02898574],
           [ 1.99677968,  1.93236744,  1.93236744,  ...,  1.98067665,
             1.99677968,  2.07729483],
           [ 2.10950065,  2.10950065,  2.10950065,  ...,  2.10950065,
             2.10950065,  2.10950065]],

          [[ 0.25637197,  0.27136448,  0.21139447,  ...,  1.05097473,
             1.21589243,  2.02548766],
           [ 0.18140946,  0.24137947,  0.16641696,  ...,  0.99100471,
             1.17091501,  2.01049519],
           [ 0.13643195,  0.21139447,  0.06146942,  ...,  0.97601217,
             1.17091501,  2.01049519],
           ...,
           [ 1.45577252,  1.53073502,  1.65067506,  ...,  1.24587750,
             1.42578757,  2.04048014],
           [ 2.02548766,  1.98051023,  1.98051023,  ...,  2.01049519,
             2.01049519,  2.08545780],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  2.10045004,
             2.09295392,  2.09295392]]],


         [[[-0.81428570, -0.87777776, -0.94126981,  ...,  0.16984135,
             0.72539687,  1.91587329],
           [-0.94126981, -1.06825387, -1.11587298,  ...,  0.10634929,
             0.67777783,  1.88412726],
           [-1.03650784, -1.11587298, -1.08412695,  ...,  0.09047628,
             0.66190481,  1.90000021],
           ...,
           [ 1.21746063,  1.29682565,  1.40793681,  ...,  0.70952386,
             1.15396857,  1.96349227],
           [ 1.93174624,  1.86825418,  1.86825418,  ...,  1.83650815,
             1.93174624,  2.03492069],
           [ 2.04285717,  2.04285717,  2.04285717,  ...,  2.04285717,
             2.04285717,  2.04285717]],

          [[-0.38647330, -0.41867942, -0.43478248,  ...,  0.59581327,
             0.96618366,  2.01288271],
           [-0.45088565, -0.49919480, -0.51529789,  ...,  0.54750413,
             0.93397754,  1.99677968],
           [-0.49919480, -0.53140092, -0.54750401,  ...,  0.51529801,
             0.91787446,  2.01288271],
           ...,
           [ 1.30434811,  1.38486338,  1.49758482,  ...,  0.98228669,
             1.28824508,  2.02898574],
           [ 1.99677968,  1.93236744,  1.93236744,  ...,  1.98067665,
             1.99677968,  2.07729483],
           [ 2.10950065,  2.10950065,  2.10950065,  ...,  2.10950065,
             2.10950065,  2.10950065]],

          [[ 0.25637197,  0.27136448,  0.21139447,  ...,  1.05097473,
             1.21589243,  2.02548766],
           [ 0.18140946,  0.24137947,  0.16641696,  ...,  0.99100471,
             1.17091501,  2.01049519],
           [ 0.13643195,  0.21139447,  0.06146942,  ...,  0.97601217,
             1.17091501,  2.01049519],
           ...,
           [ 1.45577252,  1.53073502,  1.65067506,  ...,  1.24587750,
             1.42578757,  2.04048014],
           [ 2.02548766,  1.98051023,  1.98051023,  ...,  2.01049519,
             2.01049519,  2.08545780],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  2.10045004,
             2.09295392,  2.09295392]]],


         [[[-0.81428570, -0.87777776, -0.94126981,  ...,  0.16984135,
             0.72539687,  1.91587329],
           [-0.94126981, -1.06825387, -1.11587298,  ...,  0.10634929,
             0.67777783,  1.88412726],
           [-1.03650784, -1.11587298, -1.08412695,  ...,  0.09047628,
             0.66190481,  1.90000021],
           ...,
           [ 1.21746063,  1.29682565,  1.40793681,  ...,  0.70952386,
             1.15396857,  1.96349227],
           [ 1.93174624,  1.86825418,  1.86825418,  ...,  1.83650815,
             1.93174624,  2.03492069],
           [ 2.04285717,  2.04285717,  2.04285717,  ...,  2.04285717,
             2.04285717,  2.04285717]],

          [[-0.38647330, -0.41867942, -0.43478248,  ...,  0.59581327,
             0.96618366,  2.01288271],
           [-0.45088565, -0.49919480, -0.51529789,  ...,  0.54750413,
             0.93397754,  1.99677968],
           [-0.49919480, -0.53140092, -0.54750401,  ...,  0.51529801,
             0.91787446,  2.01288271],
           ...,
           [ 1.30434811,  1.38486338,  1.49758482,  ...,  0.98228669,
             1.28824508,  2.02898574],
           [ 1.99677968,  1.93236744,  1.93236744,  ...,  1.98067665,
             1.99677968,  2.07729483],
           [ 2.10950065,  2.10950065,  2.10950065,  ...,  2.10950065,
             2.10950065,  2.10950065]],

          [[ 0.25637197,  0.27136448,  0.21139447,  ...,  1.05097473,
             1.21589243,  2.02548766],
           [ 0.18140946,  0.24137947,  0.16641696,  ...,  0.99100471,
             1.17091501,  2.01049519],
           [ 0.13643195,  0.21139447,  0.06146942,  ...,  0.97601217,
             1.17091501,  2.01049519],
           ...,
           [ 1.45577252,  1.53073502,  1.65067506,  ...,  1.24587750,
             1.42578757,  2.04048014],
           [ 2.02548766,  1.98051023,  1.98051023,  ...,  2.01049519,
             2.01049519,  2.08545780],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  2.10045004,
             2.09295392,  2.09295392]]],


         [[[-0.81428570, -0.87777776, -0.94126981,  ...,  0.16984135,
             0.72539687,  1.91587329],
           [-0.94126981, -1.06825387, -1.11587298,  ...,  0.10634929,
             0.67777783,  1.88412726],
           [-1.03650784, -1.11587298, -1.08412695,  ...,  0.09047628,
             0.66190481,  1.90000021],
           ...,
           [ 1.21746063,  1.29682565,  1.40793681,  ...,  0.70952386,
             1.15396857,  1.96349227],
           [ 1.93174624,  1.86825418,  1.86825418,  ...,  1.83650815,
             1.93174624,  2.03492069],
           [ 2.04285717,  2.04285717,  2.04285717,  ...,  2.04285717,
             2.04285717,  2.04285717]],

          [[-0.38647330, -0.41867942, -0.43478248,  ...,  0.59581327,
             0.96618366,  2.01288271],
           [-0.45088565, -0.49919480, -0.51529789,  ...,  0.54750413,
             0.93397754,  1.99677968],
           [-0.49919480, -0.53140092, -0.54750401,  ...,  0.51529801,
             0.91787446,  2.01288271],
           ...,
           [ 1.30434811,  1.38486338,  1.49758482,  ...,  0.98228669,
             1.28824508,  2.02898574],
           [ 1.99677968,  1.93236744,  1.93236744,  ...,  1.98067665,
             1.99677968,  2.07729483],
           [ 2.10950065,  2.10950065,  2.10950065,  ...,  2.10950065,
             2.10950065,  2.10950065]],

          [[ 0.25637197,  0.27136448,  0.21139447,  ...,  1.05097473,
             1.21589243,  2.02548766],
           [ 0.18140946,  0.24137947,  0.16641696,  ...,  0.99100471,
             1.17091501,  2.01049519],
           [ 0.13643195,  0.21139447,  0.06146942,  ...,  0.97601217,
             1.17091501,  2.01049519],
           ...,
           [ 1.45577252,  1.53073502,  1.65067506,  ...,  1.24587750,
             1.42578757,  2.04048014],
           [ 2.02548766,  1.98051023,  1.98051023,  ...,  2.01049519,
             2.01049519,  2.08545780],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  2.10045004,
             2.09295392,  2.09295392]]],


         [[[-0.81428570, -0.87777776, -0.94126981,  ...,  0.16984135,
             0.72539687,  1.91587329],
           [-0.94126981, -1.06825387, -1.11587298,  ...,  0.10634929,
             0.67777783,  1.88412726],
           [-1.03650784, -1.11587298, -1.08412695,  ...,  0.09047628,
             0.66190481,  1.90000021],
           ...,
           [ 1.21746063,  1.29682565,  1.40793681,  ...,  0.70952386,
             1.15396857,  1.96349227],
           [ 1.93174624,  1.86825418,  1.86825418,  ...,  1.83650815,
             1.93174624,  2.03492069],
           [ 2.04285717,  2.04285717,  2.04285717,  ...,  2.04285717,
             2.04285717,  2.04285717]],

          [[-0.38647330, -0.41867942, -0.43478248,  ...,  0.59581327,
             0.96618366,  2.01288271],
           [-0.45088565, -0.49919480, -0.51529789,  ...,  0.54750413,
             0.93397754,  1.99677968],
           [-0.49919480, -0.53140092, -0.54750401,  ...,  0.51529801,
             0.91787446,  2.01288271],
           ...,
           [ 1.30434811,  1.38486338,  1.49758482,  ...,  0.98228669,
             1.28824508,  2.02898574],
           [ 1.99677968,  1.93236744,  1.93236744,  ...,  1.98067665,
             1.99677968,  2.07729483],
           [ 2.10950065,  2.10950065,  2.10950065,  ...,  2.10950065,
             2.10950065,  2.10950065]],

          [[ 0.25637197,  0.27136448,  0.21139447,  ...,  1.05097473,
             1.21589243,  2.02548766],
           [ 0.18140946,  0.24137947,  0.16641696,  ...,  0.99100471,
             1.17091501,  2.01049519],
           [ 0.13643195,  0.21139447,  0.06146942,  ...,  0.97601217,
             1.17091501,  2.01049519],
           ...,
           [ 1.45577252,  1.53073502,  1.65067506,  ...,  1.24587750,
             1.42578757,  2.04048014],
           [ 2.02548766,  1.98051023,  1.98051023,  ...,  2.01049519,
             2.01049519,  2.08545780],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  2.10045004,
             2.09295392,  2.09295392]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0408 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 139, vnnlib ID: 139 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-7.46985912, -9.78631687, -3.83598518, -5.51694536, -3.54354000,
         -5.34781790, -2.52311063, -5.68112326, -9.51543331, -9.21476460]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [439]; unstable size 439; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 276, 1, 439] with unstable size 275 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 439] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 439] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [275]; unstable size 275; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 275] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 275] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.63732100,  4.43945456, -0.32903957,  1.63714910, -0.59455442,
          1.22534406,  1.17066109,  4.56741524,  4.21444464]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-7.46985912, -9.78631687, -3.83598518, -5.51694536, -3.54354000,
         -5.34781790, -2.52311063, -5.68112326, -9.51543331, -9.21476460]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.97it/s]100%|██████████| 1/1 [00:00<00:00,  8.97it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.29665041, -9.85951042, -3.74907804, -5.51449394, -3.18303251,
          -5.30622292, -2.97571468, -5.53970671, -9.34093189, -9.30280685],
         [-7.29665041, -9.85951042, -3.74907804, -5.51449394, -3.18303251,
          -5.30622292, -2.97571468, -5.53970671, -9.34093189, -9.30280685]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.77336335, 0.20731783]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1143 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 19.83037567138672
alpha/beta optimization time: 1.186551809310913
initial alpha-crown bounds: tensor([[ 2.76347423,  4.57243490, -0.24465752,  1.68950558, -0.50626135,
          1.28860545,  1.25143027,  4.69473362,  4.32111025]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.5062613487243652
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.61705327033997
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.6170139312744
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.61699104309082
Verifying property 2 with 1 instances.
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.24465752]], device='cuda:0') need to verify.
Model prediction is: tensor([-7.46985912, -9.78631687, -3.83598518, -5.51694536, -3.54354000,
        -5.34781790, -2.52311063, -5.68112326, -9.51543331, -9.21476460],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.24465752]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 439
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 269
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 731
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010967254638671875
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.24465179443359375
10 lb beta sum: 0.0, worst -0.24466276168823242
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0530    transfer 0.0001    finalize 0.0001    func 0.0535    
Accumulated time: func 0.0535    prepare 0.0002    bound 0.0530    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 54] 
split level 1: [/input-12, 38] 
split level 2: [/input-12, 10] 
split level 3: [/input-12, 60] 
split level 4: [/input-12, 51] 
split level 5: [/input-12, 26] 
split level 6: [/input-12, 1] 
split level 7: [/input-12, 17] 
split level 8: [/input-12, 25] 
split level 9: [/input-12, 92] 
split level 10: [/input-12, 68] 
split level 11: [/input-8, 850] 
split level 12: [/input-12, 33] 
split level 13: [/input-8, 1828] 
split level 14: [/input-8, 923] 
split level 15: [/input-8, 932] 
split level 16: [/input-8, 88] 
split level 17: [/input-8, 95] 
split level 18: [/input-8, 859] 
split level 19: [/input-8, 1902] 
split level 20: [/input-8, 809] 
split level 21: [/input-8, 85] 
split level 22: [/input-8, 867] 
split level 23: [/input-8, 1370] 
split level 24: [/input-8, 1427] 
split level 25: [/input-8, 666] 
split level 26: [/input-8, 1362] 
split level 27: [/input-8, 674] 
split level 28: [/input-8, 988] 
split level 29: [/input-8, 292] 
split level 30: [/input-8, 1497] 
split level 31: [/input-8, 933] 
split level 32: [/input-8, 291] 
split level 33: [/input-8, 1357] 
split level 34: [/input-8, 985] 
split level 35: [/input-8, 485] 
split level 36: [/input-8, 682] 
split level 37: [/input-8, 1829] 
split level 38: [/input-8, 858] 
split level 39: [/input-8, 522] 
split level 40: [/input-8, 491] 
split level 41: [/input-8, 1364] 
split level 42: [/input-8, 660] 
split level 43: [/input-8, 1307] 
split level 44: [/input-8, 80] 
split level 45: [/input-8, 531] 
split level 46: [/input-8, 1373] 
split level 47: [/input-8, 542] 
split level 48: [/input-8, 1019] 
split level 49: [/input-8, 1021] 
split level 50: [/input-8, 989] 
split level 51: [/input-8, 994] 
split level 52: [/input-8, 1894] 
split level 53: [/input-8, 1306] 
split level 54: [/input-8, 2008] 
split level 55: [/input-8, 1876] 
split level 56: [/input-8, 1873] 
split level 57: [/input-8, 541] 
split level 58: [/input-8, 1910] 
split level 59: [/input-8, 1426] 
split level 60: [/input-8, 1428] 
split level 61: [/input, 1674] 
split level 62: [/input-8, 427] 
split level 63: [/input-8, 66] 
split level 64: [/input-8, 110] 
split level 65: [/input-8, 1429] 
split level 66: [/input-8, 1886] 
split level 67: [/input-8, 1486] 
split level 68: [/input-8, 1495] 
split level 69: [/input-8, 530] 
split level 70: [/input-8, 89] 
split level 71: [/input-8, 817] 
split level 72: [/input-8, 972] 
split level 73: [/input-8, 1515] 
split level 74: [/input-8, 1420] 
split level 75: [/input-8, 918] 
split level 76: [/input-8, 1012] 
split level 77: [/input-8, 1301] 
split level 78: [/input-8, 307] 
split level 79: [/input-8, 1874] 
split level 80: [/input-8, 1291] 
split level 81: [/input-8, 1433] 
split level 82: [/input, 1603] 
split level 83: [/input-8, 1498] 
split level 84: [/input-8, 841] 
split level 85: [/input, 1671] 
split level 86: [/input-8, 1421] 
split level 87: [/input-8, 1506] 
split level 88: [/input-8, 1437] 
split level 89: [/input-8, 1885] 
split level 90: [/input-8, 973] 
split level 91: [/input-8, 1142] 
split level 92: [/input-8, 893] 
split level 93: [/input-8, 1869] 
split level 94: [/input-8, 1425] 
split level 95: [/input-8, 981] 
split level 96: [/input-8, 658] 
split level 97: [/input-8, 297] 
split level 98: [/input-8, 1139] 
split level 99: [/input, 1637] 
split level 100: [/input-8, 849] 
split level 101: [/input-8, 942] 
split level 102: [/input-8, 637] 
split level 103: [/input-8, 1011] 
split level 104: [/input, 482] 
split level 105: [/input-8, 1081] 
split level 106: [/input-8, 73] 
split level 107: [/input-8, 2024] 
split level 108: [/input-8, 953] 
split level 109: [/input-8, 1860] 
split level 110: [/input-8, 1911] 
split level 111: [/input-8, 565] 
split level 112: [/input-8, 1811] 
split level 113: [/input-8, 111] 
split level 114: [/input-8, 1417] 
split level 115: [/input-8, 916] 
split level 116: [/input-8, 65] 
split level 117: [/input, 1705] 
split level 118: [/input-8, 127] 
split level 119: [/input-8, 1352] 
split level 120: [/input-8, 1861] 
split level 121: [/input-8, 635] 
split level 122: [/input-8, 945] 
split level 123: [/input, 1669] 
split level 124: [/input-8, 1867] 
split level 125: [/input, 2169] 
split level 126: [/input-8, 495] 
split level 127: [/input-8, 2009] 
split level 128: [/input, 1721] 
split level 129: [/input-8, 1865] 
split level 130: [/input-8, 494] 
split level 131: [/input, 1641] 
split level 132: [/input-8, 471] 
split level 133: [/input-8, 436] 
split level 134: [/input, 1654] 
split level 135: [/input-8, 116] 
split level 136: [/input-8, 2000] 
split level 137: [/input, 2698] 
split level 138: [/input-8, 470] 
split level 139: [/input, 2291] 
split level 140: [/input-8, 2033] 
split level 141: [/input-8, 1302] 
split level 142: [/input-8, 559] 
split level 143: [/input-8, 936] 
split level 144: [/input, 1602] 
split level 145: [/input-8, 1940] 
split level 146: [/input, 2116] 
split level 147: [/input-8, 1533] 
split level 148: [/input-8, 1039] 
split level 149: [/input-8, 1881] 
split level 150: [/input-8, 1360] 
split level 151: [/input, 570] 
split level 152: [/input-8, 786] 
split level 153: [/input, 2115] 
split level 154: [/input, 2168] 
split level 155: [/input-8, 943] 
split level 156: [/input-8, 2032] 
split level 157: [/input-8, 699] 
split level 158: [/input, 2185] 
split level 159: [/input-8, 1787] 
split level 160: [/input-8, 1490] 
split level 161: [/input-8, 1788] 
split level 162: [/input-8, 1947] 
split level 163: [/input-8, 281] 
split level 164: [/input-8, 415] 
split level 165: [/input, 2699] 
split level 166: [/input, 2343] 
split level 167: [/input-8, 885] 
split level 168: [/input-8, 1465] 
split level 169: [/input, 676] 
split level 170: [/input-8, 1530] 
split level 171: [/input-8, 1120] 
split level 172: [/input-8, 905] 
split level 173: [/input-8, 1440] 
split level 174: [/input-8, 122] 
split level 175: [/input-8, 574] 
split level 176: [/input-8, 1350] 
split level 177: [/input, 293] 
split level 178: [/input, 1524] 
split level 179: [/input-8, 949] 
split level 180: [/input, 95] 
split level 181: [/input, 2345] 
split level 182: [/input-8, 1232] 
split level 183: [/input-8, 1872] 
split level 184: [/input, 2592] 
split level 185: [/input-8, 1448] 
split level 186: [/input-8, 1975] 
split level 187: [/input, 2700] 
split level 188: [/input, 2613] 
split level 189: [/input-8, 426] 
split level 190: [/input, 4] 
split level 191: [/input, 2260] 
split level 192: [/input, 1352] 
split level 193: [/input, 4049] 
split level 194: [/input-8, 961] 
split level 195: [/input, 647] 
split level 196: [/input-8, 1812] 
split level 197: [/input, 11] 
split level 198: [/input, 2359] 
split level 199: [/input, 3841] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.24462223052978516
10 lb beta sum: 0.0, worst -0.24462080001831055
Time: prepare 0.0121    bound 0.0983    transfer 0.0013    finalize 0.0030    func 0.1173    
Accumulated time: func 0.1708    prepare 0.0222    bound 0.1513    transfer 0.0014    finalize 0.0031    
all_split False
======================Cut inference begins======================
max lb tensor(0.41849947) min lb tensor(-0.24461031)
Number of Verified Splits: 5 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.010815143585205078 
BICCOS Cumulative time: 0.010815143585205078
Preprocessing time: 0.010236024856567383 Inference time: 0.0002276897430419922 Add cuts time: 9.202957153320312e-05 Cut analysis time: 0.0002593994140625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22439 (1), -0.22387 (1), -0.22345 (1), -0.22296 (1), -0.22291 (1), -0.22271 (1), -0.22150 (1), -0.22143 (1), -0.22069 (1), -0.22037 (1), -0.22016 (1), -0.21998 (1), -0.21990 (1), -0.21947 (1), -0.21886 (1), -0.21814 (1), -0.21752 (1), -0.21725 (1), -0.21681 (1), -0.21676 (1), 
Length of domains: 50
Time: pickout 0.0005    decision 0.5128    set_bounds 0.0158    solve 0.1174    add 0.0781    
Accumulated time: pickout 0.0005    decision 0.5128    set_bounds 0.0158    solve 0.1174    add 0.0781    
Current (lb-rhs): -0.22439146041870117
50 domains visited
Cumulative time: 0.8229212760925293

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 51] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 51] [/input-12, 10] [/input-12, 10] [/input-12, 10] 
split level 1: [/input-12, 1] [/input-12, 51] [/input-12, 1] [/input-12, 51] [/input-12, 51] [/input-12, 1] [/input-12, 1] [/input-12, 51] [/input-12, 51] [/input-12, 51] 
split level 2: [/input-12, 17] [/input-12, 1] [/input-12, 17] [/input-12, 17] [/input-12, 1] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 1] [/input-12, 1] 
split level 3: [/input-12, 92] [/input-12, 17] [/input-12, 92] [/input-12, 92] [/input-12, 17] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 17] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18611478805541992
10 lb beta sum: 0.7892306447029114, worst -0.1330764889717102
Time: prepare 0.0096    bound 0.1215    transfer 0.0008    finalize 0.0027    func 0.1373    
Accumulated time: func 0.3081    prepare 0.0320    bound 0.2728    transfer 0.0021    finalize 0.0058    
all_split False
======================Cut inference begins======================
max lb tensor(0.18590832) min lb tensor(-0.13278645)
Number of Verified Splits: 218 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.025688648223876953 
BICCOS Cumulative time: 0.03650379180908203
Preprocessing time: 0.012696266174316406 Inference time: 0.008809089660644531 Add cuts time: 0.0039882659912109375 Cut analysis time: 0.00019502639770507812
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0197    set_bounds 0.0124    solve 0.1375    add 0.0161    
Accumulated time: pickout 0.0016    decision 0.5325    set_bounds 0.0282    solve 0.2548    add 0.0942    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([10, 51]), tensor([-1., -1.]), tensor([0, 0]), tensor([-5.34985524e-21,  1.56262442e-01]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([10, 51]), tensor([-1.,  1.]), tensor([0, 0]), tensor([-5.34985524e-21,  2.12774798e-01]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([10, 51]), tensor([ 1., -1.]), tensor([0, 0]), tensor([-5.34985524e-21,  1.68941543e-01]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([10, 51]), tensor([1., 1.]), tensor([0, 0]), tensor([-5.34985524e-21,  1.94099471e-01]), tensor([0, 1]))}
Shallow branching resets to n domains:  4
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.06447458267211914

all verified at 0th iter
Time: prepare 0.0004    bound 0.0046    transfer 0.0001    finalize 0.0002    func 0.0053    
Accumulated time: func 0.3134    prepare 0.0324    bound 0.2775    transfer 0.0022    finalize 0.0059    
After pruning, left:  0

Back to Regular BaB


Properties batch 3, size 1
Remaining timeout: 197.34626698493958
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 197.3461947441101
Verifying property 4 with 1 instances.
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.50626135]], device='cuda:0') need to verify.
Model prediction is: tensor([-7.46985912, -9.78631687, -3.83598518, -5.51694536, -3.54354000,
        -5.34781790, -2.52311063, -5.68112326, -9.51543331, -9.21476460],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.50626135]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 439
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 269
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 731
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010991096496582031
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5062594413757324
10 lb beta sum: 0.0, worst -0.5062623023986816
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0522    transfer 0.0001    finalize 0.0001    func 0.0526    
Accumulated time: func 0.0526    prepare 0.0002    bound 0.0522    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 60] 
split level 1: [/input-12, 51] 
split level 2: [/input-12, 41] 
split level 3: [/input-12, 92] 
split level 4: [/input-12, 38] 
split level 5: [/input-12, 1] 
split level 6: [/input-12, 26] 
split level 7: [/input-12, 17] 
split level 8: [/input-12, 54] 
split level 9: [/input-12, 46] 
split level 10: [/input-12, 33] 
split level 11: [/input-12, 10] 
split level 12: [/input-8, 850] 
split level 13: [/input-8, 88] 
split level 14: [/input-8, 1427] 
split level 15: [/input-8, 95] 
split level 16: [/input-8, 923] 
split level 17: [/input-8, 932] 
split level 18: [/input-8, 859] 
split level 19: [/input-8, 292] 
split level 20: [/input-8, 988] 
split level 21: [/input-8, 660] 
split level 22: [/input-12, 68] 
split level 23: [/input-8, 289] 
split level 24: [/input-8, 867] 
split level 25: [/input-8, 809] 
split level 26: [/input-8, 1420] 
split level 27: [/input-8, 989] 
split level 28: [/input, 1603] 
split level 29: [/input-8, 858] 
split level 30: [/input-8, 1873] 
split level 31: [/input-12, 40] 
split level 32: [/input-8, 291] 
split level 33: [/input-8, 434] 
split level 34: [/input-8, 933] 
split level 35: [/input-8, 1828] 
split level 36: [/input-8, 1428] 
split level 37: [/input-8, 2008] 
split level 38: [/input, 1637] 
split level 39: [/input-8, 80] 
split level 40: [/input-8, 994] 
split level 41: [/input-8, 1437] 
split level 42: [/input-8, 297] 
split level 43: [/input-8, 972] 
split level 44: [/input-8, 981] 
split level 45: [/input-8, 307] 
split level 46: [/input, 1669] 
split level 47: [/input-8, 485] 
split level 48: [/input, 1674] 
split level 49: [/input-8, 1426] 
split level 50: [/input-8, 1005] 
split level 51: [/input-8, 985] 
split level 52: [/input-8, 1865] 
split level 53: [/input-8, 85] 
split level 54: [/input-8, 973] 
split level 55: [/input-8, 1497] 
split level 56: [/input-8, 1421] 
split level 57: [/input-8, 817] 
split level 58: [/input-8, 1429] 
split level 59: [/input-8, 302] 
split level 60: [/input-8, 1011] 
split level 61: [/input-8, 1829] 
split level 62: [/input-8, 1874] 
split level 63: [/input, 1654] 
split level 64: [/input-8, 436] 
split level 65: [/input-8, 849] 
split level 66: [/input-8, 2024] 
split level 67: [/input-8, 427] 
split level 68: [/input-8, 841] 
split level 69: [/input-8, 470] 
split level 70: [/input-8, 471] 
split level 71: [/input-8, 110] 
split level 72: [/input-8, 89] 
split level 73: [/input, 1671] 
split level 74: [/input-8, 522] 
split level 75: [/input-8, 1012] 
split level 76: [/input-8, 1142] 
split level 77: [/input-8, 281] 
split level 78: [/input-8, 674] 
split level 79: [/input-8, 293] 
split level 80: [/input-8, 1947] 
split level 81: [/input-8, 1019] 
split level 82: [/input-8, 565] 
split level 83: [/input-8, 1139] 
split level 84: [/input-8, 1486] 
split level 85: [/input, 1705] 
split level 86: [/input, 1721] 
split level 87: [/input-8, 116] 
split level 88: [/input-8, 1454] 
split level 89: [/input-8, 491] 
split level 90: [/input-8, 942] 
split level 91: [/input-8, 426] 
split level 92: [/input-8, 1857] 
split level 93: [/input-8, 1495] 
split level 94: [/input-8, 1425] 
split level 95: [/input, 2693] 
split level 96: [/input-8, 2000] 
split level 97: [/input-8, 415] 
split level 98: [/input-8, 1413] 
split level 99: [/input-8, 531] 
split level 100: [/input, 1556] 
split level 101: [/input, 2168] 
split level 102: [/input-8, 786] 
split level 103: [/input-8, 936] 
split level 104: [/input-8, 438] 
split level 105: [/input-8, 530] 
split level 106: [/input, 1767] 
split level 107: [/input, 2085] 
split level 108: [/input, 2613] 
split level 109: [/input-8, 1433] 
split level 110: [/input-8, 1452] 
split level 111: [/input-8, 997] 
split level 112: [/input-8, 916] 
split level 113: [/input, 2115] 
split level 114: [/input, 1641] 
split level 115: [/input, 2152] 
split level 116: [/input-8, 66] 
split level 117: [/input-8, 111] 
split level 118: [/input, 1734] 
split level 119: [/input, 2698] 
split level 120: [/input-8, 445] 
split level 121: [/input, 174] 
split level 122: [/input-8, 1417] 
split level 123: [/input, 2116] 
split level 124: [/input-8, 457] 
split level 125: [/input, 1735] 
split level 126: [/input, 300] 
split level 127: [/input-8, 65] 
split level 128: [/input, 482] 
split level 129: [/input, 2069] 
split level 130: [/input-8, 1533] 
split level 131: [/input, 1589] 
split level 132: [/input-8, 494] 
split level 133: [/input, 3862] 
split level 134: [/input-8, 495] 
split level 135: [/input-8, 1133] 
split level 136: [/input-8, 2033] 
split level 137: [/input, 2185] 
split level 138: [/input, 1718] 
split level 139: [/input-8, 1232] 
split level 140: [/input, 2150] 
split level 141: [/input, 2133] 
split level 142: [/input-8, 2032] 
split level 143: [/input-8, 1856] 
split level 144: [/input, 1602] 
split level 145: [/input-8, 1864] 
split level 146: [/input-8, 834] 
split level 147: [/input, 2291] 
split level 148: [/input-8, 1498] 
split level 149: [/input, 1100] 
split level 150: [/input-8, 1530] 
split level 151: [/input, 1765] 
split level 152: [/input-8, 1975] 
split level 153: [/input-8, 430] 
split level 154: [/input, 2090] 
split level 155: [/input-8, 1872] 
split level 156: [/input, 2699] 
split level 157: [/input-8, 1409] 
split level 158: [/input-8, 949] 
split level 159: [/input, 3861] 
split level 160: [/input-8, 2009] 
split level 161: [/input, 2108] 
split level 162: [/input, 2088] 
split level 163: [/input, 2592] 
split level 164: [/input, 2260] 
split level 165: [/input, 3892] 
split level 166: [/input, 282] 
split level 167: [/input, 3878] 
split level 168: [/input, 1352] 
split level 169: [/input-8, 635] 
split level 170: [/input, 46] 
split level 171: [/input, 3869] 
split level 172: [/input, 2101] 
split level 173: [/input-8, 1360] 
split level 174: [/input-8, 1787] 
split level 175: [/input-8, 73] 
split level 176: [/input, 4049] 
split level 177: [/input, 1524] 
split level 178: [/input-8, 1352] 
split level 179: [/input-8, 1490] 
split level 180: [/input, 1754] 
split level 181: [/input, 2182] 
split level 182: [/input, 1513] 
split level 183: [/input, 676] 
split level 184: [/input-8, 1120] 
split level 185: [/input, 1452] 
split level 186: [/input, 3357] 
split level 187: [/input-8, 1291] 
split level 188: [/input, 3448] 
split level 189: [/input, 3867] 
split level 190: [/input, 2203] 
split level 191: [/input, 2107] 
split level 192: [/input-8, 1008] 
split level 193: [/input, 647] 
split level 194: [/input, 2188] 
split level 195: [/input, 3560] 
split level 196: [/input, 3021] 
split level 197: [/input, 3386] 
split level 198: [/input, 1455] 
split level 199: [/input-8, 1839] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5061740875244141
10 lb beta sum: 0.0, worst -0.5061812400817871
Time: prepare 0.0123    bound 0.0985    transfer 0.0007    finalize 0.0028    func 0.1170    
Accumulated time: func 0.1697    prepare 0.0224    bound 0.1507    transfer 0.0008    finalize 0.0030    
all_split False
======================Cut inference begins======================
max lb tensor(0.40367365) min lb tensor(-0.50617123)
Number of Verified Splits: 3 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.011102676391601562 
BICCOS Cumulative time: 0.011102676391601562
Preprocessing time: 0.010286808013916016 Inference time: 0.000156402587890625 Add cuts time: 6.818771362304688e-05 Cut analysis time: 0.000591278076171875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.48849 (1), -0.48792 (1), -0.48754 (1), -0.48726 (1), -0.48583 (1), -0.48515 (1), -0.48433 (1), -0.48391 (1), -0.48386 (1), -0.48346 (1), -0.48335 (1), -0.48328 (1), -0.48165 (1), -0.48136 (1), -0.48094 (1), -0.48011 (1), -0.47983 (1), -0.47808 (1), -0.47807 (1), -0.47700 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5137    set_bounds 0.0097    solve 0.1171    add 0.1044    
Accumulated time: pickout 0.0003    decision 0.5137    set_bounds 0.0097    solve 0.1171    add 0.1044    
Current (lb-rhs): -0.4884915351867676
50 domains visited
Cumulative time: 0.8267838954925537

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 41] [/input-12, 41] [/input-12, 51] [/input-12, 51] [/input-12, 51] 
split level 1: [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 92] [/input-12, 41] [/input-12, 92] [/input-12, 92] [/input-12, 41] [/input-12, 41] [/input-12, 41] 
split level 2: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 92] [/input-12, 92] [/input-12, 92] 
split level 3: [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 1] [/input-12, 1] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4442739486694336
10 lb beta sum: 0.580084502696991, worst -0.4315527081489563
Time: prepare 0.0081    bound 0.1176    transfer 0.0025    finalize 0.0024    func 0.1333    
Accumulated time: func 0.3030    prepare 0.0308    bound 0.2683    transfer 0.0033    finalize 0.0054    
all_split False
======================Cut inference begins======================
max lb tensor(0.06436813) min lb tensor(-0.43132216)
Number of Verified Splits: 12 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.014405965805053711 
BICCOS Cumulative time: 0.025508642196655273
Preprocessing time: 0.012481927871704102 Inference time: 0.0005991458892822266 Add cuts time: 0.00028586387634277344 Cut analysis time: 0.0010390281677246094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23470 (2), -0.23435 (2), -0.23302 (2), -0.23191 (2), -0.23077 (2), -0.22997 (2), -0.22991 (2), -0.22731 (2), -0.22637 (2), -0.22625 (2), -0.22572 (2), -0.22555 (2), -0.22311 (2), -0.22236 (2), -0.22210 (2), -0.22113 (2), -0.21566 (2), -0.21550 (2), -0.21354 (2), -0.20685 (2), 
Length of domains: 50
Time: pickout 0.0012    decision 0.0219    set_bounds 0.0140    solve 0.1335    add 0.0905    
Accumulated time: pickout 0.0016    decision 0.5356    set_bounds 0.0236    solve 0.2506    add 0.1949    
Current (lb-rhs): -0.23469799757003784
100 domains visited
Cumulative time: 1.1026036739349365

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 51] [/input-12, 41] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 41] [/input-12, 92] 
split level 1: [/input-12, 92] [/input-12, 92] [/input-12, 41] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 92] [/input-12, 1] 
split level 2: [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 1] [/input-12, 17] 
split level 3: [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 17] [/input-12, 46] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2227463722229004
10 lb beta sum: 0.9273459911346436, worst -0.20668673515319824
Time: prepare 0.0071    bound 0.1193    transfer 0.0007    finalize 0.0022    func 0.1330    
Accumulated time: func 0.4359    prepare 0.0382    bound 0.3876    transfer 0.0040    finalize 0.0076    
all_split False
======================Cut inference begins======================
max lb tensor(0.14580679) min lb tensor(-0.19941211)
Number of Verified Splits: 61 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 9
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.016345739364624023 
BICCOS Cumulative time: 0.0418543815612793
Preprocessing time: 0.012234926223754883 Inference time: 0.0028810501098632812 Add cuts time: 0.0008246898651123047 Cut analysis time: 0.0004050731658935547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04815 (3), -0.04722 (3), -0.04629 (3), -0.04446 (3), -0.04413 (3), -0.04390 (3), -0.04357 (3), -0.04349 (3), -0.04334 (3), -0.04209 (3), -0.04107 (3), -0.04066 (3), -0.03809 (3), -0.03803 (3), -0.03509 (3), -0.03502 (3), -0.03434 (3), -0.03413 (3), -0.03267 (3), -0.03225 (3), 
Length of domains: 50
Time: pickout 0.0012    decision 0.0274    set_bounds 0.0165    solve 0.1331    add 0.0885    
Accumulated time: pickout 0.0027    decision 0.5630    set_bounds 0.0402    solve 0.3837    add 0.2834    
Current (lb-rhs): -0.04814785718917847
150 domains visited
Cumulative time: 1.3859188556671143

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] 
split level 1: [/input-12, 1] [/input-12, 17] [/input-12, 17] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 17] [/input-12, 17] [/input-12, 1] [/input-12, 1] 
split level 2: [/input-12, 17] [/input-12, 46] [/input-12, 46] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 46] [/input-12, 46] [/input-12, 17] [/input-12, 17] 
split level 3: [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 46] [/input-12, 10] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05287599563598633
10 lb beta sum: 0.7248145341873169, worst -0.03690314292907715
Time: prepare 0.0066    bound 0.1186    transfer 0.0007    finalize 0.0021    func 0.1307    
Accumulated time: func 0.5667    prepare 0.0451    bound 0.5062    transfer 0.0047    finalize 0.0097    
all_split False
======================Cut inference begins======================
max lb tensor(0.29559457) min lb tensor(-0.00390029)
Number of Verified Splits: 398 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 13
#cuts 4-6: 13
#cuts >= 20: 0
BICCOS time: 0.04094982147216797 
BICCOS Cumulative time: 0.08280420303344727
Preprocessing time: 0.012114524841308594 Inference time: 0.020320653915405273 Add cuts time: 0.00774073600769043 Cut analysis time: 0.0007739067077636719
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0010    decision 0.0195    set_bounds 0.0156    solve 0.1309    add 0.0246    
Accumulated time: pickout 0.0037    decision 0.5825    set_bounds 0.0558    solve 0.5146    add 0.3080    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
No domains left, MTS early stop!
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([41, 51]), tensor([-1., -1.]), tensor([0, 0]), tensor([-5.34985524e-21,  1.29910871e-01]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([41, 51]), tensor([-1.,  1.]), tensor([0, 0]), tensor([-5.34985524e-21,  1.85313150e-01]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([41, 51,  1]), tensor([ 1., -1., -1.]), tensor([0, 0, 0]), tensor([-5.34985524e-21,  1.48647204e-01,  5.45024425e-02]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([41, 51,  1, 92]), tensor([ 1., -1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([-5.34985524e-21,  1.48647204e-01,  1.35761812e-01,  1.36166736e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([41, 51,  1, 92]), tensor([ 1., -1.,  1.,  1.]), tensor([0, 0, 0, 0]), tensor([-5.34985524e-21,  1.48647204e-01,  1.35761812e-01,  5.62617034e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([41, 51, 92]), tensor([ 1.,  1., -1.]), tensor([0, 0, 0]), tensor([-5.34985524e-21,  1.67331144e-01,  1.41800091e-01]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([41, 51, 92,  1]), tensor([ 1.,  1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([-5.34985524e-21,  1.67331144e-01,  9.29244608e-02,  5.78566641e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([41, 51, 92,  1]), tensor([1., 1., 1., 1.]), tensor([0, 0, 0, 0]), tensor([-5.34985524e-21,  1.67331144e-01,  9.29244608e-02,  6.04489893e-02]), tensor([0, 1, 2, 3]))}
Shallow branching resets to n domains:  8
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.32529163360595703
10 lb beta sum: 2.1049888134002686, worst -0.3018186092376709
Time: prepare 0.0004    bound 0.1250    transfer 0.0002    finalize 0.0002    func 0.1258    
Accumulated time: func 0.6925    prepare 0.0455    bound 0.6312    transfer 0.0049    finalize 0.0099    
After pruning, left:  2

Back to Regular BaB

BaB round 1
batch: 2
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 92] [/input-12, 92] 
split level 1: [/input-12, 1] [/input-12, 1] 
split level 2: [/input-12, 26] [/input-12, 26] 
split level 3: [/input-12, 17] [/input-12, 17] 
split level 4: [/input-12, 46] [/input-12, 33] 
split level 5: [/input-12, 33] [/input-12, 46] 
split level 6: [/input-12, 10] [/input-12, 10] 
cut re-enabled after branching node selection
0 lb beta sum: 1.317944049835205, worst -0.08894556760787964
10 lb beta sum: 1.3190902471542358, worst -0.08775204420089722
Time: prepare 0.0099    bound 0.1266    transfer 0.0015    finalize 0.0014    func 0.1412    
Accumulated time: func 0.8337    prepare 0.0558    bound 0.7578    transfer 0.0064    finalize 0.0113    
all_split False
======================Cut inference begins======================
max lb tensor(0.34541541) min lb tensor(-0.08725995)
Number of Verified Splits: 246 of 256
Stop inferencing: Max iteration reached.
Total number of valid cuts: 26.
#cuts 1-3: 13
#cuts 4-6: 13
#cuts >= 20: 0
BICCOS time: 0.0003838539123535156 
BICCOS Cumulative time: 0.08318805694580078
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08726 (7), -0.07200 (7), -0.03899 (7), -0.03201 (7), -0.02979 (7), -0.02331 (7), -0.01331 (7), -0.01069 (7), -0.00672 (7), -0.00424 (7), 
Length of domains: 10
Time: pickout 0.0005    decision 0.0208    set_bounds 0.0190    solve 0.1420    add 0.0008    
Accumulated time: pickout 0.0042    decision 0.6033    set_bounds 0.0748    solve 0.6565    add 0.3088    
Current (lb-rhs): -0.08725994825363159
160 domains visited
Cumulative time: 1.9478614330291748

BaB round 2
batch: 10
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] 
split level 1: [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] 
split level 2: [/input-8, 859] [/input-8, 988] [/input-8, 859] [/input-8, 859] [/input-8, 859] [/input-8, 859] [/input-8, 988] [/input-8, 859] [/input-8, 859] [/input-8, 859] 
split level 3: [/input-8, 867] [/input-8, 859] [/input-8, 291] [/input-8, 291] [/input-8, 291] [/input-8, 988] [/input-8, 859] [/input-8, 291] [/input-8, 291] [/input-8, 291] 
split level 4: [/input-8, 858] [/input-8, 291] [/input-8, 858] [/input-8, 858] [/input-8, 427] [/input-8, 858] [/input-8, 291] [/input-8, 858] [/input-8, 858] [/input-8, 281] 
cut re-enabled after branching node selection
0 lb beta sum: 1.254334807395935, worst -0.06504935026168823
10 lb beta sum: 1.254334807395935, worst -0.06465548276901245
Time: prepare 0.0145    bound 0.1308    transfer 0.0006    finalize 0.0017    func 0.1498    
Accumulated time: func 0.9835    prepare 0.0706    bound 0.8886    transfer 0.0071    finalize 0.0130    
all_split False
======================Cut inference begins======================
max lb tensor(0.36965829) min lb tensor(-0.06448334)
Number of Verified Splits: 291 of 320
Stop inferencing: Max iteration reached.
Total number of valid cuts: 26.
#cuts 1-3: 13
#cuts 4-6: 13
#cuts >= 20: 0
BICCOS time: 0.00040435791015625 
BICCOS Cumulative time: 0.08359241485595703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06448 (12), -0.06179 (12), -0.05758 (12), -0.05613 (12), -0.05462 (12), -0.05102 (12), -0.05005 (12), -0.04844 (12), -0.04716 (12), -0.04608 (12), -0.04192 (12), -0.04159 (12), -0.04014 (12), -0.03831 (12), -0.03562 (12), -0.03329 (12), -0.01188 (12), -0.01088 (12), -0.00966 (12), -0.00853 (12), 
Length of domains: 29
Time: pickout 0.0009    decision 0.0178    set_bounds 0.1851    solve 0.1499    add 0.0010    
Accumulated time: pickout 0.0051    decision 0.6211    set_bounds 0.2600    solve 0.8064    add 0.3098    
Current (lb-rhs): -0.06448334455490112
189 domains visited
Cumulative time: 2.3050081729888916

BaB round 3
batch: 29
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 809] [/input-8, 809] [/input-8, 988] [/input-8, 809] [/input-8, 809] [/input-8, 988] [/input-8, 809] [/input-8, 809] [/input-8, 988] [/input-8, 809] 
split level 1: [/input-8, 994] [/input-8, 858] [/input-8, 1873] [/input-8, 994] [/input-8, 994] [/input-8, 1873] [/input-8, 994] [/input-8, 994] [/input-12, 40] [/input-8, 994] 
split level 2: [/input-8, 858] [/input-8, 994] [/input-12, 40] [/input-8, 858] [/input-8, 858] [/input-12, 40] [/input-8, 858] [/input-8, 858] [/input-8, 427] [/input-8, 858] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2338627576828003, worst -0.04870814085006714
10 lb beta sum: 1.2338627576828003, worst -0.04849451780319214
Time: prepare 0.0106    bound 0.1338    transfer 0.0009    finalize 0.0015    func 0.1483    
Accumulated time: func 1.1318    prepare 0.0814    bound 1.0225    transfer 0.0079    finalize 0.0146    
all_split False
======================Cut inference begins======================
max lb tensor(0.03160316) min lb tensor(-0.04841584)
Number of Verified Splits: 152 of 232
Stop inferencing: Max iteration reached.
Total number of valid cuts: 26.
#cuts 1-3: 13
#cuts 4-6: 13
#cuts >= 20: 0
BICCOS time: 0.00038695335388183594 
BICCOS Cumulative time: 0.08397936820983887
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04842 (15), -0.04576 (15), -0.04570 (15), -0.04459 (15), -0.04212 (15), -0.04167 (15), -0.04166 (15), -0.04115 (15), -0.04043 (15), -0.03867 (15), -0.03797 (15), -0.03755 (15), -0.03725 (15), -0.03636 (15), -0.03628 (15), -0.03617 (15), -0.03432 (15), -0.03422 (15), -0.03368 (15), -0.03321 (15), 
Length of domains: 80
Time: pickout 0.0016    decision 0.0126    set_bounds 0.0160    solve 0.1484    add 0.0021    
Accumulated time: pickout 0.0067    decision 0.6337    set_bounds 0.2759    solve 0.9548    add 0.3119    
Current (lb-rhs): -0.04841583967208862
269 domains visited
Cumulative time: 2.4873218536376953

BaB round 4
batch: 80
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1873] [/input-8, 1873] [/input-8, 1873] [/input-8, 1873] [/input-8, 1873] [/input-8, 1873] [/input-8, 1873] [/input-8, 1873] [/input-8, 1873] [/input-8, 1873] 
split level 1: [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2119286060333252, worst -0.03843182325363159
10 lb beta sum: 1.2119286060333252, worst -0.03813999891281128
Time: prepare 0.0146    bound 0.1285    transfer 0.0006    finalize 0.0016    func 0.1474    
Accumulated time: func 1.2792    prepare 0.0961    bound 1.1510    transfer 0.0086    finalize 0.0162    
all_split False
======================Cut inference begins======================
max lb tensor(0.02498990) min lb tensor(-0.03804368)
Number of Verified Splits: 183 of 320
Stop inferencing: Max iteration reached.
Total number of valid cuts: 26.
#cuts 1-3: 13
#cuts 4-6: 13
#cuts >= 20: 0
BICCOS time: 0.00039577484130859375 
BICCOS Cumulative time: 0.08437514305114746
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03804 (17), -0.03541 (17), -0.03513 (17), -0.03423 (17), -0.03148 (17), -0.03137 (17), -0.03136 (17), -0.03042 (17), -0.03016 (17), -0.02823 (17), -0.02757 (17), -0.02697 (17), -0.02689 (17), -0.02598 (17), -0.02590 (17), -0.02556 (17), -0.02398 (17), -0.02387 (17), -0.02372 (17), -0.02332 (17), 
Length of domains: 137
Time: pickout 0.0021    decision 0.0159    set_bounds 0.0242    solve 0.1475    add 0.0034    
Accumulated time: pickout 0.0088    decision 0.6496    set_bounds 0.3001    solve 1.1023    add 0.3153    
Current (lb-rhs): -0.03804367780685425
406 domains visited
Cumulative time: 2.6822385787963867

BaB round 5
batch: 137
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 867] [/input-8, 867] [/input-8, 1428] [/input-8, 867] [/input-8, 867] [/input-8, 867] [/input-8, 867] [/input-8, 867] [/input-8, 1428] [/input-8, 1428] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2119286060333252, worst -0.033372581005096436
10 lb beta sum: 1.2119286060333252, worst -0.033203303813934326
Time: prepare 0.0126    bound 0.1359    transfer 0.0014    finalize 0.0015    func 0.1534    
Accumulated time: func 1.4325    prepare 0.1089    bound 1.2869    transfer 0.0100    finalize 0.0177    
all_split False
======================Cut inference begins======================
max lb tensor(0.01078922) min lb tensor(-0.03314084)
Number of Verified Splits: 134 of 274
Stop inferencing: Max iteration reached.
Total number of valid cuts: 26.
#cuts 1-3: 13
#cuts 4-6: 13
#cuts >= 20: 0
BICCOS time: 0.00039386749267578125 
BICCOS Cumulative time: 0.08476901054382324
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03314 (18), -0.03102 (18), -0.02946 (18), -0.02901 (18), -0.02717 (18), -0.02683 (18), -0.02677 (18), -0.02613 (18), -0.02590 (18), -0.02542 (18), -0.02329 (18), -0.02257 (18), -0.02241 (18), -0.02223 (18), -0.02204 (18), -0.02154 (18), -0.02149 (18), -0.01949 (18), -0.01881 (18), -0.01873 (18), 
Length of domains: 140
Time: pickout 0.0031    decision 0.0196    set_bounds 0.0119    solve 0.1535    add 0.0015    
Accumulated time: pickout 0.0119    decision 0.6692    set_bounds 0.3121    solve 1.2558    add 0.3168    
Current (lb-rhs): -0.03314083814620972
546 domains visited
Cumulative time: 2.8734421730041504

BaB round 6
batch: 140
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1428] [/input-8, 1428] [/input-8, 1428] [/input-8, 1428] [/input-8, 1428] [/input-8, 867] [/input-8, 867] [/input-8, 1428] [/input-8, 1428] [/input-8, 1428] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2119286060333252, worst -0.02726191282272339
10 lb beta sum: 1.2119286060333252, worst -0.02719515562057495
Time: prepare 0.0129    bound 0.1377    transfer 0.0009    finalize 0.0015    func 0.1549    
Accumulated time: func 1.5874    prepare 0.1219    bound 1.4247    transfer 0.0108    finalize 0.0192    
all_split False
======================Cut inference begins======================
max lb tensor(0.00956470) min lb tensor(-0.02716416)
Number of Verified Splits: 130 of 280
Stop inferencing: Max iteration reached.
Total number of valid cuts: 26.
#cuts 1-3: 13
#cuts 4-6: 13
#cuts >= 20: 0
BICCOS time: 0.0003898143768310547 
BICCOS Cumulative time: 0.0851588249206543
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02716 (19), -0.02503 (19), -0.02403 (19), -0.02394 (19), -0.02349 (19), -0.02182 (19), -0.02118 (19), -0.02118 (19), -0.02079 (19), -0.02071 (19), -0.02039 (19), -0.02039 (19), -0.01938 (19), -0.01817 (19), -0.01798 (19), -0.01757 (19), -0.01735 (19), -0.01725 (19), -0.01682 (19), -0.01641 (19), 
Length of domains: 150
Time: pickout 0.0031    decision 0.0176    set_bounds 0.0120    solve 0.1550    add 0.0039    
Accumulated time: pickout 0.0151    decision 0.6868    set_bounds 0.3241    solve 1.4108    add 0.3207    
Current (lb-rhs): -0.027164161205291748
696 domains visited
Cumulative time: 3.0667123794555664

BaB round 7
batch: 150
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 973] [/input-8, 973] [/input-8, 973] [/input-8, 973] [/input-8, 973] [/input-8, 973] [/input-8, 973] [/input-8, 973] [/input-8, 973] [/input-8, 1865] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2119284868240356, worst -0.02214449644088745
10 lb beta sum: 1.2119284868240356, worst -0.0220605731010437
Time: prepare 0.0136    bound 0.1403    transfer 0.0006    finalize 0.0016    func 0.1581    
Accumulated time: func 1.7456    prepare 0.1358    bound 1.5649    transfer 0.0114    finalize 0.0208    
all_split False
======================Cut inference begins======================
max lb tensor(0.00767261) min lb tensor(-0.02201718)
Number of Verified Splits: 140 of 300
Stop inferencing: Max iteration reached.
Total number of valid cuts: 26.
#cuts 1-3: 13
#cuts 4-6: 13
#cuts >= 20: 0
BICCOS time: 0.0003941059112548828 
BICCOS Cumulative time: 0.08555293083190918
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02202 (20), -0.02180 (20), -0.01988 (20), -0.01957 (20), -0.01880 (20), -0.01872 (20), -0.01854 (20), -0.01835 (20), -0.01813 (20), -0.01657 (20), -0.01604 (20), -0.01603 (20), -0.01600 (20), -0.01580 (20), -0.01556 (20), -0.01550 (20), -0.01525 (20), -0.01522 (20), -0.01505 (20), -0.01501 (20), 
Length of domains: 160
Time: pickout 0.0030    decision 0.0202    set_bounds 0.0134    solve 0.1582    add 0.0013    
Accumulated time: pickout 0.0181    decision 0.7070    set_bounds 0.3375    solve 1.5690    add 0.3220    
Current (lb-rhs): -0.022017180919647217
856 domains visited
Cumulative time: 3.264528751373291

BaB round 8
batch: 160
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1865] [/input-8, 1865] [/input-8, 1865] [/input-8, 1865] [/input-8, 973] [/input-8, 973] [/input-8, 973] [/input-8, 973] [/input-8, 973] [/input-8, 1865] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2119286060333252, worst -0.020059287548065186
10 lb beta sum: 1.2119286060333252, worst -0.019885241985321045
Time: prepare 0.0145    bound 0.1283    transfer 0.0007    finalize 0.0018    func 0.1474    
Accumulated time: func 1.8930    prepare 0.1505    bound 1.6932    transfer 0.0122    finalize 0.0226    
all_split False
======================Cut inference begins======================
max lb tensor(0.00762349) min lb tensor(-0.01978129)
Number of Verified Splits: 170 of 320
Stop inferencing: Max iteration reached.
Total number of valid cuts: 26.
#cuts 1-3: 13
#cuts 4-6: 13
#cuts >= 20: 0
BICCOS time: 0.00039839744567871094 
BICCOS Cumulative time: 0.08595132827758789
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01978 (21), -0.01759 (21), -0.01658 (21), -0.01649 (21), -0.01642 (21), -0.01608 (21), -0.01425 (21), -0.01416 (21), -0.01390 (21), -0.01385 (21), -0.01380 (21), -0.01325 (21), -0.01324 (21), -0.01314 (21), -0.01304 (21), -0.01298 (21), -0.01277 (21), -0.01277 (21), -0.01190 (21), -0.01168 (21), 
Length of domains: 150
Time: pickout 0.0031    decision 0.0178    set_bounds 0.0135    solve 0.1475    add 0.0022    
Accumulated time: pickout 0.0212    decision 0.7248    set_bounds 0.3510    solve 1.7166    add 0.3242    
Current (lb-rhs): -0.019781291484832764
1006 domains visited
Cumulative time: 3.4504311084747314

BaB round 9
batch: 150
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 985] [/input-8, 985] [/input-8, 985] [/input-8, 985] [/input-8, 985] [/input-8, 985] [/input-8, 985] [/input-8, 985] [/input-8, 985] [/input-8, 985] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2119284868240356, worst -0.015956103801727295
10 lb beta sum: 1.2119284868240356, worst -0.015836894512176514
Time: prepare 0.0137    bound 0.1291    transfer 0.0006    finalize 0.0016    func 0.1471    
Accumulated time: func 2.0401    prepare 0.1644    bound 1.8223    transfer 0.0128    finalize 0.0242    
all_split False
======================Cut inference begins======================
max lb tensor(0.00794822) min lb tensor(-0.01578969)
Number of Verified Splits: 202 of 300
Stop inferencing: Max iteration reached.
Total number of valid cuts: 26.
#cuts 1-3: 13
#cuts 4-6: 13
#cuts >= 20: 0
BICCOS time: 0.0003826618194580078 
BICCOS Cumulative time: 0.0863339900970459
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01579 (22), -0.01367 (22), -0.01250 (22), -0.01236 (22), -0.01233 (22), -0.01194 (22), -0.01025 (22), -0.01023 (22), -0.00991 (22), -0.00990 (22), -0.00966 (22), -0.00909 (22), -0.00898 (22), -0.00896 (22), -0.00896 (22), -0.00890 (22), -0.00868 (22), -0.00857 (22), -0.00773 (22), -0.00747 (22), 
Length of domains: 98
Time: pickout 0.0032    decision 0.0180    set_bounds 0.0127    solve 0.1472    add 0.0025    
Accumulated time: pickout 0.0244    decision 0.7428    set_bounds 0.3638    solve 1.8637    add 0.3268    
Current (lb-rhs): -0.015789687633514404
1104 domains visited
Cumulative time: 3.6358160972595215

BaB round 10
batch: 98
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 850] [/input-8, 850] [/input-8, 850] [/input-8, 850] [/input-8, 850] [/input-8, 850] [/input-8, 850] [/input-8, 850] [/input-8, 850] [/input-8, 850] 
split level 1: [/input-8, 817] [/input-8, 817] [/input-8, 817] [/input-8, 817] [/input-8, 817] [/input-8, 817] [/input-8, 817] [/input-8, 817] [/input-8, 817] [/input-8, 817] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2119284868240356, worst -0.011531054973602295
10 lb beta sum: 1.2119284868240356, worst -0.011362731456756592
Time: prepare 0.0175    bound 0.1313    transfer 0.0017    finalize 0.0020    func 0.1550    
Accumulated time: func 2.1951    prepare 0.1821    bound 1.9536    transfer 0.0144    finalize 0.0262    
all_split False
======================Cut inference begins======================
max lb tensor(0.03551179) min lb tensor(-0.01132506)
Number of Verified Splits: 347 of 392
Stop inferencing: Max iteration reached.
Total number of valid cuts: 26.
#cuts 1-3: 13
#cuts 4-6: 13
#cuts >= 20: 0
BICCOS time: 0.00039267539978027344 
BICCOS Cumulative time: 0.08672666549682617
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01133 (24), -0.00918 (24), -0.00802 (24), -0.00794 (24), -0.00786 (24), -0.00756 (24), -0.00577 (24), -0.00568 (24), -0.00542 (24), -0.00533 (24), -0.00526 (24), -0.00458 (24), -0.00456 (24), -0.00448 (24), -0.00448 (24), -0.00441 (24), -0.00428 (24), -0.00413 (24), -0.00401 (24), -0.00320 (24), 
Length of domains: 45
Time: pickout 0.0028    decision 0.0171    set_bounds 0.0188    solve 0.1552    add 0.0016    
Accumulated time: pickout 0.0272    decision 0.7600    set_bounds 0.3826    solve 2.0189    add 0.3284    
Current (lb-rhs): -0.011325061321258545
1149 domains visited
Cumulative time: 3.8334217071533203

BaB round 11
batch: 45
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 972] [/input-8, 972] [/input-8, 972] [/input-8, 972] [/input-8, 972] [/input-8, 972] [/input-8, 972] [/input-8, 972] [/input-8, 972] [/input-8, 972] 
split level 1: [/input-8, 1421] [/input-8, 1421] [/input-8, 1421] [/input-8, 1421] [/input-8, 1429] [/input-8, 1421] [/input-8, 1421] [/input-8, 1421] [/input-8, 1421] [/input-8, 1421] 
split level 2: [/input-8, 1429] [/input-8, 1429] [/input-8, 1429] [/input-8, 1429] [/input-8, 1421] [/input-8, 1429] [/input-8, 1429] [/input-8, 1429] [/input-8, 1429] [/input-8, 1429] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2119287252426147, worst 0.0027526021003723145

all verified at 0th iter
Time: prepare 0.0164    bound 0.0075    transfer 0.0012    finalize 0.0018    func 0.0291    
Accumulated time: func 2.2242    prepare 0.1987    bound 1.9611    transfer 0.0156    finalize 0.0280    
all_split False
======================Cut inference begins======================
max lb tensor(0.02008420) min lb tensor(0.00275260)
Number of Verified Splits: 360 of 360
Stop inferencing: Max iteration reached.
Total number of valid cuts: 26.
#cuts 1-3: 13
#cuts 4-6: 13
#cuts >= 20: 0
BICCOS time: 0.0003669261932373047 
BICCOS Cumulative time: 0.08709359169006348
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0023    decision 0.0174    set_bounds 0.0196    solve 0.0293    add 0.0001    
Accumulated time: pickout 0.0295    decision 0.7774    set_bounds 0.4022    solve 2.0482    add 0.3284    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1149 domains visited
Cumulative time: 3.9036076068878174


Properties batch 5, size 1
Remaining timeout: 192.96417617797852
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 192.96408772468567
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 192.96396732330322
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 192.96394681930542
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 7.0361 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 140, vnnlib ID: 140 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.70108557, -2.61450195, -7.88389778, -7.46980858, -7.10053349,
         -7.85311460, -7.32898045, -5.37792873, -5.26348686, -0.13527048]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [517]; unstable size 517; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 190, 1, 517] with unstable size 189 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 517] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 517] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [189]; unstable size 189; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 189] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 189] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.44307852, 1.46007884, 5.86254501, 5.68103218, 5.60793304, 5.96620083,
         5.60759163, 3.70175481, 3.77148247]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0681 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 141, vnnlib ID: 141 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.93660259, -3.64990735, -5.69686222, -5.46793270, -5.41355324,
         -6.32598066, -5.22664785, -6.09948301, -3.93378472, -2.67238760]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [480]; unstable size 480; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 193, 1, 480] with unstable size 192 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 480] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 480] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [192]; unstable size 192; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 192] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 192] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.12637210,  0.23386788,  0.06982756,  0.04919481,  0.70030731,
         -0.06877637,  0.36111856, -0.89804626, -1.82256603]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.93660259, -3.64990735, -5.69686222, -5.46793270, -5.41355324,
         -6.32598066, -5.22664785, -6.09948301, -3.93378472, -2.67238760]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.93660212, -3.64990807, -5.69686222, -5.46793365, -5.41355324,
          -6.32598066, -5.22664833, -6.09948254, -3.93378496, -2.67238760],
         [-4.93660212, -3.64990807, -5.69686222, -5.46793365, -5.41355324,
          -6.32598066, -5.22664833, -6.09948254, -3.93378496, -2.67238760]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.28669405,  1.57674026,  0.28387690, -0.97752047]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.90952384, -1.84603179, -1.76666665,  ..., -1.68730164,
            -1.09999990, -0.84603173],
           [-1.89365077, -1.90952384, -1.81428576,  ..., -1.71904767,
            -1.30634916, -1.25873005],
           [-1.89365077, -1.89365077, -1.67142856,  ..., -1.75079370,
            -1.51269829, -1.49682534],
           ...,
           [-0.57619047, -1.21111107, -1.22698402,  ..., -1.29047608,
            -1.17936504, -1.03650784],
           [-0.70317459, -1.06825387, -1.16349196,  ..., -1.02063489,
            -1.02063489, -1.00476182],
           [-0.76666665, -1.00476182, -1.00476182,  ..., -0.94126981,
            -1.02063489, -1.06825387]],

          [[-1.93236721, -1.86795497, -1.72302747,  ..., -1.70692432,
            -1.22383249, -0.98228657],
           [-1.91626418, -1.93236721, -1.83574879,  ..., -1.72302747,
            -1.41706920, -1.36875999],
           [-1.91626418, -1.91626418, -1.73913050,  ..., -1.78743970,
            -1.59420288, -1.57809973],
           ...,
           [-0.80515295, -1.49758446, -1.52979064,  ..., -1.46537840,
            -1.40096617, -1.23993552],
           [-0.91787434, -1.33655393, -1.44927526,  ..., -1.22383249,
            -1.23993552, -1.20772946],
           [-0.96618354, -1.27214170, -1.25603855,  ..., -1.12721407,
            -1.20772946, -1.27214170]],

          [[-1.64767623, -1.58770621, -1.51274371,  ..., -1.54272878,
            -1.15292358, -0.91304344],
           [-1.63268375, -1.64767623, -1.54272878,  ..., -1.52773619,
            -1.30284870, -1.25787115],
           [-1.63268375, -1.64767623, -1.43778121,  ..., -1.58770621,
            -1.42278874, -1.43778121],
           ...,
           [-0.70314842, -1.24287868, -1.22788620,  ..., -1.28785622,
            -1.24287868, -1.16791618],
           [-0.80809593, -1.12293863, -1.22788620,  ..., -1.12293863,
            -1.10794616, -1.15292358],
           [-0.82308841, -1.09295356, -1.07796109,  ..., -1.09295356,
            -1.15292358, -1.19790113]]],


         [[[-1.90952384, -1.84603179, -1.76666665,  ..., -1.68730164,
            -1.09999990, -0.84603173],
           [-1.89365077, -1.90952384, -1.81428576,  ..., -1.71904767,
            -1.30634916, -1.25873005],
           [-1.89365077, -1.89365077, -1.67142856,  ..., -1.75079370,
            -1.51269829, -1.49682534],
           ...,
           [-0.57619047, -1.21111107, -1.22698402,  ..., -1.29047608,
            -1.17936504, -1.03650784],
           [-0.70317459, -1.06825387, -1.16349196,  ..., -1.02063489,
            -1.02063489, -1.00476182],
           [-0.76666665, -1.00476182, -1.00476182,  ..., -0.94126981,
            -1.02063489, -1.06825387]],

          [[-1.93236721, -1.86795497, -1.72302747,  ..., -1.70692432,
            -1.22383249, -0.98228657],
           [-1.91626418, -1.93236721, -1.83574879,  ..., -1.72302747,
            -1.41706920, -1.36875999],
           [-1.91626418, -1.91626418, -1.73913050,  ..., -1.78743970,
            -1.59420288, -1.57809973],
           ...,
           [-0.80515295, -1.49758446, -1.52979064,  ..., -1.46537840,
            -1.40096617, -1.23993552],
           [-0.91787434, -1.33655393, -1.44927526,  ..., -1.22383249,
            -1.23993552, -1.20772946],
           [-0.96618354, -1.27214170, -1.25603855,  ..., -1.12721407,
            -1.20772946, -1.27214170]],

          [[-1.64767623, -1.58770621, -1.51274371,  ..., -1.54272878,
            -1.15292358, -0.91304344],
           [-1.63268375, -1.64767623, -1.54272878,  ..., -1.52773619,
            -1.30284870, -1.25787115],
           [-1.63268375, -1.64767623, -1.43778121,  ..., -1.58770621,
            -1.42278874, -1.43778121],
           ...,
           [-0.70314842, -1.24287868, -1.22788620,  ..., -1.28785622,
            -1.24287868, -1.16791618],
           [-0.80809593, -1.12293863, -1.22788620,  ..., -1.12293863,
            -1.10794616, -1.15292358],
           [-0.82308841, -1.09295356, -1.07796109,  ..., -1.09295356,
            -1.15292358, -1.19790113]]],


         [[[-1.90952384, -1.84603179, -1.76666665,  ..., -1.68730164,
            -1.09999990, -0.84603173],
           [-1.89365077, -1.90952384, -1.81428576,  ..., -1.71904767,
            -1.30634916, -1.25873005],
           [-1.89365077, -1.89365077, -1.67142856,  ..., -1.75079370,
            -1.51269829, -1.49682534],
           ...,
           [-0.57619047, -1.21111107, -1.22698402,  ..., -1.29047608,
            -1.17936504, -1.03650784],
           [-0.70317459, -1.06825387, -1.16349196,  ..., -1.02063489,
            -1.02063489, -1.00476182],
           [-0.76666665, -1.00476182, -1.00476182,  ..., -0.94126981,
            -1.02063489, -1.06825387]],

          [[-1.93236721, -1.86795497, -1.72302747,  ..., -1.70692432,
            -1.22383249, -0.98228657],
           [-1.91626418, -1.93236721, -1.83574879,  ..., -1.72302747,
            -1.41706920, -1.36875999],
           [-1.91626418, -1.91626418, -1.73913050,  ..., -1.78743970,
            -1.59420288, -1.57809973],
           ...,
           [-0.80515295, -1.49758446, -1.52979064,  ..., -1.46537840,
            -1.40096617, -1.23993552],
           [-0.91787434, -1.33655393, -1.44927526,  ..., -1.22383249,
            -1.23993552, -1.20772946],
           [-0.96618354, -1.27214170, -1.25603855,  ..., -1.12721407,
            -1.20772946, -1.27214170]],

          [[-1.64767623, -1.58770621, -1.51274371,  ..., -1.54272878,
            -1.15292358, -0.91304344],
           [-1.63268375, -1.64767623, -1.54272878,  ..., -1.52773619,
            -1.30284870, -1.25787115],
           [-1.63268375, -1.64767623, -1.43778121,  ..., -1.58770621,
            -1.42278874, -1.43778121],
           ...,
           [-0.70314842, -1.24287868, -1.22788620,  ..., -1.28785622,
            -1.24287868, -1.16791618],
           [-0.80809593, -1.12293863, -1.22788620,  ..., -1.12293863,
            -1.10794616, -1.15292358],
           [-0.82308841, -1.09295356, -1.07796109,  ..., -1.09295356,
            -1.15292358, -1.19790113]]],


         [[[-1.90952384, -1.84603179, -1.76666665,  ..., -1.68730164,
            -1.09999990, -0.84603173],
           [-1.89365077, -1.90952384, -1.81428576,  ..., -1.71904767,
            -1.30634916, -1.25873005],
           [-1.89365077, -1.89365077, -1.67142856,  ..., -1.75079370,
            -1.51269829, -1.49682534],
           ...,
           [-0.57619047, -1.21111107, -1.22698402,  ..., -1.29047608,
            -1.17936504, -1.03650784],
           [-0.70317459, -1.06825387, -1.16349196,  ..., -1.02063489,
            -1.02063489, -1.00476182],
           [-0.76666665, -1.00476182, -1.00476182,  ..., -0.94126981,
            -1.02063489, -1.06825387]],

          [[-1.93236721, -1.86795497, -1.72302747,  ..., -1.70692432,
            -1.22383249, -0.98228657],
           [-1.91626418, -1.93236721, -1.83574879,  ..., -1.72302747,
            -1.41706920, -1.36875999],
           [-1.91626418, -1.91626418, -1.73913050,  ..., -1.78743970,
            -1.59420288, -1.57809973],
           ...,
           [-0.80515295, -1.49758446, -1.52979064,  ..., -1.46537840,
            -1.40096617, -1.23993552],
           [-0.91787434, -1.33655393, -1.44927526,  ..., -1.22383249,
            -1.23993552, -1.20772946],
           [-0.96618354, -1.27214170, -1.25603855,  ..., -1.12721407,
            -1.20772946, -1.27214170]],

          [[-1.64767623, -1.58770621, -1.51274371,  ..., -1.54272878,
            -1.15292358, -0.91304344],
           [-1.63268375, -1.64767623, -1.54272878,  ..., -1.52773619,
            -1.30284870, -1.25787115],
           [-1.63268375, -1.64767623, -1.43778121,  ..., -1.58770621,
            -1.42278874, -1.43778121],
           ...,
           [-0.70314842, -1.24287868, -1.22788620,  ..., -1.28785622,
            -1.24287868, -1.16791618],
           [-0.80809593, -1.12293863, -1.22788620,  ..., -1.12293863,
            -1.10794616, -1.15292358],
           [-0.82308841, -1.09295356, -1.07796109,  ..., -1.09295356,
            -1.15292358, -1.19790113]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0784 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 142, vnnlib ID: 142 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-9.01175785, -9.22564220, -6.09865665, -6.68279839, -7.01091385,
         -7.66662741, -3.74865699, -8.93857002, -9.70948601, -9.36056805]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [415]; unstable size 415; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 290, 1, 415] with unstable size 289 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 415] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 415] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [289]; unstable size 289; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 289] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 289] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.92234206, 3.34474063, 0.83518100, 1.42703426, 1.62353683, 2.12632847,
         3.08041930, 3.64250779, 3.61395836]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0695 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 143, vnnlib ID: 143 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.98219585, -11.93984127,  -4.80098343,  -6.43815804,  -4.75239468,
          -5.96528244,  -6.83383131,  -6.40824652, -11.32667923, -10.02781868]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [464]; unstable size 464; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 196, 1, 464] with unstable size 195 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 464] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 464] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [195]; unstable size 195; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 195] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 195] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.50733924,  4.83027840, -1.04858840,  0.40518260, -0.05837488,
          0.48497474,  0.45264578,  4.44294167,  3.27292323]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.98219585, -11.93984127,  -4.80098343,  -6.43815804,  -4.75239468,
          -5.96528244,  -6.83383131,  -6.40824652, -11.32667923, -10.02781868]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.89328861, -11.87365723,  -4.72995949,  -6.58205509,  -5.11540079,
           -6.15687943,  -6.98943567,  -6.80347681, -11.29017735, -10.07491016],
         [ -7.89328861, -11.87365723,  -4.72995949,  -6.58205509,  -5.11540079,
           -6.15687943,  -6.98943567,  -6.80347681, -11.29017735, -10.07491016]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.38544130,  1.04147863]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0062 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0656 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 144, vnnlib ID: 144 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-8.60607052, -9.81349945, -5.86607075, -4.14033175, -5.51711655,
         -3.53696299, -6.38849020, -6.08620310, -7.73200989, -8.22923183]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [522]; unstable size 522; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 221, 1, 522] with unstable size 220 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 522] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 522] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [220]; unstable size 220; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 220] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 220] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.89997816, 4.68741703, 1.57923114, 0.30736449, 1.14825940, 1.82109785,
         1.72909129, 2.65290189, 3.25950575]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0672 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 145, vnnlib ID: 145 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-3.97581673, -7.36369705, -2.25391197, -0.90559614, -3.35363531,
         -0.93793738, -3.88091850, -3.94542360, -8.08611870, -6.59433222]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [686]; unstable size 686; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 215, 1, 686] with unstable size 214 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 686] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 686] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [214]; unstable size 214; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 214] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 214] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.63966501,  4.83987570,  0.26498556, -0.32372522,  1.13650656,
          1.87988961,  2.01293635,  5.47729731,  4.25807333]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.97581673, -7.36369705, -2.25391197, -0.90559614, -3.35363531,
         -0.93793738, -3.88091850, -3.94542360, -8.08611870, -6.59433222]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.97581673, -7.36369705, -2.25391197, -0.90559614, -3.35363531,
          -0.93793738, -3.88091850, -3.94542360, -8.08611870, -6.59433222]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.03234124]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-6.55555546e-01, -5.28571427e-01, -5.60317457e-01,  ...,
            -3.69841158e-01, -4.80952382e-01, -5.28571427e-01],
           [-6.55555546e-01, -5.44444442e-01, -5.28571427e-01,  ...,
            -1.47618949e-01, -3.85714173e-01, -4.65079248e-01],
           [-6.55555546e-01, -5.12698412e-01, -4.17460203e-01,  ...,
            -5.23808524e-02, -3.06349099e-01, -4.49206233e-01],
           ...,
           [-3.85714173e-01, -1.95237994e-01,  2.69842222e-02,  ...,
             7.41269886e-01,  5.82539737e-01,  4.23809588e-01],
           [-4.33333218e-01, -3.22222114e-01, -1.47618949e-01,  ...,
             6.14285767e-01,  5.50793707e-01,  4.07936573e-01],
           [-4.01587188e-01, -1.95237994e-01, -1.79364979e-01,  ...,
             6.93650842e-01,  6.14285767e-01,  5.03174663e-01]],

          [[-4.99194801e-01, -3.70370239e-01, -4.02576357e-01,  ...,
            -2.09339648e-01, -3.05958003e-01, -3.05958003e-01],
           [-4.50885653e-01, -3.54267180e-01, -3.38164121e-01,  ...,
             1.22934580e-07, -2.25442708e-01, -2.41545767e-01],
           [-4.18679416e-01, -2.73751885e-01, -1.77133530e-01,  ...,
             1.12721533e-01, -1.44927412e-01, -2.25442708e-01],
           ...,
           [-1.44927412e-01,  6.44123554e-02,  3.54267418e-01,  ...,
             1.19162667e+00,  1.12721443e+00,  1.01449287e+00],
           [-1.44927412e-01,  1.22934580e-07,  2.09339887e-01,  ...,
             1.17552364e+00,  1.22383285e+00,  1.11111140e+00],
           [-1.77133530e-01,  8.05154145e-02,  1.44927651e-01,  ...,
             1.14331758e+00,  1.15942061e+00,  1.11111140e+00]],

          [[-4.03298318e-01, -2.68365651e-01, -3.13343287e-01,  ...,
            -2.23388135e-01, -3.43328297e-01, -3.13343287e-01],
           [-3.73313308e-01, -2.83358276e-01, -2.53373146e-01,  ...,
            -2.84855980e-02, -2.53373146e-01, -2.38380641e-01],
           [-3.58320802e-01, -2.23388135e-01, -1.33433133e-01,  ...,
             6.14694245e-02, -1.93403140e-01, -2.38380641e-01],
           ...,
           [-5.84706068e-02,  1.21439442e-01,  3.91304523e-01,  ...,
             1.27586246e+00,  1.20089996e+00,  1.15592217e+00],
           [-8.84556174e-02,  4.64769229e-02,  2.41379470e-01,  ...,
             1.26086998e+00,  1.30584753e+00,  1.24587750e+00],
           [-8.84556174e-02,  1.36431947e-01,  1.81409463e-01,  ...,
             1.23088503e+00,  1.24587750e+00,  1.23088503e+00]]]]],
       device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0686 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 146, vnnlib ID: 146 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.88469028, -12.65882111, -12.62442398, -13.26971817, -13.08886814,
         -14.39622879, -13.06826305, -13.77910519,  -7.61941338, -13.15269947]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [474]; unstable size 474; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 183, 1, 474] with unstable size 182 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 474] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 474] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [182]; unstable size 182; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 182] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 182] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.66201413, 3.41532946, 3.31493187, 3.81620932, 3.48846436, 4.76713276,
         3.58373928, 3.89160705, 3.77728796]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0648 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 147, vnnlib ID: 147 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.95316505, -29.04301071, -22.88550568, -26.99249268, -26.92433929,
         -26.87813187, -26.17901230, -26.50130844, -27.15471458, -29.93289757]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [636]; unstable size 636; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 207, 1, 636] with unstable size 206 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 636] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 636] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [206]; unstable size 206; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 206] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 206] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.13847542, 4.55568790, 3.22048354, 3.02970314, 2.95622373, 2.20912457,
         2.32559371, 2.85925484, 5.64449835]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0643 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 148, vnnlib ID: 148 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-8.92584610, -7.42483807, -4.62941742, -4.01557446, -4.85893917,
         -3.11745501, -6.51985884, -2.25635386, -7.85682869, -5.87989426]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [573]; unstable size 573; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 165, 1, 573] with unstable size 164 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 10, 1, 573] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 573] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [164]; unstable size 164; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 10, 1, 164] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 164] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.58360767, 3.69630384, 1.62351394, 1.19872487, 1.87599468, 0.30902326,
         3.29060102, 4.20989084, 2.42179394]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0281 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 149, vnnlib ID: 149 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.82564068, -16.12564659,  -8.40596962, -11.14722919,  -8.84027576,
         -11.49166584,  -8.61030483, -12.62408161, -15.33834553, -15.51428890]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [612]; unstable size 612; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 318, 1, 612] with unstable size 317 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 612] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 612] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [317]; unstable size 317; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 317] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 317] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.89976597,  5.63465977,  1.31290960, -0.68691450,  1.36818123,
         -1.07342315,  2.11837935,  5.13911724,  5.00889254]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.82564068, -16.12564659,  -8.40596962, -11.14722919,  -8.84027576,
         -11.49166584,  -8.61030483, -12.62408161, -15.33834553, -15.51428890]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.90783310, -15.16053009,  -7.57349110,  -9.97743225,  -7.48518276,
          -10.30821037,  -7.42592621, -11.38831425, -14.43945026, -14.46265030],
         [-11.90783310, -15.16053009,  -7.57349110,  -9.97743225,  -7.48518276,
          -10.30821037,  -7.42592621, -11.38831425, -14.43945026, -14.46265030]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.08830833, -0.14756489]]], device='cuda:0')
number of violation:  2
Attack finished in 0.0058 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0602 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 150, vnnlib ID: 150 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.13626671, -12.95860291, -17.87646484, -18.21573448, -16.54766655,
         -19.77405167, -18.47913933, -17.13456726, -12.88059044, -12.20954704]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [659]; unstable size 659; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 227, 1, 659] with unstable size 226 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 659] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 659] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [226]; unstable size 226; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 226] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 226] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.12454128,  2.88798380,  3.24317980,  1.46328259,  4.59323883,
          3.30328655,  1.93248844, -1.68345642, -1.69870019]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.13626671, -12.95860291, -17.87646484, -18.21573448, -16.54766655,
         -19.77405167, -18.47913933, -17.13456726, -12.88059044, -12.20954704]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-12.13626671, -12.95860291, -17.87646675, -18.21573257, -16.54766655,
          -19.77405167, -18.47914314, -17.13456726, -12.88059235, -12.20954704],
         [-12.13626671, -12.95860291, -17.87646675, -18.21573257, -16.54766655,
          -19.77405167, -18.47914314, -17.13456726, -12.88059235, -12.20954704]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.82233620, -0.07801056, -0.74905586]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[ 4.87301648e-01,  5.50793707e-01,  7.41269886e-01,  ...,
            -1.95237994e-01, -2.11111009e-01, -2.26984024e-01],
           [ 8.20634961e-01,  8.84127021e-01,  1.04285717e+00,  ...,
            -8.41268823e-02, -9.99999046e-02, -1.31745934e-01],
           [ 1.01111114e+00,  1.02698421e+00,  1.16984153e+00,  ...,
             1.11112073e-02, -2.06348225e-02, -2.06348225e-02],
           ...,
           [ 4.23809588e-01,  4.23809588e-01,  3.92063558e-01,  ...,
             1.85714364e-01,  1.38095319e-01,  1.22222304e-01],
           [ 4.71428633e-01,  3.76190543e-01,  3.92063558e-01,  ...,
             2.96825469e-01,  2.49206424e-01,  2.01587379e-01],
           [ 6.14285767e-01,  3.28571498e-01,  3.44444513e-01,  ...,
             2.80952454e-01,  2.80952454e-01,  2.01587379e-01]],

          [[ 1.03059590e+00,  1.04669893e+00,  1.17552364e+00,  ...,
             7.40740836e-01,  7.24637747e-01,  7.08534718e-01],
           [ 1.23993587e+00,  1.27214205e+00,  1.38486338e+00,  ...,
             8.37359190e-01,  8.37359190e-01,  8.21256101e-01],
           [ 1.28824508e+00,  1.30434811e+00,  1.43317258e+00,  ...,
             9.01771426e-01,  8.85668337e-01,  8.53462219e-01],
           ...,
           [ 4.83092964e-02,  4.83092964e-02,  1.61031820e-02,  ...,
            -1.93236589e-01, -2.57648826e-01, -2.57648826e-01],
           [ 1.12721533e-01,  3.22062373e-02,  3.22062373e-02,  ...,
            -9.66182351e-02, -1.61030471e-01, -1.77133530e-01],
           [ 3.22061300e-01,  1.22934580e-07,  1.22934580e-07,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.77133530e-01]],

          [[ 1.56072009e+00,  1.50075006e+00,  1.56072009e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           [ 1.57571256e+00,  1.57571256e+00,  1.68066013e+00,  ...,
             1.68066013e+00,  1.66566753e+00,  1.65067506e+00],
           [ 1.41079497e+00,  1.45577252e+00,  1.60569763e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           ...,
           [ 7.64619336e-02,  7.64619336e-02,  4.64769229e-02,  ...,
            -1.48425624e-01, -2.23388135e-01, -1.93403140e-01],
           [ 1.36431947e-01,  4.64769229e-02,  6.14694245e-02,  ...,
            -5.84706068e-02, -1.18440613e-01, -1.33433133e-01],
           [ 3.01349491e-01,  1.64919142e-02,  3.14844176e-02,  ...,
            -5.84706068e-02, -7.34631121e-02, -1.18440613e-01]]],


         [[[ 4.87301648e-01,  5.50793707e-01,  7.41269886e-01,  ...,
            -1.95237994e-01, -2.11111009e-01, -2.26984024e-01],
           [ 8.20634961e-01,  8.84127021e-01,  1.04285717e+00,  ...,
            -8.41268823e-02, -9.99999046e-02, -1.31745934e-01],
           [ 1.01111114e+00,  1.02698421e+00,  1.16984153e+00,  ...,
             1.11112073e-02, -2.06348225e-02, -2.06348225e-02],
           ...,
           [ 4.23809588e-01,  4.23809588e-01,  3.92063558e-01,  ...,
             1.85714364e-01,  1.38095319e-01,  1.22222304e-01],
           [ 4.71428633e-01,  3.76190543e-01,  3.92063558e-01,  ...,
             2.96825469e-01,  2.49206424e-01,  2.01587379e-01],
           [ 6.14285767e-01,  3.28571498e-01,  3.44444513e-01,  ...,
             2.80952454e-01,  2.80952454e-01,  2.01587379e-01]],

          [[ 1.03059590e+00,  1.04669893e+00,  1.17552364e+00,  ...,
             7.40740836e-01,  7.24637747e-01,  7.08534718e-01],
           [ 1.23993587e+00,  1.27214205e+00,  1.38486338e+00,  ...,
             8.37359190e-01,  8.37359190e-01,  8.21256101e-01],
           [ 1.28824508e+00,  1.30434811e+00,  1.43317258e+00,  ...,
             9.01771426e-01,  8.85668337e-01,  8.53462219e-01],
           ...,
           [ 4.83092964e-02,  4.83092964e-02,  1.61031820e-02,  ...,
            -1.93236589e-01, -2.57648826e-01, -2.57648826e-01],
           [ 1.12721533e-01,  3.22062373e-02,  3.22062373e-02,  ...,
            -9.66182351e-02, -1.61030471e-01, -1.77133530e-01],
           [ 3.22061300e-01,  1.22934580e-07,  1.22934580e-07,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.77133530e-01]],

          [[ 1.56072009e+00,  1.50075006e+00,  1.56072009e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           [ 1.57571256e+00,  1.57571256e+00,  1.68066013e+00,  ...,
             1.68066013e+00,  1.66566753e+00,  1.65067506e+00],
           [ 1.41079497e+00,  1.45577252e+00,  1.60569763e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           ...,
           [ 7.64619336e-02,  7.64619336e-02,  4.64769229e-02,  ...,
            -1.48425624e-01, -2.23388135e-01, -1.93403140e-01],
           [ 1.36431947e-01,  4.64769229e-02,  6.14694245e-02,  ...,
            -5.84706068e-02, -1.18440613e-01, -1.33433133e-01],
           [ 3.01349491e-01,  1.64919142e-02,  3.14844176e-02,  ...,
            -5.84706068e-02, -7.34631121e-02, -1.18440613e-01]]],


         [[[ 4.87301648e-01,  5.50793707e-01,  7.41269886e-01,  ...,
            -1.95237994e-01, -2.11111009e-01, -2.26984024e-01],
           [ 8.20634961e-01,  8.84127021e-01,  1.04285717e+00,  ...,
            -8.41268823e-02, -9.99999046e-02, -1.31745934e-01],
           [ 1.01111114e+00,  1.02698421e+00,  1.16984153e+00,  ...,
             1.11112073e-02, -2.06348225e-02, -2.06348225e-02],
           ...,
           [ 4.23809588e-01,  4.23809588e-01,  3.92063558e-01,  ...,
             1.85714364e-01,  1.38095319e-01,  1.22222304e-01],
           [ 4.71428633e-01,  3.76190543e-01,  3.92063558e-01,  ...,
             2.96825469e-01,  2.49206424e-01,  2.01587379e-01],
           [ 6.14285767e-01,  3.28571498e-01,  3.44444513e-01,  ...,
             2.80952454e-01,  2.80952454e-01,  2.01587379e-01]],

          [[ 1.03059590e+00,  1.04669893e+00,  1.17552364e+00,  ...,
             7.40740836e-01,  7.24637747e-01,  7.08534718e-01],
           [ 1.23993587e+00,  1.27214205e+00,  1.38486338e+00,  ...,
             8.37359190e-01,  8.37359190e-01,  8.21256101e-01],
           [ 1.28824508e+00,  1.30434811e+00,  1.43317258e+00,  ...,
             9.01771426e-01,  8.85668337e-01,  8.53462219e-01],
           ...,
           [ 4.83092964e-02,  4.83092964e-02,  1.61031820e-02,  ...,
            -1.93236589e-01, -2.57648826e-01, -2.57648826e-01],
           [ 1.12721533e-01,  3.22062373e-02,  3.22062373e-02,  ...,
            -9.66182351e-02, -1.61030471e-01, -1.77133530e-01],
           [ 3.22061300e-01,  1.22934580e-07,  1.22934580e-07,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.77133530e-01]],

          [[ 1.56072009e+00,  1.50075006e+00,  1.56072009e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           [ 1.57571256e+00,  1.57571256e+00,  1.68066013e+00,  ...,
             1.68066013e+00,  1.66566753e+00,  1.65067506e+00],
           [ 1.41079497e+00,  1.45577252e+00,  1.60569763e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           ...,
           [ 7.64619336e-02,  7.64619336e-02,  4.64769229e-02,  ...,
            -1.48425624e-01, -2.23388135e-01, -1.93403140e-01],
           [ 1.36431947e-01,  4.64769229e-02,  6.14694245e-02,  ...,
            -5.84706068e-02, -1.18440613e-01, -1.33433133e-01],
           [ 3.01349491e-01,  1.64919142e-02,  3.14844176e-02,  ...,
            -5.84706068e-02, -7.34631121e-02, -1.18440613e-01]]]]],
       device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0405 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 151, vnnlib ID: 151 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.92925501, -7.14253235, -2.67746592, -1.64019978, -3.21286678,
         -2.15658951, -4.77550077, -2.71008253, -7.95267010, -6.10923672]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [509]; unstable size 509; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 191, 1, 509] with unstable size 190 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 509] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 509] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [190]; unstable size 190; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 190] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 190] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.62681031,  3.42381334, -0.43489373, -0.80544960,  0.11626816,
          1.46117413, -0.19169974,  4.37902260,  2.50552511]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.92925501, -7.14253235, -2.67746592, -1.64019978, -3.21286678,
         -2.15658951, -4.77550077, -2.71008253, -7.95267010, -6.10923672]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.92925453, -7.14253139, -2.67746544, -1.64019978, -3.21286583,
          -2.15658951, -4.77549982, -2.71008205, -7.95266914, -6.10923672],
         [-4.92925453, -7.14253139, -2.67746544, -1.64019978, -3.21286583,
          -2.15658951, -4.77549982, -2.71008205, -7.95266914, -6.10923672]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.52087593, -0.51638973,  0.55349255]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.95714283, -0.79841268, -0.98888886,  ...,  1.94761932,
             2.01111126,  1.96349227],
           [-0.78253967, -0.67142856, -0.83015871,  ...,  1.96349227,
             1.93174624,  1.82063520],
           [-0.89365077, -0.89365077, -0.97301590,  ...,  1.97936535,
             2.01111126,  1.97936535],
           ...,
           [-1.05238092, -1.02063489, -1.02063489,  ..., -0.22698402,
             0.15396833, -0.49682540],
           [-1.16349196, -1.13174593, -1.06825387,  ...,  0.09047628,
            -0.71904761, -0.75079364],
           [-1.22698402, -1.22698402, -1.19523799,  ...,  1.21746063,
             0.01111121, -0.65555555]],

          [[-1.04669881, -0.91787434, -0.98228657,  ...,  1.64251232,
             1.69082153,  1.57810009],
           [-0.83735907, -0.78904986, -0.82125598,  ...,  1.65861547,
             1.61030626,  1.54589403],
           [-0.88566822, -0.88566822, -0.91787434,  ...,  1.83574903,
             1.85185218,  1.81964600],
           ...,
           [-1.48148143, -1.46537840, -1.46537840,  ..., -0.51529789,
            -0.01610294, -0.72463763],
           [-1.54589367, -1.52979064, -1.49758446,  ..., -0.08051517,
            -0.93397743, -0.96618354],
           [-1.59420288, -1.57809973, -1.56199670,  ...,  1.30434811,
            -0.09661824, -0.95008045]],

          [[-1.16791618, -1.18290865, -1.10794616,  ...,  1.32084000,
             1.35082495,  1.24587750],
           [-1.01799107, -1.06296861, -0.98800600,  ...,  1.32084000,
             1.29085493,  1.24587750],
           [-0.98800600, -0.98800600, -1.00299859,  ...,  1.56072009,
             1.54572761,  1.53073502],
           ...,
           [-1.52773619, -1.54272878, -1.54272878,  ..., -0.59820086,
            -0.02848560, -0.70314842],
           [-1.57271373, -1.54272878, -1.52773619,  ..., -0.07346311,
            -0.91304344, -0.98800600],
           [-1.57271373, -1.55772126, -1.55772126,  ...,  1.33583248,
            -0.02848560, -0.95802099]]],


         [[[-0.95714283, -0.79841268, -0.98888886,  ...,  1.94761932,
             2.01111126,  1.96349227],
           [-0.78253967, -0.67142856, -0.83015871,  ...,  1.96349227,
             1.93174624,  1.82063520],
           [-0.89365077, -0.89365077, -0.97301590,  ...,  1.97936535,
             2.01111126,  1.97936535],
           ...,
           [-1.05238092, -1.02063489, -1.02063489,  ..., -0.22698402,
             0.15396833, -0.49682540],
           [-1.16349196, -1.13174593, -1.06825387,  ...,  0.09047628,
            -0.71904761, -0.75079364],
           [-1.22698402, -1.22698402, -1.19523799,  ...,  1.21746063,
             0.01111121, -0.65555555]],

          [[-1.04669881, -0.91787434, -0.98228657,  ...,  1.64251232,
             1.69082153,  1.57810009],
           [-0.83735907, -0.78904986, -0.82125598,  ...,  1.65861547,
             1.61030626,  1.54589403],
           [-0.88566822, -0.88566822, -0.91787434,  ...,  1.83574903,
             1.85185218,  1.81964600],
           ...,
           [-1.48148143, -1.46537840, -1.46537840,  ..., -0.51529789,
            -0.01610294, -0.72463763],
           [-1.54589367, -1.52979064, -1.49758446,  ..., -0.08051517,
            -0.93397743, -0.96618354],
           [-1.59420288, -1.57809973, -1.56199670,  ...,  1.30434811,
            -0.09661824, -0.95008045]],

          [[-1.16791618, -1.18290865, -1.10794616,  ...,  1.32084000,
             1.35082495,  1.24587750],
           [-1.01799107, -1.06296861, -0.98800600,  ...,  1.32084000,
             1.29085493,  1.24587750],
           [-0.98800600, -0.98800600, -1.00299859,  ...,  1.56072009,
             1.54572761,  1.53073502],
           ...,
           [-1.52773619, -1.54272878, -1.54272878,  ..., -0.59820086,
            -0.02848560, -0.70314842],
           [-1.57271373, -1.54272878, -1.52773619,  ..., -0.07346311,
            -0.91304344, -0.98800600],
           [-1.57271373, -1.55772126, -1.55772126,  ...,  1.33583248,
            -0.02848560, -0.95802099]]],


         [[[-0.95714283, -0.79841268, -0.98888886,  ...,  1.94761932,
             2.01111126,  1.96349227],
           [-0.78253967, -0.67142856, -0.83015871,  ...,  1.96349227,
             1.93174624,  1.82063520],
           [-0.89365077, -0.89365077, -0.97301590,  ...,  1.97936535,
             2.01111126,  1.97936535],
           ...,
           [-1.05238092, -1.02063489, -1.02063489,  ..., -0.22698402,
             0.15396833, -0.49682540],
           [-1.16349196, -1.13174593, -1.06825387,  ...,  0.09047628,
            -0.71904761, -0.75079364],
           [-1.22698402, -1.22698402, -1.19523799,  ...,  1.21746063,
             0.01111121, -0.65555555]],

          [[-1.04669881, -0.91787434, -0.98228657,  ...,  1.64251232,
             1.69082153,  1.57810009],
           [-0.83735907, -0.78904986, -0.82125598,  ...,  1.65861547,
             1.61030626,  1.54589403],
           [-0.88566822, -0.88566822, -0.91787434,  ...,  1.83574903,
             1.85185218,  1.81964600],
           ...,
           [-1.48148143, -1.46537840, -1.46537840,  ..., -0.51529789,
            -0.01610294, -0.72463763],
           [-1.54589367, -1.52979064, -1.49758446,  ..., -0.08051517,
            -0.93397743, -0.96618354],
           [-1.59420288, -1.57809973, -1.56199670,  ...,  1.30434811,
            -0.09661824, -0.95008045]],

          [[-1.16791618, -1.18290865, -1.10794616,  ...,  1.32084000,
             1.35082495,  1.24587750],
           [-1.01799107, -1.06296861, -0.98800600,  ...,  1.32084000,
             1.29085493,  1.24587750],
           [-0.98800600, -0.98800600, -1.00299859,  ...,  1.56072009,
             1.54572761,  1.53073502],
           ...,
           [-1.52773619, -1.54272878, -1.54272878,  ..., -0.59820086,
            -0.02848560, -0.70314842],
           [-1.57271373, -1.54272878, -1.52773619,  ..., -0.07346311,
            -0.91304344, -0.98800600],
           [-1.57271373, -1.55772126, -1.55772126,  ...,  1.33583248,
            -0.02848560, -0.95802099]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0787 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 152, vnnlib ID: 152 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.37253094, -15.35466290,  -8.84723759, -11.91200066,  -9.14601994,
         -12.22006512, -11.46233749, -11.63420105, -15.26982689, -14.99343395]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [511]; unstable size 511; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 247, 1, 511] with unstable size 246 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 511] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 511] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [246]; unstable size 246; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 246] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 246] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.05601645,  4.40511036,  1.92022455, -0.67723632,  2.14849854,
          1.43644190,  1.45348656,  4.22401047,  4.17532253]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.37253094, -15.35466290,  -8.84723759, -11.91200066,  -9.14601994,
         -12.22006512, -11.46233749, -11.63420105, -15.26982689, -14.99343395]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.95911980, -14.67740154,  -8.50276279, -11.15490532,  -8.22284317,
          -11.39343548, -10.70833683, -10.67666340, -14.70250797, -14.25697708]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.27991962]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0056 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0729 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 153, vnnlib ID: 153 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.36052370, -3.64754987, -8.43094254, -6.93587589, -8.07399559,
         -7.95548391, -8.76295853, -8.07159233, -4.37078619, -1.63098276]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [666]; unstable size 666; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 198, 1, 666] with unstable size 197 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 666] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 666] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [197]; unstable size 197; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 197] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 197] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.38331795, 0.85898769, 5.10982227, 3.81529808, 4.82118034, 4.66787195,
         5.43832874, 4.82864952, 1.05962658]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0249 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 154, vnnlib ID: 154 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.37273693, -13.41425037,  -7.99989891,  -7.64088869,  -7.68787098,
          -7.30278063,  -9.00737858,  -9.44757938, -11.26918030, -13.87256336]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [665]; unstable size 665; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 191, 1, 665] with unstable size 190 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 665] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 665] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [190]; unstable size 190; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 190] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 190] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.81564021,  4.79626942, -0.23131967,  0.04256082, -0.61334920,
          0.76331377,  1.09416652,  2.70510578,  5.43058109]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.37273693, -13.41425037,  -7.99989891,  -7.64088869,  -7.68787098,
          -7.30278063,  -9.00737858,  -9.44757938, -11.26918030, -13.87256336]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-12.39031887, -13.36584949,  -7.99200344,  -7.88567734,  -7.51200867,
           -7.59368086,  -9.04060841,  -9.48881340, -11.36435127, -13.91123199],
         [-12.39031887, -13.36584949,  -7.99200344,  -7.88567734,  -7.51200867,
           -7.59368086,  -9.04060841,  -9.48881340, -11.36435127, -13.91123199]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.39832258, -0.08167219]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0057 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0477 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 155, vnnlib ID: 155 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.79153347, -11.06904888,  -7.80160236,  -7.62448120,  -8.11459255,
          -8.06301022,  -7.22633886,  -9.50167847,  -7.88424015, -10.52373123]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [522]; unstable size 522; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 244, 1, 522] with unstable size 243 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 522] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 522] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [243]; unstable size 243; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 243] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 243] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.54438424,  1.50450611, -1.00405765, -0.75059599, -0.65832734,
         -0.60824060,  0.62780261, -1.52603436,  1.13424683]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.79153347, -11.06904888,  -7.80160236,  -7.62448120,  -8.11459255,
          -8.06301022,  -7.22633886,  -9.50167847,  -7.88424015, -10.52373123]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.39375973, -10.87876701,  -7.30129433,  -7.40815878,  -7.76286411,
           -7.76071310,  -7.42278099,  -9.15025520,  -7.50671482, -10.33001041],
         [ -9.39375973, -10.87876701,  -7.30129433,  -7.40815878,  -7.76286411,
           -7.76071310,  -7.42278099,  -9.15025520,  -7.50671482, -10.33001041]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.12148666, -0.01462221,  0.34008312,  0.33793211,  0.08393383]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.0124 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0386 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 156, vnnlib ID: 156 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.62991190, -8.22150135, -3.56266642, -2.64211535, -2.55210876,
         -3.17030573, -2.78596139, -4.91182852, -7.74587250, -7.17337656]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [520]; unstable size 520; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 185, 1, 520] with unstable size 184 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 520] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 520] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [184]; unstable size 184; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 184] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 184] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.35063839,  3.30825806, -0.56681514, -0.80880809, -1.41259122,
         -1.49340832,  0.91902590,  3.26092243,  2.75898957]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.62991190, -8.22150135, -3.56266642, -2.64211535, -2.55210876,
         -3.17030573, -2.78596139, -4.91182852, -7.74587250, -7.17337656]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.62991190, -8.22150135, -3.56266618, -2.64211535, -2.55210876,
          -3.17030573, -2.78596210, -4.91182852, -7.74587250, -7.17337751],
         [-6.62991190, -8.22150135, -3.56266618, -2.64211535, -2.55210876,
          -3.17030573, -2.78596210, -4.91182852, -7.74587250, -7.17337751]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.39236045, -0.52819037, -0.61819696, -0.38434362]]],
       device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]],


         [[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]],


         [[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]],


         [[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0762 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 157, vnnlib ID: 157 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.04801083,  -6.34156513, -11.41678429,  -9.62609482, -10.79650021,
         -10.91422462, -10.18493938,  -9.82091618,  -7.10640144,  -2.62643194]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [489]; unstable size 489; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 166, 1, 489] with unstable size 165 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 489] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 489] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [165]; unstable size 165; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 165] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 165] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.36141205, 2.37881184, 7.25882244, 5.68141365, 6.92046452, 6.83364058,
         6.18870258, 5.80481243, 3.38991737]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0501 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 158, vnnlib ID: 158 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.81927967,  -9.30375195, -10.87481976,  -8.97626114, -10.13474369,
          -8.76882172, -10.25335312,  -9.09837914,  -6.59457874, -10.58987808]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [517]; unstable size 517; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 192, 1, 517] with unstable size 191 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 517] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 517] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [191]; unstable size 191; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 191] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 191] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.71505964,  0.93899965,  2.11313224,  0.24073648,  1.31830502,
         -0.27658844,  1.65153718, -0.12758088,  2.09712505]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.81927967,  -9.30375195, -10.87481976,  -8.97626114, -10.13474369,
          -8.76882172, -10.25335312,  -9.09837914,  -6.59457874, -10.58987808]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.85it/s]100%|██████████| 1/1 [00:00<00:00,  8.84it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.51523590,  -9.07377148, -10.23342419,  -8.17811871,  -9.40123940,
           -7.79556513,  -9.75415516,  -8.18024349,  -6.82714367, -10.12567520],
         [ -9.51523590,  -9.07377148, -10.23342419,  -8.17811871,  -9.40123940,
           -7.79556513,  -9.75415516,  -8.18024349,  -6.82714367, -10.12567520]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.96842146, 1.35309982]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1161 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 10.416450500488281
alpha/beta optimization time: 1.1984124183654785
initial alpha-crown bounds: tensor([[ 1.76490855,  1.00492346,  2.20698953,  0.32836771,  1.41238689,
         -0.17884493,  1.72935629, -0.01777911,  2.16614246]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.17884492874145508
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.61352944374084
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.61349201202393
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.61346650123596
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.61344385147095
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.61342525482178
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.61340641975403
Verifying property 5 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.17884493]], device='cuda:0') need to verify.
Model prediction is: tensor([ -9.81927967,  -9.30375195, -10.87481976,  -8.97626114, -10.13474369,
         -8.76882172, -10.25335312,  -9.09837914,  -6.59457874, -10.58987808],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.17884493]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 517
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 188
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 726
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010943412780761719
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17884445190429688
10 lb beta sum: 0.0, worst -0.17885160446166992
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0529    transfer 0.0001    finalize 0.0001    func 0.0534    
Accumulated time: func 0.0534    prepare 0.0002    bound 0.0529    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 37] 
split level 1: [/input-12, 25] 
split level 2: [/input-12, 26] 
split level 3: [/input-12, 4] 
split level 4: [/input-12, 58] 
split level 5: [/input-12, 24] 
split level 6: [/input-12, 45] 
split level 7: [/input-12, 51] 
split level 8: [/input-12, 74] 
split level 9: [/input-12, 60] 
split level 10: [/input, 1735] 
split level 11: [/input-8, 1452] 
split level 12: [/input-8, 1459] 
split level 13: [/input, 1720] 
split level 14: [/input, 1690] 
split level 15: [/input-8, 923] 
split level 16: [/input, 1734] 
split level 17: [/input, 1692] 
split level 18: [/input, 2248] 
split level 19: [/input, 1674] 
split level 20: [/input, 1706] 
split level 21: [/input, 1736] 
split level 22: [/input-8, 1460] 
split level 23: [/input-8, 845] 
split level 24: [/input, 1675] 
split level 25: [/input, 1691] 
split level 26: [/input, 1721] 
split level 27: [/input, 1723] 
split level 28: [/input, 1704] 
split level 29: [/input-8, 493] 
split level 30: [/input, 1705] 
split level 31: [/input-8, 1596] 
split level 32: [/input-8, 1451] 
split level 33: [/input-8, 1010] 
split level 34: [/input-8, 1293] 
split level 35: [/input-8, 921] 
split level 36: [/input-8, 1962] 
split level 37: [/input, 1739] 
split level 38: [/input, 2686] 
split level 39: [/input-8, 931] 
split level 40: [/input-8, 1588] 
split level 41: [/input-8, 1011] 
split level 42: [/input-8, 1965] 
split level 43: [/input, 2217] 
split level 44: [/input, 2743] 
split level 45: [/input-8, 1438] 
split level 46: [/input-8, 1353] 
split level 47: [/input-8, 1933] 
split level 48: [/input-8, 852] 
split level 49: [/input, 1689] 
split level 50: [/input, 1733] 
split level 51: [/input, 1686] 
split level 52: [/input, 2199] 
split level 53: [/input-8, 517] 
split level 54: [/input-8, 949] 
split level 55: [/input, 2702] 
split level 56: [/input, 2776] 
split level 57: [/input, 1658] 
split level 58: [/input, 2774] 
split level 59: [/input-8, 1309] 
split level 60: [/input-8, 1369] 
split level 61: [/input-8, 1592] 
split level 62: [/input-8, 1583] 
split level 63: [/input-8, 1644] 
split level 64: [/input-8, 483] 
split level 65: [/input-8, 494] 
split level 66: [/input, 1452] 
split level 67: [/input, 1636] 
split level 68: [/input, 2476] 
split level 69: [/input-8, 1453] 
split level 70: [/input, 1755] 
split level 71: [/input-8, 1925] 
split level 72: [/input, 2281] 
split level 73: [/input, 1747] 
split level 74: [/input, 2216] 
split level 75: [/input, 2250] 
split level 76: [/input, 1478] 
split level 77: [/input-8, 1445] 
split level 78: [/input, 2265] 
split level 79: [/input, 2157] 
split level 80: [/input, 1672] 
split level 81: [/input, 1347] 
split level 82: [/input-8, 301] 
split level 83: [/input-8, 862] 
split level 84: [/input, 1364] 
split level 85: [/input, 2486] 
split level 86: [/input, 2685] 
split level 87: [/input, 3527] 
split level 88: [/input, 2989] 
split level 89: [/input, 2200] 
split level 90: [/input, 1481] 
split level 91: [/input, 2501] 
split level 92: [/input-8, 522] 
split level 93: [/input-8, 527] 
split level 94: [/input, 2729] 
split level 95: [/input-8, 799] 
split level 96: [/input, 1731] 
split level 97: [/input, 2504] 
split level 98: [/input, 3090] 
split level 99: [/input, 3544] 
split level 100: [/input, 1647] 
split level 101: [/input, 3560] 
split level 102: [/input, 4043] 
split level 103: [/input-8, 1584] 
split level 104: [/input, 2213] 
split level 105: [/input, 3396] 
split level 106: [/input, 2188] 
split level 107: [/input-8, 1444] 
split level 108: [/input, 2891] 
split level 109: [/input, 2472] 
split level 110: [/input, 2492] 
split level 111: [/input-8, 1656] 
split level 112: [/input, 1607] 
split level 113: [/input, 2148] 
split level 114: [/input-8, 1585] 
split level 115: [/input, 3395] 
split level 116: [/input, 2473] 
split level 117: [/input, 2155] 
split level 118: [/input, 2322] 
split level 119: [/input, 2535] 
split level 120: [/input-8, 942] 
split level 121: [/input, 2493] 
split level 122: [/input-8, 1064] 
split level 123: [/input, 2164] 
split level 124: [/input, 2282] 
split level 125: [/input-8, 836] 
split level 126: [/input-8, 387] 
split level 127: [/input, 2197] 
split level 128: [/input, 2503] 
split level 129: [/input, 3749] 
split level 130: [/input, 252] 
split level 131: [/input, 1316] 
split level 132: [/input, 2521] 
split level 133: [/input, 2506] 
split level 134: [/input-8, 149] 
split level 135: [/input, 2337] 
split level 136: [/input, 2244] 
split level 137: [/input, 2458] 
split level 138: [/input, 2154] 
split level 139: [/input, 2099] 
split level 140: [/input, 3394] 
split level 141: [/input, 2324] 
split level 142: [/input, 3105] 
split level 143: [/input-8, 1285] 
split level 144: [/input, 3781] 
split level 145: [/input, 2132] 
split level 146: [/input, 3522] 
split level 147: [/input-8, 1973] 
split level 148: [/input-8, 963] 
split level 149: [/input, 2523] 
split level 150: [/input-8, 647] 
split level 151: [/input, 3490] 
split level 152: [/input, 3293] 
split level 153: [/input, 1363] 
split level 154: [/input, 4029] 
split level 155: [/input-8, 1449] 
split level 156: [/input, 3005] 
split level 157: [/input, 1498] 
split level 158: [/input, 2356] 
split level 159: [/input, 2067] 
split level 160: [/input, 2509] 
split level 161: [/input, 2171] 
split level 162: [/input, 3410] 
split level 163: [/input, 2499] 
split level 164: [/input, 2494] 
split level 165: [/input, 3753] 
split level 166: [/input, 2508] 
split level 167: [/input, 2190] 
split level 168: [/input, 3783] 
split level 169: [/input, 2973] 
split level 170: [/input, 2371] 
split level 171: [/input-8, 1397] 
split level 172: [/input-8, 1065] 
split level 173: [/input, 3770] 
split level 174: [/input, 1335] 
split level 175: [/input-8, 114] 
split level 176: [/input, 3153] 
split level 177: [/input, 3786] 
split level 178: [/input-8, 835] 
split level 179: [/input, 2369] 
split level 180: [/input, 2917] 
split level 181: [/input, 3539] 
split level 182: [/input, 2306] 
split level 183: [/input, 3091] 
split level 184: [/input-8, 516] 
split level 185: [/input, 2347] 
split level 186: [/input, 3529] 
split level 187: [/input, 2083] 
split level 188: [/input-8, 97] 
split level 189: [/input-8, 397] 
split level 190: [/input, 3246] 
split level 191: [/input, 2307] 
split level 192: [/input, 3411] 
split level 193: [/input, 2305] 
split level 194: [/input, 2942] 
split level 195: [/input-8, 1347] 
split level 196: [/input, 2206] 
split level 197: [/input-8, 2008] 
split level 198: [/input, 239] 
split level 199: [/input-8, 431] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1787877082824707
10 lb beta sum: 0.0, worst -0.17879867553710938
Time: prepare 0.0120    bound 0.0968    transfer 0.0012    finalize 0.0029    func 0.1155    
Accumulated time: func 0.1689    prepare 0.0220    bound 0.1497    transfer 0.0013    finalize 0.0031    
all_split False
======================Cut inference begins======================
max lb tensor(0.43588662) min lb tensor(-0.17878771)
Number of Verified Splits: 7 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 7
#cuts >= 20: 0
BICCOS time: 0.010848045349121094 
BICCOS Cumulative time: 0.010848045349121094
Preprocessing time: 0.01017451286315918 Inference time: 0.00030612945556640625 Add cuts time: 9.369850158691406e-05 Cut analysis time: 0.00027370452880859375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16462 (1), -0.16452 (1), -0.16449 (1), -0.16449 (1), -0.16445 (1), -0.16443 (1), -0.16431 (1), -0.16359 (1), -0.16301 (1), -0.16084 (1), -0.16055 (1), -0.16038 (1), -0.16034 (1), -0.16024 (1), -0.15996 (1), -0.15960 (1), -0.15855 (1), -0.15846 (1), -0.15831 (1), -0.15817 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5071    set_bounds 0.0094    solve 0.1156    add 0.0762    
Accumulated time: pickout 0.0003    decision 0.5071    set_bounds 0.0094    solve 0.1156    add 0.0762    
Current (lb-rhs): -0.16461801528930664
50 domains visited
Cumulative time: 0.7782628536224365

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 37] [/input-12, 37] [/input-12, 25] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] 
split level 1: [/input-12, 25] [/input-12, 25] [/input-12, 26] [/input-12, 26] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 26] [/input-12, 25] 
split level 2: [/input-12, 4] [/input-12, 26] [/input-12, 4] [/input-12, 4] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 25] [/input-12, 26] 
split level 3: [/input-12, 58] [/input-12, 4] [/input-12, 58] [/input-12, 58] [/input-12, 4] [/input-12, 58] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09042024612426758

all verified at 1th iter
Time: prepare 0.0083    bound 0.0122    transfer 0.0007    finalize 0.0025    func 0.0263    
Accumulated time: func 0.1952    prepare 0.0306    bound 0.1619    transfer 0.0020    finalize 0.0056    
all_split False
======================Cut inference begins======================
max lb tensor(0.22435141) min lb tensor(0.00014687)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.03553462028503418 
BICCOS Cumulative time: 0.04638266563415527
Preprocessing time: 0.011916637420654297 Inference time: 0.014385223388671875 Add cuts time: 0.009037256240844727 Cut analysis time: 0.00019550323486328125
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0013    decision 0.0213    set_bounds 0.0137    solve 0.0264    add 0.0173    
Accumulated time: pickout 0.0016    decision 0.5285    set_bounds 0.0231    solve 0.1420    add 0.0935    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([45, 37]), tensor([-1., -1.]), tensor([0, 0]), tensor([-5.34986170e-21,  2.44158551e-01]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([45, 37]), tensor([-1.,  1.]), tensor([0, 0]), tensor([-5.34986170e-21,  1.25802562e-01]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([45, 37]), tensor([ 1., -1.]), tensor([0, 0]), tensor([-5.34986170e-21,  2.49522969e-01]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([45, 37]), tensor([1., 1.]), tensor([0, 0]), tensor([-5.34986170e-21,  1.24450728e-01]), tensor([0, 1]))}
Shallow branching resets to n domains:  4
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.014942169189453125

all verified at 0th iter
Time: prepare 0.0005    bound 0.0050    transfer 0.0001    finalize 0.0002    func 0.0058    
Accumulated time: func 0.2010    prepare 0.0311    bound 0.1669    transfer 0.0021    finalize 0.0057    
After pruning, left:  0

Back to Regular BaB


Properties batch 6, size 1
Remaining timeout: 197.50199270248413
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.50191569328308
Verifying property 7 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.01777911]], device='cuda:0') need to verify.
Model prediction is: tensor([ -9.81927967,  -9.30375195, -10.87481976,  -8.97626114, -10.13474369,
         -8.76882172, -10.25335312,  -9.09837914,  -6.59457874, -10.58987808],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.01777911]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 517
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 188
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 726
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010800361633300781
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0177764892578125
10 lb beta sum: 0.0, worst -0.01778125762939453
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0520    transfer 0.0001    finalize 0.0001    func 0.0525    
Accumulated time: func 0.0525    prepare 0.0002    bound 0.0520    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] 
split level 1: [/input-12, 45] 
split level 2: [/input-12, 37] 
split level 3: [/input-12, 4] 
split level 4: [/input-12, 51] 
split level 5: [/input-12, 25] 
split level 6: [/input-12, 26] 
split level 7: [/input, 1735] 
split level 8: [/input-8, 1452] 
split level 9: [/input-12, 6] 
split level 10: [/input, 1720] 
split level 11: [/input-8, 1459] 
split level 12: [/input-8, 921] 
split level 13: [/input, 1690] 
split level 14: [/input, 1706] 
split level 15: [/input, 1692] 
split level 16: [/input-8, 1011] 
split level 17: [/input, 1734] 
split level 18: [/input-12, 1] 
split level 19: [/input, 2248] 
split level 20: [/input-8, 1460] 
split level 21: [/input-8, 870] 
split level 22: [/input, 1736] 
split level 23: [/input-8, 1010] 
split level 24: [/input, 1674] 
split level 25: [/input, 1704] 
split level 26: [/input, 1721] 
split level 27: [/input, 1705] 
split level 28: [/input, 1723] 
split level 29: [/input, 1675] 
split level 30: [/input-8, 1451] 
split level 31: [/input, 1739] 
split level 32: [/input, 2686] 
split level 33: [/input-8, 1438] 
split level 34: [/input, 2217] 
split level 35: [/input-8, 493] 
split level 36: [/input, 1691] 
split level 37: [/input-8, 923] 
split level 38: [/input, 2743] 
split level 39: [/input-8, 1596] 
split level 40: [/input, 2702] 
split level 41: [/input, 2219] 
split level 42: [/input-8, 1445] 
split level 43: [/input, 2199] 
split level 44: [/input, 1755] 
split level 45: [/input-8, 1962] 
split level 46: [/input, 2774] 
split level 47: [/input-8, 949] 
split level 48: [/input, 2776] 
split level 49: [/input-8, 1444] 
split level 50: [/input, 1733] 
split level 51: [/input-8, 1293] 
split level 52: [/input-8, 494] 
split level 53: [/input-8, 931] 
split level 54: [/input, 2216] 
split level 55: [/input, 2250] 
split level 56: [/input, 1689] 
split level 57: [/input, 2265] 
split level 58: [/input, 2684] 
split level 59: [/input, 2729] 
split level 60: [/input-8, 1453] 
split level 61: [/input-8, 862] 
split level 62: [/input-8, 517] 
split level 63: [/input, 2485] 
split level 64: [/input-8, 942] 
split level 65: [/input, 2685] 
split level 66: [/input, 2476] 
split level 67: [/input-8, 301] 
split level 68: [/input, 2213] 
split level 69: [/input-8, 1050] 
split level 70: [/input, 1672] 
split level 71: [/input-8, 1868] 
split level 72: [/input, 2200] 
split level 73: [/input-8, 1644] 
split level 74: [/input-8, 1937] 
split level 75: [/input, 1747] 
split level 76: [/input, 1658] 
split level 77: [/input, 2188] 
split level 78: [/input-8, 852] 
split level 79: [/input, 2157] 
split level 80: [/input, 1452] 
split level 81: [/input-8, 527] 
split level 82: [/input-8, 1965] 
split level 83: [/input, 2703] 
split level 84: [/input, 1647] 
split level 85: [/input-8, 522] 
split level 86: [/input, 2197] 
split level 87: [/input-8, 1064] 
split level 88: [/input, 1686] 
split level 89: [/input, 1636] 
split level 90: [/input, 2773] 
split level 91: [/input, 1478] 
split level 92: [/input, 1607] 
split level 93: [/input, 2486] 
split level 94: [/input-8, 488] 
split level 95: [/input, 2492] 
split level 96: [/input, 2282] 
split level 97: [/input-8, 1588] 
split level 98: [/input, 2989] 
split level 99: [/input, 2190] 
split level 100: [/input-8, 1369] 
split level 101: [/input-8, 1592] 
split level 102: [/input, 2493] 
split level 103: [/input-8, 1925] 
split level 104: [/input-8, 1583] 
split level 105: [/input, 2501] 
split level 106: [/input, 2281] 
split level 107: [/input, 3544] 
split level 108: [/input, 1481] 
split level 109: [/input-8, 1309] 
split level 110: [/input, 4043] 
split level 111: [/input, 1710] 
split level 112: [/input, 1731] 
split level 113: [/input-8, 387] 
split level 114: [/input-8, 835] 
split level 115: [/input-8, 1485] 
split level 116: [/input-8, 836] 
split level 117: [/input, 2164] 
split level 118: [/input, 3781] 
split level 119: [/input, 3560] 
split level 120: [/input, 2503] 
split level 121: [/input-8, 474] 
split level 122: [/input, 1742] 
split level 123: [/input-8, 114] 
split level 124: [/input-8, 963] 
split level 125: [/input, 2509] 
split level 126: [/input, 3527] 
split level 127: [/input, 2504] 
split level 128: [/input-8, 1449] 
split level 129: [/input-8, 1739] 
split level 130: [/input, 2535] 
split level 131: [/input-8, 647] 
split level 132: [/input, 3246] 
split level 133: [/input, 2462] 
split level 134: [/input-8, 982] 
split level 135: [/input-8, 1656] 
split level 136: [/input, 2155] 
split level 137: [/input, 2206] 
split level 138: [/input, 2521] 
split level 139: [/input, 2067] 
split level 140: [/input, 3396] 
split level 141: [/input, 2244] 
split level 142: [/input, 2324] 
split level 143: [/input, 2148] 
split level 144: [/input, 2171] 
split level 145: [/input, 2472] 
split level 146: [/input, 3090] 
split level 147: [/input-8, 1457] 
split level 148: [/input-8, 516] 
split level 149: [/input-8, 1013] 
split level 150: [/input, 113] 
split level 151: [/input, 2473] 
split level 152: [/input, 2494] 
split level 153: [/input, 2322] 
split level 154: [/input, 4029] 
split level 155: [/input, 3005] 
split level 156: [/input, 3786] 
split level 157: [/input, 3395] 
split level 158: [/input, 3749] 
split level 159: [/input, 3783] 
split level 160: [/input, 2973] 
split level 161: [/input, 2508] 
split level 162: [/input, 2222] 
split level 163: [/input, 2523] 
split level 164: [/input-8, 1933] 
split level 165: [/input, 3753] 
split level 166: [/input, 2083] 
split level 167: [/input, 3105] 
split level 168: [/input, 2506] 
split level 169: [/input, 2384] 
split level 170: [/input-8, 1945] 
split level 171: [/input, 3529] 
split level 172: [/input, 2337] 
split level 173: [/input, 2416] 
split level 174: [/input-8, 1024] 
split level 175: [/input, 3770] 
split level 176: [/input, 98] 
split level 177: [/input-8, 1959] 
split level 178: [/input, 2942] 
split level 179: [/input, 3767] 
split level 180: [/input-8, 962] 
split level 181: [/input, 2132] 
split level 182: [/input, 3153] 
split level 183: [/input-8, 661] 
split level 184: [/input, 2306] 
split level 185: [/input-8, 471] 
split level 186: [/input, 252] 
split level 187: [/input, 2285] 
split level 188: [/input, 3091] 
split level 189: [/input, 2369] 
split level 190: [/input, 2558] 
split level 191: [/input, 2499] 
split level 192: [/input, 2458] 
split level 193: [/input, 3522] 
split level 194: [/input, 2293] 
split level 195: [/input, 2479] 
split level 196: [/input, 239] 
split level 197: [/input, 1498] 
split level 198: [/input, 3490] 
split level 199: [/input, 3295] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.017557382583618164
10 lb beta sum: 0.0, worst -0.017559051513671875
Time: prepare 0.0119    bound 0.0999    transfer 0.0012    finalize 0.0032    func 0.1189    
Accumulated time: func 0.1713    prepare 0.0219    bound 0.1519    transfer 0.0013    finalize 0.0033    
all_split False
======================Cut inference begins======================
max lb tensor(0.40601254) min lb tensor(-0.01755166)
Number of Verified Splits: 53 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.013671159744262695 
BICCOS Cumulative time: 0.013671159744262695
Preprocessing time: 0.010394811630249023 Inference time: 0.0021173954010009766 Add cuts time: 0.0009634494781494141 Cut analysis time: 0.00019550323486328125
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.5074    set_bounds 0.0100    solve 0.1190    add 0.0107    
Accumulated time: pickout 0.0003    decision 0.5074    set_bounds 0.0100    solve 0.1190    add 0.0107    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([58]), tensor([-1.]), tensor([0]), tensor([1.60323488e-09]), tensor([0]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([58]), tensor([1.]), tensor([0]), tensor([-5.34985524e-21]), tensor([0]))}
Shallow branching resets to n domains:  2
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.1185462474822998

all verified at 0th iter
Time: prepare 0.0004    bound 0.0047    transfer 0.0001    finalize 0.0002    func 0.0054    
Accumulated time: func 0.1767    prepare 0.0223    bound 0.1566    transfer 0.0014    finalize 0.0034    
After pruning, left:  0

Back to Regular BaB


Properties batch 8, size 1
Remaining timeout: 196.58058214187622
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 3.4195 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 159, vnnlib ID: 159 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.94552898, -11.88663006, -11.47941303,  -9.72749805, -12.11168003,
         -10.94520473,  -8.55705357, -13.68229103, -10.67903423, -11.17602921]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [836]; unstable size 836; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 189, 1, 836] with unstable size 188 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 836] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 836] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [188]; unstable size 188; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 188] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 188] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.05637676, 1.39599657, 1.75964952, 0.17517847, 2.39905357, 1.14613712,
         3.57038569, 0.74127924, 1.09699941]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0718 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 160, vnnlib ID: 160 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.69691086, -9.90914440, -3.04869223, -5.95901394, -2.41780186,
         -6.51351690, -5.05484104, -5.98770094, -7.13607407, -9.76951885]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [647]; unstable size 647; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 242, 1, 647] with unstable size 241 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 647] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 647] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [241]; unstable size 241; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 241] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 241] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.95681763,  5.94022274, -0.25544399,  2.46004200,  2.96836090,
          1.44257092,  2.64147186,  3.15622663,  5.52299976]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.69691086, -9.90914440, -3.04869223, -5.95901394, -2.41780186,
         -6.51351690, -5.05484104, -5.98770094, -7.13607407, -9.76951885]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.07it/s]100%|██████████| 1/1 [00:00<00:00,  9.06it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.53756809, -9.76719856, -2.86113811, -5.85877895, -2.57433796,
          -6.37398863, -5.08237123, -6.03231287, -7.07665539, -9.52616215]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.28680015]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1130 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 26.49098777770996
alpha/beta optimization time: 1.209693193435669
initial alpha-crown bounds: tensor([[ 2.05517387,  6.03731060, -0.21251784,  2.50705242,  3.02221227,
          1.49958646,  2.69033098,  3.27446342,  5.61737442]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.2125178426504135
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.57992696762085
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.57988739013672
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.5798625946045
Verifying property 2 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.21251784]], device='cuda:0') need to verify.
Model prediction is: tensor([-5.69691086, -9.90914440, -3.04869223, -5.95901394, -2.41780186,
        -6.51351690, -5.05484104, -5.98770094, -7.13607407, -9.76951885],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.21251784]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 647
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 238
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 906
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011014938354492188
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.21251705288887024
10 lb beta sum: 0.0, worst -0.21252168715000153
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0525    transfer 0.0001    finalize 0.0001    func 0.0530    
Accumulated time: func 0.0530    prepare 0.0002    bound 0.0525    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 54] 
split level 1: [/input-12, 1] 
split level 2: [/input-12, 25] 
split level 3: [/input-12, 37] 
split level 4: [/input-12, 93] 
split level 5: [/input-12, 26] 
split level 6: [/input-12, 51] 
split level 7: [/input-12, 72] 
split level 8: [/input-12, 42] 
split level 9: [/input-12, 44] 
split level 10: [/input-12, 82] 
split level 11: [/input-8, 1370] 
split level 12: [/input-8, 1300] 
split level 13: [/input-8, 1066] 
split level 14: [/input-8, 1878] 
split level 15: [/input-8, 1291] 
split level 16: [/input-8, 666] 
split level 17: [/input-8, 532] 
split level 18: [/input-8, 682] 
split level 19: [/input-8, 1290] 
split level 20: [/input-8, 1292] 
split level 21: [/input-8, 658] 
split level 22: [/input-8, 1373] 
split level 23: [/input-8, 1020] 
split level 24: [/input-8, 1043] 
split level 25: [/input-8, 1365] 
split level 26: [/input-8, 1357] 
split level 27: [/input-8, 542] 
split level 28: [/input-8, 673] 
split level 29: [/input-8, 1819] 
split level 30: [/input-8, 524] 
split level 31: [/input-8, 468] 
split level 32: [/input-8, 1374] 
split level 33: [/input-8, 1309] 
split level 34: [/input-8, 1297] 
split level 35: [/input-8, 1347] 
split level 36: [/input-8, 517] 
split level 37: [/input-8, 538] 
split level 38: [/input-8, 541] 
split level 39: [/input-8, 698] 
split level 40: [/input, 1142] 
split level 41: [/input-8, 1021] 
split level 42: [/input-8, 484] 
split level 43: [/input-8, 1354] 
split level 44: [/input, 3221] 
split level 45: [/input-8, 79] 
split level 46: [/input, 3219] 
split level 47: [/input, 3220] 
split level 48: [/input-8, 1477] 
split level 49: [/input-8, 476] 
split level 50: [/input-12, 78] 
split level 51: [/input-8, 526] 
split level 52: [/input-8, 1072] 
split level 53: [/input-8, 1778] 
split level 54: [/input-8, 1382] 
split level 55: [/input-8, 1289] 
split level 56: [/input-8, 1349] 
split level 57: [/input-8, 1326] 
split level 58: [/input-8, 979] 
split level 59: [/input, 2452] 
split level 60: [/input-8, 516] 
split level 61: [/input-8, 572] 
split level 62: [/input-8, 87] 
split level 63: [/input-8, 1281] 
split level 64: [/input-8, 1396] 
split level 65: [/input-8, 530] 
split level 66: [/input-8, 1342] 
split level 67: [/input-8, 1388] 
split level 68: [/input-8, 1137] 
split level 69: [/input-8, 670] 
split level 70: [/input-8, 1476] 
split level 71: [/input-8, 1389] 
split level 72: [/input-8, 107] 
split level 73: [/input-8, 1053] 
split level 74: [/input-8, 562] 
split level 75: [/input-8, 1093] 
split level 76: [/input-8, 1478] 
split level 77: [/input-8, 1018] 
split level 78: [/input-8, 1779] 
split level 79: [/input-8, 1764] 
split level 80: [/input-8, 515] 
split level 81: [/input, 4036] 
split level 82: [/input-8, 1130] 
split level 83: [/input, 2453] 
split level 84: [/input-8, 1036] 
split level 85: [/input, 3204] 
split level 86: [/input-8, 860] 
split level 87: [/input-8, 990] 
split level 88: [/input-8, 1780] 
split level 89: [/input, 3430] 
split level 90: [/input-8, 987] 
split level 91: [/input-8, 535] 
split level 92: [/input-8, 895] 
split level 93: [/input-8, 1473] 
split level 94: [/input, 2906] 
split level 95: [/input, 3429] 
split level 96: [/input-12, 53] 
split level 97: [/input-12, 28] 
split level 98: [/input-8, 1438] 
split level 99: [/input, 1624] 
split level 100: [/input-8, 977] 
split level 101: [/input, 4046] 
split level 102: [/input-8, 564] 
split level 103: [/input-8, 565] 
split level 104: [/input-8, 1475] 
split level 105: [/input-8, 1777] 
split level 106: [/input, 450] 
split level 107: [/input, 459] 
split level 108: [/input, 4039] 
split level 109: [/input-8, 1738] 
split level 110: [/input-8, 1765] 
split level 111: [/input-8, 91] 
split level 112: [/input-8, 1457] 
split level 113: [/input, 4006] 
split level 114: [/input, 2149] 
split level 115: [/input-8, 552] 
split level 116: [/input, 453] 
split level 117: [/input, 4005] 
split level 118: [/input, 4020] 
split level 119: [/input, 1444] 
split level 120: [/input, 2922] 
split level 121: [/input-8, 1474] 
split level 122: [/input, 3445] 
split level 123: [/input-8, 1284] 
split level 124: [/input, 3452] 
split level 125: [/input, 2551] 
split level 126: [/input-8, 559] 
split level 127: [/input-8, 543] 
split level 128: [/input, 2235] 
split level 129: [/input, 460] 
split level 130: [/input-8, 982] 
split level 131: [/input, 2251] 
split level 132: [/input, 2535] 
split level 133: [/input, 2909] 
split level 134: [/input-8, 112] 
split level 135: [/input-8, 1294] 
split level 136: [/input, 410] 
split level 137: [/input, 2910] 
split level 138: [/input, 438] 
split level 139: [/input, 2507] 
split level 140: [/input-8, 569] 
split level 141: [/input-8, 1439] 
split level 142: [/input, 2553] 
split level 143: [/input, 2469] 
split level 144: [/input, 1993] 
split level 145: [/input, 3991] 
split level 146: [/input, 1782] 
split level 147: [/input, 2926] 
split level 148: [/input, 2492] 
split level 149: [/input, 2556] 
split level 150: [/input-8, 521] 
split level 151: [/input, 2547] 
split level 152: [/input, 2548] 
split level 153: [/input, 2526] 
split level 154: [/input, 3303] 
split level 155: [/input, 3268] 
split level 156: [/input, 2893] 
split level 157: [/input, 2203] 
split level 158: [/input, 445] 
split level 159: [/input, 2519] 
split level 160: [/input, 2924] 
split level 161: [/input, 2525] 
split level 162: [/input, 2749] 
split level 163: [/input-8, 71] 
split level 164: [/input, 2887] 
split level 165: [/input, 239] 
split level 166: [/input, 3317] 
split level 167: [/input-8, 974] 
split level 168: [/input, 3300] 
split level 169: [/input, 3469] 
split level 170: [/input, 4058] 
split level 171: [/input, 3254] 
split level 172: [/input, 2541] 
split level 173: [/input-8, 594] 
split level 174: [/input, 2491] 
split level 175: [/input, 1783] 
split level 176: [/input, 3318] 
split level 177: [/input, 250] 
split level 178: [/input, 1947] 
split level 179: [/input-8, 1766] 
split level 180: [/input, 1784] 
split level 181: [/input, 3188] 
split level 182: [/input, 4061] 
split level 183: [/input, 446] 
split level 184: [/input, 4018] 
split level 185: [/input, 3284] 
split level 186: [/input, 2538] 
split level 187: [/input, 2921] 
split level 188: [/input-8, 931] 
split level 189: [/input, 2783] 
split level 190: [/input, 2508] 
split level 191: [/input, 1691] 
split level 192: [/input, 3262] 
split level 193: [/input, 3304] 
split level 194: [/input, 2929] 
split level 195: [/input, 3428] 
split level 196: [/input, 1526] 
split level 197: [/input, 1962] 
split level 198: [/input, 3575] 
split level 199: [/input, 1977] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.212520033121109
10 lb beta sum: 0.0, worst -0.21251848340034485
Time: prepare 0.0120    bound 0.0984    transfer 0.0012    finalize 0.0031    func 0.1174    
Accumulated time: func 0.1704    prepare 0.0221    bound 0.1509    transfer 0.0013    finalize 0.0033    
all_split False
======================Cut inference begins======================
max lb tensor(0.01664484) min lb tensor(-0.21251687)
Number of Verified Splits: 1 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.011119842529296875 
BICCOS Cumulative time: 0.011119842529296875
Preprocessing time: 0.01044774055480957 Inference time: 8.153915405273438e-05 Add cuts time: 4.0531158447265625e-05 Cut analysis time: 0.0005500316619873047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20007 (1), -0.19931 (1), -0.19922 (1), -0.19884 (1), -0.19873 (1), -0.19870 (1), -0.19839 (1), -0.19818 (1), -0.19745 (1), -0.19722 (1), -0.19709 (1), -0.19693 (1), -0.19679 (1), -0.19658 (1), -0.19653 (1), -0.19645 (1), -0.19573 (1), -0.19547 (1), -0.19451 (1), -0.19368 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5067    set_bounds 0.0099    solve 0.1175    add 0.0830    
Accumulated time: pickout 0.0004    decision 0.5067    set_bounds 0.0099    solve 0.1175    add 0.0830    
Current (lb-rhs): -0.2000734806060791
50 domains visited
Cumulative time: 0.8048748970031738

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 1] [/input-12, 54] [/input-12, 54] [/input-12, 1] [/input-12, 54] [/input-12, 54] [/input-12, 54] 
split level 1: [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 25] [/input-12, 25] [/input-12, 1] [/input-12, 25] [/input-12, 1] [/input-12, 1] [/input-12, 1] 
split level 2: [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 25] [/input-12, 25] [/input-12, 25] 
split level 3: [/input-12, 37] [/input-12, 26] [/input-12, 37] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 37] [/input-12, 37] [/input-12, 37] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17806120216846466
10 lb beta sum: 0.18744227290153503, worst -0.17715050280094147
Time: prepare 0.0080    bound 0.1155    transfer 0.0008    finalize 0.0026    func 0.1295    
Accumulated time: func 0.3000    prepare 0.0304    bound 0.2665    transfer 0.0021    finalize 0.0059    
all_split False
======================Cut inference begins======================
max lb tensor(0.08656776) min lb tensor(-0.17697017)
Number of Verified Splits: 29 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.014586687088012695 
BICCOS Cumulative time: 0.02570652961730957
Preprocessing time: 0.012504339218139648 Inference time: 0.0013113021850585938 Add cuts time: 0.00041747093200683594 Cut analysis time: 0.0003535747528076172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06183 (2), -0.06108 (2), -0.06098 (2), -0.06010 (2), -0.06008 (2), -0.05841 (2), -0.05738 (2), -0.05617 (2), -0.05609 (2), -0.05608 (2), -0.05552 (2), -0.05478 (2), -0.05453 (2), -0.05430 (2), -0.05320 (2), -0.05159 (2), -0.05085 (2), -0.05064 (2), -0.05053 (2), -0.04944 (2), 
Length of domains: 50
Time: pickout 0.0012    decision 0.0222    set_bounds 0.0132    solve 0.1297    add 0.0828    
Accumulated time: pickout 0.0015    decision 0.5289    set_bounds 0.0231    solve 0.2472    add 0.1658    
Current (lb-rhs): -0.06182761490345001
100 domains visited
Cumulative time: 1.068671703338623

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1] [/input-12, 54] [/input-12, 54] [/input-12, 25] [/input-12, 25] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] 
split level 1: [/input-12, 25] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 25] 
split level 2: [/input-12, 37] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 37] 
split level 3: [/input-12, 26] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 26] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.041150301694869995
10 lb beta sum: 0.30646517872810364, worst -0.02137121558189392
Time: prepare 0.0069    bound 0.1180    transfer 0.0008    finalize 0.0030    func 0.1313    
Accumulated time: func 0.4313    prepare 0.0376    bound 0.3844    transfer 0.0029    finalize 0.0088    
all_split False
======================Cut inference begins======================
max lb tensor(0.15123588) min lb tensor(-0.02105305)
Number of Verified Splits: 394 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.03742027282714844 
BICCOS Cumulative time: 0.06312680244445801
Preprocessing time: 0.012384414672851562 Inference time: 0.018111228942871094 Add cuts time: 0.006719350814819336 Cut analysis time: 0.0002052783966064453
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0199    set_bounds 0.0155    solve 0.1314    add 0.0186    
Accumulated time: pickout 0.0026    decision 0.5488    set_bounds 0.0386    solve 0.3786    add 0.1843    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([54, 25,  1]), tensor([-1., -1., -1.]), tensor([0, 0, 0]), tensor([5.78373793e-10, 9.12893862e-02, 5.40400445e-02]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([54, 25,  1]), tensor([-1., -1.,  1.]), tensor([0, 0, 0]), tensor([5.78373793e-10, 9.12893862e-02, 9.99763012e-02]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([54, 25,  1]), tensor([-1.,  1., -1.]), tensor([0, 0, 0]), tensor([5.78373793e-10, 6.22047633e-02, 9.87886190e-02]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([54, 25,  1]), tensor([-1.,  1.,  1.]), tensor([0, 0, 0]), tensor([5.78373793e-10, 6.22047633e-02, 9.27545428e-02]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([54, 26,  1]), tensor([ 1., -1., -1.]), tensor([0, 0, 0]), tensor([5.78373793e-10, 5.57919294e-02, 5.57578653e-02]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([54, 26,  1]), tensor([ 1., -1.,  1.]), tensor([0, 0, 0]), tensor([5.78373793e-10, 5.57919294e-02, 9.92326587e-02]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([54, 26,  1]), tensor([ 1.,  1., -1.]), tensor([0, 0, 0]), tensor([5.78373793e-10, 3.08175702e-02, 1.58616245e-01]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([54, 26,  1]), tensor([1., 1., 1.]), tensor([0, 0, 0]), tensor([5.78373793e-10, 3.08175702e-02, 9.88000333e-02]), tensor([0, 1, 2]))}
Shallow branching resets to n domains:  8
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.005913853645324707

all verified at 1th iter
Time: prepare 0.0005    bound 0.0102    transfer 0.0002    finalize 0.0002    func 0.0111    
Accumulated time: func 0.4424    prepare 0.0380    bound 0.3947    transfer 0.0030    finalize 0.0090    
After pruning, left:  0

Back to Regular BaB


Properties batch 3, size 1
Remaining timeout: 197.02571630477905
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 197.0256404876709
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 197.025128364563
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.0250964164734
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.02507638931274
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.0250563621521
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.9750 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 161, vnnlib ID: 161 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.37989235, -12.20897579,  -6.17734432,  -5.76625729,  -6.93807411,
          -3.77729273,  -8.37195778,  -7.49653196, -10.76665974, -11.58906174]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [456]; unstable size 456; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 195, 1, 456] with unstable size 194 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 456] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 456] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [194]; unstable size 194; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 194] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 194] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.38867855, 6.47063160, 1.48629010, 1.57262707, 2.21376419, 3.23497462,
         2.94880295, 5.30806923, 6.18771648]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0672 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 162, vnnlib ID: 162 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-13.11128426, -16.94595146,  -9.70340824, -12.93247986, -10.71098232,
         -13.59650612, -11.43742085, -14.93857956, -14.94828510, -17.84584045]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [429]; unstable size 429; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 211, 1, 429] with unstable size 210 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 429] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 429] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [210]; unstable size 210; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 210] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 210] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.12003708, 5.67749071, 2.36852169, 0.16531825, 2.94698167, 0.60729003,
         3.85684562, 3.46587420, 6.63982296]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0758 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 163, vnnlib ID: 163 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.02505970,  -9.52995014,  -8.17180538,  -8.71479893,  -8.61084557,
          -8.27292728,  -9.82778072,  -7.94948912, -11.30757618,  -9.90987301]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [638]; unstable size 638; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 260, 1, 638] with unstable size 259 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 638] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 638] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [259]; unstable size 259; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 259] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 259] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.64107996, -0.23480129, -1.33058977, -0.47275126, -0.46761465,
         -0.91006315,  0.31482792,  1.61070669,  0.12702465]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.02505970,  -9.52995014,  -8.17180538,  -8.71479893,  -8.61084557,
          -8.27292728,  -9.82778072,  -7.94948912, -11.30757618,  -9.90987301]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.50275230,  -9.31137848,  -7.50799370,  -8.29128933,  -8.19631863,
           -7.91926050,  -9.32222462,  -7.97495413, -10.89629650,  -9.75931168],
         [ -8.50275230,  -9.31137848,  -7.50799370,  -8.29128933,  -8.19631863,
           -7.91926050,  -9.32222462,  -7.97495413, -10.89629650,  -9.75931168]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.52779818,  1.33642435, -0.46696043,  0.31633520,  0.22136450,
          -0.05569363]]], device='cuda:0')
number of violation:  2
Attack finished in 0.0067 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0795 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 164, vnnlib ID: 164 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.41563416, -7.71300030, -2.86234260, -2.13727427, -3.26359797,
         -1.15524995, -3.90352178, -2.95602751, -6.72349644, -6.40303564]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [677]; unstable size 677; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 255, 1, 677] with unstable size 254 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 677] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 677] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [254]; unstable size 254; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 254] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 254] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.88557839, 4.58735847, 0.73231339, 0.69587100, 1.00518179, 1.60793078,
         0.80470550, 3.98152113, 3.66006374]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0640 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 165, vnnlib ID: 165 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.93124580, -13.00026798, -10.51418877, -11.34232426, -11.59994984,
         -12.09090137, -13.21082306, -11.37638664, -10.77716541, -12.72988605]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [678]; unstable size 678; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 229, 1, 678] with unstable size 228 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 678] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 678] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [228]; unstable size 228; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 228] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 228] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.97155762, -0.03237724, -1.84702158, -0.69079232, -0.48902345,
          0.04457080,  0.97582519, -2.07122707, -0.15928864]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.93124580, -13.00026798, -10.51418877, -11.34232426, -11.59994984,
         -12.09090137, -13.21082306, -11.37638664, -10.77716541, -12.72988605]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.93124771, -13.00026798, -10.51418972, -11.34232521, -11.59995174,
          -12.09090233, -13.21082497, -11.37638760, -10.77716732, -12.72988605],
         [-11.93124771, -13.00026798, -10.51418972, -11.34232521, -11.59995174,
          -12.09090233, -13.21082497, -11.37638760, -10.77716732, -12.72988605]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.55486012,  1.62388039, -0.86219788, -0.03406239,  0.22356415,
          -0.59922028,  1.35349846]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         ...,


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]]]], device='cuda:0') torch.Size([1, 7, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0850 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 166, vnnlib ID: 166 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-8.11835384, -8.97128582, -5.58492565, -4.69414091, -4.89179802,
         -5.64415693, -2.85636353, -6.39860678, -9.19930935, -7.69397116]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [551]; unstable size 551; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 328, 1, 551] with unstable size 327 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 551] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 551] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [327]; unstable size 327; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 327] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 327] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.57804918e+00,  3.19466400e+00,  7.62258053e-01,  2.92238951e-01,
         -4.12940979e-04,  8.40279341e-01,  1.08616221e+00,  3.18620443e+00,
          2.37681580e+00]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-8.11835384, -8.97128582, -5.58492565, -4.69414091, -4.89179802,
         -5.64415693, -2.85636353, -6.39860678, -9.19930935, -7.69397116]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.98it/s]100%|██████████| 1/1 [00:00<00:00,  8.97it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.55580521, -8.57808781, -5.04000854, -4.20195580, -4.09700203,
          -5.05925369, -2.93464255, -5.77540493, -8.65878296, -7.32569599]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.16235948]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1141 seconds.
PGD attack failed
verified_status unknown
verified_success False

all verified at 1th iter
best_l after optimization: 14.46798038482666
alpha/beta optimization time: 0.02538752555847168
initial alpha-crown bounds: tensor([[2.59561157, 3.21909380, 0.77398062, 0.30205655, 0.01444960, 0.85292077,
         1.10492134, 3.20970917, 2.39523673]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 0 ; Worst class: (+ rhs) 0.014449596405029297
verified with init bound!
Result: safe-incomplete in 0.2069 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 167, vnnlib ID: 167 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.73988724, -9.75906086, -5.44053173, -6.54372168, -6.64882469,
         -6.77933979, -7.41226196, -7.94059706, -5.61829853, -8.84854412]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [625]; unstable size 625; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 289, 1, 625] with unstable size 288 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 625] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 625] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [288]; unstable size 288; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 288] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 288] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.12974119, -0.58860964,  0.22682750,  0.44695199,  0.33009398,
          0.98268515,  1.32415771, -0.52337849,  2.49502420]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.73988724, -9.75906086, -5.44053173, -6.54372168, -6.64882469,
         -6.77933979, -7.41226196, -7.94059706, -5.61829853, -8.84854412]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.11it/s]100%|██████████| 1/1 [00:00<00:00,  9.10it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.69770527, -9.33743763, -5.35973167, -6.24397135, -6.46449852,
          -6.50081301, -7.10666513, -7.71766424, -4.85390425, -8.43731594],
         [-4.69770527, -9.33743763, -5.35973167, -6.24397135, -6.46449852,
          -6.50081301, -7.10666513, -7.71766424, -4.85390425, -8.43731594]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.66202641, 0.15619898]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1126 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 8.481111526489258
alpha/beta optimization time: 1.2058546543121338
initial alpha-crown bounds: tensor([[ 3.24760461, -0.53066146,  0.27715814,  0.50497162,  0.39338511,
          1.04265046,  1.40458274, -0.43028873,  2.57170916]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.5306614637374878
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6311264038086
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.631085395813
Verifying property 1 with 1 instances.
##### Instance 167 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.53066146]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.73988724, -9.75906086, -5.44053173, -6.54372168, -6.64882469,
        -6.77933979, -7.41226196, -7.94059706, -5.61829853, -8.84854412],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.53066146]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 625
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 280
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 926
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.0001125335693359375
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5306602716445923
10 lb beta sum: 0.0, worst -0.5306674838066101
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0552    transfer 0.0001    finalize 0.0001    func 0.0557    
Accumulated time: func 0.0557    prepare 0.0002    bound 0.0552    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 54] 
split level 1: [/input-12, 31] 
split level 2: [/input-12, 1] 
split level 3: [/input-12, 26] 
split level 4: [/input-12, 4] 
split level 5: [/input-12, 41] 
split level 6: [/input-12, 90] 
split level 7: [/input-12, 10] 
split level 8: [/input-8, 1637] 
split level 9: [/input-8, 1628] 
split level 10: [/input-12, 45] 
split level 11: [/input-8, 1438] 
split level 12: [/input-8, 542] 
split level 13: [/input-8, 1620] 
split level 14: [/input-8, 1309] 
split level 15: [/input-8, 845] 
split level 16: [/input-8, 1889] 
split level 17: [/input-8, 659] 
split level 18: [/input-8, 1890] 
split level 19: [/input-8, 1052] 
split level 20: [/input-8, 996] 
split level 21: [/input-8, 413] 
split level 22: [/input-8, 1885] 
split level 23: [/input-8, 1446] 
split level 24: [/input-8, 1003] 
split level 25: [/input-8, 1069] 
split level 26: [/input-8, 1011] 
split level 27: [/input-8, 284] 
split level 28: [/input-8, 1289] 
split level 29: [/input-8, 1437] 
split level 30: [/input-8, 549] 
split level 31: [/input-8, 854] 
split level 32: [/input-8, 1453] 
split level 33: [/input-8, 1461] 
split level 34: [/input-8, 1071] 
split level 35: [/input-8, 1013] 
split level 36: [/input-8, 1651] 
split level 37: [/input, 2268] 
split level 38: [/input-8, 1054] 
split level 39: [/input-8, 1044] 
split level 40: [/input-8, 422] 
split level 41: [/input-8, 1648] 
split level 42: [/input-8, 1891] 
split level 43: [/input-8, 1460] 
split level 44: [/input, 3273] 
split level 45: [/input-8, 1010] 
split level 46: [/input-8, 412] 
split level 47: [/input-8, 550] 
split level 48: [/input-8, 1656] 
split level 49: [/input-8, 1253] 
split level 50: [/input-8, 1017] 
split level 51: [/input-8, 1063] 
split level 52: [/input, 2188] 
split level 53: [/input, 3479] 
split level 54: [/input-8, 614] 
split level 55: [/input-8, 698] 
split level 56: [/input, 3224] 
split level 57: [/input, 2172] 
split level 58: [/input, 2177] 
split level 59: [/input, 2235] 
split level 60: [/input-8, 1027] 
split level 61: [/input-8, 1470] 
split level 62: [/input-8, 276] 
split level 63: [/input-8, 1021] 
split level 64: [/input-8, 924] 
split level 65: [/input-8, 410] 
split level 66: [/input-8, 859] 
split level 67: [/input-8, 1001] 
split level 68: [/input-8, 678] 
split level 69: [/input, 442] 
split level 70: [/input, 2230] 
split level 71: [/input, 3438] 
split level 72: [/input, 937] 
split level 73: [/input, 3495] 
split level 74: [/input-8, 1640] 
split level 75: [/input-8, 867] 
split level 76: [/input-8, 1870] 
split level 77: [/input, 3208] 
split level 78: [/input, 2709] 
split level 79: [/input, 1585] 
split level 80: [/input-8, 1893] 
split level 81: [/input-8, 1608] 
split level 82: [/input-8, 690] 
split level 83: [/input-8, 1436] 
split level 84: [/input, 457] 
split level 85: [/input-8, 792] 
split level 86: [/input, 1769] 
split level 87: [/input, 2473] 
split level 88: [/input, 3242] 
split level 89: [/input, 2754] 
split level 90: [/input, 2913] 
split level 91: [/input, 3468] 
split level 92: [/input-8, 563] 
split level 93: [/input, 1626] 
split level 94: [/input, 324] 
split level 95: [/input, 2251] 
split level 96: [/input, 3240] 
split level 97: [/input, 3564] 
split level 98: [/input, 1675] 
split level 99: [/input-8, 630] 
split level 100: [/input, 3226] 
split level 101: [/input, 3449] 
split level 102: [/input, 198] 
split level 103: [/input, 1449] 
split level 104: [/input, 2519] 
split level 105: [/input, 2537] 
split level 106: [/input, 2293] 
split level 107: [/input-8, 1625] 
split level 108: [/input, 294] 
split level 109: [/input-8, 421] 
split level 110: [/input, 3320] 
split level 111: [/input-8, 1059] 
split level 112: [/input, 1627] 
split level 113: [/input, 3496] 
split level 114: [/input, 3454] 
split level 115: [/input, 1768] 
split level 116: [/input, 1411] 
split level 117: [/input, 4038] 
split level 118: [/input-8, 1641] 
split level 119: [/input, 490] 
split level 120: [/input-8, 406] 
split level 121: [/input, 4017] 
split level 122: [/input, 3239] 
split level 123: [/input, 2601] 
split level 124: [/input-8, 1347] 
split level 125: [/input-8, 1340] 
split level 126: [/input-8, 1614] 
split level 127: [/input, 3257] 
split level 128: [/input-8, 1447] 
split level 129: [/input, 489] 
split level 130: [/input, 2245] 
split level 131: [/input, 1434] 
split level 132: [/input, 2229] 
split level 133: [/input, 1577] 
split level 134: [/input, 4018] 
split level 135: [/input, 2489] 
split level 136: [/input, 2246] 
split level 137: [/input, 2073] 
split level 138: [/input, 4055] 
split level 139: [/input-8, 2044] 
split level 140: [/input, 441] 
split level 141: [/input, 2265] 
split level 142: [/input, 1672] 
split level 143: [/input, 3274] 
split level 144: [/input, 2439] 
split level 145: [/input-8, 1055] 
split level 146: [/input, 2504] 
split level 147: [/input, 2074] 
split level 148: [/input, 970] 
split level 149: [/input-8, 606] 
split level 150: [/input-8, 648] 
split level 151: [/input, 1602] 
split level 152: [/input, 2585] 
split level 153: [/input, 2089] 
split level 154: [/input, 3127] 
split level 155: [/input, 426] 
split level 156: [/input, 901] 
split level 157: [/input, 2513] 
split level 158: [/input, 2600] 
split level 159: [/input, 2554] 
split level 160: [/input, 343] 
split level 161: [/input, 3142] 
split level 162: [/input-8, 1880] 
split level 163: [/input-8, 952] 
split level 164: [/input, 3442] 
split level 165: [/input, 1415] 
split level 166: [/input, 2252] 
split level 167: [/input, 4049] 
split level 168: [/input, 291] 
split level 169: [/input-8, 393] 
split level 170: [/input, 3669] 
split level 171: [/input, 3193] 
split level 172: [/input, 2475] 
split level 173: [/input, 3681] 
split level 174: [/input, 1416] 
split level 175: [/input, 3262] 
split level 176: [/input, 2257] 
split level 177: [/input-8, 1236] 
split level 178: [/input, 485] 
split level 179: [/input, 3532] 
split level 180: [/input, 3110] 
split level 181: [/input, 3288] 
split level 182: [/input, 3259] 
split level 183: [/input, 825] 
split level 184: [/input-8, 1455] 
split level 185: [/input, 2603] 
split level 186: [/input, 2584] 
split level 187: [/input, 2428] 
split level 188: [/input, 972] 
split level 189: [/input, 2470] 
split level 190: [/input, 3665] 
split level 191: [/input, 4043] 
split level 192: [/input, 2203] 
split level 193: [/input, 2301] 
split level 194: [/input, 2213] 
split level 195: [/input, 3309] 
split level 196: [/input, 4056] 
split level 197: [/input, 1464] 
split level 198: [/input, 3715] 
split level 199: [/input, 3580] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.530579686164856
10 lb beta sum: 0.0, worst -0.5305609703063965
Time: prepare 0.0117    bound 0.1017    transfer 0.0013    finalize 0.0034    func 0.1208    
Accumulated time: func 0.1765    prepare 0.0219    bound 0.1569    transfer 0.0014    finalize 0.0035    
all_split False
======================Cut inference begins======================
max lb tensor(-0.11686015) min lb tensor(-0.53055578)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.01057291030883789 
BICCOS Cumulative time: 0.01057291030883789
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.52136 (1), -0.52083 (1), -0.52066 (1), -0.52060 (1), -0.52059 (1), -0.52049 (1), -0.52012 (1), -0.51991 (1), -0.51951 (1), -0.51931 (1), -0.51827 (1), -0.51807 (1), -0.51798 (1), -0.51768 (1), -0.51642 (1), -0.51638 (1), -0.51618 (1), -0.51527 (1), -0.51500 (1), -0.51495 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5121    set_bounds 0.0098    solve 0.1209    add 0.1315    
Accumulated time: pickout 0.0004    decision 0.5121    set_bounds 0.0098    solve 0.1209    add 0.1315    
Current (lb-rhs): -0.5213556885719299
50 domains visited
Cumulative time: 0.8578691482543945

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 54] [/input-12, 31] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] 
split level 1: [/input-12, 31] [/input-12, 26] [/input-12, 31] [/input-12, 1] [/input-12, 26] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] 
split level 2: [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 26] [/input-12, 1] [/input-12, 26] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] 
split level 3: [/input-12, 26] [/input-12, 4] [/input-12, 26] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 26] [/input-12, 4] [/input-12, 4] [/input-12, 26] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4770684838294983
10 lb beta sum: 0.0, worst -0.4767147898674011
Time: prepare 0.0141    bound 0.0985    transfer 0.0008    finalize 0.0027    func 0.1186    
Accumulated time: func 0.2951    prepare 0.0363    bound 0.2554    transfer 0.0021    finalize 0.0063    
all_split False
======================Cut inference begins======================
max lb tensor(0.18310130) min lb tensor(-0.47664049)
Number of Verified Splits: 9 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.013488292694091797 
BICCOS Cumulative time: 0.024061203002929688
Preprocessing time: 0.012541770935058594 Inference time: 0.0004525184631347656 Add cuts time: 0.00018787384033203125 Cut analysis time: 0.00030612945556640625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18464 (2), -0.18406 (2), -0.18320 (2), -0.18254 (2), -0.18248 (2), -0.17996 (2), -0.17808 (2), -0.17793 (2), -0.17778 (2), -0.17772 (2), -0.17758 (2), -0.17571 (2), -0.17560 (2), -0.17549 (2), -0.17437 (2), -0.17410 (2), -0.17368 (2), -0.17343 (2), -0.17274 (2), -0.17022 (2), 
Length of domains: 50
Time: pickout 0.0014    decision 0.0204    set_bounds 0.0130    solve 0.1188    add 0.0855    
Accumulated time: pickout 0.0018    decision 0.5325    set_bounds 0.0228    solve 0.2397    add 0.2170    
Current (lb-rhs): -0.18463516235351562
100 domains visited
Cumulative time: 1.1107020378112793

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 31] [/input-12, 31] [/input-12, 54] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 26] [/input-12, 31] [/input-12, 26] [/input-12, 31] 
split level 1: [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 1] [/input-12, 26] [/input-12, 1] [/input-12, 26] 
split level 2: [/input-12, 4] [/input-12, 4] [/input-12, 26] [/input-12, 4] [/input-12, 4] [/input-12, 1] [/input-12, 4] [/input-12, 1] [/input-12, 4] [/input-12, 1] 
split level 3: [/input-12, 41] [/input-12, 41] [/input-12, 4] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 4] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1469435691833496
10 lb beta sum: 0.2808298170566559, worst -0.26663029193878174
Time: prepare 0.0076    bound 0.1193    transfer 0.0012    finalize 0.0028    func 0.1345    
Accumulated time: func 0.4296    prepare 0.0442    bound 0.3747    transfer 0.0033    finalize 0.0090    
all_split False
======================Cut inference begins======================
max lb tensor(0.25962406) min lb tensor(-0.12940459)
Number of Verified Splits: 201 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 7
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.025034666061401367 
BICCOS Cumulative time: 0.049095869064331055
Preprocessing time: 0.012515544891357422 Inference time: 0.009488105773925781 Add cuts time: 0.002634286880493164 Cut analysis time: 0.000396728515625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04488 (3), -0.04454 (3), -0.04373 (3), -0.04332 (3), -0.04310 (3), -0.04215 (3), -0.04169 (3), -0.04164 (3), -0.04091 (3), -0.04013 (3), -0.04000 (3), -0.03989 (3), -0.03973 (3), -0.03904 (3), -0.03824 (3), -0.03749 (3), -0.03708 (3), -0.03700 (3), -0.03668 (3), -0.03666 (3), 
Length of domains: 50
Time: pickout 0.0012    decision 0.0204    set_bounds 0.0161    solve 0.1347    add 0.1134    
Accumulated time: pickout 0.0030    decision 0.5529    set_bounds 0.0390    solve 0.3743    add 0.3305    
Current (lb-rhs): -0.044875502586364746
150 domains visited
Cumulative time: 1.4218757152557373

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 54] [/input-12, 54] 
split level 1: [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 1] [/input-12, 1] 
split level 2: [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] [/input-12, 41] 
split level 3: [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08177506923675537
10 lb beta sum: 0.2784780263900757, worst -0.4550173580646515
Time: prepare 0.0070    bound 0.1324    transfer 0.0008    finalize 0.0025    func 0.1461    
Accumulated time: func 0.5758    prepare 0.0514    bound 0.5071    transfer 0.0040    finalize 0.0115    
all_split False
======================Cut inference begins======================
max lb tensor(0.28025469) min lb tensor(-0.00902796)
Number of Verified Splits: 386 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.03745532035827637 
BICCOS Cumulative time: 0.08655118942260742
Preprocessing time: 0.011945724487304688 Inference time: 0.01947641372680664 Add cuts time: 0.005723714828491211 Cut analysis time: 0.0003094673156738281
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0012    decision 0.0198    set_bounds 0.0160    solve 0.1463    add 0.0225    
Accumulated time: pickout 0.0041    decision 0.5727    set_bounds 0.0550    solve 0.5206    add 0.3530    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
No domains left, MTS early stop!
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([54, 26, 31]), tensor([-1., -1., -1.]), tensor([0, 0, 0]), tensor([4.45691817e-11, 1.72344014e-01, 2.80069828e-01]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([54, 26, 31]), tensor([-1., -1.,  1.]), tensor([0, 0, 0]), tensor([4.45691817e-11, 1.72344014e-01, 1.10521421e-01]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([54, 26, 41, 31]), tensor([-1.,  1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([4.45691817e-11, 6.63291663e-02, 8.54258984e-02, 2.20309839e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([54, 26, 41, 31]), tensor([-1.,  1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([4.45691817e-11, 6.63291663e-02, 8.54258984e-02, 5.91207594e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([54, 26, 41, 31]), tensor([-1.,  1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([4.45691817e-11, 6.63291663e-02, 1.01925775e-01, 2.27676794e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([54, 26, 41, 31]), tensor([-1.,  1.,  1.,  1.]), tensor([0, 0, 0, 0]), tensor([4.45691817e-11, 6.63291663e-02, 1.01925775e-01, 5.80468625e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([54, 31]), tensor([ 1., -1.]), tensor([0, 0]), tensor([4.45691817e-11, 2.26214454e-01]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([54, 31]), tensor([1., 1.]), tensor([0, 0]), tensor([4.45691817e-11, 1.57529518e-01]), tensor([0, 1]))}
Shallow branching resets to n domains:  8
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.31494027376174927
10 lb beta sum: 0.3044258952140808, worst -0.31084248423576355
Time: prepare 0.0004    bound 0.1113    transfer 0.0002    finalize 0.0002    func 0.1121    
Accumulated time: func 0.6879    prepare 0.0519    bound 0.6184    transfer 0.0042    finalize 0.0117    
After pruning, left:  2

Back to Regular BaB

BaB round 1
batch: 2
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1] [/input-12, 1] 
split level 1: [/input-12, 4] [/input-12, 26] 
split level 2: [/input-12, 26] [/input-12, 4] 
split level 3: [/input-12, 41] [/input-12, 41] 
split level 4: [/input-12, 10] [/input-12, 10] 
split level 5: [/input-8, 1628] [/input-8, 1628] 
split level 6: [/input-8, 1620] [/input-8, 1052] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6542748212814331, worst -0.07504907250404358
10 lb beta sum: 0.6542748212814331, worst -0.07435217499732971
Time: prepare 0.0115    bound 0.1133    transfer 0.0016    finalize 0.0015    func 0.1297    
Accumulated time: func 0.8176    prepare 0.0638    bound 0.7317    transfer 0.0059    finalize 0.0132    
all_split False
======================Cut inference begins======================
max lb tensor(0.16505295) min lb tensor(-0.07406637)
Number of Verified Splits: 218 of 256
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.00035262107849121094 
BICCOS Cumulative time: 0.08690381050109863
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07407 (7), -0.07253 (7), -0.06941 (7), -0.06802 (7), -0.06747 (7), -0.06624 (7), -0.06231 (7), -0.06099 (7), -0.05614 (7), -0.05485 (7), -0.05301 (7), -0.05174 (7), -0.04789 (7), -0.04679 (7), -0.04462 (7), -0.04349 (7), -0.03821 (7), -0.03744 (7), -0.03445 (7), -0.03377 (7), 
Length of domains: 38
Time: pickout 0.0005    decision 0.0198    set_bounds 0.0232    solve 0.1297    add 0.0012    
Accumulated time: pickout 0.0047    decision 0.5925    set_bounds 0.0782    solve 0.6503    add 0.3542    
Current (lb-rhs): -0.07406637072563171
188 domains visited
Cumulative time: 1.9725620746612549

BaB round 2
batch: 38
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1620] [/input-8, 1620] [/input-8, 1885] [/input-8, 413] [/input-8, 1885] [/input-8, 1620] [/input-8, 1885] [/input-8, 1620] [/input-8, 1885] [/input-8, 1620] 
split level 1: [/input-8, 859] [/input-8, 845] [/input-8, 1620] [/input-8, 1013] [/input-8, 413] [/input-8, 845] [/input-8, 1620] [/input-8, 1885] [/input-8, 1013] [/input-8, 859] 
split level 2: [/input-8, 1885] [/input-8, 1885] [/input-8, 1013] [/input-8, 1885] [/input-8, 1013] [/input-8, 1885] [/input-8, 1013] [/input-8, 1013] [/input-8, 1620] [/input-8, 1885] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5030144453048706, worst -0.058462172746658325
10 lb beta sum: 0.5030144453048706, worst -0.05815199017524719
Time: prepare 0.0140    bound 0.1213    transfer 0.0011    finalize 0.0016    func 0.1400    
Accumulated time: func 0.9576    prepare 0.0780    bound 0.8530    transfer 0.0069    finalize 0.0148    
all_split False
======================Cut inference begins======================
max lb tensor(0.02496725) min lb tensor(-0.05801144)
Number of Verified Splits: 116 of 304
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.00038623809814453125 
BICCOS Cumulative time: 0.08729004859924316
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05801 (10), -0.05789 (10), -0.05667 (10), -0.05651 (10), -0.05644 (10), -0.05641 (10), -0.05536 (10), -0.05514 (10), -0.05427 (10), -0.05414 (10), -0.05391 (10), -0.05378 (10), -0.05316 (10), -0.05293 (10), -0.05263 (10), -0.05242 (10), -0.05232 (10), -0.05222 (10), -0.05141 (10), -0.05119 (10), 
Length of domains: 188
Time: pickout 0.0015    decision 0.0163    set_bounds 0.0158    solve 0.1402    add 0.0037    
Accumulated time: pickout 0.0062    decision 0.6088    set_bounds 0.0941    solve 0.7905    add 0.3579    
Current (lb-rhs): -0.05801144242286682
376 domains visited
Cumulative time: 2.1512410640716553

BaB round 3
batch: 188
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 413] [/input-8, 1437] [/input-8, 284] [/input-8, 413] [/input-8, 284] [/input-8, 284] [/input-8, 413] [/input-8, 1437] [/input-8, 284] [/input-8, 413] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746531546115875, worst -0.05581220984458923
10 lb beta sum: 0.4746531546115875, worst -0.055640965700149536
Time: prepare 0.0170    bound 0.1231    transfer 0.0018    finalize 0.0019    func 0.1464    
Accumulated time: func 1.1040    prepare 0.0953    bound 0.9761    transfer 0.0087    finalize 0.0167    
all_split False
======================Cut inference begins======================
max lb tensor(0.01385728) min lb tensor(-0.05557409)
Number of Verified Splits: 62 of 376
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.00042128562927246094 
BICCOS Cumulative time: 0.08771133422851562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05557 (11), -0.05544 (11), -0.05437 (11), -0.05408 (11), -0.05403 (11), -0.05395 (11), -0.05279 (11), -0.05260 (11), -0.05159 (11), -0.05147 (11), -0.05145 (11), -0.05132 (11), -0.05053 (11), -0.05036 (11), -0.04998 (11), -0.04972 (11), -0.04972 (11), -0.04960 (11), -0.04871 (11), -0.04851 (11), 
Length of domains: 314
Time: pickout 0.0036    decision 0.2067    set_bounds 0.0162    solve 0.1465    add 0.0035    
Accumulated time: pickout 0.0098    decision 0.8155    set_bounds 0.1102    solve 0.9370    add 0.3613    
Current (lb-rhs): -0.05557408928871155
690 domains visited
Cumulative time: 2.529052734375

BaB round 4
batch: 314
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1011] [/input-8, 284] [/input-8, 1656] [/input-8, 1891] [/input-8, 1437] [/input-8, 413] [/input-8, 1011] [/input-8, 284] [/input-8, 1620] [/input-8, 1891] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746531546115875, worst -0.053435832262039185
10 lb beta sum: 0.4746531546115875, worst -0.05332425236701965
Time: prepare 0.0280    bound 0.1248    transfer 0.0018    finalize 0.0028    func 0.1616    
Accumulated time: func 1.2656    prepare 0.1236    bound 1.1009    transfer 0.0105    finalize 0.0195    
all_split False
======================Cut inference begins======================
max lb tensor(0.00754413) min lb tensor(-0.05328515)
Number of Verified Splits: 116 of 628
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.0004324913024902344 
BICCOS Cumulative time: 0.08814382553100586
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05329 (12), -0.05313 (12), -0.05209 (12), -0.05178 (12), -0.05160 (12), -0.05148 (12), -0.05052 (12), -0.05036 (12), -0.04911 (12), -0.04895 (12), -0.04891 (12), -0.04875 (12), -0.04809 (12), -0.04799 (12), -0.04771 (12), -0.04748 (12), -0.04712 (12), -0.04704 (12), -0.04632 (12), -0.04624 (12), 
Length of domains: 512
Time: pickout 0.0046    decision 0.0298    set_bounds 0.0265    solve 0.1618    add 0.0040    
Accumulated time: pickout 0.0144    decision 0.8453    set_bounds 0.1368    solve 1.0988    add 0.3653    
Current (lb-rhs): -0.053285151720047
1202 domains visited
Cumulative time: 2.7574708461761475

BaB round 5
batch: 512
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1013] [/input-8, 1656] [/input-8, 1011] [/input-8, 1656] [/input-8, 1656] [/input-8, 1013] [/input-8, 845] [/input-8, 1656] [/input-8, 1011] [/input-8, 1656] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746531844139099, worst -0.049224406480789185
10 lb beta sum: 0.4746531844139099, worst -0.049193352460861206
Time: prepare 0.0466    bound 0.1261    transfer 0.0041    finalize 0.0055    func 0.1890    
Accumulated time: func 1.4546    prepare 0.1704    bound 1.2270    transfer 0.0146    finalize 0.0250    
all_split False
======================Cut inference begins======================
max lb tensor(0.01016858) min lb tensor(-0.04917231)
Number of Verified Splits: 251 of 1024
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.0004017353057861328 
BICCOS Cumulative time: 0.08854556083679199
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04917 (13), -0.04901 (13), -0.04838 (13), -0.04824 (13), -0.04787 (13), -0.04756 (13), -0.04746 (13), -0.04733 (13), -0.04644 (13), -0.04629 (13), -0.04629 (13), -0.04612 (13), -0.04473 (13), -0.04455 (13), -0.04452 (13), -0.04437 (13), -0.04431 (13), -0.04415 (13), -0.04384 (13), -0.04375 (13), 
Length of domains: 773
Time: pickout 0.0088    decision 0.0388    set_bounds 0.0434    solve 0.1893    add 0.0161    
Accumulated time: pickout 0.0231    decision 0.8841    set_bounds 0.1801    solve 1.2881    add 0.3813    
Current (lb-rhs): -0.04917231202125549
1975 domains visited
Cumulative time: 3.058016061782837

BaB round 6
batch: 773
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1891] [/input-8, 413] [/input-8, 1656] [/input-8, 845] [/input-8, 1891] [/input-8, 1438] [/input-8, 1656] [/input-8, 845] [/input-8, 276] [/input-8, 1891] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746531546115875, worst -0.04829004406929016
10 lb beta sum: 0.4746531546115875, worst -0.04825153946876526
Time: prepare 0.0693    bound 0.1375    transfer 0.0067    finalize 0.0080    func 0.2315    
Accumulated time: func 1.6860    prepare 0.2399    bound 1.3645    transfer 0.0213    finalize 0.0330    
all_split False
======================Cut inference begins======================
max lb tensor(0.02290177) min lb tensor(-0.04823604)
Number of Verified Splits: 543 of 1546
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.00044083595275878906 
BICCOS Cumulative time: 0.08898639678955078
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04824 (14), -0.04808 (14), -0.04693 (14), -0.04641 (14), -0.04627 (14), -0.04529 (14), -0.04492 (14), -0.04402 (14), -0.04388 (14), -0.04382 (14), -0.04381 (14), -0.04375 (14), -0.04364 (14), -0.04364 (14), -0.04356 (14), -0.04341 (14), -0.04282 (14), -0.04275 (14), -0.04262 (14), -0.04258 (14), 
Length of domains: 1003
Time: pickout 0.0109    decision 0.0554    set_bounds 0.0654    solve 0.2326    add 0.0089    
Accumulated time: pickout 0.0341    decision 0.9395    set_bounds 0.2455    solve 1.5206    add 0.3902    
Current (lb-rhs): -0.04823604226112366
2978 domains visited
Cumulative time: 3.4353582859039307

BaB round 7
batch: 1003
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1656] [/input-8, 1438] [/input-8, 1438] [/input-8, 1656] [/input-8, 413] [/input-8, 1013] [/input-8, 1438] [/input-8, 1438] [/input-8, 1438] [/input-8, 1656] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746531844139099, worst -0.047622352838516235
10 lb beta sum: 0.4746531844139099, worst -0.04761376976966858
Time: prepare 0.0924    bound 0.1493    transfer 0.0084    finalize 0.0112    func 0.2747    
Accumulated time: func 1.9607    prepare 0.3326    bound 1.5138    transfer 0.0298    finalize 0.0441    
all_split False
======================Cut inference begins======================
max lb tensor(0.02360812) min lb tensor(-0.04760429)
Number of Verified Splits: 659 of 2006
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.0004436969757080078 
BICCOS Cumulative time: 0.08943009376525879
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04760 (15), -0.04744 (15), -0.04578 (15), -0.04565 (15), -0.04433 (15), -0.04402 (15), -0.04318 (15), -0.04301 (15), -0.04301 (15), -0.04298 (15), -0.04294 (15), -0.04287 (15), -0.04286 (15), -0.04278 (15), -0.04276 (15), -0.04271 (15), -0.04195 (15), -0.04124 (15), -0.04110 (15), -0.04053 (15), 
Length of domains: 1347
Time: pickout 0.0187    decision 0.0667    set_bounds 0.0835    solve 0.2752    add 0.0090    
Accumulated time: pickout 0.0528    decision 1.0062    set_bounds 0.3291    solve 1.7958    add 0.3992    
Current (lb-rhs): -0.04760429263114929
4325 domains visited
Cumulative time: 3.8953230381011963

BaB round 8
batch: 1347
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 845] [/input-8, 413] [/input-8, 1656] [/input-8, 413] [/input-8, 845] [/input-8, 413] [/input-8, 413] [/input-8, 413] [/input-8, 1656] [/input-8, 845] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746531546115875, worst -0.04519215226173401
10 lb beta sum: 0.4746531546115875, worst -0.0451449453830719
Time: prepare 0.1219    bound 0.1748    transfer 0.0080    finalize 0.0151    func 0.3371    
Accumulated time: func 2.2978    prepare 0.4548    bound 1.6886    transfer 0.0378    finalize 0.0592    
all_split False
======================Cut inference begins======================
max lb tensor(0.02069589) min lb tensor(-0.04511449)
Number of Verified Splits: 761 of 2694
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.0005342960357666016 
BICCOS Cumulative time: 0.08996438980102539
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04511 (16), -0.04495 (16), -0.04369 (16), -0.04348 (16), -0.04339 (16), -0.04335 (16), -0.04236 (16), -0.04215 (16), -0.04049 (16), -0.04039 (16), -0.04035 (16), -0.04030 (16), -0.04023 (16), -0.04019 (16), -0.03928 (16), -0.03916 (16), -0.03911 (16), -0.03907 (16), -0.03888 (16), -0.03888 (16), 
Length of domains: 1933
Time: pickout 0.0225    decision 0.2610    set_bounds 0.1122    solve 0.3376    add 0.0176    
Accumulated time: pickout 0.0753    decision 1.2672    set_bounds 0.4412    solve 2.1335    add 0.4168    
Current (lb-rhs): -0.045114487409591675
6258 domains visited
Cumulative time: 4.6535093784332275

BaB round 9
batch: 1933
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1021] [/input-8, 859] [/input-8, 859] [/input-8, 859] [/input-8, 859] [/input-8, 859] [/input-8, 859] [/input-8, 859] [/input-8, 859] [/input-8, 859] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746531844139099, worst -0.04252830147743225
10 lb beta sum: 0.4746531844139099, worst -0.04247710108757019
Time: prepare 0.1779    bound 0.2262    transfer 0.0165    finalize 0.1780    func 0.6237    
Accumulated time: func 2.9215    prepare 0.6329    bound 1.9147    transfer 0.0543    finalize 0.2372    
all_split False
======================Cut inference begins======================
max lb tensor(0.01593947) min lb tensor(-0.04246727)
Number of Verified Splits: 1132 of 3866
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.0005769729614257812 
BICCOS Cumulative time: 0.09054136276245117
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04247 (17), -0.04231 (17), -0.04104 (17), -0.04086 (17), -0.04074 (17), -0.04073 (17), -0.03974 (17), -0.03953 (17), -0.03789 (17), -0.03776 (17), -0.03771 (17), -0.03761 (17), -0.03760 (17), -0.03745 (17), -0.03687 (17), -0.03672 (17), -0.03656 (17), -0.03655 (17), -0.03648 (17), -0.03637 (17), 
Length of domains: 2734
Time: pickout 0.0362    decision 0.1166    set_bounds 0.1617    solve 0.6245    add 0.0147    
Accumulated time: pickout 0.1115    decision 1.3838    set_bounds 0.6029    solve 2.7579    add 0.4315    
Current (lb-rhs): -0.04246726632118225
8992 domains visited
Cumulative time: 5.617981433868408

BaB round 10
batch: 2734
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 859] [/input-8, 1021] [/input-8, 1021] [/input-8, 1021] [/input-8, 1021] [/input-8, 1021] [/input-8, 1021] [/input-8, 1021] [/input-8, 1021] [/input-8, 1021] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746531546115875, worst -0.03961554169654846
10 lb beta sum: 0.4746531546115875, worst -0.03961506485939026
Time: prepare 0.2574    bound 0.2918    transfer 0.0431    finalize 0.0312    func 0.6606    
Accumulated time: func 3.5822    prepare 0.8906    bound 2.2066    transfer 0.0974    finalize 0.2684    
all_split False
======================Cut inference begins======================
max lb tensor(0.01532716) min lb tensor(-0.03960690)
Number of Verified Splits: 1444 of 5468
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.0006990432739257812 
BICCOS Cumulative time: 0.09124040603637695
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03961 (18), -0.03930 (18), -0.03800 (18), -0.03778 (18), -0.03776 (18), -0.03773 (18), -0.03770 (18), -0.03757 (18), -0.03685 (18), -0.03676 (18), -0.03653 (18), -0.03650 (18), -0.03616 (18), -0.03569 (18), -0.03556 (18), -0.03504 (18), -0.03496 (18), -0.03491 (18), -0.03487 (18), -0.03482 (18), 
Length of domains: 4024
Time: pickout 0.0412    decision 0.1614    set_bounds 0.2320    solve 0.6622    add 0.0293    
Accumulated time: pickout 0.1527    decision 1.5452    set_bounds 0.8348    solve 3.4202    add 0.4608    
Current (lb-rhs): -0.03960689902305603
13016 domains visited
Cumulative time: 6.759004831314087

BaB round 11
batch: 4024
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 276] [/input-8, 1889] [/input-8, 276] [/input-8, 1889] [/input-8, 276] [/input-8, 1889] [/input-8, 276] [/input-8, 1889] [/input-8, 1608] [/input-8, 1889] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746531546115875, worst -0.03793981671333313
10 lb beta sum: 0.4746531546115875, worst -0.03793826699256897
Time: prepare 0.3674    bound 0.3947    transfer 0.0659    finalize 0.0369    func 0.9163    
Accumulated time: func 4.4985    prepare 1.2583    bound 2.6012    transfer 0.1633    finalize 0.3053    
all_split False
======================Cut inference begins======================
max lb tensor(0.00871676) min lb tensor(-0.03793350)
Number of Verified Splits: 2660 of 8048
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.0006356239318847656 
BICCOS Cumulative time: 0.09187602996826172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03793 (19), -0.03762 (19), -0.03633 (19), -0.03609 (19), -0.03602 (19), -0.03586 (19), -0.03508 (19), -0.03500 (19), -0.03500 (19), -0.03449 (19), -0.03428 (19), -0.03406 (19), -0.03367 (19), -0.03360 (19), -0.03338 (19), -0.03337 (19), -0.03335 (19), -0.03328 (19), -0.03324 (19), -0.03319 (19), 
Length of domains: 5388
Time: pickout 0.0780    decision 0.4038    set_bounds 0.5172    solve 0.9187    add 0.0287    
Accumulated time: pickout 0.2307    decision 1.9490    set_bounds 1.3520    solve 4.3389    add 0.4895    
Current (lb-rhs): -0.03793349862098694
18404 domains visited
Cumulative time: 8.727727890014648

BaB round 12
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 678] [/input-8, 276] [/input-8, 678] [/input-8, 276] [/input-8, 678] [/input-8, 276] [/input-8, 678] [/input-8, 276] [/input-8, 1063] [/input-8, 1063] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746531844139099, worst -0.03500297665596008
10 lb beta sum: 0.4746531844139099, worst -0.034942835569381714
Time: prepare 0.3813    bound 0.4005    transfer 0.0228    finalize 0.0444    func 0.9024    
Accumulated time: func 5.4009    prepare 1.6398    bound 3.0018    transfer 0.1861    finalize 0.3497    
all_split False
======================Cut inference begins======================
max lb tensor(0.01414660) min lb tensor(-0.03492859)
Number of Verified Splits: 2519 of 8192
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.0005605220794677734 
BICCOS Cumulative time: 0.09243655204772949
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03493 (20), -0.03460 (20), -0.03428 (19), -0.03367 (19), -0.03366 (20), -0.03360 (19), -0.03335 (19), -0.03333 (20), -0.03325 (20), -0.03317 (20), -0.03309 (20), -0.03305 (20), -0.03289 (20), -0.03284 (20), -0.03267 (19), -0.03265 (19), -0.03248 (20), -0.03214 (20), -0.03200 (20), -0.03194 (20), 
Length of domains: 6965
Time: pickout 0.0594    decision 0.2306    set_bounds 0.5378    solve 0.9049    add 0.0350    
Accumulated time: pickout 0.2902    decision 2.1797    set_bounds 1.8898    solve 5.2438    add 0.5245    
Current (lb-rhs): -0.034928590059280396
24077 domains visited
current_vram/total_varm: 12.7GB/99.9GB, batch_size increase to 8192
Cumulative time: 10.521106004714966

BaB round 13
batch: 6965
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 630] [/input, 3468] [/input-8, 859] [/input-8, 1021] [/input-8, 276] [/input-8, 1021] [/input-8, 678] [/input-8, 276] [/input-8, 678] [/input-8, 678] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746531844139099, worst -0.03239884972572327
10 lb beta sum: 0.4746531844139099, worst -0.03238824009895325
Time: prepare 0.6526    bound 0.6396    transfer 0.0820    finalize 0.0791    func 1.5456    
Accumulated time: func 6.9465    prepare 2.2928    bound 3.6413    transfer 0.2681    finalize 0.4288    
all_split False
======================Cut inference begins======================
max lb tensor(0.00919959) min lb tensor(-0.03238150)
Number of Verified Splits: 4757 of 13930
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.0009107589721679688 
BICCOS Cumulative time: 0.09334731101989746
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03238 (21), -0.03206 (21), -0.03175 (20), -0.03164 (20), -0.03136 (21), -0.03131 (21), -0.03117 (20), -0.03112 (21), -0.03089 (20), -0.03071 (20), -0.03061 (21), -0.03059 (21), -0.03054 (21), -0.03049 (20), -0.03049 (21), -0.03041 (21), -0.03030 (21), -0.03020 (20), -0.03001 (21), -0.02971 (21), 
Length of domains: 9173
Time: pickout 0.1333    decision 0.5816    set_bounds 0.8130    solve 1.5483    add 0.0534    
Accumulated time: pickout 0.4234    decision 2.7613    set_bounds 2.7028    solve 6.7921    add 0.5779    
Current (lb-rhs): -0.03238150477409363
33250 domains visited
Cumulative time: 13.69421648979187

BaB round 14
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 678] [/input-8, 859] [/input-8, 549] [/input-8, 678] [/input-8, 1889] [/input-8, 549] [/input-8, 1889] [/input-8, 1889] [/input-8, 549] [/input-8, 678] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746532142162323, worst -0.030480295419692993
10 lb beta sum: 0.4746532142162323, worst -0.030461817979812622
Time: prepare 0.7681    bound 0.7390    transfer 0.0740    finalize 0.0926    func 1.7808    
Accumulated time: func 8.7273    prepare 3.0614    bound 4.3804    transfer 0.3421    finalize 0.5215    
all_split False
======================Cut inference begins======================
max lb tensor(0.00927815) min lb tensor(-0.03045562)
Number of Verified Splits: 6705 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.0006921291351318359 
BICCOS Cumulative time: 0.0940394401550293
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03061 (21), -0.03046 (22), -0.03030 (21), -0.03009 (22), -0.03004 (21), -0.03001 (21), -0.03001 (21), -0.02983 (22), -0.02981 (22), -0.02952 (21), -0.02922 (21), -0.02914 (22), -0.02911 (21), -0.02896 (21), -0.02894 (22), -0.02878 (22), -0.02877 (21), -0.02861 (22), -0.02854 (21), -0.02847 (22), 
Length of domains: 10660
Time: pickout 0.1265    decision 0.6949    set_bounds 0.9430    solve 1.7846    add 0.0444    
Accumulated time: pickout 0.5500    decision 3.4562    set_bounds 3.6458    solve 8.5767    add 0.6223    
Current (lb-rhs): -0.030613631010055542
42929 domains visited
current_vram/total_varm: 23.2GB/99.9GB, batch_size increase to 16384
Cumulative time: 17.349401473999023

BaB round 15
batch: 10660
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 549] [/input-8, 549] [/input-8, 678] [/input-8, 678] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746532440185547, worst -0.028717726469039917
10 lb beta sum: 0.4746532440185547, worst -0.028788477182388306
Time: prepare 1.0082    bound 0.9435    transfer 0.1236    finalize 0.3876    func 2.6014    
Accumulated time: func 11.3288    prepare 4.0699    bound 5.3239    transfer 0.4657    finalize 0.9090    
all_split False
======================Cut inference begins======================
max lb tensor(0.01315793) min lb tensor(-0.02867827)
Number of Verified Splits: 10491 of 21320
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.0009129047393798828 
BICCOS Cumulative time: 0.09495234489440918
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02868 (22), -0.02864 (23), -0.02841 (22), -0.02833 (22), -0.02826 (23), -0.02804 (22), -0.02787 (22), -0.02779 (23), -0.02768 (23), -0.02758 (22), -0.02752 (22), -0.02749 (22), -0.02743 (22), -0.02732 (23), -0.02711 (23), -0.02697 (23), -0.02681 (22), -0.02680 (23), -0.02667 (23), -0.02658 (22), 
Length of domains: 10829
Time: pickout 0.2192    decision 0.8226    set_bounds 1.1737    solve 2.6061    add 0.0514    
Accumulated time: pickout 0.7692    decision 4.2787    set_bounds 4.8195    solve 11.1828    add 0.6737    
Current (lb-rhs): -0.02867826819419861
53758 domains visited
Cumulative time: 22.316283702850342

BaB round 16
batch: 10829
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1063] [/input-8, 1063] [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 678] [/input-8, 1063] [/input-8, 614] [/input-8, 678] [/input-8, 678] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746531844139099, worst -0.028641074895858765
10 lb beta sum: 0.4746531844139099, worst -0.02864113450050354
Time: prepare 1.0389    bound 0.9609    transfer 0.1294    finalize 0.1353    func 2.4061    
Accumulated time: func 13.7349    prepare 5.1093    bound 6.2847    transfer 0.5951    finalize 1.0443    
all_split False
======================Cut inference begins======================
max lb tensor(0.34895733) min lb tensor(-0.02864006)
Number of Verified Splits: 11247 of 21658
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.0008218288421630859 
BICCOS Cumulative time: 0.09577417373657227
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02864 (24), -0.02826 (24), -0.02732 (24), -0.02697 (24), -0.02686 (23), -0.02680 (24), -0.02667 (24), -0.02649 (23), -0.02639 (23), -0.02635 (23), -0.02622 (23), -0.02600 (23), -0.02584 (24), -0.02579 (23), -0.02572 (24), -0.02560 (24), -0.02555 (24), -0.02549 (23), -0.02534 (23), -0.02530 (23), 
Length of domains: 10411
Time: pickout 0.1779    decision 0.8791    set_bounds 1.2184    solve 2.6899    add 0.0474    
Accumulated time: pickout 0.9471    decision 5.1579    set_bounds 6.0379    solve 13.8728    add 0.7211    
Current (lb-rhs): -0.028640061616897583
64169 domains visited
Cumulative time: 27.427297830581665

BaB round 17
batch: 10411
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 614] [/input-8, 1063] [/input-8, 1063] [/input-8, 996] [/input-8, 614] [/input-8, 996] [/input-8, 614] [/input-12, 90] [/input-12, 90] [/input-8, 1021] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746531844139099, worst -0.027202755212783813
10 lb beta sum: 0.4746531844139099, worst -0.027193814516067505
Time: prepare 1.0132    bound 0.9214    transfer 0.1200    finalize 0.1508    func 2.6187    
Accumulated time: func 16.3536    prepare 6.1229    bound 7.2062    transfer 0.7151    finalize 1.1951    
all_split False
======================Cut inference begins======================
max lb tensor(0.34890184) min lb tensor(-0.02719238)
Number of Verified Splits: 11248 of 20822
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.0007393360137939453 
BICCOS Cumulative time: 0.09651350975036621
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02719 (25), -0.02686 (24), -0.02681 (25), -0.02648 (24), -0.02622 (24), -0.02588 (25), -0.02584 (25), -0.02578 (24), -0.02553 (25), -0.02535 (25), -0.02522 (25), -0.02503 (25), -0.02448 (24), -0.02431 (24), -0.02429 (25), -0.02411 (25), -0.02407 (25), -0.02405 (25), -0.02400 (24), -0.02374 (25), 
Length of domains: 9574
Time: pickout 0.2197    decision 0.5938    set_bounds 1.1654    solve 2.6232    add 0.0488    
Accumulated time: pickout 1.1667    decision 5.7516    set_bounds 7.2033    solve 16.4960    add 0.7699    
Current (lb-rhs): -0.027192384004592896
73743 domains visited
Cumulative time: 32.17826247215271

BaB round 18
batch: 9574
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1011] [/input-8, 1011] [/input-8, 996] [/input-8, 1011] [/input-8, 1011] [/input-8, 614] [/input-8, 996] [/input-8, 1011] [/input-8, 1011] [/input-8, 1011] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746532440185547, worst -0.025427192449569702
10 lb beta sum: 0.4746532440185547, worst -0.025543242692947388
Time: prepare 0.9600    bound 0.8546    transfer 0.0755    finalize 0.3908    func 2.4047    
Accumulated time: func 18.7583    prepare 7.0833    bound 8.0607    transfer 0.7906    finalize 1.5859    
all_split False
======================Cut inference begins======================
max lb tensor(0.02668878) min lb tensor(-0.02541491)
Number of Verified Splits: 10582 of 19148
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.0007343292236328125 
BICCOS Cumulative time: 0.09724783897399902
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02541 (25), -0.02524 (26), -0.02504 (25), -0.02486 (26), -0.02477 (25), -0.02448 (25), -0.02433 (25), -0.02431 (25), -0.02407 (26), -0.02392 (26), -0.02369 (25), -0.02367 (26), -0.02362 (26), -0.02339 (26), -0.02330 (26), -0.02329 (26), -0.02236 (26), -0.02218 (26), -0.02207 (25), -0.02196 (26), 
Length of domains: 8566
Time: pickout 0.2130    decision 0.5660    set_bounds 1.1453    solve 2.4105    add 0.0370    
Accumulated time: pickout 1.3797    decision 6.3177    set_bounds 8.3486    solve 18.9065    add 0.8068    
Current (lb-rhs): -0.02541491389274597
82309 domains visited
Cumulative time: 36.64825773239136

BaB round 19
batch: 8566
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 996] [/input-8, 996] [/input-8, 678] [/input-8, 1011] [/input-8, 1011] [/input-8, 1011] [/input-8, 1011] [/input-8, 1011] [/input-8, 1608] [/input-8, 1608] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746532142162323, worst -0.023515790700912476
10 lb beta sum: 0.4746532142162323, worst -0.023560434579849243
Time: prepare 0.8438    bound 0.7715    transfer 0.0671    finalize 0.1047    func 1.8983    
Accumulated time: func 20.6566    prepare 7.9275    bound 8.8322    transfer 0.8577    finalize 1.6906    
all_split False
======================Cut inference begins======================
max lb tensor(0.02684096) min lb tensor(-0.02348056)
Number of Verified Splits: 8934 of 17132
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.0007512569427490234 
BICCOS Cumulative time: 0.09799909591674805
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02348 (26), -0.02311 (26), -0.02287 (26), -0.02241 (26), -0.02225 (26), -0.02214 (26), -0.02203 (27), -0.02201 (26), -0.02194 (27), -0.02192 (27), -0.02164 (27), -0.02160 (26), -0.02143 (26), -0.02132 (26), -0.02132 (27), -0.02119 (26), -0.02112 (27), -0.02099 (27), -0.02071 (27), -0.02047 (26), 
Length of domains: 8198
Time: pickout 0.1625    decision 0.7363    set_bounds 1.0490    solve 1.9027    add 0.0347    
Accumulated time: pickout 1.5422    decision 7.0539    set_bounds 9.3975    solve 20.8092    add 0.8415    
Current (lb-rhs): -0.02348056435585022
90507 domains visited
Cumulative time: 40.61660361289978

BaB round 20
batch: 8198
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1461] [/input-12, 90] [/input-8, 1608] [/input-8, 1608] [/input-12, 90] [/input-8, 1063] [/input-8, 1063] [/input-8, 276] [/input-8, 549] [/input-8, 996] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746532142162323, worst -0.02049887180328369
10 lb beta sum: 0.4746532142162323, worst -0.020724385976791382
Time: prepare 0.8095    bound 0.7393    transfer 0.0651    finalize 0.1020    func 1.8228    
Accumulated time: func 22.4794    prepare 8.7374    bound 9.5715    transfer 0.9228    finalize 1.7927    
all_split False
======================Cut inference begins======================
max lb tensor(0.02707466) min lb tensor(-0.02049869)
Number of Verified Splits: 8283 of 16396
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.0007007122039794922 
BICCOS Cumulative time: 0.09869980812072754
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02050 (27), -0.02047 (27), -0.02039 (27), -0.02026 (27), -0.01990 (27), -0.01984 (28), -0.01972 (28), -0.01970 (27), -0.01968 (27), -0.01955 (27), -0.01953 (27), -0.01945 (28), -0.01924 (27), -0.01921 (27), -0.01921 (27), -0.01913 (28), -0.01909 (27), -0.01891 (28), -0.01886 (27), -0.01880 (28), 
Length of domains: 8113
Time: pickout 0.1894    decision 0.7151    set_bounds 1.0119    solve 1.8269    add 0.0320    
Accumulated time: pickout 1.7316    decision 7.7690    set_bounds 10.4095    solve 22.6361    add 0.8736    
Current (lb-rhs): -0.020498692989349365
98620 domains visited
Cumulative time: 44.472766160964966

BaB round 21
batch: 8113
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 549] [/input-8, 549] [/input-8, 549] [/input-8, 996] [/input-8, 549] [/input-8, 1453] [/input-8, 1063] [/input-8, 1453] [/input-8, 549] [/input-8, 614] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746532738208771, worst -0.018438249826431274
10 lb beta sum: 0.4746532738208771, worst -0.018679529428482056
Time: prepare 0.7910    bound 0.7361    transfer 0.0899    finalize 0.1115    func 1.8364    
Accumulated time: func 24.3158    prepare 9.5287    bound 10.3076    transfer 1.0127    finalize 1.9042    
all_split False
======================Cut inference begins======================
max lb tensor(0.02639523) min lb tensor(-0.01843360)
Number of Verified Splits: 8950 of 16226
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.0007021427154541016 
BICCOS Cumulative time: 0.09940195083618164
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01843 (28), -0.01829 (28), -0.01820 (28), -0.01807 (28), -0.01793 (29), -0.01787 (28), -0.01777 (29), -0.01770 (28), -0.01751 (28), -0.01748 (28), -0.01740 (28), -0.01737 (28), -0.01723 (29), -0.01710 (29), -0.01709 (29), -0.01705 (28), -0.01702 (28), -0.01689 (29), -0.01669 (28), -0.01666 (28), 
Length of domains: 7276
Time: pickout 0.1563    decision 0.6945    set_bounds 1.0062    solve 1.8423    add 0.0299    
Accumulated time: pickout 1.8879    decision 8.4635    set_bounds 11.4156    solve 24.4784    add 0.9034    
Current (lb-rhs): -0.018433600664138794
105896 domains visited
Cumulative time: 48.288750410079956

BaB round 22
batch: 7276
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 549] [/input-8, 614] [/input-8, 614] [/input-8, 549] [/input-8, 410] [/input-8, 549] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746532440185547, worst -0.01710045337677002
10 lb beta sum: 0.4746532440185547, worst -0.017106294631958008
Time: prepare 0.7304    bound 0.6659    transfer 0.0558    finalize 0.0887    func 1.6389    
Accumulated time: func 25.9547    prepare 10.2595    bound 10.9735    transfer 1.0685    finalize 1.9929    
all_split False
======================Cut inference begins======================
max lb tensor(0.02654186) min lb tensor(-0.01709852)
Number of Verified Splits: 8418 of 14552
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.0007684230804443359 
BICCOS Cumulative time: 0.10017037391662598
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01710 (30), -0.01671 (29), -0.01644 (30), -0.01621 (30), -0.01617 (29), -0.01602 (29), -0.01566 (29), -0.01561 (29), -0.01555 (30), -0.01554 (30), -0.01547 (29), -0.01535 (29), -0.01533 (29), -0.01521 (29), -0.01507 (30), -0.01505 (29), -0.01500 (30), -0.01489 (30), -0.01482 (30), -0.01481 (30), 
Length of domains: 6134
Time: pickout 0.1442    decision 0.6515    set_bounds 1.0425    solve 1.9104    add 0.0417    
Accumulated time: pickout 2.0321    decision 9.1151    set_bounds 12.4582    solve 26.3888    add 0.9451    
Current (lb-rhs): -0.01709851622581482
112030 domains visited
Cumulative time: 52.19567513465881

BaB round 23
batch: 6134
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 549] [/input-8, 549] [/input-8, 614] [/input-8, 549] [/input-8, 549] [/input-8, 614] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746531546115875, worst -0.01535525918006897
10 lb beta sum: 0.4746531546115875, worst -0.015382975339889526
Time: prepare 0.6388    bound 0.5727    transfer 0.0489    finalize 0.0820    func 1.4242    
Accumulated time: func 27.3789    prepare 10.8985    bound 11.5462    transfer 1.1174    finalize 2.0749    
all_split False
======================Cut inference begins======================
max lb tensor(0.24792796) min lb tensor(-0.01535416)
Number of Verified Splits: 7169 of 12268
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.000701904296875 
BICCOS Cumulative time: 0.10087227821350098
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01535 (30), -0.01468 (30), -0.01464 (30), -0.01456 (30), -0.01446 (31), -0.01413 (31), -0.01408 (31), -0.01394 (30), -0.01376 (30), -0.01372 (30), -0.01364 (30), -0.01362 (30), -0.01359 (31), -0.01359 (30), -0.01350 (31), -0.01342 (31), -0.01339 (31), -0.01335 (30), -0.01329 (30), -0.01327 (31), 
Length of domains: 5099
Time: pickout 0.1738    decision 0.3594    set_bounds 0.7686    solve 1.4280    add 0.0252    
Accumulated time: pickout 2.2059    decision 9.4745    set_bounds 13.2268    solve 27.8168    add 0.9703    
Current (lb-rhs): -0.015354156494140625
117129 domains visited
Cumulative time: 55.01567625999451

BaB round 24
batch: 5099
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 630] [/input-8, 410] [/input-8, 410] [/input-8, 410] [/input-8, 410] [/input-8, 410] [/input-8, 410] [/input-8, 410] [/input-8, 410] [/input-8, 410] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746531844139099, worst -0.0140761137008667
10 lb beta sum: 0.4746531844139099, worst -0.014080077409744263
Time: prepare 0.5353    bound 0.4847    transfer 0.0405    finalize 0.0644    func 1.1932    
Accumulated time: func 28.5720    prepare 11.4341    bound 12.0310    transfer 1.1579    finalize 2.1393    
all_split False
======================Cut inference begins======================
max lb tensor(0.24817353) min lb tensor(-0.01407227)
Number of Verified Splits: 6231 of 10198
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.0006556510925292969 
BICCOS Cumulative time: 0.10152792930603027
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01407 (32), -0.01338 (32), -0.01326 (32), -0.01317 (31), -0.01315 (31), -0.01312 (32), -0.01268 (32), -0.01266 (32), -0.01252 (32), -0.01249 (32), -0.01243 (32), -0.01239 (32), -0.01238 (31), -0.01233 (31), -0.01228 (31), -0.01221 (31), -0.01217 (31), -0.01214 (31), -0.01208 (32), -0.01198 (32), 
Length of domains: 3967
Time: pickout 0.1140    decision 0.2961    set_bounds 0.6685    solve 1.1965    add 0.0143    
Accumulated time: pickout 2.3199    decision 9.7706    set_bounds 13.8953    solve 29.0133    add 0.9846    
Current (lb-rhs): -0.014072269201278687
121096 domains visited
Cumulative time: 57.36539030075073

BaB round 25
batch: 3967
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 442] [/input, 442] [/input, 457] [/input-8, 410] [/input-8, 410] [/input-8, 410] [/input-8, 410] [/input-8, 410] [/input-8, 410] [/input-8, 410] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746531844139099, worst -0.012332618236541748
10 lb beta sum: 0.4746531844139099, worst -0.012410670518875122
Time: prepare 0.4189    bound 0.3919    transfer 0.0121    finalize 0.0522    func 0.9276    
Accumulated time: func 29.4996    prepare 11.8534    bound 12.4229    transfer 1.1700    finalize 2.1915    
all_split False
======================Cut inference begins======================
max lb tensor(0.24833944) min lb tensor(-0.01233137)
Number of Verified Splits: 5023 of 7934
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.0006475448608398438 
BICCOS Cumulative time: 0.10217547416687012
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01233 (32), -0.01196 (33), -0.01163 (32), -0.01163 (32), -0.01151 (32), -0.01141 (33), -0.01126 (33), -0.01126 (33), -0.01115 (33), -0.01100 (32), -0.01095 (33), -0.01092 (32), -0.01091 (32), -0.01089 (32), -0.01084 (32), -0.01077 (33), -0.01072 (33), -0.01058 (33), -0.01054 (33), -0.01039 (33), 
Length of domains: 2911
Time: pickout 0.0829    decision 0.4075    set_bounds 0.3618    solve 1.1201    add 0.0125    
Accumulated time: pickout 2.4028    decision 10.1781    set_bounds 14.2571    solve 30.1334    add 0.9971    
Current (lb-rhs): -0.012331366539001465
124007 domains visited
Cumulative time: 59.395230770111084

BaB round 26
batch: 2911
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 457] [/input, 442] [/input-12, 45] [/input-12, 45] [/input, 457] [/input, 457] [/input, 457] [/input, 2251] [/input, 2251] [/input-8, 410] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746531546115875, worst -0.01028132438659668
10 lb beta sum: 0.4746531546115875, worst -0.010327368974685669
Time: prepare 0.3117    bound 0.3102    transfer 0.0341    finalize 0.0363    func 0.7304    
Accumulated time: func 30.2300    prepare 12.1654    bound 12.7332    transfer 1.2042    finalize 2.2279    
all_split False
======================Cut inference begins======================
max lb tensor(0.24819988) min lb tensor(-0.01027563)
Number of Verified Splits: 3691 of 5822
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.0005438327789306641 
BICCOS Cumulative time: 0.10271930694580078
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01028 (34), -0.01023 (34), -0.01023 (33), -0.00982 (34), -0.00964 (34), -0.00959 (34), -0.00955 (34), -0.00953 (33), -0.00952 (33), -0.00943 (34), -0.00941 (33), -0.00931 (34), -0.00922 (34), -0.00919 (33), -0.00914 (34), -0.00907 (34), -0.00883 (34), -0.00881 (33), -0.00878 (33), -0.00872 (34), 
Length of domains: 2131
Time: pickout 0.0767    decision 0.1737    set_bounds 0.2661    solve 0.7328    add 0.0115    
Accumulated time: pickout 2.4795    decision 10.3518    set_bounds 14.5232    solve 30.8662    add 1.0085    
Current (lb-rhs): -0.01027563214302063
126138 domains visited
Cumulative time: 60.688883543014526

BaB round 27
batch: 2131
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input, 457] [/input, 457] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746531546115875, worst -0.009104877710342407
10 lb beta sum: 0.4746531546115875, worst -0.009109407663345337
Time: prepare 0.2238    bound 0.2425    transfer 0.0302    finalize 0.0259    func 0.5505    
Accumulated time: func 30.7806    prepare 12.3894    bound 12.9757    transfer 1.2343    finalize 2.2538    
all_split False
======================Cut inference begins======================
max lb tensor(0.24831927) min lb tensor(-0.00910372)
Number of Verified Splits: 2793 of 4262
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.0005295276641845703 
BICCOS Cumulative time: 0.10324883460998535
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00910 (35), -0.00850 (34), -0.00842 (35), -0.00830 (35), -0.00825 (35), -0.00816 (35), -0.00806 (34), -0.00798 (34), -0.00795 (34), -0.00782 (34), -0.00780 (34), -0.00770 (35), -0.00769 (34), -0.00765 (35), -0.00756 (35), -0.00754 (35), -0.00753 (35), -0.00750 (34), -0.00748 (35), -0.00747 (34), 
Length of domains: 1469
Time: pickout 0.0475    decision 0.1333    set_bounds 0.3470    solve 0.5516    add 0.0085    
Accumulated time: pickout 2.5269    decision 10.4851    set_bounds 14.8702    solve 31.4178    add 1.0170    
Current (lb-rhs): -0.009103715419769287
127607 domains visited
Cumulative time: 61.800981521606445

BaB round 28
batch: 1469
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-8, 924] [/input-8, 924] [/input-8, 924] [/input-8, 924] [/input, 3274] [/input-8, 924] [/input-8, 276] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746531844139099, worst -0.007537931203842163
10 lb beta sum: 0.4746531844139099, worst -0.007536262273788452
Time: prepare 0.1539    bound 0.1848    transfer 0.0100    finalize 0.0188    func 0.3864    
Accumulated time: func 31.1670    prepare 12.5436    bound 13.1605    transfer 1.2443    finalize 2.2726    
all_split False
======================Cut inference begins======================
max lb tensor(0.24830288) min lb tensor(-0.00753215)
Number of Verified Splits: 2021 of 2938
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.0004875659942626953 
BICCOS Cumulative time: 0.10373640060424805
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00753 (36), -0.00737 (35), -0.00689 (36), -0.00685 (36), -0.00673 (36), -0.00668 (35), -0.00668 (35), -0.00664 (36), -0.00656 (35), -0.00655 (36), -0.00650 (35), -0.00618 (36), -0.00613 (36), -0.00604 (36), -0.00596 (35), -0.00596 (36), -0.00595 (35), -0.00595 (36), -0.00592 (36), -0.00592 (35), 
Length of domains: 917
Time: pickout 0.0338    decision 0.0919    set_bounds 0.1310    solve 0.3876    add 0.0040    
Accumulated time: pickout 2.5607    decision 10.5770    set_bounds 15.0013    solve 31.8053    add 1.0210    
Current (lb-rhs): -0.00753214955329895
128524 domains visited
Cumulative time: 62.46623492240906

BaB round 29
batch: 917
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 924] [/input-8, 412] [/input-8, 924] [/input, 3468] [/input, 3468] [/input, 1626] [/input-8, 412] [/input-12, 45] [/input-12, 45] [/input-12, 45] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746531546115875, worst -0.005963951349258423
10 lb beta sum: 0.4746531546115875, worst -0.005970269441604614
Time: prepare 0.0965    bound 0.1442    transfer 0.0086    finalize 0.0116    func 0.2729    
Accumulated time: func 31.4399    prepare 12.6403    bound 13.3047    transfer 1.2528    finalize 2.2842    
all_split False
======================Cut inference begins======================
max lb tensor(0.24832755) min lb tensor(-0.00596395)
Number of Verified Splits: 1330 of 1834
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.00046133995056152344 
BICCOS Cumulative time: 0.10419774055480957
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00596 (37), -0.00592 (37), -0.00580 (36), -0.00555 (36), -0.00528 (37), -0.00524 (37), -0.00522 (37), -0.00517 (37), -0.00512 (37), -0.00512 (36), -0.00511 (36), -0.00500 (36), -0.00482 (36), -0.00481 (37), -0.00473 (36), -0.00461 (37), -0.00455 (36), -0.00453 (37), -0.00452 (37), -0.00450 (37), 
Length of domains: 504
Time: pickout 0.0237    decision 0.0614    set_bounds 0.0789    solve 0.2742    add 0.0026    
Accumulated time: pickout 2.5844    decision 10.6384    set_bounds 15.0801    solve 32.0796    add 1.0236    
Current (lb-rhs): -0.005963951349258423
129028 domains visited
Cumulative time: 62.91759514808655

BaB round 30
batch: 504
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 412] [/input-8, 412] [/input-8, 412] [/input-8, 412] [/input-8, 412] [/input-8, 412] [/input-8, 412] [/input-8, 412] [/input, 1675] [/input, 1675] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746532142162323, worst -0.004251807928085327
10 lb beta sum: 0.4746532142162323, worst -0.004243642091751099
Time: prepare 0.0531    bound 0.1269    transfer 0.0051    finalize 0.0057    func 0.1984    
Accumulated time: func 31.6383    prepare 12.6936    bound 13.4316    transfer 1.2579    finalize 2.2899    
all_split False
======================Cut inference begins======================
max lb tensor(0.24823415) min lb tensor(-0.00423601)
Number of Verified Splits: 773 of 1008
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.0004024505615234375 
BICCOS Cumulative time: 0.10460019111633301
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00424 (38), -0.00419 (38), -0.00414 (37), -0.00412 (37), -0.00393 (37), -0.00374 (37), -0.00374 (38), -0.00355 (38), -0.00355 (38), -0.00351 (38), -0.00347 (37), -0.00344 (37), -0.00343 (38), -0.00339 (38), -0.00335 (37), -0.00331 (37), -0.00321 (38), -0.00320 (37), -0.00312 (37), -0.00305 (38), 
Length of domains: 235
Time: pickout 0.0137    decision 0.0387    set_bounds 0.0439    solve 0.1987    add 0.0028    
Accumulated time: pickout 2.5982    decision 10.6771    set_bounds 15.1240    solve 32.2782    add 1.0264    
Current (lb-rhs): -0.004236012697219849
129263 domains visited
Cumulative time: 63.22426414489746

BaB round 31
batch: 235
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 412] [/input-8, 412] [/input-8, 412] [/input-8, 412] [/input-8, 412] [/input, 1626] [/input-8, 412] [/input-8, 412] [/input-8, 412] [/input-8, 412] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746531844139099, worst -0.0029751360416412354
10 lb beta sum: 0.4746531844139099, worst -0.002970486879348755
Time: prepare 0.0251    bound 0.1246    transfer 0.0009    finalize 0.0035    func 0.1572    
Accumulated time: func 31.7955    prepare 12.7190    bound 13.5562    transfer 1.2589    finalize 2.2934    
all_split False
======================Cut inference begins======================
max lb tensor(0.00903633) min lb tensor(-0.00296566)
Number of Verified Splits: 363 of 470
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.0003867149353027344 
BICCOS Cumulative time: 0.10498690605163574
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00297 (39), -0.00293 (39), -0.00293 (39), -0.00254 (38), -0.00234 (39), -0.00234 (38), -0.00231 (39), -0.00231 (38), -0.00224 (38), -0.00222 (39), -0.00217 (39), -0.00212 (39), -0.00201 (39), -0.00198 (39), -0.00193 (39), -0.00190 (38), -0.00183 (38), -0.00181 (38), -0.00175 (38), -0.00165 (38), 
Length of domains: 107
Time: pickout 0.0081    decision 0.0249    set_bounds 0.0215    solve 0.1573    add 0.0015    
Accumulated time: pickout 2.6063    decision 10.7019    set_bounds 15.1455    solve 32.4356    add 1.0279    
Current (lb-rhs): -0.0029656589031219482
129370 domains visited
Cumulative time: 63.44089388847351

BaB round 32
batch: 107
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1069] [/input-8, 924] [/input-8, 924] [/input-8, 924] [/input-8, 1640] [/input-8, 924] [/input-8, 1648] [/input, 1626] [/input-8, 1069] [/input-8, 1648] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746531546115875, worst -0.0028770267963409424
10 lb beta sum: 0.4746531546115875, worst -0.002881646156311035
Time: prepare 0.0117    bound 0.1221    transfer 0.0014    finalize 0.0015    func 0.1381    
Accumulated time: func 31.9336    prepare 12.7309    bound 13.6782    transfer 1.2602    finalize 2.2949    
all_split False
======================Cut inference begins======================
max lb tensor(0.00509176) min lb tensor(-0.00287524)
Number of Verified Splits: 170 of 214
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.00037169456481933594 
BICCOS Cumulative time: 0.10535860061645508
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00288 (40), -0.00226 (40), -0.00208 (40), -0.00182 (40), -0.00173 (40), -0.00149 (40), -0.00144 (39), -0.00111 (40), -0.00111 (40), -0.00107 (39), -0.00106 (40), -0.00105 (39), -0.00100 (39), -0.00089 (40), -0.00082 (40), -0.00077 (40), -0.00076 (40), -0.00074 (39), -0.00069 (39), -0.00059 (40), 
Length of domains: 44
Time: pickout 0.0041    decision 0.0174    set_bounds 0.0098    solve 0.1382    add 0.0011    
Accumulated time: pickout 2.6104    decision 10.7193    set_bounds 15.1553    solve 32.5737    add 1.0289    
Current (lb-rhs): -0.0028752386569976807
129414 domains visited
Cumulative time: 63.613730907440186

BaB round 33
batch: 44
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 1626] [/input, 1626] [/input-8, 648] [/input-8, 1648] [/input-8, 1648] [/input-8, 1648] [/input-8, 1648] [/input, 3468] [/input-8, 648] [/input-8, 924] 
split level 1: [/input-8, 924] [/input-8, 924] [/input-8, 1625] [/input-8, 648] [/input-8, 648] [/input-8, 648] [/input-8, 648] [/input-8, 648] [/input-8, 1625] [/input, 3468] 
split level 2: [/input-8, 648] [/input-8, 648] [/input, 2537] [/input, 2537] [/input, 2537] [/input, 2537] [/input, 2537] [/input, 2537] [/input, 2537] [/input-8, 648] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4746531844139099, worst 0.002524256706237793

all verified at 0th iter
Time: prepare 0.0185    bound 0.0071    transfer 0.0007    finalize 0.1304    func 0.1589    
Accumulated time: func 32.0925    prepare 12.7496    bound 13.6853    transfer 1.2609    finalize 2.4253    
all_split False
======================Cut inference begins======================
max lb tensor(0.00981066) min lb tensor(0.00252426)
Number of Verified Splits: 352 of 352
Stop inferencing: Max iteration reached.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.0004813671112060547 
BICCOS Cumulative time: 0.10583996772766113
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0024    decision 0.0169    set_bounds 0.0308    solve 0.1591    add 0.0001    
Accumulated time: pickout 2.6128    decision 10.7363    set_bounds 15.1861    solve 32.7328    add 1.0290    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
129414 domains visited
Cumulative time: 63.82685208320618


Properties batch 2, size 1
Remaining timeout: 134.5675401687622
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 134.5674250125885
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 134.56739902496338
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 134.56737732887268
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 134.56735754013062
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 134.56733798980713
Verifying property 7 with 1 instances.
##### Instance 167 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.43028873]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.73988724, -9.75906086, -5.44053173, -6.54372168, -6.64882469,
        -6.77933979, -7.41226196, -7.94059706, -5.61829853, -8.84854412],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.43028873]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 625
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 280
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 926
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.0001049041748046875
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.430286705493927
10 lb beta sum: 0.0, worst -0.43030786514282227
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0528    transfer 0.0001    finalize 0.0001    func 0.0533    
Accumulated time: func 0.0533    prepare 0.0002    bound 0.0528    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 82] 
split level 1: [/input-12, 46] 
split level 2: [/input-12, 17] 
split level 3: [/input-12, 53] 
split level 4: [/input-12, 31] 
split level 5: [/input-8, 1139] 
split level 6: [/input-12, 99] 
split level 7: [/input-12, 54] 
split level 8: [/input-12, 26] 
split level 9: [/input-8, 1438] 
split level 10: [/input-8, 1323] 
split level 11: [/input-8, 1446] 
split level 12: [/input-8, 1436] 
split level 13: [/input-8, 1445] 
split level 14: [/input-8, 1444] 
split level 15: [/input, 2771] 
split level 16: [/input-8, 277] 
split level 17: [/input-8, 1437] 
split level 18: [/input-8, 1069] 
split level 19: [/input-8, 1381] 
split level 20: [/input-8, 1434] 
split level 21: [/input-8, 422] 
split level 22: [/input-8, 118] 
split level 23: [/input-8, 293] 
split level 24: [/input-8, 924] 
split level 25: [/input-8, 284] 
split level 26: [/input-8, 926] 
split level 27: [/input-8, 614] 
split level 28: [/input-8, 1111] 
split level 29: [/input-8, 1253] 
split level 30: [/input, 2741] 
split level 31: [/input-8, 413] 
split level 32: [/input, 2726] 
split level 33: [/input-8, 630] 
split level 34: [/input, 1643] 
split level 35: [/input, 1592] 
split level 36: [/input, 4070] 
split level 37: [/input-8, 1447] 
split level 38: [/input-8, 620] 
split level 39: [/input, 1745] 
split level 40: [/input-8, 933] 
split level 41: [/input, 2787] 
split level 42: [/input, 183] 
split level 43: [/input-8, 854] 
split level 44: [/input-8, 550] 
split level 45: [/input-8, 1148] 
split level 46: [/input-8, 1483] 
split level 47: [/input-8, 1571] 
split level 48: [/input-8, 1620] 
split level 49: [/input-8, 410] 
split level 50: [/input-8, 934] 
split level 51: [/input, 1627] 
split level 52: [/input-8, 1325] 
split level 53: [/input-8, 1572] 
split level 54: [/input-8, 476] 
split level 55: [/input, 1623] 
split level 56: [/input, 417] 
split level 57: [/input, 2177] 
split level 58: [/input-8, 925] 
split level 59: [/input, 2601] 
split level 60: [/input-8, 1455] 
split level 61: [/input-8, 606] 
split level 62: [/input-8, 1439] 
split level 63: [/input-8, 567] 
split level 64: [/input-8, 1505] 
split level 65: [/input, 1762] 
split level 66: [/input-8, 1463] 
split level 67: [/input, 4069] 
split level 68: [/input-8, 1484] 
split level 69: [/input, 2209] 
split level 70: [/input-8, 430] 
split level 71: [/input-8, 274] 
split level 72: [/input-8, 1252] 
split level 73: [/input, 371] 
split level 74: [/input, 3438] 
split level 75: [/input, 369] 
split level 76: [/input-8, 294] 
split level 77: [/input, 1626] 
split level 78: [/input, 2585] 
split level 79: [/input-8, 1628] 
split level 80: [/input, 4036] 
split level 81: [/input-8, 1052] 
split level 82: [/input, 2587] 
split level 83: [/input-8, 111] 
split level 84: [/input, 2149] 
split level 85: [/input, 2150] 
split level 86: [/input, 418] 
split level 87: [/input, 2497] 
split level 88: [/input-8, 1238] 
split level 89: [/input, 2133] 
split level 90: [/input-8, 575] 
split level 91: [/input-8, 941] 
split level 92: [/input, 198] 
split level 93: [/input, 2759] 
split level 94: [/input, 2151] 
split level 95: [/input, 2140] 
split level 96: [/input-8, 1013] 
split level 97: [/input, 1620] 
split level 98: [/input-8, 103] 
split level 99: [/input, 2754] 
split level 100: [/input-8, 628] 
split level 101: [/input, 4055] 
split level 102: [/input, 2600] 
split level 103: [/input-8, 412] 
split level 104: [/input-8, 85] 
split level 105: [/input, 4038] 
split level 106: [/input-8, 475] 
split level 107: [/input-8, 469] 
split level 108: [/input, 1364] 
split level 109: [/input, 4006] 
split level 110: [/input, 1714] 
split level 111: [/input, 2709] 
split level 112: [/input-8, 276] 
split level 113: [/input, 37] 
split level 114: [/input-8, 1021] 
split level 115: [/input-8, 1486] 
split level 116: [/input, 2119] 
split level 117: [/input-8, 1521] 
split level 118: [/input, 2616] 
split level 119: [/input, 2513] 
split level 120: [/input, 1411] 
split level 121: [/input-8, 1063] 
split level 122: [/input, 2599] 
split level 123: [/input-8, 440] 
split level 124: [/input, 1609] 
split level 125: [/input, 192] 
split level 126: [/input-8, 458] 
split level 127: [/input, 3265] 
split level 128: [/input, 3454] 
split level 129: [/input-8, 1429] 
split level 130: [/input-8, 421] 
split level 131: [/input, 2225] 
split level 132: [/input-8, 445] 
split level 133: [/input-8, 1573] 
split level 134: [/input, 2770] 
split level 135: [/input-8, 1006] 
split level 136: [/input, 294] 
split level 137: [/input-8, 1347] 
split level 138: [/input-8, 629] 
split level 139: [/input-8, 500] 
split level 140: [/input-8, 1055] 
split level 141: [/input, 3249] 
split level 142: [/input, 2257] 
split level 143: [/input, 1698] 
split level 144: [/input, 2584] 
split level 145: [/input, 176] 
split level 146: [/input-8, 1608] 
split level 147: [/input, 1577] 
split level 148: [/input, 824] 
split level 149: [/input, 1439] 
split level 150: [/input, 2136] 
split level 151: [/input-8, 1625] 
split level 152: [/input, 2102] 
split level 153: [/input-8, 484] 
split level 154: [/input-8, 1261] 
split level 155: [/input, 2786] 
split level 156: [/input-8, 501] 
split level 157: [/input, 2466] 
split level 158: [/input, 2603] 
split level 159: [/input, 1363] 
split level 160: [/input, 2139] 
split level 161: [/input, 4007] 
split level 162: [/input, 3217] 
split level 163: [/input, 160] 
split level 164: [/input, 2629] 
split level 165: [/input-8, 502] 
split level 166: [/input, 4049] 
split level 167: [/input-8, 1581] 
split level 168: [/input, 4089] 
split level 169: [/input-8, 1230] 
split level 170: [/input, 3442] 
split level 171: [/input, 2913] 
split level 172: [/input, 2630] 
split level 173: [/input, 2371] 
split level 174: [/input-8, 1027] 
split level 175: [/input, 2104] 
split level 176: [/input, 216] 
split level 177: [/input, 1675] 
split level 178: [/input, 4008] 
split level 179: [/input, 1415] 
split level 180: [/input, 2206] 
split level 181: [/input, 970] 
split level 182: [/input, 4056] 
split level 183: [/input, 4039] 
split level 184: [/input-8, 450] 
split level 185: [/input, 1115] 
split level 186: [/input-8, 478] 
split level 187: [/input, 2537] 
split level 188: [/input, 307] 
split level 189: [/input, 2116] 
split level 190: [/input, 3654] 
split level 191: [/input, 4018] 
split level 192: [/input-8, 1254] 
split level 193: [/input, 2480] 
split level 194: [/input, 3349] 
split level 195: [/input, 1406] 
split level 196: [/input, 2830] 
split level 197: [/input, 3280] 
split level 198: [/input-8, 454] 
split level 199: [/input, 921] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.43024784326553345
10 lb beta sum: 0.0, worst -0.4302431344985962
Time: prepare 0.0119    bound 0.1024    transfer 0.0027    finalize 0.0028    func 0.1225    
Accumulated time: func 0.1758    prepare 0.0220    bound 0.1553    transfer 0.0028    finalize 0.0030    
all_split False
======================Cut inference begins======================
max lb tensor(0.29873013) min lb tensor(-0.43022776)
Number of Verified Splits: 1 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.01113748550415039 
BICCOS Cumulative time: 0.01113748550415039
Preprocessing time: 0.01042318344116211 Inference time: 8.344650268554688e-05 Add cuts time: 6.222724914550781e-05 Cut analysis time: 0.0005686283111572266
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.41681 (1), -0.41668 (1), -0.41636 (1), -0.41632 (1), -0.41619 (1), -0.41599 (1), -0.41588 (1), -0.41587 (1), -0.41499 (1), -0.41497 (1), -0.41493 (1), -0.41406 (1), -0.41355 (1), -0.41318 (1), -0.41229 (1), -0.41185 (1), -0.41168 (1), -0.41157 (1), -0.41025 (1), -0.40885 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5114    set_bounds 0.0089    solve 0.1226    add 0.0695    
Accumulated time: pickout 0.0004    decision 0.5114    set_bounds 0.0089    solve 0.1226    add 0.0695    
Current (lb-rhs): -0.4168090224266052
50 domains visited
Cumulative time: 0.7819595336914062

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 17] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 17] [/input-12, 82] [/input-12, 82] 
split level 1: [/input-12, 53] [/input-12, 17] [/input-12, 53] [/input-12, 17] [/input-12, 53] [/input-12, 17] [/input-12, 53] [/input-12, 53] [/input-12, 17] [/input-12, 17] 
split level 2: [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 53] [/input-12, 31] [/input-12, 53] [/input-12, 17] [/input-12, 31] [/input-12, 53] [/input-12, 31] 
split level 3: [/input-8, 1436] [/input-12, 26] [/input-12, 26] [/input-12, 31] [/input-12, 26] [/input-12, 31] [/input-12, 31] [/input-12, 26] [/input-12, 31] [/input-12, 26] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.39576274156570435
10 lb beta sum: 0.18990863859653473, worst -0.3915885388851166
Time: prepare 0.0084    bound 0.1156    transfer 0.0008    finalize 0.0028    func 0.1304    
Accumulated time: func 0.3061    prepare 0.0306    bound 0.2709    transfer 0.0036    finalize 0.0057    
all_split False
======================Cut inference begins======================
max lb tensor(0.27107495) min lb tensor(-0.39155290)
Number of Verified Splits: 59 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.016308069229125977 
BICCOS Cumulative time: 0.027445554733276367
Preprocessing time: 0.012644290924072266 Inference time: 0.002738475799560547 Add cuts time: 0.0006682872772216797 Cut analysis time: 0.0002570152282714844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15930 (2), -0.15926 (2), -0.15783 (2), -0.15649 (2), -0.15637 (2), -0.15626 (2), -0.15568 (2), -0.15558 (2), -0.15435 (2), -0.15405 (2), -0.15358 (2), -0.15175 (2), -0.15160 (2), -0.15074 (2), -0.15065 (2), -0.15010 (2), -0.15009 (2), -0.14882 (2), -0.14841 (2), -0.14800 (2), 
Length of domains: 50
Time: pickout 0.0012    decision 0.0198    set_bounds 0.0123    solve 0.1305    add 0.0831    
Accumulated time: pickout 0.0015    decision 0.5313    set_bounds 0.0213    solve 0.2530    add 0.1525    
Current (lb-rhs): -0.15929970145225525
100 domains visited
Cumulative time: 1.0453906059265137

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 46] [/input-12, 46] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] 
split level 1: [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 46] [/input-12, 53] [/input-12, 46] [/input-12, 46] [/input-12, 46] 
split level 2: [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 53] [/input-12, 31] [/input-12, 53] [/input-12, 31] [/input-12, 31] 
split level 3: [/input-8, 118] [/input-8, 1323] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 31] [/input-8, 118] [/input-12, 31] [/input-12, 26] [/input-12, 26] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15617698431015015
10 lb beta sum: 0.5190643668174744, worst -0.015814751386642456
Time: prepare 0.0084    bound 0.1169    transfer 0.0008    finalize 0.0025    func 0.1312    
Accumulated time: func 0.4373    prepare 0.0393    bound 0.3878    transfer 0.0043    finalize 0.0082    
all_split False
======================Cut inference begins======================
max lb tensor(0.40861619) min lb tensor(-0.01292574)
Number of Verified Splits: 388 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.03890061378479004 
BICCOS Cumulative time: 0.0663461685180664
Preprocessing time: 0.012089967727661133 Inference time: 0.01685333251953125 Add cuts time: 0.0096282958984375 Cut analysis time: 0.00032901763916015625
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0195    set_bounds 0.0157    solve 0.1313    add 0.0197    
Accumulated time: pickout 0.0026    decision 0.5508    set_bounds 0.0369    solve 0.3843    add 0.1722    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([17, 82]), tensor([-1., -1.]), tensor([0, 0]), tensor([7.92477294e-07, 3.47544968e-01]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([17, 82]), tensor([-1.,  1.]), tensor([0, 0]), tensor([7.92477294e-07, 8.80170316e-02]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([17, 31, 82]), tensor([ 1., -1., -1.]), tensor([0, 0, 0]), tensor([9.79804327e-08, 6.43088222e-02, 3.35751832e-01]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([17, 31, 82]), tensor([ 1., -1.,  1.]), tensor([0, 0, 0]), tensor([9.79804327e-08, 6.43088222e-02, 1.56019390e-01]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([17, 31, 82]), tensor([ 1.,  1., -1.]), tensor([0, 0, 0]), tensor([9.79804327e-08, 3.38869840e-02, 3.44450653e-01]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([17, 31, 82]), tensor([1., 1., 1.]), tensor([0, 0, 0]), tensor([9.79804327e-08, 3.38869840e-02, 1.58906743e-01]), tensor([0, 1, 2]))}
Shallow branching resets to n domains:  6
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2146785855293274
10 lb beta sum: 0.5160617828369141, worst -0.14987808465957642
Time: prepare 0.0005    bound 0.1257    transfer 0.0002    finalize 0.0002    func 0.1266    
Accumulated time: func 0.5639    prepare 0.0397    bound 0.5135    transfer 0.0045    finalize 0.0084    
After pruning, left:  1

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 46] 
split level 1: [/input-12, 53] 
split level 2: [/input-12, 31] 
split level 3: [/input-12, 99] 
split level 4: [/input-12, 54] 
split level 5: [/input-12, 26] 
split level 6: [/input-8, 1323] 
split level 7: [/input-8, 1436] 
cut re-enabled after branching node selection
0 lb beta sum: 1.208592176437378, worst -0.09530675411224365
10 lb beta sum: 1.208592176437378, worst -0.09456133842468262
Time: prepare 0.0115    bound 0.1274    transfer 0.0006    finalize 0.0013    func 0.1426    
Accumulated time: func 0.7065    prepare 0.0517    bound 0.6409    transfer 0.0051    finalize 0.0097    
all_split False
======================Cut inference begins======================
max lb tensor(0.69290125) min lb tensor(-0.09422243)
Number of Verified Splits: 243 of 256
Stop inferencing: Max iteration reached.
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.0003554821014404297 
BICCOS Cumulative time: 0.06670165061950684
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09422 (8), -0.08130 (8), -0.07997 (8), -0.06739 (8), -0.06703 (8), -0.05580 (8), -0.05352 (8), -0.04192 (8), -0.02503 (8), -0.01293 (8), -0.01101 (8), -0.00561 (8), -0.00194 (8), 
Length of domains: 13
Time: pickout 0.0005    decision 0.0218    set_bounds 0.0254    solve 0.1427    add 0.0009    
Accumulated time: pickout 0.0032    decision 0.5726    set_bounds 0.0623    solve 0.5270    add 0.1731    
Current (lb-rhs): -0.09422242641448975
113 domains visited
Cumulative time: 1.6071763038635254

BaB round 2
batch: 13
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 118] [/input-8, 118] [/input-8, 413] [/input-8, 118] [/input-8, 118] [/input-8, 413] [/input-8, 118] [/input-8, 1437] [/input-8, 413] [/input-8, 413] 
split level 1: [/input-8, 413] [/input-8, 1437] [/input-8, 924] [/input-8, 413] [/input-8, 1437] [/input-8, 924] [/input-8, 1437] [/input-8, 413] [/input-8, 924] [/input-8, 924] 
split level 2: [/input-8, 1437] [/input-8, 924] [/input-8, 1620] [/input-8, 1437] [/input-8, 924] [/input-8, 1620] [/input-8, 413] [/input-8, 924] [/input-8, 1620] [/input-8, 1620] 
split level 3: [/input-8, 410] [/input-8, 410] [/input-8, 1628] [/input-8, 410] [/input-8, 410] [/input-8, 1628] [/input-8, 410] [/input-8, 410] [/input-8, 1628] [/input-8, 1628] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2085922956466675, worst -0.07511425018310547
10 lb beta sum: 1.2085922956466675, worst -0.07474517822265625
Time: prepare 0.0097    bound 0.1296    transfer 0.0009    finalize 0.0013    func 0.1428    
Accumulated time: func 0.8493    prepare 0.0616    bound 0.7704    transfer 0.0060    finalize 0.0110    
all_split False
======================Cut inference begins======================
max lb tensor(0.04158771) min lb tensor(-0.07452047)
Number of Verified Splits: 79 of 208
Stop inferencing: Max iteration reached.
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.00036072731018066406 
BICCOS Cumulative time: 0.0670623779296875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07452 (12), -0.07377 (12), -0.06943 (12), -0.06882 (12), -0.06873 (12), -0.06810 (12), -0.06500 (12), -0.06427 (12), -0.06238 (12), -0.06172 (12), -0.06164 (12), -0.06121 (12), -0.06090 (12), -0.06062 (12), -0.06013 (12), -0.05980 (12), -0.05834 (12), -0.05768 (12), -0.05709 (12), -0.05669 (12), 
Length of domains: 129
Time: pickout 0.0012    decision 0.0138    set_bounds 0.0124    solve 0.1429    add 0.0013    
Accumulated time: pickout 0.0043    decision 0.5864    set_bounds 0.0746    solve 0.6699    add 0.1744    
Current (lb-rhs): -0.07452046871185303
242 domains visited
Cumulative time: 1.779618501663208

BaB round 3
batch: 129
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 924] [/input-8, 630] [/input-8, 924] [/input-8, 630] [/input-8, 924] [/input-8, 630] [/input-8, 924] [/input-8, 630] [/input-8, 924] [/input-8, 630] 
cut re-enabled after branching node selection
0 lb beta sum: 1.208592176437378, worst -0.07145678997039795
10 lb beta sum: 1.208592176437378, worst -0.07129287719726562
Time: prepare 0.0117    bound 0.1360    transfer 0.0006    finalize 0.0018    func 0.1519    
Accumulated time: func 1.0012    prepare 0.0735    bound 0.9064    transfer 0.0066    finalize 0.0128    
all_split False
======================Cut inference begins======================
max lb tensor(0.00815934) min lb tensor(-0.07121682)
Number of Verified Splits: 12 of 258
Stop inferencing: Max iteration reached.
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.00040459632873535156 
BICCOS Cumulative time: 0.06746697425842285
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07122 (13), -0.07048 (13), -0.06593 (13), -0.06530 (13), -0.06524 (13), -0.06456 (13), -0.06112 (13), -0.06040 (13), -0.05886 (13), -0.05836 (13), -0.05824 (13), -0.05807 (13), -0.05779 (13), -0.05761 (13), -0.05735 (13), -0.05721 (13), -0.05677 (13), -0.05642 (13), -0.05443 (13), -0.05380 (13), 
Length of domains: 246
Time: pickout 0.0023    decision 0.0187    set_bounds 0.0112    solve 0.1521    add 0.0286    
Accumulated time: pickout 0.0066    decision 0.6051    set_bounds 0.0858    solve 0.8219    add 0.2030    
Current (lb-rhs): -0.07121682167053223
488 domains visited
Cumulative time: 1.9932878017425537

BaB round 4
batch: 246
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 413] [/input-8, 1620] [/input-8, 413] [/input-8, 1620] [/input-8, 118] [/input-8, 1620] [/input-8, 118] [/input-8, 1620] [/input-8, 413] [/input-8, 1620] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2085922956466675, worst -0.06811344623565674
10 lb beta sum: 1.2085922956466675, worst -0.06799209117889404
Time: prepare 0.0230    bound 0.1379    transfer 0.0008    finalize 0.0030    func 0.1680    
Accumulated time: func 1.1692    prepare 0.0968    bound 1.0443    transfer 0.0074    finalize 0.0158    
all_split False
======================Cut inference begins======================
max lb tensor(0.00579262) min lb tensor(-0.06795561)
Number of Verified Splits: 36 of 492
Stop inferencing: Max iteration reached.
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.000370025634765625 
BICCOS Cumulative time: 0.06783699989318848
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06796 (14), -0.06721 (14), -0.06256 (14), -0.06203 (14), -0.06189 (14), -0.06128 (14), -0.05782 (14), -0.05706 (14), -0.05672 (14), -0.05600 (14), -0.05559 (14), -0.05497 (14), -0.05474 (14), -0.05453 (14), -0.05439 (14), -0.05401 (14), -0.05393 (14), -0.05364 (14), -0.05295 (14), -0.05261 (14), 
Length of domains: 456
Time: pickout 0.0048    decision 0.0253    set_bounds 0.0197    solve 0.1682    add 0.0020    
Accumulated time: pickout 0.0115    decision 0.6304    set_bounds 0.1055    solve 0.9901    add 0.2050    
Current (lb-rhs): -0.0679556131362915
944 domains visited
Cumulative time: 2.214585065841675

BaB round 5
batch: 456
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1571] [/input-8, 1571] [/input, 1623] [/input-8, 550] [/input, 1623] [/input-8, 1571] [/input-8, 550] [/input-8, 1571] [/input-8, 550] [/input, 1623] 
cut re-enabled after branching node selection
0 lb beta sum: 1.208592176437378, worst -0.06471681594848633
10 lb beta sum: 1.208592176437378, worst -0.06467509269714355
Time: prepare 0.0457    bound 0.1389    transfer 0.0015    finalize 0.0045    func 0.1966    
Accumulated time: func 1.3659    prepare 0.1427    bound 1.1832    transfer 0.0089    finalize 0.0203    
all_split False
======================Cut inference begins======================
max lb tensor(0.00669205) min lb tensor(-0.06464362)
Number of Verified Splits: 90 of 912
Stop inferencing: Max iteration reached.
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.0004458427429199219 
BICCOS Cumulative time: 0.0682828426361084
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06464 (15), -0.06404 (15), -0.06129 (15), -0.06044 (15), -0.05874 (15), -0.05856 (15), -0.05815 (15), -0.05797 (15), -0.05542 (15), -0.05536 (15), -0.05460 (15), -0.05452 (15), -0.05425 (15), -0.05394 (15), -0.05277 (15), -0.05220 (15), -0.05166 (15), -0.05146 (15), -0.05122 (15), -0.05120 (15), 
Length of domains: 822
Time: pickout 0.0070    decision 0.0367    set_bounds 0.0363    solve 0.1969    add 0.0059    
Accumulated time: pickout 0.0184    decision 0.6672    set_bounds 0.1418    solve 1.1870    add 0.2109    
Current (lb-rhs): -0.06464362144470215
1766 domains visited
Cumulative time: 2.499403715133667

BaB round 6
batch: 822
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 1623] [/input, 1623] [/input-8, 1571] [/input, 1623] [/input-8, 1571] [/input, 1623] [/input-8, 1325] [/input, 1623] [/input, 1623] [/input-8, 1571] 
cut re-enabled after branching node selection
0 lb beta sum: 1.208592176437378, worst -0.0607987642288208
10 lb beta sum: 1.208592176437378, worst -0.060706377029418945
Time: prepare 0.0821    bound 0.1578    transfer 0.0085    finalize 0.0092    func 0.2681    
Accumulated time: func 1.6339    prepare 0.2251    bound 1.3410    transfer 0.0175    finalize 0.0295    
all_split False
======================Cut inference begins======================
max lb tensor(0.00548333) min lb tensor(-0.06068480)
Number of Verified Splits: 223 of 1644
Stop inferencing: Max iteration reached.
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.0004279613494873047 
BICCOS Cumulative time: 0.0687108039855957
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06068 (16), -0.06012 (16), -0.05767 (16), -0.05732 (16), -0.05666 (16), -0.05656 (16), -0.05560 (16), -0.05509 (16), -0.05474 (16), -0.05436 (16), -0.05422 (16), -0.05331 (16), -0.05303 (16), -0.05258 (16), -0.05233 (16), -0.05164 (16), -0.05140 (16), -0.05123 (16), -0.05067 (16), -0.05054 (16), 
Length of domains: 1421
Time: pickout 0.0145    decision 0.2209    set_bounds 0.0598    solve 0.2685    add 0.0061    
Accumulated time: pickout 0.0329    decision 0.8880    set_bounds 0.2016    solve 1.4554    add 0.2170    
Current (lb-rhs): -0.060684800148010254
3187 domains visited
Cumulative time: 3.0727691650390625

BaB round 7
batch: 1421
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1620] [/input-8, 1572] [/input-8, 1572] [/input-8, 1571] [/input-8, 1572] [/input-8, 1572] [/input-8, 1572] [/input-8, 1571] [/input-8, 1572] [/input-8, 1571] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2085920572280884, worst -0.0564345121383667
10 lb beta sum: 1.2085920572280884, worst -0.056392788887023926
Time: prepare 0.1467    bound 0.2168    transfer 0.0039    finalize 0.0170    func 0.4029    
Accumulated time: func 2.0368    prepare 0.3721    bound 1.5578    transfer 0.0214    finalize 0.0465    
all_split False
======================Cut inference begins======================
max lb tensor(0.00605774) min lb tensor(-0.05636990)
Number of Verified Splits: 475 of 2842
Stop inferencing: Max iteration reached.
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.0004551410675048828 
BICCOS Cumulative time: 0.06916594505310059
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05637 (17), -0.05583 (17), -0.05479 (17), -0.05419 (17), -0.05359 (17), -0.05331 (17), -0.05234 (17), -0.05231 (17), -0.05175 (17), -0.05154 (17), -0.05148 (17), -0.05112 (17), -0.05102 (17), -0.05098 (17), -0.05096 (17), -0.05062 (17), -0.05043 (17), -0.04979 (17), -0.04935 (17), -0.04900 (17), 
Length of domains: 2367
Time: pickout 0.0225    decision 0.0899    set_bounds 0.1143    solve 0.4037    add 0.0143    
Accumulated time: pickout 0.0554    decision 0.9779    set_bounds 0.3159    solve 1.8592    add 0.2312    
Current (lb-rhs): -0.056369900703430176
5554 domains visited
Cumulative time: 3.72404146194458

BaB round 8
batch: 2367
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1148] [/input-8, 1148] [/input-8, 1148] [/input-8, 1148] [/input-8, 1148] [/input-8, 1148] [/input-8, 1148] [/input-8, 630] [/input-8, 1148] [/input-8, 1148] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2085922956466675, worst -0.052858948707580566
10 lb beta sum: 1.2085922956466675, worst -0.052708983421325684
Time: prepare 0.2455    bound 0.3157    transfer 0.0341    finalize 0.0293    func 0.6548    
Accumulated time: func 2.6917    prepare 0.6178    bound 1.8736    transfer 0.0555    finalize 0.0759    
all_split False
======================Cut inference begins======================
max lb tensor(0.01055318) min lb tensor(-0.05268443)
Number of Verified Splits: 1699 of 4734
Stop inferencing: Max iteration reached.
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.0005357265472412109 
BICCOS Cumulative time: 0.0697016716003418
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05268 (18), -0.05213 (18), -0.05103 (18), -0.05059 (18), -0.05042 (18), -0.05011 (18), -0.05000 (18), -0.04942 (18), -0.04907 (18), -0.04903 (18), -0.04889 (18), -0.04875 (18), -0.04848 (18), -0.04844 (18), -0.04816 (18), -0.04739 (18), -0.04735 (18), -0.04732 (18), -0.04724 (18), -0.04695 (18), 
Length of domains: 3035
Time: pickout 0.0377    decision 0.1408    set_bounds 0.3460    solve 0.6557    add 0.0179    
Accumulated time: pickout 0.0931    decision 1.1187    set_bounds 0.6619    solve 2.5149    add 0.2491    
Current (lb-rhs): -0.05268442630767822
8589 domains visited
Cumulative time: 4.933735370635986

BaB round 9
batch: 3035
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 550] [/input-8, 1325] [/input-8, 550] [/input-8, 1620] [/input-8, 550] [/input-8, 550] [/input-8, 1620] [/input-8, 1148] [/input-8, 1620] [/input-8, 550] 
cut re-enabled after branching node selection
0 lb beta sum: 1.208592176437378, worst -0.05120646953582764
10 lb beta sum: 1.208592176437378, worst -0.05115401744842529
Time: prepare 0.3139    bound 0.3885    transfer 0.0258    finalize 0.0352    func 0.9771    
Accumulated time: func 3.6688    prepare 0.9320    bound 2.2620    transfer 0.0813    finalize 0.1111    
all_split False
======================Cut inference begins======================
max lb tensor(0.02655011) min lb tensor(-0.05113029)
Number of Verified Splits: 1560 of 6070
Stop inferencing: Max iteration reached.
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.0006530284881591797 
BICCOS Cumulative time: 0.07035470008850098
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05113 (19), -0.05055 (19), -0.04951 (19), -0.04898 (19), -0.04889 (19), -0.04854 (19), -0.04840 (19), -0.04790 (19), -0.04747 (19), -0.04744 (19), -0.04719 (19), -0.04691 (19), -0.04689 (19), -0.04664 (19), -0.04585 (19), -0.04581 (19), -0.04572 (19), -0.04571 (19), -0.04538 (19), -0.04537 (19), 
Length of domains: 4510
Time: pickout 0.0602    decision 0.1800    set_bounds 0.2628    solve 0.9784    add 0.0265    
Accumulated time: pickout 0.1533    decision 1.2987    set_bounds 0.9247    solve 3.4933    add 0.2756    
Current (lb-rhs): -0.05113029479980469
13099 domains visited
Cumulative time: 6.456772565841675

BaB round 10
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1438] [/input-8, 1438] [/input-8, 1438] [/input-8, 1438] [/input-8, 1438] [/input-8, 1438] [/input-8, 1572] [/input-8, 1438] [/input-8, 1438] [/input-8, 1438] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2085922956466675, worst -0.04974806308746338
10 lb beta sum: 1.2085922956466675, worst -0.049712181091308594
Time: prepare 0.4274    bound 0.4948    transfer 0.0582    finalize 0.2169    func 1.2501    
Accumulated time: func 4.9188    prepare 1.3597    bound 2.7569    transfer 0.1395    finalize 0.3280    
all_split False
======================Cut inference begins======================
max lb tensor(0.02502352) min lb tensor(-0.04969442)
Number of Verified Splits: 3840 of 8192
Stop inferencing: Max iteration reached.
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.0006797313690185547 
BICCOS Cumulative time: 0.07103443145751953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04969 (20), -0.04911 (20), -0.04805 (20), -0.04747 (20), -0.04744 (20), -0.04708 (20), -0.04689 (20), -0.04647 (20), -0.04598 (20), -0.04592 (20), -0.04576 (20), -0.04546 (20), -0.04539 (20), -0.04521 (20), -0.04442 (20), -0.04436 (20), -0.04425 (20), -0.04422 (20), -0.04394 (20), -0.04393 (20), 
Length of domains: 4766
Time: pickout 0.0682    decision 0.2328    set_bounds 0.3700    solve 1.2519    add 0.0164    
Accumulated time: pickout 0.2214    decision 1.5315    set_bounds 1.2946    solve 4.7452    add 0.2920    
Current (lb-rhs): -0.04969441890716553
17451 domains visited
current_vram/total_varm: 10.5GB/99.9GB, batch_size increase to 8192
Cumulative time: 8.424409627914429

BaB round 11
batch: 4766
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1438] [/input-8, 1438] [/input-8, 1438] [/input-8, 1438] [/input-8, 1438] [/input-8, 1438] [/input-8, 1438] [/input-8, 1438] [/input-8, 1438] [/input-8, 1438] 
cut re-enabled after branching node selection
0 lb beta sum: 1.208592414855957, worst -0.045529723167419434
10 lb beta sum: 1.208592414855957, worst -0.04548203945159912
Time: prepare 0.5064    bound 0.5660    transfer 0.0554    finalize 0.2132    func 1.4054    
Accumulated time: func 6.3242    prepare 1.8664    bound 3.3229    transfer 0.1949    finalize 0.5411    
all_split False
======================Cut inference begins======================
max lb tensor(0.02715415) min lb tensor(-0.04546475)
Number of Verified Splits: 3177 of 9532
Stop inferencing: Max iteration reached.
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.0006451606750488281 
BICCOS Cumulative time: 0.07167959213256836
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04546 (21), -0.04486 (21), -0.04402 (21), -0.04400 (21), -0.04382 (21), -0.04343 (21), -0.04343 (21), -0.04321 (21), -0.04318 (21), -0.04283 (21), -0.04252 (21), -0.04238 (21), -0.04192 (21), -0.04176 (21), -0.04170 (21), -0.04151 (21), -0.04133 (21), -0.04130 (21), -0.04120 (21), -0.04117 (21), 
Length of domains: 6355
Time: pickout 0.0988    decision 0.2733    set_bounds 0.4248    solve 1.4075    add 0.0363    
Accumulated time: pickout 0.3202    decision 1.8048    set_bounds 1.7194    solve 6.1527    add 0.3283    
Current (lb-rhs): -0.04546475410461426
23806 domains visited
Cumulative time: 10.694910764694214

BaB round 12
batch: 6355
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1572] [/input-8, 1325] [/input-8, 1325] [/input-8, 1325] [/input-8, 1572] [/input-8, 550] [/input-8, 1572] [/input-8, 1325] [/input-8, 1325] [/input-8, 550] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2085922956466675, worst -0.042275309562683105
10 lb beta sum: 1.2085922956466675, worst -0.04222071170806885
Time: prepare 0.6700    bound 0.7328    transfer 0.0655    finalize 0.0701    func 1.6207    
Accumulated time: func 7.9449    prepare 2.5368    bound 4.0557    transfer 0.2604    finalize 0.6112    
all_split False
======================Cut inference begins======================
max lb tensor(0.02796102) min lb tensor(-0.04220116)
Number of Verified Splits: 3804 of 12710
Stop inferencing: Max iteration reached.
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.0006716251373291016 
BICCOS Cumulative time: 0.07235121726989746
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04220 (22), -0.04161 (22), -0.04059 (22), -0.04052 (22), -0.03996 (22), -0.03993 (22), -0.03955 (22), -0.03950 (22), -0.03903 (22), -0.03896 (22), -0.03893 (22), -0.03888 (22), -0.03865 (22), -0.03849 (22), -0.03842 (22), -0.03825 (22), -0.03823 (22), -0.03809 (22), -0.03804 (22), -0.03798 (22), 
Length of domains: 8906
Time: pickout 0.1061    decision 0.3626    set_bounds 0.7316    solve 1.8101    add 0.0498    
Accumulated time: pickout 0.4263    decision 2.1673    set_bounds 2.4511    solve 7.9628    add 0.3780    
Current (lb-rhs): -0.04220116138458252
32712 domains visited
Cumulative time: 13.793681621551514

BaB round 13
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1325] [/input-8, 1572] [/input-8, 550] [/input-8, 550] [/input-8, 550] [/input-8, 1325] [/input-8, 550] [/input-8, 550] [/input-8, 550] [/input-8, 550] 
cut re-enabled after branching node selection
0 lb beta sum: 1.208592414855957, worst -0.03882396221160889
10 lb beta sum: 1.208592414855957, worst -0.03877556324005127
Time: prepare 0.8718    bound 0.9197    transfer 0.0790    finalize 0.0802    func 2.0575    
Accumulated time: func 10.0025    prepare 3.4091    bound 4.9754    transfer 0.3394    finalize 0.6914    
all_split False
======================Cut inference begins======================
max lb tensor(0.02562845) min lb tensor(-0.03875709)
Number of Verified Splits: 4623 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.000823974609375 
BICCOS Cumulative time: 0.07317519187927246
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03876 (23), -0.03816 (23), -0.03776 (23), -0.03717 (23), -0.03712 (23), -0.03706 (23), -0.03651 (23), -0.03648 (23), -0.03645 (23), -0.03612 (23), -0.03611 (23), -0.03610 (23), -0.03587 (23), -0.03557 (23), -0.03555 (23), -0.03554 (23), -0.03552 (23), -0.03549 (23), -0.03540 (23), -0.03512 (23), 
Length of domains: 12475
Time: pickout 0.1414    decision 0.4782    set_bounds 0.9963    solve 2.0616    add 0.1014    
Accumulated time: pickout 0.5677    decision 2.6456    set_bounds 3.4474    solve 10.0244    add 0.4794    
Current (lb-rhs): -0.0387570858001709
44473 domains visited
current_vram/total_varm: 23.8GB/99.9GB, batch_size increase to 16384
Cumulative time: 17.621565103530884

BaB round 14
batch: 12475
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 925] [/input-8, 1628] [/input-8, 430] [/input-8, 430] [/input-8, 1628] [/input-8, 430] [/input-8, 1628] [/input-8, 1628] [/input-8, 925] [/input-8, 925] 
cut re-enabled after branching node selection
0 lb beta sum: 1.208592414855957, worst -0.03528153896331787
10 lb beta sum: 1.208592414855957, worst -0.035227179527282715
Time: prepare 1.3169    bound 1.3737    transfer 0.1598    finalize 0.3791    func 3.3898    
Accumulated time: func 13.3923    prepare 4.7264    bound 6.3491    transfer 0.4992    finalize 1.0705    
all_split False
======================Cut inference begins======================
max lb tensor(0.00532186) min lb tensor(-0.03518164)
Number of Verified Splits: 7629 of 24950
Stop inferencing: Max iteration reached.
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.0007596015930175781 
BICCOS Cumulative time: 0.07393479347229004
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03518 (24), -0.03471 (24), -0.03459 (24), -0.03416 (24), -0.03414 (24), -0.03368 (24), -0.03356 (24), -0.03351 (24), -0.03342 (24), -0.03340 (24), -0.03310 (24), -0.03302 (24), -0.03297 (24), -0.03292 (24), -0.03276 (24), -0.03276 (24), -0.03257 (24), -0.03244 (24), -0.03244 (24), -0.03237 (24), 
Length of domains: 17321
Time: pickout 0.2690    decision 0.9229    set_bounds 1.3557    solve 3.3949    add 0.0756    
Accumulated time: pickout 0.8367    decision 3.5685    set_bounds 4.8031    solve 13.4193    add 0.5550    
Current (lb-rhs): -0.035181641578674316
61794 domains visited
Cumulative time: 23.71972393989563

BaB round 15
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 575] [/input-8, 575] [/input-8, 430] [/input-8, 430] [/input-8, 1628] [/input-8, 430] [/input-8, 430] [/input-8, 925] [/input-8, 1628] [/input-8, 430] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2085922956466675, worst -0.032530903816223145
10 lb beta sum: 1.2085922956466675, worst -0.0324784517288208
Time: prepare 1.7384    bound 1.7687    transfer 0.2390    finalize 0.4824    func 4.4402    
Accumulated time: func 17.8325    prepare 6.4653    bound 8.1179    transfer 0.7381    finalize 1.5530    
all_split False
======================Cut inference begins======================
max lb tensor(0.01260120) min lb tensor(-0.03245652)
Number of Verified Splits: 14240 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.0008921623229980469 
BICCOS Cumulative time: 0.07482695579528809
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03246 (25), -0.03200 (25), -0.03186 (25), -0.03142 (25), -0.03138 (25), -0.03091 (25), -0.03090 (24), -0.03079 (25), -0.03079 (25), -0.03071 (25), -0.03067 (25), -0.03034 (25), -0.03032 (24), -0.03029 (25), -0.03029 (25), -0.03022 (25), -0.03006 (25), -0.03003 (25), -0.02975 (25), -0.02972 (25), 
Length of domains: 19465
Time: pickout 0.2869    decision 1.8812    set_bounds 1.7897    solve 4.7289    add 0.0759    
Accumulated time: pickout 1.1236    decision 5.4497    set_bounds 6.5928    solve 18.1482    add 0.6308    
Current (lb-rhs): -0.03245651721954346
80322 domains visited
current_vram/total_varm: 32.4GB/99.9GB, batch_size increase to 32768
Cumulative time: 32.615389347076416

BaB round 16
batch: 19465
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 614] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2085922956466675, worst -0.029618382453918457
10 lb beta sum: 1.2085922956466675, worst -0.029655098915100098
Time: prepare 2.0676    bound 2.1096    transfer 0.3086    finalize 0.2505    func 5.3278    
Accumulated time: func 23.1603    prepare 8.5333    bound 10.2275    transfer 1.0467    finalize 1.8035    
all_split False
======================Cut inference begins======================
max lb tensor(0.03188425) min lb tensor(-0.02961826)
Number of Verified Splits: 16836 of 38930
Stop inferencing: Max iteration reached.
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.001058340072631836 
BICCOS Cumulative time: 0.07588529586791992
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02962 (26), -0.02937 (26), -0.02904 (26), -0.02883 (26), -0.02874 (26), -0.02865 (26), -0.02856 (26), -0.02854 (26), -0.02848 (26), -0.02847 (26), -0.02839 (26), -0.02833 (26), -0.02824 (26), -0.02817 (26), -0.02806 (26), -0.02798 (26), -0.02796 (26), -0.02793 (25), -0.02782 (26), -0.02778 (26), 
Length of domains: 22094
Time: pickout 0.4230    decision 1.9511    set_bounds 2.3922    solve 5.3354    add 0.0947    
Accumulated time: pickout 1.5466    decision 7.4007    set_bounds 8.9850    solve 23.4836    add 0.7255    
Current (lb-rhs): -0.029618263244628906
102416 domains visited
Cumulative time: 42.974671840667725

BaB round 17
batch: 22094
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1628] [/input-8, 1628] [/input-8, 1139] [/input-8, 1628] [/input-8, 575] [/input-8, 575] [/input-8, 1628] [/input-8, 1628] [/input-8, 1628] [/input-8, 1628] 
cut re-enabled after branching node selection
0 lb beta sum: 1.208592176437378, worst -0.028833389282226562
10 lb beta sum: 1.208592176437378, worst -0.028844356536865234
Time: prepare 2.3896    bound 2.3786    transfer 0.3607    finalize 0.6307    func 6.0441    
Accumulated time: func 29.2044    prepare 10.9234    bound 12.6061    transfer 1.4074    finalize 2.4342    
all_split False
======================Cut inference begins======================
max lb tensor(0.03230453) min lb tensor(-0.02883327)
Number of Verified Splits: 21957 of 44188
Stop inferencing: Max iteration reached.
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.001005411148071289 
BICCOS Cumulative time: 0.07689070701599121
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02883 (27), -0.02852 (27), -0.02838 (27), -0.02824 (27), -0.02795 (27), -0.02794 (27), -0.02791 (26), -0.02781 (27), -0.02776 (27), -0.02740 (27), -0.02739 (27), -0.02731 (27), -0.02718 (27), -0.02717 (27), -0.02706 (27), -0.02684 (27), -0.02683 (27), -0.02681 (27), -0.02677 (27), -0.02672 (27), 
Length of domains: 22231
Time: pickout 0.4036    decision 2.2669    set_bounds 2.4839    solve 6.0530    add 0.0870    
Accumulated time: pickout 1.9502    decision 9.6677    set_bounds 11.4688    solve 29.5366    add 0.8125    
Current (lb-rhs): -0.02883327007293701
124647 domains visited
Cumulative time: 54.46578335762024

BaB round 18
batch: 22231
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 575] [/input-8, 1628] [/input-8, 575] [/input-8, 1139] [/input-8, 1139] [/input-8, 1139] [/input-8, 422] [/input-8, 1139] [/input-8, 1139] [/input-8, 1628] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2085922956466675, worst -0.027166247367858887
10 lb beta sum: 1.2085922956466675, worst -0.02713775634765625
Time: prepare 2.4024    bound 2.3951    transfer 0.3633    finalize 0.2945    func 6.1516    
Accumulated time: func 35.3560    prepare 13.3263    bound 15.0011    transfer 1.7707    finalize 2.7287    
all_split False
======================Cut inference begins======================
max lb tensor(0.02809632) min lb tensor(-0.02712464)
Number of Verified Splits: 21955 of 44462
Stop inferencing: Max iteration reached.
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.0009865760803222656 
BICCOS Cumulative time: 0.07787728309631348
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02712 (28), -0.02682 (28), -0.02666 (28), -0.02653 (28), -0.02623 (28), -0.02623 (28), -0.02608 (28), -0.02607 (28), -0.02567 (28), -0.02563 (28), -0.02560 (28), -0.02550 (28), -0.02549 (28), -0.02539 (28), -0.02533 (28), -0.02514 (28), -0.02507 (28), -0.02506 (28), -0.02504 (28), -0.02501 (28), 
Length of domains: 22507
Time: pickout 0.5017    decision 2.5667    set_bounds 2.7024    solve 6.1598    add 0.0951    
Accumulated time: pickout 2.4520    decision 12.2344    set_bounds 14.1713    solve 35.6964    add 0.9075    
Current (lb-rhs): -0.027124643325805664
147154 domains visited
Cumulative time: 66.68944048881531

BaB round 19
batch: 22507
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1139] [/input-8, 575] [/input-8, 422] [/input-8, 422] [/input-8, 1139] [/input-8, 575] [/input-8, 422] [/input-8, 575] [/input-8, 575] [/input-8, 422] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2085922956466675, worst -0.025886058807373047
10 lb beta sum: 1.2085922956466675, worst -0.025768160820007324
Time: prepare 2.4465    bound 2.4235    transfer 0.3694    finalize 0.6688    func 6.1942    
Accumulated time: func 41.5503    prepare 15.7732    bound 17.4246    transfer 2.1401    finalize 3.3976    
all_split False
======================Cut inference begins======================
max lb tensor(0.02794701) min lb tensor(-0.02570784)
Number of Verified Splits: 22036 of 45014
Stop inferencing: Max iteration reached.
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.0009620189666748047 
BICCOS Cumulative time: 0.07883930206298828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02571 (29), -0.02539 (29), -0.02523 (29), -0.02511 (29), -0.02480 (29), -0.02479 (29), -0.02465 (29), -0.02465 (29), -0.02422 (29), -0.02421 (29), -0.02417 (29), -0.02407 (29), -0.02407 (29), -0.02395 (29), -0.02390 (29), -0.02369 (29), -0.02364 (29), -0.02361 (29), -0.02360 (29), -0.02358 (29), 
Length of domains: 22978
Time: pickout 0.5324    decision 2.3070    set_bounds 2.4424    solve 6.2030    add 0.0921    
Accumulated time: pickout 2.9844    decision 14.5414    set_bounds 16.6137    solve 41.8994    add 0.9996    
Current (lb-rhs): -0.02570784091949463
170132 domains visited
Cumulative time: 78.48952627182007

BaB round 20
batch: 22978
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2787] [/input, 2787] [/input, 2787] [/input, 2787] [/input, 2787] [/input-8, 422] [/input, 2787] [/input-8, 422] [/input, 2787] [/input-8, 422] 
cut re-enabled after branching node selection
0 lb beta sum: 1.208592414855957, worst -0.024030327796936035
10 lb beta sum: 1.208592414855957, worst -0.023957490921020508
Time: prepare 2.5022    bound 2.4746    transfer 0.3838    finalize 0.2923    func 6.4169    
Accumulated time: func 47.9672    prepare 18.2758    bound 19.8993    transfer 2.5239    finalize 3.6899    
all_split False
======================Cut inference begins======================
max lb tensor(0.02765846) min lb tensor(-0.02394432)
Number of Verified Splits: 24501 of 45956
Stop inferencing: Max iteration reached.
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.0010190010070800781 
BICCOS Cumulative time: 0.07985830307006836
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02394 (30), -0.02373 (30), -0.02347 (30), -0.02316 (30), -0.02285 (30), -0.02252 (30), -0.02236 (30), -0.02221 (30), -0.02215 (30), -0.02207 (30), -0.02197 (30), -0.02196 (30), -0.02194 (30), -0.02175 (30), -0.02171 (30), -0.02167 (30), -0.02161 (30), -0.02136 (30), -0.02131 (30), -0.02119 (30), 
Length of domains: 21455
Time: pickout 0.4726    decision 3.0372    set_bounds 2.5955    solve 6.4250    add 0.0925    
Accumulated time: pickout 3.4571    decision 17.5786    set_bounds 19.2092    solve 48.3244    add 1.0921    
Current (lb-rhs): -0.023944318294525146
191587 domains visited
Cumulative time: 91.3557813167572

BaB round 21
batch: 21455
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 293] [/input-8, 575] [/input-8, 575] [/input, 2787] [/input-8, 293] [/input-8, 422] [/input, 1626] [/input, 2787] [/input, 2133] [/input-8, 293] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2085922956466675, worst -0.02284950017929077
10 lb beta sum: 1.2085922956466675, worst -0.022855937480926514
Time: prepare 2.3601    bound 2.3142    transfer 0.3626    finalize 0.2978    func 6.0800    
Accumulated time: func 54.0472    prepare 20.6363    bound 22.2134    transfer 2.8865    finalize 3.9877    
all_split False
======================Cut inference begins======================
max lb tensor(0.02743065) min lb tensor(-0.02284062)
Number of Verified Splits: 24097 of 42910
Stop inferencing: Max iteration reached.
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.001069784164428711 
BICCOS Cumulative time: 0.08092808723449707
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02284 (31), -0.02262 (31), -0.02176 (31), -0.02141 (31), -0.02112 (31), -0.02085 (31), -0.02066 (31), -0.02056 (31), -0.02043 (31), -0.02025 (31), -0.02023 (31), -0.02011 (31), -0.02006 (31), -0.02006 (31), -0.02001 (31), -0.01986 (31), -0.01980 (31), -0.01976 (31), -0.01974 (31), -0.01969 (31), 
Length of domains: 18813
Time: pickout 0.5418    decision 2.2810    set_bounds 2.5303    solve 6.0905    add 0.0966    
Accumulated time: pickout 3.9988    decision 19.8595    set_bounds 21.7396    solve 54.4149    add 1.1887    
Current (lb-rhs): -0.02284061908721924
210400 domains visited
Cumulative time: 103.14712023735046

BaB round 22
batch: 18813
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 575] [/input-8, 575] [/input-8, 575] [/input-8, 422] [/input-8, 575] [/input, 1626] [/input-8, 575] [/input-8, 293] [/input-8, 293] [/input-8, 575] 
cut re-enabled after branching node selection
0 lb beta sum: 1.208592414855957, worst -0.019872009754180908
10 lb beta sum: 1.208592414855957, worst -0.01982903480529785
Time: prepare 2.1164    bound 2.0452    transfer 0.2938    finalize 0.2907    func 5.4374    
Accumulated time: func 59.4847    prepare 22.7531    bound 24.2587    transfer 3.1803    finalize 4.2784    
all_split False
======================Cut inference begins======================
max lb tensor(0.02675259) min lb tensor(-0.01979160)
Number of Verified Splits: 20714 of 37626
Stop inferencing: Max iteration reached.
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.0009732246398925781 
BICCOS Cumulative time: 0.08190131187438965
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01979 (32), -0.01967 (32), -0.01958 (32), -0.01927 (32), -0.01924 (32), -0.01899 (32), -0.01895 (32), -0.01895 (32), -0.01879 (32), -0.01864 (32), -0.01860 (32), -0.01831 (32), -0.01818 (31), -0.01813 (32), -0.01812 (32), -0.01808 (32), -0.01799 (32), -0.01795 (32), -0.01793 (32), -0.01791 (32), 
Length of domains: 16912
Time: pickout 0.5117    decision 2.0070    set_bounds 2.3183    solve 5.4469    add 0.0808    
Accumulated time: pickout 4.5105    decision 21.8666    set_bounds 24.0578    solve 59.8618    add 1.2695    
Current (lb-rhs): -0.019791603088378906
227312 domains visited
Cumulative time: 113.73944616317749

BaB round 23
batch: 16912
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 1626] [/input, 2133] [/input-8, 575] [/input, 1626] [/input, 1620] [/input, 1626] [/input, 2133] [/input, 1626] [/input-8, 575] [/input, 1620] 
cut re-enabled after branching node selection
0 lb beta sum: 1.208592414855957, worst -0.018510639667510986
10 lb beta sum: 1.208592414855957, worst -0.018414855003356934
Time: prepare 1.8582    bound 1.8355    transfer 0.2524    finalize 0.2352    func 4.4045    
Accumulated time: func 63.8892    prepare 24.6117    bound 26.0941    transfer 3.4326    finalize 4.5136    
all_split False
======================Cut inference begins======================
max lb tensor(0.01398796) min lb tensor(-0.01839525)
Number of Verified Splits: 19882 of 33824
Stop inferencing: Max iteration reached.
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.0010099411010742188 
BICCOS Cumulative time: 0.08291125297546387
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01840 (33), -0.01836 (33), -0.01829 (33), -0.01787 (33), -0.01772 (33), -0.01743 (33), -0.01740 (33), -0.01717 (33), -0.01712 (33), -0.01711 (33), -0.01706 (33), -0.01701 (33), -0.01698 (33), -0.01694 (33), -0.01692 (33), -0.01681 (33), -0.01674 (33), -0.01671 (33), -0.01671 (33), -0.01665 (33), 
Length of domains: 13942
Time: pickout 0.3817    decision 2.0353    set_bounds 2.0583    solve 4.8417    add 0.0667    
Accumulated time: pickout 4.8921    decision 23.9019    set_bounds 26.1161    solve 64.7035    add 1.3362    
Current (lb-rhs): -0.01839524507522583
241254 domains visited
Cumulative time: 123.32994365692139

BaB round 24
batch: 13942
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 1620] [/input, 2133] [/input, 1620] [/input-8, 1446] [/input, 2133] [/input-8, 293] [/input, 1620] [/input, 1620] [/input, 1620] [/input, 2133] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2085922956466675, worst -0.016474425792694092
10 lb beta sum: 1.2085922956466675, worst -0.016447782516479492
Time: prepare 1.5405    bound 1.5293    transfer 0.1867    finalize 0.1964    func 4.0429    
Accumulated time: func 67.9321    prepare 26.1526    bound 27.6235    transfer 3.6193    finalize 4.7100    
all_split False
======================Cut inference begins======================
max lb tensor(0.01368529) min lb tensor(-0.01643711)
Number of Verified Splits: 16312 of 27884
Stop inferencing: Max iteration reached.
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.0008721351623535156 
BICCOS Cumulative time: 0.08378338813781738
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01644 (34), -0.01629 (34), -0.01614 (34), -0.01597 (34), -0.01591 (34), -0.01565 (34), -0.01558 (34), -0.01552 (34), -0.01549 (34), -0.01543 (34), -0.01542 (34), -0.01528 (34), -0.01521 (34), -0.01517 (34), -0.01517 (34), -0.01504 (34), -0.01503 (34), -0.01499 (34), -0.01495 (34), -0.01491 (34), 
Length of domains: 11572
Time: pickout 0.3789    decision 0.8349    set_bounds 1.6973    solve 4.0531    add 0.0647    
Accumulated time: pickout 5.2710    decision 24.7367    set_bounds 27.8135    solve 68.7566    add 1.4008    
Current (lb-rhs): -0.016437113285064697
252826 domains visited
Cumulative time: 130.54909110069275

BaB round 25
batch: 11572
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 1626] [/input, 1626] [/input, 1626] [/input, 1626] [/input, 1626] [/input, 1626] [/input, 1626] [/input, 1626] [/input-8, 1446] [/input-8, 1446] 
cut re-enabled after branching node selection
0 lb beta sum: 1.208592414855957, worst -0.015017688274383545
10 lb beta sum: 1.208592414855957, worst -0.014953374862670898
Time: prepare 1.2647    bound 1.2751    transfer 0.1383    finalize 0.4732    func 3.3030    
Accumulated time: func 71.2351    prepare 27.4178    bound 28.8986    transfer 3.7576    finalize 5.1832    
all_split False
======================Cut inference begins======================
max lb tensor(0.01326680) min lb tensor(-0.01493192)
Number of Verified Splits: 14400 of 23144
Stop inferencing: Max iteration reached.
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.0008752346038818359 
BICCOS Cumulative time: 0.08465862274169922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01493 (35), -0.01490 (35), -0.01466 (35), -0.01451 (35), -0.01439 (35), -0.01419 (35), -0.01375 (35), -0.01359 (35), -0.01354 (35), -0.01343 (35), -0.01341 (35), -0.01339 (35), -0.01332 (35), -0.01331 (35), -0.01331 (35), -0.01326 (35), -0.01322 (35), -0.01316 (35), -0.01307 (35), -0.01306 (35), 
Length of domains: 8744
Time: pickout 0.2725    decision 0.7154    set_bounds 1.4385    solve 3.3099    add 0.0523    
Accumulated time: pickout 5.5435    decision 25.4521    set_bounds 29.2520    solve 72.0665    add 1.4532    
Current (lb-rhs): -0.014931917190551758
261570 domains visited
Time out!!!!!!!!
Result: unknown in 202.1466 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 168, vnnlib ID: 168 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.83010960, -18.46311760, -10.82516861, -14.02094841, -13.35524940,
         -13.57317543, -16.31656647, -16.24346542, -18.31108856, -17.83380508]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [478]; unstable size 478; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 77, 1, 478] with unstable size 76 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 5, 1, 478] with unstable size 4 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 478] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [76]; unstable size 76; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 5, 1, 76] with unstable size 4 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 76] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [4]; unstable size 4; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.44705355, 6.67497396, 2.73657441, 2.01246405, 2.17955494, 4.94374943,
         4.64395428, 6.66448021, 6.17840290]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0732 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 169, vnnlib ID: 169 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.63894939, -9.64244175, -5.12798119, -6.62656116, -4.67414284,
         -6.34183264, -7.44110918, -6.87718344, -7.57325172, -8.86707783]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [540]; unstable size 540; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 185, 1, 540] with unstable size 184 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 540] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 540] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [184]; unstable size 184; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 184] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 184] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.41975927,  2.63730335, -0.24886763,  1.14163029,  0.84137636,
          1.68192863,  1.20813799,  0.96860707,  2.32131624]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.63894939, -9.64244175, -5.12798119, -6.62656116, -4.67414284,
         -6.34183264, -7.44110918, -6.87718344, -7.57325172, -8.86707783]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.07it/s]100%|██████████| 1/1 [00:00<00:00,  9.06it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.51849270, -9.63056850, -5.03511810, -6.76035976, -4.96544600,
          -6.54092455, -7.44870996, -7.21986437, -7.37273216, -8.95295334]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.06967211]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1132 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 11.406265258789062
alpha/beta optimization time: 1.200810194015503
initial alpha-crown bounds: tensor([[ 0.48204637,  2.72113252, -0.22036749,  1.16896904,  0.86237335,
          1.72370470,  1.25071549,  1.03288484,  2.38480663]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.22036749124526978
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.61483883857727
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.61480116844177
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.6147756576538
Verifying property 2 with 1 instances.
##### Instance 169 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.22036749]], device='cuda:0') need to verify.
Model prediction is: tensor([-6.63894939, -9.64244175, -5.12798119, -6.62656116, -4.67414284,
        -6.34183264, -7.44110918, -6.87718344, -7.57325172, -8.86707783],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.22036749]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 540
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 181
Node /15 input 0: size torch.Size([100]) unstable 18
-----------------
# of unstable neurons: 739
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011229515075683594
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22036659717559814
10 lb beta sum: 0.0, worst -0.22036993503570557
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0534    transfer 0.0001    finalize 0.0001    func 0.0539    
Accumulated time: func 0.0539    prepare 0.0002    bound 0.0534    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 10] 
split level 1: [/input-12, 44] 
split level 2: [/input-12, 82] 
split level 3: [/input-12, 11] 
split level 4: [/input-12, 42] 
split level 5: [/input-12, 17] 
split level 6: [/input-8, 1868] 
split level 7: [/input-8, 1066] 
split level 8: [/input-8, 1124] 
split level 9: [/input-8, 556] 
split level 10: [/input-8, 2019] 
split level 11: [/input-8, 1370] 
split level 12: [/input-8, 1403] 
split level 13: [/input-8, 685] 
split level 14: [/input-8, 1362] 
split level 15: [/input-8, 1138] 
split level 16: [/input-8, 2020] 
split level 17: [/input-8, 1874] 
split level 18: [/input-8, 1356] 
split level 19: [/input-8, 574] 
split level 20: [/input-8, 1073] 
split level 21: [/input-8, 787] 
split level 22: [/input-8, 555] 
split level 23: [/input-8, 1514] 
split level 24: [/input-8, 2018] 
split level 25: [/input-8, 89] 
split level 26: [/input-12, 64] 
split level 27: [/input-8, 1333] 
split level 28: [/input-8, 564] 
split level 29: [/input-8, 1361] 
split level 30: [/input-8, 1508] 
split level 31: [/input-8, 1896] 
split level 32: [/input-8, 700] 
split level 33: [/input-8, 571] 
split level 34: [/input, 2615] 
split level 35: [/input, 2682] 
split level 36: [/input-8, 1775] 
split level 37: [/input-8, 699] 
split level 38: [/input, 2691] 
split level 39: [/input-8, 90] 
split level 40: [/input-8, 573] 
split level 41: [/input, 3207] 
split level 42: [/input-8, 1366] 
split level 43: [/input-8, 1889] 
split level 44: [/input-8, 1499] 
split level 45: [/input-8, 808] 
split level 46: [/input-8, 1405] 
split level 47: [/input-8, 892] 
split level 48: [/input-8, 619] 
split level 49: [/input, 2534] 
split level 50: [/input-8, 923] 
split level 51: [/input-8, 1307] 
split level 52: [/input-12, 28] 
split level 53: [/input, 3973] 
split level 54: [/input, 2662] 
split level 55: [/input, 141] 
split level 56: [/input, 2409] 
split level 57: [/input, 2706] 
split level 58: [/input-8, 1974] 
split level 59: [/input-8, 1406] 
split level 60: [/input-8, 1107] 
split level 61: [/input, 2378] 
split level 62: [/input-8, 1393] 
split level 63: [/input-8, 855] 
split level 64: [/input, 2632] 
split level 65: [/input-8, 1272] 
split level 66: [/input-12, 53] 
split level 67: [/input-8, 1148] 
split level 68: [/input, 218] 
split level 69: [/input-8, 2009] 
split level 70: [/input-8, 1942] 
split level 71: [/input, 1628] 
split level 72: [/input-8, 534] 
split level 73: [/input, 2442] 
split level 74: [/input, 2651] 
split level 75: [/input-8, 883] 
split level 76: [/input-8, 1996] 
split level 77: [/input-8, 884] 
split level 78: [/input, 4039] 
split level 79: [/input-8, 1973] 
split level 80: [/input, 422] 
split level 81: [/input, 3301] 
split level 82: [/input-8, 612] 
split level 83: [/input, 3978] 
split level 84: [/input, 2661] 
split level 85: [/input, 3284] 
split level 86: [/input-8, 1957] 
split level 87: [/input-8, 865] 
split level 88: [/input-8, 1969] 
split level 89: [/input-8, 139] 
split level 90: [/input-8, 1922] 
split level 91: [/input, 2737] 
split level 92: [/input, 2441] 
split level 93: [/input-8, 1836] 
split level 94: [/input-8, 1056] 
split level 95: [/input-8, 1047] 
split level 96: [/input, 1558] 
split level 97: [/input-8, 1064] 
split level 98: [/input-8, 1847] 
split level 99: [/input, 3549] 
split level 100: [/input-8, 1039] 
split level 101: [/input, 2547] 
split level 102: [/input, 2680] 
split level 103: [/input, 3550] 
split level 104: [/input, 2546] 
split level 105: [/input, 2459] 
split level 106: [/input, 3981] 
split level 107: [/input, 2362] 
split level 108: [/input, 2455] 
split level 109: [/input, 2396] 
split level 110: [/input, 2550] 
split level 111: [/input-8, 1898] 
split level 112: [/input, 3226] 
split level 113: [/input, 3959] 
split level 114: [/input-8, 1783] 
split level 115: [/input, 3905] 
split level 116: [/input, 3253] 
split level 117: [/input, 2322] 
split level 118: [/input, 3299] 
split level 119: [/input, 2551] 
split level 120: [/input, 2328] 
split level 121: [/input-8, 277] 
split level 122: [/input, 2515] 
split level 123: [/input, 2774] 
split level 124: [/input, 3906] 
split level 125: [/input, 962] 
split level 126: [/input, 2549] 
split level 127: [/input, 3209] 
split level 128: [/input, 2922] 
split level 129: [/input, 2449] 
split level 130: [/input, 1653] 
split level 131: [/input-8, 489] 
split level 132: [/input, 2530] 
split level 133: [/input, 2972] 
split level 134: [/input, 3690] 
split level 135: [/input, 3752] 
split level 136: [/input, 3564] 
split level 137: [/input, 3554] 
split level 138: [/input, 2433] 
split level 139: [/input-12, 52] 
split level 140: [/input, 2273] 
split level 141: [/input, 997] 
split level 142: [/input-8, 1266] 
split level 143: [/input-8, 120] 
split level 144: [/input, 2726] 
split level 145: [/input, 3240] 
split level 146: [/input, 3904] 
split level 147: [/input, 3965] 
split level 148: [/input, 2548] 
split level 149: [/input-8, 122] 
split level 150: [/input, 3902] 
split level 151: [/input, 2986] 
split level 152: [/input, 2382] 
split level 153: [/input, 2686] 
split level 154: [/input, 3901] 
split level 155: [/input, 2674] 
split level 156: [/input-8, 1485] 
split level 157: [/input, 471] 
split level 158: [/input, 2337] 
split level 159: [/input, 2366] 
split level 160: [/input, 1527] 
split level 161: [/input, 1629] 
split level 162: [/input-8, 2021] 
split level 163: [/input, 1502] 
split level 164: [/input, 3546] 
split level 165: [/input, 3197] 
split level 166: [/input-8, 511] 
split level 167: [/input, 3293] 
split level 168: [/input-8, 1275] 
split level 169: [/input, 3204] 
split level 170: [/input, 3762] 
split level 171: [/input, 3166] 
split level 172: [/input, 3544] 
split level 173: [/input, 1614] 
split level 174: [/input, 1250] 
split level 175: [/input, 3561] 
split level 176: [/input-12, 55] 
split level 177: [/input-8, 1796] 
split level 178: [/input, 457] 
split level 179: [/input-8, 1008] 
split level 180: [/input, 1147] 
split level 181: [/input-8, 1975] 
split level 182: [/input, 980] 
split level 183: [/input-8, 792] 
split level 184: [/input, 3188] 
split level 185: [/input, 1882] 
split level 186: [/input, 2451] 
split level 187: [/input, 3297] 
split level 188: [/input, 2990] 
split level 189: [/input, 3545] 
split level 190: [/input, 2540] 
split level 191: [/input, 1526] 
split level 192: [/input-8, 121] 
split level 193: [/input, 3069] 
split level 194: [/input, 3765] 
split level 195: [/input, 1898] 
split level 196: [/input, 1329] 
split level 197: [/input, 2304] 
split level 198: [/input-8, 390] 
split level 199: [/input, 1794] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22031515836715698
10 lb beta sum: 0.0, worst -0.22030580043792725
Time: prepare 0.0118    bound 0.0977    transfer 0.0026    finalize 0.0029    func 0.1177    
Accumulated time: func 0.1716    prepare 0.0218    bound 0.1512    transfer 0.0027    finalize 0.0031    
all_split False
======================Cut inference begins======================
max lb tensor(0.11310482) min lb tensor(-0.22030193)
Number of Verified Splits: 2 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.011314630508422852 
BICCOS Cumulative time: 0.011314630508422852
Preprocessing time: 0.010563135147094727 Inference time: 0.00011706352233886719 Add cuts time: 4.8160552978515625e-05 Cut analysis time: 0.0005862712860107422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21523 (1), -0.21491 (1), -0.21490 (1), -0.21488 (1), -0.21476 (1), -0.21474 (1), -0.21465 (1), -0.21448 (1), -0.21426 (1), -0.21426 (1), -0.21420 (1), -0.21397 (1), -0.21383 (1), -0.21379 (1), -0.21377 (1), -0.21375 (1), -0.21340 (1), -0.21311 (1), -0.21294 (1), -0.21290 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5050    set_bounds 0.0091    solve 0.1178    add 0.0722    
Accumulated time: pickout 0.0004    decision 0.5050    set_bounds 0.0091    solve 0.1178    add 0.0722    
Current (lb-rhs): -0.21523290872573853
50 domains visited
Cumulative time: 0.7747757434844971

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 10] [/input-12, 82] [/input-12, 10] [/input-12, 82] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] 
split level 1: [/input-12, 11] [/input-12, 11] [/input-12, 82] [/input-12, 42] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] 
split level 2: [/input-12, 42] [/input-12, 42] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 42] [/input-12, 11] [/input-12, 11] 
split level 3: [/input-8, 1362] [/input-8, 1073] [/input-8, 2019] [/input-8, 2019] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-8, 2019] [/input-12, 42] [/input-12, 42] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.209506094455719
10 lb beta sum: 0.3847499489784241, worst -0.2073793113231659
Time: prepare 0.0086    bound 0.1188    transfer 0.0008    finalize 0.0028    func 0.1337    
Accumulated time: func 0.3053    prepare 0.0307    bound 0.2700    transfer 0.0035    finalize 0.0058    
all_split False
======================Cut inference begins======================
max lb tensor(0.14024836) min lb tensor(-0.20672274)
Number of Verified Splits: 54 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.016171932220458984 
BICCOS Cumulative time: 0.027486562728881836
Preprocessing time: 0.012485980987548828 Inference time: 0.0020885467529296875 Add cuts time: 0.0013110637664794922 Cut analysis time: 0.00028634071350097656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05872 (2), -0.05825 (2), -0.05807 (2), -0.05794 (2), -0.05794 (2), -0.05794 (2), -0.05791 (2), -0.05784 (2), -0.05762 (2), -0.05754 (2), -0.05705 (2), -0.05704 (2), -0.05675 (2), -0.05653 (2), -0.05623 (2), -0.05606 (2), -0.05602 (2), -0.05587 (2), -0.05563 (2), -0.05547 (2), 
Length of domains: 50
Time: pickout 0.0012    decision 0.0268    set_bounds 0.0125    solve 0.1338    add 0.0834    
Accumulated time: pickout 0.0015    decision 0.5318    set_bounds 0.0216    solve 0.2516    add 0.1556    
Current (lb-rhs): -0.058718711137771606
100 domains visited
Cumulative time: 1.049023151397705

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] 
split level 1: [/input-12, 11] [/input-12, 42] [/input-12, 42] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 42] 
split level 2: [/input-12, 42] [/input-8, 1073] [/input-8, 1073] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-8, 1073] 
split level 3: [/input-8, 1073] [/input-8, 2019] [/input-8, 2019] [/input-8, 1073] [/input-8, 1073] [/input-8, 1073] [/input-8, 1073] [/input-8, 1073] [/input-8, 1073] [/input-8, 2019] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05647432804107666
10 lb beta sum: 0.8361923694610596, worst -0.0470203161239624
Time: prepare 0.0093    bound 0.1192    transfer 0.0040    finalize 0.0026    func 0.1378    
Accumulated time: func 0.4431    prepare 0.0403    bound 0.3892    transfer 0.0075    finalize 0.0085    
all_split False
======================Cut inference begins======================
max lb tensor(0.31511801) min lb tensor(-0.04650573)
Number of Verified Splits: 160 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 13
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.024204015731811523 
BICCOS Cumulative time: 0.05169057846069336
Preprocessing time: 0.012371063232421875 Inference time: 0.007967472076416016 Add cuts time: 0.003390789031982422 Cut analysis time: 0.00047469139099121094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02308 (3), -0.02286 (3), -0.02280 (3), -0.02271 (3), -0.02219 (3), -0.02216 (3), -0.02198 (3), -0.02198 (3), -0.02194 (3), -0.02191 (3), -0.02182 (3), -0.02161 (3), -0.02153 (3), -0.02143 (3), -0.02142 (3), -0.02097 (3), -0.02074 (3), -0.02067 (3), -0.02061 (3), -0.02030 (3), 
Length of domains: 50
Time: pickout 0.0012    decision 0.0205    set_bounds 0.0157    solve 0.1379    add 0.0945    
Accumulated time: pickout 0.0028    decision 0.5523    set_bounds 0.0373    solve 0.3895    add 0.2501    
Current (lb-rhs): -0.02308344841003418
150 domains visited
Cumulative time: 1.3433291912078857

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] 
split level 1: [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] 
split level 2: [/input-8, 1073] [/input-8, 1073] [/input-8, 1073] [/input-8, 1073] [/input-8, 2019] [/input-8, 1073] [/input-8, 1073] [/input-8, 1073] [/input-8, 1073] [/input-8, 1073] 
split level 3: [/input-8, 1362] [/input-8, 2019] [/input-8, 1362] [/input-8, 2019] [/input-8, 2020] [/input-8, 2019] [/input-8, 2019] [/input-8, 2019] [/input-8, 2019] [/input-8, 2019] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03742682933807373
10 lb beta sum: 1.9878747463226318, worst -0.01729881763458252
Time: prepare 0.0092    bound 0.1333    transfer 0.0008    finalize 0.0026    func 0.1486    
Accumulated time: func 0.5917    prepare 0.0498    bound 0.5226    transfer 0.0083    finalize 0.0111    
all_split False
======================Cut inference begins======================
max lb tensor(0.27805471) min lb tensor(-0.01700360)
Number of Verified Splits: 162 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 14
#cuts 4-6: 15
#cuts >= 20: 0
BICCOS time: 0.026461124420166016 
BICCOS Cumulative time: 0.07815170288085938
Preprocessing time: 0.012409687042236328 Inference time: 0.008299112319946289 Add cuts time: 0.004800558090209961 Cut analysis time: 0.0009517669677734375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00518 (4), -0.00517 (4), -0.00517 (4), -0.00515 (4), -0.00497 (4), -0.00470 (4), -0.00466 (4), -0.00447 (4), -0.00442 (4), -0.00413 (4), -0.00405 (4), -0.00400 (4), -0.00393 (4), -0.00387 (4), -0.00383 (4), -0.00376 (4), -0.00361 (4), -0.00361 (4), -0.00357 (4), -0.00357 (4), 
Length of domains: 50
Time: pickout 0.0012    decision 0.0195    set_bounds 0.0157    solve 0.1488    add 0.2373    
Accumulated time: pickout 0.0040    decision 0.5719    set_bounds 0.0530    solve 0.5383    add 0.4874    
Current (lb-rhs): -0.005176842212677002
200 domains visited
Cumulative time: 1.7926092147827148

Shallow-BaB round 5
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] 
split level 1: [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] 
split level 2: [/input-8, 2019] [/input-8, 1073] [/input-8, 2019] [/input-8, 1073] [/input-8, 1073] [/input-8, 2019] [/input-8, 2019] [/input-8, 2019] [/input-8, 1073] [/input-8, 2019] 
split level 3: [/input-8, 1356] [/input-8, 1362] [/input-8, 1362] [/input-8, 1362] [/input-8, 2019] [/input-8, 1362] [/input-8, 1362] [/input-8, 1362] [/input-8, 1362] [/input-8, 1362] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.025480270385742188
10 lb beta sum: 2.296804428100586, worst -0.017949163913726807
Time: prepare 0.0095    bound 0.1326    transfer 0.0012    finalize 0.0026    func 0.1485    
Accumulated time: func 0.7403    prepare 0.0595    bound 0.6551    transfer 0.0095    finalize 0.0137    
all_split False
======================Cut inference begins======================
max lb tensor(0.38955557) min lb tensor(-0.00196755)
Number of Verified Splits: 381 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.04878568649291992 
BICCOS Cumulative time: 0.1269373893737793
Preprocessing time: 0.012514352798461914 Inference time: 0.019074440002441406 Add cuts time: 0.015415430068969727 Cut analysis time: 0.001781463623046875
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0013    decision 0.0199    set_bounds 0.0162    solve 0.1487    add 0.0326    
Accumulated time: pickout 0.0053    decision 0.5917    set_bounds 0.0692    solve 0.6869    add 0.5200    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
200 domains visited
No domains left, MTS early stop!
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([10, 82]), tensor([-1., -1.]), tensor([0, 0]), tensor([1.61426961e-09, 2.26021990e-01]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([10, 82]), tensor([-1.,  1.]), tensor([0, 0]), tensor([1.61426961e-09, 1.15240682e-02]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([1073, 2019], [-1.0, -1.0], [0, 0], [-5.349913396308882e-21, 0.014208005741238594], [2, 3]), '/input-12': (tensor([10, 11, 82]), tensor([ 1., -1., -1.]), tensor([0, 0, 0]), tensor([-5.34985524e-21,  2.24910248e-02,  3.28066200e-02]), tensor([0, 1, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([1073, 2019], [-1.0, -1.0], [0, 0], [-5.349913396308882e-21, 0.014208005741238594], [2, 3]), '/input-12': (tensor([10, 11, 82]), tensor([ 1., -1.,  1.]), tensor([0, 0, 0]), tensor([-5.34985524e-21,  2.24910248e-02,  6.10600552e-03]), tensor([0, 1, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': (tensor([1073, 2019]), tensor([-1.,  1.]), tensor([0, 0]), tensor([-5.34991340e-21,  1.07039679e-02]), tensor([2, 3])), '/input-12': ([10, 11], [1.0, -1.0], [0, 0], [-5.349855235172062e-21, 0.022491024807095528], [0, 1])}
Restore {'/input': ([], [], [], [], []), '/input-8': ([1073], [1.0], [0], [6.726232628759122e-44], [2]), '/input-12': (tensor([10, 11, 82]), tensor([ 1., -1., -1.]), tensor([0, 0, 0]), tensor([-5.34985524e-21,  2.24910248e-02,  3.78216356e-02]), tensor([0, 1, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([1073], [1.0], [0], [6.726232628759122e-44], [2]), '/input-12': (tensor([10, 11, 82]), tensor([ 1., -1.,  1.]), tensor([0, 0, 0]), tensor([-5.34985524e-21,  2.24910248e-02,  5.67002734e-03]), tensor([0, 1, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([10, 11, 82]), tensor([ 1.,  1., -1.]), tensor([0, 0, 0]), tensor([-5.34985524e-21,  4.75860089e-02,  5.67660183e-02]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([10, 11, 82]), tensor([1., 1., 1.]), tensor([0, 0, 0]), tensor([-5.34985524e-21,  4.75860089e-02,  1.72779728e-02]), tensor([0, 1, 2]))}
Shallow branching resets to n domains:  9
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11081099510192871
10 lb beta sum: 1.3819385766983032, worst -0.10164058208465576
Time: prepare 0.0006    bound 0.1419    transfer 0.0002    finalize 0.0002    func 0.1429    
Accumulated time: func 0.8832    prepare 0.0601    bound 0.7970    transfer 0.0097    finalize 0.0139    
After pruning, left:  2

Back to Regular BaB

BaB round 1
batch: 2
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 42] [/input-12, 42] 
split level 1: [/input-12, 11] [/input-8, 2019] 
split level 2: [/input-8, 2019] [/input-8, 1889] 
split level 3: [/input-8, 1356] [/input-8, 1362] 
split level 4: [/input-8, 1362] [/input-8, 555] 
split level 5: [/input-8, 574] [/input-8, 574] 
split level 6: [/input-8, 573] [/input-8, 1896] 
cut re-enabled after branching node selection
0 lb beta sum: 2.0406832695007324, worst -0.059198200702667236
10 lb beta sum: 2.065885066986084, worst -0.05775570869445801
Time: prepare 0.0118    bound 0.1452    transfer 0.0006    finalize 0.0016    func 0.1610    
Accumulated time: func 1.0442    prepare 0.0723    bound 0.9423    transfer 0.0102    finalize 0.0155    
all_split False
======================Cut inference begins======================
max lb tensor(0.28182423) min lb tensor(-0.05735201)
Number of Verified Splits: 192 of 256
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.0004200935363769531 
BICCOS Cumulative time: 0.12735748291015625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05735 (7), -0.05705 (7), -0.05676 (7), -0.05646 (7), -0.05641 (7), -0.05610 (7), -0.05515 (7), -0.05507 (7), -0.05468 (7), -0.05456 (7), -0.05448 (7), -0.05438 (7), -0.05420 (7), -0.05412 (7), -0.05248 (7), -0.05240 (7), -0.05147 (7), -0.05143 (7), -0.05121 (7), -0.05105 (7), 
Length of domains: 64
Time: pickout 0.0006    decision 0.0200    set_bounds 0.0272    solve 0.1610    add 0.0014    
Accumulated time: pickout 0.0059    decision 0.6117    set_bounds 0.0964    solve 0.8480    add 0.5214    
Current (lb-rhs): -0.05735200643539429
264 domains visited
Cumulative time: 2.4368720054626465

BaB round 2
batch: 64
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1124] [/input-8, 1499] [/input-8, 1124] [/input-8, 1499] [/input-8, 1124] [/input-8, 1499] [/input-8, 1124] [/input-8, 1499] [/input-8, 1124] [/input-8, 1499] 
split level 1: [/input-8, 1499] [/input-8, 89] [/input-8, 1499] [/input-8, 89] [/input-8, 1499] [/input-8, 89] [/input-8, 1499] [/input-8, 89] [/input-8, 1499] [/input-8, 89] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8335228562355042, worst -0.05367445945739746
10 lb beta sum: 0.8335228562355042, worst -0.05315655469894409
Time: prepare 0.0116    bound 0.1438    transfer 0.0005    finalize 0.0013    func 0.1590    
Accumulated time: func 1.2031    prepare 0.0841    bound 1.0861    transfer 0.0108    finalize 0.0168    
all_split False
======================Cut inference begins======================
max lb tensor(-0.00966096) min lb tensor(-0.05286717)
Number of Verified Splits: 0 of 256
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.000400543212890625 
BICCOS Cumulative time: 0.12775802612304688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05287 (9), -0.05261 (9), -0.05237 (9), -0.05212 (9), -0.05212 (9), -0.05187 (9), -0.05074 (9), -0.05063 (9), -0.05029 (9), -0.05025 (9), -0.05014 (9), -0.05004 (9), -0.05000 (9), -0.04989 (9), -0.04876 (9), -0.04857 (9), -0.04826 (9), -0.04817 (9), -0.04807 (9), -0.04806 (9), 
Length of domains: 256
Time: pickout 0.0020    decision 0.0145    set_bounds 0.0121    solve 0.1591    add 0.0032    
Accumulated time: pickout 0.0078    decision 0.6262    set_bounds 0.1084    solve 1.0071    add 0.5245    
Current (lb-rhs): -0.05286717414855957
520 domains visited
Cumulative time: 2.6285414695739746

BaB round 3
batch: 256
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 2020] [/input-8, 1868] [/input-8, 2020] [/input-8, 1868] [/input-8, 2020] [/input-8, 1868] [/input-8, 2020] [/input-8, 1868] [/input-8, 2020] [/input-8, 1868] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8335228562355042, worst -0.050182998180389404
10 lb beta sum: 0.833318829536438, worst -0.04986447095870972
Time: prepare 0.0229    bound 0.1544    transfer 0.0019    finalize 0.0023    func 0.1859    
Accumulated time: func 1.3890    prepare 0.1072    bound 1.2405    transfer 0.0127    finalize 0.0191    
all_split False
======================Cut inference begins======================
max lb tensor(0.00158937) min lb tensor(-0.04970801)
Number of Verified Splits: 4 of 512
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.00046324729919433594 
BICCOS Cumulative time: 0.1282212734222412
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04971 (10), -0.04948 (10), -0.04936 (10), -0.04913 (10), -0.04912 (10), -0.04889 (10), -0.04761 (10), -0.04749 (10), -0.04726 (10), -0.04723 (10), -0.04713 (10), -0.04702 (10), -0.04699 (10), -0.04690 (10), -0.04591 (10), -0.04576 (10), -0.04556 (10), -0.04541 (10), -0.04532 (10), -0.04518 (10), 
Length of domains: 508
Time: pickout 0.0038    decision 0.0236    set_bounds 0.0218    solve 0.1861    add 0.0034    
Accumulated time: pickout 0.0116    decision 0.6499    set_bounds 0.1302    solve 1.1932    add 0.5280    
Current (lb-rhs): -0.049708008766174316
1028 domains visited
Cumulative time: 2.8686184883117676

BaB round 4
batch: 508
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 44] [/input-8, 2020] [/input-12, 44] [/input-8, 2020] [/input-12, 44] [/input-8, 2020] [/input-12, 44] [/input-8, 2020] [/input-12, 44] [/input-8, 2020] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8338771462440491, worst -0.04970848560333252
10 lb beta sum: 0.8338726162910461, worst -0.04961133003234863
Time: prepare 0.0463    bound 0.1600    transfer 0.0041    finalize 0.0051    func 0.2232    
Accumulated time: func 1.6122    prepare 0.1538    bound 1.4005    transfer 0.0168    finalize 0.0243    
all_split False
======================Cut inference begins======================
max lb tensor(0.07032043) min lb tensor(-0.04954493)
Number of Verified Splits: 334 of 1016
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.00046515464782714844 
BICCOS Cumulative time: 0.12868642807006836
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04954 (11), -0.04931 (11), -0.04928 (11), -0.04904 (11), -0.04903 (11), -0.04880 (11), -0.04745 (11), -0.04732 (11), -0.04718 (11), -0.04711 (11), -0.04705 (11), -0.04694 (11), -0.04688 (11), -0.04681 (11), -0.04572 (11), -0.04559 (11), -0.04545 (11), -0.04532 (11), -0.04521 (11), -0.04509 (11), 
Length of domains: 682
Time: pickout 0.0085    decision 0.0393    set_bounds 0.0427    solve 0.2235    add 0.0034    
Accumulated time: pickout 0.0201    decision 0.6891    set_bounds 0.1729    solve 1.4166    add 0.5314    
Current (lb-rhs): -0.04954493045806885
1710 domains visited
Cumulative time: 3.1889846324920654

BaB round 5
batch: 682
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1868] [/input-8, 571] [/input-8, 1868] [/input-8, 571] [/input-8, 1868] [/input-8, 571] [/input-8, 1868] [/input-8, 571] [/input-8, 1868] [/input-8, 571] 
cut re-enabled after branching node selection
0 lb beta sum: 0.864035427570343, worst -0.0485609769821167
10 lb beta sum: 0.864035427570343, worst -0.04845273494720459
Time: prepare 0.0615    bound 0.1762    transfer 0.0100    finalize 0.0078    func 0.2643    
Accumulated time: func 1.8765    prepare 0.2155    bound 1.5767    transfer 0.0268    finalize 0.0321    
all_split False
======================Cut inference begins======================
max lb tensor(0.06690162) min lb tensor(-0.04838461)
Number of Verified Splits: 434 of 1364
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.0005524158477783203 
BICCOS Cumulative time: 0.12923884391784668
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04838 (12), -0.04820 (12), -0.04813 (12), -0.04796 (12), -0.04795 (12), -0.04771 (12), -0.04647 (12), -0.04635 (12), -0.04629 (12), -0.04617 (12), -0.04605 (12), -0.04603 (12), -0.04593 (12), -0.04578 (12), -0.04456 (12), -0.04442 (12), -0.04437 (12), -0.04423 (12), -0.04413 (12), -0.04412 (12), 
Length of domains: 930
Time: pickout 0.0096    decision 0.0459    set_bounds 0.0575    solve 0.2647    add 0.0044    
Accumulated time: pickout 0.0297    decision 0.7350    set_bounds 0.2304    solve 1.6813    add 0.5358    
Current (lb-rhs): -0.04838460683822632
2640 domains visited
Cumulative time: 3.5747463703155518

BaB round 6
batch: 930
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 89] [/input-12, 44] [/input-8, 89] [/input-12, 44] [/input-8, 89] [/input-12, 44] [/input-8, 89] [/input-12, 44] [/input-8, 89] [/input-12, 44] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8574833273887634, worst -0.045531272888183594
10 lb beta sum: 0.8574833273887634, worst -0.04541778564453125
Time: prepare 0.0838    bound 0.2115    transfer 0.0088    finalize 0.0098    func 0.3268    
Accumulated time: func 2.2033    prepare 0.2996    bound 1.7882    transfer 0.0356    finalize 0.0418    
all_split False
======================Cut inference begins======================
max lb tensor(0.06723313) min lb tensor(-0.04537416)
Number of Verified Splits: 579 of 1860
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.00048804283142089844 
BICCOS Cumulative time: 0.12972688674926758
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04537 (13), -0.04522 (13), -0.04499 (13), -0.04479 (13), -0.04464 (13), -0.04440 (13), -0.04335 (13), -0.04320 (13), -0.04314 (13), -0.04305 (13), -0.04298 (13), -0.04296 (13), -0.04274 (13), -0.04248 (13), -0.04247 (13), -0.04239 (13), -0.04233 (13), -0.04224 (13), -0.04209 (13), -0.04200 (13), 
Length of domains: 1281
Time: pickout 0.0162    decision 0.0623    set_bounds 0.0767    solve 0.3272    add 0.0047    
Accumulated time: pickout 0.0459    decision 0.7973    set_bounds 0.3071    solve 2.0085    add 0.5404    
Current (lb-rhs): -0.045374155044555664
3921 domains visited
Cumulative time: 4.067155122756958

BaB round 7
batch: 1281
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 555] [/input-8, 555] [/input-8, 555] [/input-8, 555] [/input-8, 555] [/input-8, 555] [/input-8, 555] [/input-8, 555] [/input-8, 555] [/input-8, 555] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8408029675483704, worst -0.04212522506713867
10 lb beta sum: 0.8408029675483704, worst -0.04208064079284668
Time: prepare 0.1183    bound 0.2685    transfer 0.0133    finalize 0.0148    func 0.4331    
Accumulated time: func 2.6364    prepare 0.4182    bound 2.0568    transfer 0.0489    finalize 0.0567    
all_split False
======================Cut inference begins======================
max lb tensor(0.06800705) min lb tensor(-0.04204541)
Number of Verified Splits: 466 of 2562
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.0005745887756347656 
BICCOS Cumulative time: 0.13030147552490234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04205 (14), -0.04189 (14), -0.04165 (14), -0.04145 (14), -0.04130 (14), -0.04105 (14), -0.04002 (14), -0.03987 (14), -0.03979 (14), -0.03978 (14), -0.03972 (14), -0.03964 (14), -0.03962 (14), -0.03962 (14), -0.03942 (14), -0.03940 (14), -0.03922 (14), -0.03918 (14), -0.03915 (14), -0.03912 (14), 
Length of domains: 2096
Time: pickout 0.0177    decision 0.2448    set_bounds 0.1071    solve 0.4342    add 0.0237    
Accumulated time: pickout 0.0636    decision 1.0422    set_bounds 0.4142    solve 2.4427    add 0.5641    
Current (lb-rhs): -0.042045414447784424
6017 domains visited
Cumulative time: 4.90074610710144

BaB round 8
batch: 2096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 571] [/input-8, 564] [/input-8, 571] [/input-8, 564] [/input-8, 571] [/input-8, 564] [/input-8, 571] [/input-8, 564] [/input-8, 571] [/input-8, 564] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8432228565216064, worst -0.039512038230895996
10 lb beta sum: 0.8432228565216064, worst -0.03943979740142822
Time: prepare 0.1954    bound 0.3911    transfer 0.0429    finalize 0.1875    func 0.8439    
Accumulated time: func 3.4803    prepare 0.6138    bound 2.4479    transfer 0.0917    finalize 0.2441    
all_split False
======================Cut inference begins======================
max lb tensor(0.06740087) min lb tensor(-0.03939474)
Number of Verified Splits: 644 of 4192
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.0006725788116455078 
BICCOS Cumulative time: 0.13097405433654785
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03939 (15), -0.03924 (15), -0.03904 (15), -0.03882 (15), -0.03867 (15), -0.03846 (15), -0.03737 (15), -0.03722 (15), -0.03717 (15), -0.03715 (15), -0.03710 (15), -0.03703 (15), -0.03701 (15), -0.03701 (15), -0.03699 (15), -0.03688 (15), -0.03683 (15), -0.03680 (15), -0.03670 (15), -0.03664 (15), 
Length of domains: 3548
Time: pickout 0.0308    decision 0.1252    set_bounds 0.1818    solve 0.8456    add 0.0297    
Accumulated time: pickout 0.0944    decision 1.1674    set_bounds 0.5960    solve 3.2883    add 0.5939    
Current (lb-rhs): -0.03939473628997803
9565 domains visited
Cumulative time: 6.122289180755615

BaB round 9
batch: 3548
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 90] [/input-8, 90] [/input-8, 564] [/input-8, 90] [/input-8, 90] [/input-8, 90] [/input-8, 564] [/input-8, 90] [/input-8, 90] [/input-8, 90] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8524649143218994, worst -0.036698341369628906
10 lb beta sum: 0.8524649143218994, worst -0.03664565086364746
Time: prepare 0.3325    bound 0.6098    transfer 0.0340    finalize 0.1986    func 1.2219    
Accumulated time: func 4.7021    prepare 0.9467    bound 3.0577    transfer 0.1257    finalize 0.4427    
all_split False
======================Cut inference begins======================
max lb tensor(0.00491837) min lb tensor(-0.03661907)
Number of Verified Splits: 604 of 7096
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.0006284713745117188 
BICCOS Cumulative time: 0.13160252571105957
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03662 (16), -0.03651 (16), -0.03622 (16), -0.03607 (16), -0.03596 (16), -0.03568 (16), -0.03459 (16), -0.03448 (16), -0.03446 (16), -0.03442 (16), -0.03434 (16), -0.03431 (16), -0.03426 (16), -0.03423 (16), -0.03422 (16), -0.03420 (16), -0.03412 (16), -0.03410 (16), -0.03405 (16), -0.03402 (16), 
Length of domains: 6492
Time: pickout 0.0617    decision 0.2083    set_bounds 0.2994    solve 1.2232    add 0.0332    
Accumulated time: pickout 0.1561    decision 1.3757    set_bounds 0.8954    solve 4.5115    add 0.6271    
Current (lb-rhs): -0.03661906719207764
16057 domains visited
Cumulative time: 7.960341215133667

BaB round 10
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 64] [/input-8, 1138] [/input-12, 64] [/input-8, 1138] [/input-12, 64] [/input-8, 1138] [/input-12, 64] [/input-8, 1138] [/input-12, 64] [/input-8, 1138] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8649942874908447, worst -0.03772926330566406
10 lb beta sum: 0.8649531602859497, worst -0.03124213218688965
Time: prepare 0.3904    bound 0.6878    transfer 0.0273    finalize 0.0459    func 1.2039    
Accumulated time: func 5.9061    prepare 1.3374    bound 3.7455    transfer 0.1530    finalize 0.4886    
all_split False
======================Cut inference begins======================
max lb tensor(0.01434436) min lb tensor(-0.03122193)
Number of Verified Splits: 626 of 8192
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.0005979537963867188 
BICCOS Cumulative time: 0.1322004795074463
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03662 (16), -0.03651 (16), -0.03622 (16), -0.03607 (16), -0.03596 (16), -0.03568 (16), -0.03459 (16), -0.03448 (16), -0.03442 (16), -0.03431 (16), -0.03426 (16), -0.03423 (16), -0.03420 (16), -0.03412 (16), -0.03402 (16), -0.03390 (16), -0.03383 (16), -0.03378 (16), -0.03377 (16), -0.03372 (16), 
Length of domains: 9962
Time: pickout 0.0603    decision 0.2304    set_bounds 0.5254    solve 1.2057    add 0.0525    
Accumulated time: pickout 0.2163    decision 1.6061    set_bounds 1.4207    solve 5.7172    add 0.6796    
Current (lb-rhs): -0.03661906719207764
23623 domains visited
current_vram/total_varm: 10.6GB/99.9GB, batch_size increase to 8192
Cumulative time: 10.049421548843384

BaB round 11
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1138] [/input-12, 64] [/input-8, 1405] [/input-12, 64] [/input-8, 1138] [/input-12, 64] [/input-8, 1138] [/input-12, 64] [/input-8, 1405] [/input-12, 64] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8667395114898682, worst -0.03930532932281494
10 lb beta sum: 0.8667252063751221, worst -0.03347063064575195
Time: prepare 0.7676    bound 1.3121    transfer 0.1149    finalize 0.0882    func 2.3878    
Accumulated time: func 8.2939    prepare 2.1053    bound 5.0575    transfer 0.2679    finalize 0.5768    
all_split False
======================Cut inference begins======================
max lb tensor(0.00988595) min lb tensor(-0.03346217)
Number of Verified Splits: 3193 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.0009577274322509766 
BICCOS Cumulative time: 0.13315820693969727
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03346 (17), -0.03335 (17), -0.03313 (17), -0.03291 (17), -0.03280 (17), -0.03258 (17), -0.03142 (17), -0.03131 (17), -0.03124 (17), -0.03120 (17), -0.03113 (17), -0.03113 (17), -0.03109 (17), -0.03109 (17), -0.03109 (17), -0.03099 (17), -0.03091 (17), -0.03091 (17), -0.03073 (17), -0.03066 (17), 
Length of domains: 14961
Time: pickout 0.1211    decision 0.4620    set_bounds 1.1058    solve 2.3910    add 0.0893    
Accumulated time: pickout 0.3374    decision 2.0681    set_bounds 2.5265    solve 8.1082    add 0.7689    
Current (lb-rhs): -0.03346216678619385
36814 domains visited
current_vram/total_varm: 21.2GB/99.9GB, batch_size increase to 16384
Cumulative time: 14.255232334136963

BaB round 12
batch: 14961
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1508] [/input-8, 90] [/input-8, 1405] [/input-8, 1514] [/input-8, 1405] [/input-8, 90] [/input-8, 1405] [/input-8, 1514] [/input-8, 1138] [/input-8, 1514] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8603860139846802, worst -0.03222823143005371
10 lb beta sum: 0.8603839874267578, worst -0.03133547306060791
Time: prepare 1.3966    bound 2.3259    transfer 0.2224    finalize 0.1778    func 4.3182    
Accumulated time: func 12.6120    prepare 3.5023    bound 7.3835    transfer 0.4903    finalize 0.7546    
all_split False
======================Cut inference begins======================
max lb tensor(0.01439340) min lb tensor(-0.03132689)
Number of Verified Splits: 8928 of 29922
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.0010190010070800781 
BICCOS Cumulative time: 0.13417720794677734
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03133 (18), -0.03121 (18), -0.03100 (18), -0.03073 (18), -0.03062 (18), -0.03040 (18), -0.02929 (18), -0.02917 (18), -0.02906 (18), -0.02906 (18), -0.02900 (18), -0.02897 (18), -0.02896 (18), -0.02895 (18), -0.02895 (18), -0.02886 (18), -0.02878 (18), -0.02873 (18), -0.02860 (18), -0.02856 (18), 
Length of domains: 20994
Time: pickout 0.2814    decision 1.1344    set_bounds 1.8589    solve 4.3247    add 0.0825    
Accumulated time: pickout 0.6189    decision 3.2026    set_bounds 4.3854    solve 12.4329    add 0.8514    
Current (lb-rhs): -0.031326889991760254
57808 domains visited
Cumulative time: 22.033826112747192

BaB round 13
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1138] [/input-8, 1138] [/input-8, 685] [/input-8, 1138] [/input-8, 685] [/input-8, 1138] [/input-8, 685] [/input-8, 1138] [/input-8, 685] [/input-8, 1138] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8483813405036926, worst -0.029322683811187744
10 lb beta sum: 0.8483813405036926, worst -0.029320240020751953
Time: prepare 1.5579    bound 2.5378    transfer 0.2462    finalize 0.1808    func 4.7379    
Accumulated time: func 17.3499    prepare 5.0606    bound 9.9212    transfer 0.7365    finalize 0.9354    
all_split False
======================Cut inference begins======================
max lb tensor(0.01253758) min lb tensor(-0.02931154)
Number of Verified Splits: 11995 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.0009367465972900391 
BICCOS Cumulative time: 0.13511395454406738
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02931 (19), -0.02920 (19), -0.02899 (19), -0.02870 (19), -0.02859 (19), -0.02838 (19), -0.02814 (18), -0.02803 (18), -0.02781 (18), -0.02753 (18), -0.02742 (18), -0.02727 (19), -0.02720 (18), -0.02716 (19), -0.02703 (19), -0.02700 (19), -0.02699 (19), -0.02695 (19), -0.02692 (19), -0.02689 (19), 
Length of domains: 25383
Time: pickout 0.2559    decision 1.7509    set_bounds 2.1534    solve 4.7455    add 0.0898    
Accumulated time: pickout 0.8748    decision 4.9535    set_bounds 6.5388    solve 17.1784    add 0.9412    
Current (lb-rhs): -0.029311537742614746
78581 domains visited
Cumulative time: 31.164910554885864

BaB round 14
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1514] [/input-8, 90] [/input-8, 1514] [/input-8, 1514] [/input-8, 90] [/input-8, 685] [/input-12, 64] [/input-8, 1138] [/input-8, 1138] [/input-8, 1138] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8244618773460388, worst -0.026137590408325195
10 lb beta sum: 0.8244618773460388, worst -0.0261344313621521
Time: prepare 1.5628    bound 2.5374    transfer 0.2432    finalize 0.6202    func 5.1809    
Accumulated time: func 22.5308    prepare 6.6238    bound 12.4587    transfer 0.9797    finalize 1.5556    
all_split False
======================Cut inference begins======================
max lb tensor(0.01417542) min lb tensor(-0.02609485)
Number of Verified Splits: 12774 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.0008943080902099609 
BICCOS Cumulative time: 0.13600826263427734
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02931 (19), -0.02920 (19), -0.02899 (19), -0.02870 (19), -0.02859 (19), -0.02838 (19), -0.02727 (19), -0.02716 (19), -0.02703 (19), -0.02699 (19), -0.02695 (19), -0.02692 (19), -0.02671 (19), -0.02667 (19), -0.02656 (19), -0.02652 (19), -0.02645 (19), -0.02641 (19), -0.02638 (19), -0.02633 (19), 
Length of domains: 28993
Time: pickout 0.2691    decision 1.7821    set_bounds 1.8980    solve 5.1868    add 0.0789    
Accumulated time: pickout 1.1439    decision 6.7356    set_bounds 8.4368    solve 22.3652    add 1.0201    
Current (lb-rhs): -0.029311537742614746
98575 domains visited
Cumulative time: 40.523075103759766

BaB round 15
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1514] [/input-8, 685] [/input-8, 1514] [/input-8, 685] [/input-8, 1514] [/input-8, 1514] [/input-8, 1514] [/input-8, 1514] [/input-8, 700] [/input-8, 1508] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8129693865776062, worst -0.027125954627990723
10 lb beta sum: 0.8129693865776062, worst -0.02712559700012207
Time: prepare 1.5653    bound 2.5356    transfer 0.2461    finalize 0.2095    func 4.7753    
Accumulated time: func 27.3061    prepare 8.1895    bound 14.9943    transfer 1.2259    finalize 1.7651    
all_split False
======================Cut inference begins======================
max lb tensor(0.01409218) min lb tensor(-0.02712297)
Number of Verified Splits: 12732 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.0010459423065185547 
BICCOS Cumulative time: 0.1370542049407959
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02712 (20), -0.02701 (20), -0.02680 (20), -0.02640 (20), -0.02629 (20), -0.02609 (19), -0.02608 (20), -0.02598 (19), -0.02577 (19), -0.02562 (19), -0.02551 (19), -0.02529 (19), -0.02508 (20), -0.02497 (20), -0.02496 (20), -0.02485 (20), -0.02480 (20), -0.02476 (20), -0.02473 (20), -0.02468 (20), 
Length of domains: 32645
Time: pickout 0.2666    decision 1.6637    set_bounds 2.3776    solve 4.7843    add 0.0884    
Accumulated time: pickout 1.4105    decision 8.3993    set_bounds 10.8144    solve 27.1495    add 1.1085    
Current (lb-rhs): -0.027122974395751953
118611 domains visited
Cumulative time: 49.85360646247864

BaB round 16
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1073] [/input-8, 1073] [/input-8, 1073] [/input-8, 1073] [/input-8, 1073] [/input-8, 1073] [/input-8, 700] [/input-8, 700] [/input-8, 1073] [/input-8, 700] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8069286346435547, worst -0.02440202236175537
10 lb beta sum: 0.8069286346435547, worst -0.02440488338470459
Time: prepare 1.5646    bound 2.5378    transfer 0.2436    finalize 0.7143    func 5.2751    
Accumulated time: func 32.5812    prepare 9.7546    bound 17.5321    transfer 1.4695    finalize 2.4793    
all_split False
======================Cut inference begins======================
max lb tensor(0.01395151) min lb tensor(-0.02440202)
Number of Verified Splits: 14346 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.001096963882446289 
BICCOS Cumulative time: 0.1381511688232422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02440 (21), -0.02429 (21), -0.02408 (21), -0.02405 (20), -0.02395 (20), -0.02394 (20), -0.02388 (20), -0.02384 (20), -0.02378 (21), -0.02376 (20), -0.02373 (20), -0.02368 (21), -0.02367 (21), -0.02363 (20), -0.02357 (21), -0.02356 (20), -0.02346 (21), -0.02336 (21), -0.02331 (20), -0.02320 (20), 
Length of domains: 34683
Time: pickout 0.2776    decision 2.1139    set_bounds 2.0728    solve 5.2824    add 0.1177    
Accumulated time: pickout 1.6881    decision 10.5132    set_bounds 12.8872    solve 32.4319    add 1.2262    
Current (lb-rhs): -0.02440202236175537
137033 domains visited
Cumulative time: 59.87309384346008

BaB round 17
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1073] [/input-8, 1073] [/input-8, 1073] [/input-8, 1073] [/input-8, 1073] [/input-8, 1073] [/input-8, 1073] [/input-8, 1073] [/input-8, 1073] [/input-8, 1073] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7889323234558105, worst -0.02183973789215088
10 lb beta sum: 0.7889323234558105, worst -0.021867096424102783
Time: prepare 1.5610    bound 2.5368    transfer 0.2415    finalize 0.2122    func 4.7656    
Accumulated time: func 37.3468    prepare 11.3161    bound 20.0689    transfer 1.7110    finalize 2.6915    
all_split False
======================Cut inference begins======================
max lb tensor(0.01377694) min lb tensor(-0.02182341)
Number of Verified Splits: 15671 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.0010802745819091797 
BICCOS Cumulative time: 0.13923144340515137
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02440 (21), -0.02429 (21), -0.02408 (21), -0.02388 (20), -0.02378 (21), -0.02376 (20), -0.02368 (21), -0.02367 (21), -0.02357 (21), -0.02356 (20), -0.02346 (21), -0.02336 (21), -0.02331 (20), -0.02320 (20), -0.02306 (21), -0.02298 (20), -0.02295 (21), -0.02274 (21), -0.02236 (21), -0.02225 (21), 
Length of domains: 35396
Time: pickout 0.2738    decision 1.6575    set_bounds 2.6300    solve 4.7757    add 0.0819    
Accumulated time: pickout 1.9619    decision 12.1707    set_bounds 15.5172    solve 37.2076    add 1.3081    
Current (lb-rhs): -0.02440202236175537
154130 domains visited
Cumulative time: 69.46759080886841

BaB round 18
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1124] [/input-8, 808] [/input-8, 1124] [/input-8, 685] [/input-8, 808] [/input-8, 808] [/input-8, 808] [/input-8, 1124] [/input-8, 808] [/input-8, 1124] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7836519479751587, worst -0.022247672080993652
10 lb beta sum: 0.7836519479751587, worst -0.02222275733947754
Time: prepare 1.5611    bound 2.5355    transfer 0.2417    finalize 0.2137    func 4.7721    
Accumulated time: func 42.1189    prepare 12.8777    bound 22.6044    transfer 1.9527    finalize 2.9052    
all_split False
======================Cut inference begins======================
max lb tensor(0.01305820) min lb tensor(-0.02221668)
Number of Verified Splits: 16421 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.0011081695556640625 
BICCOS Cumulative time: 0.14033961296081543
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02440 (21), -0.02429 (21), -0.02408 (21), -0.02368 (21), -0.02357 (21), -0.02336 (21), -0.02236 (21), -0.02225 (21), -0.02222 (22), -0.02211 (22), -0.02208 (21), -0.02204 (21), -0.02201 (21), -0.02191 (22), -0.02190 (21), -0.02182 (21), -0.02173 (21), -0.02171 (21), -0.02169 (21), -0.02162 (21), 
Length of domains: 35359
Time: pickout 0.2820    decision 1.9655    set_bounds 2.1521    solve 5.3749    add 0.0745    
Accumulated time: pickout 2.2439    decision 14.1362    set_bounds 17.6693    solve 42.5825    add 1.3826    
Current (lb-rhs): -0.02440202236175537
170477 domains visited
Cumulative time: 79.49587321281433

BaB round 19
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1508] [/input-8, 1514] [/input-8, 808] [/input-8, 1514] [/input-8, 808] [/input-8, 808] [/input-8, 808] [/input-8, 1514] [/input-8, 1508] [/input-8, 1514] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7791218161582947, worst -0.022865891456604004
10 lb beta sum: 0.7791218161582947, worst -0.0228462815284729
Time: prepare 1.5784    bound 2.5357    transfer 0.2427    finalize 0.2237    func 5.4023    
Accumulated time: func 47.5211    prepare 14.4565    bound 25.1400    transfer 2.1954    finalize 3.1289    
all_split False
======================Cut inference begins======================
max lb tensor(0.01262659) min lb tensor(-0.02283895)
Number of Verified Splits: 15981 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.0011415481567382812 
BICCOS Cumulative time: 0.1414811611175537
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02284 (22), -0.02273 (22), -0.02253 (22), -0.02222 (22), -0.02212 (22), -0.02211 (22), -0.02200 (22), -0.02191 (22), -0.02181 (22), -0.02150 (22), -0.02138 (22), -0.02119 (22), -0.02113 (21), -0.02109 (21), -0.02102 (21), -0.02098 (21), -0.02081 (21), -0.02080 (22), -0.02077 (21), -0.02069 (22), 
Length of domains: 35762
Time: pickout 0.2868    decision 1.6560    set_bounds 2.1569    solve 5.4105    add 0.0806    
Accumulated time: pickout 2.5307    decision 15.7922    set_bounds 19.8262    solve 47.9931    add 1.4632    
Current (lb-rhs): -0.022838950157165527
187264 domains visited
Cumulative time: 89.26500010490417

BaB round 20
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 685] [/input-8, 685] [/input-8, 685] [/input-8, 685] [/input-8, 685] [/input-8, 685] [/input-8, 685] [/input-8, 685] [/input-8, 685] [/input-8, 685] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7645339965820312, worst -0.020009756088256836
10 lb beta sum: 0.7645339965820312, worst -0.01997464895248413
Time: prepare 1.6031    bound 2.5371    transfer 0.2415    finalize 0.7688    func 5.3683    
Accumulated time: func 52.8894    prepare 16.0601    bound 27.6772    transfer 2.4369    finalize 3.8977    
all_split False
======================Cut inference begins======================
max lb tensor(0.01252142) min lb tensor(-0.01996964)
Number of Verified Splits: 16039 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.0008952617645263672 
BICCOS Cumulative time: 0.14237642288208008
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02284 (22), -0.02273 (22), -0.02253 (22), -0.02212 (22), -0.02200 (22), -0.02181 (22), -0.02080 (22), -0.02069 (22), -0.02052 (22), -0.02049 (22), -0.02045 (22), -0.02033 (22), -0.02024 (22), -0.02017 (22), -0.02014 (22), -0.02014 (22), -0.02006 (22), -0.01997 (23), -0.01995 (22), -0.01994 (22), 
Length of domains: 36107
Time: pickout 0.2875    decision 1.6627    set_bounds 2.1454    solve 5.3776    add 0.0726    
Accumulated time: pickout 2.8182    decision 17.4549    set_bounds 21.9716    solve 53.3706    add 1.5358    
Current (lb-rhs): -0.022838950157165527
203993 domains visited
Cumulative time: 98.99304866790771

BaB round 21
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 923] [/input-8, 1514] [/input-8, 923] [/input-8, 1514] [/input-8, 1508] [/input-8, 1514] [/input-8, 1514] [/input-8, 1896] [/input-8, 1514] [/input-8, 1508] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7647404074668884, worst -0.020629286766052246
10 lb beta sum: 0.7647404074668884, worst -0.020598292350769043
Time: prepare 1.5787    bound 2.5383    transfer 0.2386    finalize 0.2135    func 4.7861    
Accumulated time: func 57.6755    prepare 17.6393    bound 30.2155    transfer 2.6754    finalize 4.1113    
all_split False
======================Cut inference begins======================
max lb tensor(0.01158810) min lb tensor(-0.02059221)
Number of Verified Splits: 15931 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.0009319782257080078 
BICCOS Cumulative time: 0.14330840110778809
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02059 (23), -0.02048 (23), -0.02028 (23), -0.01997 (23), -0.01990 (23), -0.01986 (23), -0.01978 (23), -0.01966 (23), -0.01959 (23), -0.01955 (22), -0.01952 (22), -0.01944 (22), -0.01940 (22), -0.01928 (23), -0.01924 (22), -0.01921 (22), -0.01916 (23), -0.01897 (23), -0.01893 (22), -0.01882 (22), 
Length of domains: 36560
Time: pickout 0.2941    decision 1.6741    set_bounds 2.6932    solve 4.7949    add 0.2278    
Accumulated time: pickout 3.1123    decision 19.1290    set_bounds 24.6648    solve 58.1655    add 1.7636    
Current (lb-rhs): -0.020592212677001953
220830 domains visited
Cumulative time: 108.88451480865479

BaB round 22
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1514] [/input-8, 1514] [/input-8, 1514] [/input-8, 1896] [/input-8, 1896] [/input-8, 1514] [/input-8, 1514] [/input-8, 1896] [/input-8, 1896] [/input-8, 1514] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7535229921340942, worst -0.017585396766662598
10 lb beta sum: 0.7535229921340942, worst -0.017584681510925293
Time: prepare 1.5750    bound 2.5397    transfer 0.2343    finalize 0.2253    func 4.7953    
Accumulated time: func 62.4709    prepare 19.2147    bound 32.7552    transfer 2.9097    finalize 4.3366    
all_split False
======================Cut inference begins======================
max lb tensor(0.01138055) min lb tensor(-0.01758039)
Number of Verified Splits: 16082 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.0011394023895263672 
BICCOS Cumulative time: 0.14444780349731445
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02059 (23), -0.02048 (23), -0.02028 (23), -0.01990 (23), -0.01978 (23), -0.01959 (23), -0.01855 (23), -0.01844 (23), -0.01827 (23), -0.01825 (23), -0.01822 (23), -0.01810 (23), -0.01800 (23), -0.01792 (23), -0.01791 (23), -0.01788 (23), -0.01781 (23), -0.01774 (23), -0.01771 (23), -0.01770 (23), 
Length of domains: 36862
Time: pickout 0.2998    decision 1.9721    set_bounds 2.1739    solve 4.8050    add 0.1008    
Accumulated time: pickout 3.4121    decision 21.1011    set_bounds 26.8387    solve 62.9705    add 1.8644    
Current (lb-rhs): -0.020592212677001953
237516 domains visited
Cumulative time: 118.4287269115448

BaB round 23
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1361] [/input-8, 1361] [/input-8, 1361] [/input-8, 1361] [/input-8, 1361] [/input-8, 1361] [/input-8, 1361] [/input-8, 1361] [/input-8, 1361] [/input-8, 1361] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7527931332588196, worst -0.018208026885986328
10 lb beta sum: 0.7527931332588196, worst -0.01820504665374756
Time: prepare 1.5621    bound 2.5348    transfer 0.2362    finalize 0.7960    func 5.3475    
Accumulated time: func 67.8184    prepare 20.7771    bound 35.2900    transfer 3.1459    finalize 5.1326    
all_split False
======================Cut inference begins======================
max lb tensor(0.01192236) min lb tensor(-0.01820183)
Number of Verified Splits: 17083 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.0009126663208007812 
BICCOS Cumulative time: 0.14536046981811523
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01820 (24), -0.01809 (24), -0.01803 (24), -0.01792 (24), -0.01789 (24), -0.01772 (24), -0.01758 (24), -0.01747 (24), -0.01741 (24), -0.01730 (24), -0.01729 (23), -0.01727 (24), -0.01718 (23), -0.01718 (23), -0.01710 (24), -0.01707 (23), -0.01705 (24), -0.01698 (23), -0.01694 (24), -0.01687 (23), 
Length of domains: 36163
Time: pickout 0.2902    decision 2.1981    set_bounds 2.1226    solve 5.3565    add 0.0677    
Accumulated time: pickout 3.7024    decision 23.2991    set_bounds 28.9613    solve 68.3269    add 1.9321    
Current (lb-rhs): -0.018201828002929688
253201 domains visited
Cumulative time: 128.65819764137268

BaB round 24
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7436727285385132, worst -0.01613229513168335
10 lb beta sum: 0.7436727285385132, worst -0.01611614227294922
Time: prepare 1.5612    bound 2.5355    transfer 0.2366    finalize 0.2238    func 4.7745    
Accumulated time: func 72.5929    prepare 22.3388    bound 37.8255    transfer 3.3825    finalize 5.3563    
all_split False
======================Cut inference begins======================
max lb tensor(0.01188993) min lb tensor(-0.01610994)
Number of Verified Splits: 17449 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.001119375228881836 
BICCOS Cumulative time: 0.14647984504699707
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01820 (24), -0.01809 (24), -0.01803 (24), -0.01792 (24), -0.01789 (24), -0.01772 (24), -0.01705 (24), -0.01694 (24), -0.01674 (24), -0.01635 (24), -0.01624 (24), -0.01617 (24), -0.01611 (25), -0.01605 (24), -0.01604 (24), -0.01604 (25), -0.01594 (25), -0.01588 (24), -0.01587 (25), -0.01586 (24), 
Length of domains: 35098
Time: pickout 0.2958    decision 1.6610    set_bounds 2.6496    solve 4.7843    add 0.0721    
Accumulated time: pickout 3.9981    decision 24.9602    set_bounds 31.6108    solve 73.1113    add 2.0042    
Current (lb-rhs): -0.018201828002929688
268520 domains visited
Cumulative time: 138.31493163108826

BaB round 25
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7405532002449036, worst -0.016753196716308594
10 lb beta sum: 0.7405532002449036, worst -0.016737818717956543
Time: prepare 1.5841    bound 2.5466    transfer 0.2397    finalize 0.2204    func 5.4108    
Accumulated time: func 78.0037    prepare 23.9232    bound 40.3721    transfer 3.6222    finalize 5.5768    
all_split False
======================Cut inference begins======================
max lb tensor(0.01018965) min lb tensor(-0.01672935)
Number of Verified Splits: 17845 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.0008988380432128906 
BICCOS Cumulative time: 0.14737868309020996
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01673 (25), -0.01666 (25), -0.01656 (25), -0.01649 (25), -0.01641 (25), -0.01624 (25), -0.01611 (25), -0.01604 (25), -0.01594 (25), -0.01587 (25), -0.01579 (25), -0.01562 (25), -0.01556 (25), -0.01549 (25), -0.01542 (24), -0.01531 (24), -0.01530 (24), -0.01525 (25), -0.01519 (24), -0.01512 (24), 
Length of domains: 33637
Time: pickout 0.2951    decision 1.9883    set_bounds 2.1066    solve 5.4194    add 0.0626    
Accumulated time: pickout 4.2932    decision 26.9485    set_bounds 33.7174    solve 78.5307    add 2.0668    
Current (lb-rhs): -0.016729354858398438
283443 domains visited
Cumulative time: 148.37441277503967

BaB round 26
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7334165573120117, worst -0.013975381851196289
10 lb beta sum: 0.7334165573120117, worst -0.014014363288879395
Time: prepare 1.5817    bound 2.5362    transfer 0.2361    finalize 0.7524    func 5.3231    
Accumulated time: func 83.3269    prepare 25.5053    bound 42.9084    transfer 3.8583    finalize 6.3292    
all_split False
======================Cut inference begins======================
max lb tensor(0.00964028) min lb tensor(-0.01395065)
Number of Verified Splits: 19245 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.0008952617645263672 
BICCOS Cumulative time: 0.14827394485473633
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01673 (25), -0.01666 (25), -0.01656 (25), -0.01649 (25), -0.01641 (25), -0.01624 (25), -0.01611 (25), -0.01604 (25), -0.01594 (25), -0.01587 (25), -0.01579 (25), -0.01562 (25), -0.01556 (25), -0.01549 (25), -0.01525 (25), -0.01488 (25), -0.01481 (25), -0.01469 (25), -0.01463 (25), -0.01456 (25), 
Length of domains: 30776
Time: pickout 0.2995    decision 1.6665    set_bounds 2.0898    solve 5.3326    add 0.0677    
Accumulated time: pickout 4.5927    decision 28.6150    set_bounds 35.8072    solve 83.8633    add 2.1345    
Current (lb-rhs): -0.016729354858398438
296966 domains visited
Cumulative time: 158.0292661190033

BaB round 27
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 923] [/input-8, 923] [/input-8, 923] [/input-8, 923] [/input-8, 1405] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7280706167221069, worst -0.01430356502532959
10 lb beta sum: 0.7280706167221069, worst -0.01426553726196289
Time: prepare 1.5584    bound 2.5420    transfer 0.2350    finalize 0.2263    func 5.3487    
Accumulated time: func 88.6755    prepare 27.0641    bound 45.4504    transfer 4.0933    finalize 6.5555    
all_split False
======================Cut inference begins======================
max lb tensor(0.01123536) min lb tensor(-0.01424825)
Number of Verified Splits: 18998 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.0009090900421142578 
BICCOS Cumulative time: 0.14918303489685059
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01425 (26), -0.01417 (26), -0.01413 (25), -0.01411 (25), -0.01408 (26), -0.01407 (25), -0.01404 (25), -0.01400 (26), -0.01395 (25), -0.01394 (26), -0.01389 (25), -0.01381 (25), -0.01379 (25), -0.01378 (25), -0.01377 (26), -0.01372 (25), -0.01364 (25), -0.01360 (26), -0.01352 (26), -0.01350 (26), 
Length of domains: 28162
Time: pickout 0.2933    decision 1.9181    set_bounds 2.1142    solve 5.3589    add 0.0665    
Accumulated time: pickout 4.8860    decision 30.5331    set_bounds 37.9214    solve 89.2222    add 2.2011    
Current (lb-rhs): -0.014248251914978027
310736 domains visited
Cumulative time: 167.9751558303833

BaB round 28
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7227135896682739, worst -0.011733770370483398
10 lb beta sum: 0.7227135896682739, worst -0.011728882789611816
Time: prepare 1.5565    bound 2.5399    transfer 0.2335    finalize 0.6836    func 5.2316    
Accumulated time: func 93.9071    prepare 28.6210    bound 47.9903    transfer 4.3268    finalize 7.2391    
all_split False
======================Cut inference begins======================
max lb tensor(0.01119447) min lb tensor(-0.01166797)
Number of Verified Splits: 21749 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.0008809566497802734 
BICCOS Cumulative time: 0.15006399154663086
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01425 (26), -0.01417 (26), -0.01408 (26), -0.01400 (26), -0.01394 (26), -0.01377 (26), -0.01350 (26), -0.01343 (26), -0.01333 (26), -0.01326 (26), -0.01319 (26), -0.01306 (26), -0.01302 (26), -0.01298 (26), -0.01289 (26), -0.01281 (26), -0.01275 (26), -0.01273 (26), -0.01265 (26), -0.01258 (26), 
Length of domains: 22797
Time: pickout 0.2937    decision 1.6638    set_bounds 2.0632    solve 5.2411    add 0.0507    
Accumulated time: pickout 5.1796    decision 32.1969    set_bounds 39.9847    solve 94.4633    add 2.2517    
Current (lb-rhs): -0.014248251914978027
321755 domains visited
Cumulative time: 177.49977660179138

BaB round 29
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1361] [/input-8, 1361] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7178105115890503, worst -0.012213587760925293
10 lb beta sum: 0.7178105115890503, worst -0.012194633483886719
Time: prepare 1.5660    bound 2.5372    transfer 0.2322    finalize 0.6574    func 5.2100    
Accumulated time: func 99.1171    prepare 30.1874    bound 50.5275    transfer 4.5590    finalize 7.8965    
all_split False
======================Cut inference begins======================
max lb tensor(0.01141357) min lb tensor(-0.01218736)
Number of Verified Splits: 22341 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.0009257793426513672 
BICCOS Cumulative time: 0.15098977088928223
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01219 (27), -0.01211 (27), -0.01202 (27), -0.01194 (27), -0.01188 (27), -0.01171 (27), -0.01155 (27), -0.01146 (27), -0.01146 (27), -0.01138 (27), -0.01138 (27), -0.01129 (27), -0.01129 (27), -0.01123 (27), -0.01121 (27), -0.01115 (27), -0.01106 (27), -0.01099 (27), -0.01098 (27), -0.01091 (27), 
Length of domains: 16840
Time: pickout 0.2948    decision 1.8343    set_bounds 2.0116    solve 5.2194    add 0.0749    
Accumulated time: pickout 5.4745    decision 34.0312    set_bounds 41.9963    solve 99.6827    add 2.3267    
Current (lb-rhs): -0.012187361717224121
332182 domains visited
Cumulative time: 187.15131664276123

BaB round 30
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 808] [/input-8, 1896] [/input-8, 1896] [/input-8, 1896] [/input-8, 1896] [/input-8, 1896] [/input-8, 808] [/input-8, 808] [/input-8, 1896] [/input-8, 1896] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7156164646148682, worst -0.01032865047454834
10 lb beta sum: 0.7156164646148682, worst -0.010324299335479736
Time: prepare 1.5588    bound 2.5382    transfer 0.2303    finalize 0.5807    func 5.1243    
Accumulated time: func 104.2414    prepare 31.7466    bound 53.0657    transfer 4.7893    finalize 8.4773    
all_split False
======================Cut inference begins======================
max lb tensor(0.01160669) min lb tensor(-0.01031756)
Number of Verified Splits: 22596 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.0009145736694335938 
BICCOS Cumulative time: 0.15190434455871582
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01032 (28), -0.01023 (28), -0.01015 (28), -0.01007 (28), -0.00985 (28), -0.00977 (28), -0.00969 (28), -0.00968 (28), -0.00960 (28), -0.00960 (28), -0.00954 (28), -0.00951 (28), -0.00943 (28), -0.00937 (28), -0.00929 (28), -0.00925 (28), -0.00917 (28), -0.00912 (28), -0.00912 (28), -0.00908 (28), 
Length of domains: 10628
Time: pickout 0.3010    decision 1.7860    set_bounds 1.9322    solve 5.1329    add 0.0866    
Accumulated time: pickout 5.7754    decision 35.8172    set_bounds 43.9285    solve 104.8156    add 2.4133    
Current (lb-rhs): -0.010317564010620117
342354 domains visited
Cumulative time: 196.59145212173462

BaB round 31
batch: 10628
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 700] [/input-8, 700] [/input-8, 700] [/input-8, 1896] [/input-8, 1896] [/input-8, 1896] [/input-8, 1896] [/input-8, 1896] [/input-8, 1896] [/input-8, 1896] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7134388089179993, worst -0.009270727634429932
10 lb beta sum: 0.7134388089179993, worst -0.009263932704925537
Time: prepare 1.0527    bound 1.6824    transfer 0.1136    finalize 0.4411    func 3.4298    
Accumulated time: func 107.6712    prepare 32.7997    bound 54.7481    transfer 4.9030    finalize 8.9184    
all_split False
======================Cut inference begins======================
max lb tensor(0.01119947) min lb tensor(-0.00925970)
Number of Verified Splits: 15003 of 21256
Stop inferencing: Max iteration reached.
Total number of valid cuts: 56.
#cuts 1-3: 14
#cuts 4-6: 42
#cuts >= 20: 0
BICCOS time: 0.0008561611175537109 
BICCOS Cumulative time: 0.15276050567626953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00926 (29), -0.00918 (29), -0.00910 (29), -0.00902 (29), -0.00879 (29), -0.00871 (29), -0.00863 (29), -0.00862 (29), -0.00855 (29), -0.00854 (29), -0.00847 (29), -0.00846 (29), -0.00838 (29), -0.00831 (29), -0.00822 (29), -0.00819 (29), -0.00811 (29), -0.00806 (29), -0.00805 (29), -0.00803 (29), 
Length of domains: 6253
Time: pickout 0.1953    decision 0.8816    set_bounds 1.2998    solve 3.4367    add 0.0396    
Accumulated time: pickout 5.9707    decision 36.6987    set_bounds 45.2283    solve 108.2523    add 2.4529    
Current (lb-rhs): -0.009259700775146484
348607 domains visited
Time out!!!!!!!!
Result: unknown in 204.1894 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 170, vnnlib ID: 170 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.00588608, -16.16182518,  -6.58917904,  -9.66689301,  -7.57059002,
          -8.67937565, -11.63756847, -10.25432014, -14.60658455, -14.13991070]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [571]; unstable size 571; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 151, 1, 571] with unstable size 150 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 571] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 571] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [150]; unstable size 150; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 150] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 150] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.57134891,  7.26472569, -1.64735627,  1.38431573,  0.25252271,
          3.19363260,  1.94417977,  5.92638063,  5.30164909]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.00588608, -16.16182518,  -6.58917904,  -9.66689301,  -7.57059002,
          -8.67937565, -11.63756847, -10.25432014, -14.60658455, -14.13991070]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.00588608, -16.16182518,  -6.58917904,  -9.66689301,  -7.57059002,
           -8.67937565, -11.63756847, -10.25432014, -14.60658455, -14.13991070]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.98141098]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.84603173, -0.94126981, -0.86190474,  ..., -0.33809513,
            -0.48095238, -0.51269841],
           [-0.25873005, -0.30634910, -0.27460307,  ..., -0.29047608,
            -0.33809513, -0.43333322],
           [ 0.42380959,  0.36031753,  0.39206356,  ..., -0.08412688,
            -0.14761895, -0.32222211],
           ...,
           [ 0.47142863,  0.48730165,  0.55079371,  ...,  0.05873025,
             0.01111121,  0.12222230],
           [ 0.12222230,  0.10634929,  0.23333341,  ..., -0.02063482,
            -0.02063482,  0.16984135],
           [-0.19523799, -0.41746020, -0.29047608,  ...,  0.16984135,
             0.31269848,  0.58253974]],

          [[-0.67632848, -0.78904986, -0.72463763,  ..., -0.03220600,
            -0.17713353, -0.20933965],
           [ 0.04830930, -0.01610294,  0.01610318,  ...,  0.03220624,
            -0.01610294, -0.11272129],
           [ 0.88566834,  0.82125610,  0.85346222,  ...,  0.24154601,
             0.19323683, -0.01610294],
           ...,
           [ 0.95008057,  0.98228669,  1.03059590,  ...,  0.62801939,
             0.56360716,  0.61191636],
           [ 0.70853472,  0.72463775,  0.85346222,  ...,  0.66022551,
             0.62801939,  0.77294695],
           [ 0.46698883,  0.22544295,  0.40257660,  ...,  0.77294695,
             0.85346222,  1.14331758]],

          [[-0.01349309, -0.07346311,  0.03148442,  ...,  0.76611710,
             0.66116959,  0.64617711],
           [-0.02848560, -0.04347810,  0.00149941,  ...,  0.78110963,
             0.78110963,  0.78110963],
           [-0.14842562, -0.19340314, -0.14842562,  ...,  0.81109464,
             0.81109464,  0.76611710],
           ...,
           [-0.53823084, -0.56821585, -0.50824583,  ..., -0.68815589,
            -0.65817088, -0.49325335],
           [-0.58320838, -0.73313338, -0.61319339,  ..., -0.83808094,
            -0.83808094, -0.65817088],
           [-0.80809593, -1.04797614, -0.85307342,  ..., -0.74812591,
            -0.67316341, -0.43328333]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0549 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 171, vnnlib ID: 171 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-13.39601326, -14.69097233, -12.64669704, -12.07789993, -12.42763519,
         -12.80878258, -10.90289593, -13.06480980, -16.92237282, -13.27768993]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [576]; unstable size 576; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 200, 1, 576] with unstable size 199 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 9, 1, 576] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 576] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [199]; unstable size 199; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 9, 1, 199] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 199] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.12973392, 2.10289288, 0.60040081, 0.30346036, 0.51467490, 0.89803636,
         1.03227448, 3.96525550, 0.86045098]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0633 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 172, vnnlib ID: 172 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -6.66107941, -11.79125309,  -7.86607170, -10.32452965,  -7.72983742,
         -11.17636871, -10.86951828, -11.03235435,  -7.73300457, -11.89622021]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [722]; unstable size 722; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 180, 1, 722] with unstable size 179 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 722] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 722] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [179]; unstable size 179; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 179] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 179] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.99104667,  0.21340621,  2.51710510, -0.09744829,  3.08586264,
          3.07672787,  2.41397452, -0.15205157,  3.96747732]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.66107941, -11.79125309,  -7.86607170, -10.32452965,  -7.72983742,
         -11.17636871, -10.86951828, -11.03235435,  -7.73300457, -11.89622021]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.00it/s]100%|██████████| 1/1 [00:00<00:00,  8.99it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.91187239, -11.79963017,  -8.07671642, -10.41768456,  -7.87977695,
          -11.27148438, -10.87535191, -11.22656631,  -7.33530617, -11.91874981],
         [ -6.91187239, -11.79963017,  -8.07671642, -10.41768456,  -7.87977695,
          -11.27148438, -10.87535191, -11.22656631,  -7.33530617, -11.91874981]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.96790457, 0.42343378]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1142 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 19.568559646606445
alpha/beta optimization time: 1.2030463218688965
initial alpha-crown bounds: tensor([[ 4.04605627,  0.26190531,  2.56589317, -0.03486371,  3.13469791,
          3.12771082,  2.50110149, -0.06319189,  4.02925014]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.06319189071655273
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6120343208313
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.61199808120728
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.61197209358215
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.61195039749146
Verifying property 3 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.03486371]], device='cuda:0') need to verify.
Model prediction is: tensor([ -6.66107941, -11.79125309,  -7.86607170, -10.32452965,  -7.72983742,
        -11.17636871, -10.86951828, -11.03235435,  -7.73300457, -11.89622021],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.03486371]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 722
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 177
Node /15 input 0: size torch.Size([100]) unstable 19
-----------------
# of unstable neurons: 918
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010895729064941406
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0348624587059021
10 lb beta sum: 0.0, worst -0.0348736047744751
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0522    transfer 0.0001    finalize 0.0001    func 0.0527    
Accumulated time: func 0.0527    prepare 0.0002    bound 0.0522    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 41] 
split level 1: [/input-12, 45] 
split level 2: [/input-12, 37] 
split level 3: [/input-12, 9] 
split level 4: [/input-12, 78] 
split level 5: [/input-12, 90] 
split level 6: [/input-8, 651] 
split level 7: [/input-12, 92] 
split level 8: [/input-8, 802] 
split level 9: [/input-12, 58] 
split level 10: [/input-8, 534] 
split level 11: [/input-8, 652] 
split level 12: [/input-8, 1012] 
split level 13: [/input-8, 563] 
split level 14: [/input-8, 684] 
split level 15: [/input-8, 650] 
split level 16: [/input-8, 653] 
split level 17: [/input-8, 996] 
split level 18: [/input-8, 1886] 
split level 19: [/input-8, 564] 
split level 20: [/input, 1483] 
split level 21: [/input-8, 1306] 
split level 22: [/input, 3514] 
split level 23: [/input-8, 1330] 
split level 24: [/input-8, 548] 
split level 25: [/input-8, 1331] 
split level 26: [/input, 2250] 
split level 27: [/input-8, 1454] 
split level 28: [/input-8, 566] 
split level 29: [/input-8, 1010] 
split level 30: [/input-8, 1554] 
split level 31: [/input, 1721] 
split level 32: [/input, 2266] 
split level 33: [/input, 2983] 
split level 34: [/input-8, 994] 
split level 35: [/input-8, 573] 
split level 36: [/input, 2409] 
split level 37: [/input-8, 2024] 
split level 38: [/input-8, 857] 
split level 39: [/input-8, 681] 
split level 40: [/input-8, 927] 
split level 41: [/input-8, 1316] 
split level 42: [/input, 3530] 
split level 43: [/input, 3113] 
split level 44: [/input-8, 1305] 
split level 45: [/input-8, 1449] 
split level 46: [/input, 3110] 
split level 47: [/input-8, 1553] 
split level 48: [/input-8, 2022] 
split level 49: [/input, 3112] 
split level 50: [/input, 3173] 
split level 51: [/input, 1499] 
split level 52: [/input, 3257] 
split level 53: [/input-8, 1629] 
split level 54: [/input, 3429] 
split level 55: [/input, 342] 
split level 56: [/input, 3131] 
split level 57: [/input, 2361] 
split level 58: [/input, 3357] 
split level 59: [/input, 3432] 
split level 60: [/input, 375] 
split level 61: [/input, 1749] 
split level 62: [/input, 3735] 
split level 63: [/input, 3546] 
split level 64: [/input, 2375] 
split level 65: [/input-8, 1974] 
split level 66: [/input, 3383] 
split level 67: [/input, 2987] 
split level 68: [/input, 3493] 
split level 69: [/input, 3369] 
split level 70: [/input-8, 1461] 
split level 71: [/input, 676] 
split level 72: [/input, 2651] 
split level 73: [/input-8, 1109] 
split level 74: [/input, 3370] 
split level 75: [/input-8, 1803] 
split level 76: [/input, 341] 
split level 77: [/input, 3895] 
split level 78: [/input, 3174] 
split level 79: [/input-8, 1071] 
split level 80: [/input, 3143] 
split level 81: [/input, 3115] 
split level 82: [/input-8, 278] 
split level 83: [/input, 2405] 
split level 84: [/input, 3893] 
split level 85: [/input, 3116] 
split level 86: [/input, 3945] 
split level 87: [/input-8, 1001] 
split level 88: [/input, 3928] 
split level 89: [/input, 3929] 
split level 90: [/input, 3511] 
split level 91: [/input, 2379] 
split level 92: [/input, 1335] 
split level 93: [/input-8, 1249] 
split level 94: [/input, 2392] 
split level 95: [/input-8, 1122] 
split level 96: [/input-8, 1997] 
split level 97: [/input, 3927] 
split level 98: [/input-8, 464] 
split level 99: [/input, 2374] 
split level 100: [/input, 328] 
split level 101: [/input, 3256] 
split level 102: [/input, 3761] 
split level 103: [/input, 3523] 
split level 104: [/input, 3545] 
split level 105: [/input, 3382] 
split level 106: [/input, 2404] 
split level 107: [/input, 1750] 
split level 108: [/input, 3448] 
split level 109: [/input-8, 1552] 
split level 110: [/input-8, 1065] 
split level 111: [/input, 1310] 
split level 112: [/input-8, 1308] 
split level 113: [/input-8, 574] 
split level 114: [/input, 1351] 
split level 115: [/input, 3413] 
split level 116: [/input, 3098] 
split level 117: [/input, 330] 
split level 118: [/input, 3550] 
split level 119: [/input, 3894] 
split level 120: [/input, 2395] 
split level 121: [/input, 2373] 
split level 122: [/input, 1446] 
split level 123: [/input, 3763] 
split level 124: [/input, 2981] 
split level 125: [/input, 3241] 
split level 126: [/input, 344] 
split level 127: [/input, 2393] 
split level 128: [/input-8, 465] 
split level 129: [/input, 1502] 
split level 130: [/input, 3431] 
split level 131: [/input, 1336] 
split level 132: [/input, 2376] 
split level 133: [/input, 1531] 
split level 134: [/input-8, 646] 
split level 135: [/input-8, 645] 
split level 136: [/input, 3925] 
split level 137: [/input, 3125] 
split level 138: [/input-8, 1995] 
split level 139: [/input, 3931] 
split level 140: [/input, 1365] 
split level 141: [/input, 3738] 
split level 142: [/input, 3397] 
split level 143: [/input, 2380] 
split level 144: [/input, 3371] 
split level 145: [/input, 3175] 
split level 146: [/input, 2363] 
split level 147: [/input, 2235] 
split level 148: [/input, 1479] 
split level 149: [/input, 1337] 
split level 150: [/input, 3926] 
split level 151: [/input, 3005] 
split level 152: [/input-8, 2030] 
split level 153: [/input, 1532] 
split level 154: [/input, 3576] 
split level 155: [/input, 3571] 
split level 156: [/input, 1415] 
split level 157: [/input, 3573] 
split level 158: [/input, 2506] 
split level 159: [/input, 2652] 
split level 160: [/input, 438] 
split level 161: [/input-8, 1441] 
split level 162: [/input, 3384] 
split level 163: [/input, 1309] 
split level 164: [/input-8, 981] 
split level 165: [/input, 3356] 
split level 166: [/input-8, 1996] 
split level 167: [/input, 2388] 
split level 168: [/input, 2362] 
split level 169: [/input, 3160] 
split level 170: [/input, 3580] 
split level 171: [/input, 44] 
split level 172: [/input, 3385] 
split level 173: [/input, 3381] 
split level 174: [/input, 1863] 
split level 175: [/input, 3883] 
split level 176: [/input, 3387] 
split level 177: [/input, 2346] 
split level 178: [/input, 3572] 
split level 179: [/input, 3582] 
split level 180: [/input, 340] 
split level 181: [/input, 1530] 
split level 182: [/input, 769] 
split level 183: [/input, 2394] 
split level 184: [/input, 3574] 
split level 185: [/input, 1491] 
split level 186: [/input, 2542] 
split level 187: [/input, 3575] 
split level 188: [/input-8, 1758] 
split level 189: [/input, 1533] 
split level 190: [/input, 1453] 
split level 191: [/input, 3271] 
split level 192: [/input, 2403] 
split level 193: [/input, 1487] 
split level 194: [/input, 3753] 
split level 195: [/input, 2553] 
split level 196: [/input, 3943] 
split level 197: [/input-8, 1524] 
split level 198: [/input, 1334] 
split level 199: [/input, 3354] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03476959466934204
10 lb beta sum: 0.0, worst -0.03476548194885254
Time: prepare 0.0126    bound 0.0991    transfer 0.0011    finalize 0.0032    func 0.1186    
Accumulated time: func 0.1713    prepare 0.0227    bound 0.1514    transfer 0.0012    finalize 0.0033    
all_split False
======================Cut inference begins======================
max lb tensor(0.10736811) min lb tensor(-0.03476042)
Number of Verified Splits: 11 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.011689424514770508 
BICCOS Cumulative time: 0.011689424514770508
Preprocessing time: 0.010504722595214844 Inference time: 0.0004553794860839844 Add cuts time: 0.00015425682067871094 Cut analysis time: 0.0005750656127929688
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.5106    set_bounds 0.0092    solve 0.1187    add 0.0104    
Accumulated time: pickout 0.0003    decision 0.5106    set_bounds 0.0092    solve 0.1187    add 0.0104    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([41]), tensor([-1.]), tensor([0]), tensor([5.73719738e-10]), tensor([0]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([41]), tensor([1.]), tensor([0]), tensor([1.61394986e-09]), tensor([0]))}
Shallow branching resets to n domains:  2
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.08162587881088257

all verified at 0th iter
Time: prepare 0.0003    bound 0.0042    transfer 0.0001    finalize 0.0001    func 0.0048    
Accumulated time: func 0.1762    prepare 0.0230    bound 0.1556    transfer 0.0013    finalize 0.0034    
After pruning, left:  0

Back to Regular BaB


Properties batch 4, size 1
Remaining timeout: 197.68239831924438
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 197.68233966827393
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.68231582641602
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.6822955608368
Verifying property 7 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.06319189]], device='cuda:0') need to verify.
Model prediction is: tensor([ -6.66107941, -11.79125309,  -7.86607170, -10.32452965,  -7.72983742,
        -11.17636871, -10.86951828, -11.03235435,  -7.73300457, -11.89622021],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.06319189]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 722
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 177
Node /15 input 0: size torch.Size([100]) unstable 19
-----------------
# of unstable neurons: 918
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010395050048828125
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06319093704223633
10 lb beta sum: 0.0, worst -0.06319057941436768
Time: prepare 0.0002    bound 0.0890    transfer 0.0001    finalize 0.0001    func 0.0895    
Accumulated time: func 0.0895    prepare 0.0002    bound 0.0890    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 53] 
split level 1: [/input-12, 21] 
split level 2: [/input-12, 78] 
split level 3: [/input-12, 9] 
split level 4: [/input-8, 1331] 
split level 5: [/input-12, 74] 
split level 6: [/input-12, 99] 
split level 7: [/input-8, 1330] 
split level 8: [/input-8, 1777] 
split level 9: [/input-8, 1396] 
split level 10: [/input-8, 1785] 
split level 11: [/input-8, 534] 
split level 12: [/input-8, 564] 
split level 13: [/input-8, 1776] 
split level 14: [/input-12, 40] 
split level 15: [/input-8, 563] 
split level 16: [/input, 2167] 
split level 17: [/input-8, 1372] 
split level 18: [/input-8, 1395] 
split level 19: [/input-8, 566] 
split level 20: [/input-8, 1769] 
split level 21: [/input-8, 880] 
split level 22: [/input-8, 1509] 
split level 23: [/input-8, 1839] 
split level 24: [/input-8, 1394] 
split level 25: [/input-12, 32] 
split level 26: [/input-8, 573] 
split level 27: [/input-8, 1524] 
split level 28: [/input-8, 1525] 
split level 29: [/input-8, 1900] 
split level 30: [/input-8, 118] 
split level 31: [/input-8, 1554] 
split level 32: [/input-8, 650] 
split level 33: [/input-8, 1454] 
split level 34: [/input, 3432] 
split level 35: [/input, 2983] 
split level 36: [/input-8, 299] 
split level 37: [/input-8, 1782] 
split level 38: [/input-8, 567] 
split level 39: [/input-8, 651] 
split level 40: [/input-8, 1841] 
split level 41: [/input-8, 1138] 
split level 42: [/input-8, 1843] 
split level 43: [/input, 3736] 
split level 44: [/input-8, 1374] 
split level 45: [/input, 3431] 
split level 46: [/input, 2683] 
split level 47: [/input-8, 117] 
split level 48: [/input, 1370] 
split level 49: [/input-8, 1306] 
split level 50: [/input-8, 1305] 
split level 51: [/input, 3433] 
split level 52: [/input, 2392] 
split level 53: [/input, 3417] 
split level 54: [/input, 3753] 
split level 55: [/input-8, 1429] 
split level 56: [/input, 2950] 
split level 57: [/input-8, 574] 
split level 58: [/input, 2409] 
split level 59: [/input-8, 2020] 
split level 60: [/input, 2987] 
split level 61: [/input, 3415] 
split level 62: [/input-8, 1842] 
split level 63: [/input, 676] 
split level 64: [/input-8, 1523] 
split level 65: [/input-8, 1364] 
split level 66: [/input-8, 1249] 
split level 67: [/input, 3174] 
split level 68: [/input, 388] 
split level 69: [/input, 1369] 
split level 70: [/input, 3448] 
split level 71: [/input, 3928] 
split level 72: [/input, 2391] 
split level 73: [/input, 3735] 
split level 74: [/input, 3160] 
split level 75: [/input, 2393] 
split level 76: [/input-8, 646] 
split level 77: [/input, 3429] 
split level 78: [/input, 1400] 
split level 79: [/input-8, 1122] 
split level 80: [/input, 3175] 
split level 81: [/input, 375] 
split level 82: [/input, 3942] 
split level 83: [/input-8, 1449] 
split level 84: [/input-8, 1803] 
split level 85: [/input, 3927] 
split level 86: [/input, 2375] 
split level 87: [/input, 3550] 
split level 88: [/input, 3975] 
split level 89: [/input, 3144] 
split level 90: [/input-8, 1908] 
split level 91: [/input-8, 1010] 
split level 92: [/input, 387] 
split level 93: [/input-8, 1526] 
split level 94: [/input, 371] 
split level 95: [/input, 3413] 
split level 96: [/input, 3401] 
split level 97: [/input, 2394] 
split level 98: [/input, 1502] 
split level 99: [/input-8, 1441] 
split level 100: [/input, 2981] 
split level 101: [/input, 3739] 
split level 102: [/input, 1386] 
split level 103: [/input, 3738] 
split level 104: [/input, 1335] 
split level 105: [/input, 3382] 
split level 106: [/input, 342] 
split level 107: [/input, 674] 
split level 108: [/input, 2374] 
split level 109: [/input, 2395] 
split level 110: [/input, 3419] 
split level 111: [/input-8, 1069] 
split level 112: [/input, 3944] 
split level 113: [/input-8, 1319] 
split level 114: [/input-8, 927] 
split level 115: [/input, 1402] 
split level 116: [/input, 1385] 
split level 117: [/input, 2407] 
split level 118: [/input, 3383] 
split level 119: [/input, 1356] 
split level 120: [/input, 3926] 
split level 121: [/input, 3925] 
split level 122: [/input, 344] 
split level 123: [/input-8, 681] 
split level 124: [/input, 3397] 
split level 125: [/input, 3546] 
split level 126: [/input-8, 1436] 
split level 127: [/input, 1893] 
split level 128: [/input, 2747] 
split level 129: [/input, 3754] 
split level 130: [/input, 2376] 
split level 131: [/input, 3381] 
split level 132: [/input-8, 464] 
split level 133: [/input, 2652] 
split level 134: [/input-8, 1780] 
split level 135: [/input-8, 1886] 
split level 136: [/input, 1351] 
split level 137: [/input, 3943] 
split level 138: [/input, 3143] 
split level 139: [/input, 3404] 
split level 140: [/input, 341] 
split level 141: [/input, 1353] 
split level 142: [/input-8, 1109] 
split level 143: [/input-8, 1001] 
split level 144: [/input, 1454] 
split level 145: [/input, 2379] 
split level 146: [/input-8, 111] 
split level 147: [/input, 328] 
split level 148: [/input, 3384] 
split level 149: [/input, 1605] 
split level 150: [/input-8, 1366] 
split level 151: [/input, 4022] 
split level 152: [/input, 2723] 
split level 153: [/input-8, 114] 
split level 154: [/input, 1365] 
split level 155: [/input-8, 1371] 
split level 156: [/input, 1336] 
split level 157: [/input, 1349] 
split level 158: [/input, 3569] 
split level 159: [/input, 2872] 
split level 160: [/input, 3403] 
split level 161: [/input-8, 1778] 
split level 162: [/input, 2373] 
split level 163: [/input, 3948] 
split level 164: [/input, 3718] 
split level 165: [/input, 2871] 
split level 166: [/input, 662] 
split level 167: [/input, 3412] 
split level 168: [/input-8, 1758] 
split level 169: [/input, 3929] 
split level 170: [/input, 330] 
split level 171: [/input, 1633] 
split level 172: [/input-8, 466] 
split level 173: [/input, 1415] 
split level 174: [/input, 1649] 
split level 175: [/input, 2189] 
split level 176: [/input, 2636] 
split level 177: [/input, 1665] 
split level 178: [/input, 340] 
split level 179: [/input, 2762] 
split level 180: [/input, 2685] 
split level 181: [/input, 3723] 
split level 182: [/input, 3570] 
split level 183: [/input, 1606] 
split level 184: [/input-8, 1903] 
split level 185: [/input, 1681] 
split level 186: [/input, 2123] 
split level 187: [/input, 385] 
split level 188: [/input, 3530] 
split level 189: [/input, 1334] 
split level 190: [/input, 3428] 
split level 191: [/input, 1595] 
split level 192: [/input, 1891] 
split level 193: [/input, 1984] 
split level 194: [/input, 1487] 
split level 195: [/input, 696] 
split level 196: [/input, 3385] 
split level 197: [/input-8, 645] 
split level 198: [/input, 2633] 
split level 199: [/input, 1374] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0631222128868103
10 lb beta sum: 0.0, worst -0.06312000751495361
Time: prepare 0.0119    bound 0.1048    transfer 0.0014    finalize 0.0028    func 0.1236    
Accumulated time: func 0.2131    prepare 0.0219    bound 0.1939    transfer 0.0015    finalize 0.0030    
all_split False
======================Cut inference begins======================
max lb tensor(0.25270015) min lb tensor(-0.06311554)
Number of Verified Splits: 9 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.01121211051940918 
BICCOS Cumulative time: 0.01121211051940918
Preprocessing time: 0.010515689849853516 Inference time: 0.00038623809814453125 Add cuts time: 0.00013303756713867188 Cut analysis time: 0.00017714500427246094
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.5090    set_bounds 0.0120    solve 0.1237    add 0.0104    
Accumulated time: pickout 0.0004    decision 0.5090    set_bounds 0.0120    solve 0.1237    add 0.0104    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([53]), tensor([-1.]), tensor([0]), tensor([-5.34985524e-21]), tensor([0]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([53]), tensor([1.]), tensor([0]), tensor([-5.34985524e-21]), tensor([0]))}
Shallow branching resets to n domains:  2
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06109338998794556

all verified at 2th iter
Time: prepare 0.0004    bound 0.0153    transfer 0.0001    finalize 0.0001    func 0.0160    
Accumulated time: func 0.2291    prepare 0.0223    bound 0.2092    transfer 0.0016    finalize 0.0031    
After pruning, left:  0

Back to Regular BaB


Properties batch 8, size 1
Remaining timeout: 196.6954472064972
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 3.3046 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 173, vnnlib ID: 173 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.96530533, -6.64648819, -4.20401192, -3.31281948, -3.79201317,
         -4.34627962, -3.10760784, -5.26119852, -7.51378918, -6.06500340]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [631]; unstable size 631; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 231, 1, 631] with unstable size 230 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 631] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 631] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [230]; unstable size 230; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 230] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 230] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.21187794,  1.27583194, -0.23146796, -0.57322311,  0.65389627,
         -1.39956295,  0.85230464,  2.21380854,  0.78132939]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.96530533, -6.64648819, -4.20401192, -3.31281948, -3.79201317,
         -4.34627962, -3.10760784, -5.26119852, -7.51378918, -6.06500340]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.96530533, -6.64648819, -4.20401287, -3.31281900, -3.79201317,
          -4.34627962, -3.10760832, -5.26119804, -7.51378918, -6.06500387],
         [-4.96530533, -6.64648819, -4.20401287, -3.31281900, -3.79201317,
          -4.34627962, -3.10760832, -5.26119804, -7.51378918, -6.06500387]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.89119387,  0.47919416, -0.20521069]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.12222230,  0.18571436,  0.09047628,  ..., -1.36984122,
            -0.30634910, -0.08412688],
           [ 0.04285724,  0.18571436,  0.26507944,  ..., -0.56031746,
            -0.09999990, -0.02063482],
           [ 0.16984135,  0.09047628,  0.20158738,  ..., -0.43333322,
            -0.40158719,  0.07460327],
           ...,
           [ 0.37619054,  0.24920642, -0.08412688,  ...,  0.20158738,
             0.12222230,  0.26507944],
           [ 0.20158738, -0.09999990,  0.24920642,  ...,  0.04285724,
             0.40793657,  0.29682547],
           [-0.21111101,  0.16984135,  0.58253974,  ...,  0.20158738,
             0.58253974,  0.18571436]],

          [[ 0.16103071,  0.22544295,  0.12882459,  ..., -1.35265696,
            -0.27375188, -0.04830906],
           [ 0.08051541,  0.22544295,  0.30595824,  ..., -0.53140092,
            -0.06441211,  0.01610318],
           [ 0.20933989,  0.12882459,  0.24154601,  ..., -0.40257636,
            -0.37037024,  0.11272153],
           ...,
           [ 0.41867965,  0.28985518, -0.04830906,  ...,  0.24154601,
             0.16103071,  0.30595824],
           [ 0.24154601, -0.06441211,  0.28985518,  ...,  0.08051541,
             0.45088577,  0.33816436],
           [-0.17713353,  0.20933989,  0.62801939,  ...,  0.24154601,
             0.62801939,  0.22544295]],

          [[ 0.28635699,  0.34632701,  0.25637197,  ..., -1.12293863,
            -0.11844061,  0.09145443],
           [ 0.21139447,  0.34632701,  0.42128953,  ..., -0.35832080,
             0.07646193,  0.15142445],
           [ 0.33133450,  0.25637197,  0.36131951,  ..., -0.23838064,
            -0.20839565,  0.24137947],
           ...,
           [ 0.52623707,  0.40629703,  0.09145443,  ...,  0.36131951,
             0.28635699,  0.42128953],
           [ 0.36131951,  0.07646193,  0.40629703,  ...,  0.21139447,
             0.55622208,  0.45127454],
           [-0.02848560,  0.33133450,  0.72113961,  ...,  0.36131951,
             0.72113961,  0.34632701]]],


         [[[ 0.12222230,  0.18571436,  0.09047628,  ..., -1.36984122,
            -0.30634910, -0.08412688],
           [ 0.04285724,  0.18571436,  0.26507944,  ..., -0.56031746,
            -0.09999990, -0.02063482],
           [ 0.16984135,  0.09047628,  0.20158738,  ..., -0.43333322,
            -0.40158719,  0.07460327],
           ...,
           [ 0.37619054,  0.24920642, -0.08412688,  ...,  0.20158738,
             0.12222230,  0.26507944],
           [ 0.20158738, -0.09999990,  0.24920642,  ...,  0.04285724,
             0.40793657,  0.29682547],
           [-0.21111101,  0.16984135,  0.58253974,  ...,  0.20158738,
             0.58253974,  0.18571436]],

          [[ 0.16103071,  0.22544295,  0.12882459,  ..., -1.35265696,
            -0.27375188, -0.04830906],
           [ 0.08051541,  0.22544295,  0.30595824,  ..., -0.53140092,
            -0.06441211,  0.01610318],
           [ 0.20933989,  0.12882459,  0.24154601,  ..., -0.40257636,
            -0.37037024,  0.11272153],
           ...,
           [ 0.41867965,  0.28985518, -0.04830906,  ...,  0.24154601,
             0.16103071,  0.30595824],
           [ 0.24154601, -0.06441211,  0.28985518,  ...,  0.08051541,
             0.45088577,  0.33816436],
           [-0.17713353,  0.20933989,  0.62801939,  ...,  0.24154601,
             0.62801939,  0.22544295]],

          [[ 0.28635699,  0.34632701,  0.25637197,  ..., -1.12293863,
            -0.11844061,  0.09145443],
           [ 0.21139447,  0.34632701,  0.42128953,  ..., -0.35832080,
             0.07646193,  0.15142445],
           [ 0.33133450,  0.25637197,  0.36131951,  ..., -0.23838064,
            -0.20839565,  0.24137947],
           ...,
           [ 0.52623707,  0.40629703,  0.09145443,  ...,  0.36131951,
             0.28635699,  0.42128953],
           [ 0.36131951,  0.07646193,  0.40629703,  ...,  0.21139447,
             0.55622208,  0.45127454],
           [-0.02848560,  0.33133450,  0.72113961,  ...,  0.36131951,
             0.72113961,  0.34632701]]],


         [[[ 0.12222230,  0.18571436,  0.09047628,  ..., -1.36984122,
            -0.30634910, -0.08412688],
           [ 0.04285724,  0.18571436,  0.26507944,  ..., -0.56031746,
            -0.09999990, -0.02063482],
           [ 0.16984135,  0.09047628,  0.20158738,  ..., -0.43333322,
            -0.40158719,  0.07460327],
           ...,
           [ 0.37619054,  0.24920642, -0.08412688,  ...,  0.20158738,
             0.12222230,  0.26507944],
           [ 0.20158738, -0.09999990,  0.24920642,  ...,  0.04285724,
             0.40793657,  0.29682547],
           [-0.21111101,  0.16984135,  0.58253974,  ...,  0.20158738,
             0.58253974,  0.18571436]],

          [[ 0.16103071,  0.22544295,  0.12882459,  ..., -1.35265696,
            -0.27375188, -0.04830906],
           [ 0.08051541,  0.22544295,  0.30595824,  ..., -0.53140092,
            -0.06441211,  0.01610318],
           [ 0.20933989,  0.12882459,  0.24154601,  ..., -0.40257636,
            -0.37037024,  0.11272153],
           ...,
           [ 0.41867965,  0.28985518, -0.04830906,  ...,  0.24154601,
             0.16103071,  0.30595824],
           [ 0.24154601, -0.06441211,  0.28985518,  ...,  0.08051541,
             0.45088577,  0.33816436],
           [-0.17713353,  0.20933989,  0.62801939,  ...,  0.24154601,
             0.62801939,  0.22544295]],

          [[ 0.28635699,  0.34632701,  0.25637197,  ..., -1.12293863,
            -0.11844061,  0.09145443],
           [ 0.21139447,  0.34632701,  0.42128953,  ..., -0.35832080,
             0.07646193,  0.15142445],
           [ 0.33133450,  0.25637197,  0.36131951,  ..., -0.23838064,
            -0.20839565,  0.24137947],
           ...,
           [ 0.52623707,  0.40629703,  0.09145443,  ...,  0.36131951,
             0.28635699,  0.42128953],
           [ 0.36131951,  0.07646193,  0.40629703,  ...,  0.21139447,
             0.55622208,  0.45127454],
           [-0.02848560,  0.33133450,  0.72113961,  ...,  0.36131951,
             0.72113961,  0.34632701]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0589 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 174, vnnlib ID: 174 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.29587555, -13.48483086,  -6.09756279,  -7.41362858,  -5.89941597,
          -7.54863977,  -8.10572243,  -7.43977880, -10.08916378, -11.89095020]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [646]; unstable size 646; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 267, 1, 646] with unstable size 266 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 646] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 646] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [266]; unstable size 266; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 266] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 266] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.30793643,  4.85469532, -0.91200435,  0.07975239,  0.11433142,
          0.44498542,  0.30451059,  1.77916300,  3.32840014]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.29587555, -13.48483086,  -6.09756279,  -7.41362858,  -5.89941597,
          -7.54863977,  -8.10572243,  -7.43977880, -10.08916378, -11.89095020]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.93743134, -13.31060886,  -5.83817673,  -7.27862358,  -6.16091633,
           -7.49989176,  -7.92654562,  -7.81988096,  -9.65338612, -11.76567936]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.32273960]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0056 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0400 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 175, vnnlib ID: 175 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.83441734, -11.65409756, -13.59377003, -13.34711456, -13.02464199,
         -13.48545742, -13.37795448, -12.43483543, -12.00513840,  -9.86730289]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [638]; unstable size 638; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 292, 1, 638] with unstable size 291 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 638] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 638] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [291]; unstable size 291; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 291] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 291] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.04846859,  1.83894682,  1.50338113,  1.00280237,  1.39925575,
          1.18970394,  0.10379413,  0.61262101, -1.38501215]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.83441734, -11.65409756, -13.59377003, -13.34711456, -13.02464199,
         -13.48545742, -13.37795448, -12.43483543, -12.00513840,  -9.86730289]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.18911934, -11.47594929, -14.00399876, -13.58273888, -13.39752102,
          -13.68156528, -13.77247524, -12.52532673, -12.20017910,  -9.48548031]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.70363903]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0053 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0423 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 176, vnnlib ID: 176 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.06950283, -10.63156986,  -6.67671871,  -6.37868023,  -6.73359871,
          -6.50309849,  -7.44396973,  -8.55093956,  -8.65787315, -10.48859119]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [583]; unstable size 583; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 187, 1, 583] with unstable size 186 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 10, 1, 583] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 583] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [186]; unstable size 186; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 10, 1, 186] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 186] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.66228348,  2.91003036, -0.61161280, -0.37437868, -0.12838531,
          0.54327869,  1.21973574,  1.01675737,  2.96338701]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.06950283, -10.63156986,  -6.67671871,  -6.37868023,  -6.73359871,
          -6.50309849,  -7.44396973,  -8.55093956,  -8.65787315, -10.48859119]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.35448074, -11.02279854,  -6.83222103,  -6.96178865,  -7.00913334,
           -7.09443521,  -7.94125366,  -8.94181538,  -9.05925179, -10.96881390],
         [ -8.35448074, -11.02279854,  -6.83222103,  -6.96178865,  -7.00913334,
           -7.09443521,  -7.94125366,  -8.94181538,  -9.05925179, -10.96881390]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.12956762,  0.04734468,  0.13264656]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0057 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0553 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 177, vnnlib ID: 177 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.68456459, -32.53074646, -22.78745079, -27.68545341, -28.40427208,
         -27.83055687, -30.00589561, -28.70033264, -29.08596420, -31.81694031]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [868]; unstable size 868; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 118, 1, 868] with unstable size 117 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 8, 1, 868] with unstable size 7 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 868] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [117]; unstable size 117; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 8, 1, 117] with unstable size 7 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 117] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [7]; unstable size 7; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.35312653, 8.74417496, 4.20461941, 4.84282970, 4.24144888, 6.39423656,
         5.11291981, 5.55689526, 8.21585178]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0459 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 178, vnnlib ID: 178 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -5.60622311, -13.14030361,  -7.17618370,  -8.58381081,  -7.30063725,
          -9.39536190, -10.97736740,  -8.69489574, -13.14762592, -13.82670879]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [636]; unstable size 636; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 149, 1, 636] with unstable size 148 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 636] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 636] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [148]; unstable size 148; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 148] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 148] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.19068098, 0.71572351, 1.81306088, 0.68747497, 2.54502153, 4.18923807,
         1.59729874, 6.44614649, 7.10734844]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0356 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 179, vnnlib ID: 179 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -2.84328127,  -9.61974049,  -5.05914211,  -8.02449036,  -6.49527788,
          -8.10750866,  -9.04593754,  -9.49392796,  -6.18774319, -10.90580273]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [499]; unstable size 499; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 153, 1, 499] with unstable size 152 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 499] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 499] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [152]; unstable size 152; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 152] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 152] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.54959440, 1.51223135, 4.22370243, 2.84299302, 4.27301931, 5.08756113,
         5.54216480, 2.37470055, 6.85313034]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0630 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 180, vnnlib ID: 180 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.90164661, -15.08635235,  -9.72878838,  -9.48129559,  -7.66526318,
          -8.64265442, -10.58757114,  -3.94943619, -14.45550442, -12.59689999]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [635]; unstable size 635; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 240, 1, 635] with unstable size 239 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 635] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 635] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [239]; unstable size 239; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 239] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 239] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.91279745, 8.85579300, 4.06592464, 3.92259693, 2.47752595, 3.07655334,
         4.65876579, 8.33458614, 6.58941174]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0630 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 181, vnnlib ID: 181 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-8.14476776, -8.54299259, -5.62799358, -7.28408384, -5.42767191,
         -7.26166582, -5.09700298, -8.12854862, -8.81086445, -8.40001583]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [561]; unstable size 561; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 200, 1, 561] with unstable size 199 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 561] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 561] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [199]; unstable size 199; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 199] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 199] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.70906806,  1.71759224, -0.59509242,  1.34409976, -0.63401079,
          1.15857649,  2.08130527,  2.03014350,  1.72439146]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-8.14476776, -8.54299259, -5.62799358, -7.28408384, -5.42767191,
         -7.26166582, -5.09700298, -8.12854862, -8.81086445, -8.40001583]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-8.20649433, -8.83073616, -5.63355064, -7.40713882, -5.33580017,
          -7.33170795, -5.46423101, -8.16074944, -8.97980404, -8.67313671],
         [-8.20649433, -8.83073616, -5.63355064, -7.40713882, -5.33580017,
          -7.33170795, -5.46423101, -8.16074944, -8.97980404, -8.67313671]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.16931963, -0.12843084]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0059 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0568 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 182, vnnlib ID: 182 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.62970924, -15.32867241, -14.02665234, -15.90782928, -15.88710308,
         -16.84171295, -16.61499405, -15.84648132, -15.30559063, -15.92606258]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [630]; unstable size 630; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 112, 1, 630] with unstable size 111 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 630] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 630] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [111]; unstable size 111; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 111] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 111] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.55479407, 0.65966964, 2.49934220, 2.45695758, 3.24221277, 3.17709970,
         2.06576109, 1.70381498, 2.33342171]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0329 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 183, vnnlib ID: 183 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.31477261, -14.64444065,  -8.04242039,  -9.54465961,  -7.47801971,
         -10.22035503,  -9.25665569, -10.87084675, -13.17573833, -14.46251965]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [785]; unstable size 785; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 441, 1, 785] with unstable size 440 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 30, 1, 785] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 785] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [440]; unstable size 440; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 30, 1, 440] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 440] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.74053097,  4.37037277, -0.76029527,  0.68074846,  0.98781800,
         -0.06960201,  1.50688016,  3.12951851,  4.10273933]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.31477261, -14.64444065,  -8.04242039,  -9.54465961,  -7.47801971,
         -10.22035503,  -9.25665569, -10.87084675, -13.17573833, -14.46251965]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.06it/s]100%|██████████| 1/1 [00:00<00:00,  9.05it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.97328854, -15.64343452,  -8.67847157, -10.54068565,  -8.60878944,
          -11.21894646, -10.33001900, -11.86674881, -13.97623920, -15.42976952],
         [-11.97328854, -15.64343452,  -8.67847157, -10.54068565,  -8.60878944,
          -11.21894646, -10.33001900, -11.86674881, -13.97623920, -15.42976952]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.06968212, 1.72122955]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1132 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 17.027103424072266
alpha/beta optimization time: 1.2027356624603271
initial alpha-crown bounds: tensor([[ 1.93041956,  4.51296043, -0.64870256,  0.80698407,  1.16863012,
          0.07121515,  1.61320746,  3.32261515,  4.24977398]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.6487025618553162
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.61573600769043
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.6156988143921
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.61567401885986
Verifying property 2 with 1 instances.
##### Instance 183 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.64870256]], device='cuda:0') need to verify.
Model prediction is: tensor([-11.31477261, -14.64444065,  -8.04242039,  -9.54465961,  -7.47801971,
        -10.22035503,  -9.25665569, -10.87084675, -13.17573833, -14.46251965],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.64870256]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 785
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 435
Node /15 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 1246
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00012445449829101562
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6486997604370117
10 lb beta sum: 0.0, worst -0.648701548576355
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0522    transfer 0.0001    finalize 0.0001    func 0.0527    
Accumulated time: func 0.0527    prepare 0.0002    bound 0.0522    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 54] 
split level 1: [/input-12, 1] 
split level 2: [/input-12, 11] 
split level 3: [/input-12, 13] 
split level 4: [/input-12, 44] 
split level 5: [/input-12, 51] 
split level 6: [/input-12, 72] 
split level 7: [/input-12, 26] 
split level 8: [/input-12, 82] 
split level 9: [/input-12, 68] 
split level 10: [/input-12, 93] 
split level 11: [/input-8, 1372] 
split level 12: [/input-8, 1058] 
split level 13: [/input-8, 1373] 
split level 14: [/input-8, 1564] 
split level 15: [/input-12, 9] 
split level 16: [/input-8, 1911] 
split level 17: [/input-12, 21] 
split level 18: [/input-8, 1356] 
split level 19: [/input-8, 1869] 
split level 20: [/input-8, 1057] 
split level 21: [/input-8, 1870] 
split level 22: [/input-8, 531] 
split level 23: [/input-8, 1878] 
split level 24: [/input-12, 64] 
split level 25: [/input-8, 1555] 
split level 26: [/input-8, 1299] 
split level 27: [/input-8, 1371] 
split level 28: [/input-8, 1362] 
split level 29: [/input-8, 1073] 
split level 30: [/input-8, 1066] 
split level 31: [/input-8, 532] 
split level 32: [/input-8, 1884] 
split level 33: [/input-8, 571] 
split level 34: [/input-8, 1363] 
split level 35: [/input-8, 1065] 
split level 36: [/input-8, 533] 
split level 37: [/input-8, 1563] 
split level 38: [/input-8, 523] 
split level 39: [/input-8, 1565] 
split level 40: [/input-8, 530] 
split level 41: [/input-8, 1894] 
split level 42: [/input-8, 1307] 
split level 43: [/input-8, 1074] 
split level 44: [/input-8, 682] 
split level 45: [/input-8, 1902] 
split level 46: [/input-8, 1883] 
split level 47: [/input-8, 1886] 
split level 48: [/input-8, 677] 
split level 49: [/input-8, 1354] 
split level 50: [/input-8, 1355] 
split level 51: [/input-8, 1549] 
split level 52: [/input-8, 2020] 
split level 53: [/input-8, 1381] 
split level 54: [/input-8, 666] 
split level 55: [/input-8, 1548] 
split level 56: [/input-8, 686] 
split level 57: [/input-8, 1297] 
split level 58: [/input-8, 642] 
split level 59: [/input-8, 460] 
split level 60: [/input-8, 1760] 
split level 61: [/input-8, 668] 
split level 62: [/input-8, 846] 
split level 63: [/input-8, 573] 
split level 64: [/input-8, 1361] 
split level 65: [/input-8, 1021] 
split level 66: [/input-8, 891] 
split level 67: [/input-8, 1083] 
split level 68: [/input-8, 681] 
split level 69: [/input-8, 1301] 
split level 70: [/input-8, 1915] 
split level 71: [/input-8, 1062] 
split level 72: [/input-8, 1077] 
split level 73: [/input-8, 684] 
split level 74: [/input-8, 1881] 
split level 75: [/input-8, 700] 
split level 76: [/input-8, 1877] 
split level 77: [/input-8, 1506] 
split level 78: [/input-8, 1369] 
split level 79: [/input-8, 1558] 
split level 80: [/input, 4006] 
split level 81: [/input-12, 28] 
split level 82: [/input-8, 1289] 
split level 83: [/input-8, 1143] 
split level 84: [/input-8, 546] 
split level 85: [/input-8, 860] 
split level 86: [/input-8, 1509] 
split level 87: [/input, 183] 
split level 88: [/input-8, 665] 
split level 89: [/input-8, 1505] 
split level 90: [/input-8, 1347] 
split level 91: [/input-8, 854] 
split level 92: [/input, 4003] 
split level 93: [/input-8, 1580] 
split level 94: [/input, 3273] 
split level 95: [/input, 390] 
split level 96: [/input-8, 1596] 
split level 97: [/input-8, 491] 
split level 98: [/input, 3988] 
split level 99: [/input-8, 990] 
split level 100: [/input-8, 1310] 
split level 101: [/input-8, 1876] 
split level 102: [/input-8, 83] 
split level 103: [/input-8, 673] 
split level 104: [/input-8, 1597] 
split level 105: [/input-8, 1339] 
split level 106: [/input-8, 2021] 
split level 107: [/input-8, 1836] 
split level 108: [/input-8, 884] 
split level 109: [/input-8, 517] 
split level 110: [/input, 4043] 
split level 111: [/input-8, 545] 
split level 112: [/input-8, 570] 
split level 113: [/input, 426] 
split level 114: [/input, 1188] 
split level 115: [/input, 2757] 
split level 116: [/input, 199] 
split level 117: [/input, 3236] 
split level 118: [/input-8, 1752] 
split level 119: [/input-8, 987] 
split level 120: [/input-12, 53] 
split level 121: [/input-8, 1547] 
split level 122: [/input, 4053] 
split level 123: [/input-8, 1437] 
split level 124: [/input-8, 515] 
split level 125: [/input-8, 1940] 
split level 126: [/input, 3223] 
split level 127: [/input-8, 947] 
split level 128: [/input-8, 1405] 
split level 129: [/input, 4044] 
split level 130: [/input-8, 917] 
split level 131: [/input-8, 1540] 
split level 132: [/input, 2617] 
split level 133: [/input-8, 1819] 
split level 134: [/input-8, 1402] 
split level 135: [/input-8, 1546] 
split level 136: [/input, 2517] 
split level 137: [/input-8, 1545] 
split level 138: [/input-8, 694] 
split level 139: [/input, 1386] 
split level 140: [/input-8, 988] 
split level 141: [/input, 387] 
split level 142: [/input, 3468] 
split level 143: [/input, 583] 
split level 144: [/input, 4055] 
split level 145: [/input, 3304] 
split level 146: [/input, 4072] 
split level 147: [/input-8, 514] 
split level 148: [/input, 456] 
split level 149: [/input, 2533] 
split level 150: [/input-8, 276] 
split level 151: [/input-8, 883] 
split level 152: [/input, 3205] 
split level 153: [/input-8, 1281] 
split level 154: [/input, 3243] 
split level 155: [/input-8, 1318] 
split level 156: [/input-8, 952] 
split level 157: [/input, 3230] 
split level 158: [/input-8, 1873] 
split level 159: [/input, 4054] 
split level 160: [/input, 3290] 
split level 161: [/input, 2461] 
split level 162: [/input-8, 1541] 
split level 163: [/input, 3241] 
split level 164: [/input, 3228] 
split level 165: [/input, 3255] 
split level 166: [/input-8, 2028] 
split level 167: [/input-8, 1775] 
split level 168: [/input-8, 998] 
split level 169: [/input-8, 1017] 
split level 170: [/input-8, 1539] 
split level 171: [/input-8, 569] 
split level 172: [/input, 3218] 
split level 173: [/input, 2493] 
split level 174: [/input, 2467] 
split level 175: [/input, 4002] 
split level 176: [/input, 2867] 
split level 177: [/input, 4035] 
split level 178: [/input-8, 1559] 
split level 179: [/input-8, 552] 
split level 180: [/input, 2348] 
split level 181: [/input-8, 98] 
split level 182: [/input, 3286] 
split level 183: [/input-8, 1524] 
split level 184: [/input-8, 2013] 
split level 185: [/input, 2883] 
split level 186: [/input-8, 467] 
split level 187: [/input-8, 985] 
split level 188: [/input, 2478] 
split level 189: [/input, 3246] 
split level 190: [/input-8, 1475] 
split level 191: [/input-8, 836] 
split level 192: [/input-8, 1439] 
split level 193: [/input-8, 461] 
split level 194: [/input, 4029] 
split level 195: [/input, 2734] 
split level 196: [/input-8, 558] 
split level 197: [/input, 2885] 
split level 198: [/input, 649] 
split level 199: [/input, 2543] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6486304998397827
10 lb beta sum: 0.0, worst -0.6486298441886902
Time: prepare 0.0118    bound 0.0996    transfer 0.0017    finalize 0.0031    func 0.1189    
Accumulated time: func 0.1716    prepare 0.0219    bound 0.1518    transfer 0.0018    finalize 0.0033    
all_split False
======================Cut inference begins======================
max lb tensor(-0.01551652) min lb tensor(-0.64861733)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.010646581649780273 
BICCOS Cumulative time: 0.010646581649780273
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.63266 (1), -0.63181 (1), -0.63171 (1), -0.63153 (1), -0.63097 (1), -0.63057 (1), -0.62999 (1), -0.62990 (1), -0.62917 (1), -0.62872 (1), -0.62614 (1), -0.62477 (1), -0.62431 (1), -0.62339 (1), -0.62303 (1), -0.62265 (1), -0.62257 (1), -0.62230 (1), -0.62227 (1), -0.62135 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5114    set_bounds 0.0099    solve 0.1190    add 0.0816    
Accumulated time: pickout 0.0003    decision 0.5114    set_bounds 0.0099    solve 0.1190    add 0.0816    
Current (lb-rhs): -0.6326593160629272
50 domains visited
Cumulative time: 0.8015656471252441

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] 
split level 1: [/input-12, 26] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 72] [/input-12, 26] 
split level 2: [/input-12, 72] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 72] 
split level 3: [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6041438579559326
10 lb beta sum: 0.0, worst -0.6032806634902954
Time: prepare 0.0128    bound 0.0992    transfer 0.0007    finalize 0.0025    func 0.1182    
Accumulated time: func 0.2898    prepare 0.0349    bound 0.2510    transfer 0.0026    finalize 0.0058    
all_split False
======================Cut inference begins======================
max lb tensor(0.36800909) min lb tensor(-0.60306144)
Number of Verified Splits: 59 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.019319772720336914 
BICCOS Cumulative time: 0.029966354370117188
Preprocessing time: 0.014685630798339844 Inference time: 0.0027840137481689453 Add cuts time: 0.0015571117401123047 Cut analysis time: 0.0002930164337158203
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.45763 (2), -0.45667 (2), -0.45442 (2), -0.45375 (2), -0.45297 (2), -0.45240 (2), -0.45240 (2), -0.45211 (2), -0.44602 (2), -0.44595 (2), -0.43917 (2), -0.43637 (2), -0.43430 (2), -0.43303 (2), -0.43122 (2), -0.42882 (2), -0.42760 (2), -0.42280 (2), -0.42162 (2), -0.41747 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0197    set_bounds 0.0132    solve 0.1183    add 0.0830    
Accumulated time: pickout 0.0015    decision 0.5311    set_bounds 0.0231    solve 0.2373    add 0.1647    
Current (lb-rhs): -0.4576277732849121
100 domains visited
Cumulative time: 1.056558609008789

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 1] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] 
split level 1: [/input-12, 26] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 26] [/input-12, 72] [/input-12, 1] [/input-12, 26] [/input-12, 1] [/input-12, 1] 
split level 2: [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 26] [/input-12, 72] [/input-12, 26] [/input-12, 26] [/input-12, 72] [/input-12, 26] [/input-12, 72] 
split level 3: [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 72] [/input-12, 82] [/input-12, 82] [/input-12, 72] [/input-12, 82] [/input-12, 72] [/input-12, 82] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4300520420074463
10 lb beta sum: 0.6145477890968323, worst -0.4293503165245056
Time: prepare 0.0064    bound 0.1161    transfer 0.0025    finalize 0.0032    func 0.1309    
Accumulated time: func 0.4208    prepare 0.0416    bound 0.3671    transfer 0.0051    finalize 0.0090    
all_split False
======================Cut inference begins======================
max lb tensor(0.29501963) min lb tensor(-0.42451519)
Number of Verified Splits: 67 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.017159700393676758 
BICCOS Cumulative time: 0.047126054763793945
Preprocessing time: 0.012028694152832031 Inference time: 0.003130197525024414 Add cuts time: 0.0017130374908447266 Cut analysis time: 0.00028777122497558594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17833 (3), -0.17712 (3), -0.17582 (3), -0.17505 (3), -0.17439 (3), -0.16764 (3), -0.16761 (3), -0.16675 (3), -0.16650 (3), -0.16602 (3), -0.15966 (3), -0.15853 (3), -0.15840 (3), -0.15837 (3), -0.15830 (3), -0.15744 (3), -0.13857 (3), -0.13778 (3), -0.13701 (3), -0.13665 (3), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0194    set_bounds 0.0154    solve 0.1311    add 0.0866    
Accumulated time: pickout 0.0025    decision 0.5506    set_bounds 0.0384    solve 0.3684    add 0.2513    
Current (lb-rhs): -0.17833101749420166
150 domains visited
Cumulative time: 1.3275058269500732

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] 
split level 1: [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] 
split level 2: [/input-12, 26] [/input-12, 72] [/input-12, 26] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] 
split level 3: [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19959425926208496
10 lb beta sum: 0.7670285701751709, worst -0.17973560094833374
Time: prepare 0.0063    bound 0.1157    transfer 0.0008    finalize 0.0019    func 0.1273    
Accumulated time: func 0.5481    prepare 0.0481    bound 0.4828    transfer 0.0059    finalize 0.0110    
all_split False
======================Cut inference begins======================
max lb tensor(0.29197931) min lb tensor(-0.17422366)
Number of Verified Splits: 194 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 5
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.027410268783569336 
BICCOS Cumulative time: 0.07453632354736328
Preprocessing time: 0.012122154235839844 Inference time: 0.011506080627441406 Add cuts time: 0.0033693313598632812 Cut analysis time: 0.0004127025604248047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10329 (4), -0.10092 (4), -0.09934 (4), -0.09898 (4), -0.09885 (4), -0.09863 (4), -0.09858 (4), -0.09853 (4), -0.09691 (4), -0.09688 (4), -0.09657 (4), -0.09622 (4), -0.09587 (4), -0.09449 (4), -0.09447 (4), -0.09407 (4), -0.09327 (4), -0.09163 (4), -0.09159 (4), -0.09117 (4), 
Length of domains: 50
Time: pickout 0.0009    decision 0.0197    set_bounds 0.0160    solve 0.1275    add 0.2350    
Accumulated time: pickout 0.0034    decision 0.5703    set_bounds 0.0544    solve 0.4959    add 0.4864    
Current (lb-rhs): -0.1032874584197998
200 domains visited
Cumulative time: 1.754418134689331

Shallow-BaB round 5
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] 
split level 1: [/input-12, 72] [/input-12, 72] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 51] [/input-12, 51] 
split level 2: [/input-12, 82] [/input-12, 82] [/input-12, 72] [/input-12, 72] [/input-12, 82] [/input-12, 72] [/input-12, 72] [/input-12, 82] [/input-12, 26] [/input-12, 26] 
split level 3: [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12425756454467773
10 lb beta sum: 0.8836163878440857, worst -0.10730558633804321
Time: prepare 0.0062    bound 0.1151    transfer 0.0008    finalize 0.0029    func 0.1276    
Accumulated time: func 0.6757    prepare 0.0546    bound 0.5979    transfer 0.0066    finalize 0.0138    
all_split False
======================Cut inference begins======================
max lb tensor(0.31959593) min lb tensor(-0.10137945)
Number of Verified Splits: 178 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 5
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.02600240707397461 
BICCOS Cumulative time: 0.10053873062133789
Preprocessing time: 0.011930465698242188 Inference time: 0.010698556900024414 Add cuts time: 0.0028276443481445312 Cut analysis time: 0.0005457401275634766
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02888 (5), -0.02862 (5), -0.02831 (5), -0.02819 (5), -0.02778 (5), -0.02774 (5), -0.02760 (5), -0.02751 (5), -0.02725 (5), -0.02693 (5), -0.02669 (5), -0.02584 (5), -0.02566 (5), -0.02486 (5), -0.02471 (5), -0.02439 (5), -0.02425 (5), -0.02348 (5), -0.02277 (5), -0.02169 (5), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0195    set_bounds 0.0180    solve 0.1278    add 0.1149    
Accumulated time: pickout 0.0044    decision 0.5898    set_bounds 0.0724    solve 0.6237    add 0.6012    
Current (lb-rhs): -0.028877973556518555
250 domains visited
Cumulative time: 2.0619213581085205

Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([28,  1, 72]), tensor([-1., -1., -1.]), tensor([0, 0, 0]), tensor([-5.34988755e-21,  1.11574277e-01,  7.56640881e-02]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([28,  1, 72, 26, 54]), tensor([-1., -1.,  1., -1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([-5.34988755e-21,  1.11574277e-01,  1.83467194e-01,  7.14197606e-02,
         3.29055727e-01]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([28,  1, 72, 26, 54]), tensor([-1., -1.,  1., -1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([-5.34988755e-21,  1.11574277e-01,  1.83467194e-01,  7.14197606e-02,
         1.11299623e-02]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([28,  1, 72, 26, 54]), tensor([-1., -1.,  1.,  1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([-5.34988755e-21,  1.11574277e-01,  1.83467194e-01,  6.28490895e-02,
         3.14734280e-01]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([28,  1, 72, 26, 54]), tensor([-1., -1.,  1.,  1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([-5.34988755e-21,  1.11574277e-01,  1.83467194e-01,  6.28490895e-02,
         1.05641354e-02]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([28,  1, 26, 82, 54]), tensor([-1.,  1., -1., -1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([-5.34988755e-21,  1.77105650e-01,  1.09279439e-01,  7.20046014e-02,
         3.37687790e-01]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([28,  1, 26, 82, 54]), tensor([-1.,  1., -1., -1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([-5.34988755e-21,  1.77105650e-01,  1.09279439e-01,  7.20046014e-02,
         2.29351385e-03]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([28,  1, 26, 82, 54]), tensor([-1.,  1., -1.,  1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([-5.34988755e-21,  1.77105650e-01,  1.09279439e-01,  3.95992249e-02,
         3.47324729e-01]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([28,  1, 26, 82, 54]), tensor([-1.,  1., -1.,  1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([-5.34988755e-21,  1.77105650e-01,  1.09279439e-01,  3.95992249e-02,
         6.96729263e-03]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([28,  1, 26, 82, 54]), tensor([-1.,  1.,  1., -1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([-5.34988755e-21,  1.77105650e-01,  1.01476535e-01,  7.15657324e-02,
         3.31104934e-01]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([28,  1, 26, 82, 54]), tensor([-1.,  1.,  1., -1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([-5.34988755e-21,  1.77105650e-01,  1.01476535e-01,  7.15657324e-02,
         3.93502554e-03]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([28,  1, 26, 82, 54]), tensor([-1.,  1.,  1.,  1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([-5.34988755e-21,  1.77105650e-01,  1.01476535e-01,  4.20057625e-02,
         3.34317386e-01]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([28,  1, 26, 82, 54]), tensor([-1.,  1.,  1.,  1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([-5.34988755e-21,  1.77105650e-01,  1.01476535e-01,  4.20057625e-02,
         6.70318445e-03]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([28]), tensor([1.]), tensor([0]), tensor([-5.34988755e-21]), tensor([0]))}
Shallow branching resets to n domains:  14
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6479568481445312
10 lb beta sum: 0.4899132549762726, worst -0.6125632524490356
Time: prepare 0.0006    bound 0.1121    transfer 0.0002    finalize 0.0002    func 0.1134    
Accumulated time: func 0.7891    prepare 0.0552    bound 0.7101    transfer 0.0069    finalize 0.0140    
After pruning, left:  8

Back to Regular BaB

BaB round 1
batch: 8
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 54] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 51] [/input-12, 44] [/input-12, 44] [/input-12, 54] 
split level 1: [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 44] [/input-12, 51] [/input-12, 51] [/input-12, 1] 
split level 2: [/input-12, 26] [/input-12, 82] [/input-12, 82] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 26] 
split level 3: [/input-12, 82] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 72] 
split level 4: [/input-12, 93] [/input-8, 1057] [/input-8, 1057] [/input-8, 1057] [/input-8, 1057] [/input-8, 1057] [/input-8, 1057] [/input-12, 82] 
cut re-enabled after branching node selection
0 lb beta sum: 1.0258398056030273, worst -0.36570990085601807
10 lb beta sum: 1.026059865951538, worst -0.36419677734375
Time: prepare 0.0112    bound 0.1148    transfer 0.0006    finalize 0.0020    func 0.1303    
Accumulated time: func 0.9194    prepare 0.0667    bound 0.8249    transfer 0.0074    finalize 0.0161    
all_split False
======================Cut inference begins======================
max lb tensor(0.34318650) min lb tensor(-0.36353815)
Number of Verified Splits: 232 of 256
Stop inferencing: Max iteration reached.
Total number of valid cuts: 13.
#cuts 1-3: 5
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.0003864765167236328 
BICCOS Cumulative time: 0.10092520713806152
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.36354 (5), -0.36271 (5), -0.35309 (5), -0.35298 (5), -0.32920 (5), -0.32398 (5), -0.32216 (5), -0.31578 (5), -0.30802 (5), -0.30209 (5), -0.29779 (5), -0.29043 (5), -0.27680 (5), -0.26871 (5), -0.26540 (5), -0.24024 (5), -0.07496 (5), -0.07129 (5), -0.06359 (5), -0.06024 (5), 
Length of domains: 24
Time: pickout 0.0007    decision 0.0190    set_bounds 0.0190    solve 0.1304    add 0.0046    
Accumulated time: pickout 0.0051    decision 0.6088    set_bounds 0.0915    solve 0.7541    add 0.6058    
Current (lb-rhs): -0.36353814601898193
274 domains visited
Cumulative time: 2.406477451324463

BaB round 2
batch: 24
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] 
split level 1: [/input-12, 51] [/input-8, 1057] [/input-12, 51] [/input-12, 51] [/input-8, 1058] [/input-12, 51] [/input-12, 51] [/input-8, 1058] [/input-12, 51] [/input-12, 51] 
split level 2: [/input-12, 93] [/input-8, 1066] [/input-12, 93] [/input-12, 93] [/input-8, 1057] [/input-12, 93] [/input-12, 93] [/input-8, 1057] [/input-12, 93] [/input-12, 93] 
split level 3: [/input-8, 1057] [/input-8, 1555] [/input-8, 1057] [/input-8, 1057] [/input-8, 1066] [/input-8, 1057] [/input-8, 1555] [/input-8, 1066] [/input-8, 1057] [/input-12, 9] 
cut re-enabled after branching node selection
0 lb beta sum: 1.264083743095398, worst -0.28022003173828125
10 lb beta sum: 1.2724741697311401, worst -0.2792612314224243
Time: prepare 0.0168    bound 0.1143    transfer 0.0007    finalize 0.0032    func 0.1375    
Accumulated time: func 1.0569    prepare 0.0838    bound 0.9392    transfer 0.0081    finalize 0.0193    
all_split False
======================Cut inference begins======================
max lb tensor(0.19332540) min lb tensor(-0.27885103)
Number of Verified Splits: 196 of 384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 13.
#cuts 1-3: 5
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.00037360191345214844 
BICCOS Cumulative time: 0.10129880905151367
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.27885 (9), -0.27578 (9), -0.27268 (9), -0.27225 (9), -0.27133 (9), -0.27001 (9), -0.26817 (9), -0.26287 (9), -0.26257 (9), -0.26075 (9), -0.26050 (9), -0.25912 (9), -0.25044 (9), -0.24929 (9), -0.24374 (9), -0.23968 (9), -0.23935 (9), -0.23726 (9), -0.23664 (9), -0.23470 (9), 
Length of domains: 188
Time: pickout 0.0012    decision 0.0185    set_bounds 0.0263    solve 0.1377    add 0.0018    
Accumulated time: pickout 0.0063    decision 0.6272    set_bounds 0.1177    solve 0.8918    add 0.6076    
Current (lb-rhs): -0.2788510322570801
462 domains visited
Cumulative time: 2.593444585800171

BaB round 3
batch: 188
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1058] [/input-8, 1058] [/input-12, 9] [/input-8, 1058] [/input-8, 1057] [/input-12, 9] [/input-8, 1057] [/input-8, 1057] [/input-8, 1058] [/input-8, 1058] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2796720266342163, worst -0.2757840156555176
10 lb beta sum: 1.2796720266342163, worst -0.2753788232803345
Time: prepare 0.0172    bound 0.1173    transfer 0.0008    finalize 0.0034    func 0.1412    
Accumulated time: func 1.1981    prepare 0.1012    bound 1.0565    transfer 0.0089    finalize 0.0227    
all_split False
======================Cut inference begins======================
max lb tensor(0.25708926) min lb tensor(-0.27518594)
Number of Verified Splits: 68 of 376
Stop inferencing: Max iteration reached.
Total number of valid cuts: 13.
#cuts 1-3: 5
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.0004696846008300781 
BICCOS Cumulative time: 0.10176849365234375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.27519 (10), -0.27390 (10), -0.26773 (10), -0.26720 (10), -0.26692 (10), -0.26531 (10), -0.26311 (10), -0.25851 (10), -0.25736 (10), -0.25615 (10), -0.25531 (10), -0.25470 (10), -0.24598 (10), -0.24395 (10), -0.23776 (10), -0.23414 (10), -0.23377 (10), -0.23349 (10), -0.23341 (10), -0.23340 (10), 
Length of domains: 308
Time: pickout 0.0030    decision 0.0210    set_bounds 0.0148    solve 0.1413    add 0.0023    
Accumulated time: pickout 0.0092    decision 0.6482    set_bounds 0.1326    solve 1.0331    add 0.6099    
Current (lb-rhs): -0.2751859426498413
770 domains visited
Cumulative time: 2.7773101329803467

BaB round 4
batch: 308
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 9] [/input-12, 9] [/input-8, 1058] [/input-12, 9] [/input-12, 9] [/input-8, 1299] [/input-8, 1555] [/input-8, 1299] [/input-12, 9] [/input-12, 9] 
cut re-enabled after branching node selection
0 lb beta sum: 1.282454013824463, worst -0.27390217781066895
10 lb beta sum: 1.282454013824463, worst -0.2736928462982178
Time: prepare 0.0283    bound 0.1266    transfer 0.0031    finalize 0.0035    func 0.1656    
Accumulated time: func 1.3637    prepare 0.1298    bound 1.1831    transfer 0.0120    finalize 0.0262    
all_split False
======================Cut inference begins======================
max lb tensor(0.21344125) min lb tensor(-0.27355278)
Number of Verified Splits: 161 of 616
Stop inferencing: Max iteration reached.
Total number of valid cuts: 13.
#cuts 1-3: 5
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.0003962516784667969 
BICCOS Cumulative time: 0.10216474533081055
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.27355 (11), -0.27100 (11), -0.26717 (11), -0.26650 (11), -0.26487 (11), -0.26278 (11), -0.25828 (11), -0.25779 (11), -0.25699 (11), -0.25462 (11), -0.25417 (11), -0.24689 (11), -0.24551 (11), -0.24372 (11), -0.23702 (11), -0.23342 (11), -0.23253 (11), -0.23234 (11), -0.23127 (11), -0.22992 (11), 
Length of domains: 455
Time: pickout 0.0049    decision 0.0295    set_bounds 0.0260    solve 0.1658    add 0.0034    
Accumulated time: pickout 0.0141    decision 0.6777    set_bounds 0.1585    solve 1.1989    add 0.6133    
Current (lb-rhs): -0.2735527753829956
1225 domains visited
Cumulative time: 3.009018659591675

BaB round 5
batch: 455
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1555] [/input-8, 1299] [/input-8, 1555] [/input-8, 1299] [/input-8, 1058] [/input-8, 1299] [/input-8, 1555] [/input-12, 68] [/input-12, 68] [/input-12, 68] 
cut re-enabled after branching node selection
0 lb beta sum: 1.283561110496521, worst -0.26482629776000977
10 lb beta sum: 1.283561110496521, worst -0.26461684703826904
Time: prepare 0.0454    bound 0.1260    transfer 0.0044    finalize 0.0058    func 0.1875    
Accumulated time: func 1.5512    prepare 0.1753    bound 1.3092    transfer 0.0164    finalize 0.0320    
all_split False
======================Cut inference begins======================
max lb tensor(0.26854408) min lb tensor(-0.26454151)
Number of Verified Splits: 230 of 910
Stop inferencing: Max iteration reached.
Total number of valid cuts: 13.
#cuts 1-3: 5
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.00043964385986328125 
BICCOS Cumulative time: 0.10260438919067383
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.26454 (12), -0.26452 (12), -0.26216 (12), -0.25817 (12), -0.25803 (12), -0.25754 (12), -0.25531 (12), -0.25403 (12), -0.25398 (12), -0.25000 (12), -0.24927 (12), -0.24822 (12), -0.24666 (12), -0.24540 (12), -0.24144 (12), -0.23456 (12), -0.22912 (12), -0.22863 (12), -0.22746 (12), -0.22405 (12), 
Length of domains: 680
Time: pickout 0.0083    decision 0.0389    set_bounds 0.0441    solve 0.1878    add 0.0031    
Accumulated time: pickout 0.0224    decision 0.7166    set_bounds 0.2026    solve 1.3867    add 0.6164    
Current (lb-rhs): -0.26454150676727295
1905 domains visited
Cumulative time: 3.2937862873077393

BaB round 6
batch: 680
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1299] [/input-8, 1555] [/input-8, 1299] [/input-12, 68] [/input-8, 1555] [/input-8, 1548] [/input-12, 68] [/input-8, 1299] [/input-8, 1555] [/input-12, 68] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2842068672180176, worst -0.2590533494949341
10 lb beta sum: 1.2842068672180176, worst -0.2589759826660156
Time: prepare 0.0633    bound 0.3208    transfer 0.0073    finalize 0.0069    func 0.4071    
Accumulated time: func 1.9584    prepare 0.2389    bound 1.6300    transfer 0.0237    finalize 0.0388    
all_split False
======================Cut inference begins======================
max lb tensor(0.27417117) min lb tensor(-0.25894415)
Number of Verified Splits: 210 of 1360
Stop inferencing: Max iteration reached.
Total number of valid cuts: 13.
#cuts 1-3: 5
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.00043272972106933594 
BICCOS Cumulative time: 0.10303711891174316
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25894 (13), -0.25801 (13), -0.25386 (13), -0.25352 (13), -0.25269 (13), -0.25178 (13), -0.25092 (13), -0.24878 (13), -0.24833 (13), -0.24720 (13), -0.24460 (13), -0.24353 (13), -0.24278 (13), -0.24261 (13), -0.24223 (13), -0.24099 (13), -0.24079 (13), -0.23954 (13), -0.23646 (13), -0.23621 (13), 
Length of domains: 1150
Time: pickout 0.0093    decision 0.0494    set_bounds 0.0574    solve 0.4085    add 0.0052    
Accumulated time: pickout 0.0318    decision 0.7660    set_bounds 0.2600    solve 1.7952    add 0.6217    
Current (lb-rhs): -0.25894415378570557
3055 domains visited
Cumulative time: 3.8267016410827637

BaB round 7
batch: 1150
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1548] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2837305068969727, worst -0.25288236141204834
10 lb beta sum: 1.2837305068969727, worst -0.25275909900665283
Time: prepare 0.1050    bound 0.1616    transfer 0.0113    finalize 0.0125    func 0.3065    
Accumulated time: func 2.2649    prepare 0.3441    bound 1.7916    transfer 0.0350    finalize 0.0513    
all_split False
======================Cut inference begins======================
max lb tensor(0.27893889) min lb tensor(-0.25270426)
Number of Verified Splits: 224 of 2300
Stop inferencing: Max iteration reached.
Total number of valid cuts: 13.
#cuts 1-3: 5
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.0004932880401611328 
BICCOS Cumulative time: 0.1035304069519043
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25270 (14), -0.25224 (14), -0.24787 (14), -0.24763 (14), -0.24717 (14), -0.24695 (14), -0.24634 (14), -0.24495 (14), -0.24363 (14), -0.24152 (14), -0.24140 (14), -0.24087 (14), -0.24013 (14), -0.23957 (14), -0.23945 (14), -0.23815 (14), -0.23745 (14), -0.23726 (14), -0.23673 (14), -0.23564 (14), 
Length of domains: 2076
Time: pickout 0.0164    decision 0.0756    set_bounds 0.0968    solve 0.3070    add 0.0140    
Accumulated time: pickout 0.0482    decision 0.8416    set_bounds 0.3569    solve 2.1022    add 0.6357    
Current (lb-rhs): -0.2527042627334595
5131 domains visited
Cumulative time: 4.340744972229004

BaB round 8
batch: 2076
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 68] [/input-8, 532] [/input-8, 523] [/input-8, 1886] [/input-8, 1363] [/input-8, 523] [/input-8, 1564] [/input-8, 1886] [/input-8, 1356] [/input-8, 523] 
cut re-enabled after branching node selection
0 lb beta sum: 1.282981038093567, worst -0.24901163578033447
10 lb beta sum: 1.282981038093567, worst -0.24886369705200195
Time: prepare 0.1906    bound 0.2395    transfer 0.0332    finalize 0.1717    func 0.6644    
Accumulated time: func 2.9292    prepare 0.5349    bound 2.0311    transfer 0.0682    finalize 0.2230    
all_split False
======================Cut inference begins======================
max lb tensor(0.27775246) min lb tensor(-0.24882269)
Number of Verified Splits: 300 of 4152
Stop inferencing: Max iteration reached.
Total number of valid cuts: 13.
#cuts 1-3: 5
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.0005543231964111328 
BICCOS Cumulative time: 0.10408473014831543
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.24882 (15), -0.24881 (15), -0.24242 (15), -0.24240 (15), -0.24181 (15), -0.24176 (15), -0.24121 (15), -0.24032 (15), -0.23974 (15), -0.23807 (15), -0.23718 (15), -0.23662 (15), -0.23552 (15), -0.23431 (15), -0.23430 (15), -0.23430 (15), -0.23401 (15), -0.23343 (15), -0.23341 (15), -0.23323 (15), 
Length of domains: 3852
Time: pickout 0.0288    decision 0.1260    set_bounds 0.1769    solve 0.6657    add 0.0228    
Accumulated time: pickout 0.0770    decision 0.9676    set_bounds 0.5338    solve 2.7679    add 0.6585    
Current (lb-rhs): -0.24882268905639648
8983 domains visited
Cumulative time: 5.3673341274261475

BaB round 9
batch: 3852
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1363] [/input-8, 1307] [/input-8, 682] [/input-8, 1356] [/input-8, 1555] [/input-8, 531] [/input-8, 1058] [/input-8, 532] [/input-8, 1555] [/input-8, 682] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2825329303741455, worst -0.24412643909454346
10 lb beta sum: 1.2825329303741455, worst -0.24404537677764893
Time: prepare 0.3549    bound 0.3877    transfer 0.0467    finalize 0.0397    func 0.8785    
Accumulated time: func 3.8078    prepare 0.8901    bound 2.4188    transfer 0.1149    finalize 0.2627    
all_split False
======================Cut inference begins======================
max lb tensor(0.02409542) min lb tensor(-0.24400055)
Number of Verified Splits: 539 of 7704
Stop inferencing: Max iteration reached.
Total number of valid cuts: 13.
#cuts 1-3: 5
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.0007915496826171875 
BICCOS Cumulative time: 0.10487627983093262
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.24400 (16), -0.24229 (16), -0.23758 (16), -0.23704 (16), -0.23570 (16), -0.23524 (16), -0.23513 (16), -0.23492 (16), -0.23476 (16), -0.23475 (16), -0.23392 (16), -0.23219 (16), -0.23209 (16), -0.23172 (16), -0.23156 (16), -0.23032 (16), -0.23009 (16), -0.22998 (16), -0.22966 (16), -0.22916 (16), 
Length of domains: 7165
Time: pickout 0.0726    decision 0.2227    set_bounds 0.5023    solve 0.8804    add 0.0484    
Accumulated time: pickout 0.1496    decision 1.1902    set_bounds 1.0360    solve 3.6483    add 0.7068    
Current (lb-rhs): -0.24400055408477783
16148 domains visited
Cumulative time: 7.105172634124756

BaB round 10
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 523] [/input-8, 1555] [/input-8, 1363] [/input-8, 1878] [/input-8, 682] [/input-8, 1066] [/input-8, 1555] [/input-8, 1363] [/input-8, 1307] [/input-8, 1886] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2822651863098145, worst -0.23805475234985352
10 lb beta sum: 1.2822651863098145, worst -0.23794138431549072
Time: prepare 0.3761    bound 0.4063    transfer 0.0128    finalize 0.0381    func 0.8869    
Accumulated time: func 4.6947    prepare 1.2665    bound 2.8251    transfer 0.1277    finalize 0.3009    
all_split False
======================Cut inference begins======================
max lb tensor(0.02679563) min lb tensor(-0.23786747)
Number of Verified Splits: 488 of 8192
Stop inferencing: Max iteration reached.
Total number of valid cuts: 13.
#cuts 1-3: 5
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.0005946159362792969 
BICCOS Cumulative time: 0.10547089576721191
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23787 (17), -0.23767 (17), -0.23392 (16), -0.23171 (17), -0.23159 (17), -0.23153 (17), -0.23138 (17), -0.23050 (17), -0.23034 (17), -0.23013 (17), -0.23009 (16), -0.22919 (17), -0.22874 (17), -0.22845 (17), -0.22819 (17), -0.22794 (17), -0.22720 (17), -0.22699 (17), -0.22647 (16), -0.22604 (17), 
Length of domains: 10773
Time: pickout 0.0596    decision 0.2336    set_bounds 0.5607    solve 0.8884    add 0.0437    
Accumulated time: pickout 0.2093    decision 1.4239    set_bounds 1.5967    solve 4.5367    add 0.7506    
Current (lb-rhs): -0.23786747455596924
23852 domains visited
current_vram/total_varm: 12.0GB/99.9GB, batch_size increase to 8192
Cumulative time: 8.905027151107788

BaB round 11
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 682] [/input-8, 666] [/input-8, 1555] [/input-8, 523] [/input-8, 1558] [/input-8, 1902] [/input-8, 523] [/input-8, 1066] [/input-8, 531] [/input-8, 1902] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2821080684661865, worst -0.23314392566680908
10 lb beta sum: 1.2821080684661865, worst -0.2330186367034912
Time: prepare 0.7528    bound 0.7490    transfer 0.1088    finalize 0.1132    func 1.8305    
Accumulated time: func 6.5252    prepare 2.0197    bound 3.5742    transfer 0.2365    finalize 0.4141    
all_split False
======================Cut inference begins======================
max lb tensor(0.02603245) min lb tensor(-0.23295856)
Number of Verified Splits: 1075 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 13.
#cuts 1-3: 5
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.0006515979766845703 
BICCOS Cumulative time: 0.10612249374389648
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23296 (18), -0.23281 (18), -0.22924 (17), -0.22919 (17), -0.22819 (17), -0.22672 (18), -0.22627 (18), -0.22550 (17), -0.22537 (18), -0.22530 (18), -0.22527 (18), -0.22523 (18), -0.22510 (18), -0.22497 (18), -0.22477 (18), -0.22385 (18), -0.22365 (18), -0.22227 (18), -0.22211 (18), -0.22137 (17), 
Length of domains: 17890
Time: pickout 0.1141    decision 0.6811    set_bounds 0.9511    solve 1.8341    add 0.0742    
Accumulated time: pickout 0.3234    decision 2.1050    set_bounds 2.5479    solve 6.3708    add 0.8248    
Current (lb-rhs): -0.23295855522155762
39161 domains visited
current_vram/total_varm: 19.2GB/99.9GB, batch_size increase to 16384
Cumulative time: 12.586602687835693

BaB round 12
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1301] [/input-8, 1902] [/input-8, 1301] [/input-8, 1058] [/input-8, 1548] [/input-8, 1363] [/input-8, 533] [/input-8, 1301] [/input-8, 1558] [/input-8, 682] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2818245887756348, worst -0.22790825366973877
10 lb beta sum: 1.2818245887756348, worst -0.22781455516815186
Time: prepare 1.5795    bound 1.4369    transfer 0.2487    finalize 0.1695    func 3.6463    
Accumulated time: func 10.1714    prepare 3.5997    bound 5.0111    transfer 0.4853    finalize 0.5835    
all_split False
======================Cut inference begins======================
max lb tensor(0.02722657) min lb tensor(-0.22776985)
Number of Verified Splits: 2178 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 13.
#cuts 1-3: 5
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.0007297992706298828 
BICCOS Cumulative time: 0.10685229301452637
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22777 (19), -0.22728 (19), -0.22537 (18), -0.22497 (18), -0.22462 (18), -0.22458 (19), -0.22415 (19), -0.22402 (18), -0.22365 (18), -0.22115 (19), -0.22096 (19), -0.22075 (19), -0.22070 (18), -0.22063 (18), -0.22055 (19), -0.21955 (18), -0.21919 (19), -0.21911 (19), -0.21883 (18), -0.21881 (18), 
Length of domains: 32096
Time: pickout 0.2386    decision 1.6981    set_bounds 2.0232    solve 3.6522    add 0.1339    
Accumulated time: pickout 0.5620    decision 3.8031    set_bounds 4.5710    solve 10.0230    add 0.9587    
Current (lb-rhs): -0.2277698516845703
69751 domains visited
current_vram/total_varm: 26.7GB/99.9GB, batch_size increase to 32768
Cumulative time: 20.40270209312439

BaB round 13
batch: 32096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 682] [/input-8, 1066] [/input-8, 1301] [/input-8, 532] [/input-8, 1363] [/input-8, 1363] [/input-8, 1307] [/input-8, 1066] [/input-8, 1356] [/input-8, 1363] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2814849615097046, worst -0.22457575798034668
10 lb beta sum: 1.2814849615097046, worst -0.22453129291534424
Time: prepare 2.9282    bound 2.7641    transfer 0.5980    finalize 0.4316    func 7.5718    
Accumulated time: func 17.7432    prepare 6.5284    bound 7.7752    transfer 1.0832    finalize 1.0151    
all_split False
======================Cut inference begins======================
max lb tensor(0.02874815) min lb tensor(-0.22449303)
Number of Verified Splits: 4366 of 64192
Stop inferencing: Max iteration reached.
Total number of valid cuts: 13.
#cuts 1-3: 5
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.0009617805480957031 
BICCOS Cumulative time: 0.10781407356262207
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22449 (20), -0.22134 (20), -0.22133 (20), -0.21981 (19), -0.21921 (19), -0.21901 (20), -0.21899 (19), -0.21874 (19), -0.21847 (19), -0.21809 (20), -0.21761 (20), -0.21748 (20), -0.21709 (19), -0.21667 (19), -0.21586 (19), -0.21576 (20), -0.21542 (20), -0.21529 (20), -0.21520 (19), -0.21509 (20), 
Length of domains: 59826
Time: pickout 0.5964    decision 3.8762    set_bounds 3.6944    solve 7.5818    add 0.2384    
Accumulated time: pickout 1.1585    decision 7.6793    set_bounds 8.2654    solve 17.6048    add 1.1971    
Current (lb-rhs): -0.22449302673339844
129577 domains visited
Cumulative time: 36.50137257575989

BaB round 14
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1307] [/input-8, 682] [/input-8, 532] [/input-8, 1058] [/input-8, 1066] [/input-8, 1356] [/input-8, 1564] [/input-8, 1363] [/input-8, 1363] [/input-8, 1356] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2811212539672852, worst -0.22153699398040771
10 lb beta sum: 1.2811212539672852, worst -0.22146213054656982
Time: prepare 3.0530    bound 8.0138    transfer 0.6248    finalize 1.0989    func 13.2284    
Accumulated time: func 30.9716    prepare 9.5818    bound 15.7890    transfer 1.7081    finalize 2.1141    
all_split False
======================Cut inference begins======================
max lb tensor(0.02565014) min lb tensor(-0.22142518)
Number of Verified Splits: 4744 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 13.
#cuts 1-3: 5
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.000965118408203125 
BICCOS Cumulative time: 0.1087791919708252
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22143 (21), -0.22134 (20), -0.21921 (19), -0.21893 (21), -0.21847 (19), -0.21809 (20), -0.21586 (19), -0.21554 (20), -0.21529 (20), -0.21494 (20), -0.21488 (21), -0.21475 (21), -0.21468 (19), -0.21447 (21), -0.21396 (19), -0.21392 (20), -0.21377 (20), -0.21271 (20), -0.21248 (21), -0.21235 (21), 
Length of domains: 87850
Time: pickout 0.4730    decision 3.4011    set_bounds 3.6295    solve 13.2408    add 0.2980    
Accumulated time: pickout 1.6315    decision 11.0803    set_bounds 11.8949    solve 30.8456    add 1.4951    
Current (lb-rhs): -0.22142517566680908
190369 domains visited
Cumulative time: 57.672773122787476

BaB round 15
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1299] [/input-8, 1548] [/input-8, 1307] [/input-8, 682] [/input-8, 1356] [/input-8, 1356] [/input-8, 682] [/input-8, 532] [/input-8, 682] [/input-8, 1564] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2810368537902832, worst -0.21712350845336914
10 lb beta sum: 1.2810368537902832, worst -0.21708166599273682
Time: prepare 3.0387    bound 8.0186    transfer 0.6162    finalize 0.4752    func 13.3684    
Accumulated time: func 44.3401    prepare 12.6209    bound 23.8075    transfer 2.3243    finalize 2.5893    
all_split False
======================Cut inference begins======================
max lb tensor(0.02649152) min lb tensor(-0.21705949)
Number of Verified Splits: 4908 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 13.
#cuts 1-3: 5
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.0009427070617675781 
BICCOS Cumulative time: 0.10972189903259277
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22143 (21), -0.21893 (21), -0.21706 (21), -0.21554 (20), -0.21526 (20), -0.21488 (21), -0.21475 (21), -0.21447 (21), -0.21377 (20), -0.21375 (21), -0.21370 (20), -0.21271 (20), -0.21248 (21), -0.21235 (21), -0.21197 (21), -0.21182 (21), -0.21144 (20), -0.21144 (21), -0.21140 (21), -0.21135 (21), 
Length of domains: 115710
Time: pickout 0.4754    decision 3.5349    set_bounds 3.7804    solve 13.3787    add 0.2274    
Accumulated time: pickout 2.1069    decision 14.6153    set_bounds 15.6753    solve 44.2243    add 1.7225    
Current (lb-rhs): -0.22142517566680908
250997 domains visited
Cumulative time: 79.22044086456299

BaB round 16
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1307] [/input-8, 1363] [/input-8, 1356] [/input-8, 1307] [/input-8, 532] [/input-8, 1878] [/input-8, 682] [/input-8, 1356] [/input-8, 1878] [/input-8, 523] 
cut re-enabled after branching node selection
0 lb beta sum: 1.280693769454956, worst -0.2161346673965454
10 lb beta sum: 1.280693769454956, worst -0.21604466438293457
Time: prepare 3.0788    bound 8.0174    transfer 0.6274    finalize 1.4089    func 13.5667    
Accumulated time: func 57.9067    prepare 15.7002    bound 31.8249    transfer 2.9517    finalize 3.9981    
all_split False
======================Cut inference begins======================
max lb tensor(0.02400947) min lb tensor(-0.21601343)
Number of Verified Splits: 4891 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 13.
#cuts 1-3: 5
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.0009729862213134766 
BICCOS Cumulative time: 0.11069488525390625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21706 (21), -0.21601 (22), -0.21526 (20), -0.21475 (21), -0.21375 (21), -0.21370 (20), -0.21353 (22), -0.21329 (22), -0.21302 (21), -0.21182 (21), -0.21144 (21), -0.21140 (21), -0.21135 (21), -0.21110 (21), -0.21081 (22), -0.21056 (20), -0.21052 (20), -0.20977 (21), -0.20946 (20), -0.20926 (21), 
Length of domains: 143587
Time: pickout 0.5147    decision 3.3649    set_bounds 3.8933    solve 13.5780    add 0.2301    
Accumulated time: pickout 2.6216    decision 17.9802    set_bounds 19.5686    solve 57.8023    add 1.9526    
Current (lb-rhs): -0.21705949306488037
311642 domains visited
Cumulative time: 100.96239948272705

BaB round 17
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 666] [/input-8, 1356] [/input-8, 1883] [/input-8, 1356] [/input-8, 1555] [/input-8, 523] [/input-8, 533] [/input-8, 1307] [/input-8, 1548] [/input-8, 1878] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2806904315948486, worst -0.21213412284851074
10 lb beta sum: 1.2806904315948486, worst -0.21201825141906738
Time: prepare 3.0628    bound 8.0067    transfer 0.6314    finalize 1.5550    func 13.6915    
Accumulated time: func 71.5982    prepare 18.7635    bound 39.8316    transfer 3.5830    finalize 5.5531    
all_split False
======================Cut inference begins======================
max lb tensor(0.02610409) min lb tensor(-0.21194899)
Number of Verified Splits: 5142 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 13.
#cuts 1-3: 5
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.0009639263153076172 
BICCOS Cumulative time: 0.11165881156921387
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21706 (21), -0.21601 (22), -0.21375 (21), -0.21353 (22), -0.21329 (22), -0.21302 (21), -0.21195 (21), -0.21182 (21), -0.21140 (21), -0.21110 (21), -0.21081 (22), -0.21060 (22), -0.21056 (20), -0.20946 (20), -0.20926 (21), -0.20926 (22), -0.20925 (21), -0.20923 (21), -0.20911 (21), -0.20897 (22), 
Length of domains: 171213
Time: pickout 0.5215    decision 3.3341    set_bounds 4.1297    solve 13.7033    add 0.2420    
Accumulated time: pickout 3.1432    decision 21.3143    set_bounds 23.6983    solve 71.5056    add 2.1946    
Current (lb-rhs): -0.21705949306488037
372036 domains visited
Cumulative time: 123.05645203590393

BaB round 18
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 531] [/input-8, 682] [/input-8, 1356] [/input-8, 531] [/input-8, 1886] [/input-8, 531] [/input-8, 1356] [/input-8, 1354] [/input-8, 1355] [/input-8, 1356] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2805877923965454, worst -0.21314632892608643
10 lb beta sum: 1.2805877923965454, worst -0.21310579776763916
Time: prepare 3.1071    bound 8.0151    transfer 0.6339    finalize 0.5111    func 12.7094    
Accumulated time: func 84.3077    prepare 21.8712    bound 47.8467    transfer 4.2170    finalize 6.0642    
all_split False
======================Cut inference begins======================
max lb tensor(0.02582085) min lb tensor(-0.21308172)
Number of Verified Splits: 5081 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 13.
#cuts 1-3: 5
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.0011527538299560547 
BICCOS Cumulative time: 0.11281156539916992
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21601 (22), -0.21375 (21), -0.21353 (22), -0.21329 (22), -0.21308 (22), -0.21302 (21), -0.21195 (21), -0.21081 (22), -0.21060 (22), -0.20926 (22), -0.20925 (21), -0.20923 (21), -0.20911 (21), -0.20897 (22), -0.20870 (22), -0.20857 (21), -0.20809 (21), -0.20728 (22), -0.20700 (21), -0.20699 (22), 
Length of domains: 198900
Time: pickout 0.5222    decision 3.3290    set_bounds 4.3076    solve 12.7243    add 0.2471    
Accumulated time: pickout 3.6654    decision 24.6432    set_bounds 28.0059    solve 84.2299    add 2.4418    
Current (lb-rhs): -0.21601343154907227
432491 domains visited
Cumulative time: 144.39098596572876

BaB round 19
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1356] [/input-8, 682] [/input-8, 523] [/input-8, 1564] [/input-8, 1356] [/input-8, 1363] [/input-8, 1902] [/input-8, 1363] [/input-8, 1307] [/input-8, 1363] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2804514169692993, worst -0.20984244346618652
10 lb beta sum: 1.2804514169692993, worst -0.20985496044158936
Time: prepare 3.1416    bound 8.0140    transfer 0.6559    finalize 0.5765    func 12.8265    
Accumulated time: func 97.1341    prepare 25.0134    bound 55.8607    transfer 4.8729    finalize 6.6406    
all_split False
======================Cut inference begins======================
max lb tensor(0.16796547) min lb tensor(-0.20976484)
Number of Verified Splits: 5256 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 13.
#cuts 1-3: 5
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.001123189926147461 
BICCOS Cumulative time: 0.11393475532531738
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21601 (22), -0.21329 (22), -0.21308 (22), -0.21302 (21), -0.21195 (21), -0.21081 (22), -0.21060 (22), -0.20976 (22), -0.20936 (23), -0.20926 (22), -0.20925 (21), -0.20923 (21), -0.20911 (21), -0.20897 (22), -0.20870 (22), -0.20857 (21), -0.20728 (22), -0.20699 (22), -0.20685 (22), -0.20684 (22), 
Length of domains: 226412
Time: pickout 0.5152    decision 4.5341    set_bounds 4.6514    solve 12.8398    add 0.2386    
Accumulated time: pickout 4.1806    decision 29.1774    set_bounds 32.6573    solve 97.0696    add 2.6803    
Current (lb-rhs): -0.21601343154907227
492771 domains visited
Cumulative time: 167.3910813331604

BaB round 20
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1878] [/input-8, 1870] [/input-8, 1066] [/input-8, 1558] [/input-8, 533] [/input-8, 531] [/input-8, 1363] [/input-8, 1307] [/input-8, 1066] [/input-8, 1356] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2802799940109253, worst -0.2118748426437378
10 lb beta sum: 1.2802799940109253, worst -0.21185123920440674
Time: prepare 3.2039    bound 8.0065    transfer 0.6612    finalize 0.5943    func 12.9085    
Accumulated time: func 110.0426    prepare 28.2179    bound 63.8671    transfer 5.5341    finalize 7.2349    
all_split False
======================Cut inference begins======================
max lb tensor(0.18435282) min lb tensor(-0.21182847)
Number of Verified Splits: 5325 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 13.
#cuts 1-3: 5
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.03314661979675293 
BICCOS Cumulative time: 0.1470813751220703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21308 (22), -0.21195 (21), -0.21183 (23), -0.21060 (22), -0.20976 (22), -0.20936 (23), -0.20925 (21), -0.20911 (21), -0.20897 (23), -0.20870 (22), -0.20857 (21), -0.20759 (22), -0.20728 (22), -0.20699 (22), -0.20684 (22), -0.20650 (23), -0.20644 (22), -0.20631 (22), -0.20625 (22), -0.20600 (21), 
Length of domains: 253855
Time: pickout 0.5171    decision 3.3373    set_bounds 4.7296    solve 12.9223    add 0.2705    
Accumulated time: pickout 4.6977    decision 32.5146    set_bounds 37.3869    solve 109.9919    add 2.9508    
Current (lb-rhs): -0.2130817174911499
552982 domains visited
Cumulative time: 189.41803884506226

BaB round 21
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1301] [/input-8, 682] [/input-8, 1548] [/input-8, 1307] [/input-8, 1902] [/input-8, 1062] [/input-8, 532] [/input-8, 531] [/input-8, 1883] [/input-8, 1356] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2803077697753906, worst -0.20725679397583008
10 lb beta sum: 1.2803077697753906, worst -0.20717358589172363
Time: prepare 3.0625    bound 8.0184    transfer 0.6612    finalize 0.6011    func 12.7663    
Accumulated time: func 122.8089    prepare 31.2808    bound 71.8855    transfer 6.1953    finalize 7.8360    
all_split False
======================Cut inference begins======================
max lb tensor(0.14730763) min lb tensor(-0.20715404)
Number of Verified Splits: 5491 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 13.
#cuts 1-3: 5
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.0010673999786376953 
BICCOS Cumulative time: 0.148148775100708
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21308 (22), -0.21195 (21), -0.21183 (23), -0.20976 (22), -0.20936 (23), -0.20925 (21), -0.20897 (23), -0.20870 (22), -0.20759 (22), -0.20715 (23), -0.20699 (22), -0.20684 (22), -0.20650 (23), -0.20644 (22), -0.20631 (22), -0.20600 (21), -0.20583 (21), -0.20549 (21), -0.20538 (22), -0.20526 (21), 
Length of domains: 281132
Time: pickout 0.5200    decision 4.9553    set_bounds 3.2498    solve 12.7819    add 0.2235    
Accumulated time: pickout 5.2177    decision 37.4699    set_bounds 40.6367    solve 122.7738    add 3.1743    
Current (lb-rhs): -0.2130817174911499
613027 domains visited
Time out!!!!!!!!
Result: unknown in 214.5553 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 184, vnnlib ID: 184 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -5.89069843,  -6.00872993,  -9.81441784,  -9.48617077,  -8.76289272,
         -10.92080116, -10.39973545,  -9.59434032,  -4.95132399,  -4.38216209]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [578]; unstable size 578; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 156, 1, 578] with unstable size 155 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 578] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 578] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [155]; unstable size 155; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 155] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 155] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.10634089,  0.71801579,  3.55015564,  3.86298299,  2.74121571,
          5.07143831,  4.74717522,  3.53826141, -1.04089260]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -5.89069843,  -6.00872993,  -9.81441784,  -9.48617077,  -8.76289272,
         -10.92080116, -10.39973545,  -9.59434032,  -4.95132399,  -4.38216209]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.24040604,  -6.51685905,  -9.96843529,  -9.76380062,  -9.11704445,
          -11.15218353, -10.71066093, -10.13462257,  -4.86371136,  -4.98990440]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.12619305]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0062 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.1002 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 185, vnnlib ID: 185 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-8.37633038, -6.56312561, -6.81894398, -6.27486277, -5.78229427,
         -6.83015299, -6.31567955, -6.65800142, -9.07024956, -5.04341173]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [539]; unstable size 539; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 221, 1, 539] with unstable size 220 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 539] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 539] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [220]; unstable size 220; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 220] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 220] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.97405195,  0.32927644,  0.17750072, -0.10494566, -0.85372543,
          0.32606602, -0.43116426, -0.31671739,  2.66897106]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-8.37633038, -6.56312561, -6.81894398, -6.27486277, -5.78229427,
         -6.83015299, -6.31567955, -6.65800142, -9.07024956, -5.04341173]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-8.12968159, -6.54487228, -6.24013519, -5.73320532, -5.06740761,
          -6.21982479, -5.72114992, -6.02204561, -8.81664181, -5.19222641],
         [-8.12968159, -6.54487228, -6.24013519, -5.73320532, -5.06740761,
          -6.21982479, -5.72114992, -6.02204561, -8.81664181, -5.19222641]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.54097891, -0.12481880,  0.52892351,  0.82981920]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0057 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0820 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 186, vnnlib ID: 186 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.47806835, -16.40879250, -15.09305000, -16.23484230, -16.50166130,
         -18.09269333, -17.71716118, -17.61732292,  -9.91329861, -15.71094036]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [596]; unstable size 596; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 185, 1, 596] with unstable size 184 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 596] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 596] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [184]; unstable size 184; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 184] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 184] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.06263375, 4.58382511, 3.51261377, 4.72654152, 4.75524139, 6.32470608,
         6.04849148, 5.57820702, 4.16677761]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0619 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 187, vnnlib ID: 187 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -6.08897448, -10.08986378,  -7.39640045,  -7.25407028,  -6.58082294,
          -7.96594858,  -7.83635616,  -8.88062477,  -5.43441010,  -7.92518377]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [737]; unstable size 737; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 236, 1, 737] with unstable size 235 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 737] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 737] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [235]; unstable size 235; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 235] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 235] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.51290488,  2.97313166,  0.25002050,  0.22753680, -0.42947221,
          0.68455642,  0.85951900,  1.57969701,  0.97213173]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.08897448, -10.08986378,  -7.39640045,  -7.25407028,  -6.58082294,
          -7.96594858,  -7.83635616,  -8.88062477,  -5.43441010,  -7.92518377]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.27it/s]100%|██████████| 1/1 [00:00<00:00,  9.27it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.76056576, -9.90643501, -7.24392986, -7.12848854, -6.38653946,
          -7.83770800, -7.66693401, -8.70800304, -5.73674393, -7.76976919],
         [-5.76056576, -9.90643501, -7.24392986, -7.12848854, -6.38653946,
          -7.83770800, -7.66693401, -8.70800304, -5.73674393, -7.76976919]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.02382183, 0.64979553]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1105 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 7.152826309204102
alpha/beta optimization time: 1.1670923233032227
initial alpha-crown bounds: tensor([[-0.46917975,  3.03084254,  0.32193470,  0.28774792, -0.37226629,
          0.75499588,  0.91308200,  1.66521299,  1.02045631]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.46917974948883057
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6434509754181
Verifying property 0 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.46917975]], device='cuda:0') need to verify.
Model prediction is: tensor([ -6.08897448, -10.08986378,  -7.39640045,  -7.25407028,  -6.58082294,
         -7.96594858,  -7.83635616,  -8.88062477,  -5.43441010,  -7.92518377],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.46917975]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 737
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 228
Node /15 input 0: size torch.Size([100]) unstable 18
-----------------
# of unstable neurons: 983
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00018262863159179688
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.46917736530303955
10 lb beta sum: 0.0, worst -0.46917957067489624
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0519    transfer 0.0001    finalize 0.0001    func 0.0524    
Accumulated time: func 0.0524    prepare 0.0002    bound 0.0519    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 60] 
split level 1: [/input-12, 58] 
split level 2: [/input-12, 10] 
split level 3: [/input-12, 1] 
split level 4: [/input-12, 92] 
split level 5: [/input-8, 1956] 
split level 6: [/input-8, 884] 
split level 7: [/input-12, 36] 
split level 8: [/input-8, 539] 
split level 9: [/input-8, 1884] 
split level 10: [/input-8, 875] 
split level 11: [/input-8, 1892] 
split level 12: [/input-8, 1052] 
split level 13: [/input-12, 61] 
split level 14: [/input, 3512] 
split level 15: [/input-12, 55] 
split level 16: [/input-8, 508] 
split level 17: [/input-8, 1881] 
split level 18: [/input-8, 684] 
split level 19: [/input-8, 538] 
split level 20: [/input, 2521] 
split level 21: [/input-8, 92] 
split level 22: [/input-8, 867] 
split level 23: [/input-12, 45] 
split level 24: [/input, 3513] 
split level 25: [/input-8, 556] 
split level 26: [/input-8, 1061] 
split level 27: [/input-8, 499] 
split level 28: [/input-8, 1876] 
split level 29: [/input, 2232] 
split level 30: [/input-8, 659] 
split level 31: [/input-8, 1900] 
split level 32: [/input-8, 1910] 
split level 33: [/input-8, 100] 
split level 34: [/input-8, 84] 
split level 35: [/input, 1463] 
split level 36: [/input-8, 988] 
split level 37: [/input-12, 37] 
split level 38: [/input-8, 1116] 
split level 39: [/input, 3529] 
split level 40: [/input-8, 1888] 
split level 41: [/input, 2248] 
split level 42: [/input-8, 1460] 
split level 43: [/input-8, 1049] 
split level 44: [/input-8, 90] 
split level 45: [/input-8, 996] 
split level 46: [/input, 2264] 
split level 47: [/input, 1497] 
split level 48: [/input-8, 1425] 
split level 49: [/input-8, 1909] 
split level 50: [/input-8, 1298] 
split level 51: [/input-8, 541] 
split level 52: [/input-8, 667] 
split level 53: [/input, 3272] 
split level 54: [/input-8, 1003] 
split level 55: [/input-8, 93] 
split level 56: [/input, 2494] 
split level 57: [/input-8, 1893] 
split level 58: [/input-8, 1866] 
split level 59: [/input, 2472] 
split level 60: [/input-8, 507] 
split level 61: [/input-8, 319] 
split level 62: [/input, 174] 
split level 63: [/input-8, 1361] 
split level 64: [/input, 1466] 
split level 65: [/input-8, 1107] 
split level 66: [/input, 3165] 
split level 67: [/input, 1482] 
split level 68: [/input-8, 1098] 
split level 69: [/input-8, 1369] 
split level 70: [/input-8, 642] 
split level 71: [/input, 2506] 
split level 72: [/input-8, 500] 
split level 73: [/input, 365] 
split level 74: [/input-8, 510] 
split level 75: [/input, 1736] 
split level 76: [/input-8, 1259] 
split level 77: [/input-8, 944] 
split level 78: [/input, 3274] 
split level 79: [/input, 395] 
split level 80: [/input-8, 1041] 
split level 81: [/input-8, 492] 
split level 82: [/input-8, 1353] 
split level 83: [/input, 3018] 
split level 84: [/input-8, 1583] 
split level 85: [/input, 3254] 
split level 86: [/input-8, 1249] 
split level 87: [/input, 3257] 
split level 88: [/input, 2433] 
split level 89: [/input, 3287] 
split level 90: [/input, 3258] 
split level 91: [/input, 2473] 
split level 92: [/input-8, 1867] 
split level 93: [/input-8, 1106] 
split level 94: [/input-8, 1908] 
split level 95: [/input-8, 1293] 
split level 96: [/input-8, 1941] 
split level 97: [/input, 103] 
split level 98: [/input, 3306] 
split level 99: [/input, 3271] 
split level 100: [/input, 2449] 
split level 101: [/input-8, 1461] 
split level 102: [/input-8, 2021] 
split level 103: [/input-12, 72] 
split level 104: [/input, 1717] 
split level 105: [/input-8, 1373] 
split level 106: [/input-8, 694] 
split level 107: [/input, 3278] 
split level 108: [/input-8, 1305] 
split level 109: [/input, 2470] 
split level 110: [/input, 2446] 
split level 111: [/input, 3215] 
split level 112: [/input, 2524] 
split level 113: [/input, 426] 
split level 114: [/input, 2474] 
split level 115: [/input, 2455] 
split level 116: [/input, 3289] 
split level 117: [/input, 2386] 
split level 118: [/input, 3229] 
split level 119: [/input, 1703] 
split level 120: [/input, 3277] 
split level 121: [/input-8, 801] 
split level 122: [/input, 3182] 
split level 123: [/input, 3998] 
split level 124: [/input, 3305] 
split level 125: [/input, 3186] 
split level 126: [/input, 2936] 
split level 127: [/input, 3290] 
split level 128: [/input, 3246] 
split level 129: [/input, 1357] 
split level 130: [/input, 2515] 
split level 131: [/input-8, 1767] 
split level 132: [/input, 3170] 
split level 133: [/input-8, 1887] 
split level 134: [/input, 3245] 
split level 135: [/input, 2510] 
split level 136: [/input, 3269] 
split level 137: [/input, 3688] 
split level 138: [/input, 104] 
split level 139: [/input, 1563] 
split level 140: [/input, 3672] 
split level 141: [/input, 91] 
split level 142: [/input, 366] 
split level 143: [/input-8, 1534] 
split level 144: [/input, 3299] 
split level 145: [/input, 2398] 
split level 146: [/input, 2397] 
split level 147: [/input-8, 394] 
split level 148: [/input-8, 1377] 
split level 149: [/input-8, 1001] 
split level 150: [/input-8, 1430] 
split level 151: [/input, 2076] 
split level 152: [/input, 2251] 
split level 153: [/input, 2413] 
split level 154: [/input, 1576] 
split level 155: [/input, 2463] 
split level 156: [/input, 2540] 
split level 157: [/input-8, 1803] 
split level 158: [/input, 3260] 
split level 159: [/input, 2478] 
split level 160: [/input, 1579] 
split level 161: [/input-8, 1121] 
split level 162: [/input-8, 1047] 
split level 163: [/input, 3054] 
split level 164: [/input, 3532] 
split level 165: [/input, 3786] 
split level 166: [/input, 2092] 
split level 167: [/input, 2696] 
split level 168: [/input, 1618] 
split level 169: [/input, 3202] 
split level 170: [/input-8, 1424] 
split level 171: [/input-8, 648] 
split level 172: [/input, 3915] 
split level 173: [/input, 394] 
split level 174: [/input, 1733] 
split level 175: [/input-8, 1422] 
split level 176: [/input, 3250] 
split level 177: [/input, 407] 
split level 178: [/input-8, 649] 
split level 179: [/input-8, 980] 
split level 180: [/input, 2401] 
split level 181: [/input, 1650] 
split level 182: [/input, 3153] 
split level 183: [/input, 3977] 
split level 184: [/input, 3195] 
split level 185: [/input, 1594] 
split level 186: [/input, 1560] 
split level 187: [/input, 3834] 
split level 188: [/input, 3475] 
split level 189: [/input, 3052] 
split level 190: [/input, 1558] 
split level 191: [/input, 1569] 
split level 192: [/input, 1438] 
split level 193: [/input, 3833] 
split level 194: [/input, 3974] 
split level 195: [/input, 2412] 
split level 196: [/input, 3917] 
split level 197: [/input, 392] 
split level 198: [/input, 3832] 
split level 199: [/input, 1592] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.46913063526153564
10 lb beta sum: 0.0, worst -0.4691336154937744
Time: prepare 0.0117    bound 0.0949    transfer 0.0027    finalize 0.0027    func 0.1145    
Accumulated time: func 0.1669    prepare 0.0217    bound 0.1468    transfer 0.0028    finalize 0.0028    
all_split False
======================Cut inference begins======================
max lb tensor(0.20137072) min lb tensor(-0.46913064)
Number of Verified Splits: 3 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.010817289352416992 
BICCOS Cumulative time: 0.010817289352416992
Preprocessing time: 0.009995460510253906 Inference time: 0.0001556873321533203 Add cuts time: 8.20159912109375e-05 Cut analysis time: 0.0005841255187988281
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.45634 (1), -0.45630 (1), -0.45597 (1), -0.45538 (1), -0.45497 (1), -0.45487 (1), -0.45482 (1), -0.45451 (1), -0.45408 (1), -0.45407 (1), -0.45389 (1), -0.45371 (1), -0.45325 (1), -0.45284 (1), -0.45103 (1), -0.44987 (1), -0.44986 (1), -0.44822 (1), -0.44822 (1), -0.44779 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5036    set_bounds 0.0086    solve 0.1145    add 0.1363    
Accumulated time: pickout 0.0003    decision 0.5036    set_bounds 0.0086    solve 0.1145    add 0.1363    
Current (lb-rhs): -0.4563368558883667
50 domains visited
Cumulative time: 0.8422591686248779

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 60] [/input-12, 60] [/input-12, 1] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 10] [/input-12, 60] 
split level 1: [/input-12, 1] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 92] [/input-12, 10] 
split level 2: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 92] 
split level 3: [/input-8, 100] [/input-8, 556] [/input-8, 1956] [/input-8, 1003] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-8, 1881] [/input-12, 1] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4495891332626343
10 lb beta sum: 0.5860037207603455, worst -0.4427413046360016
Time: prepare 0.0084    bound 0.1145    transfer 0.0007    finalize 0.0024    func 0.1286    
Accumulated time: func 0.2955    prepare 0.0304    bound 0.2613    transfer 0.0035    finalize 0.0052    
all_split False
======================Cut inference begins======================
max lb tensor(0.30997211) min lb tensor(-0.44269568)
Number of Verified Splits: 19 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.013180971145629883 
BICCOS Cumulative time: 0.023998260498046875
Preprocessing time: 0.011776924133300781 Inference time: 0.0007853507995605469 Add cuts time: 0.00030612945556640625 Cut analysis time: 0.00031256675720214844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10253 (2), -0.10252 (2), -0.10240 (2), -0.10159 (2), -0.10135 (2), -0.10072 (2), -0.10033 (2), -0.10012 (2), -0.09994 (2), -0.09992 (2), -0.09976 (2), -0.09954 (2), -0.09702 (2), -0.09374 (2), -0.09239 (2), -0.09198 (2), -0.09112 (2), -0.09101 (2), -0.09091 (2), -0.09079 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0258    set_bounds 0.0116    solve 0.1287    add 0.1827    
Accumulated time: pickout 0.0014    decision 0.5294    set_bounds 0.0202    solve 0.2432    add 0.3190    
Current (lb-rhs): -0.10253065824508667
100 domains visited
Cumulative time: 1.2124202251434326

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 60] [/input-12, 60] [/input-12, 1] [/input-12, 1] [/input-12, 60] [/input-12, 1] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] 
split level 1: [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] 
split level 2: [/input-12, 92] [/input-12, 92] [/input-12, 61] [/input-8, 1956] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] 
split level 3: [/input-8, 556] [/input-8, 556] [/input-8, 1003] [/input-12, 61] [/input-8, 556] [/input-8, 1900] [/input-8, 556] [/input-8, 556] [/input-8, 556] [/input-8, 556] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10243630409240723
10 lb beta sum: 0.9573812484741211, worst -0.07350566983222961
Time: prepare 0.0089    bound 0.1298    transfer 0.0008    finalize 0.0025    func 0.1446    
Accumulated time: func 0.4401    prepare 0.0395    bound 0.3911    transfer 0.0043    finalize 0.0076    
all_split False
======================Cut inference begins======================
max lb tensor(0.50515866) min lb tensor(-0.06758726)
Number of Verified Splits: 381 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.037156105041503906 
BICCOS Cumulative time: 0.06115436553955078
Preprocessing time: 0.0119476318359375 Inference time: 0.015789270401000977 Add cuts time: 0.009099721908569336 Cut analysis time: 0.00031948089599609375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06648 (3), -0.06646 (3), -0.06573 (3), -0.06571 (3), -0.05539 (3), -0.05526 (3), -0.04889 (3), -0.04318 (3), -0.03955 (3), -0.03895 (3), 
Length of domains: 10
Time: pickout 0.0078    decision 0.0193    set_bounds 0.0156    solve 0.1447    add 0.1029    
Accumulated time: pickout 0.0092    decision 0.5486    set_bounds 0.0358    solve 0.3879    add 0.4219    
Current (lb-rhs): -0.06647813320159912
110 domains visited
Cumulative time: 1.5401673316955566

Shallow-BaB round 4
batch: 10
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 1: [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 10] [/input-12, 1] [/input-12, 10] 
split level 2: [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] 
split level 3: [/input-8, 884] [/input-8, 884] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-8, 884] [/input-8, 884] [/input-8, 884] [/input-8, 884] 
split level 4: [/input-8, 1052] [/input-8, 1052] [/input-8, 884] [/input-8, 884] [/input-8, 884] [/input-8, 884] [/input-8, 1052] [/input-8, 1052] [/input-8, 1052] [/input-8, 1052] 
split level 5: [/input-8, 875] [/input-8, 875] [/input-8, 1052] [/input-8, 1052] [/input-8, 1892] [/input-8, 1052] [/input-8, 875] [/input-8, 875] [/input-8, 875] [/input-8, 875] 
split level 6: [/input-8, 1892] [/input-8, 1892] [/input-8, 875] [/input-8, 875] [/input-8, 1052] [/input-8, 875] [/input-8, 1892] [/input-8, 1892] [/input-8, 1892] [/input-8, 1892] 
split level 7: [/input-12, 61] [/input-12, 61] [/input-8, 1892] [/input-12, 55] [/input-8, 875] [/input-8, 1892] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] 
split level 8: [/input-12, 55] [/input-12, 55] [/input-12, 55] [/input-12, 61] [/input-12, 55] [/input-12, 55] [/input-12, 55] [/input-12, 55] [/input-12, 55] [/input-12, 55] 
split level 9: [/input-8, 1881] [/input-8, 1881] [/input-8, 1881] [/input-8, 1892] [/input-12, 61] [/input-8, 1881] [/input-8, 1881] [/input-8, 1881] [/input-8, 1881] [/input-8, 1881] 
split level 10: [/input-8, 1061] [/input-8, 1061] [/input-8, 538] [/input-8, 1881] [/input-8, 1881] [/input-8, 538] [/input-8, 1900] [/input-8, 1900] [/input-8, 1900] [/input-8, 1900] 
split level 11: [/input-8, 1900] [/input-8, 1900] [/input-8, 1900] [/input-8, 538] [/input-8, 538] [/input-8, 1900] [/input-8, 538] [/input-8, 538] [/input-8, 538] [/input-8, 538] 
split level 12: [/input-8, 538] [/input-8, 538] [/input-8, 1061] [/input-8, 867] [/input-8, 1061] [/input-8, 1061] [/input-8, 1061] [/input-8, 1061] [/input-8, 1061] [/input-8, 1061] 
split level 13: [/input-8, 867] [/input-8, 867] [/input-8, 867] [/input, 1463] [/input-8, 867] [/input, 1463] [/input-8, 867] [/input-8, 867] [/input-8, 867] [/input-8, 867] 
split level 14: [/input, 1463] [/input, 1463] [/input-8, 1460] [/input-8, 1061] [/input, 1463] [/input-8, 867] [/input, 1463] [/input, 1463] [/input, 1463] [/input, 1463] 
split level 15: [/input-8, 1460] [/input-8, 1460] [/input-12, 37] [/input-8, 1460] [/input-8, 1460] [/input-8, 1460] [/input-8, 1460] [/input-8, 1460] [/input-8, 1460] [/input-8, 1460] 
split level 16: [/input-8, 100] [/input-8, 100] [/input-8, 100] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] 
split level 17: [/input-12, 37] [/input-12, 37] [/input-8, 1909] [/input-8, 100] [/input-8, 100] [/input, 3529] [/input, 3529] [/input-8, 100] [/input, 3529] [/input-8, 100] 
split level 18: [/input, 3529] [/input, 3529] [/input-8, 1003] [/input, 3529] [/input, 3529] [/input-8, 100] [/input-8, 100] [/input, 3529] [/input-8, 100] [/input, 3529] 
split level 19: [/input-8, 1941] [/input-8, 1941] [/input-8, 1941] [/input-8, 1941] [/input-8, 1941] [/input-8, 1941] [/input-8, 1941] [/input-8, 1941] [/input-8, 1941] [/input-8, 1941] 
cut re-enabled after branching node selection
0 lb beta sum: 1.0788079500198364, worst -0.2880156636238098
10 lb beta sum: 1.3399749994277954, worst -0.03714478015899658
Time: prepare 0.0185    bound 0.1158    transfer 0.0008    finalize 0.0025    func 0.1407    
Accumulated time: func 0.5808    prepare 0.0590    bound 0.5070    transfer 0.0051    finalize 0.0101    
all_split False
======================Cut inference begins======================
max lb tensor(0.52888572) min lb tensor(-0.03311904)
Number of Verified Splits: 98 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 8
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.01915287971496582 
BICCOS Cumulative time: 0.0803072452545166
Preprocessing time: 0.011777162551879883 Inference time: 0.0041637420654296875 Add cuts time: 0.002667665481567383 Cut analysis time: 0.0005443096160888672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01300 (4), -0.01299 (4), -0.01299 (4), -0.01299 (4), -0.01294 (4), -0.01259 (4), -0.01244 (4), -0.01242 (4), -0.01233 (4), -0.01202 (4), -0.01192 (4), -0.01170 (4), -0.01168 (4), -0.01163 (4), -0.01101 (4), -0.01101 (4), -0.01083 (4), -0.01071 (4), -0.01004 (4), -0.00999 (4), 
Length of domains: 50
Time: pickout 0.0007    decision 0.0620    set_bounds 0.0160    solve 0.1409    add 0.2404    
Accumulated time: pickout 0.0100    decision 0.6107    set_bounds 0.0519    solve 0.5288    add 0.6623    
Current (lb-rhs): -0.013003885746002197
160 domains visited
Cumulative time: 2.019577980041504

Shallow-BaB round 5
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 58] [/input-12, 1] [/input-12, 58] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] 
split level 1: [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 1] [/input-12, 10] [/input-12, 1] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] 
split level 2: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 10] [/input-12, 92] [/input-12, 10] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] 
split level 3: [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 92] [/input-12, 61] [/input-12, 92] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07483291625976562
10 lb beta sum: 0.8150559663772583, worst -0.022416815161705017
Time: prepare 0.0094    bound 0.1325    transfer 0.0010    finalize 0.0024    func 0.1485    
Accumulated time: func 0.7293    prepare 0.0687    bound 0.6395    transfer 0.0061    finalize 0.0125    
all_split False
======================Cut inference begins======================
max lb tensor(0.10647202) min lb tensor(-0.00765538)
Number of Verified Splits: 308 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.03606748580932617 
BICCOS Cumulative time: 0.11637473106384277
Preprocessing time: 0.011755704879760742 Inference time: 0.014262199401855469 Add cuts time: 0.009701967239379883 Cut analysis time: 0.0003476142883300781
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0012    decision 0.0198    set_bounds 0.0157    solve 0.1486    add 0.0271    
Accumulated time: pickout 0.0111    decision 0.6305    set_bounds 0.0676    solve 0.6774    add 0.6894    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
160 domains visited
No domains left, MTS early stop!
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([60,  1]), tensor([-1., -1.]), tensor([0, 0]), tensor([-5.34985524e-21,  1.87777150e-02]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([60,  1, 10]), tensor([-1.,  1., -1.]), tensor([0, 0, 0]), tensor([-5.34985524e-21,  3.48195076e-01,  1.16625413e-01]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([60,  1, 10]), tensor([-1.,  1.,  1.]), tensor([0, 0, 0]), tensor([-5.34985524e-21,  3.48195076e-01,  5.91161996e-02]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([1956, 1900, 1881], [-1.0, -1.0, -1.0], [0, 0, 0], [0.10593028366565704, 0.04608966410160065, 0.04355792701244354], [1, 2, 3]), '/input-12': (tensor([60,  1]), tensor([ 1., -1.]), tensor([0, 0]), tensor([1.71803833e-08, 9.48159583e-03]), tensor([0, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([1956, 1900, 1881], [-1.0, -1.0, -1.0], [0, 0, 0], [0.10593028366565704, 0.04608966410160065, 0.04355792701244354], [1, 2, 3]), '/input-12': (tensor([60,  1]), tensor([1., 1.]), tensor([0, 0]), tensor([1.71803833e-08, 5.07454127e-02]), tensor([0, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([1956, 1900, 1881], [-1.0, -1.0, 1.0], [0, 0, 0], [0.10593028366565704, 0.04608966410160065, 0.045518651604652405], [1, 2, 3]), '/input-12': (tensor([60,  1]), tensor([ 1., -1.]), tensor([0, 0]), tensor([1.71803833e-08, 8.64611752e-03]), tensor([0, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([1956, 1900, 1881], [-1.0, -1.0, 1.0], [0, 0, 0], [0.10593028366565704, 0.04608966410160065, 0.045518651604652405], [1, 2, 3]), '/input-12': (tensor([60,  1]), tensor([1., 1.]), tensor([0, 0]), tensor([1.71803833e-08, 5.17668277e-02]), tensor([0, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([1956, 1900, 1881], [-1.0, 1.0, -1.0], [0, 0, 0], [0.10593028366565704, 0.052455976605415344, 0.04586075246334076], [1, 2, 3]), '/input-12': (tensor([60,  1]), tensor([ 1., -1.]), tensor([0, 0]), tensor([1.71803833e-08, 4.61758813e-03]), tensor([0, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([1956, 1900, 1881], [-1.0, 1.0, -1.0], [0, 0, 0], [0.10593028366565704, 0.052455976605415344, 0.04586075246334076], [1, 2, 3]), '/input-12': (tensor([60,  1]), tensor([1., 1.]), tensor([0, 0]), tensor([1.71803833e-08, 4.81781214e-02]), tensor([0, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([1956, 1900, 1881], [-1.0, 1.0, 1.0], [0, 0, 0], [0.10593028366565704, 0.052455976605415344, 0.04739437997341156], [1, 2, 3]), '/input-12': (tensor([60,  1]), tensor([ 1., -1.]), tensor([0, 0]), tensor([1.71803833e-08, 8.33796151e-03]), tensor([0, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([1956, 1900, 1881], [-1.0, 1.0, 1.0], [0, 0, 0], [0.10593028366565704, 0.052455976605415344, 0.04739437997341156], [1, 2, 3]), '/input-12': (tensor([60,  1]), tensor([1., 1.]), tensor([0, 0]), tensor([1.71803833e-08, 4.94006127e-02]), tensor([0, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': (tensor([1956]), tensor([1.]), tensor([0]), tensor([0.01085274]), tensor([1])), '/input-12': ([60], [1.0], [0], [1.7180383338200045e-08], [0])}
Shallow branching resets to n domains:  12
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3996233344078064
10 lb beta sum: 1.3558810949325562, worst -0.37878966331481934
Time: prepare 0.0005    bound 0.1258    transfer 0.0003    finalize 0.0002    func 0.1269    
Accumulated time: func 0.8563    prepare 0.0692    bound 0.7653    transfer 0.0064    finalize 0.0127    
After pruning, left:  6

Back to Regular BaB

BaB round 1
batch: 6
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 10] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 1: [/input-12, 92] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 1] 
split level 2: [/input-8, 875] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 10] 
split level 3: [/input-8, 1052] [/input-8, 884] [/input-8, 884] [/input-8, 884] [/input-8, 884] [/input-12, 92] 
split level 4: [/input-12, 61] [/input-8, 1052] [/input-8, 1052] [/input-8, 1052] [/input-8, 1052] [/input-12, 61] 
split level 5: [/input-8, 1881] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-8, 1900] 
cut re-enabled after branching node selection
0 lb beta sum: 1.6163148880004883, worst -0.3236221671104431
10 lb beta sum: 1.6327571868896484, worst -0.3232809901237488
Time: prepare 0.0173    bound 0.1291    transfer 0.0021    finalize 0.0021    func 0.1530    
Accumulated time: func 1.0093    prepare 0.0868    bound 0.8944    transfer 0.0085    finalize 0.0148    
all_split False
======================Cut inference begins======================
max lb tensor(0.85477376) min lb tensor(-0.32319289)
Number of Verified Splits: 348 of 384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.00031685829162597656 
BICCOS Cumulative time: 0.11669158935546875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.32319 (6), -0.31410 (6), -0.31177 (6), -0.31177 (6), -0.30267 (6), -0.30266 (6), -0.30098 (6), -0.29231 (6), -0.29186 (6), -0.28826 (6), -0.27645 (6), -0.27544 (6), -0.27270 (6), -0.27208 (6), -0.25983 (6), -0.25645 (6), -0.11401 (6), -0.11200 (6), -0.10201 (6), -0.10034 (6), 
Length of domains: 36
Time: pickout 0.0006    decision 0.0179    set_bounds 0.0394    solve 0.1531    add 0.0013    
Accumulated time: pickout 0.0118    decision 0.6484    set_bounds 0.1070    solve 0.8305    add 0.6907    
Current (lb-rhs): -0.32319289445877075
196 domains visited
Cumulative time: 2.635622978210449

BaB round 2
batch: 36
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] [/input-8, 1956] [/input-12, 58] [/input-8, 884] [/input-8, 1956] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 1: [/input-8, 92] [/input-8, 988] [/input-8, 92] [/input-8, 1052] [/input-8, 988] [/input-8, 92] [/input-8, 84] [/input-8, 92] [/input-8, 84] [/input-8, 884] 
split level 2: [/input-8, 556] [/input-8, 1003] [/input-8, 556] [/input-8, 1881] [/input-8, 1003] [/input-8, 556] [/input-8, 1003] [/input-8, 556] [/input-8, 1003] [/input-8, 538] 
cut re-enabled after branching node selection
0 lb beta sum: 1.1404742002487183, worst -0.30971986055374146
10 lb beta sum: 1.1404742002487183, worst -0.30960482358932495
Time: prepare 0.0130    bound 0.1304    transfer 0.0016    finalize 0.0017    func 0.1485    
Accumulated time: func 1.1578    prepare 0.0999    bound 1.0247    transfer 0.0101    finalize 0.0165    
all_split False
======================Cut inference begins======================
max lb tensor(0.36962777) min lb tensor(-0.30955070)
Number of Verified Splits: 162 of 288
Stop inferencing: Max iteration reached.
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.0003135204315185547 
BICCOS Cumulative time: 0.1170051097869873
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.30955 (9), -0.30811 (9), -0.30050 (9), -0.29906 (9), -0.29748 (9), -0.29707 (9), -0.29706 (9), -0.29695 (9), -0.29561 (9), -0.29539 (9), -0.28840 (9), -0.28796 (9), -0.28795 (9), -0.28789 (9), -0.28650 (9), -0.28636 (9), -0.28628 (9), -0.28606 (9), -0.28560 (9), -0.28544 (9), 
Length of domains: 126
Time: pickout 0.0016    decision 0.0128    set_bounds 0.0220    solve 0.1486    add 0.0030    
Accumulated time: pickout 0.0133    decision 0.6611    set_bounds 0.1290    solve 0.9791    add 0.6937    
Current (lb-rhs): -0.3095507025718689
322 domains visited
Cumulative time: 2.8247106075286865

BaB round 3
batch: 126
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 875] [/input-8, 1956] [/input-8, 884] [/input-8, 875] [/input-8, 884] [/input-8, 1956] [/input-8, 884] [/input-8, 1956] [/input-8, 1956] [/input-8, 884] 
cut re-enabled after branching node selection
0 lb beta sum: 1.1689668893814087, worst -0.30652791261672974
10 lb beta sum: 1.1689668893814087, worst -0.30645114183425903
Time: prepare 0.0113    bound 0.1313    transfer 0.0006    finalize 0.0016    func 0.1464    
Accumulated time: func 1.3042    prepare 0.1114    bound 1.1560    transfer 0.0107    finalize 0.0181    
all_split False
======================Cut inference begins======================
max lb tensor(0.13685292) min lb tensor(-0.30640441)
Number of Verified Splits: 53 of 252
Stop inferencing: Max iteration reached.
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.0003199577331542969 
BICCOS Cumulative time: 0.1173250675201416
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.30640 (10), -0.30522 (10), -0.29737 (10), -0.29620 (10), -0.29486 (10), -0.29454 (10), -0.29427 (10), -0.29355 (10), -0.29226 (10), -0.29216 (10), -0.28583 (10), -0.28548 (10), -0.28521 (10), -0.28447 (10), -0.28337 (10), -0.28321 (10), -0.28317 (10), -0.28310 (10), -0.28285 (10), -0.28251 (10), 
Length of domains: 199
Time: pickout 0.0025    decision 0.0180    set_bounds 0.0105    solve 0.1465    add 0.0021    
Accumulated time: pickout 0.0158    decision 0.6792    set_bounds 0.1394    solve 1.1256    add 0.6958    
Current (lb-rhs): -0.3064044117927551
521 domains visited
Cumulative time: 3.006129264831543

BaB round 4
batch: 199
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 884] [/input-8, 1956] [/input-8, 538] [/input-8, 1956] [/input-8, 988] [/input-8, 1956] [/input-8, 988] [/input-8, 92] [/input-8, 1956] [/input-8, 100] 
cut re-enabled after branching node selection
0 lb beta sum: 1.1376628875732422, worst -0.3035966753959656
10 lb beta sum: 1.1376628875732422, worst -0.3035542368888855
Time: prepare 0.0178    bound 0.1356    transfer 0.0020    finalize 0.0019    func 0.1607    
Accumulated time: func 1.4649    prepare 0.1294    bound 1.2916    transfer 0.0127    finalize 0.0201    
all_split False
======================Cut inference begins======================
max lb tensor(0.03540599) min lb tensor(-0.30353004)
Number of Verified Splits: 38 of 398
Stop inferencing: Max iteration reached.
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.00035190582275390625 
BICCOS Cumulative time: 0.11767697334289551
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.30353 (11), -0.30242 (11), -0.29452 (11), -0.29340 (11), -0.29169 (11), -0.29136 (11), -0.29106 (11), -0.28996 (11), -0.28959 (11), -0.28885 (11), -0.28265 (11), -0.28234 (11), -0.28200 (11), -0.28091 (11), -0.28053 (11), -0.28043 (11), -0.27988 (11), -0.27974 (11), -0.27948 (11), -0.27881 (11), 
Length of domains: 360
Time: pickout 0.0040    decision 0.0192    set_bounds 0.0167    solve 0.1609    add 0.0048    
Accumulated time: pickout 0.0198    decision 0.6984    set_bounds 0.1561    solve 1.2865    add 0.7005    
Current (lb-rhs): -0.3035300374031067
881 domains visited
Cumulative time: 3.2126243114471436

BaB round 5
batch: 360
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 538] [/input-8, 538] [/input-8, 100] [/input-8, 538] [/input-8, 538] [/input-8, 538] [/input-8, 538] [/input-8, 1061] [/input-8, 1061] [/input-8, 538] 
cut re-enabled after branching node selection
0 lb beta sum: 1.1176824569702148, worst -0.29658645391464233
10 lb beta sum: 1.1176824569702148, worst -0.2961503863334656
Time: prepare 0.0323    bound 0.1375    transfer 0.0032    finalize 0.0038    func 0.1815    
Accumulated time: func 1.6464    prepare 0.1618    bound 1.4291    transfer 0.0159    finalize 0.0239    
all_split False
======================Cut inference begins======================
max lb tensor(0.01428300) min lb tensor(-0.29593056)
Number of Verified Splits: 22 of 720
Stop inferencing: Max iteration reached.
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.0003561973571777344 
BICCOS Cumulative time: 0.11803317070007324
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.29593 (12), -0.29480 (12), -0.28993 (12), -0.28917 (12), -0.28885 (12), -0.28802 (12), -0.28415 (12), -0.28382 (12), -0.28316 (12), -0.28211 (12), -0.28167 (12), -0.28099 (12), -0.28079 (12), -0.27970 (12), -0.27826 (12), -0.27788 (12), -0.27766 (12), -0.27735 (12), -0.27700 (12), -0.27625 (12), 
Length of domains: 698
Time: pickout 0.0057    decision 0.0302    set_bounds 0.0300    solve 0.1818    add 0.0058    
Accumulated time: pickout 0.0255    decision 0.7286    set_bounds 0.1861    solve 1.4682    add 0.7064    
Current (lb-rhs): -0.29593056440353394
1579 domains visited
Cumulative time: 3.467332601547241

BaB round 6
batch: 698
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 867] [/input-8, 1061] [/input-12, 55] [/input-8, 1061] [/input-8, 556] [/input-8, 1061] [/input-8, 556] [/input-8, 867] [/input-8, 867] [/input-8, 1460] 
cut re-enabled after branching node selection
0 lb beta sum: 1.109296202659607, worst -0.2899743914604187
10 lb beta sum: 1.109296202659607, worst -0.28969353437423706
Time: prepare 0.0628    bound 0.1498    transfer 0.0043    finalize 0.0074    func 0.2344    
Accumulated time: func 1.8808    prepare 0.2249    bound 1.5789    transfer 0.0202    finalize 0.0312    
all_split False
======================Cut inference begins======================
max lb tensor(0.11912513) min lb tensor(-0.28963763)
Number of Verified Splits: 161 of 1396
Stop inferencing: Max iteration reached.
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.0004506111145019531 
BICCOS Cumulative time: 0.1184837818145752
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.28964 (13), -0.28872 (13), -0.28452 (13), -0.28309 (13), -0.28297 (13), -0.28260 (13), -0.28218 (13), -0.28056 (13), -0.27792 (13), -0.27778 (13), -0.27703 (13), -0.27594 (13), -0.27586 (13), -0.27565 (13), -0.27531 (13), -0.27482 (13), -0.27434 (13), -0.27431 (13), -0.27390 (13), -0.27383 (13), 
Length of domains: 1235
Time: pickout 0.0136    decision 0.0493    set_bounds 0.0596    solve 0.2346    add 0.0095    
Accumulated time: pickout 0.0391    decision 0.7779    set_bounds 0.2456    solve 1.7029    add 0.7158    
Current (lb-rhs): -0.28963762521743774
2814 domains visited
Cumulative time: 3.8365297317504883

BaB round 7
batch: 1235
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1061] [/input-8, 867] [/input-8, 867] [/input-8, 867] [/input-12, 37] [/input-8, 867] [/input-12, 37] [/input-8, 556] [/input-8, 556] [/input-8, 556] 
cut re-enabled after branching node selection
0 lb beta sum: 1.0497894287109375, worst -0.284049391746521
10 lb beta sum: 1.0497894287109375, worst -0.2838664650917053
Time: prepare 0.1128    bound 0.1944    transfer 0.0100    finalize 0.0138    func 0.5099    
Accumulated time: func 2.3907    prepare 0.3379    bound 1.7733    transfer 0.0302    finalize 0.0450    
all_split False
======================Cut inference begins======================
max lb tensor(0.14170647) min lb tensor(-0.28380889)
Number of Verified Splits: 130 of 2470
Stop inferencing: Max iteration reached.
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.000545501708984375 
BICCOS Cumulative time: 0.11902928352355957
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.28381 (14), -0.28305 (14), -0.27842 (14), -0.27771 (14), -0.27723 (14), -0.27672 (14), -0.27649 (14), -0.27494 (14), -0.27439 (14), -0.27341 (14), -0.27148 (14), -0.27147 (14), -0.27130 (14), -0.27091 (14), -0.27005 (14), -0.26970 (14), -0.26958 (14), -0.26920 (14), -0.26902 (14), -0.26847 (14), 
Length of domains: 2340
Time: pickout 0.0179    decision 0.0782    set_bounds 0.1015    solve 0.5104    add 0.0560    
Accumulated time: pickout 0.0570    decision 0.8561    set_bounds 0.3471    solve 2.2133    add 0.7718    
Current (lb-rhs): -0.2838088870048523
5154 domains visited
Cumulative time: 4.610374212265015

BaB round 8
batch: 2340
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 55] [/input-12, 55] [/input-8, 1460] [/input-12, 55] [/input-12, 55] [/input-12, 55] [/input-8, 541] [/input-8, 1900] [/input-8, 92] [/input-8, 1900] 
cut re-enabled after branching node selection
0 lb beta sum: 1.0349059104919434, worst -0.27939289808273315
10 lb beta sum: 1.0349059104919434, worst -0.2793501019477844
Time: prepare 0.2219    bound 0.3141    transfer 0.0207    finalize 0.0271    func 0.6144    
Accumulated time: func 3.0051    prepare 0.5600    bound 2.0874    transfer 0.0509    finalize 0.0721    
all_split False
======================Cut inference begins======================
max lb tensor(0.11753225) min lb tensor(-0.27933812)
Number of Verified Splits: 311 of 4680
Stop inferencing: Max iteration reached.
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.0005517005920410156 
BICCOS Cumulative time: 0.11958098411560059
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.27934 (15), -0.27861 (15), -0.27395 (15), -0.27327 (15), -0.27260 (15), -0.27212 (15), -0.27188 (15), -0.27043 (15), -0.26929 (15), -0.26833 (15), -0.26690 (15), -0.26680 (15), -0.26674 (15), -0.26637 (15), -0.26527 (15), -0.26520 (15), -0.26505 (15), -0.26468 (15), -0.26427 (15), -0.26400 (15), 
Length of domains: 4369
Time: pickout 0.0414    decision 0.1379    set_bounds 0.1875    solve 0.6157    add 0.0220    
Accumulated time: pickout 0.0985    decision 0.9940    set_bounds 0.5346    solve 2.8290    add 0.7938    
Current (lb-rhs): -0.27933812141418457
9523 domains visited
Cumulative time: 5.621715545654297

BaB round 9
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 100] [/input-8, 1900] [/input-8, 100] [/input, 1463] [/input-8, 100] [/input, 1463] [/input-8, 100] [/input-8, 1900] [/input-8, 100] [/input, 2472] 
cut re-enabled after branching node selection
0 lb beta sum: 1.029809832572937, worst -0.275651752948761
10 lb beta sum: 1.029809832572937, worst -0.2755845785140991
Time: prepare 0.3948    bound 0.4942    transfer 0.0297    finalize 0.0501    func 1.1904    
Accumulated time: func 4.1955    prepare 0.9551    bound 2.5816    transfer 0.0806    finalize 0.1222    
all_split False
======================Cut inference begins======================
max lb tensor(0.09206635) min lb tensor(-0.27555239)
Number of Verified Splits: 804 of 8192
Stop inferencing: Max iteration reached.
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.0006239414215087891 
BICCOS Cumulative time: 0.12020492553710938
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.27555 (16), -0.27475 (16), -0.27014 (16), -0.26873 (16), -0.26829 (16), -0.26794 (16), -0.26382 (16), -0.26358 (16), -0.26260 (16), -0.26228 (16), -0.26201 (16), -0.26139 (16), -0.26095 (16), -0.26086 (16), -0.26022 (16), -0.26009 (16), -0.26002 (16), -0.25992 (16), -0.25983 (16), -0.25963 (16), 
Length of domains: 7661
Time: pickout 0.0589    decision 0.3966    set_bounds 0.3280    solve 1.1926    add 0.0501    
Accumulated time: pickout 0.1574    decision 1.3906    set_bounds 0.8626    solve 4.0216    add 0.8439    
Current (lb-rhs): -0.2755523920059204
16911 domains visited
current_vram/total_varm: 22.8GB/99.9GB, batch_size increase to 8192
Cumulative time: 7.661213159561157

BaB round 10
batch: 7661
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1900] [/input-8, 100] [/input-8, 100] [/input-12, 55] [/input-8, 1892] [/input-12, 55] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 55] 
cut re-enabled after branching node selection
0 lb beta sum: 1.0172955989837646, worst -0.27292466163635254
10 lb beta sum: 1.0172955989837646, worst -0.2728901505470276
Time: prepare 0.7463    bound 0.8664    transfer 0.0755    finalize 0.3194    func 2.1065    
Accumulated time: func 6.3020    prepare 1.7017    bound 3.4480    transfer 0.1562    finalize 0.4417    
all_split False
======================Cut inference begins======================
max lb tensor(0.09802371) min lb tensor(-0.27287799)
Number of Verified Splits: 2752 of 15322
Stop inferencing: Max iteration reached.
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.0006334781646728516 
BICCOS Cumulative time: 0.12083840370178223
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.27288 (17), -0.26746 (17), -0.26599 (17), -0.26554 (17), -0.26532 (17), -0.26522 (17), -0.25988 (17), -0.25986 (17), -0.25980 (17), -0.25855 (17), -0.25843 (17), -0.25834 (17), -0.25821 (17), -0.25818 (17), -0.25791 (17), -0.25717 (17), -0.25624 (17), -0.25604 (17), -0.25531 (17), -0.25528 (17), 
Length of domains: 12570
Time: pickout 0.1485    decision 0.4288    set_bounds 0.8095    solve 2.1097    add 0.1814    
Accumulated time: pickout 0.3059    decision 1.8193    set_bounds 1.6721    solve 6.1313    add 1.0254    
Current (lb-rhs): -0.2728779911994934
29481 domains visited
Cumulative time: 11.374932527542114

BaB round 11
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 100] [/input-12, 55] [/input-12, 55] [/input-12, 37] [/input-12, 37] [/input-12, 55] [/input-12, 55] [/input-8, 84] [/input-12, 37] [/input-12, 37] 
cut re-enabled after branching node selection
0 lb beta sum: 1.0055806636810303, worst -0.262678861618042
10 lb beta sum: 1.0055806636810303, worst -0.2626636028289795
Time: prepare 0.8205    bound 0.9213    transfer 0.0612    finalize 0.0981    func 2.2619    
Accumulated time: func 8.5639    prepare 2.5225    bound 4.3693    transfer 0.2174    finalize 0.5397    
all_split False
======================Cut inference begins======================
max lb tensor(0.10524684) min lb tensor(-0.26264250)
Number of Verified Splits: 3016 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.0006704330444335938 
BICCOS Cumulative time: 0.12150883674621582
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.27288 (17), -0.26746 (17), -0.26599 (17), -0.26554 (17), -0.26522 (17), -0.26264 (18), -0.25986 (17), -0.25980 (17), -0.25855 (17), -0.25834 (17), -0.25821 (17), -0.25818 (17), -0.25721 (18), -0.25624 (17), -0.25604 (17), -0.25574 (18), -0.25531 (17), -0.25526 (18), -0.25501 (17), -0.25419 (17), 
Length of domains: 17746
Time: pickout 0.1341    decision 0.4563    set_bounds 0.9179    solve 2.2654    add 0.2285    
Accumulated time: pickout 0.4400    decision 2.2757    set_bounds 2.5900    solve 8.3967    add 1.2539    
Current (lb-rhs): -0.2728779911994934
42849 domains visited
current_vram/total_varm: 33.7GB/99.9GB, batch_size increase to 16384
Cumulative time: 15.414753675460815

BaB round 12
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1884] [/input, 2472] [/input, 1463] [/input-12, 37] [/input-12, 37] [/input-8, 1884] [/input-8, 1884] [/input, 2472] [/input-8, 1884] [/input-12, 55] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9901038408279419, worst -0.26927870512008667
10 lb beta sum: 0.9901038408279419, worst -0.2692430019378662
Time: prepare 1.6529    bound 1.7750    transfer 0.2395    finalize 0.2106    func 4.4710    
Accumulated time: func 13.0349    prepare 4.1758    bound 6.1442    transfer 0.4569    finalize 0.7504    
all_split False
======================Cut inference begins======================
max lb tensor(0.10560876) min lb tensor(-0.26921928)
Number of Verified Splits: 5865 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.0007853507995605469 
BICCOS Cumulative time: 0.12229418754577637
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.26922 (18), -0.26377 (18), -0.26259 (18), -0.26233 (18), -0.26137 (18), -0.25872 (19), -0.25721 (18), -0.25716 (18), -0.25660 (18), -0.25568 (18), -0.25526 (18), -0.25450 (18), -0.25439 (18), -0.25377 (18), -0.25375 (18), -0.25339 (18), -0.25259 (18), -0.25182 (19), -0.25181 (18), -0.25172 (18), 
Length of domains: 28265
Time: pickout 0.2696    decision 1.9402    set_bounds 1.6937    solve 4.4767    add 0.2635    
Accumulated time: pickout 0.7096    decision 4.2159    set_bounds 4.2837    solve 12.8734    add 1.5173    
Current (lb-rhs): -0.2692192792892456
69752 domains visited
current_vram/total_varm: 33.7GB/99.9GB, batch_size increase to 32768
Cumulative time: 24.141627073287964

BaB round 13
batch: 28265
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 508] [/input-8, 1892] [/input-8, 1884] [/input-12, 55] [/input-8, 1003] [/input-12, 37] [/input-12, 55] [/input-8, 1884] [/input-8, 1884] [/input-8, 1884] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9772300720214844, worst -0.26009827852249146
10 lb beta sum: 0.9772300720214844, worst -0.26002466678619385
Time: prepare 2.8939    bound 3.0281    transfer 0.5114    finalize 0.4291    func 7.7656    
Accumulated time: func 20.8005    prepare 7.0701    bound 9.1724    transfer 0.9683    finalize 1.1795    
all_split False
======================Cut inference begins======================
max lb tensor(0.09886295) min lb tensor(-0.25997871)
Number of Verified Splits: 10095 of 56530
Stop inferencing: Max iteration reached.
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.0009691715240478516 
BICCOS Cumulative time: 0.12326335906982422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25998 (19), -0.25978 (19), -0.25895 (19), -0.25454 (19), -0.25438 (19), -0.25354 (19), -0.25331 (19), -0.25308 (19), -0.25287 (19), -0.25250 (19), -0.25204 (19), -0.25145 (19), -0.25129 (20), -0.25106 (19), -0.25086 (19), -0.24973 (19), -0.24933 (19), -0.24800 (20), -0.24752 (19), -0.24707 (19), 
Length of domains: 46435
Time: pickout 0.6043    decision 2.8959    set_bounds 3.2919    solve 7.7758    add 0.1615    
Accumulated time: pickout 1.3139    decision 7.1118    set_bounds 7.5755    solve 20.6492    add 1.6788    
Current (lb-rhs): -0.259978711605072
116187 domains visited
Cumulative time: 39.018656492233276

BaB round 14
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1892] [/input-8, 1892] [/input-8, 508] [/input-8, 100] [/input-8, 508] [/input-8, 100] [/input-8, 508] [/input-8, 508] [/input-8, 1884] [/input-8, 1884] 
cut re-enabled after branching node selection
0 lb beta sum: 0.966060221195221, worst -0.25241535902023315
10 lb beta sum: 0.966060221195221, worst -0.25233525037765503
Time: prepare 3.4511    bound 8.6762    transfer 0.6112    finalize 1.2108    func 14.3781    
Accumulated time: func 35.1786    prepare 10.5216    bound 17.8485    transfer 1.5795    finalize 2.3903    
all_split False
======================Cut inference begins======================
max lb tensor(0.09197980) min lb tensor(-0.25231391)
Number of Verified Splits: 11880 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.0011491775512695312 
BICCOS Cumulative time: 0.12441253662109375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25998 (19), -0.25895 (19), -0.25454 (19), -0.25354 (19), -0.25308 (19), -0.25231 (20), -0.25204 (19), -0.25145 (19), -0.25129 (20), -0.25086 (19), -0.24973 (19), -0.24933 (19), -0.24918 (20), -0.24752 (19), -0.24688 (20), -0.24624 (19), -0.24597 (19), -0.24586 (20), -0.24527 (19), -0.24527 (20), 
Length of domains: 67323
Time: pickout 0.5692    decision 3.4586    set_bounds 3.4346    solve 14.3919    add 0.2108    
Accumulated time: pickout 1.8830    decision 10.5704    set_bounds 11.0102    solve 35.0411    add 1.8896    
Current (lb-rhs): -0.259978711605072
169843 domains visited
Cumulative time: 61.26708698272705

BaB round 15
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2473] [/input-8, 1892] [/input-12, 37] [/input, 2473] [/input-8, 1003] [/input-8, 1892] [/input-12, 37] [/input-12, 37] [/input, 1463] [/input-8, 90] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9637637138366699, worst -0.2526342272758484
10 lb beta sum: 0.9637637138366699, worst -0.25257986783981323
Time: prepare 3.5618    bound 8.6778    transfer 0.6180    finalize 1.4180    func 14.7058    
Accumulated time: func 49.8844    prepare 14.0838    bound 26.5264    transfer 2.1975    finalize 3.8084    
all_split False
======================Cut inference begins======================
max lb tensor(0.09745711) min lb tensor(-0.25257480)
Number of Verified Splits: 11014 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.0009996891021728516 
BICCOS Cumulative time: 0.1254122257232666
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25257 (20), -0.25231 (20), -0.25152 (20), -0.24914 (20), -0.24832 (20), -0.24760 (21), -0.24710 (20), -0.24688 (20), -0.24619 (21), -0.24607 (20), -0.24586 (20), -0.24553 (20), -0.24527 (20), -0.24481 (20), -0.24446 (20), -0.24400 (20), -0.24380 (20), -0.24352 (20), -0.24340 (20), -0.24335 (20), 
Length of domains: 89077
Time: pickout 0.5908    decision 3.6124    set_bounds 3.6988    solve 14.7188    add 0.1755    
Accumulated time: pickout 2.4739    decision 14.1827    set_bounds 14.7090    solve 49.7599    add 2.0652    
Current (lb-rhs): -0.2525748014450073
224365 domains visited
Cumulative time: 84.24249148368835

BaB round 16
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1460] [/input-8, 1892] [/input-8, 1909] [/input-12, 37] [/input-8, 1892] [/input, 2473] [/input, 1673] [/input, 2473] [/input-12, 37] [/input-8, 1892] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9571738839149475, worst -0.24865061044692993
10 lb beta sum: 0.9571738839149475, worst -0.24861836433410645
Time: prepare 3.4817    bound 8.6751    transfer 0.6177    finalize 0.5240    func 13.7325    
Accumulated time: func 63.6168    prepare 17.5659    bound 35.2014    transfer 2.8153    finalize 4.3323    
all_split False
======================Cut inference begins======================
max lb tensor(0.08590847) min lb tensor(-0.24860376)
Number of Verified Splits: 10417 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.0012180805206298828 
BICCOS Cumulative time: 0.12663030624389648
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25257 (20), -0.25152 (20), -0.24914 (20), -0.24860 (21), -0.24832 (20), -0.24760 (21), -0.24710 (20), -0.24619 (21), -0.24607 (20), -0.24553 (20), -0.24446 (20), -0.24400 (20), -0.24380 (20), -0.24352 (20), -0.24335 (20), -0.24322 (20), -0.24319 (21), -0.24253 (20), -0.24235 (20), -0.24228 (20), 
Length of domains: 111428
Time: pickout 0.5981    decision 3.3634    set_bounds 4.8420    solve 13.7503    add 0.1784    
Accumulated time: pickout 3.0720    decision 17.5461    set_bounds 19.5510    solve 63.5102    add 2.2436    
Current (lb-rhs): -0.2525748014450073
279484 domains visited
Cumulative time: 107.18365740776062

BaB round 17
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1884] [/input-8, 1116] [/input-8, 84] [/input-8, 1892] [/input-12, 55] [/input, 2472] [/input-8, 1884] [/input-8, 1116] [/input-8, 84] [/input, 1463] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9582462310791016, worst -0.2490168809890747
10 lb beta sum: 0.9582462310791016, worst -0.24899405241012573
Time: prepare 3.5549    bound 8.6750    transfer 0.6201    finalize 0.5437    func 13.8224    
Accumulated time: func 77.4392    prepare 21.1213    bound 43.8764    transfer 3.4354    finalize 4.8761    
all_split False
======================Cut inference begins======================
max lb tensor(0.09788257) min lb tensor(-0.24898463)
Number of Verified Splits: 9213 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.0047626495361328125 
BICCOS Cumulative time: 0.1313929557800293
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.24898 (21), -0.24860 (21), -0.24840 (21), -0.24563 (21), -0.24495 (21), -0.24455 (21), -0.24446 (22), -0.24319 (21), -0.24306 (21), -0.24296 (21), -0.24249 (22), -0.24219 (21), -0.24194 (21), -0.24156 (21), -0.24135 (21), -0.24127 (21), -0.24124 (21), -0.24037 (21), -0.24016 (21), -0.24003 (22), 
Length of domains: 134983
Time: pickout 0.6188    decision 3.9963    set_bounds 4.2066    solve 13.8404    add 0.1959    
Accumulated time: pickout 3.6908    decision 21.5424    set_bounds 23.7576    solve 77.3506    add 2.4395    
Current (lb-rhs): -0.24898463487625122
335807 domains visited
Cumulative time: 130.27312541007996

BaB round 18
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 1463] [/input-8, 988] [/input, 1463] [/input-12, 37] [/input-12, 37] [/input-8, 541] [/input-8, 1460] [/input-8, 541] [/input-8, 1909] [/input-8, 988] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9566887617111206, worst -0.23547303676605225
10 lb beta sum: 0.9566887617111206, worst -0.23586422204971313
Time: prepare 3.5718    bound 8.6768    transfer 0.6265    finalize 1.8985    func 15.2030    
Accumulated time: func 92.6422    prepare 24.6935    bound 52.5532    transfer 4.0619    finalize 6.7746    
all_split False
======================Cut inference begins======================
max lb tensor(0.09728760) min lb tensor(-0.23491126)
Number of Verified Splits: 9163 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.0010390281677246094 
BICCOS Cumulative time: 0.1324319839477539
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.24898 (21), -0.24860 (21), -0.24840 (21), -0.24563 (21), -0.24495 (21), -0.24455 (21), -0.24446 (22), -0.24319 (21), -0.24306 (21), -0.24296 (21), -0.24249 (22), -0.24219 (21), -0.24194 (21), -0.24156 (21), -0.24135 (21), -0.24127 (21), -0.24124 (21), -0.24037 (21), -0.24016 (21), -0.24003 (22), 
Length of domains: 158588
Time: pickout 0.6303    decision 4.1643    set_bounds 3.1179    solve 15.2173    add 0.1870    
Accumulated time: pickout 4.3211    decision 25.7067    set_bounds 26.8755    solve 92.5679    add 2.6265    
Current (lb-rhs): -0.24898463487625122
392180 domains visited
Cumulative time: 153.76166081428528

BaB round 19
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 508] [/input-12, 55] [/input-8, 541] [/input-8, 1003] [/input, 1463] [/input-8, 1892] [/input-8, 541] [/input-8, 1003] [/input-8, 1892] [/input-8, 1892] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9528368711471558, worst -0.2460421323776245
10 lb beta sum: 0.9528368711471558, worst -0.24601978063583374
Time: prepare 3.5646    bound 8.6733    transfer 0.6256    finalize 0.5328    func 13.8269    
Accumulated time: func 106.4691    prepare 28.2586    bound 61.2265    transfer 4.6875    finalize 7.3074    
all_split False
======================Cut inference begins======================
max lb tensor(0.09434086) min lb tensor(-0.24599850)
Number of Verified Splits: 8322 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.0012018680572509766 
BICCOS Cumulative time: 0.13363385200500488
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.24898 (21), -0.24840 (21), -0.24600 (22), -0.24563 (21), -0.24495 (21), -0.24455 (21), -0.24446 (22), -0.24306 (21), -0.24296 (21), -0.24249 (22), -0.24194 (21), -0.24135 (21), -0.24127 (21), -0.24117 (22), -0.24058 (22), -0.24037 (21), -0.24016 (21), -0.24003 (22), -0.23985 (21), -0.23979 (21), 
Length of domains: 183034
Time: pickout 0.6225    decision 3.3598    set_bounds 4.4339    solve 13.8452    add 0.1958    
Accumulated time: pickout 4.9436    decision 29.0665    set_bounds 31.3094    solve 106.4131    add 2.8222    
Current (lb-rhs): -0.24898463487625122
449394 domains visited
Cumulative time: 176.44796323776245

BaB round 20
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 541] [/input-8, 1460] [/input-12, 55] [/input, 2473] [/input-8, 1460] [/input, 2473] [/input-8, 1909] [/input-8, 1460] [/input, 2473] [/input-12, 37] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9536849856376648, worst -0.2434554100036621
10 lb beta sum: 0.9536849856376648, worst -0.24481606483459473
Time: prepare 3.6113    bound 8.6734    transfer 0.6367    finalize 2.2401    func 15.5857    
Accumulated time: func 122.0548    prepare 31.8703    bound 69.8999    transfer 5.3242    finalize 9.5475    
all_split False
======================Cut inference begins======================
max lb tensor(0.09647638) min lb tensor(-0.24332231)
Number of Verified Splits: 8276 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.0011446475982666016 
BICCOS Cumulative time: 0.13477849960327148
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.24898 (21), -0.24840 (21), -0.24600 (22), -0.24455 (21), -0.24332 (22), -0.24306 (21), -0.24296 (21), -0.24290 (22), -0.24286 (23), -0.24194 (21), -0.24135 (21), -0.24117 (22), -0.24058 (22), -0.24037 (21), -0.24016 (21), -0.24003 (22), -0.23979 (21), -0.23972 (23), -0.23962 (21), -0.23944 (23), 
Length of domains: 207526
Time: pickout 0.6463    decision 4.8290    set_bounds 3.1175    solve 15.6004    add 0.1963    
Accumulated time: pickout 5.5899    decision 33.8955    set_bounds 34.4269    solve 122.0135    add 3.0185    
Current (lb-rhs): -0.24898463487625122
506654 domains visited
Time out!!!!!!!!
Result: unknown in 204.1347 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 188, vnnlib ID: 188 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-2.91176009, -6.98036766, -2.84487700, -4.53986120, -3.38612461,
         -4.94995880, -5.20888853, -6.30824423, -4.65725613, -6.36737871]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [467]; unstable size 467; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 229, 1, 467] with unstable size 228 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 467] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 467] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [228]; unstable size 228; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 228] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 228] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.97516209,  1.98761368,  0.85461843, -0.25794768,  1.12561285,
          1.30599165,  2.30291748, -0.37233812,  1.60615635]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.91176009, -6.98036766, -2.84487700, -4.53986120, -3.38612461,
         -4.94995880, -5.20888853, -6.30824423, -4.65725613, -6.36737871]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.61352348, -6.98639107, -3.14915252, -4.73351860, -3.62735605,
          -5.15657663, -5.39361668, -6.49277210, -4.53538036, -6.45075560],
         [-2.61352348, -6.98639107, -3.14915252, -4.73351860, -3.62735605,
          -5.15657663, -5.39361668, -6.49277210, -4.53538036, -6.45075560]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.53562903,  0.47820354,  1.38622785]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0099 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0647 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 189, vnnlib ID: 189 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.48303747, -10.29648781,  -4.77946949,  -6.41142654,  -3.71523380,
          -6.92542839,  -5.50940371,  -7.37353468,  -9.88126087,  -9.47254848]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [427]; unstable size 427; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 239, 1, 427] with unstable size 238 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 427] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 427] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [238]; unstable size 238; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 238] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 238] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.48654866, 5.05170107, 0.07906580, 1.63433266, 2.04545832, 0.66316915,
         2.76845503, 4.94088602, 4.35907698]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0544 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 190, vnnlib ID: 190 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -6.12282085,  -8.68214226, -10.30647087, -10.71084213,  -9.83157253,
         -12.23327827, -10.64780331, -11.54215813,  -3.88245940,  -8.45811939]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [654]; unstable size 654; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 194, 1, 654] with unstable size 193 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 654] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 654] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [193]; unstable size 193; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 193] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 193] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.77125776, 3.34607577, 4.68589258, 5.31103945, 4.23434162, 6.53741455,
         5.22720718, 5.57845974, 3.04642582]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0536 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 191, vnnlib ID: 191 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.91402149, -10.96457195,  -4.60119486,  -3.07470465,  -3.85695314,
          -3.09889174,  -5.81089735,  -5.97126102,  -9.49198723, -10.05299187]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [611]; unstable size 611; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 278, 1, 611] with unstable size 277 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 611] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 611] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [277]; unstable size 277; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 277] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 277] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.15813017,  6.06970501,  0.46179652, -0.24430588, -0.42243242,
          1.52134776,  1.26745164,  4.78580904,  5.02399063]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.91402149, -10.96457195,  -4.60119486,  -3.07470465,  -3.85695314,
          -3.09889174,  -5.81089735,  -5.97126102,  -9.49198723, -10.05299187]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.08612442, -11.13200855,  -4.78087616,  -3.23898911,  -3.99717236,
           -3.01693344,  -6.23289585,  -5.81701088,  -9.75449657, -10.23010731],
         [ -9.08612442, -11.13200855,  -4.78087616,  -3.23898911,  -3.99717236,
           -3.01693344,  -6.23289585,  -5.81701088,  -9.75449657, -10.23010731]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.75818324, -0.22205567]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0057 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0456 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 192, vnnlib ID: 192 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-14.02367878, -16.68686485,  -9.24556446, -13.41522598, -11.11723232,
         -13.42477131, -11.50259304, -13.30918312, -17.15509415, -16.44651794]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [639]; unstable size 639; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 297, 1, 639] with unstable size 296 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 639] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 639] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [296]; unstable size 296; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 296] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 296] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.69086027, 5.29207325, 2.62997866, 0.65836829, 2.47528172, 0.66326284,
         2.12296367, 6.32425117, 5.31157494]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0621 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 193, vnnlib ID: 193 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.20210648,  -8.82046795, -12.04976559, -10.42980194, -10.17031384,
         -10.70486259, -10.72393131,  -9.02217484, -12.87825584,  -7.13908768]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [635]; unstable size 635; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 211, 1, 635] with unstable size 210 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 635] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 635] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [210]; unstable size 210; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 210] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 210] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.61224723, 0.46522081, 2.92189693, 1.71166277, 1.48281240, 1.75262117,
         1.73563433, 0.26523256, 4.10882759]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0411 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 194, vnnlib ID: 194 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.03137493, -14.28631020,  -6.88360214, -10.38493061,  -7.40738487,
         -10.63051796,  -9.41903210, -11.08277416, -12.21933270, -13.69361401]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [568]; unstable size 568; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 232, 1, 568] with unstable size 231 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 568] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 568] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [231]; unstable size 231; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 231] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 231] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.97100043,  5.75294256,  2.62268925, -0.44995379,  2.71119285,
          1.17250752,  2.60135579,  3.52469110,  4.91072798]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.03137493, -14.28631020,  -6.88360214, -10.38493061,  -7.40738487,
         -10.63051796,  -9.41903210, -11.08277416, -12.21933270, -13.69361401]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.12471867, -14.34060478,  -7.07273006, -10.32793617,  -7.07119846,
          -10.54697418,  -9.27692223, -10.68519115, -12.31662083, -13.77415562]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.00153160]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0066 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0349 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 195, vnnlib ID: 195 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.98067474, -6.32652664, -2.95507026, -3.61686778, -3.40175915,
         -3.97366190, -4.56966162, -4.09664774, -7.20802689, -7.00610399]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [544]; unstable size 544; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 205, 1, 544] with unstable size 204 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 544] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 544] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [204]; unstable size 204; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 204] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 204] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.09186625,  1.89036989,  0.01000333, -0.14229441,  0.23984718,
          0.71584237,  0.47054982,  3.11726570,  2.74282694]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.98067474, -6.32652664, -2.95507026, -3.61686778, -3.40175915,
         -3.97366190, -4.56966162, -4.09664774, -7.20802689, -7.00610399]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.29it/s]100%|██████████| 1/1 [00:00<00:00,  9.28it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.00337505, -6.23116016, -3.06292415, -3.62363768, -3.13657141,
          -3.98162699, -4.44606256, -4.00734854, -7.31230736, -6.86365461]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.07364726]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1102 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 11.540645599365234
alpha/beta optimization time: 1.1879005432128906
initial alpha-crown bounds: tensor([[ 2.13471866,  1.94881010,  0.04223788, -0.12571084,  0.27320957,
          0.80250382,  0.49562001,  3.17971706,  2.78953838]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.1257108449935913
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6747543811798
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.67471718788147
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.67469191551208
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.67467045783997
Verifying property 3 with 1 instances.
##### Instance 195 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.12571084]], device='cuda:0') need to verify.
Model prediction is: tensor([-5.98067474, -6.32652664, -2.95507026, -3.61686778, -3.40175915,
        -3.97366190, -4.56966162, -4.09664774, -7.20802689, -7.00610399],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.12571084]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 544
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 200
Node /15 input 0: size torch.Size([100]) unstable 13
-----------------
# of unstable neurons: 757
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010704994201660156
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1257106065750122
10 lb beta sum: 0.0, worst -0.12571579217910767
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0518    transfer 0.0001    finalize 0.0001    func 0.0522    
Accumulated time: func 0.0522    prepare 0.0002    bound 0.0518    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 35] 
split level 1: [/input-12, 58] 
split level 2: [/input-12, 33] 
split level 3: [/input-12, 40] 
split level 4: [/input-8, 179] 
split level 5: [/input-8, 2044] 
split level 6: [/input, 1448] 
split level 7: [/input-8, 296] 
split level 8: [/input-8, 1028] 
split level 9: [/input-8, 2016] 
split level 10: [/input, 1689] 
split level 11: [/input, 1688] 
split level 12: [/input-8, 493] 
split level 13: [/input, 454] 
split level 14: [/input, 1705] 
split level 15: [/input, 2121] 
split level 16: [/input-8, 2042] 
split level 17: [/input, 2105] 
split level 18: [/input-8, 1733] 
split level 19: [/input, 453] 
split level 20: [/input, 298] 
split level 21: [/input, 1321] 
split level 22: [/input, 1305] 
split level 23: [/input-8, 259] 
split level 24: [/input, 3524] 
split level 25: [/input-8, 138] 
split level 26: [/input, 2244] 
split level 27: [/input-8, 2036] 
split level 28: [/input, 362] 
split level 29: [/input-8, 494] 
split level 30: [/input-8, 469] 
split level 31: [/input, 2485] 
split level 32: [/input-8, 787] 
split level 33: [/input-8, 598] 
split level 34: [/input, 1703] 
split level 35: [/input, 3555] 
split level 36: [/input-8, 1053] 
split level 37: [/input-8, 501] 
split level 38: [/input-8, 597] 
split level 39: [/input, 2155] 
split level 40: [/input, 1337] 
split level 41: [/input-8, 477] 
split level 42: [/input, 2578] 
split level 43: [/input-8, 140] 
split level 44: [/input-8, 439] 
split level 45: [/input, 3237] 
split level 46: [/input-8, 452] 
split level 47: [/input-8, 423] 
split level 48: [/input, 77] 
split level 49: [/input-8, 2045] 
split level 50: [/input, 2215] 
split level 51: [/input-8, 2031] 
split level 52: [/input, 312] 
split level 53: [/input-8, 2035] 
split level 54: [/input, 435] 
split level 55: [/input-8, 921] 
split level 56: [/input-8, 2034] 
split level 57: [/input, 2137] 
split level 58: [/input-8, 473] 
split level 59: [/input-8, 2037] 
split level 60: [/input-8, 980] 
split level 61: [/input, 469] 
split level 62: [/input, 3401] 
split level 63: [/input, 2453] 
split level 64: [/input-8, 925] 
split level 65: [/input, 3385] 
split level 66: [/input-8, 1947] 
split level 67: [/input, 2625] 
split level 68: [/input, 3239] 
split level 69: [/input-8, 872] 
split level 70: [/input-8, 431] 
split level 71: [/input-8, 500] 
split level 72: [/input, 2211] 
split level 73: [/input, 3163] 
split level 74: [/input-8, 2023] 
split level 75: [/input-8, 2025] 
split level 76: [/input-8, 1970] 
split level 77: [/input-8, 1977] 
split level 78: [/input, 3222] 
split level 79: [/input, 438] 
split level 80: [/input, 282] 
split level 81: [/input, 2580] 
split level 82: [/input, 2214] 
split level 83: [/input, 2195] 
split level 84: [/input-8, 924] 
split level 85: [/input, 214] 
split level 86: [/input-8, 478] 
split level 87: [/input, 2473] 
split level 88: [/input-8, 429] 
split level 89: [/input, 3560] 
split level 90: [/input, 213] 
split level 91: [/input, 379] 
split level 92: [/input-8, 486] 
split level 93: [/input, 378] 
split level 94: [/input, 1720] 
split level 95: [/input, 2610] 
split level 96: [/input, 4037] 
split level 97: [/input, 296] 
split level 98: [/input, 3954] 
split level 99: [/input, 3211] 
split level 100: [/input-8, 794] 
split level 101: [/input, 193] 
split level 102: [/input-8, 1925] 
split level 103: [/input-8, 124] 
split level 104: [/input, 2189] 
split level 105: [/input-8, 590] 
split level 106: [/input-8, 2032] 
split level 107: [/input, 401] 
split level 108: [/input, 179] 
split level 109: [/input, 2153] 
split level 110: [/input, 2261] 
split level 111: [/input, 3511] 
split level 112: [/input-8, 1994] 
split level 113: [/input, 197] 
split level 114: [/input, 1355] 
split level 115: [/input, 3220] 
split level 116: [/input-8, 454] 
split level 117: [/input, 1371] 
split level 118: [/input, 2082] 
split level 119: [/input, 2474] 
split level 120: [/input, 2212] 
split level 121: [/input-8, 392] 
split level 122: [/input, 3876] 
split level 123: [/input-8, 398] 
split level 124: [/input, 2196] 
split level 125: [/input-8, 1452] 
split level 126: [/input, 4038] 
split level 127: [/input-8, 1990] 
split level 128: [/input, 102] 
split level 129: [/input, 1339] 
split level 130: [/input, 4020] 
split level 131: [/input, 2089] 
split level 132: [/input, 3801] 
split level 133: [/input, 103] 
split level 134: [/input, 1323] 
split level 135: [/input, 3414] 
split level 136: [/input-8, 2046] 
split level 137: [/input, 2182] 
split level 138: [/input, 199] 
split level 139: [/input, 3196] 
split level 140: [/input-8, 1390] 
split level 141: [/input, 98] 
split level 142: [/input, 3180] 
split level 143: [/input, 68] 
split level 144: [/input, 129] 
split level 145: [/input, 2190] 
split level 146: [/input, 3145] 
split level 147: [/input-8, 449] 
split level 148: [/input-8, 397] 
split level 149: [/input, 196] 
split level 150: [/input, 3161] 
split level 151: [/input, 472] 
split level 152: [/input-8, 1610] 
split level 153: [/input, 1381] 
split level 154: [/input, 3111] 
split level 155: [/input-8, 1989] 
split level 156: [/input, 2075] 
split level 157: [/input, 3226] 
split level 158: [/input-8, 1979] 
split level 159: [/input, 3750] 
split level 160: [/input, 3114] 
split level 161: [/input, 1913] 
split level 162: [/input, 3800] 
split level 163: [/input, 3755] 
split level 164: [/input, 3112] 
split level 165: [/input-8, 1124] 
split level 166: [/input, 111] 
split level 167: [/input, 3047] 
split level 168: [/input, 3081] 
split level 169: [/input, 3429] 
split level 170: [/input, 1576] 
split level 171: [/input, 1592] 
split level 172: [/input, 2280] 
split level 173: [/input-8, 412] 
split level 174: [/input, 3785] 
split level 175: [/input-8, 395] 
split level 176: [/input, 2341] 
split level 177: [/input, 2059] 
split level 178: [/input, 3048] 
split level 179: [/input, 3173] 
split level 180: [/input, 58] 
split level 181: [/input-8, 2022] 
split level 182: [/input, 89] 
split level 183: [/input, 2081] 
split level 184: [/input, 265] 
split level 185: [/input-8, 2006] 
split level 186: [/input-8, 1993] 
split level 187: [/input, 2052] 
split level 188: [/input, 3967] 
split level 189: [/input, 3452] 
split level 190: [/input, 1865] 
split level 191: [/input, 3337] 
split level 192: [/input, 72] 
split level 193: [/input, 3019] 
split level 194: [/input, 3098] 
split level 195: [/input, 2314] 
split level 196: [/input, 464] 
split level 197: [/input, 156] 
split level 198: [/input, 3300] 
split level 199: [/input, 2352] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12571054697036743
10 lb beta sum: 0.0, worst -0.12571024894714355
Time: prepare 0.0117    bound 0.0947    transfer 0.0024    finalize 0.0028    func 0.1141    
Accumulated time: func 0.1664    prepare 0.0218    bound 0.1465    transfer 0.0025    finalize 0.0030    
all_split False
======================Cut inference begins======================
max lb tensor(0.02029616) min lb tensor(-0.12570679)
Number of Verified Splits: 3 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.010806798934936523 
BICCOS Cumulative time: 0.010806798934936523
Preprocessing time: 0.010054588317871094 Inference time: 0.0004489421844482422 Add cuts time: 7.367134094238281e-05 Cut analysis time: 0.0002295970916748047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12096 (1), -0.12093 (1), -0.12088 (1), -0.12064 (1), -0.12044 (1), -0.12023 (1), -0.12020 (1), -0.12015 (1), -0.12013 (1), -0.12004 (1), -0.11999 (1), -0.11969 (1), -0.11949 (1), -0.11942 (1), -0.11908 (1), -0.11907 (1), -0.11890 (1), -0.11885 (1), -0.11872 (1), -0.11832 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5144    set_bounds 0.0087    solve 0.1142    add 0.0690    
Accumulated time: pickout 0.0003    decision 0.5144    set_bounds 0.0087    solve 0.1142    add 0.0690    
Current (lb-rhs): -0.12095963954925537
50 domains visited
Cumulative time: 0.7744297981262207

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] 
split level 1: [/input-12, 33] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 2: [/input-12, 40] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] 
split level 3: [/input-8, 1028] [/input-12, 40] [/input-8, 1028] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-8, 1028] [/input-12, 40] [/input-12, 40] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11638396978378296
10 lb beta sum: 0.5046918988227844, worst -0.07249757647514343
Time: prepare 0.0086    bound 0.1146    transfer 0.0008    finalize 0.0024    func 0.1290    
Accumulated time: func 0.2953    prepare 0.0307    bound 0.2610    transfer 0.0032    finalize 0.0053    
all_split False
======================Cut inference begins======================
max lb tensor(0.35519594) min lb tensor(-0.07244590)
Number of Verified Splits: 148 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.01958489418029785 
BICCOS Cumulative time: 0.030391693115234375
Preprocessing time: 0.01173543930053711 Inference time: 0.005571842193603516 Add cuts time: 0.002044677734375 Cut analysis time: 0.00023293495178222656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04607 (2), -0.04596 (2), -0.04589 (2), -0.04579 (2), -0.04569 (2), -0.04561 (2), -0.04554 (2), -0.04540 (2), -0.04534 (2), -0.04533 (2), -0.04508 (2), -0.04505 (2), -0.04491 (2), -0.04477 (2), -0.04465 (2), -0.04457 (2), -0.04434 (2), -0.04421 (2), -0.04383 (2), -0.04373 (2), 
Length of domains: 50
Time: pickout 0.0013    decision 0.0237    set_bounds 0.0111    solve 0.1290    add 0.0857    
Accumulated time: pickout 0.0016    decision 0.5381    set_bounds 0.0198    solve 0.2433    add 0.1547    
Current (lb-rhs): -0.04607163369655609
100 domains visited
Cumulative time: 1.0450758934020996

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] 
split level 1: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 2: [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] 
split level 3: [/input-8, 1028] [/input-8, 1028] [/input-8, 1028] [/input-8, 1028] [/input-8, 1028] [/input-8, 1028] [/input-8, 1028] [/input-8, 1028] [/input-8, 1028] [/input-8, 1028] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8368811011314392, worst -0.04607124626636505
10 lb beta sum: 0.8368811011314392, worst -0.047393739223480225
Time: prepare 0.0184    bound 0.1145    transfer 0.0012    finalize 0.0024    func 0.1397    
Accumulated time: func 0.4350    prepare 0.0493    bound 0.3755    transfer 0.0045    finalize 0.0077    
all_split False
======================Cut inference begins======================
max lb tensor(0.46004480) min lb tensor(-0.04584785)
Number of Verified Splits: 150 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.021243572235107422 
BICCOS Cumulative time: 0.0516352653503418
Preprocessing time: 0.011800050735473633 Inference time: 0.006318092346191406 Add cuts time: 0.0028853416442871094 Cut analysis time: 0.00024008750915527344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03640 (3), -0.03631 (3), -0.03631 (3), -0.03631 (3), -0.03631 (3), -0.03612 (3), -0.03595 (3), -0.03588 (3), -0.03588 (3), -0.03557 (3), -0.03550 (3), -0.03497 (3), -0.03484 (3), -0.03445 (3), -0.03436 (3), -0.03398 (3), -0.03395 (3), -0.03394 (3), -0.03394 (3), -0.03394 (3), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0192    set_bounds 0.0152    solve 0.1398    add 0.0909    
Accumulated time: pickout 0.0027    decision 0.5574    set_bounds 0.0350    solve 0.3830    add 0.2456    
Current (lb-rhs): -0.03640080988407135
150 domains visited
Cumulative time: 1.3328266143798828

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 58] 
split level 1: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 33] 
split level 2: [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-8, 2044] 
split level 3: [/input-8, 2044] [/input-8, 2044] [/input-8, 2044] [/input-8, 2044] [/input-8, 2044] [/input-8, 2044] [/input-8, 2044] [/input-8, 2044] [/input-8, 2044] [/input-8, 1028] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8377211093902588, worst -0.0364006906747818
10 lb beta sum: 0.8377211093902588, worst -0.03755664825439453
Time: prepare 0.0186    bound 0.1184    transfer 0.0008    finalize 0.0026    func 0.1431    
Accumulated time: func 0.5781    prepare 0.0682    bound 0.4939    transfer 0.0053    finalize 0.0103    
all_split False
======================Cut inference begins======================
max lb tensor(0.46546525) min lb tensor(-0.03631853)
Number of Verified Splits: 135 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.022961854934692383 
BICCOS Cumulative time: 0.07459712028503418
Preprocessing time: 0.011837005615234375 Inference time: 0.007186412811279297 Add cuts time: 0.003658771514892578 Cut analysis time: 0.0002796649932861328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02527 (4), -0.02527 (4), -0.02527 (4), -0.02520 (4), -0.02519 (4), -0.02519 (4), -0.02519 (4), -0.02517 (4), -0.02511 (4), -0.02511 (4), -0.02511 (4), -0.02508 (4), -0.02508 (4), -0.02508 (4), -0.02508 (4), -0.02484 (4), -0.02418 (4), -0.02415 (4), -0.02400 (4), -0.02387 (4), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0190    set_bounds 0.0158    solve 0.1432    add 0.2299    
Accumulated time: pickout 0.0039    decision 0.5764    set_bounds 0.0508    solve 0.5262    add 0.4754    
Current (lb-rhs): -0.025272920727729797
200 domains visited
Cumulative time: 1.7649497985839844

Shallow-BaB round 5
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] 
split level 1: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 2: [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] 
split level 3: [/input-8, 2042] [/input-8, 2042] [/input-8, 2042] [/input-8, 2042] [/input-8, 2042] [/input-8, 2042] [/input-8, 2042] [/input, 89] [/input-8, 2042] [/input-8, 2042] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8371503949165344, worst -0.02527277171611786
10 lb beta sum: 0.8371503949165344, worst -0.02712114155292511
Time: prepare 0.0186    bound 0.1159    transfer 0.0013    finalize 0.0026    func 0.1412    
Accumulated time: func 0.7192    prepare 0.0870    bound 0.6098    transfer 0.0066    finalize 0.0129    
all_split False
======================Cut inference begins======================
max lb tensor(0.47148389) min lb tensor(-0.02527277)
Number of Verified Splits: 126 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.021342754364013672 
BICCOS Cumulative time: 0.09593987464904785
Preprocessing time: 0.011734485626220703 Inference time: 0.006525754928588867 Add cuts time: 0.002841472625732422 Cut analysis time: 0.0002410411834716797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01814 (5), -0.01809 (5), -0.01792 (5), -0.01787 (5), -0.01785 (5), -0.01768 (5), -0.01724 (5), -0.01724 (5), -0.01724 (5), -0.01717 (5), -0.01717 (5), -0.01717 (5), -0.01708 (5), -0.01708 (5), -0.01708 (5), -0.01702 (5), -0.01702 (5), -0.01702 (5), -0.01699 (5), -0.01699 (5), 
Length of domains: 50
Time: pickout 0.0012    decision 0.0196    set_bounds 0.0181    solve 0.1413    add 0.0975    
Accumulated time: pickout 0.0051    decision 0.5960    set_bounds 0.0689    solve 0.6674    add 0.5730    
Current (lb-rhs): -0.018135175108909607
250 domains visited
Cumulative time: 2.0643255710601807

Restore {'/input': ([], [], [], [], []), '/input-8': ([179, 1028, 2044], [-1.0, -1.0, -1.0], [0, 0, 0], [-5.349855235172062e-21, 0.006862507667392492, 0.00738094886764884], [0, 2, 3]), '/input-12': (tensor([40, 35]), tensor([-1., -1.]), tensor([0, 0]), tensor([0.06610961, 0.00011347]), tensor([1, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([179, 1028, 2044], [-1.0, -1.0, -1.0], [0, 0, 0], [-5.349855235172062e-21, 0.006862507667392492, 0.00738094886764884], [0, 2, 3]), '/input-12': (tensor([40, 35]), tensor([-1.,  1.]), tensor([0, 0]), tensor([0.06610961, 0.48753923]), tensor([1, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': (tensor([ 179, 1028, 2044]), tensor([-1., -1.,  1.]), tensor([0, 0, 0]), tensor([-5.34985524e-21,  6.86250767e-03,  3.34613188e-03]), tensor([0, 2, 3])), '/input-12': ([40], [-1.0], [0], [0.06610961258411407], [1])}
Restore {'/input': ([], [], [], [], []), '/input-8': ([179, 1028], [-1.0, 1.0], [0, 0], [-5.349855235172062e-21, 0.003332422813400626], [0, 2]), '/input-12': (tensor([40, 35]), tensor([-1., -1.]), tensor([0, 0]), tensor([0.06610961, 0.00010578]), tensor([1, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([179, 1028], [-1.0, 1.0], [0, 0], [-5.349855235172062e-21, 0.003332422813400626], [0, 2]), '/input-12': (tensor([40, 35]), tensor([-1.,  1.]), tensor([0, 0]), tensor([0.06610961, 0.48905736]), tensor([1, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([179, 1028, 2044], [-1.0, -1.0, -1.0], [0, 0, 0], [-5.349855235172062e-21, 0.006906495895236731, 0.006778256502002478], [0, 2, 3]), '/input-12': (tensor([40, 35]), tensor([ 1., -1.]), tensor([0, 0]), tensor([-5.34993925e-21,  2.22103423e-04]), tensor([1, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([179, 1028, 2044], [-1.0, -1.0, -1.0], [0, 0, 0], [-5.349855235172062e-21, 0.006906495895236731, 0.006778256502002478], [0, 2, 3]), '/input-12': (tensor([40, 35]), tensor([1., 1.]), tensor([0, 0]), tensor([-5.34993925e-21,  4.88597274e-01]), tensor([1, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([179, 1028, 2044], [-1.0, -1.0, 1.0], [0, 0, 0], [-5.349855235172062e-21, 0.006906495895236731, 0.0033604369964450598], [0, 2, 3]), '/input-12': (tensor([40, 35]), tensor([ 1., -1.]), tensor([0, 0]), tensor([-5.34993925e-21,  1.44706792e-04]), tensor([1, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([179, 1028, 2044], [-1.0, -1.0, 1.0], [0, 0, 0], [-5.349855235172062e-21, 0.006906495895236731, 0.0033604369964450598], [0, 2, 3]), '/input-12': (tensor([40, 35]), tensor([1., 1.]), tensor([0, 0]), tensor([-5.34993925e-21,  4.89266634e-01]), tensor([1, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([179, 1028, 2044], [-1.0, 1.0, -1.0], [0, 0, 0], [-5.349855235172062e-21, 0.0035613940563052893, 0.006658689584583044], [0, 2, 3]), '/input-12': (tensor([40, 35]), tensor([ 1., -1.]), tensor([0, 0]), tensor([-5.34993925e-21,  1.42084187e-04]), tensor([1, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([179, 1028, 2044], [-1.0, 1.0, -1.0], [0, 0, 0], [-5.349855235172062e-21, 0.0035613940563052893, 0.006658689584583044], [0, 2, 3]), '/input-12': (tensor([40, 35]), tensor([1., 1.]), tensor([0, 0]), tensor([-5.34993925e-21,  4.88027692e-01]), tensor([1, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([179, 1028, 2044], [-1.0, 1.0, 1.0], [0, 0, 0], [-5.349855235172062e-21, 0.0035613940563052893, 0.003383891424164176], [0, 2, 3]), '/input-12': (tensor([40, 35]), tensor([ 1., -1.]), tensor([0, 0]), tensor([-5.34993925e-21,  9.34468044e-05]), tensor([1, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([179, 1028, 2044], [-1.0, 1.0, 1.0], [0, 0, 0], [-5.349855235172062e-21, 0.0035613940563052893, 0.003383891424164176], [0, 2, 3]), '/input-12': (tensor([40, 35]), tensor([1., 1.]), tensor([0, 0]), tensor([-5.34993925e-21,  4.89060044e-01]), tensor([1, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': (tensor([179]), tensor([1.]), tensor([0]), tensor([-5.34985524e-21]), tensor([0])), '/input-12': ([], [], [], [], [])}
Shallow branching resets to n domains:  14
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1240885853767395
10 lb beta sum: 0.2709725797176361, worst -0.070990651845932
Time: prepare 0.0006    bound 0.1117    transfer 0.0002    finalize 0.0002    func 0.1129    
Accumulated time: func 0.8321    prepare 0.0876    bound 0.7216    transfer 0.0069    finalize 0.0131    
After pruning, left:  8

Back to Regular BaB

BaB round 1
batch: 8
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 35] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 35] 
split level 1: [/input-12, 33] [/input-12, 58] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 58] 
split level 2: [/input-8, 2042] [/input-12, 33] [/input-8, 2044] [/input-8, 2042] [/input-8, 2042] [/input-8, 2042] [/input-8, 2042] [/input-12, 33] 
split level 3: [/input, 214] [/input-8, 2042] [/input-8, 2042] [/input, 214] [/input, 214] [/input, 214] [/input, 214] [/input-12, 40] 
split level 4: [/input, 1719] [/input, 214] [/input, 214] [/input, 472] [/input, 472] [/input, 472] [/input, 472] [/input-8, 1028] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5458826422691345, worst -0.05446265637874603
10 lb beta sum: 0.5458826422691345, worst -0.05438201129436493
Time: prepare 0.0131    bound 0.1125    transfer 0.0009    finalize 0.0019    func 0.1301    
Accumulated time: func 0.9622    prepare 0.1010    bound 0.8341    transfer 0.0078    finalize 0.0150    
all_split False
======================Cut inference begins======================
max lb tensor(0.77321333) min lb tensor(-0.05435275)
Number of Verified Splits: 200 of 256
Stop inferencing: Max iteration reached.
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.0003230571746826172 
BICCOS Cumulative time: 0.09626293182373047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05435 (5), -0.05105 (5), -0.04720 (5), -0.04410 (5), -0.02477 (5), -0.02362 (5), -0.02167 (5), -0.02118 (5), -0.02104 (5), -0.02078 (5), -0.02008 (5), -0.01977 (5), -0.01825 (5), -0.01808 (5), -0.01803 (5), -0.01722 (5), -0.01708 (5), -0.01673 (5), -0.01644 (5), -0.01530 (5), 
Length of domains: 56
Time: pickout 0.0006    decision 0.0155    set_bounds 0.0289    solve 0.1302    add 0.0022    
Accumulated time: pickout 0.0057    decision 0.6114    set_bounds 0.0978    solve 0.7977    add 0.5751    
Current (lb-rhs): -0.05435274541378021
306 domains visited
Cumulative time: 2.384615659713745

BaB round 2
batch: 56
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1053] [/input-8, 1053] [/input-8, 787] [/input-8, 787] [/input-8, 787] [/input-8, 787] [/input-8, 1053] [/input-8, 2044] [/input-8, 1053] [/input-8, 1053] 
split level 1: [/input-8, 787] [/input-8, 787] [/input, 1719] [/input, 1719] [/input, 1719] [/input, 1719] [/input, 1719] [/input-8, 2042] [/input-8, 787] [/input, 1719] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5043492913246155, worst -0.04969535768032074
10 lb beta sum: 0.5043492913246155, worst -0.049667105078697205
Time: prepare 0.0115    bound 0.1177    transfer 0.0012    finalize 0.0014    func 0.1332    
Accumulated time: func 1.0955    prepare 0.1127    bound 0.9518    transfer 0.0090    finalize 0.0164    
all_split False
======================Cut inference begins======================
max lb tensor(0.00664182) min lb tensor(-0.04964398)
Number of Verified Splits: 30 of 224
Stop inferencing: Max iteration reached.
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.00033283233642578125 
BICCOS Cumulative time: 0.09659576416015625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04964 (7), -0.04834 (7), -0.04627 (7), -0.04498 (7), -0.04251 (7), -0.04185 (7), -0.04097 (7), -0.04066 (7), -0.03933 (7), -0.03844 (7), -0.03783 (7), -0.03727 (7), -0.03568 (7), -0.03443 (7), -0.03247 (7), -0.03120 (7), -0.02070 (7), -0.01990 (7), -0.01967 (7), -0.01888 (7), 
Length of domains: 194
Time: pickout 0.0020    decision 0.0164    set_bounds 0.0154    solve 0.1333    add 0.0018    
Accumulated time: pickout 0.0077    decision 0.6278    set_bounds 0.1132    solve 0.9310    add 0.5769    
Current (lb-rhs): -0.04964397847652435
500 domains visited
Cumulative time: 2.554291248321533

BaB round 3
batch: 194
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 213] [/input, 4038] [/input-8, 787] [/input-8, 1053] [/input, 213] [/input-8, 787] [/input, 213] [/input-8, 787] [/input, 213] [/input, 213] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5116193294525146, worst -0.04718874394893646
10 lb beta sum: 0.5116193294525146, worst -0.04713936150074005
Time: prepare 0.0200    bound 0.1256    transfer 0.0018    finalize 0.0028    func 0.1528    
Accumulated time: func 1.2482    prepare 0.1329    bound 1.0774    transfer 0.0108    finalize 0.0192    
all_split False
======================Cut inference begins======================
max lb tensor(0.00663371) min lb tensor(-0.04711454)
Number of Verified Splits: 88 of 388
Stop inferencing: Max iteration reached.
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.00033354759216308594 
BICCOS Cumulative time: 0.09692931175231934
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04711 (8), -0.04638 (8), -0.04582 (8), -0.04509 (8), -0.04368 (8), -0.04295 (8), -0.04239 (8), -0.04166 (8), -0.04069 (8), -0.03926 (8), -0.03918 (8), -0.03853 (8), -0.03808 (8), -0.03751 (8), -0.03735 (8), -0.03734 (8), -0.03597 (8), -0.03579 (8), -0.03578 (8), -0.03507 (8), 
Length of domains: 300
Time: pickout 0.0039    decision 0.0215    set_bounds 0.0186    solve 0.1529    add 0.0037    
Accumulated time: pickout 0.0116    decision 0.6494    set_bounds 0.1318    solve 1.0839    add 0.5806    
Current (lb-rhs): -0.0471145361661911
800 domains visited
Cumulative time: 2.755997657775879

BaB round 4
batch: 300
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 213] [/input, 213] [/input, 1689] [/input, 213] [/input, 1703] [/input, 213] [/input-8, 1053] [/input-8, 1053] [/input-8, 1053] [/input, 213] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5290579199790955, worst -0.046856626868247986
10 lb beta sum: 0.5290579199790955, worst -0.04684154689311981
Time: prepare 0.0304    bound 0.1200    transfer 0.0026    finalize 0.0028    func 0.1597    
Accumulated time: func 1.4079    prepare 0.1635    bound 1.1974    transfer 0.0134    finalize 0.0220    
all_split False
======================Cut inference begins======================
max lb tensor(0.00622354) min lb tensor(-0.04682986)
Number of Verified Splits: 178 of 600
Stop inferencing: Max iteration reached.
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.0003368854522705078 
BICCOS Cumulative time: 0.09726619720458984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04683 (9), -0.04609 (9), -0.04553 (9), -0.04479 (9), -0.04336 (9), -0.04262 (9), -0.04206 (9), -0.04132 (9), -0.04074 (9), -0.04045 (9), -0.03955 (9), -0.03943 (9), -0.03899 (9), -0.03824 (9), -0.03824 (9), -0.03780 (9), -0.03729 (9), -0.03713 (9), -0.03704 (9), -0.03653 (9), 
Length of domains: 422
Time: pickout 0.0061    decision 0.0268    set_bounds 0.0243    solve 0.1599    add 0.0035    
Accumulated time: pickout 0.0177    decision 0.6762    set_bounds 0.1561    solve 1.2437    add 0.5841    
Current (lb-rhs): -0.046829864382743835
1222 domains visited
Cumulative time: 2.9783153533935547

BaB round 5
batch: 422
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 1703] [/input, 1703] [/input, 362] [/input, 1703] [/input, 1689] [/input, 1703] [/input, 362] [/input, 1703] [/input-8, 1053] [/input, 1689] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5523773431777954, worst -0.04504488408565521
10 lb beta sum: 0.5523773431777954, worst -0.045028552412986755
Time: prepare 0.0433    bound 0.1215    transfer 0.0030    finalize 0.0053    func 0.1787    
Accumulated time: func 1.5866    prepare 0.2070    bound 1.3189    transfer 0.0163    finalize 0.0273    
all_split False
======================Cut inference begins======================
max lb tensor(0.00718331) min lb tensor(-0.04501702)
Number of Verified Splits: 300 of 844
Stop inferencing: Max iteration reached.
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.0003604888916015625 
BICCOS Cumulative time: 0.0976266860961914
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04502 (10), -0.04405 (10), -0.04371 (10), -0.04276 (10), -0.04161 (10), -0.04072 (10), -0.04056 (10), -0.04032 (10), -0.04026 (10), -0.04024 (10), -0.03926 (10), -0.03892 (10), -0.03846 (10), -0.03783 (10), -0.03759 (10), -0.03743 (10), -0.03724 (10), -0.03714 (10), -0.03658 (10), -0.03642 (10), 
Length of domains: 544
Time: pickout 0.0077    decision 0.0342    set_bounds 0.0354    solve 0.1789    add 0.0044    
Accumulated time: pickout 0.0254    decision 0.7104    set_bounds 0.1915    solve 1.4227    add 0.5885    
Current (lb-rhs): -0.04501701891422272
1766 domains visited
Cumulative time: 3.2412056922912598

BaB round 6
batch: 544
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 1689] [/input, 1689] [/input-8, 787] [/input, 1689] [/input-8, 2034] [/input, 1689] [/input, 1689] [/input, 1689] [/input-8, 787] [/input, 438] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5881311297416687, worst -0.04253087937831879
10 lb beta sum: 0.5881311297416687, worst -0.04249595105648041
Time: prepare 0.0555    bound 0.1273    transfer 0.0047    finalize 0.0069    func 0.2015    
Accumulated time: func 1.7881    prepare 0.2627    bound 1.4461    transfer 0.0211    finalize 0.0342    
all_split False
======================Cut inference begins======================
max lb tensor(0.00570856) min lb tensor(-0.04248564)
Number of Verified Splits: 355 of 1088
Stop inferencing: Max iteration reached.
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.0003719329833984375 
BICCOS Cumulative time: 0.09799861907958984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04249 (11), -0.04223 (11), -0.04200 (11), -0.04118 (11), -0.04093 (11), -0.04070 (11), -0.03989 (11), -0.03903 (11), -0.03892 (11), -0.03858 (11), -0.03848 (11), -0.03839 (11), -0.03792 (11), -0.03773 (11), -0.03763 (11), -0.03745 (11), -0.03742 (11), -0.03720 (11), -0.03709 (11), -0.03664 (11), 
Length of domains: 733
Time: pickout 0.0080    decision 0.0404    set_bounds 0.0459    solve 0.2019    add 0.0036    
Accumulated time: pickout 0.0334    decision 0.7508    set_bounds 0.2374    solve 1.6245    add 0.5921    
Current (lb-rhs): -0.042485639452934265
2499 domains visited
Cumulative time: 3.543792486190796

BaB round 7
batch: 733
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 438] [/input, 438] [/input-8, 469] [/input, 438] [/input, 438] [/input-8, 477] [/input, 438] [/input, 1703] [/input-8, 2034] [/input, 438] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6338637471199036, worst -0.04108355939388275
10 lb beta sum: 0.6338637471199036, worst -0.04107289016246796
Time: prepare 0.0818    bound 0.1347    transfer 0.0061    finalize 0.0085    func 0.2406    
Accumulated time: func 2.0287    prepare 0.3447    bound 1.5808    transfer 0.0272    finalize 0.0428    
all_split False
======================Cut inference begins======================
max lb tensor(0.00591069) min lb tensor(-0.04106967)
Number of Verified Splits: 474 of 1466
Stop inferencing: Max iteration reached.
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.0003764629364013672 
BICCOS Cumulative time: 0.09837508201599121
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04107 (12), -0.04059 (12), -0.03976 (12), -0.03970 (12), -0.03944 (12), -0.03929 (12), -0.03921 (12), -0.03892 (12), -0.03841 (12), -0.03814 (12), -0.03792 (12), -0.03777 (12), -0.03763 (12), -0.03746 (12), -0.03722 (12), -0.03717 (12), -0.03689 (12), -0.03656 (12), -0.03649 (12), -0.03632 (12), 
Length of domains: 992
Time: pickout 0.0132    decision 0.0516    set_bounds 0.0621    solve 0.2418    add 0.0089    
Accumulated time: pickout 0.0466    decision 0.8024    set_bounds 0.2995    solve 1.8664    add 0.6010    
Current (lb-rhs): -0.041069671511650085
3491 domains visited
Cumulative time: 3.9252331256866455

BaB round 8
batch: 992
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 2034] [/input-8, 2034] [/input, 1703] [/input-8, 2034] [/input-8, 2034] [/input-8, 2034] [/input, 362] [/input-8, 2034] [/input-8, 494] [/input-8, 2034] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6935001611709595, worst -0.03952379524707794
10 lb beta sum: 0.6935001611709595, worst -0.03952606022357941
Time: prepare 0.1013    bound 0.1474    transfer 0.0081    finalize 0.1724    func 0.4428    
Accumulated time: func 2.4715    prepare 0.4462    bound 1.7283    transfer 0.0353    finalize 0.2152    
all_split False
======================Cut inference begins======================
max lb tensor(0.00590214) min lb tensor(-0.03951965)
Number of Verified Splits: 486 of 1984
Stop inferencing: Max iteration reached.
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.0005044937133789062 
BICCOS Cumulative time: 0.09887957572937012
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03952 (13), -0.03903 (13), -0.03821 (13), -0.03806 (13), -0.03785 (13), -0.03773 (13), -0.03762 (13), -0.03747 (13), -0.03730 (13), -0.03700 (13), -0.03676 (13), -0.03676 (13), -0.03655 (13), -0.03627 (13), -0.03624 (13), -0.03615 (13), -0.03601 (13), -0.03594 (13), -0.03591 (13), -0.03580 (13), 
Length of domains: 1498
Time: pickout 0.0194    decision 0.0652    set_bounds 0.0834    solve 0.4432    add 0.0070    
Accumulated time: pickout 0.0660    decision 0.8676    set_bounds 0.3828    solve 2.3096    add 0.6080    
Current (lb-rhs): -0.03951965272426605
4989 domains visited
Cumulative time: 4.54831075668335

BaB round 9
batch: 1498
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 494] [/input-8, 494] [/input-8, 494] [/input-8, 473] [/input-8, 494] [/input-8, 2016] [/input-8, 494] [/input-8, 494] [/input-8, 494] [/input-8, 494] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7540010809898376, worst -0.03829990327358246
10 lb beta sum: 0.7540010809898376, worst -0.03829784691333771
Time: prepare 0.1572    bound 0.1834    transfer 0.0110    finalize 0.0164    func 0.3880    
Accumulated time: func 2.8596    prepare 0.6037    bound 1.9116    transfer 0.0463    finalize 0.2316    
all_split False
======================Cut inference begins======================
max lb tensor(0.00554395) min lb tensor(-0.03829573)
Number of Verified Splits: 437 of 2996
Stop inferencing: Max iteration reached.
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.0004184246063232422 
BICCOS Cumulative time: 0.09929800033569336
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03830 (14), -0.03781 (14), -0.03698 (14), -0.03683 (14), -0.03663 (14), -0.03651 (14), -0.03649 (14), -0.03635 (14), -0.03623 (14), -0.03609 (14), -0.03599 (14), -0.03576 (14), -0.03551 (14), -0.03532 (14), -0.03519 (14), -0.03518 (14), -0.03516 (14), -0.03505 (14), -0.03491 (14), -0.03479 (14), 
Length of domains: 2559
Time: pickout 0.0230    decision 0.0924    set_bounds 0.1289    solve 0.3886    add 0.0203    
Accumulated time: pickout 0.0890    decision 0.9600    set_bounds 0.5117    solve 2.6981    add 0.6282    
Current (lb-rhs): -0.03829573094844818
7548 domains visited
Cumulative time: 5.2078025341033936

BaB round 10
batch: 2559
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 597] [/input-8, 501] [/input, 438] [/input-8, 2016] [/input-8, 597] [/input-8, 2016] [/input-8, 2016] [/input-8, 494] [/input-8, 2035] [/input-8, 2016] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7970001697540283, worst -0.037300094962120056
10 lb beta sum: 0.7970001697540283, worst -0.037300363183021545
Time: prepare 0.2696    bound 0.2750    transfer 0.0232    finalize 0.1931    func 0.7942    
Accumulated time: func 3.6538    prepare 0.8735    bound 2.1866    transfer 0.0695    finalize 0.4247    
all_split False
======================Cut inference begins======================
max lb tensor(0.00561599) min lb tensor(-0.03729852)
Number of Verified Splits: 652 of 5118
Stop inferencing: Max iteration reached.
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.0005974769592285156 
BICCOS Cumulative time: 0.09989547729492188
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03730 (15), -0.03681 (15), -0.03598 (15), -0.03582 (15), -0.03562 (15), -0.03552 (15), -0.03534 (15), -0.03527 (15), -0.03524 (15), -0.03509 (15), -0.03478 (15), -0.03476 (15), -0.03450 (15), -0.03432 (15), -0.03415 (15), -0.03404 (15), -0.03397 (15), -0.03396 (15), -0.03391 (15), -0.03382 (15), 
Length of domains: 4466
Time: pickout 0.0365    decision 0.1502    set_bounds 0.2172    solve 0.7957    add 0.0296    
Accumulated time: pickout 0.1255    decision 1.1102    set_bounds 0.7290    solve 3.4938    add 0.6578    
Current (lb-rhs): -0.03729851543903351
12014 domains visited
Cumulative time: 6.445773363113403

BaB round 11
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 2016] [/input-8, 2034] [/input-8, 2035] [/input-8, 2035] [/input-8, 2016] [/input-8, 2035] [/input-8, 2035] [/input-8, 1053] [/input-8, 2035] [/input-8, 2016] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8348526954650879, worst -0.035344913601875305
10 lb beta sum: 0.8348526954650879, worst -0.035346195101737976
Time: prepare 0.4310    bound 0.3980    transfer 0.0297    finalize 0.0458    func 1.1275    
Accumulated time: func 4.7813    prepare 1.3048    bound 2.5846    transfer 0.0992    finalize 0.4705    
all_split False
======================Cut inference begins======================
max lb tensor(0.00561398) min lb tensor(-0.03534220)
Number of Verified Splits: 627 of 8192
Stop inferencing: Max iteration reached.
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.0005583763122558594 
BICCOS Cumulative time: 0.10045385360717773
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03534 (16), -0.03489 (16), -0.03486 (16), -0.03470 (16), -0.03443 (16), -0.03428 (16), -0.03423 (16), -0.03386 (16), -0.03382 (15), -0.03378 (16), -0.03367 (16), -0.03355 (16), -0.03340 (16), -0.03339 (16), -0.03334 (15), -0.03328 (16), -0.03324 (16), -0.03322 (16), -0.03312 (16), -0.03311 (16), 
Length of domains: 7935
Time: pickout 0.0590    decision 0.2311    set_bounds 0.3478    solve 1.1298    add 0.0390    
Accumulated time: pickout 0.1845    decision 1.3413    set_bounds 1.0767    solve 4.6235    add 0.6968    
Current (lb-rhs): -0.035342201590538025
19579 domains visited
current_vram/total_varm: 27.5GB/99.9GB, batch_size increase to 8192
Cumulative time: 8.26617693901062

BaB round 12
batch: 7935
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 2034] [/input-8, 494] [/input-8, 2016] [/input-8, 500] [/input, 435] [/input-8, 500] [/input, 435] [/input-8, 494] [/input, 435] [/input-8, 500] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8561593890190125, worst -0.034236982464790344
10 lb beta sum: 0.8561593890190125, worst -0.03423874080181122
Time: prepare 0.8366    bound 0.7109    transfer 0.0834    finalize 0.0901    func 1.8253    
Accumulated time: func 6.6066    prepare 2.1417    bound 3.2955    transfer 0.1827    finalize 0.5605    
all_split False
======================Cut inference begins======================
max lb tensor(0.00537373) min lb tensor(-0.03423677)
Number of Verified Splits: 1117 of 15870
Stop inferencing: Max iteration reached.
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.0005905628204345703 
BICCOS Cumulative time: 0.1010444164276123
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03424 (17), -0.03379 (17), -0.03376 (17), -0.03362 (17), -0.03314 (17), -0.03295 (17), -0.03280 (16), -0.03275 (17), -0.03256 (17), -0.03248 (17), -0.03245 (17), -0.03233 (16), -0.03233 (17), -0.03232 (17), -0.03230 (17), -0.03228 (17), -0.03220 (17), -0.03217 (17), -0.03213 (17), -0.03212 (17), 
Length of domains: 14753
Time: pickout 0.1508    decision 0.4460    set_bounds 0.8765    solve 1.8287    add 0.0626    
Accumulated time: pickout 0.3354    decision 1.7873    set_bounds 1.9532    solve 6.4523    add 0.7594    
Current (lb-rhs): -0.03423677384853363
34332 domains visited
Cumulative time: 11.652042627334595

BaB round 13
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 2016] [/input-8, 2035] [/input-8, 2034] [/input, 3385] [/input-8, 2035] [/input, 3385] [/input-8, 2035] [/input-8, 500] [/input-8, 2016] [/input-8, 2035] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8618124723434448, worst -0.033128902316093445
10 lb beta sum: 0.8618124723434448, worst -0.03312842547893524
Time: prepare 0.8740    bound 0.7299    transfer 0.0825    finalize 0.0918    func 1.8842    
Accumulated time: func 8.4909    prepare 3.0161    bound 4.0254    transfer 0.2652    finalize 0.6523    
all_split False
======================Cut inference begins======================
max lb tensor(0.00484343) min lb tensor(-0.03312697)
Number of Verified Splits: 1108 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.0007050037384033203 
BICCOS Cumulative time: 0.10174942016601562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03313 (18), -0.03295 (17), -0.03264 (18), -0.03250 (18), -0.03248 (17), -0.03232 (17), -0.03220 (17), -0.03202 (18), -0.03182 (17), -0.03173 (17), -0.03169 (17), -0.03168 (18), -0.03163 (18), -0.03145 (17), -0.03143 (18), -0.03122 (18), -0.03120 (17), -0.03117 (18), -0.03115 (18), -0.03108 (18), 
Length of domains: 21837
Time: pickout 0.1248    decision 0.6707    set_bounds 0.9604    solve 1.8873    add 0.0766    
Accumulated time: pickout 0.4601    decision 2.4580    set_bounds 2.9137    solve 8.3396    add 0.8360    
Current (lb-rhs): -0.033126965165138245
49608 domains visited
current_vram/total_varm: 38.6GB/99.9GB, batch_size increase to 16384
Cumulative time: 15.400206565856934

BaB round 14
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 2045] [/input-8, 2035] [/input-8, 2045] [/input-8, 1053] [/input-8, 2045] [/input-8, 597] [/input-8, 2045] [/input-8, 473] [/input-8, 2045] [/input, 1703] 
cut re-enabled after branching node selection
0 lb beta sum: 0.864814043045044, worst -0.031845465302467346
10 lb beta sum: 0.864814043045044, worst -0.03184325993061066
Time: prepare 1.7474    bound 1.3943    transfer 0.2464    finalize 0.2020    func 4.1344    
Accumulated time: func 12.6252    prepare 4.7639    bound 5.4197    transfer 0.5116    finalize 0.8543    
all_split False
======================Cut inference begins======================
max lb tensor(0.00393902) min lb tensor(-0.03184117)
Number of Verified Splits: 2812 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.0007045269012451172 
BICCOS Cumulative time: 0.10245394706726074
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03184 (18), -0.03173 (19), -0.03137 (18), -0.03126 (19), -0.03121 (18), -0.03111 (19), -0.03110 (18), -0.03063 (19), -0.03062 (18), -0.03056 (18), -0.03055 (18), -0.03041 (18), -0.03034 (18), -0.03027 (19), -0.03022 (19), -0.03011 (19), -0.03011 (18), -0.03009 (18), -0.03002 (19), -0.02987 (18), 
Length of domains: 35409
Time: pickout 0.2504    decision 1.7123    set_bounds 1.7925    solve 4.1400    add 0.1306    
Accumulated time: pickout 0.7106    decision 4.1704    set_bounds 4.7061    solve 12.4796    add 0.9666    
Current (lb-rhs): -0.03184117376804352
79564 domains visited
current_vram/total_varm: 38.6GB/99.9GB, batch_size increase to 32768
Cumulative time: 23.488431215286255

BaB round 15
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 597] [/input-8, 501] [/input-8, 478] [/input-8, 2035] [/input-8, 478] [/input-8, 2035] [/input-8, 2035] [/input, 3385] [/input-8, 477] [/input-8, 478] 
cut re-enabled after branching node selection
0 lb beta sum: 0.867350697517395, worst -0.030440732836723328
10 lb beta sum: 0.867350697517395, worst -0.030437573790550232
Time: prepare 3.5012    bound 7.9242    transfer 0.6037    finalize 0.4869    func 13.4749    
Accumulated time: func 26.1002    prepare 8.2656    bound 13.3439    transfer 1.1153    finalize 1.3412    
all_split False
======================Cut inference begins======================
max lb tensor(0.00422712) min lb tensor(-0.03043537)
Number of Verified Splits: 7331 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.03338456153869629 
BICCOS Cumulative time: 0.13583850860595703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03044 (19), -0.03021 (20), -0.02998 (19), -0.02982 (19), -0.02975 (20), -0.02969 (19), -0.02959 (20), -0.02947 (19), -0.02923 (19), -0.02914 (19), -0.02912 (20), -0.02897 (19), -0.02893 (19), -0.02875 (20), -0.02870 (20), -0.02870 (19), -0.02862 (20), -0.02861 (19), -0.02858 (20), -0.02850 (20), 
Length of domains: 60846
Time: pickout 0.5250    decision 3.3099    set_bounds 3.9369    solve 13.4856    add 0.2547    
Accumulated time: pickout 1.2355    decision 7.4803    set_bounds 8.6430    solve 25.9652    add 1.2213    
Current (lb-rhs): -0.030435368418693542
137769 domains visited
Cumulative time: 45.18299961090088

BaB round 16
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 501] [/input-8, 597] [/input-8, 2045] [/input, 3385] [/input-8, 477] [/input-8, 597] [/input-8, 2045] [/input-8, 478] [/input-8, 2035] [/input, 3385] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8685977458953857, worst -0.0289294570684433
10 lb beta sum: 0.8685977458953857, worst -0.02891780436038971
Time: prepare 3.5694    bound 7.9300    transfer 0.6162    finalize 0.4919    func 13.7591    
Accumulated time: func 39.8592    prepare 11.8354    bound 21.2740    transfer 1.7316    finalize 1.8331    
all_split False
======================Cut inference begins======================
max lb tensor(0.00899701) min lb tensor(-0.02891405)
Number of Verified Splits: 9574 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.0010061264038085938 
BICCOS Cumulative time: 0.13684463500976562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03021 (20), -0.02975 (20), -0.02959 (20), -0.02912 (20), -0.02891 (20), -0.02875 (20), -0.02870 (20), -0.02850 (20), -0.02847 (20), -0.02831 (20), -0.02830 (19), -0.02826 (20), -0.02825 (20), -0.02824 (20), -0.02817 (20), -0.02809 (20), -0.02806 (19), -0.02805 (20), -0.02800 (20), -0.02782 (20), 
Length of domains: 84040
Time: pickout 0.5203    decision 3.4058    set_bounds 3.6789    solve 13.7716    add 0.2419    
Accumulated time: pickout 1.7559    decision 10.8861    set_bounds 12.3219    solve 39.7368    add 1.4631    
Current (lb-rhs): -0.030207619071006775
193731 domains visited
Cumulative time: 66.9886257648468

BaB round 17
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 3401] [/input-8, 2035] [/input-8, 500] [/input-8, 2045] [/input-8, 478] [/input-8, 2035] [/input-8, 2035] [/input, 3385] [/input-8, 2035] [/input-8, 2035] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8688291907310486, worst -0.028906479477882385
10 lb beta sum: 0.8688291907310486, worst -0.028907880187034607
Time: prepare 3.5278    bound 7.9258    transfer 0.6169    finalize 1.2445    func 13.7453    
Accumulated time: func 53.6046    prepare 15.3637    bound 29.1998    transfer 2.3485    finalize 3.0776    
all_split False
======================Cut inference begins======================
max lb tensor(0.00839247) min lb tensor(-0.02890430)
Number of Verified Splits: 9570 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.0009720325469970703 
BICCOS Cumulative time: 0.1378166675567627
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02891 (20), -0.02890 (21), -0.02847 (20), -0.02831 (20), -0.02828 (21), -0.02817 (20), -0.02800 (20), -0.02772 (20), -0.02769 (21), -0.02767 (21), -0.02765 (20), -0.02750 (20), -0.02745 (21), -0.02741 (20), -0.02740 (21), -0.02729 (20), -0.02727 (21), -0.02724 (21), -0.02720 (20), -0.02719 (21), 
Length of domains: 107238
Time: pickout 0.5409    decision 3.3329    set_bounds 3.8381    solve 13.7591    add 0.2532    
Accumulated time: pickout 2.2967    decision 14.2190    set_bounds 16.1600    solve 53.4959    add 1.7163    
Current (lb-rhs): -0.02891404926776886
249697 domains visited
Cumulative time: 88.8775544166565

BaB round 18
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 597] [/input-8, 2034] [/input-8, 598] [/input, 362] [/input-8, 2035] [/input, 435] [/input, 298] [/input-8, 597] [/input-8, 2035] [/input-8, 478] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8694580793380737, worst -0.02761329710483551
10 lb beta sum: 0.8694580793380737, worst -0.027615591883659363
Time: prepare 3.5888    bound 7.9250    transfer 0.6110    finalize 0.5005    func 13.0585    
Accumulated time: func 66.6631    prepare 18.9529    bound 37.1248    transfer 2.9595    finalize 3.5781    
all_split False
======================Cut inference begins======================
max lb tensor(0.00944532) min lb tensor(-0.02760981)
Number of Verified Splits: 12249 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.0010776519775390625 
BICCOS Cumulative time: 0.13889431953430176
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02890 (21), -0.02828 (21), -0.02772 (20), -0.02769 (21), -0.02767 (21), -0.02761 (21), -0.02745 (21), -0.02740 (21), -0.02724 (21), -0.02719 (21), -0.02711 (21), -0.02696 (20), -0.02696 (21), -0.02695 (21), -0.02687 (21), -0.02686 (21), -0.02679 (20), -0.02678 (21), -0.02670 (21), -0.02666 (20), 
Length of domains: 127757
Time: pickout 0.5444    decision 3.6963    set_bounds 4.0166    solve 14.0839    add 0.1741    
Accumulated time: pickout 2.8411    decision 17.9153    set_bounds 20.1766    solve 67.5798    add 1.8904    
Current (lb-rhs): -0.028904303908348083
302984 domains visited
Cumulative time: 111.61273860931396

BaB round 19
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 362] [/input-8, 2035] [/input-8, 597] [/input, 3401] [/input, 3401] [/input-8, 597] [/input-8, 2045] [/input, 3401] [/input-8, 501] [/input-8, 500] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8694847822189331, worst -0.02687157690525055
10 lb beta sum: 0.8694847822189331, worst -0.02686615288257599
Time: prepare 3.5834    bound 7.9284    transfer 0.6108    finalize 0.5292    func 13.0853    
Accumulated time: func 79.7484    prepare 22.5368    bound 45.0531    transfer 3.5703    finalize 4.1073    
all_split False
======================Cut inference begins======================
max lb tensor(0.00925697) min lb tensor(-0.02686565)
Number of Verified Splits: 12679 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.036478519439697266 
BICCOS Cumulative time: 0.17537283897399902
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02767 (21), -0.02761 (21), -0.02724 (21), -0.02687 (21), -0.02687 (22), -0.02684 (22), -0.02679 (20), -0.02650 (21), -0.02649 (21), -0.02642 (21), -0.02641 (22), -0.02640 (21), -0.02639 (22), -0.02634 (21), -0.02610 (21), -0.02610 (21), -0.02607 (21), -0.02607 (21), -0.02603 (21), -0.02602 (22), 
Length of domains: 147846
Time: pickout 0.5812    decision 3.3796    set_bounds 4.2949    solve 13.1012    add 0.1924    
Accumulated time: pickout 3.4223    decision 21.2949    set_bounds 24.4715    solve 80.6810    add 2.0827    
Current (lb-rhs): -0.02767099440097809
355841 domains visited
Cumulative time: 133.4689483642578

BaB round 20
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 3385] [/input-8, 598] [/input-8, 2035] [/input-8, 1970] [/input-8, 598] [/input-8, 2035] [/input-8, 2045] [/input, 3385] [/input-8, 2045] [/input-8, 2035] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8695918321609497, worst -0.0263700932264328
10 lb beta sum: 0.8695918321609497, worst -0.026394501328468323
Time: prepare 3.5644    bound 7.9260    transfer 0.6222    finalize 0.5323    func 13.0765    
Accumulated time: func 92.8249    prepare 26.1015    bound 52.9792    transfer 4.1925    finalize 4.6397    
all_split False
======================Cut inference begins======================
max lb tensor(0.00959034) min lb tensor(-0.02636786)
Number of Verified Splits: 12603 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.03623199462890625 
BICCOS Cumulative time: 0.21160483360290527
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02761 (21), -0.02687 (21), -0.02687 (22), -0.02684 (22), -0.02650 (21), -0.02649 (21), -0.02642 (21), -0.02641 (22), -0.02640 (21), -0.02639 (22), -0.02637 (22), -0.02634 (21), -0.02610 (21), -0.02602 (22), -0.02600 (21), -0.02598 (21), -0.02593 (22), -0.02584 (21), -0.02579 (21), -0.02566 (22), 
Length of domains: 168011
Time: pickout 0.5662    decision 4.4284    set_bounds 4.4348    solve 13.0932    add 0.2223    
Accumulated time: pickout 3.9885    decision 25.7234    set_bounds 28.9063    solve 93.7742    add 2.3050    
Current (lb-rhs): -0.02760981023311615
408774 domains visited
Cumulative time: 156.51234316825867

BaB round 21
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 3385] [/input-8, 501] [/input-8, 1053] [/input-8, 501] [/input-8, 1053] [/input-8, 477] [/input-8, 473] [/input-8, 501] [/input-8, 501] [/input-8, 1053] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8696720600128174, worst -0.024471327662467957
10 lb beta sum: 0.8696720600128174, worst -0.024612262845039368
Time: prepare 3.5811    bound 7.9275    transfer 0.6329    finalize 0.5027    func 14.5511    
Accumulated time: func 107.3760    prepare 29.6831    bound 60.9066    transfer 4.8254    finalize 5.1424    
all_split False
======================Cut inference begins======================
max lb tensor(0.01043825) min lb tensor(-0.02446850)
Number of Verified Splits: 15245 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.0010602474212646484 
BICCOS Cumulative time: 0.21266508102416992
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02761 (21), -0.02687 (21), -0.02687 (22), -0.02684 (22), -0.02650 (21), -0.02649 (21), -0.02642 (21), -0.02641 (22), -0.02640 (21), -0.02639 (22), -0.02637 (22), -0.02610 (21), -0.02602 (22), -0.02600 (21), -0.02593 (22), -0.02584 (21), -0.02579 (21), -0.02566 (22), -0.02566 (21), -0.02556 (22), 
Length of domains: 185534
Time: pickout 0.6095    decision 4.2172    set_bounds 3.1337    solve 14.5652    add 0.1770    
Accumulated time: pickout 4.5980    decision 29.9406    set_bounds 32.0399    solve 108.3394    add 2.4821    
Current (lb-rhs): -0.02760981023311615
459065 domains visited
Cumulative time: 179.47933077812195

BaB round 22
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 2035] [/input, 3385] [/input-8, 2035] [/input, 3401] [/input-8, 2035] [/input-8, 478] [/input-8, 2035] [/input, 362] [/input-8, 2034] [/input-8, 2034] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8696587085723877, worst -0.02558054029941559
10 lb beta sum: 0.8696587085723877, worst -0.025580689311027527
Time: prepare 3.6013    bound 7.9278    transfer 0.6334    finalize 0.5314    func 13.1300    
Accumulated time: func 120.5060    prepare 33.2848    bound 68.8344    transfer 5.4587    finalize 5.6738    
all_split False
======================Cut inference begins======================
max lb tensor(0.01022984) min lb tensor(-0.02557792)
Number of Verified Splits: 15531 of 65536
Stop inferencing: Max iteration reached.
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.0011670589447021484 
BICCOS Cumulative time: 0.21383213996887207
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02687 (22), -0.02684 (22), -0.02641 (22), -0.02639 (22), -0.02637 (22), -0.02602 (22), -0.02593 (22), -0.02584 (21), -0.02566 (22), -0.02566 (21), -0.02558 (22), -0.02556 (22), -0.02555 (22), -0.02549 (21), -0.02539 (22), -0.02535 (22), -0.02535 (22), -0.02522 (22), -0.02520 (22), -0.02516 (21), 
Length of domains: 202771
Time: pickout 0.5947    decision 3.3669    set_bounds 4.8574    solve 13.1476    add 0.1752    
Accumulated time: pickout 5.1927    decision 33.3075    set_bounds 36.8973    solve 121.4870    add 2.6573    
Current (lb-rhs): -0.026865646243095398
509070 domains visited
Time out!!!!!!!!
Result: unknown in 204.8795 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 196, vnnlib ID: 196 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-7.34187508, -9.73769855, -4.95557117, -4.07531166, -5.10799456,
         -4.86587954, -4.00358391, -5.81644583, -6.91936016, -7.77230597]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [641]; unstable size 641; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 325, 1, 641] with unstable size 324 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 641] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 641] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [324]; unstable size 324; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 324] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 324] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.40970612,  2.98208618, -0.34637237, -0.05800223,  0.34521285,
         -1.21884394,  0.55216157,  0.57143229,  1.41924047]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-7.34187508, -9.73769855, -4.95557117, -4.07531166, -5.10799456,
         -4.86587954, -4.00358391, -5.81644583, -6.91936016, -7.77230597]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.34187365, -9.73769760, -4.95557117, -4.07531118, -5.10799408,
          -4.86587954, -4.00358343, -5.81644535, -6.91935921, -7.77230597],
         [-7.34187365, -9.73769760, -4.95557117, -4.07531118, -5.10799408,
          -4.86587954, -4.00358343, -5.81644535, -6.91935921, -7.77230597]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.88025999,  1.03268290, -0.07172775]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.51904768,  0.56666672,  0.51904768,  ...,  0.69365084,
             0.78888893,  0.56666672],
           [ 0.55079371,  0.64603180,  0.67777783,  ...,  0.74126989,
             0.69365084,  0.61428577],
           [ 0.55079371,  0.50317466,  0.58253974,  ...,  0.77301592,
             0.74126989,  0.67777783],
           ...,
           [-1.40158725, -1.52857137, -1.56031740,  ...,  0.61428577,
             0.74126989,  0.64603180],
           [-1.51269829, -1.32222211, -1.54444432,  ...,  0.66190481,
             0.70952386,  0.61428577],
           [-1.59206343, -1.38571417, -1.24285710,  ...,  0.64603180,
             0.59841275,  0.70952386]],

          [[ 0.67632860,  0.54750413,  0.08051541,  ...,  0.78904998,
             0.88566834,  0.66022551],
           [ 0.80515307,  0.83735919,  0.54750413,  ...,  0.85346222,
             0.80515307,  0.70853472],
           [ 0.85346222,  0.78904998,  0.64412248,  ...,  0.86956531,
             0.88566834,  0.78904998],
           ...,
           [-1.46537840, -1.61030602, -1.67471826,  ...,  0.69243163,
             0.82125610,  0.72463775],
           [-1.61030602, -1.43317223, -1.64251208,  ...,  0.74074084,
             0.78904998,  0.69243163],
           [-1.73913050, -1.49758446, -1.30434775,  ...,  0.72463775,
             0.67632860,  0.78904998]],

          [[ 0.90104967,  0.72113961,  0.27136448,  ...,  1.03598225,
             1.17091501,  0.93103468],
           [ 1.00599718,  1.00599718,  0.81109464,  ...,  0.99100471,
             1.08095968,  1.03598225],
           [ 1.05097473,  1.00599718,  0.94602716,  ...,  0.96101969,
             1.12593722,  1.11094475],
           ...,
           [-1.27286363, -1.39280367, -1.43778121,  ...,  1.00599718,
             1.12593722,  1.03598225],
           [-1.39280367, -1.22788620, -1.42278874,  ...,  1.05097473,
             1.09595215,  1.00599718],
           [-1.49775124, -1.28785622, -1.12293863,  ...,  1.03598225,
             0.99100471,  1.09595215]]],


         [[[ 0.51904768,  0.56666672,  0.51904768,  ...,  0.69365084,
             0.78888893,  0.56666672],
           [ 0.55079371,  0.64603180,  0.67777783,  ...,  0.74126989,
             0.69365084,  0.61428577],
           [ 0.55079371,  0.50317466,  0.58253974,  ...,  0.77301592,
             0.74126989,  0.67777783],
           ...,
           [-1.40158725, -1.52857137, -1.56031740,  ...,  0.61428577,
             0.74126989,  0.64603180],
           [-1.51269829, -1.32222211, -1.54444432,  ...,  0.66190481,
             0.70952386,  0.61428577],
           [-1.59206343, -1.38571417, -1.24285710,  ...,  0.64603180,
             0.59841275,  0.70952386]],

          [[ 0.67632860,  0.54750413,  0.08051541,  ...,  0.78904998,
             0.88566834,  0.66022551],
           [ 0.80515307,  0.83735919,  0.54750413,  ...,  0.85346222,
             0.80515307,  0.70853472],
           [ 0.85346222,  0.78904998,  0.64412248,  ...,  0.86956531,
             0.88566834,  0.78904998],
           ...,
           [-1.46537840, -1.61030602, -1.67471826,  ...,  0.69243163,
             0.82125610,  0.72463775],
           [-1.61030602, -1.43317223, -1.64251208,  ...,  0.74074084,
             0.78904998,  0.69243163],
           [-1.73913050, -1.49758446, -1.30434775,  ...,  0.72463775,
             0.67632860,  0.78904998]],

          [[ 0.90104967,  0.72113961,  0.27136448,  ...,  1.03598225,
             1.17091501,  0.93103468],
           [ 1.00599718,  1.00599718,  0.81109464,  ...,  0.99100471,
             1.08095968,  1.03598225],
           [ 1.05097473,  1.00599718,  0.94602716,  ...,  0.96101969,
             1.12593722,  1.11094475],
           ...,
           [-1.27286363, -1.39280367, -1.43778121,  ...,  1.00599718,
             1.12593722,  1.03598225],
           [-1.39280367, -1.22788620, -1.42278874,  ...,  1.05097473,
             1.09595215,  1.00599718],
           [-1.49775124, -1.28785622, -1.12293863,  ...,  1.03598225,
             0.99100471,  1.09595215]]],


         [[[ 0.51904768,  0.56666672,  0.51904768,  ...,  0.69365084,
             0.78888893,  0.56666672],
           [ 0.55079371,  0.64603180,  0.67777783,  ...,  0.74126989,
             0.69365084,  0.61428577],
           [ 0.55079371,  0.50317466,  0.58253974,  ...,  0.77301592,
             0.74126989,  0.67777783],
           ...,
           [-1.40158725, -1.52857137, -1.56031740,  ...,  0.61428577,
             0.74126989,  0.64603180],
           [-1.51269829, -1.32222211, -1.54444432,  ...,  0.66190481,
             0.70952386,  0.61428577],
           [-1.59206343, -1.38571417, -1.24285710,  ...,  0.64603180,
             0.59841275,  0.70952386]],

          [[ 0.67632860,  0.54750413,  0.08051541,  ...,  0.78904998,
             0.88566834,  0.66022551],
           [ 0.80515307,  0.83735919,  0.54750413,  ...,  0.85346222,
             0.80515307,  0.70853472],
           [ 0.85346222,  0.78904998,  0.64412248,  ...,  0.86956531,
             0.88566834,  0.78904998],
           ...,
           [-1.46537840, -1.61030602, -1.67471826,  ...,  0.69243163,
             0.82125610,  0.72463775],
           [-1.61030602, -1.43317223, -1.64251208,  ...,  0.74074084,
             0.78904998,  0.69243163],
           [-1.73913050, -1.49758446, -1.30434775,  ...,  0.72463775,
             0.67632860,  0.78904998]],

          [[ 0.90104967,  0.72113961,  0.27136448,  ...,  1.03598225,
             1.17091501,  0.93103468],
           [ 1.00599718,  1.00599718,  0.81109464,  ...,  0.99100471,
             1.08095968,  1.03598225],
           [ 1.05097473,  1.00599718,  0.94602716,  ...,  0.96101969,
             1.12593722,  1.11094475],
           ...,
           [-1.27286363, -1.39280367, -1.43778121,  ...,  1.00599718,
             1.12593722,  1.03598225],
           [-1.39280367, -1.22788620, -1.42278874,  ...,  1.05097473,
             1.09595215,  1.00599718],
           [-1.49775124, -1.28785622, -1.12293863,  ...,  1.03598225,
             0.99100471,  1.09595215]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0842 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 197, vnnlib ID: 197 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -5.18270683, -12.47354031,  -6.10897255, -10.00190735,  -9.06741428,
         -10.42314816, -10.68535328, -12.50943470,  -6.97327232, -13.13700008]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [464]; unstable size 464; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 147, 1, 464] with unstable size 146 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 464] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 464] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [146]; unstable size 146; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 146] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 146] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.42324018, 0.28036866, 3.85285282, 3.13763332, 4.20778561, 4.47631168,
         6.43918324, 0.91171372, 6.93784571]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0728 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 198, vnnlib ID: 198 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.51362133, -15.75713921, -11.03450871, -11.39007473, -12.12888622,
         -11.76603127, -13.25793362, -13.95927143, -13.38565063, -14.89714527]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [766]; unstable size 766; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 174, 1, 766] with unstable size 173 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 766] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 766] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [173]; unstable size 173; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 173] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 173] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.95912075, -0.24805665, -0.27043343,  0.63014269, -0.09771180,
          1.73836100,  2.00863814,  1.75885797,  3.03999758]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.51362133, -15.75713921, -11.03450871, -11.39007473, -12.12888622,
         -11.76603127, -13.25793362, -13.95927143, -13.38565063, -14.89714527]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.17it/s]100%|██████████| 1/1 [00:00<00:00,  9.16it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.09731483, -16.41419601, -11.23532581, -11.70133877, -12.42668819,
          -12.06754589, -13.56177235, -14.30442333, -13.89138317, -15.46604633],
         [-11.09731483, -16.41419601, -11.23532581, -11.70133877, -12.42668819,
          -12.06754589, -13.56177235, -14.30442333, -13.89138317, -15.46604633]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.13801098, 0.60402393, 0.97023106]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1120 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 13.115753173828125
alpha/beta optimization time: 1.170503854751587
initial alpha-crown bounds: tensor([[ 4.07125187, -0.22706521, -0.22163165,  0.67958498, -0.04805124,
          1.79753447,  2.07503796,  1.87824082,  3.11085033]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 3 ; Worst class: (+ rhs) -0.22706520557403564
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.64087557792664
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.64083909988403
Verifying property 1 with 1 instances.
##### Instance 198 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.22706521]], device='cuda:0') need to verify.
Model prediction is: tensor([-10.51362133, -15.75713921, -11.03450871, -11.39007473, -12.12888622,
        -11.76603127, -13.25793362, -13.95927143, -13.38565063, -14.89714527],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.22706521]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 766
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 172
Node /15 input 0: size torch.Size([100]) unstable 14
-----------------
# of unstable neurons: 952
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00015974044799804688
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22706425189971924
10 lb beta sum: 0.0, worst -0.22708022594451904
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0524    transfer 0.0001    finalize 0.0001    func 0.0528    
Accumulated time: func 0.0528    prepare 0.0002    bound 0.0524    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 26] 
split level 1: [/input-12, 78] 
split level 2: [/input-12, 41] 
split level 3: [/input-12, 25] 
split level 4: [/input-12, 11] 
split level 5: [/input-8, 1628] 
split level 6: [/input-8, 1437] 
split level 7: [/input-8, 1035] 
split level 8: [/input-8, 413] 
split level 9: [/input-8, 1366] 
split level 10: [/input-8, 1500] 
split level 11: [/input-8, 1621] 
split level 12: [/input-8, 1619] 
split level 13: [/input-8, 1044] 
split level 14: [/input-12, 45] 
split level 15: [/input-8, 996] 
split level 16: [/input-8, 1356] 
split level 17: [/input-8, 1357] 
split level 18: [/input-8, 1134] 
split level 19: [/input-8, 276] 
split level 20: [/input, 2471] 
split level 21: [/input, 3527] 
split level 22: [/input, 3272] 
split level 23: [/input, 2503] 
split level 24: [/input, 3240] 
split level 25: [/input, 2231] 
split level 26: [/input, 429] 
split level 27: [/input, 1448] 
split level 28: [/input-8, 667] 
split level 29: [/input-8, 1618] 
split level 30: [/input, 2966] 
split level 31: [/input, 3494] 
split level 32: [/input-8, 1347] 
split level 33: [/input-8, 1610] 
split level 34: [/input, 2263] 
split level 35: [/input, 3509] 
split level 36: [/input, 2472] 
split level 37: [/input-8, 1625] 
split level 38: [/input, 2504] 
split level 39: [/input, 3525] 
split level 40: [/input-8, 1341] 
split level 41: [/input, 3274] 
split level 42: [/input-8, 680] 
split level 43: [/input-8, 990] 
split level 44: [/input, 3222] 
split level 45: [/input-8, 1609] 
split level 46: [/input, 3258] 
split level 47: [/input, 3253] 
split level 48: [/input, 2501] 
split level 49: [/input, 1447] 
split level 50: [/input, 3269] 
split level 51: [/input, 3526] 
split level 52: [/input-8, 102] 
split level 53: [/input-8, 1370] 
split level 54: [/input, 3524] 
split level 55: [/input, 2486] 
split level 56: [/input, 1388] 
split level 57: [/input-8, 614] 
split level 58: [/input, 327] 
split level 59: [/input, 2487] 
split level 60: [/input, 3543] 
split level 61: [/input, 2500] 
split level 62: [/input-8, 1441] 
split level 63: [/input-8, 1122] 
split level 64: [/input, 3239] 
split level 65: [/input-8, 1617] 
split level 66: [/input, 279] 
split level 67: [/input, 3254] 
split level 68: [/input, 3287] 
split level 69: [/input, 3288] 
split level 70: [/input, 2519] 
split level 71: [/input-8, 1346] 
split level 72: [/input-8, 1342] 
split level 73: [/input, 2536] 
split level 74: [/input, 1720] 
split level 75: [/input, 2535] 
split level 76: [/input, 1477] 
split level 77: [/input, 2517] 
split level 78: [/input-8, 550] 
split level 79: [/input-8, 641] 
split level 80: [/input, 3511] 
split level 81: [/input, 3257] 
split level 82: [/input, 445] 
split level 83: [/input, 2499] 
split level 84: [/input, 4055] 
split level 85: [/input, 4071] 
split level 86: [/input, 3529] 
split level 87: [/input, 2514] 
split level 88: [/input, 2228] 
split level 89: [/input-8, 1354] 
split level 90: [/input, 3507] 
split level 91: [/input, 3241] 
split level 92: [/input, 2516] 
split level 93: [/input, 3522] 
split level 94: [/input, 1718] 
split level 95: [/input, 460] 
split level 96: [/input, 1432] 
split level 97: [/input, 4058] 
split level 98: [/input, 312] 
split level 99: [/input, 4056] 
split level 100: [/input, 3523] 
split level 101: [/input, 2227] 
split level 102: [/input, 1434] 
split level 103: [/input, 2965] 
split level 104: [/input, 328] 
split level 105: [/input, 4054] 
split level 106: [/input, 4057] 
split level 107: [/input, 3542] 
split level 108: [/input-8, 86] 
split level 109: [/input-8, 1345] 
split level 110: [/input, 2531] 
split level 111: [/input, 4036] 
split level 112: [/input, 4051] 
split level 113: [/input, 3541] 
split level 114: [/input, 2534] 
split level 115: [/input, 3539] 
split level 116: [/input, 3291] 
split level 117: [/input, 2518] 
split level 118: [/input, 2202] 
split level 119: [/input, 3733] 
split level 120: [/input, 3734] 
split level 121: [/input-8, 414] 
split level 122: [/input, 4053] 
split level 123: [/input, 4073] 
split level 124: [/input, 2186] 
split level 125: [/input, 4070] 
split level 126: [/input-8, 1863] 
split level 127: [/input, 1431] 
split level 128: [/input, 1674] 
split level 129: [/input, 3434] 
split level 130: [/input, 4023] 
split level 131: [/input-8, 1476] 
split level 132: [/input, 1475] 
split level 133: [/input, 4068] 
split level 134: [/input-8, 1362] 
split level 135: [/input, 2533] 
split level 136: [/input, 2515] 
split level 137: [/input, 3731] 
split level 138: [/input, 4035] 
split level 139: [/input, 2183] 
split level 140: [/input, 2521] 
split level 141: [/input-8, 412] 
split level 142: [/input, 2537] 
split level 143: [/input-8, 1079] 
split level 144: [/input, 2498] 
split level 145: [/input, 4038] 
split level 146: [/input, 1641] 
split level 147: [/input, 2970] 
split level 148: [/input, 3292] 
split level 149: [/input, 4069] 
split level 150: [/input, 1497] 
split level 151: [/input, 2513] 
split level 152: [/input, 3989] 
split level 153: [/input, 4075] 
split level 154: [/input, 3545] 
split level 155: [/input-8, 1325] 
split level 156: [/input, 3478] 
split level 157: [/input, 3266] 
split level 158: [/input, 408] 
split level 159: [/input, 213] 
split level 160: [/input, 4049] 
split level 161: [/input, 236] 
split level 162: [/input, 4067] 
split level 163: [/input, 3555] 
split level 164: [/input, 4040] 
split level 165: [/input, 4052] 
split level 166: [/input, 2980] 
split level 167: [/input, 889] 
split level 168: [/input-8, 402] 
split level 169: [/input, 2204] 
split level 170: [/input, 4041] 
split level 171: [/input, 3290] 
split level 172: [/input, 1518] 
split level 173: [/input-8, 447] 
split level 174: [/input, 2284] 
split level 175: [/input, 161] 
split level 176: [/input, 3283] 
split level 177: [/input, 280] 
split level 178: [/input, 227] 
split level 179: [/input, 3556] 
split level 180: [/input, 3557] 
split level 181: [/input, 199] 
split level 182: [/input, 2967] 
split level 183: [/input-8, 672] 
split level 184: [/input, 2154] 
split level 185: [/input, 3538] 
split level 186: [/input, 2532] 
split level 187: [/input-8, 2021] 
split level 188: [/input, 3305] 
split level 189: [/input, 217] 
split level 190: [/input, 3554] 
split level 191: [/input, 3560] 
split level 192: [/input, 3418] 
split level 193: [/input, 3540] 
split level 194: [/input-8, 1333] 
split level 195: [/input, 4037] 
split level 196: [/input, 3537] 
split level 197: [/input, 2940] 
split level 198: [/input, 1754] 
split level 199: [/input, 4074] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22691118717193604
10 lb beta sum: 0.0, worst -0.22690868377685547
Time: prepare 0.0118    bound 0.0969    transfer 0.0008    finalize 0.0028    func 0.1149    
Accumulated time: func 0.1678    prepare 0.0221    bound 0.1493    transfer 0.0009    finalize 0.0029    
all_split False
======================Cut inference begins======================
max lb tensor(0.16697598) min lb tensor(-0.22690284)
Number of Verified Splits: 1 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.010584831237792969 
BICCOS Cumulative time: 0.010584831237792969
Preprocessing time: 0.010274171829223633 Inference time: 7.176399230957031e-05 Add cuts time: 3.5762786865234375e-05 Cut analysis time: 0.00020313262939453125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22306 (1), -0.22297 (1), -0.22290 (1), -0.22274 (1), -0.22249 (1), -0.22245 (1), -0.22224 (1), -0.22224 (1), -0.22213 (1), -0.22199 (1), -0.22181 (1), -0.22174 (1), -0.22146 (1), -0.22136 (1), -0.22133 (1), -0.22104 (1), -0.22057 (1), -0.22048 (1), -0.21991 (1), -0.21973 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5088    set_bounds 0.0092    solve 0.1150    add 0.0684    
Accumulated time: pickout 0.0003    decision 0.5088    set_bounds 0.0092    solve 0.1150    add 0.0684    
Current (lb-rhs): -0.22305703163146973
50 domains visited
Cumulative time: 0.777216911315918

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 26] [/input-12, 26] [/input-12, 41] [/input-12, 26] [/input-12, 41] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] 
split level 1: [/input-12, 41] [/input-12, 41] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 41] [/input-12, 41] [/input-12, 25] [/input-12, 41] [/input-12, 41] 
split level 2: [/input-12, 11] [/input-12, 25] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 25] [/input-12, 25] [/input-12, 41] [/input-12, 25] [/input-12, 25] 
split level 3: [/input-8, 614] [/input-12, 11] [/input-8, 1437] [/input-8, 1437] [/input-8, 1628] [/input-12, 11] [/input-8, 1628] [/input-12, 11] [/input-12, 11] [/input-12, 11] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.21615850925445557
10 lb beta sum: 0.19533458352088928, worst -0.2139250785112381
Time: prepare 0.0085    bound 0.1128    transfer 0.0008    finalize 0.0026    func 0.1272    
Accumulated time: func 0.2950    prepare 0.0308    bound 0.2620    transfer 0.0017    finalize 0.0056    
all_split False
======================Cut inference begins======================
max lb tensor(0.06719418) min lb tensor(-0.21392080)
Number of Verified Splits: 24 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.013614177703857422 
BICCOS Cumulative time: 0.02419900894165039
Preprocessing time: 0.012034893035888672 Inference time: 0.0009713172912597656 Add cuts time: 0.00037407875061035156 Cut analysis time: 0.0002338886260986328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12355 (2), -0.12318 (2), -0.12273 (2), -0.12253 (2), -0.12232 (2), -0.12220 (2), -0.12174 (2), -0.12092 (2), -0.12088 (2), -0.12069 (2), -0.12064 (2), -0.12058 (2), -0.12037 (2), -0.12036 (2), -0.11957 (2), -0.11872 (2), -0.11630 (2), -0.11623 (2), -0.11402 (2), -0.11237 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0235    set_bounds 0.0116    solve 0.1273    add 0.0813    
Accumulated time: pickout 0.0014    decision 0.5323    set_bounds 0.0208    solve 0.2423    add 0.1497    
Current (lb-rhs): -0.1235540360212326
100 domains visited
Cumulative time: 1.0364878177642822

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 41] [/input-12, 41] [/input-12, 25] [/input-12, 25] [/input-12, 26] [/input-12, 25] [/input-12, 25] [/input-12, 26] [/input-12, 26] [/input-12, 41] 
split level 1: [/input-12, 25] [/input-12, 25] [/input-12, 11] [/input-12, 11] [/input-12, 41] [/input-12, 11] [/input-12, 11] [/input-12, 41] [/input-12, 25] [/input-12, 25] 
split level 2: [/input-12, 11] [/input-12, 11] [/input-8, 1628] [/input-8, 1628] [/input-12, 25] [/input-8, 1628] [/input-8, 1628] [/input-12, 25] [/input-12, 11] [/input-12, 11] 
split level 3: [/input-8, 1437] [/input-8, 1122] [/input-8, 1437] [/input-8, 1437] [/input-8, 1122] [/input-8, 1437] [/input-8, 1437] [/input-8, 1625] [/input-8, 1122] [/input-8, 1437] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12317359447479248
10 lb beta sum: 0.4724772870540619, worst -0.1190621554851532
Time: prepare 0.0084    bound 0.1143    transfer 0.0017    finalize 0.0027    func 0.1298    
Accumulated time: func 0.4247    prepare 0.0395    bound 0.3763    transfer 0.0034    finalize 0.0082    
all_split False
======================Cut inference begins======================
max lb tensor(0.42521399) min lb tensor(-0.11546108)
Number of Verified Splits: 70 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.01689457893371582 
BICCOS Cumulative time: 0.04109358787536621
Preprocessing time: 0.011864423751831055 Inference time: 0.002954244613647461 Add cuts time: 0.0018384456634521484 Cut analysis time: 0.00023746490478515625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02771 (3), -0.02761 (3), -0.02759 (3), -0.02745 (3), -0.02742 (3), -0.02738 (3), -0.02715 (3), -0.02714 (3), -0.02704 (3), -0.02667 (3), -0.02656 (3), -0.02625 (3), -0.02618 (3), -0.02596 (3), -0.02214 (3), -0.02207 (3), -0.02186 (3), -0.02149 (3), -0.02042 (3), -0.02013 (3), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0194    set_bounds 0.0147    solve 0.1298    add 0.0864    
Accumulated time: pickout 0.0025    decision 0.5517    set_bounds 0.0356    solve 0.3722    add 0.2361    
Current (lb-rhs): -0.0277070552110672
150 domains visited
Cumulative time: 1.305128574371338

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] 
split level 1: [/input-12, 11] [/input-12, 11] [/input-8, 1628] [/input-8, 1628] [/input-8, 1628] [/input-8, 1628] [/input-8, 1628] [/input-8, 1628] [/input-12, 11] [/input-12, 11] 
split level 2: [/input-8, 1628] [/input-8, 1628] [/input-8, 1437] [/input-8, 1437] [/input-8, 1437] [/input-8, 1437] [/input-8, 1437] [/input-8, 1437] [/input-8, 1628] [/input-8, 1628] 
split level 3: [/input-8, 1437] [/input-8, 1437] [/input-8, 1357] [/input-8, 1357] [/input-8, 1357] [/input-8, 1357] [/input-8, 1357] [/input-8, 1357] [/input-8, 1437] [/input-8, 1437] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6804260015487671, worst -0.027707606554031372
10 lb beta sum: 0.6804260015487671, worst -0.03578415513038635
Time: prepare 0.0178    bound 0.1138    transfer 0.0013    finalize 0.0027    func 0.1382    
Accumulated time: func 0.5629    prepare 0.0575    bound 0.4901    transfer 0.0047    finalize 0.0109    
all_split False
======================Cut inference begins======================
max lb tensor(0.27338046) min lb tensor(-0.02694777)
Number of Verified Splits: 195 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 7
#cuts 4-6: 9
#cuts >= 20: 0
BICCOS time: 0.024299144744873047 
BICCOS Cumulative time: 0.06539273262023926
Preprocessing time: 0.011809110641479492 Inference time: 0.009036779403686523 Add cuts time: 0.002897977828979492 Cut analysis time: 0.0005552768707275391
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01382 (4), -0.01359 (4), -0.01359 (4), -0.01325 (4), -0.01324 (4), -0.01303 (4), -0.01294 (4), -0.01290 (4), -0.01279 (4), -0.01272 (4), -0.01269 (4), -0.01263 (4), -0.01258 (4), -0.01246 (4), -0.01241 (4), -0.01235 (4), -0.01213 (4), -0.01190 (4), -0.01187 (4), -0.01175 (4), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0209    set_bounds 0.0143    solve 0.1383    add 0.2318    
Accumulated time: pickout 0.0035    decision 0.5726    set_bounds 0.0499    solve 0.5104    add 0.4680    
Current (lb-rhs): -0.013824820518493652
200 domains visited
Cumulative time: 1.7360081672668457

Shallow-BaB round 5
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] 
split level 1: [/input-8, 1628] [/input-8, 1628] [/input-8, 1628] [/input-8, 1628] [/input-8, 1628] [/input-8, 1628] [/input-8, 1628] [/input-8, 1628] [/input-8, 1628] [/input-8, 1628] 
split level 2: [/input-8, 1437] [/input-8, 1437] [/input-8, 1437] [/input-8, 1437] [/input-8, 1437] [/input-8, 1437] [/input-8, 1437] [/input-8, 1437] [/input-8, 1437] [/input-8, 1437] 
split level 3: [/input-8, 1357] [/input-8, 1357] [/input-8, 1500] [/input-8, 1500] [/input-8, 1500] [/input-8, 1500] [/input-8, 1500] [/input-8, 1500] [/input-8, 1500] [/input-8, 1500] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.023749947547912598
10 lb beta sum: 1.6707464456558228, worst -0.018977120518684387
Time: prepare 0.0088    bound 0.1292    transfer 0.0019    finalize 0.0022    func 0.1447    
Accumulated time: func 0.7076    prepare 0.0666    bound 0.6193    transfer 0.0066    finalize 0.0131    
all_split False
======================Cut inference begins======================
max lb tensor(0.02968383) min lb tensor(-0.00905319)
Number of Verified Splits: 276 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.029972314834594727 
BICCOS Cumulative time: 0.09536504745483398
Preprocessing time: 0.01175999641418457 Inference time: 0.013368606567382812 Add cuts time: 0.004404544830322266 Cut analysis time: 0.0004391670227050781
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00553 (5), -0.00550 (5), -0.00550 (5), -0.00496 (5), -0.00496 (5), -0.00480 (5), -0.00480 (5), -0.00473 (5), -0.00465 (5), -0.00465 (5), -0.00461 (5), -0.00461 (5), -0.00459 (5), -0.00458 (5), -0.00457 (5), -0.00456 (5), -0.00455 (5), -0.00439 (5), -0.00438 (5), -0.00435 (5), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0194    set_bounds 0.0159    solve 0.1448    add 0.1031    
Accumulated time: pickout 0.0046    decision 0.5920    set_bounds 0.0658    solve 0.6552    add 0.5711    
Current (lb-rhs): -0.005525708198547363
250 domains visited
Cumulative time: 2.0506792068481445

Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([26, 41]), tensor([-1., -1.]), tensor([0, 0]), tensor([1.00716029e-16, 2.14223731e-02]), tensor([0, 1]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([1500], [-1.0], [0], [7.241492822052109e-11], [3]), '/input-12': (tensor([26, 41, 11, 25]), tensor([-1.,  1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([1.00716029e-16, 9.39848125e-02, 5.31837940e-02, 7.38249859e-03]), tensor([0, 1, 2, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([1500], [-1.0], [0], [7.241492822052109e-11], [3]), '/input-12': (tensor([26, 41, 11, 25]), tensor([-1.,  1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([1.00716029e-16, 9.39848125e-02, 5.31837940e-02, 3.22208852e-02]), tensor([0, 1, 2, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([1500], [1.0], [0], [0.011828707531094551], [3]), '/input-12': (tensor([26, 41, 11, 25]), tensor([-1.,  1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([1.00716029e-16, 9.39848125e-02, 5.31837940e-02, 9.18001123e-03]), tensor([0, 1, 2, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([1500], [1.0], [0], [0.011828707531094551], [3]), '/input-12': (tensor([26, 41, 11, 25]), tensor([-1.,  1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([1.00716029e-16, 9.39848125e-02, 5.31837940e-02, 3.34079713e-02]), tensor([0, 1, 2, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([26, 41, 11]), tensor([-1.,  1.,  1.]), tensor([0, 0, 0]), tensor([1.00716029e-16, 9.39848125e-02, 3.97691280e-02]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([26, 41, 25]), tensor([ 1., -1., -1.]), tensor([0, 0, 0]), tensor([1.00716029e-16, 2.23624874e-02, 7.53869256e-03]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([26, 41, 25]), tensor([ 1., -1.,  1.]), tensor([0, 0, 0]), tensor([1.00716029e-16, 2.23624874e-02, 1.90409198e-01]), tensor([0, 1, 2]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([26, 41, 11, 25]), tensor([ 1.,  1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([1.00716029e-16, 8.40211660e-02, 5.15989214e-02, 8.25391850e-04]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([], [], [], [], []), '/input-12': (tensor([26, 41, 11, 25]), tensor([ 1.,  1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([1.00716029e-16, 8.40211660e-02, 5.15989214e-02, 2.54750967e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([1357], [-1.0], [0], [1.5002488140680725e-09], [3]), '/input-12': (tensor([26, 41, 11, 25]), tensor([ 1.,  1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([1.00716029e-16, 8.40211660e-02, 3.93662751e-02, 1.33192558e-02]), tensor([0, 1, 2, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([1357], [-1.0], [0], [1.5002488140680725e-09], [3]), '/input-12': (tensor([26, 41, 11, 25]), tensor([1., 1., 1., 1.]), tensor([0, 0, 0, 0]), tensor([1.00716029e-16, 8.40211660e-02, 3.93662751e-02, 3.36706638e-02]), tensor([0, 1, 2, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([1357], [1.0], [0], [6.951073050487366e-11], [3]), '/input-12': (tensor([26, 41, 11, 25]), tensor([ 1.,  1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([1.00716029e-16, 8.40211660e-02, 3.93662751e-02, 1.32919569e-02]), tensor([0, 1, 2, 4]))}
Restore {'/input': ([], [], [], [], []), '/input-8': ([1357], [1.0], [0], [6.951073050487366e-11], [3]), '/input-12': (tensor([26, 41, 11, 25]), tensor([1., 1., 1., 1.]), tensor([0, 0, 0, 0]), tensor([1.00716029e-16, 8.40211660e-02, 3.93662751e-02, 3.40701342e-02]), tensor([0, 1, 2, 4]))}
Shallow branching resets to n domains:  14
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14499998092651367
10 lb beta sum: 1.2793813943862915, worst -0.13281244039535522
Time: prepare 0.0006    bound 0.1273    transfer 0.0002    finalize 0.0002    func 0.1285    
Accumulated time: func 0.8361    prepare 0.0672    bound 0.7467    transfer 0.0068    finalize 0.0133    
After pruning, left:  5

Back to Regular BaB

BaB round 1
batch: 5
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 25] [/input-8, 1628] [/input-8, 1628] [/input-12, 25] [/input-12, 78] 
split level 1: [/input-12, 11] [/input-8, 1437] [/input-8, 1437] [/input-8, 1628] [/input-12, 11] 
split level 2: [/input-8, 1628] [/input-8, 1366] [/input-8, 1366] [/input-8, 1437] [/input-8, 1628] 
split level 3: [/input-8, 1437] [/input-8, 1619] [/input-8, 1619] [/input-8, 1619] [/input-8, 1437] 
split level 4: [/input-8, 1619] [/input-8, 1357] [/input-8, 1357] [/input-8, 1500] [/input-8, 1619] 
split level 5: [/input-8, 1357] [/input-8, 1346] [/input-8, 1346] [/input-8, 1357] [/input-8, 1357] 
cut re-enabled after branching node selection
0 lb beta sum: 1.1707878112792969, worst -0.09104199707508087
10 lb beta sum: 1.1707878112792969, worst -0.09067662060260773
Time: prepare 0.0145    bound 0.1264    transfer 0.0011    finalize 0.0020    func 0.1461    
Accumulated time: func 0.9823    prepare 0.0820    bound 0.8731    transfer 0.0079    finalize 0.0154    
all_split False
======================Cut inference begins======================
max lb tensor(0.27306437) min lb tensor(-0.09061535)
Number of Verified Splits: 250 of 320
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0003783702850341797 
BICCOS Cumulative time: 0.09574341773986816
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09062 (6), -0.08850 (6), -0.08659 (6), -0.08450 (6), -0.08052 (6), -0.07864 (6), -0.07815 (6), -0.07652 (6), -0.07604 (6), -0.07457 (6), -0.07368 (6), -0.07250 (6), -0.06813 (6), -0.06581 (6), -0.06414 (6), -0.06376 (6), -0.06199 (6), -0.06143 (6), -0.06041 (6), -0.05830 (6), 
Length of domains: 70
Time: pickout 0.0006    decision 0.0179    set_bounds 0.0264    solve 0.1463    add 0.0015    
Accumulated time: pickout 0.0052    decision 0.6099    set_bounds 0.0922    solve 0.8015    add 0.5725    
Current (lb-rhs): -0.09061534702777863
320 domains visited
Cumulative time: 2.4025304317474365

BaB round 2
batch: 70
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 78] [/input-8, 1366] [/input-12, 78] [/input-8, 1366] [/input-12, 78] [/input-8, 1366] [/input-12, 78] [/input-12, 78] [/input-8, 1366] [/input-12, 78] 
split level 1: [/input-8, 1366] [/input-8, 1500] [/input-8, 1366] [/input-8, 1500] [/input-8, 1366] [/input-8, 1500] [/input-8, 1366] [/input-8, 1366] [/input-8, 1500] [/input-8, 1366] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6718599200248718, worst -0.08865447342395782
10 lb beta sum: 0.6718599200248718, worst -0.08862073719501495
Time: prepare 0.0127    bound 0.1259    transfer 0.0009    finalize 0.0016    func 0.1429    
Accumulated time: func 1.1251    prepare 0.0948    bound 0.9990    transfer 0.0089    finalize 0.0169    
all_split False
======================Cut inference begins======================
max lb tensor(0.30002433) min lb tensor(-0.08860762)
Number of Verified Splits: 93 of 280
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.00032401084899902344 
BICCOS Cumulative time: 0.09606742858886719
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08861 (8), -0.08598 (8), -0.08435 (8), -0.08188 (8), -0.07961 (8), -0.07725 (8), -0.07616 (8), -0.07557 (8), -0.07539 (8), -0.07453 (8), -0.07409 (8), -0.07289 (8), -0.07182 (8), -0.07159 (8), -0.07094 (8), -0.07051 (8), -0.06998 (8), -0.06813 (8), -0.06750 (8), -0.06669 (8), 
Length of domains: 187
Time: pickout 0.0018    decision 0.0147    set_bounds 0.0172    solve 0.1430    add 0.0028    
Accumulated time: pickout 0.0070    decision 0.6246    set_bounds 0.1093    solve 0.9445    add 0.5753    
Current (lb-rhs): -0.08860762417316437
507 domains visited
Cumulative time: 2.5829145908355713

BaB round 3
batch: 187
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1618] [/input-8, 1618] [/input-8, 1618] [/input-8, 1618] [/input-8, 1618] [/input-8, 1347] [/input-8, 1618] [/input-8, 1618] [/input-8, 1347] [/input-8, 1618] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5835511684417725, worst -0.08637602627277374
10 lb beta sum: 0.5835511684417725, worst -0.08637149631977081
Time: prepare 0.0179    bound 0.1357    transfer 0.0007    finalize 0.0019    func 0.1587    
Accumulated time: func 1.2838    prepare 0.1129    bound 1.1346    transfer 0.0096    finalize 0.0189    
all_split False
======================Cut inference begins======================
max lb tensor(0.00878549) min lb tensor(-0.08636291)
Number of Verified Splits: 26 of 374
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.00035500526428222656 
BICCOS Cumulative time: 0.09642243385314941
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08636 (9), -0.08369 (9), -0.08202 (9), -0.07954 (9), -0.07728 (9), -0.07520 (9), -0.07392 (9), -0.07329 (9), -0.07319 (9), -0.07200 (9), -0.07183 (9), -0.07083 (9), -0.06971 (9), -0.06921 (9), -0.06898 (9), -0.06887 (9), -0.06787 (9), -0.06764 (9), -0.06683 (9), -0.06580 (9), 
Length of domains: 348
Time: pickout 0.0027    decision 0.0187    set_bounds 0.0159    solve 0.1589    add 0.0051    
Accumulated time: pickout 0.0097    decision 0.6433    set_bounds 0.1253    solve 1.1033    add 0.5805    
Current (lb-rhs): -0.08636291325092316
855 domains visited
Cumulative time: 2.785266876220703

BaB round 4
batch: 348
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1610] [/input-8, 1347] [/input-8, 1044] [/input-8, 1347] [/input-8, 1610] [/input-8, 1625] [/input-8, 1044] [/input-8, 1610] [/input-8, 1625] [/input-8, 1044] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5708681344985962, worst -0.08343084156513214
10 lb beta sum: 0.5708681344985962, worst -0.08341355621814728
Time: prepare 0.0316    bound 0.1378    transfer 0.0016    finalize 0.0045    func 0.1800    
Accumulated time: func 1.4638    prepare 0.1447    bound 1.2724    transfer 0.0112    finalize 0.0234    
all_split False
======================Cut inference begins======================
max lb tensor(0.01366417) min lb tensor(-0.08340104)
Number of Verified Splits: 44 of 696
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.00045561790466308594 
BICCOS Cumulative time: 0.0968780517578125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08340 (10), -0.08170 (10), -0.07905 (10), -0.07819 (10), -0.07739 (10), -0.07521 (10), -0.07390 (10), -0.07300 (10), -0.07135 (10), -0.07109 (10), -0.07094 (10), -0.06944 (10), -0.06901 (10), -0.06886 (10), -0.06858 (10), -0.06757 (10), -0.06705 (10), -0.06672 (10), -0.06598 (10), -0.06577 (10), 
Length of domains: 652
Time: pickout 0.0062    decision 0.0300    set_bounds 0.0295    solve 0.1802    add 0.0055    
Accumulated time: pickout 0.0159    decision 0.6732    set_bounds 0.1548    solve 1.2836    add 0.5860    
Current (lb-rhs): -0.08340103924274445
1507 domains visited
Cumulative time: 3.038254499435425

BaB round 5
batch: 652
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1044] [/input-8, 1625] [/input-8, 1610] [/input-8, 1625] [/input-8, 1044] [/input-8, 1618] [/input-8, 1610] [/input-8, 1044] [/input-8, 1618] [/input-8, 1610] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5696868896484375, worst -0.08320744335651398
10 lb beta sum: 0.5696868896484375, worst -0.0832037478685379
Time: prepare 0.0597    bound 0.1454    transfer 0.0057    finalize 0.0087    func 0.2280    
Accumulated time: func 1.6918    prepare 0.2046    bound 1.4178    transfer 0.0169    finalize 0.0321    
all_split False
======================Cut inference begins======================
max lb tensor(0.00762181) min lb tensor(-0.08319314)
Number of Verified Splits: 112 of 1304
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0004127025604248047 
BICCOS Cumulative time: 0.0972907543182373
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08319 (11), -0.07808 (11), -0.07806 (11), -0.07656 (11), -0.07565 (11), -0.07530 (11), -0.07466 (11), -0.07446 (11), -0.07338 (11), -0.07154 (11), -0.07154 (11), -0.07135 (11), -0.07107 (11), -0.07011 (11), -0.06912 (11), -0.06860 (11), -0.06819 (11), -0.06737 (11), -0.06733 (11), -0.06718 (11), 
Length of domains: 1192
Time: pickout 0.0111    decision 0.0466    set_bounds 0.0522    solve 0.2292    add 0.0093    
Accumulated time: pickout 0.0270    decision 0.7198    set_bounds 0.2070    solve 1.5128    add 0.5953    
Current (lb-rhs): -0.08319313824176788
2699 domains visited
Cumulative time: 3.388859272003174

BaB round 6
batch: 1192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1625] [/input-8, 1610] [/input-8, 1625] [/input-8, 1625] [/input-8, 1610] [/input-8, 1625] [/input-8, 1610] [/input-8, 1609] [/input-8, 1625] [/input-8, 1610] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5725548267364502, worst -0.08071644604206085
10 lb beta sum: 0.5725548267364502, worst -0.08071036636829376
Time: prepare 0.1122    bound 0.1956    transfer 0.0096    finalize 0.1898    func 0.5226    
Accumulated time: func 2.2144    prepare 0.3170    bound 1.6134    transfer 0.0265    finalize 0.2219    
all_split False
======================Cut inference begins======================
max lb tensor(0.24223302) min lb tensor(-0.08070596)
Number of Verified Splits: 316 of 2384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0005359649658203125 
BICCOS Cumulative time: 0.09782671928405762
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08071 (12), -0.07949 (12), -0.07788 (12), -0.07514 (12), -0.07419 (12), -0.07387 (12), -0.07258 (12), -0.07205 (12), -0.07189 (12), -0.07168 (12), -0.07167 (12), -0.07131 (12), -0.07106 (12), -0.07099 (12), -0.07090 (12), -0.07069 (12), -0.07012 (12), -0.06924 (12), -0.06864 (12), -0.06860 (12), 
Length of domains: 2068
Time: pickout 0.0171    decision 0.0753    set_bounds 0.0948    solve 0.5231    add 0.0185    
Accumulated time: pickout 0.0441    decision 0.7951    set_bounds 0.3018    solve 2.0359    add 0.6137    
Current (lb-rhs): -0.08070595562458038
4767 domains visited
Cumulative time: 4.122385025024414

BaB round 7
batch: 2068
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 641] [/input-8, 1609] [/input-8, 680] [/input-8, 641] [/input-8, 1609] [/input-8, 641] [/input-8, 1625] [/input-8, 680] [/input-8, 641] [/input-8, 1625] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5697584748268127, worst -0.0772525817155838
10 lb beta sum: 0.5697584748268127, worst -0.0771992951631546
Time: prepare 0.1947    bound 0.2899    transfer 0.0350    finalize 0.0244    func 0.5709    
Accumulated time: func 2.7854    prepare 0.5120    bound 1.9033    transfer 0.0615    finalize 0.2463    
all_split False
======================Cut inference begins======================
max lb tensor(0.23768555) min lb tensor(-0.07717843)
Number of Verified Splits: 633 of 4136
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0005114078521728516 
BICCOS Cumulative time: 0.09833812713623047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07718 (13), -0.07699 (13), -0.07597 (13), -0.07578 (13), -0.07544 (13), -0.07513 (13), -0.07435 (13), -0.07415 (13), -0.07253 (13), -0.07203 (13), -0.07188 (13), -0.07168 (13), -0.07099 (13), -0.07089 (13), -0.07087 (13), -0.07067 (13), -0.07025 (13), -0.07019 (13), -0.07012 (13), -0.06924 (13), 
Length of domains: 3503
Time: pickout 0.0276    decision 0.1289    set_bounds 0.1696    solve 0.5721    add 0.0232    
Accumulated time: pickout 0.0717    decision 0.9239    set_bounds 0.4714    solve 2.6080    add 0.6370    
Current (lb-rhs): -0.07717843353748322
8270 domains visited
Cumulative time: 5.0515313148498535

BaB round 8
batch: 3503
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 86] [/input-8, 86] [/input-8, 1609] [/input-8, 86] [/input-8, 641] [/input-8, 86] [/input-8, 86] [/input-8, 86] [/input-8, 641] [/input-8, 86] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5654187798500061, worst -0.07717831432819366
10 lb beta sum: 0.5654187798500061, worst -0.07717950642108917
Time: prepare 0.3341    bound 0.4381    transfer 0.0273    finalize 0.0439    func 0.8894    
Accumulated time: func 3.6748    prepare 0.8464    bound 2.3414    transfer 0.0888    finalize 0.2902    
all_split False
======================Cut inference begins======================
max lb tensor(0.24279563) min lb tensor(-0.07717355)
Number of Verified Splits: 1574 of 7006
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0005376338958740234 
BICCOS Cumulative time: 0.09887576103210449
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07717 (14), -0.07699 (14), -0.07597 (14), -0.07578 (14), -0.07544 (14), -0.07493 (14), -0.07435 (14), -0.07396 (14), -0.07183 (14), -0.07168 (14), -0.07150 (14), -0.07081 (14), -0.07047 (14), -0.07024 (14), -0.07019 (14), -0.06993 (14), -0.06934 (14), -0.06906 (14), -0.06905 (14), -0.06880 (14), 
Length of domains: 5432
Time: pickout 0.0630    decision 0.3633    set_bounds 0.2925    solve 0.8914    add 0.0332    
Accumulated time: pickout 0.1347    decision 1.2872    set_bounds 0.7639    solve 3.4994    add 0.6702    
Current (lb-rhs): -0.07717354595661163
13702 domains visited
Cumulative time: 6.711204528808594

BaB round 9
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1134] [/input-8, 641] [/input-8, 1134] [/input-8, 86] [/input-8, 641] [/input-8, 1134] [/input-8, 86] [/input-8, 1134] [/input-8, 641] [/input-8, 641] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5416330099105835, worst -0.07416744530200958
10 lb beta sum: 0.5416330099105835, worst -0.07408042252063751
Time: prepare 0.4026    bound 0.4954    transfer 0.0407    finalize 0.0518    func 1.0437    
Accumulated time: func 4.7186    prepare 1.2493    bound 2.8368    transfer 0.1295    finalize 0.3420    
all_split False
======================Cut inference begins======================
max lb tensor(0.24265163) min lb tensor(-0.07407661)
Number of Verified Splits: 1702 of 8192
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.00066375732421875 
BICCOS Cumulative time: 0.09953951835632324
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07717 (14), -0.07578 (14), -0.07544 (14), -0.07408 (15), -0.07396 (14), -0.07313 (15), -0.07305 (15), -0.07268 (15), -0.07210 (15), -0.07210 (15), -0.07183 (14), -0.07168 (14), -0.07150 (14), -0.07128 (15), -0.07081 (14), -0.07070 (15), -0.07047 (14), -0.07024 (14), -0.06993 (14), -0.06934 (14), 
Length of domains: 7826
Time: pickout 0.0586    decision 0.4009    set_bounds 0.3191    solve 1.2382    add 0.0367    
Accumulated time: pickout 0.1933    decision 1.6882    set_bounds 1.0830    solve 4.7376    add 0.7069    
Current (lb-rhs): -0.07717354595661163
20192 domains visited
current_vram/total_varm: 24.7GB/99.9GB, batch_size increase to 8192
Cumulative time: 8.785803079605103

BaB round 10
batch: 7826
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1134] [/input-8, 641] [/input-8, 1134] [/input, 2504] [/input, 2503] [/input-12, 45] [/input, 2504] [/input-8, 680] [/input-8, 1617] [/input-8, 680] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5416723489761353, worst -0.07495160400867462
10 lb beta sum: 0.5416723489761353, worst -0.07492788136005402
Time: prepare 0.7976    bound 0.8858    transfer 0.0794    finalize 0.0906    func 1.9551    
Accumulated time: func 6.6737    prepare 2.0473    bound 3.7226    transfer 0.2088    finalize 0.4326    
all_split False
======================Cut inference begins======================
max lb tensor(0.24325940) min lb tensor(-0.07491715)
Number of Verified Splits: 4020 of 15652
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0007109642028808594 
BICCOS Cumulative time: 0.1002504825592041
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07492 (15), -0.07352 (15), -0.07350 (15), -0.07320 (15), -0.07226 (16), -0.07211 (15), -0.07179 (15), -0.07171 (15), -0.07129 (16), -0.07123 (16), -0.07086 (16), -0.07031 (15), -0.07029 (16), -0.07026 (16), -0.06966 (15), -0.06945 (16), -0.06929 (16), -0.06923 (15), -0.06888 (16), -0.06875 (15), 
Length of domains: 11632
Time: pickout 0.1470    decision 0.4466    set_bounds 0.8124    solve 2.2204    add 0.0513    
Accumulated time: pickout 0.3402    decision 2.1348    set_bounds 1.8953    solve 6.9580    add 0.7582    
Current (lb-rhs): -0.07491715252399445
31824 domains visited
Cumulative time: 12.503623962402344

BaB round 11
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 45] [/input-8, 680] [/input, 2504] [/input, 2503] [/input, 2503] [/input-8, 680] [/input-12, 45] [/input-12, 45] [/input, 2503] [/input, 2504] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5531632900238037, worst -0.0731094628572464
10 lb beta sum: 0.5531632900238037, worst -0.07311590015888214
Time: prepare 0.8564    bound 0.9197    transfer 0.0820    finalize 0.1074    func 2.0708    
Accumulated time: func 8.7445    prepare 2.9040    bound 4.6423    transfer 0.2908    finalize 0.5400    
all_split False
======================Cut inference begins======================
max lb tensor(0.24325439) min lb tensor(-0.07310505)
Number of Verified Splits: 4588 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0006289482116699219 
BICCOS Cumulative time: 0.10087943077087402
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07311 (16), -0.07170 (16), -0.07169 (16), -0.07138 (16), -0.07129 (16), -0.07086 (16), -0.07029 (16), -0.07029 (16), -0.07026 (16), -0.07012 (16), -0.07001 (17), -0.06997 (16), -0.06989 (16), -0.06945 (16), -0.06897 (17), -0.06873 (16), -0.06872 (16), -0.06860 (17), -0.06849 (16), -0.06841 (16), 
Length of domains: 15236
Time: pickout 0.1328    decision 0.4633    set_bounds 0.9433    solve 2.0745    add 0.0584    
Accumulated time: pickout 0.4730    decision 2.5981    set_bounds 2.8386    solve 9.0325    add 0.8166    
Current (lb-rhs): -0.07310505211353302
43620 domains visited
current_vram/total_varm: 35.8GB/99.9GB, batch_size increase to 16384
Cumulative time: 16.224279165267944

BaB round 12
batch: 15236
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1609] [/input, 2504] [/input-8, 680] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-8, 1617] [/input-12, 45] [/input, 2504] [/input-8, 680] 
cut re-enabled after branching node selection
0 lb beta sum: 0.562022864818573, worst -0.07000561058521271
10 lb beta sum: 0.562022864818573, worst -0.06991763412952423
Time: prepare 1.6233    bound 1.6538    transfer 0.2258    finalize 0.5221    func 4.2243    
Accumulated time: func 12.9688    prepare 4.5277    bound 6.2961    transfer 0.5167    finalize 1.0621    
all_split False
======================Cut inference begins======================
max lb tensor(0.24338755) min lb tensor(-0.06990249)
Number of Verified Splits: 7766 of 30472
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0007846355438232422 
BICCOS Cumulative time: 0.10166406631469727
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06990 (17), -0.06973 (17), -0.06905 (17), -0.06853 (17), -0.06848 (17), -0.06831 (17), -0.06830 (17), -0.06826 (17), -0.06817 (17), -0.06800 (17), -0.06800 (17), -0.06772 (18), -0.06765 (17), -0.06762 (17), -0.06754 (17), -0.06730 (17), -0.06711 (17), -0.06710 (17), -0.06705 (18), -0.06690 (18), 
Length of domains: 22706
Time: pickout 0.3224    decision 1.1615    set_bounds 1.6032    solve 4.2302    add 0.1484    
Accumulated time: pickout 0.7954    decision 3.7596    set_bounds 4.4418    solve 13.2627    add 0.9649    
Current (lb-rhs): -0.06990249454975128
66326 domains visited
Cumulative time: 23.780025243759155

BaB round 13
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-8, 1134] [/input, 2486] [/input, 2504] [/input-8, 1134] [/input-8, 1356] [/input, 2504] [/input, 2504] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5824379920959473, worst -0.06761939823627472
10 lb beta sum: 0.5824379920959473, worst -0.067670539021492
Time: prepare 1.7574    bound 1.7704    transfer 0.2502    finalize 0.2128    func 4.6309    
Accumulated time: func 17.5998    prepare 6.2854    bound 8.0664    transfer 0.7669    finalize 1.2749    
all_split False
======================Cut inference begins======================
max lb tensor(0.24314424) min lb tensor(-0.06760605)
Number of Verified Splits: 7224 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0010030269622802734 
BICCOS Cumulative time: 0.10266709327697754
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06973 (17), -0.06831 (17), -0.06830 (17), -0.06800 (17), -0.06761 (18), -0.06730 (17), -0.06705 (18), -0.06694 (18), -0.06679 (18), -0.06676 (18), -0.06659 (17), -0.06609 (18), -0.06604 (19), -0.06601 (18), -0.06601 (18), -0.06599 (17), -0.06594 (18), -0.06589 (17), -0.06557 (18), -0.06542 (18), 
Length of domains: 31866
Time: pickout 0.2813    decision 1.7699    set_bounds 1.8310    solve 4.6375    add 0.1034    
Accumulated time: pickout 1.0767    decision 5.5295    set_bounds 6.2728    solve 17.9002    add 1.0683    
Current (lb-rhs): -0.06973357498645782
91870 domains visited
Cumulative time: 32.49995541572571

BaB round 14
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2503] [/input, 2504] [/input-8, 1134] [/input, 3509] [/input, 2504] [/input, 2504] [/input, 3509] [/input, 2503] [/input-12, 45] [/input, 2504] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5870733261108398, worst -0.06887300312519073
10 lb beta sum: 0.5870733261108398, worst -0.0688687115907669
Time: prepare 1.7981    bound 1.7695    transfer 0.2484    finalize 0.2060    func 4.7117    
Accumulated time: func 22.3115    prepare 8.0840    bound 9.8359    transfer 1.0153    finalize 1.4808    
all_split False
======================Cut inference begins======================
max lb tensor(0.24290559) min lb tensor(-0.06886585)
Number of Verified Splits: 6825 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0008041858673095703 
BICCOS Cumulative time: 0.10347127914428711
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06887 (18), -0.06745 (18), -0.06694 (18), -0.06676 (18), -0.06618 (19), -0.06609 (18), -0.06601 (18), -0.06593 (18), -0.06593 (19), -0.06557 (18), -0.06535 (18), -0.06534 (18), -0.06531 (18), -0.06521 (18), -0.06519 (18), -0.06515 (19), -0.06508 (19), -0.06505 (18), -0.06504 (18), -0.06504 (18), 
Length of domains: 41425
Time: pickout 0.2914    decision 1.6614    set_bounds 1.9424    solve 4.7184    add 0.1473    
Accumulated time: pickout 1.3681    decision 7.1909    set_bounds 8.2152    solve 22.6186    add 1.2157    
Current (lb-rhs): -0.06886585056781769
117813 domains visited
Cumulative time: 41.359697580337524

BaB round 15
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1625] [/input, 460] [/input, 3511] [/input-8, 1134] [/input-8, 1610] [/input-8, 1625] [/input, 2503] [/input-8, 1625] [/input-8, 1341] [/input-8, 1134] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5847991108894348, worst -0.06608135998249054
10 lb beta sum: 0.5847991108894348, worst -0.06608076393604279
Time: prepare 1.7849    bound 1.7712    transfer 0.2463    finalize 0.1983    func 4.7877    
Accumulated time: func 27.0992    prepare 9.8693    bound 11.6071    transfer 1.2616    finalize 1.6791    
all_split False
======================Cut inference begins======================
max lb tensor(0.24278101) min lb tensor(-0.06607504)
Number of Verified Splits: 6608 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0007960796356201172 
BICCOS Cumulative time: 0.10426735877990723
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06887 (18), -0.06618 (19), -0.06608 (19), -0.06593 (18), -0.06593 (19), -0.06534 (18), -0.06522 (19), -0.06519 (18), -0.06515 (19), -0.06508 (19), -0.06505 (18), -0.06490 (18), -0.06470 (19), -0.06465 (19), -0.06456 (19), -0.06453 (18), -0.06450 (19), -0.06450 (19), -0.06445 (19), -0.06435 (19), 
Length of domains: 51201
Time: pickout 0.2925    decision 1.6622    set_bounds 1.9648    solve 4.7952    add 0.1097    
Accumulated time: pickout 1.6606    decision 8.8531    set_bounds 10.1800    solve 27.4139    add 1.3254    
Current (lb-rhs): -0.06886585056781769
143973 domains visited
Cumulative time: 50.28508901596069

BaB round 16
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1625] [/input, 3239] [/input-8, 1625] [/input-8, 1346] [/input, 3239] [/input-8, 1625] [/input, 3239] [/input, 2503] [/input-8, 1625] [/input-8, 1625] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5923314690589905, worst -0.06591840088367462
10 lb beta sum: 0.5923314690589905, worst -0.06592865288257599
Time: prepare 1.7892    bound 1.7685    transfer 0.2431    finalize 0.2108    func 4.2253    
Accumulated time: func 31.3245    prepare 11.6588    bound 13.3756    transfer 1.5047    finalize 1.8899    
all_split False
======================Cut inference begins======================
max lb tensor(0.24284646) min lb tensor(-0.06591816)
Number of Verified Splits: 7006 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0009191036224365234 
BICCOS Cumulative time: 0.10518646240234375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06608 (19), -0.06592 (19), -0.06577 (19), -0.06567 (20), -0.06522 (19), -0.06470 (19), -0.06465 (19), -0.06463 (20), -0.06450 (19), -0.06447 (19), -0.06445 (19), -0.06435 (19), -0.06435 (19), -0.06433 (19), -0.06424 (20), -0.06419 (19), -0.06417 (19), -0.06404 (19), -0.06382 (19), -0.06376 (20), 
Length of domains: 60579
Time: pickout 0.3078    decision 1.6620    set_bounds 2.0623    solve 4.2327    add 0.1097    
Accumulated time: pickout 1.9685    decision 10.5151    set_bounds 12.2423    solve 31.6466    add 1.4350    
Current (lb-rhs): -0.06607504189014435
169735 domains visited
Cumulative time: 58.7667338848114

BaB round 17
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1341] [/input-8, 1341] [/input-8, 1341] [/input-8, 1341] [/input-8, 1356] [/input-8, 1341] [/input-8, 1341] [/input, 3239] [/input-8, 1341] [/input-8, 1341] 
cut re-enabled after branching node selection
0 lb beta sum: 0.610988438129425, worst -0.0655650645494461
10 lb beta sum: 0.610988438129425, worst -0.0655563622713089
Time: prepare 1.8006    bound 1.7681    transfer 0.2435    finalize 0.2190    func 4.2458    
Accumulated time: func 35.5703    prepare 13.4599    bound 15.1437    transfer 1.7483    finalize 2.1090    
all_split False
======================Cut inference begins======================
max lb tensor(0.24254009) min lb tensor(-0.06555171)
Number of Verified Splits: 6442 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0008778572082519531 
BICCOS Cumulative time: 0.1060643196105957
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06592 (19), -0.06577 (19), -0.06567 (20), -0.06555 (20), -0.06522 (19), -0.06463 (20), -0.06450 (19), -0.06447 (19), -0.06445 (19), -0.06435 (19), -0.06433 (19), -0.06424 (20), -0.06419 (19), -0.06418 (20), -0.06417 (19), -0.06413 (20), -0.06404 (19), -0.06383 (20), -0.06365 (20), -0.06349 (19), 
Length of domains: 70521
Time: pickout 0.3088    decision 2.2747    set_bounds 2.2191    solve 4.2536    add 0.2100    
Accumulated time: pickout 2.2772    decision 12.7898    set_bounds 14.4614    solve 35.9002    add 1.6450    
Current (lb-rhs): -0.06591816246509552
196061 domains visited
Cumulative time: 68.13696789741516

BaB round 18
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1341] [/input-8, 614] [/input-8, 641] [/input-8, 614] [/input, 2503] [/input-8, 1341] [/input-8, 614] [/input-8, 1341] [/input-8, 1356] [/input, 2503] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5910133123397827, worst -0.06477589905261993
10 lb beta sum: 0.5910133123397827, worst -0.0647474080324173
Time: prepare 1.7975    bound 1.7685    transfer 0.2431    finalize 0.2433    func 4.2681    
Accumulated time: func 39.8384    prepare 15.2578    bound 16.9122    transfer 1.9914    finalize 2.3523    
all_split False
======================Cut inference begins======================
max lb tensor(0.24285731) min lb tensor(-0.06474145)
Number of Verified Splits: 6466 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0008225440979003906 
BICCOS Cumulative time: 0.1068868637084961
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06592 (19), -0.06577 (19), -0.06567 (20), -0.06555 (20), -0.06474 (20), -0.06463 (20), -0.06450 (19), -0.06447 (19), -0.06433 (19), -0.06419 (19), -0.06418 (20), -0.06413 (20), -0.06404 (19), -0.06393 (20), -0.06383 (20), -0.06383 (20), -0.06370 (20), -0.06365 (20), -0.06349 (19), -0.06335 (19), 
Length of domains: 80439
Time: pickout 0.3059    decision 1.6604    set_bounds 2.2299    solve 5.0337    add 0.1123    
Accumulated time: pickout 2.5831    decision 14.4502    set_bounds 16.6913    solve 40.9339    add 1.7574    
Current (lb-rhs): -0.06591816246509552
222363 domains visited
Cumulative time: 77.5750789642334

BaB round 19
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 1625] [/input-8, 1625] [/input-8, 614] [/input-8, 1625] [/input-8, 1625] [/input, 460] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6003128290176392, worst -0.06528492271900177
10 lb beta sum: 0.6003128290176392, worst -0.06526847183704376
Time: prepare 1.7946    bound 1.7705    transfer 0.2419    finalize 1.0349    func 5.0564    
Accumulated time: func 44.8948    prepare 17.0529    bound 18.6827    transfer 2.2333    finalize 3.3872    
all_split False
======================Cut inference begins======================
max lb tensor(0.24278387) min lb tensor(-0.06525786)
Number of Verified Splits: 7114 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0007817745208740234 
BICCOS Cumulative time: 0.10766863822937012
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06592 (19), -0.06567 (20), -0.06555 (20), -0.06526 (20), -0.06474 (20), -0.06463 (20), -0.06418 (20), -0.06413 (20), -0.06398 (20), -0.06396 (20), -0.06393 (20), -0.06383 (20), -0.06383 (20), -0.06382 (20), -0.06370 (20), -0.06368 (20), -0.06365 (20), -0.06353 (20), -0.06332 (20), -0.06324 (21), 
Length of domains: 89709
Time: pickout 0.3031    decision 1.6580    set_bounds 1.5217    solve 5.0632    add 0.1231    
Accumulated time: pickout 2.8862    decision 16.1082    set_bounds 18.2130    solve 45.9971    add 1.8805    
Current (lb-rhs): -0.06591816246509552
248017 domains visited
Cumulative time: 86.3545753955841

BaB round 20
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1625] [/input-8, 1341] [/input-8, 614] [/input-8, 1625] [/input, 2503] [/input-8, 1625] [/input, 3511] [/input-8, 1625] [/input-8, 614] [/input, 3511] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6137986183166504, worst -0.06543298065662384
10 lb beta sum: 0.6137986183166504, worst -0.06541009247303009
Time: prepare 1.8162    bound 1.7687    transfer 0.2437    finalize 0.2227    func 4.2663    
Accumulated time: func 49.1611    prepare 18.8694    bound 20.4514    transfer 2.4770    finalize 3.6100    
all_split False
======================Cut inference begins======================
max lb tensor(0.24240336) min lb tensor(-0.06540294)
Number of Verified Splits: 6199 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0009179115295410156 
BICCOS Cumulative time: 0.10858654975891113
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06555 (20), -0.06540 (20), -0.06526 (20), -0.06474 (20), -0.06454 (21), -0.06418 (20), -0.06413 (20), -0.06398 (20), -0.06396 (20), -0.06393 (20), -0.06383 (20), -0.06383 (20), -0.06382 (20), -0.06370 (20), -0.06368 (20), -0.06353 (20), -0.06350 (21), -0.06332 (20), -0.06324 (21), -0.06320 (20), 
Length of domains: 99894
Time: pickout 0.3107    decision 1.6654    set_bounds 2.4528    solve 4.2735    add 0.1258    
Accumulated time: pickout 3.1969    decision 17.7736    set_bounds 20.6658    solve 50.2706    add 2.0063    
Current (lb-rhs): -0.06555171310901642
274586 domains visited
Cumulative time: 95.28828310966492

BaB round 21
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1617] [/input-8, 1617] [/input, 2504] [/input-8, 1356] [/input, 2504] [/input-8, 1617] [/input, 2504] [/input, 2504] [/input, 2504] [/input-8, 641] 
cut re-enabled after branching node selection
0 lb beta sum: 0.621157169342041, worst -0.06195123493671417
10 lb beta sum: 0.621157169342041, worst -0.06195075809955597
Time: prepare 1.8202    bound 1.7693    transfer 0.2418    finalize 0.2308    func 4.2773    
Accumulated time: func 53.4384    prepare 20.6900    bound 22.2207    transfer 2.7188    finalize 3.8408    
all_split False
======================Cut inference begins======================
max lb tensor(0.24242660) min lb tensor(-0.06194229)
Number of Verified Splits: 6230 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0009036064147949219 
BICCOS Cumulative time: 0.10949015617370605
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06555 (20), -0.06540 (20), -0.06526 (20), -0.06474 (20), -0.06454 (21), -0.06418 (20), -0.06398 (20), -0.06396 (20), -0.06393 (20), -0.06383 (20), -0.06383 (20), -0.06382 (20), -0.06370 (20), -0.06368 (20), -0.06353 (20), -0.06350 (21), -0.06332 (20), -0.06320 (20), -0.06313 (21), -0.06311 (21), 
Length of domains: 110048
Time: pickout 0.3079    decision 1.6677    set_bounds 2.4989    solve 4.2888    add 0.1080    
Accumulated time: pickout 3.5048    decision 19.4414    set_bounds 23.1648    solve 54.5594    add 2.1143    
Current (lb-rhs): -0.06555171310901642
301124 domains visited
Cumulative time: 104.2866063117981

BaB round 22
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 3239] [/input, 3239] [/input, 3239] [/input, 3511] [/input, 3239] [/input-8, 1342] [/input-8, 641] [/input, 3239] [/input-8, 1342] [/input, 3239] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6026594638824463, worst -0.06328780949115753
10 lb beta sum: 0.6026594638824463, worst -0.06327731907367706
Time: prepare 1.7929    bound 1.7723    transfer 0.2401    finalize 0.1962    func 4.2170    
Accumulated time: func 57.6554    prepare 22.4833    bound 23.9930    transfer 2.9589    finalize 4.0370    
all_split False
======================Cut inference begins======================
max lb tensor(0.24276444) min lb tensor(-0.06327088)
Number of Verified Splits: 6511 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0008456707000732422 
BICCOS Cumulative time: 0.1103358268737793
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06540 (20), -0.06526 (20), -0.06474 (20), -0.06454 (21), -0.06398 (20), -0.06396 (20), -0.06393 (20), -0.06383 (20), -0.06382 (20), -0.06370 (20), -0.06368 (20), -0.06353 (20), -0.06350 (21), -0.06327 (21), -0.06313 (21), -0.06305 (21), -0.06301 (20), -0.06287 (20), -0.06280 (21), -0.06273 (21), 
Length of domains: 119921
Time: pickout 0.3079    decision 1.6627    set_bounds 2.4689    solve 4.2244    add 0.1022    
Accumulated time: pickout 3.8127    decision 21.1040    set_bounds 25.6336    solve 58.7838    add 2.2164    
Current (lb-rhs): -0.06540293991565704
327381 domains visited
Cumulative time: 113.16313219070435

BaB round 23
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1617] [/input-8, 1356] [/input, 2504] [/input-8, 1356] [/input, 2504] [/input-8, 1356] [/input-8, 1609] [/input-8, 1356] [/input-8, 1617] [/input-8, 614] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6027029156684875, worst -0.06280441582202911
10 lb beta sum: 0.6027029156684875, worst -0.06280513107776642
Time: prepare 1.8079    bound 1.7688    transfer 0.2446    finalize 0.2691    func 4.3056    
Accumulated time: func 61.9610    prepare 24.2916    bound 25.7618    transfer 3.2035    finalize 4.3061    
all_split False
======================Cut inference begins======================
max lb tensor(0.24160430) min lb tensor(-0.06280155)
Number of Verified Splits: 6245 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0008947849273681641 
BICCOS Cumulative time: 0.11123061180114746
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06540 (20), -0.06526 (20), -0.06454 (21), -0.06398 (20), -0.06396 (20), -0.06382 (20), -0.06368 (20), -0.06353 (20), -0.06350 (21), -0.06327 (21), -0.06313 (21), -0.06305 (21), -0.06301 (20), -0.06280 (21), -0.06280 (21), -0.06273 (21), -0.06270 (21), -0.06256 (21), -0.06246 (20), -0.06246 (21), 
Length of domains: 130060
Time: pickout 0.3128    decision 2.4645    set_bounds 1.6244    solve 4.3162    add 0.1122    
Accumulated time: pickout 4.1255    decision 23.5685    set_bounds 27.2580    solve 63.1000    add 2.3286    
Current (lb-rhs): -0.06540293991565704
353904 domains visited
Cumulative time: 122.1064190864563

BaB round 24
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 3239] [/input, 2501] [/input-8, 614] [/input, 460] [/input, 3511] [/input-8, 1122] [/input-8, 1610] [/input-8, 1122] [/input, 3239] [/input-8, 680] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6149284839630127, worst -0.06300373375415802
10 lb beta sum: 0.6149284839630127, worst -0.06299002468585968
Time: prepare 1.7955    bound 1.7707    transfer 0.2410    finalize 0.2151    func 4.2407    
Accumulated time: func 66.2017    prepare 26.0876    bound 27.5325    transfer 3.4445    finalize 4.5213    
all_split False
======================Cut inference begins======================
max lb tensor(0.24239430) min lb tensor(-0.06297775)
Number of Verified Splits: 6479 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0007789134979248047 
BICCOS Cumulative time: 0.11200952529907227
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06540 (20), -0.06454 (21), -0.06396 (20), -0.06368 (20), -0.06350 (21), -0.06327 (21), -0.06313 (21), -0.06305 (21), -0.06301 (20), -0.06298 (21), -0.06280 (21), -0.06280 (21), -0.06273 (21), -0.06270 (21), -0.06256 (21), -0.06246 (20), -0.06246 (21), -0.06238 (21), -0.06232 (21), -0.06231 (20), 
Length of domains: 139965
Time: pickout 0.3202    decision 2.5443    set_bounds 1.5492    solve 4.2485    add 0.1010    
Accumulated time: pickout 4.4457    decision 26.1128    set_bounds 28.8072    solve 67.3485    add 2.4296    
Current (lb-rhs): -0.06540293991565704
380193 domains visited
Cumulative time: 131.00236701965332

BaB round 25
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1346] [/input, 2501] [/input, 2501] [/input, 3511] [/input, 2501] [/input, 2486] [/input-8, 1346] [/input, 460] [/input, 460] [/input, 460] 
cut re-enabled after branching node selection
0 lb beta sum: 0.625198483467102, worst -0.0628470927476883
10 lb beta sum: 0.625198483467102, worst -0.06283648312091827
Time: prepare 1.8053    bound 1.7691    transfer 0.2398    finalize 0.2090    func 4.2377    
Accumulated time: func 70.4394    prepare 27.8932    bound 29.3016    transfer 3.6843    finalize 4.7302    
all_split False
======================Cut inference begins======================
max lb tensor(0.24202070) min lb tensor(-0.06283398)
Number of Verified Splits: 6100 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0009393692016601562 
BICCOS Cumulative time: 0.11294889450073242
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06540 (20), -0.06327 (21), -0.06313 (21), -0.06305 (21), -0.06298 (21), -0.06283 (21), -0.06280 (21), -0.06280 (21), -0.06273 (21), -0.06270 (21), -0.06256 (21), -0.06255 (21), -0.06246 (20), -0.06246 (21), -0.06232 (21), -0.06224 (22), -0.06223 (21), -0.06207 (21), -0.06194 (21), -0.06191 (21), 
Length of domains: 150249
Time: pickout 0.3108    decision 2.7922    set_bounds 1.6291    solve 4.2458    add 0.1131    
Accumulated time: pickout 4.7565    decision 28.9050    set_bounds 30.4363    solve 71.5943    add 2.5427    
Current (lb-rhs): -0.06540293991565704
406861 domains visited
Cumulative time: 140.20082592964172

BaB round 26
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1617] [/input-8, 1617] [/input, 3511] [/input, 3239] [/input, 3511] [/input-8, 1617] [/input, 2501] [/input, 2501] [/input, 2501] [/input, 2501] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6268208026885986, worst -0.06314094364643097
10 lb beta sum: 0.6268208026885986, worst -0.06312663853168488
Time: prepare 1.8073    bound 1.7693    transfer 0.2405    finalize 0.2315    func 4.2658    
Accumulated time: func 74.7052    prepare 29.7010    bound 31.0709    transfer 3.9248    finalize 4.9617    
all_split False
======================Cut inference begins======================
max lb tensor(0.00879900) min lb tensor(-0.06312127)
Number of Verified Splits: 5618 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0007367134094238281 
BICCOS Cumulative time: 0.11368560791015625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06327 (21), -0.06312 (21), -0.06305 (21), -0.06298 (21), -0.06283 (21), -0.06280 (21), -0.06273 (21), -0.06270 (21), -0.06258 (21), -0.06256 (21), -0.06255 (21), -0.06246 (21), -0.06224 (22), -0.06223 (21), -0.06207 (21), -0.06194 (21), -0.06191 (21), -0.06188 (21), -0.06185 (21), -0.06179 (21), 
Length of domains: 161015
Time: pickout 0.3141    decision 1.6704    set_bounds 2.8441    solve 4.2747    add 0.1102    
Accumulated time: pickout 5.0706    decision 30.5755    set_bounds 33.2804    solve 75.8690    add 2.6529    
Current (lb-rhs): -0.06327088177204132
434011 domains visited
Cumulative time: 149.54986262321472

BaB round 27
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2501] [/input-8, 1342] [/input-8, 1122] [/input-8, 1346] [/input, 3511] [/input-8, 1346] [/input, 2486] [/input-8, 1342] [/input-8, 1342] [/input, 460] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6320210695266724, worst -0.06084926426410675
10 lb beta sum: 0.6320210695266724, worst -0.06084664165973663
Time: prepare 1.7988    bound 1.7689    transfer 0.2402    finalize 0.1988    func 4.2273    
Accumulated time: func 78.9325    prepare 31.5002    bound 32.8398    transfer 4.1649    finalize 5.1606    
all_split False
======================Cut inference begins======================
max lb tensor(0.01063667) min lb tensor(-0.06084116)
Number of Verified Splits: 5594 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0008003711700439453 
BICCOS Cumulative time: 0.1144859790802002
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06327 (21), -0.06312 (21), -0.06305 (21), -0.06298 (21), -0.06283 (21), -0.06280 (21), -0.06273 (21), -0.06270 (21), -0.06258 (21), -0.06256 (21), -0.06255 (21), -0.06246 (21), -0.06224 (22), -0.06223 (21), -0.06207 (21), -0.06191 (21), -0.06188 (21), -0.06185 (21), -0.06179 (21), -0.06170 (22), 
Length of domains: 171805
Time: pickout 0.3271    decision 1.6712    set_bounds 2.8879    solve 4.2348    add 0.0998    
Accumulated time: pickout 5.3977    decision 32.2466    set_bounds 36.1683    solve 80.1038    add 2.7528    
Current (lb-rhs): -0.06327088177204132
461185 domains visited
Cumulative time: 158.89120841026306

BaB round 28
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 460] [/input-8, 1134] [/input, 2486] [/input, 2501] [/input, 2486] [/input, 2486] [/input-8, 1342] [/input-8, 1122] [/input, 2486] [/input, 2501] 
cut re-enabled after branching node selection
0 lb beta sum: 0.633542001247406, worst -0.06161673367023468
10 lb beta sum: 0.633542001247406, worst -0.06160183250904083
Time: prepare 1.8239    bound 1.7683    transfer 0.2414    finalize 0.2488    func 5.7579    
Accumulated time: func 84.6904    prepare 33.3245    bound 34.6081    transfer 4.4063    finalize 5.4094    
all_split False
======================Cut inference begins======================
max lb tensor(0.01076292) min lb tensor(-0.06159921)
Number of Verified Splits: 5534 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0009562969207763672 
BICCOS Cumulative time: 0.11544227600097656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06327 (21), -0.06312 (21), -0.06298 (21), -0.06283 (21), -0.06280 (21), -0.06258 (21), -0.06256 (21), -0.06255 (21), -0.06246 (21), -0.06224 (22), -0.06223 (21), -0.06191 (21), -0.06188 (21), -0.06179 (21), -0.06170 (22), -0.06169 (21), -0.06160 (22), -0.06156 (21), -0.06154 (21), -0.06141 (21), 
Length of domains: 182655
Time: pickout 0.3157    decision 1.6902    set_bounds 1.6350    solve 5.7662    add 0.1018    
Accumulated time: pickout 5.7134    decision 33.9368    set_bounds 37.8033    solve 85.8700    add 2.8545    
Current (lb-rhs): -0.06327088177204132
488419 domains visited
Cumulative time: 168.50779962539673

BaB round 29
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1122] [/input-8, 1122] [/input-8, 1122] [/input-8, 1122] [/input-8, 1122] [/input-8, 1617] [/input-8, 1625] [/input, 2504] [/input, 460] [/input-8, 1617] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6161451935768127, worst -0.062149956822395325
10 lb beta sum: 0.6161451935768127, worst -0.06214304268360138
Time: prepare 1.8124    bound 1.7722    transfer 0.2433    finalize 0.2516    func 4.2983    
Accumulated time: func 88.9887    prepare 35.1372    bound 36.3803    transfer 4.6497    finalize 5.6609    
all_split False
======================Cut inference begins======================
max lb tensor(0.01004790) min lb tensor(-0.06213947)
Number of Verified Splits: 5910 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0007607936859130859 
BICCOS Cumulative time: 0.11620306968688965
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06312 (21), -0.06298 (21), -0.06283 (21), -0.06280 (21), -0.06258 (21), -0.06256 (21), -0.06255 (21), -0.06246 (21), -0.06224 (22), -0.06223 (21), -0.06214 (22), -0.06191 (21), -0.06188 (21), -0.06179 (21), -0.06170 (22), -0.06169 (21), -0.06160 (22), -0.06156 (21), -0.06154 (21), -0.06141 (21), 
Length of domains: 193129
Time: pickout 0.3082    decision 1.6687    set_bounds 1.5887    solve 4.3067    add 0.1104    
Accumulated time: pickout 6.0216    decision 35.6055    set_bounds 39.3921    solve 90.1767    add 2.9649    
Current (lb-rhs): -0.06312127411365509
515277 domains visited
Cumulative time: 176.63670182228088

BaB round 30
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2501] [/input-8, 1122] [/input, 2501] [/input, 2501] [/input, 2501] [/input, 2501] [/input, 2501] [/input-8, 1122] [/input, 2501] [/input-8, 1122] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6109305620193481, worst -0.06078679859638214
10 lb beta sum: 0.6109305620193481, worst -0.060784175992012024
Time: prepare 1.8143    bound 1.7698    transfer 0.2478    finalize 0.2440    func 4.2940    
Accumulated time: func 93.2827    prepare 36.9520    bound 38.1501    transfer 4.8975    finalize 5.9050    
all_split False
======================Cut inference begins======================
max lb tensor(0.00918381) min lb tensor(-0.06078120)
Number of Verified Splits: 5775 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0008654594421386719 
BICCOS Cumulative time: 0.11706852912902832
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06312 (21), -0.06298 (21), -0.06283 (21), -0.06258 (21), -0.06255 (21), -0.06246 (21), -0.06224 (22), -0.06223 (21), -0.06214 (22), -0.06188 (21), -0.06170 (22), -0.06169 (21), -0.06160 (22), -0.06156 (21), -0.06154 (21), -0.06128 (22), -0.06126 (21), -0.06119 (22), -0.06115 (21), -0.06112 (22), 
Length of domains: 203738
Time: pickout 0.3229    decision 1.6803    set_bounds 3.0891    solve 4.3016    add 0.1154    
Accumulated time: pickout 6.3444    decision 37.2858    set_bounds 42.4811    solve 94.4783    add 3.0803    
Current (lb-rhs): -0.06312127411365509
542270 domains visited
Cumulative time: 186.28680396080017

BaB round 31
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2504] [/input-8, 412] [/input-8, 641] [/input, 3239] [/input-8, 1609] [/input-8, 1609] [/input, 3239] [/input-8, 1122] [/input-8, 1122] [/input-8, 1122] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6173619627952576, worst -0.06132788956165314
10 lb beta sum: 0.6173619627952576, worst -0.06132848560810089
Time: prepare 1.8387    bound 1.7682    transfer 0.2515    finalize 1.9078    func 5.9852    
Accumulated time: func 99.2679    prepare 38.7911    bound 39.9183    transfer 5.1490    finalize 7.8127    
all_split False
======================Cut inference begins======================
max lb tensor(0.01187317) min lb tensor(-0.06132193)
Number of Verified Splits: 5529 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0008733272552490234 
BICCOS Cumulative time: 0.11794185638427734
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06312 (21), -0.06298 (21), -0.06283 (21), -0.06258 (21), -0.06255 (21), -0.06224 (22), -0.06223 (21), -0.06214 (22), -0.06188 (21), -0.06170 (22), -0.06169 (21), -0.06160 (22), -0.06154 (21), -0.06132 (22), -0.06128 (22), -0.06126 (21), -0.06119 (22), -0.06115 (21), -0.06112 (22), -0.06112 (21), 
Length of domains: 214593
Time: pickout 0.3197    decision 1.6784    set_bounds 1.6602    solve 5.9936    add 0.1078    
Accumulated time: pickout 6.6642    decision 38.9642    set_bounds 44.1413    solve 100.4719    add 3.1882    
Current (lb-rhs): -0.06312127411365509
569509 domains visited
Cumulative time: 196.15711736679077

BaB round 32
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1122] [/input-8, 1134] [/input, 460] [/input-8, 1134] [/input-8, 614] [/input, 460] [/input-8, 1342] [/input-8, 1342] [/input, 460] [/input-8, 1342] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6344835758209229, worst -0.06112881004810333
10 lb beta sum: 0.6344835758209229, worst -0.06112535297870636
Time: prepare 1.8319    bound 1.7721    transfer 0.2526    finalize 0.2557    func 4.3234    
Accumulated time: func 103.5913    prepare 40.6234    bound 41.6904    transfer 5.4015    finalize 8.0684    
all_split False
======================Cut inference begins======================
max lb tensor(0.01139073) min lb tensor(-0.06112368)
Number of Verified Splits: 5595 of 32768
Stop inferencing: Max iteration reached.
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0007221698760986328 
BICCOS Cumulative time: 0.11866402626037598
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06312 (21), -0.06298 (21), -0.06283 (21), -0.06258 (21), -0.06255 (21), -0.06224 (22), -0.06214 (22), -0.06188 (21), -0.06170 (22), -0.06169 (21), -0.06160 (22), -0.06154 (21), -0.06132 (22), -0.06128 (22), -0.06126 (21), -0.06119 (22), -0.06112 (22), -0.06112 (22), -0.06112 (21), -0.06109 (21), 
Length of domains: 225382
Time: pickout 0.3136    decision 1.6685    set_bounds 1.5768    solve 4.3310    add 0.1049    
Accumulated time: pickout 6.9777    decision 40.6327    set_bounds 45.7181    solve 104.8029    add 3.2931    
Current (lb-rhs): -0.06312127411365509
596682 domains visited
Time out!!!!!!!!
Result: unknown in 207.7008 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 199, vnnlib ID: 199 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.87905216, -4.83922100, -4.88939095, -3.64813495, -4.49923706,
         -4.07969141, -3.29299521, -4.57696962, -6.84988213, -3.62618971]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [599]; unstable size 599; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 271, 1, 599] with unstable size 270 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 599] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 599] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [270]; unstable size 270; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 270] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 270] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.17035973, -1.17387748, -0.10739565, -1.19881463, -0.49474239,
         -1.09854031, -0.81328779,  0.67185235, -1.93993378]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.87905216, -4.83922100, -4.88939095, -3.64813495, -4.49923706,
         -4.07969141, -3.29299521, -4.57696962, -6.84988213, -3.62618971]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.36935329, -4.46735382, -4.54357624, -3.14718437, -4.18439627,
          -3.51606941, -3.42233038, -4.04076290, -6.27815247, -3.11652946],
         [-5.36935329, -4.46735382, -4.54357624, -3.14718437, -4.18439627,
          -3.51606941, -3.42233038, -4.04076290, -6.27815247, -3.11652946]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.04502344,  1.12124586, -0.27514601,  0.76206589,  0.09373903,
           0.61843252, -0.30580091]]], device='cuda:0')
number of violation:  2
Attack finished in 0.0151 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0958 seconds
############# Summary #############
Final verified acc: 44.5% (total 200 examples)
Problem instances count: 200 , total verified (safe/unsat): 89 , total falsified (unsafe/sat): 100 , timeout: 11
mean time for ALL instances (total 200):12.363089480941824, max time: 222.69242143630981
mean time for verified SAFE instances(total 89): 1.8131172442704104, max time: 83.05100703239441
mean time for verified (SAFE + UNSAFE) instances (total 189): 0.9039369020512495, max time: [2.1339046955108643, 0.4815061092376709, 0.07187128067016602, 0.06896471977233887, 0.07863712310791016, 0.07308220863342285, 0.031882524490356445, 0.09366273880004883, 0.07692646980285645, 0.08864188194274902, 0.07514238357543945, 0.06686878204345703, 0.08556175231933594, 0.07240033149719238, 0.07278561592102051, 0.0936887264251709, 0.08301138877868652, 0.0915231704711914, 0.09929990768432617, 0.03823113441467285, 0.0436553955078125, 0.08911943435668945, 0.07110071182250977, 0.06428003311157227, 0.08252501487731934, 0.08578920364379883, 0.0846099853515625, 0.0675501823425293, 0.04117083549499512, 0.04266762733459473, 0.0749654769897461, 0.08581042289733887, 0.09462237358093262, 0.07871437072753906, 0.08243656158447266, 0.04469943046569824, 0.05788683891296387, 0.07097244262695312, 0.06876921653747559, 0.06966805458068848, 0.07396149635314941, 0.07717108726501465, 0.07937479019165039, 0.05594468116760254, 0.07670903205871582, 0.07432794570922852, 0.08394813537597656, 0.07004141807556152, 0.06837153434753418, 0.07859539985656738, 0.04227328300476074, 0.07532739639282227, 0.0746457576751709, 0.07766056060791016, 0.029301166534423828, 0.07194876670837402, 0.08180451393127441, 0.0731046199798584, 0.03916335105895996, 0.06979227066040039, 0.09166383743286133, 0.0792081356048584, 0.05460810661315918, 0.07061314582824707, 0.08351564407348633, 0.0794219970703125, 0.08266282081604004, 0.07898426055908203, 0.07825326919555664, 0.0726308822631836, 0.08180522918701172, 0.08011698722839355, 0.07637763023376465, 0.06646466255187988, 0.040796756744384766, 0.07838106155395508, 0.06557083129882812, 0.06863737106323242, 0.06021857261657715, 0.040491580963134766, 0.0787043571472168, 0.07288646697998047, 0.04765439033508301, 0.038611650466918945, 0.07620573043823242, 0.07947230339050293, 0.08497333526611328, 0.05493974685668945, 0.05885815620422363, 0.040033817291259766, 0.04227757453918457, 0.055328369140625, 0.05683112144470215, 0.10021114349365234, 0.08200883865356445, 0.0647439956665039, 0.045564889907836914, 0.03487825393676758, 0.08417725563049316, 0.09578180313110352]
mean time for verified SAFE + TIMEOUT instances (total 100): 24.631413800716402, max time: [202.61625218391418, 206.9799256324768, 222.69242143630981, 209.39899015426636, 222.48009204864502, 202.14660453796387, 204.1894142627716, 214.5552580356598, 204.13468027114868, 204.87949872016907, 207.7008080482483] 
mean time for verified UNSAFE instances (total 100): 0.09476639747619629, max time: 2.1339046955108643
unsafe-pgd (total 100), index: [0, 1, 3, 4, 5, 6, 7, 9, 10, 12, 13, 15, 16, 18, 19, 25, 29, 32, 34, 35, 36, 43, 44, 45, 46, 50, 53, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 69, 72, 75, 77, 78, 80, 82, 87, 88, 90, 91, 92, 94, 96, 98, 99, 100, 101, 102, 105, 106, 108, 113, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 135, 137, 138, 141, 143, 145, 149, 150, 151, 152, 154, 155, 156, 163, 165, 170, 173, 174, 175, 176, 181, 184, 185, 188, 191, 194, 196, 199]
safe-incomplete (total 73), index: [2, 8, 14, 17, 20, 21, 22, 23, 26, 27, 28, 30, 31, 33, 37, 39, 40, 41, 47, 48, 49, 51, 52, 62, 68, 71, 73, 74, 76, 79, 81, 83, 85, 86, 93, 104, 109, 110, 111, 114, 115, 117, 118, 121, 131, 133, 136, 140, 142, 144, 146, 147, 148, 153, 157, 159, 161, 162, 164, 166, 168, 171, 177, 178, 179, 180, 182, 186, 189, 190, 192, 193, 197]
safe (total 16), index: [11, 38, 42, 54, 60, 84, 89, 95, 103, 107, 112, 132, 139, 158, 160, 172]
unknown (total 11), index: [24, 55, 70, 97, 116, 167, 169, 183, 187, 195, 198]
