/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/site-packages/torch/onnx/_internal/jit_utils.py:307: UserWarning: Constant folding - Only steps=1 can be constant folded for opset >= 10 onnx::Slice op. Constant folding not applied. (Triggered internally at /opt/conda/conda-bld/pytorch_1716905969073/work/torch/csrc/jit/passes/onnx/constant_fold.cpp:179.)
  _C._jit_pass_onnx_node_shape_type_inference(node, params_dict, opset_version)
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/site-packages/torch/onnx/utils.py:702: UserWarning: Constant folding - Only steps=1 can be constant folded for opset >= 10 onnx::Slice op. Constant folding not applied. (Triggered internally at /opt/conda/conda-bld/pytorch_1716905969073/work/torch/csrc/jit/passes/onnx/constant_fold.cpp:179.)
  _C._jit_pass_onnx_graph_shape_type_inference(
Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  sparse_interm: true
  save_adv_example: false
  verify_onnxruntime_output: false
  eval_adv_example: false
  show_adv_example: false
  precompile_jit: false
  prepare_only: false
  complete_verifier: bab
  enable_incomplete_verification: true
  csv_name: null
  results_file: ablation_results/cifar_cnn_b_adv4/biccos_all_selective_mts.out
  root_path: ''
  deterministic_opt: false
  graph_optimizer: 'Customized("custom_graph_optimizer", "default_optimizer")'
  buffer_has_batchdim: false
  save_output: false
  output_file: out.pkl
  return_optimized_model: false
model:
  name: cnn_4layer_b4
  path: models/sdp/cifar_cnn_b_adv4.model
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  debug_onnx: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: []
  onnx_vnnlib_joint_optimization_flags: none
  check_optimized: false
  flatten_final_output: false
  optimize_graph: null
  with_jacobian: false
data:
  start: 0
  end: 10000
  select_instance: null
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: CIFAR_SDP
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.00784313725
  epsilon_min: 0.0
  vnnlib_path: null
  vnnlib_path_prefix: ''
  rhs_offset: null
solver:
  batch_size: 256
  auto_enlarge_batch_size: true
  auto_enlarge_batch_size_vram_ratio: 0.0
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  optimize_disjuncts_separately: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
    relu_option: adaptive
    compare_crown_with_ibp: false
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_alphas: false
    lr_decay: 0.98
    full_conv_alpha: true
    max_coeff_mul: .inf
    matmul_share_alphas: false
    disable_optimization: []
    max_time: 1.0
  invprop:
    apply_output_constraints_to: []
    tighten_input_bounds: false
    best_of_oc_and_no_oc: false
    directly_optimize: []
    oc_lr: 0.1
    share_gammas: false
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    max_dim: 10000
    reset_threshold: 1.0
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    unstable_neuron_threshold: 0
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
    skip_unsafe: false
    topk_filter: 1.0
    sliding_window: -1
    extra_constraint: false
    refine_neuron_timeout_increasement: 0
    timeout_neuron_percentage: 0.3
    remaining_timeout_threshold: 1
    remove_unstable_neurons: false
    lp_solver: mip
    output_cut: false
bab:
  initial_max_domains: 1
  backing_up_max_domain: null
  max_domains: .inf
  decision_thresh: 0
  timeout: 200
  timeout_scale: 1
  max_iterations: -1
  override_timeout: null
  get_upper_bound: false
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_interm: ''
  interm_transfer: true
  recompute_interm: false
  sort_domain_interval: -1
  vanilla_crown: false
  tree_traversal: breadth_first
  cut:
    enabled: true
    cuts_path: /tmp/abcrown_cuts_20835
    implication: false
    bab_cut: true
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 0.99
    iteration: 200
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.05
    number_cuts: 500
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    add_implied_cuts: false
    add_input_cuts: false
    biccos:
      enabled: true
      auto_param: false
      constraint_strengthening: true
      recursively_strengthening: false
      merge_cut_enabled: false
      fast_inference_enabled: false
      drop_ratio: 0.5
      max_infer_iter: 40
      heuristic: neuron_influence_score
      save_cuts: false
      multi_tree_branching:
        enabled: true
        restore_best_tree: true
        keep_n_best_domains: 50
        target_batch_size: 200
        iterations: 5
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    nonlinear_split:
      method: shortcut
      branching_point_method: uniform
      num_branches: 2
      filter: false
      filter_beta: false
      filter_clamp: false
      filter_batch_size: 10000
      filter_iterations: 25
      relu_only: false
      loose_tanh_threshold: null
      dynamic_bbps: false
      dynamic_options: [uniform, three_left, three_right]
      branching_point_node: ''
      branching_point_db: []
    input_split:
      enable_clip_domains: false
      split_hint: null
      reorder_bab: false
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      split_partitions: 2
      sb_margin_weight: 1.0
      sb_sum: false
      sb_primary_spec: null
      bf_backup_thresh: -1
      bf_rhs_offset: 0
      bf_iters: 1000000000.0
      bf_batch_size: 100000
      bf_zero_crossing_score: false
      touch_zero_score: 0
      ibp_enhancement: false
      catch_assertion: false
      compare_with_old_bounds: false
      update_rhs_with_attack: false
      sb_coeff_thresh: 0.001
      sort_index: null
      sort_descending: true
      show_progress: false
      presplit_domains: null
      skip_getting_worst_domain: false
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: middle
  pgd_steps: 100
  pgd_restarts: 50
  pgd_batch_size: 100000000
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_alpha_scale: false
  pgd_loss_mode: null
  pgd_restart_when_stuck: false
  enable_mip_attack: false
  adv_saver: default_adv_saver
  adv_verifier: default_adv_verifier
  early_stop_condition: default_early_stop_condition
  adv_example_finalizer: default_adv_example_finalizer
  pgd_loss: default_pgd_loss
  cex_path: ./test_cex.txt
  attack_mode: PGD
  attack_tolerance: 0.0
  attack_func: attack_with_general_specs
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 500000
    pgd_alpha: auto
  input_split_check_adv:
    enabled: auto
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
    max_num_domains: 10
debug:
  view_model: false
  lp_test: null
  rescale_vnnlib_ptb: null
  test_optimized_bounds: false
  test_optimized_bounds_after_n_iterations: 0
  print_verbose_decisions: false
  biccos_mip_sanity_check: false
  sanity_check: 0
  z_split_enabled: false

Experiments at Wed Oct 30 22:13:18 2024 on w23g0002.hpc.itc.rwth-aachen.de
Sequential(
  (0): ZeroPad2d((1, 2, 1, 2))
  (1): Conv2d(3, 32, kernel_size=(5, 5), stride=(2, 2))
  (2): ReLU()
  (3): Conv2d(32, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (4): ReLU()
  (5): Flatten(start_dim=1, end_dim=-1)
  (6): Linear(in_features=8192, out_features=250, bias=True)
  (7): ReLU()
  (8): Linear(in_features=250, out_features=10, bias=True)
)
Parameters:
  1.weight: shape torch.Size([32, 3, 5, 5])
  1.bias: shape torch.Size([32])
  3.weight: shape torch.Size([128, 32, 4, 4])
  3.bias: shape torch.Size([128])
  6.weight: shape torch.Size([250, 8192])
  6.bias: shape torch.Size([250])
  8.weight: shape torch.Size([10, 250])
  8.bias: shape torch.Size([10])
############################
Sampled data loaded. Data already preprocessed!
Shape: torch.Size([200, 3, 32, 32]) torch.Size([200]) torch.Size([200])
X range: tensor(2.12560368) tensor(-1.98888886) tensor(-0.01308715)
############################
Internal results will be saved to ablation_results/cifar_cnn_b_adv4/biccos_all_selective_mts.out.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-30.94161034, -32.14760971, -30.02668190, -29.21061325, -29.91526794,
         -29.69108009, -30.33068848, -31.02446175, -32.38183975, -32.39494324]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [968]; unstable size 968; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 267, 1, 968] with unstable size 266 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 22, 1, 968] with unstable size 21 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 968] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [266]; unstable size 266; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 22, 1, 266] with unstable size 21 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 266] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [21]; unstable size 21; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.28175187, 2.37155104, 0.54671621, 0.36962318, 0.43642786, 0.74114704,
         1.36058879, 2.58924961, 2.55375862]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 2.2240 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 1, vnnlib ID: 1 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-75.15433502, -70.31649017, -78.62376404, -78.04199219, -79.25576782,
         -78.42436218, -79.21332550, -78.89690399, -76.45311737, -71.08774567]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1410]; unstable size 1410; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 448, 1, 1410] with unstable size 447 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 18, 1, 1410] with unstable size 17 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1410] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [447]; unstable size 447; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 18, 1, 447] with unstable size 17 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 447] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [17]; unstable size 17; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.24828744, -2.00011826,  5.42642879,  4.96452856,  6.14242268,
          5.30826998,  5.99950409,  5.95179510,  3.80653667]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-75.15433502, -70.31649017, -78.62376404, -78.04199219, -79.25576782,
         -78.42436218, -79.21332550, -78.89690399, -76.45311737, -71.08774567]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-75.15433502, -70.31649017, -78.62376404, -78.04199219, -79.25576782,
          -78.42436218, -79.21332550, -78.89690399, -76.45311737, -71.08774567]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.77125549]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.46507931, -1.30634916, -1.32222211,  ...,  0.10634929,
             0.02698422,  0.04285724],
           [-1.25873005, -1.35396814, -1.40158725,  ...,  0.31269848,
             0.28095245,  0.28095245],
           [ 0.15396833,  0.42380959,  0.29682547,  ..., -0.00476181,
            -0.17936498, -0.24285704],
           ...,
           [-0.86190474, -0.60793650, -0.38571417,  ...,  0.91587305,
             0.82063496,  0.83650798],
           [-0.43333322, -0.30634910, -0.22698402,  ...,  0.90000004,
             0.77301592,  0.75714290],
           [-0.33809513, -0.30634910, -0.27460307,  ...,  0.88412702,
             0.78888893,  0.67777783]],

          [[-1.44927526, -1.28824472, -1.30434775,  ...,  0.20933989,
             0.14492765,  0.20933989],
           [-1.35265696, -1.36875999, -1.33655393,  ...,  0.37037048,
             0.35426742,  0.40257660],
           [-1.32045078, -1.35265696, -1.41706920,  ...,  0.04830930,
            -0.14492741, -0.24154577],
           ...,
           [-0.75684375, -0.51529789, -0.30595800,  ...,  0.91787446,
             0.83735919,  0.90177143],
           [-0.32206106, -0.19323659, -0.14492741,  ...,  0.90177143,
             0.78904998,  0.82125610],
           [-0.17713353, -0.17713353, -0.16103047,  ...,  0.90177143,
             0.78904998,  0.74074084]],

          [[-1.54272878, -1.49775124, -1.49775124,  ...,  0.42128953,
             0.34632701,  0.37631202],
           [-1.51274371, -1.55772126, -1.52773619,  ...,  0.52623707,
             0.49625200,  0.49625200],
           [-1.13793111, -1.09295356, -1.12293863,  ...,  0.09145443,
            -0.08845562, -0.19340314],
           ...,
           [-0.59820086, -0.43328333, -0.28335828,  ...,  0.88605714,
             0.81109464,  0.88605714],
           [-0.23838064, -0.14842562, -0.11844061,  ...,  0.85607213,
             0.76611710,  0.81109464],
           [-0.07346311, -0.10344811, -0.08845562,  ...,  0.75112462,
             0.79610211,  0.73613209]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.1269 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 2, vnnlib ID: 2 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-87.82122803, -84.05503082, -91.55982208, -91.34046936, -91.26472473,
         -91.97817993, -91.28619385, -93.37196350, -86.68744659, -87.21117401]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1791]; unstable size 1791; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 82, 1, 1791] with unstable size 81 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 24, 1, 1791] with unstable size 23 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1791] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [554]; unstable size 554; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 24, 1, 554] with unstable size 23 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 554] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [23]; unstable size 23; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.39649963, 4.79579592, 4.47512865, 4.21795797, 5.03934383, 4.48407364,
         5.84590912, 0.58363581, 1.89480352]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0410 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 3, vnnlib ID: 3 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-50.61070633, -54.11018753, -46.16267014, -47.33248138, -45.56668091,
         -47.11740112, -50.40982437, -45.29171371, -54.23347855, -53.52524567]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1158]; unstable size 1158; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 88, 1, 1158] with unstable size 87 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 28, 1, 1158] with unstable size 27 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1158] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [561]; unstable size 561; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 28, 1, 561] with unstable size 27 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 561] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [27]; unstable size 27; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.59407330,  7.15947151, -0.24281311,  0.82924771,  0.63007170,
          3.50283217, -1.21695161,  7.18330002,  6.57802296]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-50.61070633, -54.11018753, -46.16267014, -47.33248138, -45.56668091,
         -47.11740112, -50.40982437, -45.29171371, -54.23347855, -53.52524567]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-50.61071396, -54.11019516, -46.16267776, -47.33248520, -45.56668472,
          -47.11740494, -50.40983200, -45.29171371, -54.23348236, -53.52525330],
         [-50.61071396, -54.11019516, -46.16267776, -47.33248520, -45.56668472,
          -47.11740494, -50.40983200, -45.29171371, -54.23348236, -53.52525330]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.59599304, -0.27497101]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.28095245, -0.35396814, -0.21111101,  ..., -0.43333322,
            -0.76666665,  0.32857150],
           [-1.11587298, -0.44920623, -0.59206349,  ..., -0.41746020,
            -1.09999990, -1.02063489],
           [-1.30634916, -0.59206349, -0.86190474,  ..., -0.06825387,
            -0.81428570, -1.17936504],
           ...,
           [ 0.94761908,  1.24920666,  1.42380977,  ...,  1.45555580,
             1.15396857,  0.80476195],
           [ 0.77301592,  0.97936511,  1.23333359,  ...,  1.18571460,
             1.13809550,  0.86825401],
           [ 0.85238099,  0.24920642,  0.50317466,  ...,  0.86825401,
             0.86825401,  0.99523818]],

          [[ 0.28985518, -0.33816412, -0.19323659,  ..., -0.46698871,
            -0.78904986,  0.33816436],
           [-1.11111104, -0.41867942, -0.54750401,  ..., -0.48309177,
            -1.12721407, -1.03059578],
           [-1.28824472, -0.54750401, -0.80515295,  ..., -0.17713353,
            -0.86956519, -1.17552328],
           ...,
           [ 0.93397754,  1.06280196,  1.20772982,  ...,  1.33655429,
             1.14331758,  0.83735919],
           [ 0.78904998,  0.85346222,  1.04669893,  ...,  1.14331758,
             1.19162667,  0.98228669],
           [ 0.88566834,  0.17713377,  0.35426742,  ...,  0.83735919,
             0.90177143,  1.07890511]],

          [[ 0.40629703, -0.26836565, -0.22338814,  ..., -0.35832080,
            -0.55322337,  0.48125952],
           [-0.92803597, -0.37331331, -0.56821585,  ..., -0.41829082,
            -0.91304344, -0.80809593],
           [-1.10794616, -0.53823084, -0.85307342,  ..., -0.19340314,
            -0.74812591, -1.01799107],
           ...,
           [ 0.28635699,  0.34632701,  0.52623707,  ...,  0.51124454,
             0.31634200,  0.09145443],
           [ 0.36131951,  0.34632701,  0.55622208,  ...,  0.27136448,
             0.34632701,  0.24137947],
           [ 0.69115460, -0.01349309,  0.18140946,  ...,  0.37631202,
             0.48125952,  0.75112462]]],


         [[[ 0.28095245, -0.35396814, -0.21111101,  ..., -0.43333322,
            -0.76666665,  0.32857150],
           [-1.11587298, -0.44920623, -0.59206349,  ..., -0.41746020,
            -1.09999990, -1.02063489],
           [-1.30634916, -0.59206349, -0.86190474,  ..., -0.06825387,
            -0.81428570, -1.17936504],
           ...,
           [ 0.94761908,  1.24920666,  1.42380977,  ...,  1.45555580,
             1.15396857,  0.80476195],
           [ 0.77301592,  0.97936511,  1.23333359,  ...,  1.18571460,
             1.13809550,  0.86825401],
           [ 0.85238099,  0.24920642,  0.50317466,  ...,  0.86825401,
             0.86825401,  0.99523818]],

          [[ 0.28985518, -0.33816412, -0.19323659,  ..., -0.46698871,
            -0.78904986,  0.33816436],
           [-1.11111104, -0.41867942, -0.54750401,  ..., -0.48309177,
            -1.12721407, -1.03059578],
           [-1.28824472, -0.54750401, -0.80515295,  ..., -0.17713353,
            -0.86956519, -1.17552328],
           ...,
           [ 0.93397754,  1.06280196,  1.20772982,  ...,  1.33655429,
             1.14331758,  0.83735919],
           [ 0.78904998,  0.85346222,  1.04669893,  ...,  1.14331758,
             1.19162667,  0.98228669],
           [ 0.88566834,  0.17713377,  0.35426742,  ...,  0.83735919,
             0.90177143,  1.07890511]],

          [[ 0.40629703, -0.26836565, -0.22338814,  ..., -0.35832080,
            -0.55322337,  0.48125952],
           [-0.92803597, -0.37331331, -0.56821585,  ..., -0.41829082,
            -0.91304344, -0.80809593],
           [-1.10794616, -0.53823084, -0.85307342,  ..., -0.19340314,
            -0.74812591, -1.01799107],
           ...,
           [ 0.28635699,  0.34632701,  0.52623707,  ...,  0.51124454,
             0.31634200,  0.09145443],
           [ 0.36131951,  0.34632701,  0.55622208,  ...,  0.27136448,
             0.34632701,  0.24137947],
           [ 0.69115460, -0.01349309,  0.18140946,  ...,  0.37631202,
             0.48125952,  0.75112462]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0593 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 4, vnnlib ID: 4 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-40.63653183, -43.89011383, -37.41631699, -40.05084991, -37.72725296,
         -39.87747192, -38.77013779, -39.54986572, -42.89720917, -43.00928497]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1370]; unstable size 1370; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 84, 1, 1370] with unstable size 83 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 29, 1, 1370] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1370] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [587]; unstable size 587; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 29, 1, 587] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 587] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [28]; unstable size 28; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.39645076,  4.18214798, -0.97739387,  1.50502133,  1.31795073,
         -0.15730977,  0.77264524,  3.58214593,  3.52155972]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-40.63653183, -43.89011383, -37.41631699, -40.05084991, -37.72725296,
         -39.87747192, -38.77013779, -39.54986572, -42.89720917, -43.00928497]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-40.63653183, -43.89011383, -37.41631699, -40.05084991, -37.72725296,
          -39.87747574, -38.77014542, -39.54986572, -42.89720917, -43.00927734],
         [-40.63653183, -43.89011383, -37.41631699, -40.05084991, -37.72725296,
          -39.87747574, -38.77014542, -39.54986572, -42.89720917, -43.00927734]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.31093597,  1.04289246]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.45555562,  0.47142863,  0.50317466,  ...,  0.23333341,
             0.16984135, -0.06825387],
           [ 0.37619054,  0.55079371,  0.91587305,  ...,  0.39206356,
             0.59841275,  0.21746039],
           [ 0.47142863,  0.64603180,  0.70952386,  ...,  0.58253974,
             0.85238099,  0.82063496],
           ...,
           [ 0.32857150,  0.55079371,  0.18571436,  ..., -0.67142856,
            -1.22698402, -1.06825387],
           [ 0.47142863,  0.47142863,  0.21746039,  ..., -0.00476181,
            -1.14761901, -1.44920623],
           [ 0.45555562,  0.15396833, -0.11587292,  ...,  1.04285717,
             0.34444451, -0.54444444]],

          [[ 1.03059590,  1.09500813,  1.19162667,  ...,  1.12721443,
             0.96618366,  0.70853472],
           [ 1.03059590,  1.14331758,  1.28824508,  ...,  1.27214205,
             1.36876035,  0.98228669],
           [ 1.15942061,  1.22383285,  1.23993587,  ...,  1.38486338,
             1.54589403,  1.44927561],
           ...,
           [ 1.07890511,  1.28824508,  0.86956531,  ..., -0.70853460,
            -1.20772946, -0.96618354],
           [ 1.15942061,  1.22383285,  1.03059590,  ..., -0.19323659,
            -1.12721407, -1.33655393],
           [ 1.07890511,  0.93397754,  0.85346222,  ...,  0.99838978,
             0.28985518, -0.43478248]],

          [[ 0.10644694,  0.19640197,  0.42128953,  ..., -0.01349309,
             0.09145443, -0.31334329],
           [ 0.16641696,  0.45127454,  0.94602716,  ...,  0.19640197,
             0.75112462,  0.28635699],
           [ 0.16641696,  0.39130452,  0.48125952,  ...,  0.36131951,
             0.91604215,  1.03598225],
           ...,
           [ 0.06146942,  0.37631202,  0.07646193,  ..., -0.83808094,
            -1.27286363, -1.09295356],
           [ 0.19640197,  0.37631202, -0.11844061,  ..., -0.43328333,
            -1.27286363, -1.42278874],
           [ 0.25637197, -0.14842562, -0.73313338,  ...,  0.82608712,
            -0.02848560, -0.82308841]]],


         [[[ 0.45555562,  0.47142863,  0.50317466,  ...,  0.23333341,
             0.16984135, -0.06825387],
           [ 0.37619054,  0.55079371,  0.91587305,  ...,  0.39206356,
             0.59841275,  0.21746039],
           [ 0.47142863,  0.64603180,  0.70952386,  ...,  0.58253974,
             0.85238099,  0.82063496],
           ...,
           [ 0.32857150,  0.55079371,  0.18571436,  ..., -0.67142856,
            -1.22698402, -1.06825387],
           [ 0.47142863,  0.47142863,  0.21746039,  ..., -0.00476181,
            -1.14761901, -1.44920623],
           [ 0.45555562,  0.15396833, -0.11587292,  ...,  1.04285717,
             0.34444451, -0.54444444]],

          [[ 1.03059590,  1.09500813,  1.19162667,  ...,  1.12721443,
             0.96618366,  0.70853472],
           [ 1.03059590,  1.14331758,  1.28824508,  ...,  1.27214205,
             1.36876035,  0.98228669],
           [ 1.15942061,  1.22383285,  1.23993587,  ...,  1.38486338,
             1.54589403,  1.44927561],
           ...,
           [ 1.07890511,  1.28824508,  0.86956531,  ..., -0.70853460,
            -1.20772946, -0.96618354],
           [ 1.15942061,  1.22383285,  1.03059590,  ..., -0.19323659,
            -1.12721407, -1.33655393],
           [ 1.07890511,  0.93397754,  0.85346222,  ...,  0.99838978,
             0.28985518, -0.43478248]],

          [[ 0.10644694,  0.19640197,  0.42128953,  ..., -0.01349309,
             0.09145443, -0.31334329],
           [ 0.16641696,  0.45127454,  0.94602716,  ...,  0.19640197,
             0.75112462,  0.28635699],
           [ 0.16641696,  0.39130452,  0.48125952,  ...,  0.36131951,
             0.91604215,  1.03598225],
           ...,
           [ 0.06146942,  0.37631202,  0.07646193,  ..., -0.83808094,
            -1.27286363, -1.09295356],
           [ 0.19640197,  0.37631202, -0.11844061,  ..., -0.43328333,
            -1.27286363, -1.42278874],
           [ 0.25637197, -0.14842562, -0.73313338,  ...,  0.82608712,
            -0.02848560, -0.82308841]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0446 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 5, vnnlib ID: 5 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-30.22644615, -34.49677658, -28.30619240, -28.08493805, -28.41154289,
         -28.19731522, -30.06793022, -30.89225578, -33.93820572, -34.44393921]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1370]; unstable size 1370; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 83, 1, 1370] with unstable size 82 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 32, 1, 1370] with unstable size 31 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1370] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [550]; unstable size 550; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 32, 1, 550] with unstable size 31 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 550] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [31]; unstable size 31; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.55718207,  4.36036301, -0.84430647, -1.14737582, -1.07133842,
          0.63465720,  1.04861045,  4.34015179,  4.44933987]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-30.22644615, -34.49677658, -28.30619240, -28.08493805, -28.41154289,
         -28.19731522, -30.06793022, -30.89225578, -33.93820572, -34.44393921]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-30.22644806, -34.49678040, -28.30619431, -28.08493614, -28.41154099,
          -28.19731903, -30.06793404, -30.89225769, -33.93820190, -34.44393921],
         [-30.22644806, -34.49678040, -28.30619431, -28.08493614, -28.41154099,
          -28.19731903, -30.06793404, -30.89225769, -33.93820190, -34.44393921]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.10534668, -0.32660484, -0.21422195]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[ 1.61428595,  1.53492093,  1.53492093,  ...,  0.31269848,
             0.78888893,  1.31269872],
           [ 1.61428595,  1.55079389,  1.59841299,  ...,  0.66190481,
             0.75714290,  1.39206374],
           [ 1.66190505,  1.58253992,  1.61428595,  ..., -0.30634910,
            -0.33809513,  1.01111114],
           ...,
           [ 1.66190505,  1.67777801,  1.64603198,  ...,  1.36031771,
             1.39206374,  1.40793681],
           [ 1.61428595,  1.61428595,  1.61428595,  ...,  1.37619078,
             1.39206374,  1.45555580],
           [ 1.50317490,  1.43968284,  1.53492093,  ...,  1.50317490,
             1.50317490,  1.56666696]],

          [[ 1.40096653,  1.32045114,  1.32045114,  ..., -0.09661824,
             0.40257660,  1.03059590],
           [ 1.38486338,  1.32045114,  1.36876035,  ...,  0.30595824,
             0.45088577,  1.19162667],
           [ 1.41706955,  1.35265732,  1.38486338,  ..., -0.61191624,
            -0.59581316,  0.90177143],
           ...,
           [ 1.32045114,  1.25603890,  1.32045114,  ...,  0.93397754,
             0.99838978,  1.07890511],
           [ 1.30434811,  1.27214205,  1.32045114,  ...,  0.98228669,
             1.03059590,  1.11111140],
           [ 1.23993587,  1.17552364,  1.27214205,  ...,  1.23993587,
             1.28824508,  1.27214205]],

          [[ 1.33583248,  1.27586246,  1.27586246,  ..., -0.07346311,
             0.39130452,  0.97601217],
           [ 1.39580250,  1.33583248,  1.38081002,  ...,  0.33133450,
             0.46626705,  1.20089996],
           [ 1.44078004,  1.36581755,  1.41079497,  ..., -0.49325335,
            -0.44827583,  0.99100471],
           ...,
           [ 1.18590748,  1.09595215,  1.21589243,  ...,  0.82608712,
             0.91604215,  0.97601217],
           [ 1.21589243,  1.17091501,  1.24587750,  ...,  0.87106466,
             0.94602716,  1.02098966],
           [ 1.17091501,  1.12593722,  1.21589243,  ...,  1.12593722,
             1.20089996,  1.23088503]]],


         [[[ 1.61428595,  1.53492093,  1.53492093,  ...,  0.31269848,
             0.78888893,  1.31269872],
           [ 1.61428595,  1.55079389,  1.59841299,  ...,  0.66190481,
             0.75714290,  1.39206374],
           [ 1.66190505,  1.58253992,  1.61428595,  ..., -0.30634910,
            -0.33809513,  1.01111114],
           ...,
           [ 1.66190505,  1.67777801,  1.64603198,  ...,  1.36031771,
             1.39206374,  1.40793681],
           [ 1.61428595,  1.61428595,  1.61428595,  ...,  1.37619078,
             1.39206374,  1.45555580],
           [ 1.50317490,  1.43968284,  1.53492093,  ...,  1.50317490,
             1.50317490,  1.56666696]],

          [[ 1.40096653,  1.32045114,  1.32045114,  ..., -0.09661824,
             0.40257660,  1.03059590],
           [ 1.38486338,  1.32045114,  1.36876035,  ...,  0.30595824,
             0.45088577,  1.19162667],
           [ 1.41706955,  1.35265732,  1.38486338,  ..., -0.61191624,
            -0.59581316,  0.90177143],
           ...,
           [ 1.32045114,  1.25603890,  1.32045114,  ...,  0.93397754,
             0.99838978,  1.07890511],
           [ 1.30434811,  1.27214205,  1.32045114,  ...,  0.98228669,
             1.03059590,  1.11111140],
           [ 1.23993587,  1.17552364,  1.27214205,  ...,  1.23993587,
             1.28824508,  1.27214205]],

          [[ 1.33583248,  1.27586246,  1.27586246,  ..., -0.07346311,
             0.39130452,  0.97601217],
           [ 1.39580250,  1.33583248,  1.38081002,  ...,  0.33133450,
             0.46626705,  1.20089996],
           [ 1.44078004,  1.36581755,  1.41079497,  ..., -0.49325335,
            -0.44827583,  0.99100471],
           ...,
           [ 1.18590748,  1.09595215,  1.21589243,  ...,  0.82608712,
             0.91604215,  0.97601217],
           [ 1.21589243,  1.17091501,  1.24587750,  ...,  0.87106466,
             0.94602716,  1.02098966],
           [ 1.17091501,  1.12593722,  1.21589243,  ...,  1.12593722,
             1.20089996,  1.23088503]]],


         [[[ 1.61428595,  1.53492093,  1.53492093,  ...,  0.31269848,
             0.78888893,  1.31269872],
           [ 1.61428595,  1.55079389,  1.59841299,  ...,  0.66190481,
             0.75714290,  1.39206374],
           [ 1.66190505,  1.58253992,  1.61428595,  ..., -0.30634910,
            -0.33809513,  1.01111114],
           ...,
           [ 1.66190505,  1.67777801,  1.64603198,  ...,  1.36031771,
             1.39206374,  1.40793681],
           [ 1.61428595,  1.61428595,  1.61428595,  ...,  1.37619078,
             1.39206374,  1.45555580],
           [ 1.50317490,  1.43968284,  1.53492093,  ...,  1.50317490,
             1.50317490,  1.56666696]],

          [[ 1.40096653,  1.32045114,  1.32045114,  ..., -0.09661824,
             0.40257660,  1.03059590],
           [ 1.38486338,  1.32045114,  1.36876035,  ...,  0.30595824,
             0.45088577,  1.19162667],
           [ 1.41706955,  1.35265732,  1.38486338,  ..., -0.61191624,
            -0.59581316,  0.90177143],
           ...,
           [ 1.32045114,  1.25603890,  1.32045114,  ...,  0.93397754,
             0.99838978,  1.07890511],
           [ 1.30434811,  1.27214205,  1.32045114,  ...,  0.98228669,
             1.03059590,  1.11111140],
           [ 1.23993587,  1.17552364,  1.27214205,  ...,  1.23993587,
             1.28824508,  1.27214205]],

          [[ 1.33583248,  1.27586246,  1.27586246,  ..., -0.07346311,
             0.39130452,  0.97601217],
           [ 1.39580250,  1.33583248,  1.38081002,  ...,  0.33133450,
             0.46626705,  1.20089996],
           [ 1.44078004,  1.36581755,  1.41079497,  ..., -0.49325335,
            -0.44827583,  0.99100471],
           ...,
           [ 1.18590748,  1.09595215,  1.21589243,  ...,  0.82608712,
             0.91604215,  0.97601217],
           [ 1.21589243,  1.17091501,  1.24587750,  ...,  0.87106466,
             0.94602716,  1.02098966],
           [ 1.17091501,  1.12593722,  1.21589243,  ...,  1.12593722,
             1.20089996,  1.23088503]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0498 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 6, vnnlib ID: 6 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-49.84669113, -51.02814865, -53.83344650, -54.16989136, -54.14952469,
         -54.62813187, -54.81621933, -54.47314453, -51.75656509, -52.88755035]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1150]; unstable size 1150; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 89, 1, 1150] with unstable size 88 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 30, 1, 1150] with unstable size 29 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1150] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [556]; unstable size 556; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 30, 1, 556] with unstable size 29 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 556] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [29]; unstable size 29; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.04680872,  2.48170757,  2.91974354,  2.86770105,  3.33303905,
          3.42770123,  2.79044652,  0.31640992,  0.80888623]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-49.84669113, -51.02814865, -53.83344650, -54.16989136, -54.14952469,
         -54.62813187, -54.81621933, -54.47314453, -51.75656509, -52.88755035]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.97it/s]100%|██████████| 1/1 [00:00<00:00,  1.96it/s]
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/cuts/infered_cuts.py:406: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  torch.tensor(history[3]),
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-52.11722183, -52.43252945, -55.93521118, -56.16403580, -56.18507767,
          -56.61268616, -56.82731628, -56.44088745, -53.59556198, -54.46440125]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.31530762]]], device='cuda:0')
number of violation:  0
Attack finished in 0.5126 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 18.462482452392578
alpha/beta optimization time: 3.887500524520874
initial alpha-crown bounds: tensor([[-0.96603906,  2.53406906,  2.97193980,  2.92453742,  3.38532662,
          3.48795700,  2.86521435,  0.37589875,  0.88357937]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.9660390615463257
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 195.55970644950867
Verifying property 0 with 1 instances.
##### Instance 6 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.96603906]], device='cuda:0') need to verify.
Model prediction is: tensor([-49.84669113, -51.02814865, -53.83344650, -54.16989136, -54.14952469,
        -54.62813187, -54.81621933, -54.47314453, -51.75656509, -52.88755035],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.96603906]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1150
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 545
Node /39 input 0: size torch.Size([250]) unstable 28
-----------------
# of unstable neurons: 1723
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.0001380443572998047
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.9660254120826721
10 lb beta sum: 0.0, worst -0.9660283923149109
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.5701    transfer 0.0001    finalize 0.0005    func 0.5710    
Accumulated time: func 0.5710    prepare 0.0002    bound 0.5701    transfer 0.0001    finalize 0.0005    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 146] 
split level 1: [/input-16, 77] 
split level 2: [/input-16, 239] 
split level 3: [/input-16, 213] 
split level 4: [/input-16, 236] 
split level 5: [/input-16, 65] 
split level 6: [/input-16, 178] 
split level 7: [/input-16, 218] 
split level 8: [/input-12, 3110] 
split level 9: [/input-12, 877] 
split level 10: [/input-16, 60] 
split level 11: [/input-12, 3113] 
split level 12: [/input-16, 208] 
split level 13: [/input-12, 6197] 
split level 14: [/input-12, 7708] 
split level 15: [/input-12, 525] 
split level 16: [/input-12, 7342] 
split level 17: [/input-12, 5546] 
split level 18: [/input-12, 886] 
split level 19: [/input-12, 850] 
split level 20: [/input-12, 1188] 
split level 21: [/input-12, 6196] 
split level 22: [/input-12, 4116] 
split level 23: [/input-12, 7922] 
split level 24: [/input-12, 5229] 
split level 25: [/input-12, 2404] 
split level 26: [/input-12, 5789] 
split level 27: [/input-12, 5888] 
split level 28: [/input-12, 2030] 
split level 29: [/input-12, 5230] 
split level 30: [/input-12, 5541] 
split level 31: [/input-12, 6806] 
split level 32: [/input-12, 2403] 
split level 33: [/input-12, 1804] 
split level 34: [/input-12, 7010] 
split level 35: [/input-12, 558] 
split level 36: [/input-12, 5225] 
split level 37: [/input-4, 8093] 
split level 38: [/input-12, 7132] 
split level 39: [/input-12, 7134] 
split level 40: [/input-12, 6805] 
split level 41: [/input-12, 7505] 
split level 42: [/input-12, 3187] 
split level 43: [/input-12, 5234] 
split level 44: [/input-4, 5788] 
split level 45: [/input-12, 418] 
split level 46: [/input-12, 985] 
split level 47: [/input-4, 5789] 
split level 48: [/input-12, 1809] 
split level 49: [/input-12, 5547] 
split level 50: [/input-12, 4758] 
split level 51: [/input-12, 7121] 
split level 52: [/input-4, 2226] 
split level 53: [/input-12, 1034] 
split level 54: [/input-12, 4108] 
split level 55: [/input-4, 8106] 
split level 56: [/input-12, 3950] 
split level 57: [/input-12, 5550] 
split level 58: [/input-12, 5890] 
split level 59: [/input-12, 1035] 
split level 60: [/input-4, 8126] 
split level 61: [/input-12, 2352] 
split level 62: [/input-12, 5780] 
split level 63: [/input-12, 6019] 
split level 64: [/input-12, 1547] 
split level 65: [/input-12, 5233] 
split level 66: [/input-12, 6221] 
split level 67: [/input-12, 2368] 
split level 68: [/input-4, 4524] 
split level 69: [/input-12, 193] 
split level 70: [/input-12, 8077] 
split level 71: [/input-4, 4980] 
split level 72: [/input-12, 3272] 
split level 73: [/input-12, 1441] 
split level 74: [/input-12, 2354] 
split level 75: [/input-16, 82] 
split level 76: [/input-12, 7147] 
split level 77: [/input-4, 4522] 
split level 78: [/input-12, 2261] 
split level 79: [/input-12, 1033] 
split level 80: [/input-12, 6212] 
split level 81: [/input-12, 109] 
split level 82: [/input-4, 4779] 
split level 83: [/input-4, 1201] 
split level 84: [/input-12, 6230] 
split level 85: [/input-12, 1988] 
split level 86: [/input-12, 6220] 
split level 87: [/input-12, 1816] 
split level 88: [/input-12, 3274] 
split level 89: [/input-12, 6228] 
split level 90: [/input-4, 2996] 
split level 91: [/input-4, 4714] 
split level 92: [/input-12, 5778] 
split level 93: [/input-12, 1436] 
split level 94: [/input-12, 7133] 
split level 95: [/input-12, 2021] 
split level 96: [/input-4, 6987] 
split level 97: [/input-4, 4963] 
split level 98: [/input-12, 5046] 
split level 99: [/input-4, 2743] 
split level 100: [/input-12, 5781] 
split level 101: [/input-12, 5043] 
split level 102: [/input-4, 918] 
split level 103: [/input-12, 6209] 
split level 104: [/input-4, 2745] 
split level 105: [/input-4, 4523] 
split level 106: [/input-12, 2529] 
split level 107: [/input-12, 3922] 
split level 108: [/input-12, 1077] 
split level 109: [/input-12, 1832] 
split level 110: [/input-4, 4521] 
split level 111: [/input-4, 2980] 
split level 112: [/input-4, 2601] 
split level 113: [/input-4, 4713] 
split level 114: [/input-12, 4124] 
split level 115: [/input-4, 6218] 
split level 116: [/input-12, 7596] 
split level 117: [/input-12, 4560] 
split level 118: [/input-4, 3243] 
split level 119: [/input-12, 5390] 
split level 120: [/input-4, 2198] 
split level 121: [/input-4, 5805] 
split level 122: [/input-12, 1222] 
split level 123: [/input-12, 3334] 
split level 124: [/input-4, 4542] 
split level 125: [/input-4, 5832] 
split level 126: [/input-4, 4541] 
split level 127: [/input-4, 1649] 
split level 128: [/input-4, 2756] 
split level 129: [/input-4, 1322] 
split level 130: [/input-4, 6023] 
split level 131: [/input-12, 8169] 
split level 132: [/input-12, 1197] 
split level 133: [/input-4, 5806] 
split level 134: [/input-12, 5215] 
split level 135: [/input-12, 2264] 
split level 136: [/input-12, 6876] 
split level 137: [/input-12, 8133] 
split level 138: [/input-12, 5811] 
split level 139: [/input-4, 5004] 
split level 140: [/input-4, 6315] 
split level 141: [/input-4, 4789] 
split level 142: [/input-12, 4189] 
split level 143: [/input-12, 6222] 
split level 144: [/input-4, 5539] 
split level 145: [/input-4, 8141] 
split level 146: [/input-12, 4126] 
split level 147: [/input-4, 5836] 
split level 148: [/input-4, 7867] 
split level 149: [/input-4, 5272] 
split level 150: [/input-4, 6027] 
split level 151: [/input-4, 8039] 
split level 152: [/input-4, 1689] 
split level 153: [/input-4, 3146] 
split level 154: [/input-4, 4766] 
split level 155: [/input-4, 6314] 
split level 156: [/input-12, 7507] 
split level 157: [/input-4, 6039] 
split level 158: [/input-4, 1636] 
split level 159: [/input-12, 84] 
split level 160: [/input-4, 3178] 
split level 161: [/input-4, 2749] 
split level 162: [/input-12, 5668] 
split level 163: [/input-4, 7721] 
split level 164: [/input-12, 8012] 
split level 165: [/input-12, 5038] 
split level 166: [/input-4, 4716] 
split level 167: [/input-4, 3417] 
split level 168: [/input-12, 4769] 
split level 169: [/input-12, 460] 
split level 170: [/input-4, 7722] 
split level 171: [/input-4, 1725] 
split level 172: [/input-12, 7902] 
split level 173: [/input-4, 6306] 
split level 174: [/input-12, 4134] 
split level 175: [/input-4, 4473] 
split level 176: [/input-4, 8056] 
split level 177: [/input-12, 2214] 
split level 178: [/input-12, 1078] 
split level 179: [/input-12, 4190] 
split level 180: [/input-12, 7218] 
split level 181: [/input-12, 4768] 
split level 182: [/input-4, 4509] 
split level 183: [/input-4, 8139] 
split level 184: [/input-4, 4937] 
split level 185: [/input-12, 888] 
split level 186: [/input-4, 8140] 
split level 187: [/input-4, 7767] 
split level 188: [/input-4, 5837] 
split level 189: [/input-4, 1126] 
split level 190: [/input-12, 5208] 
split level 191: [/input-12, 5427] 
split level 192: [/input-12, 7903] 
split level 193: [/input-4, 8038] 
split level 194: [/input-12, 3957] 
split level 195: [/input-4, 6234] 
split level 196: [/input-4, 3261] 
split level 197: [/input-4, 5029] 
split level 198: [/input-4, 2877] 
split level 199: [/input-4, 4727] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.965644896030426
10 lb beta sum: 0.0, worst -0.9656387567520142
Time: prepare 0.0113    bound 0.1397    transfer 0.0068    finalize 0.0165    func 0.1769    
Accumulated time: func 0.7479    prepare 0.0217    bound 0.7098    transfer 0.0069    finalize 0.0170    
all_split False
======================Cut inference begins======================
max lb tensor(-0.50562429) min lb tensor(-0.96563524)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.012104988098144531 
BICCOS Cumulative time: 0.012104988098144531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.94753 (1), -0.94734 (1), -0.94732 (1), -0.94718 (1), -0.94629 (1), -0.94502 (1), -0.94478 (1), -0.94421 (1), -0.94370 (1), -0.94172 (1), -0.94085 (1), -0.93904 (1), -0.93794 (1), -0.93735 (1), -0.93539 (1), -0.93504 (1), -0.93415 (1), -0.93372 (1), -0.93315 (1), -0.93252 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.8274    set_bounds 0.0085    solve 0.1770    add 0.0749    
Accumulated time: pickout 0.0004    decision 0.8274    set_bounds 0.0085    solve 0.1770    add 0.0749    
Current (lb-rhs): -0.9475319981575012
50 domains visited
Cumulative time: 1.739478349685669

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 77] [/input-16, 146] [/input-16, 146] [/input-16, 146] [/input-16, 146] [/input-16, 146] [/input-16, 146] [/input-16, 146] [/input-16, 146] [/input-16, 77] 
split level 1: [/input-16, 213] [/input-16, 77] [/input-16, 77] [/input-16, 239] [/input-16, 77] [/input-16, 77] [/input-16, 77] [/input-16, 239] [/input-16, 77] [/input-16, 239] 
split level 2: [/input-16, 239] [/input-16, 213] [/input-16, 239] [/input-16, 236] [/input-16, 239] [/input-16, 239] [/input-16, 239] [/input-16, 213] [/input-16, 239] [/input-16, 213] 
split level 3: [/input-16, 236] [/input-16, 236] [/input-16, 213] [/input-16, 213] [/input-16, 236] [/input-16, 213] [/input-16, 213] [/input-16, 236] [/input-16, 236] [/input-16, 236] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8701403737068176
10 lb beta sum: 0.0, worst -0.8695385456085205
Time: prepare 0.0124    bound 0.1281    transfer 0.0060    finalize 0.0169    func 0.1659    
Accumulated time: func 0.9138    prepare 0.0344    bound 0.8379    transfer 0.0129    finalize 0.0339    
all_split False
======================Cut inference begins======================
max lb tensor(-0.08390170) min lb tensor(-0.86923158)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.011674165725708008 
BICCOS Cumulative time: 0.02377915382385254
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.44407 (2), -0.43824 (2), -0.43485 (2), -0.43379 (2), -0.43212 (2), -0.42980 (2), -0.42611 (2), -0.42322 (2), -0.42011 (2), -0.41869 (2), -0.41746 (2), -0.41678 (2), -0.41412 (2), -0.40974 (2), -0.40730 (2), -0.40593 (2), -0.40338 (2), -0.39053 (2), -0.36430 (2), -0.36420 (2), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0289    set_bounds 0.0121    solve 0.1660    add 0.0797    
Accumulated time: pickout 0.0010    decision 0.8564    set_bounds 0.0207    solve 0.3430    add 0.1547    
Current (lb-rhs): -0.4440729022026062
100 domains visited
Cumulative time: 2.0387778282165527

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 77] [/input-16, 77] [/input-16, 213] [/input-16, 213] [/input-16, 239] [/input-16, 239] [/input-16, 146] [/input-16, 146] [/input-16, 146] [/input-16, 146] 
split level 1: [/input-16, 213] [/input-16, 213] [/input-16, 77] [/input-16, 77] [/input-16, 77] [/input-16, 77] [/input-16, 77] [/input-16, 77] [/input-16, 77] [/input-16, 77] 
split level 2: [/input-16, 239] [/input-16, 239] [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-16, 213] [/input-16, 213] 
split level 3: [/input-16, 178] [/input-16, 178] [/input-16, 178] [/input-16, 178] [/input-16, 178] [/input-16, 178] [/input-16, 178] [/input-16, 178] [/input-16, 178] [/input-16, 178] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.38121554255485535
10 lb beta sum: 0.0, worst -0.3813342750072479
Time: prepare 0.0113    bound 0.1278    transfer 0.0029    finalize 0.0086    func 0.1537    
Accumulated time: func 1.0675    prepare 0.0460    bound 0.9657    transfer 0.0158    finalize 0.0425    
all_split False
======================Cut inference begins======================
max lb tensor(0.26527807) min lb tensor(-0.37740219)
Number of Verified Splits: 112 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 5
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.020858049392700195 
BICCOS Cumulative time: 0.044637203216552734
Preprocessing time: 0.01127171516418457 Inference time: 0.008170604705810547 Add cuts time: 0.0009441375732421875 Cut analysis time: 0.0004715919494628906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14739 (3), -0.14721 (3), -0.14712 (3), -0.14659 (3), -0.14626 (3), -0.14551 (3), -0.14533 (3), -0.14362 (3), -0.14311 (3), -0.14131 (3), -0.14128 (3), -0.14078 (3), -0.13752 (3), -0.13601 (3), -0.13557 (3), -0.13387 (3), -0.13382 (3), -0.12989 (3), -0.12938 (3), -0.12819 (3), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0249    set_bounds 0.0148    solve 0.1537    add 0.0943    
Accumulated time: pickout 0.0016    decision 0.8812    set_bounds 0.0355    solve 0.4967    add 0.2490    
Current (lb-rhs): -0.14739230275154114
150 domains visited
Cumulative time: 2.3482468128204346

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 239] [/input-16, 239] [/input-16, 213] [/input-16, 146] [/input-16, 146] [/input-16, 146] [/input-16, 239] [/input-16, 146] [/input-16, 146] [/input-16, 146] 
split level 1: [/input-16, 213] [/input-16, 213] [/input-16, 239] [/input-16, 213] [/input-16, 239] [/input-16, 77] [/input-16, 213] [/input-16, 239] [/input-16, 239] [/input-16, 239] 
split level 2: [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-16, 213] [/input-16, 239] [/input-16, 236] [/input-16, 65] [/input-16, 65] [/input-16, 65] 
split level 3: [/input-16, 178] [/input-16, 178] [/input-16, 178] [/input-16, 178] [/input-16, 178] [/input-16, 178] [/input-16, 178] [/input-16, 178] [/input-16, 178] [/input-16, 178] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11222517490386963
10 lb beta sum: 0.09226953238248825, worst -0.2550160884857178
Time: prepare 0.0059    bound 1.2497    transfer 0.0030    finalize 0.0072    func 1.2692    
Accumulated time: func 2.3367    prepare 0.0522    bound 2.2155    transfer 0.0188    finalize 0.0496    
all_split False
======================Cut inference begins======================
max lb tensor(0.32713842) min lb tensor(-0.01144383)
Number of Verified Splits: 392 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 7
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.03752613067626953 
BICCOS Cumulative time: 0.08216333389282227
Preprocessing time: 0.011495351791381836 Inference time: 0.019786596298217773 Add cuts time: 0.0057756900787353516 Cut analysis time: 0.0004684925079345703
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0006    decision 0.0251    set_bounds 0.0152    solve 1.2693    add 0.0221    
Accumulated time: pickout 0.0021    decision 0.9063    set_bounds 0.0507    solve 1.7661    add 0.2711    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([146,  77, 239]), tensor([-1., -1., -1.]), tensor([0, 0, 0]), tensor([0.46040213, 0.27926007, 0.28929716]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([146,  77, 239, 213]), tensor([-1., -1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([0.46040213, 0.27926007, 0.08508174, 0.15235730]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([146,  77, 239, 213]), tensor([-1., -1.,  1.,  1.]), tensor([0, 0, 0, 0]), tensor([0.46040213, 0.27926007, 0.08508174, 0.30337575]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([146,  77, 213, 239]), tensor([-1.,  1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([0.46040213, 0.23176600, 0.14004077, 0.27140337]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([146,  77, 213, 239]), tensor([-1.,  1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([0.46040213, 0.23176600, 0.14004077, 0.16519687]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([146,  77, 213]), tensor([-1.,  1.,  1.]), tensor([0, 0, 0]), tensor([0.46040213, 0.23176600, 0.35378602]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([146,  77]), tensor([ 1., -1.]), tensor([0, 0]), tensor([2.40793245e-36, 3.37531388e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([146,  77]), tensor([1., 1.]), tensor([0, 0]), tensor([2.40793245e-36, 1.71751425e-01]), tensor([0, 1]))}
Shallow branching resets to n domains:  8
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7054358124732971
10 lb beta sum: 0.33595582842826843, worst -0.7047240734100342
Time: prepare 0.0004    bound 0.1506    transfer 0.0002    finalize 0.0003    func 0.1517    
Accumulated time: func 2.4884    prepare 0.0526    bound 2.3661    transfer 0.0190    finalize 0.0500    
After pruning, left:  2

Back to Regular BaB

BaB round 1
batch: 2
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 239] [/input-16, 239] 
split level 1: [/input-16, 236] [/input-16, 213] 
split level 2: [/input-16, 213] [/input-16, 236] 
cut re-enabled after branching node selection
0 lb beta sum: 0.26587820053100586, worst -0.3918842673301697
10 lb beta sum: 0.29453861713409424, worst -0.3909137547016144
Time: prepare 0.0009    bound 0.1494    transfer 0.0002    finalize 0.0005    func 0.1510    
Accumulated time: func 2.6394    prepare 0.0537    bound 2.5154    transfer 0.0192    finalize 0.0504    
all_split False
======================Cut inference begins======================
max lb tensor(0.36811939) min lb tensor(-0.39042056)
Number of Verified Splits: 10 of 16
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.3190537989139557, worst -0.930472195148468
10 lb beta sum: 0.6575298309326172, worst -0.365192711353302
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.15799570083618164 
BICCOS Cumulative time: 0.2401590347290039
Preprocessing time: 0.0007526874542236328 Inference time: 0.15659785270690918 Add cuts time: 0.0003097057342529297 Cut analysis time: 0.00033545494079589844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.39042 (3), -0.25196 (3), -0.21568 (3), -0.11289 (3), -0.03074 (3), -0.02794 (3), 
Length of domains: 6
Time: pickout 0.0003    decision 0.0127    set_bounds 0.0012    solve 0.1511    add 0.0010    
Accumulated time: pickout 0.0025    decision 0.9190    set_bounds 0.0518    solve 1.9171    add 0.2721    
Current (lb-rhs): -0.3904205560684204
156 domains visited
Cumulative time: 4.215560674667358

BaB round 2
batch: 6
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 65] [/input-16, 65] [/input-16, 178] [/input-16, 65] [/input-16, 65] [/input-16, 65] 
split level 1: [/input-16, 178] [/input-16, 178] [/input-16, 65] [/input-16, 178] [/input-16, 178] [/input-16, 178] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.31256094574928284
10 lb beta sum: 0.0, worst -0.3120647668838501
Time: prepare 0.0006    bound 0.1485    transfer 0.0002    finalize 0.0006    func 0.1501    
Accumulated time: func 2.7895    prepare 0.0544    bound 2.6639    transfer 0.0194    finalize 0.0510    
all_split False
======================Cut inference begins======================
max lb tensor(0.08809435) min lb tensor(-0.31174237)
Number of Verified Splits: 10 of 24
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.40836411714553833
10 lb beta sum: 0.4570405185222626, worst -0.3247191905975342
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.1504216194152832 
BICCOS Cumulative time: 0.3905806541442871
Preprocessing time: 0.0010251998901367188 Inference time: 0.1492786407470703 Add cuts time: 0.00010275840759277344 Cut analysis time: 1.5020370483398438e-05
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.31174 (5), -0.29434 (5), -0.26053 (5), -0.24490 (5), -0.17544 (5), -0.14699 (5), -0.13743 (5), -0.11843 (5), -0.08712 (5), -0.08197 (5), -0.06834 (5), -0.06224 (5), -0.03513 (5), -0.01280 (5), 
Length of domains: 14
Time: pickout 0.0004    decision 0.0155    set_bounds 0.0015    solve 0.1501    add 0.0011    
Accumulated time: pickout 0.0029    decision 0.9345    set_bounds 0.0533    solve 2.0672    add 0.2732    
Current (lb-rhs): -0.31174236536026
170 domains visited
Cumulative time: 4.534859895706177

BaB round 3
batch: 14
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-12, 877] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.30058300495147705
10 lb beta sum: 0.0, worst -0.3001592457294464
Time: prepare 0.0014    bound 0.1464    transfer 0.0003    finalize 0.0007    func 0.1490    
Accumulated time: func 2.9385    prepare 0.0560    bound 2.8103    transfer 0.0197    finalize 0.0517    
all_split False
======================Cut inference begins======================
max lb tensor(0.21779692) min lb tensor(-0.29989469)
Number of Verified Splits: 14 of 28
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5022570490837097
10 lb beta sum: 0.5639042854309082, worst -0.16372951865196228
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 8
#cuts 4-6: 1
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.16115975379943848 
BICCOS Cumulative time: 0.5517404079437256
Preprocessing time: 0.0011403560638427734 Inference time: 0.1591174602508545 Add cuts time: 0.00042939186096191406 Cut analysis time: 0.0004725456237792969
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.29989 (6), -0.28296 (6), -0.24841 (6), -0.23311 (6), -0.16194 (6), -0.13452 (6), -0.12355 (6), -0.10483 (6), -0.07273 (6), -0.06811 (6), -0.05492 (6), -0.04760 (6), -0.02440 (6), -0.00320 (6), 
Length of domains: 14
Time: pickout 0.0004    decision 0.0156    set_bounds 0.0015    solve 0.1490    add 0.0012    
Accumulated time: pickout 0.0033    decision 0.9502    set_bounds 0.0548    solve 2.2163    add 0.2744    
Current (lb-rhs): -0.29989469051361084
184 domains visited
Cumulative time: 4.8639161586761475

BaB round 4
batch: 14
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 877] [/input-12, 877] [/input-12, 877] [/input-12, 877] [/input-12, 877] [/input-16, 218] [/input-12, 877] [/input-12, 877] [/input-12, 877] [/input-12, 877] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2892862558364868
10 lb beta sum: 0.0, worst -0.2890014946460724
Time: prepare 0.0008    bound 1.3680    transfer 0.0004    finalize 0.0008    func 1.3702    
Accumulated time: func 4.3087    prepare 0.0570    bound 4.1783    transfer 0.0201    finalize 0.0525    
all_split False
======================Cut inference begins======================
max lb tensor(0.03875041) min lb tensor(-0.28881937)
Number of Verified Splits: 4 of 28
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.260453462600708

all verified at 8th iter
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 8
#cuts 4-6: 1
#cuts 7-9: 5
#cuts >= 20: 0
BICCOS time: 0.08147096633911133 
BICCOS Cumulative time: 0.6332113742828369
Preprocessing time: 0.0012693405151367188 Inference time: 0.07898259162902832 Add cuts time: 0.0005981922149658203 Cut analysis time: 0.0006208419799804688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.28882 (7), -0.27266 (7), -0.26597 (7), -0.24687 (7), -0.23659 (7), -0.22052 (7), -0.21837 (7), -0.20034 (7), -0.14877 (7), -0.12210 (7), -0.11454 (7), -0.10604 (7), -0.09618 (7), -0.08935 (7), -0.07435 (7), -0.06851 (7), -0.05875 (7), -0.05796 (7), -0.04589 (7), -0.03732 (7), 
Length of domains: 24
Time: pickout 0.0004    decision 0.0134    set_bounds 0.0011    solve 1.3703    add 0.0014    
Accumulated time: pickout 0.0037    decision 0.9636    set_bounds 0.0559    solve 3.5865    add 0.2758    
Current (lb-rhs): -0.2888193726539612
208 domains visited
Cumulative time: 6.332232236862183

BaB round 5
batch: 24
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3113] [/input-16, 208] [/input-12, 3113] [/input-16, 208] [/input-12, 3113] [/input-12, 3113] [/input-16, 208] [/input-12, 3113] [/input-12, 3113] [/input-16, 208] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.27463680505752563
10 lb beta sum: 0.0, worst -0.2744094133377075
Time: prepare 0.0013    bound 0.1649    transfer 0.0004    finalize 0.0010    func 0.1679    
Accumulated time: func 4.4767    prepare 0.0585    bound 4.3432    transfer 0.0205    finalize 0.0536    
all_split False
======================Cut inference begins======================
max lb tensor(0.02198064) min lb tensor(-0.27425745)
Number of Verified Splits: 5 of 48
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3363175392150879
10 lb beta sum: 0.7753896117210388, worst -0.19985684752464294
Total number of valid cuts: 14.
#cuts 1-3: 8
#cuts 4-6: 1
#cuts 7-9: 5
#cuts >= 20: 0
BICCOS time: 0.16957426071166992 
BICCOS Cumulative time: 0.8027856349945068
Preprocessing time: 0.0017478466033935547 Inference time: 0.16750884056091309 Add cuts time: 0.00030040740966796875 Cut analysis time: 1.71661376953125e-05
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.27426 (8), -0.25855 (8), -0.25071 (8), -0.23800 (8), -0.23219 (8), -0.22203 (8), -0.21604 (8), -0.21485 (8), -0.20639 (8), -0.20361 (8), -0.18960 (8), -0.18460 (8), -0.17975 (8), -0.16209 (8), -0.15212 (8), -0.13444 (8), -0.13011 (8), -0.12185 (8), -0.10800 (8), -0.09650 (8), 
Length of domains: 43
Time: pickout 0.0005    decision 0.0164    set_bounds 0.0024    solve 0.1682    add 0.0016    
Accumulated time: pickout 0.0042    decision 0.9800    set_bounds 0.0583    solve 3.7548    add 0.2774    
Current (lb-rhs): -0.27425745129585266
251 domains visited
Cumulative time: 6.691146612167358

BaB round 6
batch: 43
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 60] [/input-16, 208] [/input-12, 3113] [/input-12, 7010] [/input-16, 208] [/input-16, 60] [/input-16, 208] [/input-12, 3113] [/input-16, 208] [/input-16, 208] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2573701739311218
10 lb beta sum: 0.0, worst -0.2572406232357025
Time: prepare 0.0040    bound 0.1632    transfer 0.0007    finalize 0.0018    func 0.1703    
Accumulated time: func 4.6469    prepare 0.0627    bound 4.5064    transfer 0.0212    finalize 0.0554    
all_split False
======================Cut inference begins======================
max lb tensor(0.12496758) min lb tensor(-0.25722021)
Number of Verified Splits: 26 of 86
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 8
#cuts 4-6: 9
#cuts 7-9: 4
#cuts >= 20: 0
BICCOS time: 0.007003307342529297 
BICCOS Cumulative time: 0.8097889423370361
Preprocessing time: 0.002775430679321289 Inference time: 0.0023527145385742188 Add cuts time: 0.0009951591491699219 Cut analysis time: 0.0008800029754638672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25722 (9), -0.25419 (9), -0.24152 (9), -0.23897 (9), -0.23334 (9), -0.23037 (9), -0.22157 (9), -0.21658 (9), -0.21509 (9), -0.21245 (9), -0.20133 (9), -0.20026 (9), -0.19967 (9), -0.19922 (9), -0.19797 (9), -0.19499 (9), -0.19305 (9), -0.18283 (9), -0.18165 (9), -0.17751 (9), 
Length of domains: 60
Time: pickout 0.0005    decision 0.0168    set_bounds 0.0039    solve 0.1704    add 0.0019    
Accumulated time: pickout 0.0046    decision 0.9968    set_bounds 0.0622    solve 3.9252    add 0.2793    
Current (lb-rhs): -0.25722020864486694
311 domains visited
Cumulative time: 6.891920804977417

BaB round 7
batch: 60
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3113] [/input-12, 525] [/input-16, 208] [/input-12, 3113] [/input-16, 60] [/input-16, 60] [/input-12, 3113] [/input-16, 60] [/input-12, 525] [/input-16, 60] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.250621497631073
10 lb beta sum: 0.09251987934112549, worst -0.25057554244995117
Time: prepare 0.0026    bound 0.1674    transfer 0.0009    finalize 0.0025    func 0.1743    
Accumulated time: func 4.8212    prepare 0.0655    bound 4.6738    transfer 0.0221    finalize 0.0578    
all_split False
======================Cut inference begins======================
max lb tensor(0.14540222) min lb tensor(-0.25056469)
Number of Verified Splits: 50 of 120
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 10
#cuts 4-6: 6
#cuts 7-9: 4
#cuts >= 20: 0
BICCOS time: 0.010474920272827148 
BICCOS Cumulative time: 0.8202638626098633
Preprocessing time: 0.0037233829498291016 Inference time: 0.004582643508911133 Add cuts time: 0.0014085769653320312 Cut analysis time: 0.0007603168487548828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25056 (10), -0.24749 (10), -0.22659 (10), -0.22500 (10), -0.22355 (10), -0.22238 (10), -0.21490 (10), -0.21466 (10), -0.21233 (10), -0.20979 (10), -0.19842 (10), -0.19579 (10), -0.19461 (10), -0.19355 (10), -0.19100 (10), -0.18856 (10), -0.18600 (10), -0.18593 (10), -0.18249 (10), -0.17875 (10), 
Length of domains: 70
Time: pickout 0.0005    decision 0.0178    set_bounds 0.0052    solve 0.1744    add 0.0020    
Accumulated time: pickout 0.0052    decision 1.0146    set_bounds 0.0674    solve 4.0995    add 0.2813    
Current (lb-rhs): -0.25056469440460205
381 domains visited
Cumulative time: 7.1027512550354

BaB round 8
batch: 70
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 525] [/input-16, 60] [/input-12, 6197] [/input-12, 525] [/input-12, 5789] [/input-12, 525] [/input-16, 60] [/input-16, 208] [/input-12, 6197] [/input-12, 525] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.24083071947097778
10 lb beta sum: 0.04524388536810875, worst -0.24080687761306763
Time: prepare 0.0029    bound 0.1631    transfer 0.0010    finalize 0.0027    func 0.1708    
Accumulated time: func 4.9920    prepare 0.0686    bound 4.8370    transfer 0.0231    finalize 0.0606    
all_split False
======================Cut inference begins======================
max lb tensor(0.09290308) min lb tensor(-0.24080351)
Number of Verified Splits: 29 of 140
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 11
#cuts 4-6: 5
#cuts 7-9: 4
#cuts >= 20: 0
BICCOS time: 0.008983612060546875 
BICCOS Cumulative time: 0.8292474746704102
Preprocessing time: 0.004256725311279297 Inference time: 0.002855062484741211 Add cuts time: 0.0011463165283203125 Cut analysis time: 0.0007255077362060547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.24080 (11), -0.23773 (11), -0.22750 (11), -0.22496 (11), -0.22442 (11), -0.22236 (11), -0.21679 (11), -0.21488 (11), -0.21375 (11), -0.21227 (11), -0.20483 (11), -0.20348 (11), -0.20044 (11), -0.19991 (11), -0.19829 (11), -0.19568 (11), -0.19318 (11), -0.18848 (11), -0.18833 (11), -0.18573 (11), 
Length of domains: 111
Time: pickout 0.0006    decision 0.0182    set_bounds 0.0061    solve 0.1708    add 0.0025    
Accumulated time: pickout 0.0058    decision 1.0328    set_bounds 0.0735    solve 4.2703    add 0.2838    
Current (lb-rhs): -0.24080350995063782
492 domains visited
Cumulative time: 7.3102850914001465

BaB round 9
batch: 111
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7342] [/input-12, 7342] [/input-12, 525] [/input-12, 5789] [/input-12, 5547] [/input-12, 5789] [/input-12, 6197] [/input-12, 7342] [/input-12, 525] [/input-12, 6197] 
cut re-enabled after branching node selection
0 lb beta sum: 0.02846355363726616, worst -0.3293653428554535
10 lb beta sum: 0.029838673770427704, worst -0.23238348960876465
Time: prepare 0.0096    bound 0.1659    transfer 0.0016    finalize 0.0042    func 0.3063    
Accumulated time: func 5.2983    prepare 0.0784    bound 5.0029    transfer 0.0247    finalize 0.0648    
all_split False
======================Cut inference begins======================
max lb tensor(0.21172667) min lb tensor(-0.23238027)
Number of Verified Splits: 32 of 222
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 11
#cuts 4-6: 6
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.012302875518798828 
BICCOS Cumulative time: 0.841550350189209
Preprocessing time: 0.006977558135986328 Inference time: 0.0033180713653564453 Add cuts time: 0.0009415149688720703 Cut analysis time: 0.0010657310485839844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23238 (12), -0.22931 (12), -0.22249 (12), -0.21942 (12), -0.21873 (12), -0.21788 (12), -0.21566 (12), -0.21527 (12), -0.20929 (12), -0.20829 (12), -0.20770 (12), -0.20622 (12), -0.20525 (12), -0.20511 (12), -0.20117 (12), -0.20110 (12), -0.19855 (12), -0.19834 (12), -0.19622 (12), -0.19550 (12), 
Length of domains: 190
Time: pickout 0.0007    decision 0.0202    set_bounds 0.0093    solve 0.3063    add 0.0037    
Accumulated time: pickout 0.0065    decision 1.0530    set_bounds 0.0828    solve 4.5767    add 0.2876    
Current (lb-rhs): -0.23238027095794678
682 domains visited
Cumulative time: 7.663463592529297

BaB round 10
batch: 190
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6197] [/input-12, 6197] [/input-12, 5789] [/input-12, 6197] [/input-12, 525] [/input-12, 6197] [/input-12, 7342] [/input-12, 5789] [/input-12, 5789] [/input-12, 5789] 
cut re-enabled after branching node selection
0 lb beta sum: 0.011633181013166904, worst -0.26569730043411255
10 lb beta sum: 0.14546021819114685, worst -0.22871485352516174
Time: prepare 0.0163    bound 0.1693    transfer 0.0028    finalize 0.0063    func 0.1977    
Accumulated time: func 5.4960    prepare 0.0950    bound 5.1722    transfer 0.0275    finalize 0.0711    
all_split False
======================Cut inference begins======================
max lb tensor(0.36975437) min lb tensor(-0.22870374)
Number of Verified Splits: 185 of 380
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 17
#cuts 4-6: 2
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.03554511070251465 
BICCOS Cumulative time: 0.8770954608917236
Preprocessing time: 0.01090693473815918 Inference time: 0.020590782165527344 Add cuts time: 0.0034754276275634766 Cut analysis time: 0.0005719661712646484
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22870 (13), -0.22563 (13), -0.21868 (13), -0.21560 (13), -0.21503 (13), -0.21399 (13), -0.21195 (13), -0.21137 (13), -0.20533 (13), -0.20380 (13), -0.20264 (13), -0.20226 (13), -0.20118 (13), -0.19960 (13), -0.19676 (13), -0.19577 (13), -0.19416 (13), -0.19277 (13), -0.19270 (13), -0.18974 (13), 
Length of domains: 195
Time: pickout 0.0010    decision 0.0283    set_bounds 0.0158    solve 0.1978    add 0.0042    
Accumulated time: pickout 0.0075    decision 1.0813    set_bounds 0.0986    solve 4.7745    add 0.2917    
Current (lb-rhs): -0.22870373725891113
877 domains visited
Cumulative time: 7.947249412536621

BaB round 11
batch: 195
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5789] [/input-12, 5789] [/input-12, 7342] [/input-12, 6197] [/input-12, 7342] [/input-12, 5789] [/input-12, 7342] [/input-12, 7342] [/input-12, 525] [/input-12, 2404] 
cut re-enabled after branching node selection
0 lb beta sum: 0.007128980942070484, worst -0.22199299931526184
10 lb beta sum: 0.6309928297996521, worst -0.2219747006893158
Time: prepare 0.0166    bound 0.1689    transfer 0.0028    finalize 0.0087    func 0.1995    
Accumulated time: func 5.6955    prepare 0.1118    bound 5.3411    transfer 0.0303    finalize 0.0797    
all_split False
======================Cut inference begins======================
max lb tensor(0.83997184) min lb tensor(-0.22196808)
Number of Verified Splits: 342 of 390
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 18
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.05430006980895996 
BICCOS Cumulative time: 0.9313955307006836
Preprocessing time: 0.011094808578491211 Inference time: 0.038728952407836914 Add cuts time: 0.0038983821868896484 Cut analysis time: 0.0005779266357421875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22197 (14), -0.21889 (14), -0.21187 (14), -0.20880 (14), -0.20828 (14), -0.20520 (14), -0.19844 (14), -0.19537 (14), -0.16767 (14), -0.16637 (14), -0.16016 (14), -0.15900 (14), -0.15750 (14), -0.15638 (14), -0.15000 (14), -0.14891 (14), -0.10914 (14), -0.10602 (14), -0.10124 (14), -0.09969 (14), 
Length of domains: 48
Time: pickout 0.0010    decision 0.0277    set_bounds 0.0160    solve 0.1996    add 0.0017    
Accumulated time: pickout 0.0084    decision 1.1090    set_bounds 0.1147    solve 4.9741    add 0.2934    
Current (lb-rhs): -0.22196808457374573
925 domains visited
Cumulative time: 8.249152660369873

BaB round 12
batch: 48
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5225] [/input-12, 5225] [/input-12, 5225] [/input-12, 5225] [/input-12, 5547] [/input-12, 5547] [/input-12, 5547] [/input-12, 5547] [/input-12, 1188] [/input-12, 1188] 
cut re-enabled after branching node selection
0 lb beta sum: 0.3882492184638977, worst -0.2165556252002716
10 lb beta sum: 0.4056936204433441, worst -0.2165381908416748
Time: prepare 0.0045    bound 0.1656    transfer 0.0008    finalize 0.0043    func 0.1759    
Accumulated time: func 5.8714    prepare 0.1164    bound 5.5067    transfer 0.0311    finalize 0.0840    
all_split False
======================Cut inference begins======================
max lb tensor(0.00537121) min lb tensor(-0.21653572)
Number of Verified Splits: 4 of 96
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 18
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.004805803298950195 
BICCOS Cumulative time: 0.9362013339996338
Preprocessing time: 0.0031251907348632812 Inference time: 0.0006129741668701172 Add cuts time: 0.0005140304565429688 Cut analysis time: 0.0005536079406738281
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21654 (15), -0.21365 (15), -0.20929 (15), -0.20637 (15), -0.20347 (15), -0.20282 (15), -0.20219 (15), -0.19993 (15), -0.19913 (15), -0.19558 (15), -0.19292 (15), -0.19211 (15), -0.19003 (15), -0.18850 (15), -0.18569 (15), -0.17862 (15), -0.16347 (15), -0.16236 (15), -0.15622 (15), -0.15514 (15), 
Length of domains: 92
Time: pickout 0.0006    decision 0.0170    set_bounds 0.0042    solve 0.1759    add 0.0054    
Accumulated time: pickout 0.0091    decision 1.1260    set_bounds 0.1189    solve 5.1501    add 0.2988    
Current (lb-rhs): -0.21653571724891663
1017 domains visited
Cumulative time: 8.457350730895996

BaB round 13
batch: 92
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5780] [/input-12, 5780] [/input-12, 5780] [/input-12, 5780] [/input-12, 418] [/input-12, 2354] [/input-12, 418] [/input-12, 2354] [/input-12, 5789] [/input-12, 5789] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4072166979312897, worst -0.21180900931358337
10 lb beta sum: 0.4072166979312897, worst -0.2117982804775238
Time: prepare 0.0083    bound 0.1678    transfer 0.0014    finalize 0.0049    func 0.1836    
Accumulated time: func 6.0550    prepare 0.1249    bound 5.6745    transfer 0.0324    finalize 0.0889    
all_split False
======================Cut inference begins======================
max lb tensor(0.01947220) min lb tensor(-0.21179053)
Number of Verified Splits: 11 of 184
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 19
#cuts 4-6: 2
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.008322000503540039 
BICCOS Cumulative time: 0.9445233345031738
Preprocessing time: 0.005544185638427734 Inference time: 0.0013530254364013672 Add cuts time: 0.0006556510925292969 Cut analysis time: 0.0007691383361816406
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21179 (16), -0.20890 (16), -0.20451 (16), -0.20164 (16), -0.19875 (16), -0.19857 (16), -0.19693 (16), -0.19638 (16), -0.19568 (16), -0.19437 (16), -0.19349 (16), -0.19145 (16), -0.19131 (16), -0.18910 (16), -0.18855 (16), -0.18754 (16), -0.18741 (16), -0.18676 (16), -0.18464 (16), -0.18452 (16), 
Length of domains: 173
Time: pickout 0.0042    decision 0.0198    set_bounds 0.0078    solve 0.1837    add 0.0055    
Accumulated time: pickout 0.0133    decision 1.1458    set_bounds 0.1267    solve 5.3337    add 0.3043    
Current (lb-rhs): -0.211790531873703
1190 domains visited
Cumulative time: 8.687033653259277

BaB round 14
batch: 173
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 886] [/input-12, 886] [/input-12, 1804] [/input-12, 1804] [/input-12, 5780] [/input-12, 5780] [/input-12, 5780] [/input-12, 5780] [/input-12, 7708] [/input-12, 7708] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20747503638267517
10 lb beta sum: 0.3428190052509308, worst -0.20744791626930237
Time: prepare 0.0074    bound 0.1707    transfer 0.0025    finalize 0.0068    func 0.1896    
Accumulated time: func 6.2445    prepare 0.1325    bound 5.8452    transfer 0.0349    finalize 0.0957    
all_split False
======================Cut inference begins======================
max lb tensor(0.31994742) min lb tensor(-0.20744216)
Number of Verified Splits: 43 of 346
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 20
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.017639875411987305 
BICCOS Cumulative time: 0.9621632099151611
Preprocessing time: 0.010141372680664062 Inference time: 0.0054476261138916016 Add cuts time: 0.0014531612396240234 Cut analysis time: 0.0005977153778076172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20744 (17), -0.20456 (17), -0.20015 (17), -0.19724 (17), -0.19435 (17), -0.19389 (17), -0.19239 (17), -0.19204 (17), -0.19101 (17), -0.18996 (17), -0.18916 (17), -0.18700 (17), -0.18660 (17), -0.18475 (17), -0.18411 (17), -0.18307 (17), -0.18274 (17), -0.18215 (17), -0.18066 (17), -0.18016 (17), 
Length of domains: 303
Time: pickout 0.0030    decision 0.0247    set_bounds 0.0132    solve 0.1897    add 0.0051    
Accumulated time: pickout 0.0163    decision 1.1705    set_bounds 0.1399    solve 5.5234    add 0.3094    
Current (lb-rhs): -0.20744216442108154
1493 domains visited
Cumulative time: 8.940833806991577

BaB round 15
batch: 256
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-4, 8106] [/input-4, 8106] [/input-12, 886] [/input-12, 886] [/input-12, 2354] [/input-12, 418] [/input-12, 2354] [/input-12, 418] [/input-4, 8093] [/input-4, 8093] 
cut re-enabled after branching node selection
0 lb beta sum: 0.3709086775779724, worst -0.21390125155448914
10 lb beta sum: 0.6422634124755859, worst -0.20191913843154907
Time: prepare 0.0238    bound 0.1738    transfer 0.0037    finalize 0.0160    func 0.2206    
Accumulated time: func 6.4651    prepare 0.1565    bound 6.0190    transfer 0.0386    finalize 0.1116    
all_split False
======================Cut inference begins======================
max lb tensor(0.31074983) min lb tensor(-0.20191702)
Number of Verified Splits: 86 of 512
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 20
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.028746843338012695 
BICCOS Cumulative time: 0.9909100532531738
Preprocessing time: 0.014607429504394531 Inference time: 0.010973453521728516 Add cuts time: 0.0025484561920166016 Cut analysis time: 0.0006175041198730469
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20192 (18), -0.19903 (18), -0.19461 (18), -0.19389 (17), -0.19204 (17), -0.19152 (18), -0.19101 (17), -0.18916 (17), -0.18864 (18), -0.18678 (18), -0.18423 (18), -0.18274 (17), -0.18149 (18), -0.18095 (18), -0.17985 (17), -0.17944 (18), -0.17923 (18), -0.17860 (18), -0.17755 (17), -0.17734 (18), 
Length of domains: 473
Time: pickout 0.0010    decision 0.0318    set_bounds 0.0189    solve 0.2207    add 0.0085    
Accumulated time: pickout 0.0173    decision 1.2023    set_bounds 0.1588    solve 5.7441    add 0.3178    
Current (lb-rhs): -0.20191702246665955
1919 domains visited
current_vram/total_varm: 2.3GB/99.9GB, batch_size increase to 512
Cumulative time: 9.25175952911377

BaB round 16
batch: 473
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-4, 8093] [/input-4, 8093] [/input-4, 8106] [/input-4, 8106] [/input-12, 886] [/input-4, 8106] [/input-12, 418] [/input-12, 418] [/input-12, 418] [/input-12, 418] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6755802035331726, worst -0.19757211208343506
10 lb beta sum: 1.0912294387817383, worst -0.1953810155391693
Time: prepare 0.0439    bound 0.2194    transfer 0.0115    finalize 0.0343    func 0.3159    
Accumulated time: func 6.7810    prepare 0.2006    bound 6.2384    transfer 0.0500    finalize 0.1459    
all_split False
======================Cut inference begins======================
max lb tensor(0.30397737) min lb tensor(-0.19537517)
Number of Verified Splits: 325 of 946
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 20
#cuts 4-6: 3
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.07945060729980469 
BICCOS Cumulative time: 1.0703606605529785
Preprocessing time: 0.028400421142578125 Inference time: 0.04422640800476074 Add cuts time: 0.006119489669799805 Cut analysis time: 0.0007042884826660156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19538 (19), -0.19249 (19), -0.19148 (19), -0.18859 (19), -0.18826 (18), -0.18806 (19), -0.18654 (18), -0.18537 (18), -0.18417 (19), -0.18410 (19), -0.18365 (18), -0.18259 (19), -0.18121 (19), -0.18023 (19), -0.17970 (19), -0.17690 (18), -0.17678 (19), -0.17633 (19), -0.17603 (19), -0.17527 (19), 
Length of domains: 621
Time: pickout 0.0017    decision 0.0474    set_bounds 0.0380    solve 0.3161    add 0.0137    
Accumulated time: pickout 0.0190    decision 1.2497    set_bounds 0.1968    solve 6.0602    add 0.3315    
Current (lb-rhs): -0.19537517428398132
2540 domains visited
Cumulative time: 9.751312971115112

BaB round 17
batch: 512
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5780] [/input-12, 1804] [/input-12, 1804] [/input-4, 8106] [/input-12, 1804] [/input-12, 5778] [/input-12, 4108] [/input-12, 4108] [/input-12, 4108] [/input-12, 1804] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1921505331993103
10 lb beta sum: 0.6273981332778931, worst -0.1899646520614624
Time: prepare 0.0232    bound 0.2243    transfer 0.0117    finalize 0.0379    func 0.3038    
Accumulated time: func 7.0848    prepare 0.2240    bound 6.4627    transfer 0.0617    finalize 0.1838    
all_split False
======================Cut inference begins======================
max lb tensor(0.31930828) min lb tensor(-0.18996292)
Number of Verified Splits: 214 of 1024
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 31.
#cuts 1-3: 24
#cuts 4-6: 5
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.0703132152557373 
BICCOS Cumulative time: 1.1406738758087158
Preprocessing time: 0.0304718017578125 Inference time: 0.033809661865234375 Add cuts time: 0.005152225494384766 Cut analysis time: 0.0008795261383056641
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18996 (20), -0.18708 (20), -0.18603 (20), -0.18495 (20), -0.18314 (20), -0.18264 (20), -0.18215 (19), -0.18207 (20), -0.18103 (20), -0.18093 (19), -0.17926 (19), -0.17877 (20), -0.17871 (20), -0.17815 (20), -0.17805 (19), -0.17763 (20), -0.17726 (20), -0.17670 (19), -0.17650 (19), -0.17588 (20), 
Length of domains: 919
Time: pickout 0.0161    decision 0.0497    set_bounds 0.0440    solve 0.3040    add 0.0167    
Accumulated time: pickout 0.0350    decision 1.2995    set_bounds 0.2408    solve 6.3643    add 0.3482    
Current (lb-rhs): -0.18996292352676392
3350 domains visited
current_vram/total_varm: 4.5GB/99.9GB, batch_size increase to 1024
Cumulative time: 10.255596160888672

BaB round 18
batch: 919
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4108] [/input-12, 1804] [/input-12, 4108] [/input-12, 5778] [/input-12, 4108] [/input-12, 1804] [/input-12, 5778] [/input-4, 8093] [/input-4, 8093] [/input-4, 8093] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18771639466285706
10 lb beta sum: 0.6025890707969666, worst -0.18552598357200623
Time: prepare 0.0429    bound 0.3452    transfer 0.0306    finalize 0.0663    func 0.4978    
Accumulated time: func 7.5825    prepare 0.2671    bound 6.8079    transfer 0.0923    finalize 0.2500    
all_split False
======================Cut inference begins======================
max lb tensor(0.32131386) min lb tensor(-0.18552327)
Number of Verified Splits: 547 of 1838
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 19
#cuts 4-6: 17
#cuts >= 20: 0
BICCOS time: 0.27974510192871094 
BICCOS Cumulative time: 1.4204189777374268
Preprocessing time: 0.05613589286804199 Inference time: 0.20849323272705078 Add cuts time: 0.013837337493896484 Cut analysis time: 0.0012786388397216797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18552 (21), -0.18264 (21), -0.18157 (21), -0.18072 (21), -0.17868 (21), -0.17819 (21), -0.17783 (21), -0.17676 (21), -0.17672 (20), -0.17553 (20), -0.17485 (21), -0.17433 (21), -0.17424 (21), -0.17388 (21), -0.17384 (20), -0.17339 (21), -0.17282 (21), -0.17264 (20), -0.17197 (21), -0.17173 (20), 
Length of domains: 1291
Time: pickout 0.0284    decision 0.0769    set_bounds 0.0768    solve 0.4981    add 0.1251    
Accumulated time: pickout 0.0634    decision 1.3763    set_bounds 0.3175    solve 6.8623    add 0.4733    
Current (lb-rhs): -0.18552327156066895
4641 domains visited
Cumulative time: 11.347987651824951

BaB round 19
batch: 1024
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5778] [/input-12, 1804] [/input-12, 5778] [/input-12, 1188] [/input-12, 985] [/input-12, 1188] [/input-12, 1188] [/input-12, 985] [/input-12, 985] [/input-12, 985] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18531447649002075
10 lb beta sum: 0.6205504536628723, worst -0.1831078827381134
Time: prepare 0.0484    bound 0.3741    transfer 0.0317    finalize 0.0745    func 0.5423    
Accumulated time: func 8.1248    prepare 0.3158    bound 7.1821    transfer 0.1240    finalize 0.3245    
all_split False
======================Cut inference begins======================
max lb tensor(0.31215239) min lb tensor(-0.18310556)
Number of Verified Splits: 441 of 2048
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 20
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.1426529884338379 
BICCOS Cumulative time: 1.5630719661712646
Preprocessing time: 0.0634760856628418 Inference time: 0.06788206100463867 Add cuts time: 0.010201215744018555 Cut analysis time: 0.0010936260223388672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18311 (22), -0.18022 (22), -0.17911 (22), -0.17845 (22), -0.17559 (22), -0.17556 (22), -0.17447 (22), -0.17259 (22), -0.17228 (21), -0.17191 (22), -0.17167 (22), -0.17109 (21), -0.17093 (22), -0.17041 (22), -0.16971 (22), -0.16940 (21), -0.16902 (22), -0.16861 (22), -0.16821 (21), -0.16791 (21), 
Length of domains: 1874
Time: pickout 0.0046    decision 0.0856    set_bounds 0.0859    solve 0.5427    add 0.0379    
Accumulated time: pickout 0.0680    decision 1.4619    set_bounds 0.4035    solve 7.4050    add 0.5113    
Current (lb-rhs): -0.18310555815696716
6248 domains visited
current_vram/total_varm: 8.3GB/99.9GB, batch_size increase to 2048
Cumulative time: 12.255805730819702

BaB round 20
batch: 1874
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-4, 5788] [/input-12, 5550] [/input-12, 5550] [/input-12, 5550] [/input-12, 5550] [/input-12, 5550] [/input-4, 5788] [/input-12, 5550] [/input-12, 5550] [/input-12, 5550] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5973690152168274, worst -0.17921441793441772
10 lb beta sum: 0.6942343711853027, worst -0.17920583486557007
Time: prepare 0.1682    bound 0.6215    transfer 0.0589    finalize 0.1352    func 1.0088    
Accumulated time: func 9.1336    prepare 0.4842    bound 7.8036    transfer 0.1829    finalize 0.4597    
all_split False
======================Cut inference begins======================
max lb tensor(0.31990939) min lb tensor(-0.17920518)
Number of Verified Splits: 469 of 3748
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 35.
#cuts 1-3: 21
#cuts 4-6: 14
#cuts >= 20: 0
BICCOS time: 0.20413947105407715 
BICCOS Cumulative time: 1.7672114372253418
Preprocessing time: 0.11673521995544434 Inference time: 0.07663440704345703 Add cuts time: 0.009762763977050781 Cut analysis time: 0.001007080078125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17921 (23), -0.17632 (23), -0.17514 (23), -0.17467 (23), -0.17179 (23), -0.17152 (23), -0.17061 (23), -0.16987 (23), -0.16987 (22), -0.16868 (22), -0.16801 (23), -0.16768 (23), -0.16704 (23), -0.16698 (23), -0.16698 (22), -0.16652 (23), -0.16585 (23), -0.16579 (22), -0.16568 (23), -0.16566 (22), 
Length of domains: 3279
Time: pickout 0.0615    decision 0.1463    set_bounds 0.1573    solve 1.0094    add 0.2711    
Accumulated time: pickout 0.1295    decision 1.6082    set_bounds 0.5607    solve 8.4144    add 0.7824    
Current (lb-rhs): -0.17920517921447754
9527 domains visited
Cumulative time: 14.115228176116943

BaB round 21
batch: 2048
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1188] [/input-12, 1188] [/input-12, 985] [/input-12, 985] [/input-12, 985] [/input-12, 1188] [/input-12, 985] [/input-12, 985] [/input-12, 1188] [/input-12, 1188] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17715194821357727
10 lb beta sum: 0.7345975637435913, worst -0.17002150416374207
Time: prepare 0.1007    bound 0.6679    transfer 0.0644    finalize 0.1472    func 1.0070    
Accumulated time: func 10.1406    prepare 0.5852    bound 8.4715    transfer 0.2474    finalize 0.6069    
all_split False
======================Cut inference begins======================
max lb tensor(0.46623170) min lb tensor(-0.17000985)
Number of Verified Splits: 826 of 4096
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 31.
#cuts 1-3: 29
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.28908205032348633 
BICCOS Cumulative time: 2.056293487548828
Preprocessing time: 0.12841320037841797 Inference time: 0.14109563827514648 Add cuts time: 0.01872396469116211 Cut analysis time: 0.0008492469787597656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17001 (24), -0.16712 (24), -0.16580 (24), -0.16559 (24), -0.16291 (24), -0.16270 (24), -0.16139 (24), -0.16088 (24), -0.16071 (23), -0.15965 (23), -0.15934 (22), -0.15893 (23), -0.15886 (24), -0.15850 (24), -0.15848 (24), -0.15817 (22), -0.15802 (23), -0.15800 (24), -0.15783 (23), -0.15735 (24), 
Length of domains: 4501
Time: pickout 0.0077    decision 0.2966    set_bounds 0.1750    solve 1.0077    add 0.4864    
Accumulated time: pickout 0.1372    decision 1.9048    set_bounds 0.7357    solve 9.4221    add 1.2688    
Current (lb-rhs): -0.17000985145568848
12797 domains visited
current_vram/total_varm: 16.9GB/99.9GB, batch_size increase to 4096
Cumulative time: 16.392242193222046

BaB round 22
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7010] [/input-12, 7010] [/input-12, 7010] [/input-12, 7010] [/input-12, 7010] [/input-12, 7010] [/input-12, 7010] [/input-12, 7010] [/input-12, 7010] [/input-4, 5788] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17530375719070435
10 lb beta sum: 1.3416450023651123, worst -0.1639709770679474
Time: prepare 0.2122    bound 1.2412    transfer 0.1276    finalize 0.2901    func 1.9258    
Accumulated time: func 12.0665    prepare 0.7977    bound 9.7126    transfer 0.3749    finalize 0.8969    
all_split False
======================Cut inference begins======================
max lb tensor(0.45526451) min lb tensor(-0.16396350)
Number of Verified Splits: 1646 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 28
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.76003098487854 
BICCOS Cumulative time: 2.816324472427368
Preprocessing time: 0.25911450386047363 Inference time: 0.4648470878601074 Add cuts time: 0.03506636619567871 Cut analysis time: 0.0010030269622802734
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16396 (25), -0.15993 (25), -0.15669 (25), -0.15606 (24), -0.15554 (25), -0.15325 (24), -0.15282 (25), -0.15278 (25), -0.15266 (25), -0.15229 (24), -0.15219 (25), -0.15203 (24), -0.15153 (25), -0.15120 (24), -0.14978 (24), -0.14925 (24), -0.14870 (25), -0.14833 (25), -0.14815 (25), -0.14799 (25), 
Length of domains: 6951
Time: pickout 0.0143    decision 0.4574    set_bounds 0.3522    solve 1.9279    add 0.1569    
Accumulated time: pickout 0.1515    decision 2.3623    set_bounds 1.0879    solve 11.3500    add 1.4257    
Current (lb-rhs): -0.16396349668502808
19343 domains visited
current_vram/total_varm: 26.9GB/99.9GB, batch_size increase to 8192
Cumulative time: 20.086360931396484

BaB round 23
batch: 6951
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2030] [/input-12, 2030] [/input-12, 2030] [/input-12, 2030] [/input-12, 2030] [/input-12, 7010] [/input-12, 2404] [/input-12, 7010] [/input-4, 5788] [/input-4, 5788] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17102771997451782
10 lb beta sum: 1.649492859840393, worst -0.15636688470840454
Time: prepare 0.3671    bound 2.6531    transfer 0.2201    finalize 0.5178    func 3.8482    
Accumulated time: func 15.9147    prepare 1.1651    bound 12.3657    transfer 0.5950    finalize 1.4147    
all_split False
======================Cut inference begins======================
max lb tensor(0.55939901) min lb tensor(-0.15636040)
Number of Verified Splits: 8751 of 13902
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 35.
#cuts 1-3: 35
#cuts >= 20: 0
BICCOS time: 2.288844585418701 
BICCOS Cumulative time: 5.105169057846069
Preprocessing time: 0.42827630043029785 Inference time: 1.6985580921173096 Add cuts time: 0.16120648384094238 Cut analysis time: 0.0008037090301513672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15636 (26), -0.15232 (26), -0.14910 (26), -0.14878 (26), -0.14645 (26), -0.14522 (26), -0.14516 (26), -0.14506 (26), -0.14475 (26), -0.14284 (25), -0.14241 (25), -0.14240 (26), -0.14174 (25), -0.14109 (26), -0.13894 (26), -0.13879 (25), -0.13844 (26), -0.13829 (25), -0.13808 (26), -0.13796 (26), 
Length of domains: 5151
Time: pickout 0.2454    decision 0.5062    set_bounds 0.7980    solve 3.8510    add 0.1104    
Accumulated time: pickout 0.3969    decision 2.8685    set_bounds 1.8859    solve 15.2010    add 1.5361    
Current (lb-rhs): -0.15636040270328522
24494 domains visited
Cumulative time: 27.970030069351196

BaB round 24
batch: 5151
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6806] [/input-12, 6806] [/input-12, 6806] [/input-12, 6806] [/input-12, 6806] [/input-12, 2030] [/input-12, 985] [/input-12, 985] [/input-12, 985] [/input-12, 2030] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16786688566207886
10 lb beta sum: 2.881005048751831, worst -0.1434534788131714
Time: prepare 0.2699    bound 1.9971    transfer 0.1646    finalize 0.5654    func 3.0658    
Accumulated time: func 18.9805    prepare 1.4352    bound 14.3628    transfer 0.7596    finalize 1.9801    
all_split False
======================Cut inference begins======================
max lb tensor(0.85317802) min lb tensor(-0.14344329)
Number of Verified Splits: 9167 of 10302
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 35.
#cuts 1-3: 35
#cuts >= 20: 0
BICCOS time: 2.394948959350586 
BICCOS Cumulative time: 7.500118017196655
Preprocessing time: 0.34013962745666504 Inference time: 1.8933970928192139 Add cuts time: 0.16059088706970215 Cut analysis time: 0.0008213520050048828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14344 (27), -0.13941 (27), -0.13605 (27), -0.13317 (27), -0.13314 (26), -0.13253 (26), -0.13223 (27), -0.13201 (27), -0.13200 (26), -0.13186 (27), -0.12916 (27), -0.12910 (26), -0.12864 (26), -0.12797 (26), -0.12773 (27), -0.12739 (26), -0.12574 (26), -0.12533 (26), -0.12525 (26), -0.12518 (27), 
Length of domains: 1135
Time: pickout 0.0258    decision 0.3820    set_bounds 0.4551    solve 3.0678    add 0.0291    
Accumulated time: pickout 0.4227    decision 3.2506    set_bounds 2.3410    solve 18.2687    add 1.5652    
Current (lb-rhs): -0.1434432864189148
25629 domains visited
Cumulative time: 34.40783643722534

BaB round 25
batch: 1135
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2030] [/input-12, 2030] [/input-12, 2030] [/input-12, 2030] [/input-12, 2030] [/input-12, 2030] [/input-12, 2030] [/input-12, 2030] [/input-12, 7010] [/input-12, 7010] 
cut re-enabled after branching node selection
0 lb beta sum: 3.015298843383789, worst -0.14344310760498047
10 lb beta sum: 3.015298843383789, worst -0.14343583583831787
Time: prepare 0.1089    bound 0.5121    transfer 0.0359    finalize 0.0840    func 0.7563    
Accumulated time: func 19.7368    prepare 1.5444    bound 14.8750    transfer 0.7954    finalize 2.0641    
all_split False
======================Cut inference begins======================
max lb tensor(0.24473357) min lb tensor(-0.14343148)
Number of Verified Splits: 275 of 2270
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 36
#cuts >= 20: 0
BICCOS time: 0.13320159912109375 
BICCOS Cumulative time: 7.633319616317749
Preprocessing time: 0.07411479949951172 Inference time: 0.05405616760253906 Add cuts time: 0.0042531490325927734 Cut analysis time: 0.0007774829864501953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14343 (28), -0.13940 (28), -0.13604 (28), -0.13303 (28), -0.13221 (28), -0.13200 (28), -0.13185 (28), -0.13021 (27), -0.12923 (27), -0.12899 (28), -0.12865 (27), -0.12773 (28), -0.12617 (27), -0.12536 (27), -0.12508 (28), -0.12482 (28), -0.12462 (27), -0.12445 (28), -0.12431 (27), -0.12281 (27), 
Length of domains: 1995
Time: pickout 0.0410    decision 0.0915    set_bounds 0.0986    solve 0.7568    add 0.0408    
Accumulated time: pickout 0.4637    decision 3.3421    set_bounds 2.4396    solve 19.0255    add 1.6059    
Current (lb-rhs): -0.14343148469924927
27624 domains visited
Cumulative time: 35.57698893547058

BaB round 26
batch: 1995
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6806] [/input-12, 6806] [/input-12, 6806] [/input-12, 6806] [/input-4, 8126] [/input-12, 2404] [/input-12, 6806] [/input-12, 6806] [/input-12, 6806] [/input-12, 6806] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16125273704528809
10 lb beta sum: 2.5706160068511963, worst -0.1434309482574463
Time: prepare 0.1000    bound 0.8323    transfer 0.0649    finalize 0.1425    func 1.1664    
Accumulated time: func 20.9032    prepare 1.6446    bound 15.7072    transfer 0.8603    finalize 2.2066    
all_split False
======================Cut inference begins======================
max lb tensor(0.29858732) min lb tensor(-0.14342695)
Number of Verified Splits: 1393 of 3990
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 36
#cuts >= 20: 0
BICCOS time: 0.4062082767486572 
BICCOS Cumulative time: 8.039527893066406
Preprocessing time: 0.1273660659790039 Inference time: 0.2608463764190674 Add cuts time: 0.017217397689819336 Cut analysis time: 0.0007784366607666016
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14343 (29), -0.13939 (29), -0.13603 (29), -0.13300 (29), -0.13220 (29), -0.13200 (29), -0.13184 (29), -0.13021 (28), -0.12920 (28), -0.12896 (29), -0.12865 (28), -0.12773 (29), -0.12617 (28), -0.12534 (28), -0.12504 (29), -0.12481 (29), -0.12462 (28), -0.12445 (29), -0.12430 (28), -0.12281 (28), 
Length of domains: 2597
Time: pickout 0.0061    decision 0.1593    set_bounds 0.1691    solve 1.1671    add 0.0556    
Accumulated time: pickout 0.4698    decision 3.5013    set_bounds 2.6087    solve 20.1926    add 1.6615    
Current (lb-rhs): -0.14342695474624634
30221 domains visited
Cumulative time: 37.55714440345764

BaB round 27
batch: 2597
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2404] [/input-12, 2404] [/input-12, 2404] [/input-12, 2404] [/input-12, 2404] [/input-12, 3187] [/input-12, 5547] [/input-12, 5547] [/input-12, 5547] [/input-12, 5547] 
cut re-enabled after branching node selection
0 lb beta sum: 2.974112033843994, worst -0.13983654975891113
10 lb beta sum: 2.974112033843994, worst -0.1398371458053589
Time: prepare 0.2553    bound 1.0534    transfer 0.0828    finalize 0.1954    func 1.6215    
Accumulated time: func 22.5247    prepare 1.9001    bound 16.7606    transfer 0.9431    finalize 2.4020    
all_split False
======================Cut inference begins======================
max lb tensor(0.24255359) min lb tensor(-0.13983309)
Number of Verified Splits: 1317 of 5194
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 36
#cuts >= 20: 0
BICCOS time: 0.4415709972381592 
BICCOS Cumulative time: 8.481098890304565
Preprocessing time: 0.16448402404785156 Inference time: 0.26092076301574707 Add cuts time: 0.01535487174987793 Cut analysis time: 0.0008113384246826172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13983 (30), -0.13580 (30), -0.13505 (30), -0.13244 (30), -0.13220 (30), -0.13103 (30), -0.13021 (29), -0.12939 (30), -0.12919 (29), -0.12865 (29), -0.12841 (30), -0.12825 (30), -0.12766 (30), -0.12617 (29), -0.12536 (30), -0.12533 (29), -0.12480 (30), -0.12461 (30), -0.12461 (29), -0.12429 (29), 
Length of domains: 3877
Time: pickout 0.0089    decision 0.3275    set_bounds 0.2267    solve 1.6231    add 0.0895    
Accumulated time: pickout 0.4788    decision 3.8288    set_bounds 2.8354    solve 21.8157    add 1.7511    
Current (lb-rhs): -0.13983309268951416
34098 domains visited
Cumulative time: 40.29257392883301

BaB round 28
batch: 3877
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3187] [/input-12, 3187] [/input-12, 3187] [/input-12, 3187] [/input-12, 3187] [/input-12, 5547] [/input-12, 2404] [/input-12, 2404] [/input-12, 3187] [/input-12, 2404] 
cut re-enabled after branching node selection
0 lb beta sum: 2.927654266357422, worst -0.1398329734802246
10 lb beta sum: 2.927654266357422, worst -0.13983559608459473
Time: prepare 0.3877    bound 1.5259    transfer 0.1233    finalize 0.2855    func 2.3774    
Accumulated time: func 24.9021    prepare 2.2881    bound 18.2865    transfer 1.0665    finalize 2.6874    
all_split False
======================Cut inference begins======================
max lb tensor(0.24381995) min lb tensor(-0.13983297)
Number of Verified Splits: 1481 of 7754
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 37
#cuts >= 20: 0
BICCOS time: 0.7379422187805176 
BICCOS Cumulative time: 9.219041109085083
Preprocessing time: 0.4146997928619385 Inference time: 0.30555057525634766 Add cuts time: 0.01688694953918457 Cut analysis time: 0.000804901123046875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13983 (31), -0.13580 (31), -0.13496 (31), -0.13244 (31), -0.13220 (31), -0.13093 (31), -0.12938 (31), -0.12841 (31), -0.12825 (31), -0.12756 (31), -0.12662 (30), -0.12559 (30), -0.12535 (31), -0.12533 (30), -0.12506 (30), -0.12480 (31), -0.12450 (31), -0.12413 (31), -0.12354 (31), -0.12341 (31), 
Length of domains: 6273
Time: pickout 0.1349    decision 0.4357    set_bounds 0.3360    solve 2.3793    add 0.1360    
Accumulated time: pickout 0.6137    decision 4.2646    set_bounds 3.1714    solve 24.1950    add 1.8870    
Current (lb-rhs): -0.1398329734802246
40371 domains visited
Cumulative time: 44.475502252578735

BaB round 29
batch: 6273
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5547] [/input-12, 5547] [/input-12, 5547] [/input-12, 5547] [/input-12, 5547] [/input-12, 2021] [/input-12, 3187] [/input-12, 3187] [/input-12, 2404] [/input-12, 3187] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14955520629882812
10 lb beta sum: 2.322956085205078, worst -0.139837846159935
Time: prepare 0.3229    bound 2.4409    transfer 0.1938    finalize 0.4567    func 3.4963    
Accumulated time: func 28.3984    prepare 2.6113    bound 20.7274    transfer 1.2602    finalize 3.1441    
all_split False
======================Cut inference begins======================
max lb tensor(0.31426930) min lb tensor(-0.13983297)
Number of Verified Splits: 5467 of 12546
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 37
#cuts >= 20: 0
BICCOS time: 1.8641071319580078 
BICCOS Cumulative time: 11.08314824104309
Preprocessing time: 0.398160457611084 Inference time: 1.3745923042297363 Add cuts time: 0.09049081802368164 Cut analysis time: 0.0008635520935058594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13983 (32), -0.13580 (32), -0.13489 (32), -0.13244 (32), -0.13087 (32), -0.12938 (32), -0.12840 (32), -0.12825 (32), -0.12749 (32), -0.12662 (31), -0.12559 (31), -0.12534 (32), -0.12506 (31), -0.12443 (32), -0.12413 (32), -0.12412 (32), -0.12348 (32), -0.12332 (32), -0.12289 (31), -0.12258 (31), 
Length of domains: 7079
Time: pickout 0.0233    decision 0.4706    set_bounds 0.7319    solve 3.4989    add 0.1697    
Accumulated time: pickout 0.6369    decision 4.7352    set_bounds 3.9033    solve 27.6939    add 2.0568    
Current (lb-rhs): -0.1398329734802246
47450 domains visited
Cumulative time: 51.293519258499146

BaB round 30
batch: 7079
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2021] [/input-12, 2021] [/input-12, 2021] [/input-12, 2021] [/input-12, 4758] [/input-12, 6019] [/input-12, 2021] [/input-12, 2021] [/input-12, 2021] [/input-12, 5547] 
cut re-enabled after branching node selection
0 lb beta sum: 2.5978758335113525, worst -0.13432100415229797
10 lb beta sum: 2.5978758335113525, worst -0.13431993126869202
Time: prepare 0.6950    bound 2.7283    transfer 0.2254    finalize 0.5288    func 4.2696    
Accumulated time: func 32.6680    prepare 3.3066    bound 23.4557    transfer 1.4856    finalize 3.6729    
all_split False
======================Cut inference begins======================
max lb tensor(0.24275994) min lb tensor(-0.13431776)
Number of Verified Splits: 2357 of 14158
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 37
#cuts >= 20: 0
BICCOS time: 1.2246520519256592 
BICCOS Cumulative time: 12.30780029296875
Preprocessing time: 0.45748472213745117 Inference time: 0.7324850559234619 Add cuts time: 0.03388023376464844 Cut analysis time: 0.0008020401000976562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13432 (33), -0.13236 (33), -0.13028 (33), -0.12933 (33), -0.12833 (33), -0.12738 (33), -0.12692 (33), -0.12662 (32), -0.12559 (32), -0.12531 (33), -0.12506 (32), -0.12497 (33), -0.12385 (33), -0.12335 (33), -0.12289 (33), -0.12258 (32), -0.12219 (33), -0.12194 (33), -0.12190 (33), -0.12189 (33), 
Length of domains: 11801
Time: pickout 0.2576    decision 0.5171    set_bounds 0.8259    solve 4.2731    add 1.0429    
Accumulated time: pickout 0.8945    decision 5.2523    set_bounds 4.7293    solve 31.9670    add 3.0997    
Current (lb-rhs): -0.13431775569915771
59251 domains visited
Cumulative time: 59.47218656539917

BaB round 31
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4758] [/input-12, 4758] [/input-12, 6019] [/input-12, 4758] [/input-12, 5778] [/input-12, 6019] [/input-12, 6019] [/input-12, 6019] [/input-12, 4758] [/input-12, 6019] 
cut re-enabled after branching node selection
0 lb beta sum: 2.539065361022949, worst -0.13005298376083374
10 lb beta sum: 2.539065361022949, worst -0.13002723455429077
Time: prepare 0.8185    bound 3.1426    transfer 0.2522    finalize 0.6079    func 4.9300    
Accumulated time: func 37.5980    prepare 4.1255    bound 26.5983    transfer 1.7378    finalize 4.2808    
all_split False
======================Cut inference begins======================
max lb tensor(0.24283826) min lb tensor(-0.13001749)
Number of Verified Splits: 2615 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 38
#cuts >= 20: 0
BICCOS time: 1.4986512660980225 
BICCOS Cumulative time: 13.806451559066772
Preprocessing time: 0.5333211421966553 Inference time: 0.8763713836669922 Add cuts time: 0.0879678726196289 Cut analysis time: 0.0009908676147460938
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13002 (34), -0.12806 (34), -0.12692 (34), -0.12617 (34), -0.12598 (34), -0.12501 (34), -0.12496 (34), -0.12422 (34), -0.12402 (34), -0.12304 (34), -0.12289 (34), -0.12217 (34), -0.12190 (34), -0.12122 (33), -0.12117 (34), -0.12098 (34), -0.12092 (34), -0.12021 (34), -0.12008 (33), -0.11995 (34), 
Length of domains: 17378
Time: pickout 0.0342    decision 0.6142    set_bounds 0.9931    solve 4.9332    add 1.9058    
Accumulated time: pickout 0.9287    decision 5.8665    set_bounds 5.7224    solve 36.9002    add 5.0055    
Current (lb-rhs): -0.13001748919487
73020 domains visited
Cumulative time: 69.50071454048157

BaB round 32
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6806] [/input-12, 6806] [/input-12, 6806] [/input-12, 6806] [/input-12, 6806] [/input-12, 6806] [/input-12, 6806] [/input-12, 6806] [/input-12, 6806] [/input-12, 6806] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1339762806892395
10 lb beta sum: 2.0990827083587646, worst -0.12427279353141785
Time: prepare 0.6857    bound 3.1470    transfer 0.2532    finalize 0.6175    func 4.8117    
Accumulated time: func 42.4096    prepare 4.8115    bound 29.7453    transfer 1.9910    finalize 4.8983    
all_split False
======================Cut inference begins======================
max lb tensor(0.31440282) min lb tensor(-0.12425582)
Number of Verified Splits: 4844 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 38
#cuts >= 20: 0
BICCOS time: 2.0994017124176025 
BICCOS Cumulative time: 15.905853271484375
Preprocessing time: 0.5403125286102295 Inference time: 1.461704969406128 Add cuts time: 0.09654116630554199 Cut analysis time: 0.000843048095703125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13002 (34), -0.12806 (34), -0.12692 (34), -0.12598 (34), -0.12501 (34), -0.12496 (34), -0.12426 (35), -0.12422 (34), -0.12402 (34), -0.12304 (34), -0.12289 (34), -0.12190 (34), -0.12098 (34), -0.12092 (34), -0.12023 (35), -0.12021 (34), -0.11995 (34), -0.11932 (34), -0.11922 (35), -0.11920 (34), 
Length of domains: 20726
Time: pickout 0.0349    decision 0.6129    set_bounds 0.7705    solve 4.8152    add 0.2763    
Accumulated time: pickout 0.9636    decision 6.4794    set_bounds 6.4928    solve 41.7154    add 5.2817    
Current (lb-rhs): -0.13001748919487
84560 domains visited
Cumulative time: 78.17891716957092

BaB round 33
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 418] [/input-12, 7134] [/input-12, 7134] [/input-12, 7134] [/input-12, 5541] [/input-12, 5547] [/input-12, 5547] [/input-12, 7134] [/input-12, 7134] [/input-12, 7134] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13790839910507202
10 lb beta sum: 2.102825403213501, worst -0.12817606329917908
Time: prepare 0.4301    bound 3.1443    transfer 0.2519    finalize 0.9213    func 4.8582    
Accumulated time: func 47.2678    prepare 5.2419    bound 32.8896    transfer 2.2429    finalize 5.8196    
all_split False
======================Cut inference begins======================
max lb tensor(0.33386660) min lb tensor(-0.12817012)
Number of Verified Splits: 7375 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 38
#cuts >= 20: 0
BICCOS time: 2.8088130950927734 
BICCOS Cumulative time: 18.71466636657715
Preprocessing time: 0.5511565208435059 Inference time: 2.0972321033477783 Add cuts time: 0.15952205657958984 Cut analysis time: 0.0009024143218994141
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12817 (35), -0.12621 (35), -0.12508 (35), -0.12426 (35), -0.12414 (35), -0.12314 (35), -0.12312 (35), -0.12217 (35), -0.12117 (35), -0.12105 (35), -0.12023 (35), -0.12005 (35), -0.11922 (35), -0.11910 (35), -0.11909 (35), -0.11809 (35), -0.11748 (35), -0.11714 (35), -0.11692 (34), -0.11605 (35), 
Length of domains: 21543
Time: pickout 0.0392    decision 0.6082    set_bounds 0.7763    solve 4.8621    add 0.2161    
Accumulated time: pickout 1.0028    decision 7.0875    set_bounds 7.2692    solve 46.5775    add 5.4979    
Current (lb-rhs): -0.12817011773586273
93569 domains visited
Cumulative time: 87.57831692695618

BaB round 34
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5547] [/input-12, 5547] [/input-12, 5547] [/input-12, 5547] [/input-12, 2021] [/input-12, 2021] [/input-12, 2021] [/input-12, 418] [/input-12, 2021] [/input-12, 2021] 
cut re-enabled after branching node selection
0 lb beta sum: 2.1821866035461426, worst -0.12992867827415466
10 lb beta sum: 3.431004047393799, worst -0.11183834075927734
Time: prepare 0.7674    bound 3.1451    transfer 0.2497    finalize 0.9748    func 5.2475    
Accumulated time: func 52.5153    prepare 6.0097    bound 36.0347    transfer 2.4926    finalize 6.7944    
all_split False
======================Cut inference begins======================
max lb tensor(0.32161522) min lb tensor(-0.11182439)
Number of Verified Splits: 8966 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 38
#cuts >= 20: 0
BICCOS time: 2.8809914588928223 
BICCOS Cumulative time: 21.59565782546997
Preprocessing time: 0.5609452724456787 Inference time: 2.0951991081237793 Add cuts time: 0.22379755973815918 Cut analysis time: 0.0010495185852050781
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12817 (35), -0.12621 (35), -0.12508 (35), -0.12414 (35), -0.12314 (35), -0.12312 (35), -0.12217 (35), -0.12117 (35), -0.12105 (35), -0.12005 (35), -0.11910 (35), -0.11909 (35), -0.11809 (35), -0.11748 (35), -0.11714 (35), -0.11692 (34), -0.11605 (35), -0.11602 (35), -0.11583 (34), -0.11575 (35), 
Length of domains: 20769
Time: pickout 0.0444    decision 0.6062    set_bounds 0.7862    solve 5.2507    add 0.1700    
Accumulated time: pickout 1.0472    decision 7.6937    set_bounds 8.0554    solve 51.8282    add 5.6678    
Current (lb-rhs): -0.12817011773586273
100987 domains visited
Cumulative time: 97.42583727836609

BaB round 35
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5547] [/input-12, 5541] [/input-12, 1804] [/input-12, 5541] [/input-12, 418] [/input-12, 4108] [/input-12, 418] [/input-12, 5547] [/input-12, 5547] [/input-12, 3187] 
cut re-enabled after branching node selection
0 lb beta sum: 2.3034496307373047, worst -0.12481987476348877
10 lb beta sum: 2.9403269290924072, worst -0.12415798008441925
Time: prepare 0.8180    bound 3.1445    transfer 0.2505    finalize 0.9768    func 5.2991    
Accumulated time: func 57.8144    prepare 6.8280    bound 39.1792    transfer 2.7431    finalize 7.7712    
all_split False
======================Cut inference begins======================
max lb tensor(0.29565573) min lb tensor(-0.12414710)
Number of Verified Splits: 3794 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 38
#cuts >= 20: 0
BICCOS time: 1.5707054138183594 
BICCOS Cumulative time: 23.16636323928833
Preprocessing time: 0.5750343799591064 Inference time: 0.9047682285308838 Add cuts time: 0.0899343490600586 Cut analysis time: 0.0009684562683105469
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12415 (36), -0.12218 (36), -0.12107 (36), -0.12090 (36), -0.12041 (36), -0.11910 (36), -0.11908 (36), -0.11892 (36), -0.11844 (36), -0.11782 (36), -0.11733 (36), -0.11712 (36), -0.11600 (36), -0.11590 (36), -0.11584 (36), -0.11536 (36), -0.11535 (36), -0.11509 (35), -0.11464 (34), -0.11403 (36), 
Length of domains: 25167
Time: pickout 0.0489    decision 0.9136    set_bounds 0.8076    solve 5.3030    add 0.2966    
Accumulated time: pickout 1.0961    decision 8.6073    set_bounds 8.8629    solve 57.1312    add 5.9644    
Current (lb-rhs): -0.12414710223674774
113577 domains visited
Cumulative time: 106.42916560173035

BaB round 36
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1035] [/input-12, 1035] [/input-12, 1035] [/input-12, 1035] [/input-12, 1035] [/input-12, 1035] [/input-12, 1035] [/input-12, 1035] [/input-12, 1035] [/input-12, 1035] 
cut re-enabled after branching node selection
0 lb beta sum: 2.8213319778442383, worst -0.11281991004943848
10 lb beta sum: 2.8213319778442383, worst -0.11286807060241699
Time: prepare 0.8237    bound 3.1438    transfer 0.2519    finalize 0.6237    func 4.9515    
Accumulated time: func 62.7659    prepare 7.6521    bound 42.3230    transfer 2.9950    finalize 8.3950    
all_split False
======================Cut inference begins======================
max lb tensor(0.24290872) min lb tensor(-0.11281031)
Number of Verified Splits: 2501 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 38
#cuts >= 20: 0
BICCOS time: 1.6697580814361572 
BICCOS Cumulative time: 24.836121320724487
Preprocessing time: 0.9676704406738281 Inference time: 0.6024484634399414 Add cuts time: 0.09863948822021484 Cut analysis time: 0.0009996891021728516
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12415 (36), -0.12218 (36), -0.12107 (36), -0.12090 (36), -0.12041 (36), -0.11910 (36), -0.11908 (36), -0.11892 (36), -0.11844 (36), -0.11782 (36), -0.11733 (36), -0.11712 (36), -0.11600 (36), -0.11590 (36), -0.11584 (36), -0.11536 (36), -0.11535 (36), -0.11509 (35), -0.11403 (36), -0.11398 (35), 
Length of domains: 30858
Time: pickout 0.0378    decision 0.9228    set_bounds 0.8035    solve 4.9567    add 0.3306    
Accumulated time: pickout 1.1339    decision 9.5301    set_bounds 9.6664    solve 62.0879    add 6.2950    
Current (lb-rhs): -0.12414710223674774
127460 domains visited
Cumulative time: 115.20368957519531

BaB round 37
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5547] [/input-12, 5547] [/input-12, 5547] [/input-12, 5547] [/input-12, 5547] [/input-12, 5547] [/input-12, 418] [/input-12, 5547] [/input-12, 5547] [/input-12, 5547] 
cut re-enabled after branching node selection
0 lb beta sum: 3.8250904083251953, worst -0.12090776860713959
10 lb beta sum: 3.8250904083251953, worst -0.1208602637052536
Time: prepare 0.8255    bound 3.1445    transfer 0.2530    finalize 0.6292    func 4.9633    
Accumulated time: func 67.7292    prepare 8.4780    bound 45.4674    transfer 3.2480    finalize 9.0242    
all_split False
======================Cut inference begins======================
max lb tensor(0.24333215) min lb tensor(-0.12083994)
Number of Verified Splits: 2353 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 38
#cuts >= 20: 0
BICCOS time: 1.2298810482025146 
BICCOS Cumulative time: 26.066002368927002
Preprocessing time: 0.579176664352417 Inference time: 0.6053757667541504 Add cuts time: 0.044350624084472656 Cut analysis time: 0.0009779930114746094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12415 (36), -0.12218 (36), -0.12107 (36), -0.12084 (37), -0.12041 (36), -0.11910 (36), -0.11908 (36), -0.11892 (36), -0.11844 (36), -0.11777 (37), -0.11733 (36), -0.11712 (36), -0.11620 (37), -0.11600 (36), -0.11584 (36), -0.11583 (37), -0.11536 (36), -0.11535 (36), -0.11403 (36), -0.11395 (36), 
Length of domains: 36697
Time: pickout 0.0333    decision 0.6135    set_bounds 1.2037    solve 4.9675    add 3.7475    
Accumulated time: pickout 1.1672    decision 10.1437    set_bounds 10.8701    solve 67.0554    add 10.0425    
Current (lb-rhs): -0.12414710223674774
141491 domains visited
Cumulative time: 127.05707740783691

BaB round 38
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3187] [/input-12, 3187] [/input-12, 4124] [/input-12, 4124] [/input-12, 1035] [/input-12, 1035] [/input-12, 1035] [/input-12, 1035] [/input-12, 1035] [/input-4, 5805] 
cut re-enabled after branching node selection
0 lb beta sum: 2.8615856170654297, worst -0.12414674460887909
10 lb beta sum: 2.8615856170654297, worst -0.12413771450519562
Time: prepare 0.8307    bound 3.1454    transfer 0.2516    finalize 0.6264    func 4.9637    
Accumulated time: func 72.6929    prepare 9.3090    bound 48.6128    transfer 3.4996    finalize 9.6507    
all_split False
======================Cut inference begins======================
max lb tensor(0.24315310) min lb tensor(-0.12413619)
Number of Verified Splits: 2058 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 38
#cuts >= 20: 0
BICCOS time: 1.1490240097045898 
BICCOS Cumulative time: 27.215026378631592
Preprocessing time: 0.554591178894043 Inference time: 0.516620397567749 Add cuts time: 0.07691407203674316 Cut analysis time: 0.0008983612060546875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12414 (37), -0.12217 (37), -0.12106 (37), -0.12084 (37), -0.12041 (37), -0.11956 (37), -0.11909 (37), -0.11905 (37), -0.11886 (37), -0.11844 (37), -0.11777 (37), -0.11760 (37), -0.11733 (37), -0.11709 (37), -0.11676 (37), -0.11620 (37), -0.11597 (37), -0.11586 (37), -0.11583 (37), -0.11579 (37), 
Length of domains: 42831
Time: pickout 0.0338    decision 1.0702    set_bounds 0.7902    solve 5.4565    add 0.3443    
Accumulated time: pickout 1.2010    decision 11.2138    set_bounds 11.6604    solve 72.5120    add 10.3868    
Current (lb-rhs): -0.12413619458675385
155817 domains visited
Cumulative time: 135.95110201835632

BaB round 39
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4124] [/input-12, 4124] [/input-12, 4124] [/input-12, 4124] [/input-12, 4124] [/input-12, 4124] [/input-12, 4124] [/input-12, 4124] [/input-12, 1034] [/input-12, 1034] 
cut re-enabled after branching node selection
0 lb beta sum: 2.6175734996795654, worst -0.10879433155059814
10 lb beta sum: 2.6175734996795654, worst -0.1088441014289856
Time: prepare 1.2894    bound 3.1458    transfer 0.2521    finalize 0.6285    func 5.4253    
Accumulated time: func 78.1182    prepare 10.5988    bound 51.7586    transfer 3.7517    finalize 10.2792    
all_split False
======================Cut inference begins======================
max lb tensor(0.24024153) min lb tensor(-0.10877746)
Number of Verified Splits: 1856 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 38
#cuts >= 20: 0
BICCOS time: 1.1142268180847168 
BICCOS Cumulative time: 28.32925319671631
Preprocessing time: 0.5594689846038818 Inference time: 0.4782583713531494 Add cuts time: 0.07549619674682617 Cut analysis time: 0.001003265380859375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12414 (37), -0.12217 (37), -0.12106 (37), -0.12084 (37), -0.12041 (37), -0.11956 (37), -0.11909 (37), -0.11905 (37), -0.11886 (37), -0.11844 (37), -0.11777 (37), -0.11760 (37), -0.11733 (37), -0.11709 (37), -0.11676 (37), -0.11620 (37), -0.11597 (37), -0.11586 (37), -0.11583 (37), -0.11579 (37), 
Length of domains: 49167
Time: pickout 0.0334    decision 0.6160    set_bounds 0.7960    solve 5.4294    add 0.3379    
Accumulated time: pickout 1.2344    decision 11.8298    set_bounds 12.4564    solve 77.9413    add 10.7247    
Current (lb-rhs): -0.12413619458675385
170345 domains visited
Cumulative time: 144.33000707626343

BaB round 40
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1035] [/input-12, 1035] [/input-12, 1035] [/input-12, 1035] [/input-12, 1035] [/input-12, 1035] [/input-12, 1035] [/input-12, 1035] [/input-12, 1035] [/input-12, 1035] 
cut re-enabled after branching node selection
0 lb beta sum: 3.153306484222412, worst -0.10282942652702332
10 lb beta sum: 3.153306484222412, worst -0.10280168056488037
Time: prepare 0.8360    bound 3.1449    transfer 0.2543    finalize 0.6300    func 4.9738    
Accumulated time: func 83.0919    prepare 11.4352    bound 54.9036    transfer 4.0060    finalize 10.9091    
all_split False
======================Cut inference begins======================
max lb tensor(0.23984504) min lb tensor(-0.10278809)
Number of Verified Splits: 2465 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 38
#cuts >= 20: 0
BICCOS time: 1.2735342979431152 
BICCOS Cumulative time: 29.602787494659424
Preprocessing time: 0.5638484954833984 Inference time: 0.6610336303710938 Add cuts time: 0.04774165153503418 Cut analysis time: 0.0009105205535888672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12414 (37), -0.12217 (37), -0.12106 (37), -0.12084 (37), -0.12041 (37), -0.11956 (37), -0.11909 (37), -0.11905 (37), -0.11886 (37), -0.11844 (37), -0.11777 (37), -0.11760 (37), -0.11733 (37), -0.11709 (37), -0.11676 (37), -0.11620 (37), -0.11597 (37), -0.11586 (37), -0.11583 (37), -0.11579 (37), 
Length of domains: 54894
Time: pickout 0.0336    decision 0.6164    set_bounds 1.3201    solve 4.9784    add 0.3239    
Accumulated time: pickout 1.2680    decision 12.4462    set_bounds 13.7764    solve 82.9198    add 11.0486    
Current (lb-rhs): -0.12413619458675385
184264 domains visited
Cumulative time: 152.9305362701416

BaB round 41
Cut Inference reaches max iterations. Recover the setting
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2021] [/input-12, 2021] [/input-12, 2021] [/input-12, 2021] [/input-12, 2021] [/input-12, 2021] [/input-12, 2021] [/input-12, 2021] [/input-12, 2021] [/input-12, 1035] 
cut re-enabled after branching node selection
0 lb beta sum: 3.842878580093384, worst -0.11819387972354889
10 lb beta sum: 3.842878580093384, worst -0.11817331612110138
Time: prepare 0.8294    bound 3.1444    transfer 0.2543    finalize 0.6229    func 4.9594    
Accumulated time: func 88.0513    prepare 12.2650    bound 58.0480    transfer 4.2603    finalize 11.5320    
all_split False
======================Cut inference begins======================
max lb tensor(0.24213719) min lb tensor(-0.11815612)
Number of Verified Splits: 2256 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 38.
#cuts 1-3: 38
#cuts >= 20: 0
BICCOS time: 0.0008077621459960938 
BICCOS Cumulative time: 29.60359525680542
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12414 (37), -0.12217 (37), -0.12106 (37), -0.12041 (37), -0.11956 (37), -0.11909 (37), -0.11905 (37), -0.11886 (37), -0.11844 (37), -0.11816 (38), -0.11760 (37), -0.11733 (37), -0.11709 (37), -0.11676 (37), -0.11620 (37), -0.11597 (37), -0.11586 (37), -0.11579 (37), -0.11536 (37), -0.11531 (37), 
Length of domains: 60830
Time: pickout 0.0335    decision 1.1841    set_bounds 0.8097    solve 4.9640    add 0.3298    
Accumulated time: pickout 1.3015    decision 13.6303    set_bounds 14.5861    solve 87.8837    add 11.3784    
Current (lb-rhs): -0.12413619458675385
198392 domains visited
Cumulative time: 160.30646753311157

BaB round 42
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1035] [/input-12, 5547] [/input-12, 5547] [/input-12, 5547] [/input-12, 5547] [/input-12, 5547] [/input-12, 5547] [/input-12, 7134] [/input-12, 2021] [/input-12, 2021] 
cut re-enabled after branching node selection
0 lb beta sum: 3.229605197906494, worst -0.1162186861038208
10 lb beta sum: 3.229605197906494, worst -0.1162036657333374
Time: prepare 0.8328    bound 3.1439    transfer 0.2507    finalize 0.6285    func 4.9654    
Accumulated time: func 93.0167    prepare 13.0981    bound 61.1919    transfer 4.5110    finalize 12.1605    
all_split False
======================Cut inference begins======================
max lb tensor(0.23251271) min lb tensor(-0.11617607)
Number of Verified Splits: 1895 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 38.
#cuts 1-3: 38
#cuts >= 20: 0
BICCOS time: 0.0007474422454833984 
BICCOS Cumulative time: 29.604342699050903
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12414 (37), -0.12217 (37), -0.12106 (37), -0.12041 (37), -0.11956 (37), -0.11909 (37), -0.11905 (37), -0.11844 (37), -0.11816 (38), -0.11760 (37), -0.11733 (37), -0.11709 (37), -0.11676 (37), -0.11618 (38), -0.11597 (37), -0.11586 (37), -0.11536 (37), -0.11531 (37), -0.11509 (38), -0.11480 (37), 
Length of domains: 67127
Time: pickout 0.0312    decision 1.1916    set_bounds 0.7915    solve 4.9695    add 57.6614    
Accumulated time: pickout 1.3327    decision 14.8219    set_bounds 15.3776    solve 92.8532    add 69.0398    
Current (lb-rhs): -0.12413619458675385
212881 domains visited
Time out!!!!!!!!
Result: unknown in 230.1638 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 7, vnnlib ID: 7 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-48.81000519, -49.43004227, -45.49217987, -46.37124252, -44.61469269,
         -46.98751831, -43.45341110, -47.56163406, -50.07391739, -50.04907227]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1374]; unstable size 1374; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 77, 1, 1374] with unstable size 76 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 38, 1, 1374] with unstable size 37 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1374] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [536]; unstable size 536; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 38, 1, 536] with unstable size 37 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 536] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [37]; unstable size 37; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 37] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.66581535, 4.22864056, 1.34568834, 2.03910398, 0.52098441, 2.58902597,
         2.82995558, 4.78924084, 4.53814459]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0427 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 8, vnnlib ID: 8 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-85.92315674, -92.04128265, -89.44866180, -93.03460693, -92.04370117,
         -93.61308289, -94.71441650, -94.58000183, -89.44628143, -92.52800751]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1321]; unstable size 1321; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 276, 1, 1321] with unstable size 275 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 14, 1, 1321] with unstable size 13 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1321] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [275]; unstable size 275; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 14, 1, 275] with unstable size 13 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 275] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [13]; unstable size 13; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.40081549, 2.99410868, 6.36909962, 5.51168871, 6.89889717, 7.96473551,
         7.75413895, 2.90178704, 5.92223167]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0392 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 9, vnnlib ID: 9 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-44.40042114, -46.77095795, -42.73389816, -42.64236832, -44.08471680,
         -42.92335510, -43.25707626, -45.08687973, -43.45911789, -45.95968628]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1307]; unstable size 1307; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 88, 1, 1307] with unstable size 87 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 28, 1, 1307] with unstable size 27 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1307] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [528]; unstable size 528; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 28, 1, 528] with unstable size 27 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 528] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [27]; unstable size 27; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.08540750,  1.89283359, -1.31065798, -0.41163003, -0.17159653,
         -0.63494444,  1.07291150, -1.23123610,  1.43353462]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-44.40042114, -46.77095795, -42.73389816, -42.64236832, -44.08471680,
         -42.92335510, -43.25707626, -45.08687973, -43.45911789, -45.95968628]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-44.40042496, -46.77096558, -42.73390198, -42.64237213, -44.08471680,
          -42.92335510, -43.25707626, -45.08687973, -43.45911789, -45.95969391],
         [-44.40042496, -46.77096558, -42.73390198, -42.64237213, -44.08471680,
          -42.92335510, -43.25707626, -45.08687973, -43.45911789, -45.95969391]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.18945312, -0.28098297,  1.16136169,  0.33372116,  0.53576279]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0562 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 10, vnnlib ID: 10 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-46.03104782, -49.30011749, -42.01427078, -41.65601730, -44.67583084,
         -40.92924500, -46.02582550, -42.31478882, -46.55361176, -47.22377777]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1013]; unstable size 1013; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 290, 1, 1013] with unstable size 289 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 10, 1, 1013] with unstable size 9 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1013] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [289]; unstable size 289; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 10, 1, 289] with unstable size 9 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 289] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [9]; unstable size 9; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.79964018,  6.05029964, -0.91496634, -1.25590777,  1.83372092,
         -1.95869660,  3.15594244,  3.10897017,  3.89577484]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-46.03104782, -49.30011749, -42.01427078, -41.65601730, -44.67583084,
         -40.92924500, -46.02582550, -42.31478882, -46.55361176, -47.22377777]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-46.03104401, -49.30011368, -42.01427078, -41.65601349, -44.67582703,
          -40.92924500, -46.02582169, -42.31478882, -46.55360794, -47.22377014],
         [-46.03104401, -49.30011368, -42.01427078, -41.65601349, -44.67582703,
          -40.92924500, -46.02582169, -42.31478882, -46.55360794, -47.22377014]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.30051804, -0.65877533, -1.38554382]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           ...,
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.89365077,
            -1.90952384, -1.63968253],
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.96507931,
            -1.95714283, -1.96507931],
           [-1.97301579, -1.97301579, -1.94126987,  ..., -1.97301579,
            -1.97301579, -1.96507931]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           ...,
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.70692432,
            -1.77133656, -1.54589367],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.80354273,
            -1.81964576, -1.86795497],
           [-1.96457338, -1.96457338, -1.93236721,  ..., -1.86795497,
            -1.91626418, -1.93236721]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.60269880,
            -1.63268375, -1.39280367],
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.67766130,
            -1.68515754, -1.69265378],
           [-1.69265378, -1.69265378, -1.66266882,  ..., -1.69265378,
            -1.69265378, -1.69265378]]],


         [[[-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           ...,
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.89365077,
            -1.90952384, -1.63968253],
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.96507931,
            -1.95714283, -1.96507931],
           [-1.97301579, -1.97301579, -1.94126987,  ..., -1.97301579,
            -1.97301579, -1.96507931]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           ...,
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.70692432,
            -1.77133656, -1.54589367],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.80354273,
            -1.81964576, -1.86795497],
           [-1.96457338, -1.96457338, -1.93236721,  ..., -1.86795497,
            -1.91626418, -1.93236721]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.60269880,
            -1.63268375, -1.39280367],
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.67766130,
            -1.68515754, -1.69265378],
           [-1.69265378, -1.69265378, -1.66266882,  ..., -1.69265378,
            -1.69265378, -1.69265378]]],


         [[[-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           ...,
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.89365077,
            -1.90952384, -1.63968253],
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.96507931,
            -1.95714283, -1.96507931],
           [-1.97301579, -1.97301579, -1.94126987,  ..., -1.97301579,
            -1.97301579, -1.96507931]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           ...,
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.70692432,
            -1.77133656, -1.54589367],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.80354273,
            -1.81964576, -1.86795497],
           [-1.96457338, -1.96457338, -1.93236721,  ..., -1.86795497,
            -1.91626418, -1.93236721]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.60269880,
            -1.63268375, -1.39280367],
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.67766130,
            -1.68515754, -1.69265378],
           [-1.69265378, -1.69265378, -1.66266882,  ..., -1.69265378,
            -1.69265378, -1.69265378]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0478 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 11, vnnlib ID: 11 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-38.10636520, -41.18902588, -34.60456467, -37.72626877, -35.06708908,
         -38.14134216, -36.22874069, -37.73498535, -39.79269791, -40.78528595]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1397]; unstable size 1397; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 80, 1, 1397] with unstable size 79 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 37, 1, 1397] with unstable size 36 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1397] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [587]; unstable size 587; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 37, 1, 587] with unstable size 36 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 587] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [36]; unstable size 36; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 36] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.97912443,  4.44039536,  2.03892565, -0.46802664,  2.44672704,
          0.40294859,  1.51388931,  3.21726871,  4.24980497]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-38.10636520, -41.18902588, -34.60456467, -37.72626877, -35.06708908,
         -38.14134216, -36.22874069, -37.73498535, -39.79269791, -40.78528595]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.29it/s]100%|██████████| 1/1 [00:00<00:00,  8.28it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-39.33428192, -42.30664825, -35.83085251, -38.72842407, -35.97939682,
          -39.14544678, -37.24480057, -38.62140656, -40.95015335, -41.90445709]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.14854431]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1236 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 20.65205955505371
alpha/beta optimization time: 1.431098461151123
initial alpha-crown bounds: tensor([[ 2.05308557,  4.59304428,  2.11683893, -0.41505444,  2.51788759,
          0.45938247,  1.60321593,  3.33631134,  4.38734770]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.41505444049835205
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.40379405021667
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.40375351905823
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.4037265777588
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.4037048816681
Verifying property 3 with 1 instances.
##### Instance 11 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.41505444]], device='cuda:0') need to verify.
Model prediction is: tensor([-38.10636520, -41.18902588, -34.60456467, -37.72626877, -35.06708908,
        -38.14134216, -36.22874069, -37.73498535, -39.79269791, -40.78528595],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.41505444]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1397
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 577
Node /39 input 0: size torch.Size([250]) unstable 36
-----------------
# of unstable neurons: 2010
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.0001163482666015625
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.415022075176239
10 lb beta sum: 0.0, worst -0.4150238037109375
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0749    transfer 0.0001    finalize 0.0002    func 0.0755    
Accumulated time: func 0.0755    prepare 0.0002    bound 0.0749    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 230] 
split level 1: [/input-16, 115] 
split level 2: [/input-16, 10] 
split level 3: [/input-16, 64] 
split level 4: [/input-16, 225] 
split level 5: [/input-16, 145] 
split level 6: [/input-16, 208] 
split level 7: [/input-16, 154] 
split level 8: [/input-16, 7] 
split level 9: [/input-16, 248] 
split level 10: [/input-16, 84] 
split level 11: [/input-16, 31] 
split level 12: [/input-16, 180] 
split level 13: [/input-16, 218] 
split level 14: [/input-16, 97] 
split level 15: [/input-12, 2597] 
split level 16: [/input-12, 7891] 
split level 17: [/input-12, 2589] 
split level 18: [/input-16, 82] 
split level 19: [/input-12, 5358] 
split level 20: [/input-12, 2914] 
split level 21: [/input-12, 300] 
split level 22: [/input-12, 5549] 
split level 23: [/input-12, 2931] 
split level 24: [/input-12, 498] 
split level 25: [/input-12, 7900] 
split level 26: [/input-12, 6218] 
split level 27: [/input-12, 1844] 
split level 28: [/input-12, 2441] 
split level 29: [/input-12, 2580] 
split level 30: [/input-12, 482] 
split level 31: [/input-12, 2917] 
split level 32: [/input-12, 4682] 
split level 33: [/input-12, 1564] 
split level 34: [/input-4, 8099] 
split level 35: [/input-4, 8053] 
split level 36: [/input-12, 5800] 
split level 37: [/input-12, 2577] 
split level 38: [/input-12, 2449] 
split level 39: [/input-12, 2598] 
split level 40: [/input-12, 1565] 
split level 41: [/input-12, 5548] 
split level 42: [/input-12, 5550] 
split level 43: [/input-12, 7911] 
split level 44: [/input-4, 8069] 
split level 45: [/input-4, 8055] 
split level 46: [/input-12, 1843] 
split level 47: [/input-12, 108] 
split level 48: [/input-4, 5797] 
split level 49: [/input-12, 5350] 
split level 50: [/input-12, 1387] 
split level 51: [/input-12, 3949] 
split level 52: [/input-12, 5788] 
split level 53: [/input-12, 4893] 
split level 54: [/input-12, 881] 
split level 55: [/input-12, 2450] 
split level 56: [/input-12, 3167] 
split level 57: [/input-12, 7987] 
split level 58: [/input-4, 8171] 
split level 59: [/input-12, 2585] 
split level 60: [/input-12, 339] 
split level 61: [/input-12, 2434] 
split level 62: [/input-12, 7918] 
split level 63: [/input-4, 8052] 
split level 64: [/input-4, 3724] 
split level 65: [/input-12, 4573] 
split level 66: [/input-4, 2423] 
split level 67: [/input-12, 1179] 
split level 68: [/input-12, 2932] 
split level 69: [/input-12, 4569] 
split level 70: [/input-12, 2601] 
split level 71: [/input-12, 5540] 
split level 72: [/input-12, 5652] 
split level 73: [/input-12, 5356] 
split level 74: [/input-12, 2615] 
split level 75: [/input-12, 880] 
split level 76: [/input-12, 4460] 
split level 77: [/input-12, 7919] 
split level 78: [/input-12, 5347] 
split level 79: [/input-4, 5786] 
split level 80: [/input-12, 356] 
split level 81: [/input-4, 7991] 
split level 82: [/input-12, 4877] 
split level 83: [/input-12, 6757] 
split level 84: [/input-16, 51] 
split level 85: [/input-4, 5010] 
split level 86: [/input-4, 2440] 
split level 87: [/input-12, 7986] 
split level 88: [/input-12, 6754] 
split level 89: [/input-4, 1640] 
split level 90: [/input-4, 5837] 
split level 91: [/input-12, 4577] 
split level 92: [/input-4, 2439] 
split level 93: [/input-12, 5706] 
split level 94: [/input-4, 5052] 
split level 95: [/input-12, 2578] 
split level 96: [/input-4, 4741] 
split level 97: [/input-12, 1997] 
split level 98: [/input-12, 4554] 
split level 99: [/input-12, 3436] 
split level 100: [/input-12, 7909] 
split level 101: [/input-12, 2012] 
split level 102: [/input-12, 7990] 
split level 103: [/input-4, 4984] 
split level 104: [/input-4, 7959] 
split level 105: [/input-12, 1556] 
split level 106: [/input-12, 7566] 
split level 107: [/input-12, 1835] 
split level 108: [/input-4, 5086] 
split level 109: [/input-4, 8102] 
split level 110: [/input-12, 3938] 
split level 111: [/input-12, 4705] 
split level 112: [/input-12, 2571] 
split level 113: [/input-4, 8070] 
split level 114: [/input-4, 6292] 
split level 115: [/input-12, 1198] 
split level 116: [/input-12, 4466] 
split level 117: [/input-4, 6279] 
split level 118: [/input-4, 5751] 
split level 119: [/input-4, 7079] 
split level 120: [/input-12, 4395] 
split level 121: [/input-12, 6771] 
split level 122: [/input-12, 6766] 
split level 123: [/input-12, 4891] 
split level 124: [/input-4, 5028] 
split level 125: [/input-4, 8037] 
split level 126: [/input-4, 4743] 
split level 127: [/input-4, 4997] 
split level 128: [/input-12, 1254] 
split level 129: [/input-4, 3756] 
split level 130: [/input-4, 6364] 
split level 131: [/input-12, 6774] 
split level 132: [/input-12, 1354] 
split level 133: [/input-4, 7990] 
split level 134: [/input-12, 3956] 
split level 135: [/input-12, 1054] 
split level 136: [/input-12, 4888] 
split level 137: [/input-4, 5026] 
split level 138: [/input-12, 7874] 
split level 139: [/input-4, 2424] 
split level 140: [/input-12, 2570] 
split level 141: [/input-4, 4740] 
split level 142: [/input-12, 2027] 
split level 143: [/input-4, 5051] 
split level 144: [/input-4, 6294] 
split level 145: [/input-4, 2650] 
split level 146: [/input-12, 5418] 
split level 147: [/input-12, 779] 
split level 148: [/input-12, 1012] 
split level 149: [/input-12, 5787] 
split level 150: [/input-12, 1046] 
split level 151: [/input-4, 5020] 
split level 152: [/input-4, 4981] 
split level 153: [/input-12, 6762] 
split level 154: [/input-4, 4754] 
split level 155: [/input-4, 5009] 
split level 156: [/input-12, 5644] 
split level 157: [/input-4, 5720] 
split level 158: [/input-12, 5219] 
split level 159: [/input-12, 8054] 
split level 160: [/input-12, 1388] 
split level 161: [/input-4, 5868] 
split level 162: [/input-12, 4889] 
split level 163: [/input-12, 5909] 
split level 164: [/input-12, 2908] 
split level 165: [/input-12, 1069] 
split level 166: [/input-4, 5324] 
split level 167: [/input-4, 4780] 
split level 168: [/input-4, 5814] 
split level 169: [/input-12, 8019] 
split level 170: [/input-12, 7991] 
split level 171: [/input-4, 1684] 
split level 172: [/input-4, 7842] 
split level 173: [/input-4, 7975] 
split level 174: [/input-4, 4454] 
split level 175: [/input-4, 4712] 
split level 176: [/input-12, 2026] 
split level 177: [/input-4, 4771] 
split level 178: [/input-12, 7457] 
split level 179: [/input-4, 7841] 
split level 180: [/input-4, 6261] 
split level 181: [/input-4, 4757] 
split level 182: [/input-12, 2180] 
split level 183: [/input-4, 1656] 
split level 184: [/input-4, 6308] 
split level 185: [/input-4, 1708] 
split level 186: [/input-4, 2676] 
split level 187: [/input-4, 4986] 
split level 188: [/input-4, 6307] 
split level 189: [/input-4, 1621] 
split level 190: [/input-12, 2354] 
split level 191: [/input-4, 4796] 
split level 192: [/input-4, 419] 
split level 193: [/input-4, 7783] 
split level 194: [/input-4, 5178] 
split level 195: [/input-4, 4827] 
split level 196: [/input-4, 1185] 
split level 197: [/input-12, 2512] 
split level 198: [/input-4, 1724] 
split level 199: [/input-4, 4485] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.41484224796295166
10 lb beta sum: 0.0, worst -0.41484129428863525
Time: prepare 0.0116    bound 0.1402    transfer 0.0038    finalize 0.0087    func 0.1670    
Accumulated time: func 0.2425    prepare 0.0219    bound 0.2152    transfer 0.0039    finalize 0.0089    
all_split False
======================Cut inference begins======================
max lb tensor(-0.06276906) min lb tensor(-0.41483915)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.010156393051147461 
BICCOS Cumulative time: 0.010156393051147461
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.40611 (1), -0.40586 (1), -0.40565 (1), -0.40561 (1), -0.40552 (1), -0.40535 (1), -0.40510 (1), -0.40468 (1), -0.40433 (1), -0.40369 (1), -0.40336 (1), -0.40292 (1), -0.40279 (1), -0.40187 (1), -0.40180 (1), -0.40143 (1), -0.40105 (1), -0.40090 (1), -0.40062 (1), -0.39945 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.7679    set_bounds 0.0091    solve 0.1671    add 0.0826    
Accumulated time: pickout 0.0004    decision 0.7679    set_bounds 0.0091    solve 0.1671    add 0.0826    
Current (lb-rhs): -0.40611422061920166
50 domains visited
Cumulative time: 1.1198420524597168

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 230] [/input-16, 230] [/input-16, 10] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 230] 
split level 1: [/input-16, 10] [/input-16, 10] [/input-16, 64] [/input-16, 10] [/input-16, 64] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] 
split level 2: [/input-16, 64] [/input-16, 64] [/input-16, 225] [/input-16, 64] [/input-16, 225] [/input-16, 225] [/input-16, 64] [/input-16, 64] [/input-16, 225] [/input-16, 64] 
split level 3: [/input-16, 225] [/input-16, 225] [/input-16, 145] [/input-16, 225] [/input-16, 145] [/input-16, 145] [/input-16, 225] [/input-16, 145] [/input-16, 145] [/input-16, 225] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.37066876888275146
10 lb beta sum: 0.0, worst -0.37041783332824707
Time: prepare 0.0119    bound 0.1285    transfer 0.0028    finalize 0.0103    func 0.1562    
Accumulated time: func 0.3987    prepare 0.0341    bound 0.3436    transfer 0.0068    finalize 0.0193    
all_split False
======================Cut inference begins======================
max lb tensor(0.08940530) min lb tensor(-0.37033451)
Number of Verified Splits: 7 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.01234579086303711 
BICCOS Cumulative time: 0.02250218391418457
Preprocessing time: 0.011602640151977539 Inference time: 0.00034928321838378906 Add cuts time: 0.00014448165893554688 Cut analysis time: 0.0002493858337402344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18972 (2), -0.18953 (2), -0.18943 (2), -0.18938 (2), -0.18898 (2), -0.18833 (2), -0.18545 (2), -0.18438 (2), -0.18416 (2), -0.18277 (2), -0.18276 (2), -0.18094 (2), -0.18011 (2), -0.17845 (2), -0.17695 (2), -0.17040 (2), -0.16655 (2), -0.16520 (2), -0.16506 (2), -0.16470 (2), 
Length of domains: 50
Time: pickout 0.0009    decision 0.0248    set_bounds 0.0132    solve 0.1562    add 0.0814    
Accumulated time: pickout 0.0013    decision 0.7927    set_bounds 0.0224    solve 0.3233    add 0.1639    
Current (lb-rhs): -0.1897205114364624
100 domains visited
Cumulative time: 1.4094493389129639

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 230] [/input-16, 230] [/input-16, 10] [/input-16, 230] [/input-16, 64] [/input-16, 64] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 230] 
split level 1: [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 10] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 64] [/input-16, 10] 
split level 2: [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 225] [/input-16, 225] 
split level 3: [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 145] [/input-16, 145] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17473387718200684
10 lb beta sum: 0.22130829095840454, worst -0.17235282063484192
Time: prepare 0.0061    bound 0.1507    transfer 0.0053    finalize 0.0096    func 0.1744    
Accumulated time: func 0.5731    prepare 0.0405    bound 0.4943    transfer 0.0120    finalize 0.0289    
all_split False
======================Cut inference begins======================
max lb tensor(0.13197452) min lb tensor(-0.16876747)
Number of Verified Splits: 80 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 7
#cuts 4-6: 7
#cuts >= 20: 0
BICCOS time: 0.01726222038269043 
BICCOS Cumulative time: 0.039764404296875
Preprocessing time: 0.011620759963989258 Inference time: 0.003629446029663086 Add cuts time: 0.001491546630859375 Cut analysis time: 0.0005204677581787109
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04812 (3), -0.04774 (3), -0.04747 (3), -0.04733 (3), -0.04732 (3), -0.04709 (3), -0.04661 (3), -0.04606 (3), -0.04568 (3), -0.04551 (3), -0.04535 (3), -0.04482 (3), -0.04458 (3), -0.04438 (3), -0.04433 (3), -0.04404 (3), -0.04352 (3), -0.04349 (3), -0.04311 (3), -0.04216 (3), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0253    set_bounds 0.0152    solve 0.1745    add 0.0968    
Accumulated time: pickout 0.0019    decision 0.8180    set_bounds 0.0376    solve 0.4978    add 0.2607    
Current (lb-rhs): -0.04812061786651611
150 domains visited
Cumulative time: 1.739309310913086

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 10] [/input-16, 230] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 10] 
split level 1: [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 225] 
split level 2: [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 145] 
split level 3: [/input-16, 208] [/input-16, 208] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 208] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04124906659126282
10 lb beta sum: 0.19681715965270996, worst -0.280673623085022
Time: prepare 0.0059    bound 0.1495    transfer 0.0041    finalize 0.0083    func 0.1704    
Accumulated time: func 0.7435    prepare 0.0466    bound 0.6438    transfer 0.0161    finalize 0.0371    
all_split False
======================Cut inference begins======================
max lb tensor(0.14127314) min lb tensor(-0.03091778)
Number of Verified Splits: 381 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 12
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.03839445114135742 
BICCOS Cumulative time: 0.07815885543823242
Preprocessing time: 0.011522054672241211 Inference time: 0.020165681838989258 Add cuts time: 0.006127119064331055 Cut analysis time: 0.0005795955657958984
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0006    decision 0.0251    set_bounds 0.0154    solve 0.1706    add 0.0237    
Accumulated time: pickout 0.0025    decision 0.8431    set_bounds 0.0530    solve 0.6684    add 0.2844    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([230,  64, 225,  10]), tensor([-1., -1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([1.81062569e-06, 7.89487213e-02, 9.36854333e-02, 4.87383157e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([230,  64, 225,  10]), tensor([-1., -1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([1.81062569e-06, 7.89487213e-02, 9.36854333e-02, 1.21896192e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([230,  64, 225]), tensor([-1., -1.,  1.]), tensor([0, 0, 0]), tensor([1.81062569e-06, 7.89487213e-02, 4.83780354e-02]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([230,  64,  10, 225]), tensor([-1.,  1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([1.81062569e-06, 1.12247631e-01, 7.27166086e-02, 7.32844621e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([230,  64,  10, 225]), tensor([-1.,  1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([1.81062569e-06, 1.12247631e-01, 7.27166086e-02, 2.88298894e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([230,  64,  10]), tensor([-1.,  1.,  1.]), tensor([0, 0, 0]), tensor([1.81062569e-06, 1.12247631e-01, 1.16602704e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([230,  10]), tensor([ 1., -1.]), tensor([0, 0]), tensor([1.81062569e-06, 5.93121499e-02]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([230,  10]), tensor([1., 1.]), tensor([0, 0]), tensor([1.81062569e-06, 1.27638087e-01]), tensor([0, 1]))}
Shallow branching resets to n domains:  8
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.31800854206085205
10 lb beta sum: 0.462760329246521, worst -0.3133040964603424
Time: prepare 0.0004    bound 0.1461    transfer 0.0002    finalize 0.0004    func 0.1472    
Accumulated time: func 0.8906    prepare 0.0470    bound 0.7899    transfer 0.0163    finalize 0.0375    
After pruning, left:  3

Back to Regular BaB

BaB round 1
batch: 3
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 10] [/input-16, 64] [/input-16, 64] 
split level 1: [/input-16, 145] [/input-16, 225] [/input-16, 225] 
split level 2: [/input-16, 208] [/input-16, 145] [/input-16, 145] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5171842575073242, worst -0.1748127043247223
10 lb beta sum: 0.6215171217918396, worst -0.17101851105690002
Time: prepare 0.0012    bound 0.1478    transfer 0.0004    finalize 0.0006    func 0.1502    
Accumulated time: func 1.0408    prepare 0.0485    bound 0.9377    transfer 0.0166    finalize 0.0381    
all_split False
======================Cut inference begins======================
max lb tensor(0.25032255) min lb tensor(-0.17067721)
Number of Verified Splits: 11 of 24
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.5198955535888672, worst -0.09701976180076599
10 lb beta sum: 0.593970775604248, worst -0.013248706236481667
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 12
#cuts 4-6: 10
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.16239094734191895 
BICCOS Cumulative time: 0.24054980278015137
Preprocessing time: 0.001020669937133789 Inference time: 0.15979719161987305 Add cuts time: 0.0008103847503662109 Cut analysis time: 0.0007627010345458984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17068 (3), -0.14911 (3), -0.13370 (3), -0.11778 (3), -0.10633 (3), -0.08263 (3), -0.08218 (3), -0.06976 (3), -0.05480 (3), -0.04502 (3), -0.03889 (3), -0.03501 (3), -0.02745 (3), 
Length of domains: 13
Time: pickout 0.0004    decision 0.0171    set_bounds 0.0016    solve 0.1502    add 0.0016    
Accumulated time: pickout 0.0029    decision 0.8602    set_bounds 0.0546    solve 0.8186    add 0.2860    
Current (lb-rhs): -0.17067721486091614
163 domains visited
Cumulative time: 2.515083074569702

BaB round 2
batch: 13
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 208] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1598820686340332
10 lb beta sum: 0.6807012557983398, worst -0.15533605217933655
Time: prepare 0.0006    bound 0.1513    transfer 0.0003    finalize 0.0009    func 0.1532    
Accumulated time: func 1.1941    prepare 0.0493    bound 1.0889    transfer 0.0169    finalize 0.0390    
all_split False
======================Cut inference begins======================
max lb tensor(0.07423992) min lb tensor(-0.15514247)
Number of Verified Splits: 7 of 26
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17475193738937378
10 lb beta sum: 1.0122108459472656, worst -0.22912314534187317
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 12
#cuts 4-6: 13
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.15736699104309082 
BICCOS Cumulative time: 0.3979167938232422
Preprocessing time: 0.0011491775512695312 Inference time: 0.15458321571350098 Add cuts time: 0.0008082389831542969 Cut analysis time: 0.0008263587951660156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15514 (4), -0.13499 (4), -0.11896 (4), -0.10324 (4), -0.10015 (4), -0.09033 (4), -0.06906 (4), -0.06682 (4), -0.05446 (4), -0.05415 (4), -0.05399 (4), -0.04020 (4), -0.03782 (4), -0.02870 (4), -0.02221 (4), -0.02062 (4), -0.01698 (4), -0.01134 (4), -0.01074 (4), 
Length of domains: 19
Time: pickout 0.0005    decision 0.0158    set_bounds 0.0014    solve 0.1533    add 0.0014    
Accumulated time: pickout 0.0034    decision 0.8760    set_bounds 0.0561    solve 0.9719    add 0.2874    
Current (lb-rhs): -0.15514247119426727
182 domains visited
Cumulative time: 2.845073938369751

BaB round 3
batch: 19
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 7] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14399105310440063
10 lb beta sum: 0.5814259648323059, worst -0.13961189985275269
Time: prepare 0.0008    bound 0.1525    transfer 0.0005    finalize 0.0011    func 0.1551    
Accumulated time: func 1.3492    prepare 0.0503    bound 1.2414    transfer 0.0174    finalize 0.0401    
all_split False
======================Cut inference begins======================
max lb tensor(0.02748124) min lb tensor(-0.13951720)
Number of Verified Splits: 11 of 38
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16774415969848633
10 lb beta sum: 1.0300421714782715, worst -0.2545284628868103
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 12
#cuts 4-6: 15
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.15512371063232422 
BICCOS Cumulative time: 0.5530405044555664
Preprocessing time: 0.0014657974243164062 Inference time: 0.15165281295776367 Add cuts time: 0.0010421276092529297 Cut analysis time: 0.0009629726409912109
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13952 (5), -0.11891 (5), -0.10942 (5), -0.10309 (5), -0.08925 (5), -0.08651 (5), -0.08348 (5), -0.07571 (5), -0.07293 (5), -0.05784 (5), -0.05692 (5), -0.05198 (5), -0.04939 (5), -0.04321 (5), -0.03676 (5), -0.03651 (5), -0.03555 (5), -0.03153 (5), -0.02491 (5), -0.02029 (5), 
Length of domains: 27
Time: pickout 0.0005    decision 0.0160    set_bounds 0.0019    solve 0.1553    add 0.0020    
Accumulated time: pickout 0.0039    decision 0.8920    set_bounds 0.0580    solve 1.1272    add 0.2894    
Current (lb-rhs): -0.13951720297336578
209 domains visited
Cumulative time: 3.176114082336426

BaB round 4
batch: 27
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 84] [/input-16, 84] [/input-16, 84] [/input-16, 84] [/input-16, 84] [/input-16, 31] [/input-16, 84] [/input-16, 84] [/input-16, 84] [/input-16, 84] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13481605052947998
10 lb beta sum: 0.5231051445007324, worst -0.13050727546215057
Time: prepare 0.0010    bound 0.1508    transfer 0.0008    finalize 0.0012    func 0.1542    
Accumulated time: func 1.5034    prepare 0.0515    bound 1.3921    transfer 0.0182    finalize 0.0413    
all_split False
======================Cut inference begins======================
max lb tensor(0.05643636) min lb tensor(-0.13043427)
Number of Verified Splits: 18 of 54
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19342094659805298
10 lb beta sum: 0.8776246309280396, worst -0.21432438492774963
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 33.
#cuts 1-3: 12
#cuts 4-6: 17
#cuts 7-9: 4
#cuts >= 20: 0
BICCOS time: 0.1664280891418457 
BICCOS Cumulative time: 0.7194685935974121
Preprocessing time: 0.0018901824951171875 Inference time: 0.1625528335571289 Add cuts time: 0.0008006095886230469 Cut analysis time: 0.0011844635009765625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13043 (6), -0.10959 (6), -0.09977 (6), -0.09374 (6), -0.09009 (6), -0.07850 (6), -0.07669 (6), -0.07375 (6), -0.07083 (6), -0.06869 (6), -0.06694 (6), -0.06310 (6), -0.05284 (6), -0.04971 (6), -0.04729 (6), -0.04601 (6), -0.04308 (6), -0.04023 (6), -0.04004 (6), -0.03432 (6), 
Length of domains: 36
Time: pickout 0.0006    decision 0.0166    set_bounds 0.0026    solve 0.1542    add 0.0022    
Accumulated time: pickout 0.0044    decision 0.9086    set_bounds 0.0605    solve 1.2814    add 0.2916    
Current (lb-rhs): -0.13043427467346191
245 domains visited
Cumulative time: 3.519055128097534

BaB round 5
batch: 36
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1304340958595276
10 lb beta sum: 0.14768736064434052, worst -0.13034212589263916
Time: prepare 0.0013    bound 0.1532    transfer 0.0007    finalize 0.0024    func 0.1581    
Accumulated time: func 1.6615    prepare 0.0530    bound 1.5453    transfer 0.0189    finalize 0.0437    
all_split False
======================Cut inference begins======================
max lb tensor(0.12570387) min lb tensor(-0.13028032)
Number of Verified Splits: 37 of 72
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13377821445465088
10 lb beta sum: 0.574385941028595, worst -0.01801586151123047
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 33.
#cuts 1-3: 12
#cuts 4-6: 17
#cuts 7-9: 4
#cuts >= 20: 0
BICCOS time: 0.17711758613586426 
BICCOS Cumulative time: 0.8965861797332764
Preprocessing time: 0.0025429725646972656 Inference time: 0.17118477821350098 Add cuts time: 0.002227306365966797 Cut analysis time: 0.0011625289916992188
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13028 (7), -0.10933 (7), -0.09941 (7), -0.09358 (7), -0.08934 (7), -0.07822 (7), -0.07625 (7), -0.07335 (7), -0.06976 (7), -0.06651 (7), -0.06648 (7), -0.06278 (7), -0.05175 (7), -0.04850 (7), -0.04665 (7), -0.04601 (7), -0.04308 (7), -0.03992 (7), -0.03895 (7), -0.03325 (7), 
Length of domains: 35
Time: pickout 0.0005    decision 0.0170    set_bounds 0.0033    solve 0.1582    add 0.0016    
Accumulated time: pickout 0.0050    decision 0.9255    set_bounds 0.0639    solve 1.4396    add 0.2933    
Current (lb-rhs): -0.13028031587600708
280 domains visited
Cumulative time: 3.8773038387298584

BaB round 6
batch: 35
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 154] 
cut re-enabled after branching node selection
0 lb beta sum: 0.3468303084373474, worst -0.12548303604125977
10 lb beta sum: 0.3468303084373474, worst -0.12542086839675903
Time: prepare 0.0029    bound 0.1513    transfer 0.0006    finalize 0.0014    func 0.1568    
Accumulated time: func 1.8184    prepare 0.0562    bound 1.6967    transfer 0.0195    finalize 0.0451    
all_split False
======================Cut inference begins======================
max lb tensor(0.17907713) min lb tensor(-0.12541610)
Number of Verified Splits: 37 of 70
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.3485642075538635, worst -0.24973662197589874
10 lb beta sum: 0.6199741363525391, worst -0.15957984328269958
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 39.
#cuts 1-3: 12
#cuts 4-6: 20
#cuts 7-9: 7
#cuts >= 20: 0
BICCOS time: 0.17473173141479492 
BICCOS Cumulative time: 1.0713179111480713
Preprocessing time: 0.0024068355560302734 Inference time: 0.16808056831359863 Add cuts time: 0.002839326858520508 Cut analysis time: 0.0014050006866455078
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12542 (8), -0.10422 (8), -0.09476 (8), -0.09352 (8), -0.08375 (8), -0.07610 (8), -0.07364 (8), -0.06843 (8), -0.06617 (8), -0.06394 (8), -0.06259 (8), -0.06130 (8), -0.05148 (8), -0.04658 (8), -0.04218 (8), -0.04201 (8), -0.04158 (8), -0.03975 (8), -0.03854 (8), -0.03073 (8), 
Length of domains: 33
Time: pickout 0.0006    decision 0.0147    set_bounds 0.0032    solve 0.1569    add 0.0016    
Accumulated time: pickout 0.0055    decision 0.9403    set_bounds 0.0671    solve 1.5964    add 0.2948    
Current (lb-rhs): -0.125416100025177
313 domains visited
Cumulative time: 4.229456424713135

BaB round 7
batch: 33
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11991685628890991
10 lb beta sum: 0.09631780534982681, worst -0.11990147829055786
Time: prepare 0.0012    bound 0.1514    transfer 0.0006    finalize 0.0014    func 0.1551    
Accumulated time: func 1.9735    prepare 0.0576    bound 1.8481    transfer 0.0201    finalize 0.0465    
all_split False
======================Cut inference begins======================
max lb tensor(0.31428033) min lb tensor(-0.11989903)
Number of Verified Splits: 32 of 66
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 15
#cuts 4-6: 18
#cuts 7-9: 5
#cuts >= 20: 0
BICCOS time: 0.009036779403686523 
BICCOS Cumulative time: 1.0803546905517578
Preprocessing time: 0.0023577213287353516 Inference time: 0.003238677978515625 Add cuts time: 0.0021123886108398438 Cut analysis time: 0.0013279914855957031
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11990 (9), -0.09885 (9), -0.08920 (9), -0.08790 (9), -0.07760 (9), -0.07060 (9), -0.06859 (9), -0.06233 (9), -0.06079 (9), -0.05775 (9), -0.05696 (9), -0.05588 (9), -0.04568 (9), -0.04101 (9), -0.03970 (9), -0.03709 (9), -0.03605 (9), -0.03598 (9), -0.03262 (9), -0.02620 (9), 
Length of domains: 34
Time: pickout 0.0006    decision 0.0168    set_bounds 0.0030    solve 0.1552    add 0.0018    
Accumulated time: pickout 0.0061    decision 0.9571    set_bounds 0.0701    solve 1.7516    add 0.2966    
Current (lb-rhs): -0.11989903450012207
347 domains visited
Cumulative time: 4.4162232875823975

BaB round 8
batch: 34
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 31] [/input-16, 31] [/input-16, 31] [/input-16, 31] [/input-16, 31] [/input-16, 31] [/input-16, 84] [/input-16, 31] [/input-16, 31] [/input-16, 31] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10464513301849365
10 lb beta sum: 0.08591574430465698, worst -0.10459929704666138
Time: prepare 0.0012    bound 0.1512    transfer 0.0006    finalize 0.0014    func 0.1549    
Accumulated time: func 2.1284    prepare 0.0590    bound 1.9993    transfer 0.0207    finalize 0.0480    
all_split False
======================Cut inference begins======================
max lb tensor(0.30282670) min lb tensor(-0.10458827)
Number of Verified Splits: 24 of 68
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 14
#cuts 4-6: 9
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.006852388381958008 
BICCOS Cumulative time: 1.0872070789337158
Preprocessing time: 0.0023674964904785156 Inference time: 0.0025033950805664062 Add cuts time: 0.0011446475982666016 Cut analysis time: 0.0008368492126464844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10459 (10), -0.10361 (10), -0.08324 (10), -0.08274 (10), -0.07441 (10), -0.07408 (10), -0.07306 (10), -0.06824 (10), -0.06186 (10), -0.06121 (10), -0.05713 (10), -0.05300 (10), -0.05090 (10), -0.04993 (10), -0.04763 (10), -0.04583 (10), -0.04470 (10), -0.04453 (10), -0.04395 (10), -0.04198 (10), 
Length of domains: 44
Time: pickout 0.0006    decision 0.0167    set_bounds 0.0031    solve 0.1550    add 0.0021    
Accumulated time: pickout 0.0067    decision 0.9738    set_bounds 0.0732    solve 1.9065    add 0.2987    
Current (lb-rhs): -0.10458827018737793
391 domains visited
Cumulative time: 4.600821495056152

BaB round 9
batch: 44
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 180] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09187895059585571
10 lb beta sum: 0.1527697741985321, worst -0.09185463190078735
Time: prepare 0.0015    bound 0.1522    transfer 0.0008    finalize 0.0019    func 0.1573    
Accumulated time: func 2.2857    prepare 0.0607    bound 2.1515    transfer 0.0215    finalize 0.0499    
all_split False
======================Cut inference begins======================
max lb tensor(0.33538425) min lb tensor(-0.09185153)
Number of Verified Splits: 43 of 88
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 14
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.00908207893371582 
BICCOS Cumulative time: 1.0962891578674316
Preprocessing time: 0.0030024051666259766 Inference time: 0.00455474853515625 Add cuts time: 0.0008335113525390625 Cut analysis time: 0.0006914138793945312
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09185 (11), -0.09079 (11), -0.09057 (11), -0.08975 (11), -0.07033 (11), -0.06981 (11), -0.06953 (11), -0.06909 (11), -0.06196 (11), -0.06123 (11), -0.06083 (11), -0.06030 (11), -0.06008 (11), -0.05887 (11), -0.05550 (11), -0.05475 (11), -0.04506 (11), -0.04315 (11), -0.03966 (11), -0.03870 (11), 
Length of domains: 45
Time: pickout 0.0006    decision 0.0173    set_bounds 0.0040    solve 0.1573    add 0.0024    
Accumulated time: pickout 0.0072    decision 0.9910    set_bounds 0.0772    solve 2.0639    add 0.3011    
Current (lb-rhs): -0.09185153245925903
436 domains visited
Cumulative time: 4.791932106018066

BaB round 10
batch: 45
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 97] [/input-16, 97] [/input-16, 97] [/input-16, 97] [/input-16, 97] [/input-16, 97] [/input-16, 97] [/input-16, 97] [/input-12, 2597] [/input-16, 97] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08733886480331421
10 lb beta sum: 0.2085438221693039, worst -0.08732342720031738
Time: prepare 0.0017    bound 0.1526    transfer 0.0008    finalize 0.0019    func 0.1576    
Accumulated time: func 2.4433    prepare 0.0626    bound 2.3041    transfer 0.0222    finalize 0.0517    
all_split False
======================Cut inference begins======================
max lb tensor(0.28829128) min lb tensor(-0.08732069)
Number of Verified Splits: 58 of 90
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 11
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.010901212692260742 
BICCOS Cumulative time: 1.1071903705596924
Preprocessing time: 0.0029604434967041016 Inference time: 0.0064699649810791016 Add cuts time: 0.0010800361633300781 Cut analysis time: 0.00039076805114746094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08732 (12), -0.08621 (12), -0.08604 (12), -0.08519 (12), -0.06642 (12), -0.05970 (12), -0.05862 (12), -0.05552 (12), -0.05481 (12), -0.05414 (12), -0.03963 (12), -0.03883 (12), -0.03880 (12), -0.03654 (12), -0.03563 (12), -0.03445 (12), -0.03343 (12), -0.03328 (12), -0.03263 (12), -0.03255 (12), 
Length of domains: 32
Time: pickout 0.0006    decision 0.0175    set_bounds 0.0040    solve 0.1577    add 0.0023    
Accumulated time: pickout 0.0078    decision 1.0085    set_bounds 0.0813    solve 2.2215    add 0.3034    
Current (lb-rhs): -0.08732068538665771
468 domains visited
Cumulative time: 4.9854817390441895

BaB round 11
batch: 32
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 82] [/input-12, 2597] [/input-12, 2917] [/input-16, 82] [/input-16, 82] [/input-16, 97] [/input-16, 82] [/input-12, 2597] [/input-16, 82] [/input-16, 82] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08589261770248413
10 lb beta sum: 0.17845433950424194, worst -0.0858837366104126
Time: prepare 0.0015    bound 0.1523    transfer 0.0006    finalize 0.0014    func 0.1563    
Accumulated time: func 2.5995    prepare 0.0642    bound 2.4564    transfer 0.0228    finalize 0.0531    
all_split False
======================Cut inference begins======================
max lb tensor(0.31279486) min lb tensor(-0.08587879)
Number of Verified Splits: 21 of 64
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 12
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.005663156509399414 
BICCOS Cumulative time: 1.1128535270690918
Preprocessing time: 0.002234935760498047 Inference time: 0.0024101734161376953 Add cuts time: 0.000492095947265625 Cut analysis time: 0.0005259513854980469
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08588 (13), -0.08471 (13), -0.08455 (13), -0.08366 (13), -0.05504 (13), -0.05405 (13), -0.05400 (13), -0.05380 (13), -0.05240 (13), -0.05219 (13), -0.05182 (13), -0.05157 (13), -0.05141 (13), -0.05084 (13), -0.03609 (13), -0.03458 (13), -0.03394 (13), -0.03390 (13), -0.03300 (13), -0.03269 (13), 
Length of domains: 43
Time: pickout 0.0006    decision 0.0169    set_bounds 0.0026    solve 0.1563    add 0.0018    
Accumulated time: pickout 0.0084    decision 1.0254    set_bounds 0.0839    solve 2.3779    add 0.3052    
Current (lb-rhs): -0.08587878942489624
511 domains visited
Cumulative time: 5.169613361358643

BaB round 12
batch: 43
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4682] [/input-16, 218] [/input-16, 82] [/input-12, 4682] [/input-16, 218] [/input-12, 2441] [/input-16, 218] [/input-16, 82] [/input-16, 82] [/input-16, 82] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08334094285964966
10 lb beta sum: 0.3226146996021271, worst -0.08011369407176971
Time: prepare 0.0020    bound 0.1628    transfer 0.0012    finalize 0.0030    func 0.1696    
Accumulated time: func 2.7691    prepare 0.0664    bound 2.6192    transfer 0.0240    finalize 0.0562    
all_split False
======================Cut inference begins======================
max lb tensor(0.19489828) min lb tensor(-0.08000207)
Number of Verified Splits: 16 of 86
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 12
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.005656719207763672 
BICCOS Cumulative time: 1.1185102462768555
Preprocessing time: 0.0028760433197021484 Inference time: 0.0018482208251953125 Add cuts time: 0.0004100799560546875 Cut analysis time: 0.0005223751068115234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08000 (14), -0.07994 (14), -0.07993 (14), -0.07903 (14), -0.05219 (14), -0.05003 (14), -0.04902 (14), -0.04899 (14), -0.04779 (14), -0.04743 (14), -0.04695 (14), -0.04692 (14), -0.04673 (14), -0.04596 (14), -0.04327 (14), -0.04143 (14), -0.02957 (14), -0.02951 (14), -0.02797 (14), -0.02790 (14), 
Length of domains: 70
Time: pickout 0.0005    decision 0.0149    set_bounds 0.0035    solve 0.1697    add 0.0022    
Accumulated time: pickout 0.0089    decision 1.0403    set_bounds 0.0874    solve 2.5476    add 0.3074    
Current (lb-rhs): -0.0800020694732666
581 domains visited
Cumulative time: 5.366421222686768

BaB round 13
batch: 70
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2597] [/input-16, 82] [/input-12, 2441] [/input-12, 7987] [/input-16, 82] [/input-12, 4682] [/input-16, 82] [/input-12, 2441] [/input-12, 2917] [/input-12, 2441] 
cut re-enabled after branching node selection
0 lb beta sum: 0.39185577630996704, worst -0.07862257957458496
10 lb beta sum: 0.5412458777427673, worst -0.07861733436584473
Time: prepare 0.0063    bound 0.1628    transfer 0.0013    finalize 0.0035    func 0.1749    
Accumulated time: func 2.9441    prepare 0.0730    bound 2.7819    transfer 0.0253    finalize 0.0596    
all_split False
======================Cut inference begins======================
max lb tensor(0.25509125) min lb tensor(-0.07861513)
Number of Verified Splits: 31 of 140
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 13
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.009234189987182617 
BICCOS Cumulative time: 1.127744436264038
Preprocessing time: 0.00440669059753418 Inference time: 0.003612518310546875 Add cuts time: 0.0005705356597900391 Cut analysis time: 0.0006444454193115234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07862 (15), -0.07741 (15), -0.07734 (15), -0.07647 (15), -0.05219 (15), -0.04856 (15), -0.04673 (15), -0.04639 (15), -0.04614 (15), -0.04515 (15), -0.04476 (15), -0.04422 (15), -0.04312 (15), -0.04294 (15), -0.04163 (15), -0.04020 (15), -0.03974 (15), -0.03949 (15), -0.03931 (15), -0.03890 (15), 
Length of domains: 109
Time: pickout 0.0006    decision 0.0163    set_bounds 0.0062    solve 0.1750    add 0.0033    
Accumulated time: pickout 0.0095    decision 1.0566    set_bounds 0.0936    solve 2.7226    add 0.3106    
Current (lb-rhs): -0.07861512899398804
690 domains visited
Cumulative time: 5.577507972717285

BaB round 14
batch: 109
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 218] [/input-12, 2917] [/input-12, 4682] [/input-12, 1179] [/input-12, 2917] [/input-12, 2434] [/input-12, 2917] [/input-12, 4682] [/input-12, 482] [/input-12, 4682] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07861512899398804
10 lb beta sum: 0.45190107822418213, worst -0.07861506938934326
Time: prepare 0.0045    bound 0.1691    transfer 0.0015    finalize 0.0065    func 0.1831    
Accumulated time: func 3.1272    prepare 0.0777    bound 2.9510    transfer 0.0268    finalize 0.0662    
all_split False
======================Cut inference begins======================
max lb tensor(0.22811830) min lb tensor(-0.07861400)
Number of Verified Splits: 39 of 218
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 13
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.01317906379699707 
BICCOS Cumulative time: 1.1409235000610352
Preprocessing time: 0.00658416748046875 Inference time: 0.004850149154663086 Add cuts time: 0.0012183189392089844 Cut analysis time: 0.00052642822265625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07861 (16), -0.07741 (16), -0.07734 (16), -0.07708 (16), -0.07647 (16), -0.07616 (16), -0.07611 (16), -0.07543 (16), -0.05175 (16), -0.04673 (16), -0.04646 (16), -0.04598 (16), -0.04467 (16), -0.04409 (16), -0.04388 (16), -0.04387 (16), -0.04376 (16), -0.04307 (16), -0.04286 (16), -0.04266 (16), 
Length of domains: 179
Time: pickout 0.0008    decision 0.0210    set_bounds 0.0096    solve 0.1832    add 0.0060    
Accumulated time: pickout 0.0103    decision 1.0777    set_bounds 0.1032    solve 2.9058    add 0.3166    
Current (lb-rhs): -0.0786139965057373
869 domains visited
Cumulative time: 5.811787843704224

BaB round 15
batch: 179
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2441] [/input-12, 2434] [/input-12, 7986] [/input-12, 482] [/input-16, 218] [/input-12, 2441] [/input-12, 2434] [/input-12, 2441] [/input-12, 2434] [/input-12, 2434] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07646888494491577
10 lb beta sum: 0.43835312128067017, worst -0.07646960020065308
Time: prepare 0.0073    bound 0.1710    transfer 0.0026    finalize 0.1719    func 0.3552    
Accumulated time: func 3.4824    prepare 0.0853    bound 3.1220    transfer 0.0295    finalize 0.2381    
all_split False
======================Cut inference begins======================
max lb tensor(0.24161667) min lb tensor(-0.07646745)
Number of Verified Splits: 86 of 358
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 14
#cuts 4-6: 2
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.025721311569213867 
BICCOS Cumulative time: 1.166644811630249
Preprocessing time: 0.010908126831054688 Inference time: 0.011505126953125 Add cuts time: 0.002711057662963867 Cut analysis time: 0.0005970001220703125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07647 (17), -0.07536 (17), -0.07505 (17), -0.07494 (17), -0.07439 (17), -0.07406 (17), -0.07390 (17), -0.07326 (17), -0.07275 (17), -0.07228 (17), -0.07137 (17), -0.07127 (17), -0.07080 (17), -0.06990 (17), -0.06959 (17), -0.06895 (17), -0.04400 (17), -0.04387 (17), -0.04387 (17), -0.04373 (17), 
Length of domains: 272
Time: pickout 0.0010    decision 0.0273    set_bounds 0.0152    solve 0.3554    add 0.0063    
Accumulated time: pickout 0.0113    decision 1.1049    set_bounds 0.1184    solve 3.2611    add 0.3229    
Current (lb-rhs): -0.07646745443344116
1141 domains visited
Cumulative time: 6.243700265884399

BaB round 16
batch: 256
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 482] [/input-16, 218] [/input-12, 482] [/input-12, 2441] [/input-12, 1179] [/input-12, 482] [/input-12, 7987] [/input-16, 218] [/input-12, 7987] [/input-12, 1565] 
cut re-enabled after branching node selection
0 lb beta sum: 0.46576327085494995, worst -0.07529312372207642
10 lb beta sum: 0.48085838556289673, worst -0.07528805732727051
Time: prepare 0.0224    bound 0.1699    transfer 0.0043    finalize 0.0203    func 0.2203    
Accumulated time: func 3.7027    prepare 0.1079    bound 3.2919    transfer 0.0337    finalize 0.2584    
all_split False
======================Cut inference begins======================
max lb tensor(0.23114699) min lb tensor(-0.07528597)
Number of Verified Splits: 111 of 512
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 14
#cuts 4-6: 7
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.033411502838134766 
BICCOS Cumulative time: 1.2000563144683838
Preprocessing time: 0.014675140380859375 Inference time: 0.015913009643554688 Add cuts time: 0.002164602279663086 Cut analysis time: 0.0006587505340576172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07529 (18), -0.07375 (18), -0.07356 (18), -0.07323 (18), -0.07225 (18), -0.07217 (18), -0.07207 (18), -0.07157 (18), -0.07146 (18), -0.07143 (18), -0.07117 (18), -0.07027 (18), -0.07025 (18), -0.07015 (18), -0.06953 (18), -0.06947 (18), -0.06941 (18), -0.06938 (18), -0.06923 (18), -0.06845 (18), 
Length of domains: 417
Time: pickout 0.0096    decision 0.0285    set_bounds 0.0229    solve 0.2205    add 0.0092    
Accumulated time: pickout 0.0209    decision 1.1334    set_bounds 0.1412    solve 3.4816    add 0.3321    
Current (lb-rhs): -0.07528597116470337
1542 domains visited
current_vram/total_varm: 9.4GB/99.9GB, batch_size increase to 512
Cumulative time: 6.569433212280273

BaB round 17
batch: 417
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1564] [/input-12, 1564] [/input-16, 218] [/input-12, 2434] [/input-12, 7987] [/input-12, 2434] [/input-12, 1564] [/input-12, 2441] [/input-12, 5788] [/input-12, 1179] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07361632585525513
10 lb beta sum: 0.32106468081474304, worst -0.0736091136932373
Time: prepare 0.0160    bound 0.2103    transfer 0.0106    finalize 0.0327    func 0.2750    
Accumulated time: func 3.9777    prepare 0.1241    bound 3.5022    transfer 0.0443    finalize 0.2911    
all_split False
======================Cut inference begins======================
max lb tensor(0.23939660) min lb tensor(-0.07360631)
Number of Verified Splits: 205 of 834
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 14
#cuts 4-6: 11
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.060343265533447266 
BICCOS Cumulative time: 1.260399580001831
Preprocessing time: 0.02413797378540039 Inference time: 0.03110480308532715 Add cuts time: 0.0042951107025146484 Cut analysis time: 0.0008053779602050781
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07361 (19), -0.07241 (19), -0.07205 (19), -0.07109 (19), -0.07108 (19), -0.07038 (19), -0.07031 (19), -0.06993 (19), -0.06974 (19), -0.06931 (19), -0.06929 (19), -0.06907 (19), -0.06904 (19), -0.06896 (19), -0.06838 (19), -0.06831 (19), -0.06823 (19), -0.06810 (19), -0.06802 (19), -0.06783 (19), 
Length of domains: 629
Time: pickout 0.0019    decision 0.0421    set_bounds 0.0350    solve 0.2752    add 0.0154    
Accumulated time: pickout 0.0227    decision 1.1756    set_bounds 0.1762    solve 3.7568    add 0.3475    
Current (lb-rhs): -0.07360631227493286
2171 domains visited
Cumulative time: 7.001864194869995

BaB round 18
batch: 512
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2441] [/input-12, 2441] [/input-12, 2441] [/input-16, 218] [/input-12, 2441] [/input-16, 82] [/input-12, 1179] [/input-16, 218] [/input-12, 2597] [/input-16, 218] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07153952121734619
10 lb beta sum: 0.2765660881996155, worst -0.0715019702911377
Time: prepare 0.0200    bound 0.2230    transfer 0.0171    finalize 0.0379    func 0.3055    
Accumulated time: func 4.2833    prepare 0.1444    bound 3.7252    transfer 0.0614    finalize 0.3291    
all_split False
======================Cut inference begins======================
max lb tensor(0.17264143) min lb tensor(-0.07148343)
Number of Verified Splits: 205 of 1024
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 16
#cuts 4-6: 4
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.06612443923950195 
BICCOS Cumulative time: 1.326524019241333
Preprocessing time: 0.03066730499267578 Inference time: 0.030945777893066406 Add cuts time: 0.003888845443725586 Cut analysis time: 0.0006225109100341797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07148 (20), -0.07074 (20), -0.06991 (20), -0.06950 (20), -0.06941 (20), -0.06939 (20), -0.06871 (20), -0.06862 (20), -0.06838 (19), -0.06826 (20), -0.06820 (20), -0.06785 (20), -0.06776 (19), -0.06761 (20), -0.06760 (20), -0.06739 (20), -0.06732 (20), -0.06730 (19), -0.06665 (20), -0.06660 (20), 
Length of domains: 936
Time: pickout 0.0174    decision 0.0469    set_bounds 0.0450    solve 0.3057    add 0.0202    
Accumulated time: pickout 0.0401    decision 1.2225    set_bounds 0.2213    solve 4.0626    add 0.3677    
Current (lb-rhs): -0.07148343324661255
2990 domains visited
current_vram/total_varm: 9.4GB/99.9GB, batch_size increase to 1024
Cumulative time: 7.507920742034912

BaB round 19
batch: 936
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2434] [/input-12, 1843] [/input-12, 2580] [/input-12, 482] [/input-12, 1387] [/input-12, 2580] [/input-12, 2434] [/input-12, 4682] [/input-12, 7987] [/input-12, 482] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06966876983642578
10 lb beta sum: 0.25851884484291077, worst -0.06964719295501709
Time: prepare 0.0358    bound 0.3519    transfer 0.0309    finalize 0.0693    func 0.5003    
Accumulated time: func 4.7835    prepare 0.1805    bound 4.0770    transfer 0.0923    finalize 0.3984    
all_split False
======================Cut inference begins======================
max lb tensor(0.02344167) min lb tensor(-0.06963515)
Number of Verified Splits: 347 of 1872
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 19
#cuts 4-6: 5
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.11921167373657227 
BICCOS Cumulative time: 1.4457356929779053
Preprocessing time: 0.05830192565917969 Inference time: 0.05373811721801758 Add cuts time: 0.006298065185546875 Cut analysis time: 0.000873565673828125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06964 (21), -0.06860 (21), -0.06809 (21), -0.06773 (21), -0.06765 (21), -0.06759 (21), -0.06746 (21), -0.06732 (21), -0.06703 (21), -0.06678 (21), -0.06667 (20), -0.06655 (21), -0.06643 (21), -0.06635 (21), -0.06627 (21), -0.06619 (21), -0.06603 (21), -0.06575 (21), -0.06562 (20), -0.06560 (21), 
Length of domains: 1525
Time: pickout 0.0037    decision 0.0792    set_bounds 0.0794    solve 0.5011    add 0.0331    
Accumulated time: pickout 0.0438    decision 1.3017    set_bounds 0.3007    solve 4.5637    add 0.4008    
Current (lb-rhs): -0.06963515281677246
4515 domains visited
Cumulative time: 8.331130266189575

BaB round 20
batch: 1024
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7987] [/input-12, 4395] [/input-12, 5788] [/input-12, 5788] [/input-12, 1565] [/input-12, 5358] [/input-12, 7987] [/input-12, 4682] [/input-12, 1387] [/input-12, 2434] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06810593605041504
10 lb beta sum: 0.23092447221279144, worst -0.06808185577392578
Time: prepare 0.0391    bound 0.3734    transfer 0.0331    finalize 0.0753    func 0.5351    
Accumulated time: func 5.3186    prepare 0.2198    bound 4.4504    transfer 0.1254    finalize 0.4736    
all_split False
======================Cut inference begins======================
max lb tensor(0.01990449) min lb tensor(-0.06806886)
Number of Verified Splits: 362 of 2048
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 19
#cuts 4-6: 6
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.12848567962646484 
BICCOS Cumulative time: 1.5742213726043701
Preprocessing time: 0.06259870529174805 Inference time: 0.058545827865600586 Add cuts time: 0.0064945220947265625 Cut analysis time: 0.0008466243743896484
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06807 (22), -0.06773 (21), -0.06759 (21), -0.06700 (22), -0.06652 (22), -0.06619 (21), -0.06609 (22), -0.06592 (22), -0.06575 (21), -0.06571 (22), -0.06546 (21), -0.06542 (22), -0.06538 (21), -0.06518 (22), -0.06496 (22), -0.06488 (22), -0.06482 (21), -0.06479 (22), -0.06473 (21), -0.06467 (22), 
Length of domains: 2187
Time: pickout 0.0044    decision 0.2364    set_bounds 0.0876    solve 0.5355    add 0.0473    
Accumulated time: pickout 0.0482    decision 1.5381    set_bounds 0.3882    solve 5.0992    add 0.4481    
Current (lb-rhs): -0.06806886196136475
6201 domains visited
current_vram/total_varm: 9.4GB/99.9GB, batch_size increase to 2048
Cumulative time: 9.380125761032104

BaB round 21
batch: 2048
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2354] [/input-12, 1179] [/input-12, 2434] [/input-12, 2354] [/input-12, 7987] [/input-12, 7987] [/input-12, 1564] [/input-12, 1388] [/input-12, 1387] [/input-12, 4682] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06639808416366577
10 lb beta sum: 0.22489938139915466, worst -0.06656497716903687
Time: prepare 0.0805    bound 0.6660    transfer 0.0653    finalize 0.3192    func 1.1587    
Accumulated time: func 6.4774    prepare 0.3006    bound 5.1164    transfer 0.1907    finalize 0.7928    
all_split False
======================Cut inference begins======================
max lb tensor(0.01994705) min lb tensor(-0.06639808)
Number of Verified Splits: 668 of 4096
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 14
#cuts 4-6: 11
#cuts 7-9: 5
#cuts >= 20: 0
BICCOS time: 0.25559258460998535 
BICCOS Cumulative time: 1.8298139572143555
Preprocessing time: 0.12480711936950684 Inference time: 0.11601090431213379 Add cuts time: 0.013565778732299805 Cut analysis time: 0.0012087821960449219
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06640 (22), -0.06615 (22), -0.06588 (23), -0.06587 (23), -0.06518 (22), -0.06495 (23), -0.06461 (22), -0.06452 (23), -0.06432 (23), -0.06418 (22), -0.06410 (23), -0.06399 (22), -0.06391 (23), -0.06389 (22), -0.06384 (22), -0.06384 (23), -0.06362 (23), -0.06341 (23), -0.06325 (22), -0.06316 (22), 
Length of domains: 3567
Time: pickout 0.0080    decision 0.1638    set_bounds 0.1779    solve 1.1598    add 0.0916    
Accumulated time: pickout 0.0562    decision 1.7018    set_bounds 0.5661    solve 6.2590    add 0.5397    
Current (lb-rhs): -0.06639808416366577
9629 domains visited
current_vram/total_varm: 9.4GB/99.9GB, batch_size increase to 4096
Cumulative time: 11.251265287399292

BaB round 22
batch: 3567
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 482] [/input-12, 5788] [/input-12, 2580] [/input-12, 482] [/input-12, 1387] [/input-12, 2580] [/input-12, 2434] [/input-12, 1179] [/input-12, 4891] [/input-12, 7986] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06477689743041992
10 lb beta sum: 0.19879278540611267, worst -0.06488531827926636
Time: prepare 0.1592    bound 1.1006    transfer 0.1141    finalize 0.2739    func 1.6954    
Accumulated time: func 8.1728    prepare 0.4600    bound 6.2170    transfer 0.3049    finalize 1.0666    
all_split False
======================Cut inference begins======================
max lb tensor(0.03274683) min lb tensor(-0.06476653)
Number of Verified Splits: 1297 of 7134
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 43.
#cuts 1-3: 15
#cuts 4-6: 17
#cuts 7-9: 11
#cuts >= 20: 0
BICCOS time: 0.4878852367401123 
BICCOS Cumulative time: 2.3176991939544678
Preprocessing time: 0.22473382949829102 Inference time: 0.23497700691223145 Add cuts time: 0.026254892349243164 Cut analysis time: 0.0019195079803466797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06477 (23), -0.06420 (24), -0.06409 (23), -0.06397 (23), -0.06381 (24), -0.06323 (24), -0.06286 (24), -0.06281 (23), -0.06270 (23), -0.06267 (23), -0.06265 (24), -0.06245 (24), -0.06241 (23), -0.06221 (24), -0.06218 (24), -0.06210 (23), -0.06206 (23), -0.06201 (23), -0.06200 (23), -0.06191 (24), 
Length of domains: 5837
Time: pickout 0.1260    decision 0.2669    set_bounds 0.4826    solve 1.6980    add 0.1440    
Accumulated time: pickout 0.1822    decision 1.9688    set_bounds 1.0487    solve 7.9570    add 0.6837    
Current (lb-rhs): -0.064766526222229
15466 domains visited
Cumulative time: 14.480836153030396

BaB round 23
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5358] [/input-12, 2434] [/input-12, 5788] [/input-12, 5358] [/input-12, 1843] [/input-12, 1179] [/input-12, 1556] [/input-12, 2597] [/input-12, 5788] [/input-12, 5788] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06279027462005615
10 lb beta sum: 0.21756257116794586, worst -0.06283122301101685
Time: prepare 0.1786    bound 1.2526    transfer 0.1276    finalize 0.3032    func 2.1231    
Accumulated time: func 10.2958    prepare 0.6390    bound 7.4696    transfer 0.4325    finalize 1.3699    
all_split False
======================Cut inference begins======================
max lb tensor(0.03137001) min lb tensor(-0.06275308)
Number of Verified Splits: 1237 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 52.
#cuts 1-3: 16
#cuts 4-6: 22
#cuts 7-9: 14
#cuts >= 20: 0
BICCOS time: 0.5370514392852783 
BICCOS Cumulative time: 2.854750633239746
Preprocessing time: 0.26044511795043945 Inference time: 0.23843955993652344 Add cuts time: 0.03586602210998535 Cut analysis time: 0.002300739288330078
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06420 (24), -0.06381 (24), -0.06275 (24), -0.06265 (24), -0.06245 (24), -0.06229 (24), -0.06221 (24), -0.06218 (25), -0.06218 (24), -0.06202 (24), -0.06200 (23), -0.06177 (24), -0.06172 (24), -0.06157 (24), -0.06115 (25), -0.06107 (24), -0.06099 (24), -0.06097 (24), -0.06090 (24), -0.06081 (24), 
Length of domains: 8696
Time: pickout 0.0183    decision 0.4805    set_bounds 0.3641    solve 2.1251    add 0.2020    
Accumulated time: pickout 0.2005    decision 2.4493    set_bounds 1.4128    solve 10.0821    add 0.8857    
Current (lb-rhs): -0.06419628858566284
22421 domains visited
current_vram/total_varm: 19.6GB/99.9GB, batch_size increase to 8192
Cumulative time: 18.23652720451355

BaB round 24
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1387] [/input-12, 2441] [/input-12, 1387] [/input-12, 5358] [/input-12, 881] [/input-12, 5358] [/input-12, 5358] [/input-12, 2441] [/input-12, 2434] [/input-12, 5358] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06317365169525146
10 lb beta sum: 0.20264559984207153, worst -0.06315737962722778
Time: prepare 0.3640    bound 2.4375    transfer 0.2478    finalize 0.6189    func 3.7787    
Accumulated time: func 14.0745    prepare 1.0033    bound 9.9071    transfer 0.6803    finalize 1.9887    
all_split False
======================Cut inference begins======================
max lb tensor(0.03966125) min lb tensor(-0.06315273)
Number of Verified Splits: 2523 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 70.
#cuts 1-3: 16
#cuts 4-6: 41
#cuts 7-9: 13
#cuts >= 20: 0
BICCOS time: 1.3994300365447998 
BICCOS Cumulative time: 4.254180669784546
Preprocessing time: 0.5313887596130371 Inference time: 0.7940764427185059 Add cuts time: 0.07099366188049316 Cut analysis time: 0.002971172332763672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06315 (25), -0.06213 (25), -0.06153 (25), -0.06125 (25), -0.06117 (25), -0.06105 (25), -0.06088 (24), -0.06078 (25), -0.06054 (25), -0.06033 (25), -0.06032 (26), -0.06032 (24), -0.05994 (25), -0.05980 (25), -0.05978 (25), -0.05971 (25), -0.05962 (25), -0.05959 (25), -0.05945 (25), -0.05943 (26), 
Length of domains: 14365
Time: pickout 0.0340    decision 0.6150    set_bounds 1.1840    solve 3.7835    add 0.3924    
Accumulated time: pickout 0.2345    decision 3.0643    set_bounds 2.5968    solve 13.8656    add 1.2780    
Current (lb-rhs): -0.0631527304649353
36282 domains visited
current_vram/total_varm: 36.8GB/99.9GB, batch_size increase to 16384
Cumulative time: 25.696695804595947

BaB round 25
batch: 14365
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1387] [/input-12, 7987] [/input-12, 1387] [/input-12, 7900] [/input-12, 1556] [/input-12, 1843] [/input-12, 2580] [/input-12, 1843] [/input-12, 5358] [/input-12, 1556] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06132388114929199
10 lb beta sum: 0.18575842678546906, worst -0.06130188703536987
Time: prepare 0.6710    bound 5.6251    transfer 0.4452    finalize 1.7940    func 9.0764    
Accumulated time: func 23.1509    prepare 1.6748    bound 15.5322    transfer 1.1255    finalize 3.7827    
all_split False
======================Cut inference begins======================
max lb tensor(0.28703094) min lb tensor(-0.06129628)
Number of Verified Splits: 4690 of 28730
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 106.
#cuts 1-3: 16
#cuts 4-6: 55
#cuts 7-9: 35
#cuts >= 20: 0
BICCOS time: 2.0495007038116455 
BICCOS Cumulative time: 6.303681373596191
Preprocessing time: 0.9265131950378418 Inference time: 1.0032532215118408 Add cuts time: 0.11491203308105469 Cut analysis time: 0.004822254180908203
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06130 (26), -0.06040 (26), -0.06007 (26), -0.05968 (26), -0.05949 (26), -0.05947 (26), -0.05940 (26), -0.05931 (26), -0.05928 (25), -0.05892 (25), -0.05879 (26), -0.05876 (26), -0.05870 (26), -0.05850 (26), -0.05842 (26), -0.05838 (26), -0.05834 (27), -0.05827 (26), -0.05824 (26), -0.05814 (26), 
Length of domains: 24040
Time: pickout 0.5310    decision 1.0550    set_bounds 1.8877    solve 9.0814    add 1.3870    
Accumulated time: pickout 0.7655    decision 4.1193    set_bounds 4.4845    solve 22.9470    add 2.6650    
Current (lb-rhs): -0.061296284198760986
60322 domains visited
Cumulative time: 41.901909589767456

BaB round 26
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5358] [/input-12, 1387] [/input-12, 5358] [/input-12, 1843] [/input-12, 5548] [/input-12, 2449] [/input-12, 1556] [/input-12, 5548] [/input-12, 7987] [/input-12, 1843] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05933147668838501
10 lb beta sum: 0.20179471373558044, worst -0.05931359529495239
Time: prepare 0.7642    bound 6.4014    transfer 0.4862    finalize 2.2874    func 10.1627    
Accumulated time: func 33.3136    prepare 2.4396    bound 21.9336    transfer 1.6117    finalize 6.0701    
all_split False
======================Cut inference begins======================
max lb tensor(0.37375951) min lb tensor(-0.05930811)
Number of Verified Splits: 5367 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 104.
#cuts 1-3: 17
#cuts 4-6: 45
#cuts 7-9: 40
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 2.962800979614258 
BICCOS Cumulative time: 9.26648235321045
Preprocessing time: 1.1412909030914307 Inference time: 1.6695280075073242 Add cuts time: 0.1468830108642578 Cut analysis time: 0.005099058151245117
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05949 (26), -0.05931 (27), -0.05866 (27), -0.05850 (26), -0.05835 (27), -0.05825 (27), -0.05814 (26), -0.05787 (27), -0.05772 (27), -0.05770 (27), -0.05769 (27), -0.05768 (26), -0.05745 (26), -0.05743 (26), -0.05742 (27), -0.05742 (27), -0.05736 (26), -0.05733 (27), -0.05722 (26), -0.05703 (27), 
Length of domains: 35057
Time: pickout 0.0884    decision 2.5718    set_bounds 2.3958    solve 10.1725    add 1.8090    
Accumulated time: pickout 0.8539    decision 6.6911    set_bounds 6.8803    solve 33.1195    add 4.4740    
Current (lb-rhs): -0.059493958950042725
87723 domains visited
Cumulative time: 62.159475326538086

BaB round 27
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-4, 8053] [/input-12, 1843] [/input-4, 8053] [/input-4, 8053] [/input-12, 7900] [/input-4, 8053] [/input-12, 1843] [/input-12, 1387] [/input-4, 8053] [/input-12, 5350] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.058035850524902344
10 lb beta sum: 0.2898446321487427, worst -0.058027446269989014
Time: prepare 0.7927    bound 6.3899    transfer 0.4838    finalize 2.8208    func 10.7129    
Accumulated time: func 44.0264    prepare 3.2329    bound 28.3236    transfer 2.0955    finalize 8.8909    
all_split False
======================Cut inference begins======================
max lb tensor(0.61702442) min lb tensor(-0.05801123)
Number of Verified Splits: 14893 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 35.
#cuts 1-3: 26
#cuts 4-6: 8
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 5.2394092082977295 
BICCOS Cumulative time: 14.505891561508179
Preprocessing time: 1.113187313079834 Inference time: 3.74519681930542 Add cuts time: 0.37944889068603516 Cut analysis time: 0.0015761852264404297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05866 (27), -0.05835 (27), -0.05801 (27), -0.05792 (28), -0.05787 (27), -0.05742 (27), -0.05718 (28), -0.05702 (27), -0.05702 (27), -0.05702 (27), -0.05683 (27), -0.05678 (27), -0.05677 (27), -0.05673 (27), -0.05668 (27), -0.05667 (27), -0.05664 (26), -0.05652 (26), -0.05645 (27), -0.05644 (27), 
Length of domains: 36548
Time: pickout 0.0918    decision 2.1536    set_bounds 2.0624    solve 10.7233    add 1.2611    
Accumulated time: pickout 0.9457    decision 8.8447    set_bounds 8.9427    solve 43.8428    add 5.7351    
Current (lb-rhs): -0.05866426229476929
105598 domains visited
Cumulative time: 84.0597357749939

BaB round 28
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2914] [/input-4, 8053] [/input-12, 7900] [/input-12, 1565] [/input-12, 7909] [/input-12, 1843] [/input-12, 7909] [/input-12, 5350] [/input-12, 1843] [/input-12, 1843] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05722761154174805
10 lb beta sum: 1.3569872379302979, worst -0.0551055371761322
Time: prepare 1.0203    bound 6.1999    transfer 0.4881    finalize 2.9820    func 10.9228    
Accumulated time: func 54.9492    prepare 4.2538    bound 34.5234    transfer 2.5837    finalize 11.8729    
all_split False
======================Cut inference begins======================
max lb tensor(1.29988265) min lb tensor(-0.05509602)
Number of Verified Splits: 28439 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 8.788985252380371 
BICCOS Cumulative time: 23.29487681388855
Preprocessing time: 1.194958209991455 Inference time: 6.933865785598755 Add cuts time: 0.6592452526092529 Cut analysis time: 0.0009160041809082031
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05801 (27), -0.05792 (28), -0.05718 (28), -0.05667 (27), -0.05644 (27), -0.05631 (27), -0.05629 (27), -0.05625 (28), -0.05623 (28), -0.05621 (27), -0.05619 (29), -0.05616 (28), -0.05603 (28), -0.05598 (27), -0.05596 (27), -0.05596 (27), -0.05596 (28), -0.05590 (27), -0.05590 (28), -0.05585 (28), 
Length of domains: 24493
Time: pickout 0.1052    decision 2.1534    set_bounds 2.1200    solve 10.9354    add 0.3785    
Accumulated time: pickout 1.0509    decision 10.9982    set_bounds 11.0627    solve 54.7782    add 6.1136    
Current (lb-rhs): -0.05801123380661011
109927 domains visited
Cumulative time: 109.07589507102966

BaB round 29
batch: 16384
splitting decisions: 
split level 0: [/input-12, 880] [/input-12, 2914] [/input-12, 4466] [/input-12, 1387] [/input-12, 1843] [/input-4, 8053] [/input-4, 8053] [/input-12, 2914] [/input-12, 1843] [/input-4, 8053] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05719125270843506
10 lb beta sum: 0.229035884141922, worst -0.03001534938812256
Time: prepare 0.8260    bound 3.2745    transfer 0.4844    finalize 2.2901    func 7.1004    
Accumulated time: func 62.0496    prepare 5.0804    bound 37.7979    transfer 3.0681    finalize 14.1630    
all_split False
======================Cut inference begins======================
max lb tensor(0.40334514) min lb tensor(8.94069672e-07)
Number of Verified Splits: 32768 of 32768
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 1.8075447082519531 
BICCOS Cumulative time: 25.102421522140503
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05718 (28), -0.05619 (29), -0.05581 (28), -0.05519 (28), -0.05510 (28), -0.05468 (28), -0.05454 (28), -0.05441 (28), -0.05440 (28), -0.05433 (28), -0.05431 (28), -0.05427 (28), -0.05425 (28), -0.05420 (28), -0.05416 (29), -0.05406 (28), -0.05396 (28), -0.05372 (28), -0.05368 (29), -0.05336 (28), 
Length of domains: 8109
Time: pickout 0.1230    decision 2.3468    set_bounds 2.1193    solve 7.1121    add 0.0097    
Accumulated time: pickout 1.1739    decision 13.3450    set_bounds 13.1821    solve 61.8903    add 6.1232    
Current (lb-rhs): -0.057177722454071045
109927 domains visited
Cumulative time: 123.01819205284119

BaB round 30
batch: 8109
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1843] [/input-4, 8053] [/input-12, 1843] [/input-12, 7987] [/input-4, 8053] [/input-12, 5358] [/input-12, 5358] [/input-12, 5548] [/input-4, 8053] [/input-4, 8053] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05647820234298706
10 lb beta sum: 0.2337540090084076, worst -0.02652817964553833
Time: prepare 0.4160    bound 1.6562    transfer 0.2491    finalize 0.6477    func 3.0756    
Accumulated time: func 65.1252    prepare 5.4968    bound 39.4541    transfer 3.3172    finalize 14.8107    
all_split False
======================Cut inference begins======================
max lb tensor(0.40795171) min lb tensor(1.43051147e-06)
Number of Verified Splits: 16218 of 16218
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.9533431529998779 
BICCOS Cumulative time: 26.05576467514038
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0582    decision 0.5974    set_bounds 0.7185    solve 3.0805    add 0.0026    
Accumulated time: pickout 1.2322    decision 13.9424    set_bounds 13.9005    solve 64.9708    add 6.1258    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
109927 domains visited
Cumulative time: 128.57953023910522


Properties batch 4, size 1
Remaining timeout: 69.58564853668213
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 69.58548521995544
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 69.58543968200684
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 69.58541250228882
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 69.58539009094238
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 130.4147 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 12, vnnlib ID: 12 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-42.39326477, -43.28479004, -40.01828384, -40.44086838, -42.31431961,
         -39.90922546, -45.13525772, -39.78482819, -43.98271561, -41.72237396]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1176]; unstable size 1176; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 403, 1, 1176] with unstable size 402 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 18, 1, 1176] with unstable size 17 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1176] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [402]; unstable size 402; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 18, 1, 402] with unstable size 17 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 402] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [17]; unstable size 17; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.50014174,  1.94941711, -0.62115979,  0.07996321,  1.73836648,
         -0.46112755,  4.64945030,  3.07452154,  0.77500087]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-42.39326477, -43.28479004, -40.01828384, -40.44086838, -42.31431961,
         -39.90922546, -45.13525772, -39.78482819, -43.98271561, -41.72237396]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-43.12695694, -43.97860336, -40.55604935, -41.20946884, -43.03757477,
          -40.69074249, -45.85614395, -40.73860931, -44.63560104, -42.47509003],
         [-43.12695694, -43.97860336, -40.55604935, -41.20946884, -43.03757477,
          -40.69074249, -45.85614395, -40.73860931, -44.63560104, -42.47509003]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.18255997, -0.04786682]]], device='cuda:0')
number of violation:  2
Attack finished in 0.0161 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0599 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 13, vnnlib ID: 13 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-69.58036804, -68.23900604, -72.20265961, -73.98355865, -74.29905701,
         -74.83490753, -73.73511505, -76.19071198, -70.38562775, -71.32451630]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1364]; unstable size 1364; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 481, 1, 1364] with unstable size 480 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 33, 1, 1364] with unstable size 32 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1364] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [480]; unstable size 480; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 33, 1, 480] with unstable size 32 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 480] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [32]; unstable size 32; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 32] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.50704956,  1.63922596,  3.68693161,  3.40120697,  4.48710918,
          3.38283539,  5.03883839,  0.34705257,  2.01091838]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-69.58036804, -68.23900604, -72.20265961, -73.98355865, -74.29905701,
         -74.83490753, -73.73511505, -76.19071198, -70.38562775, -71.32451630]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.48it/s]100%|██████████| 1/1 [00:00<00:00,  8.47it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-67.19033813, -66.62797546, -69.75138855, -71.67034912, -71.79393768,
          -72.52391815, -71.40412903, -73.78275299, -68.02102661, -69.39611816]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.56236267]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1207 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 24.19083023071289
alpha/beta optimization time: 1.4300978183746338
initial alpha-crown bounds: tensor([[-0.44245338,  1.71655083,  3.76597786,  3.49993134,  4.56639624,
          3.45605755,  5.15339947,  0.41723156,  2.05773926]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.44245338439941406
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.40667581558228
Verifying property 0 with 1 instances.
##### Instance 13 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.44245338]], device='cuda:0') need to verify.
Model prediction is: tensor([-69.58036804, -68.23900604, -72.20265961, -73.98355865, -74.29905701,
        -74.83490753, -73.73511505, -76.19071198, -70.38562775, -71.32451630],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.44245338]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1364
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 469
Node /39 input 0: size torch.Size([250]) unstable 32
-----------------
# of unstable neurons: 1865
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00011324882507324219
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.44245243072509766
10 lb beta sum: 0.0, worst -0.44246387481689453
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0726    transfer 0.0001    finalize 0.0002    func 0.0732    
Accumulated time: func 0.0732    prepare 0.0002    bound 0.0726    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 54] 
split level 1: [/input-16, 95] 
split level 2: [/input-16, 28] 
split level 3: [/input-16, 18] 
split level 4: [/input-16, 145] 
split level 5: [/input-16, 212] 
split level 6: [/input-16, 31] 
split level 7: [/input-16, 23] 
split level 8: [/input-16, 97] 
split level 9: [/input-16, 171] 
split level 10: [/input-12, 3604] 
split level 11: [/input-12, 1699] 
split level 12: [/input-12, 2790] 
split level 13: [/input-16, 104] 
split level 14: [/input-16, 24] 
split level 15: [/input-12, 797] 
split level 16: [/input-12, 6819] 
split level 17: [/input-12, 3872] 
split level 18: [/input-12, 4114] 
split level 19: [/input-12, 2468] 
split level 20: [/input-16, 89] 
split level 21: [/input-12, 3627] 
split level 22: [/input-16, 72] 
split level 23: [/input-12, 5340] 
split level 24: [/input-12, 6260] 
split level 25: [/input-12, 7443] 
split level 26: [/input-12, 1244] 
split level 27: [/input-16, 7] 
split level 28: [/input-12, 4189] 
split level 29: [/input-12, 219] 
split level 30: [/input-12, 5283] 
split level 31: [/input-4, 5829] 
split level 32: [/input-12, 2932] 
split level 33: [/input-12, 93] 
split level 34: [/input-12, 2467] 
split level 35: [/input-12, 547] 
split level 36: [/input-12, 1253] 
split level 37: [/input-12, 1772] 
split level 38: [/input-12, 6476] 
split level 39: [/input-12, 3876] 
split level 40: [/input-12, 2448] 
split level 41: [/input-4, 6344] 
split level 42: [/input-12, 2035] 
split level 43: [/input-12, 7003] 
split level 44: [/input-12, 2660] 
split level 45: [/input-12, 494] 
split level 46: [/input-12, 220] 
split level 47: [/input-12, 2465] 
split level 48: [/input-4, 4998] 
split level 49: [/input-4, 5043] 
split level 50: [/input-12, 6252] 
split level 51: [/input-12, 6875] 
split level 52: [/input-12, 5329] 
split level 53: [/input-12, 238] 
split level 54: [/input-12, 7980] 
split level 55: [/input-12, 6250] 
split level 56: [/input-12, 2661] 
split level 57: [/input-4, 5845] 
split level 58: [/input-12, 3092] 
split level 59: [/input-12, 475] 
split level 60: [/input-12, 485] 
split level 61: [/input-12, 1242] 
split level 62: [/input-12, 1260] 
split level 63: [/input-12, 2604] 
split level 64: [/input-16, 21] 
split level 65: [/input-12, 2602] 
split level 66: [/input-12, 5522] 
split level 67: [/input-12, 7850] 
split level 68: [/input-12, 2466] 
split level 69: [/input-12, 1354] 
split level 70: [/input-12, 2653] 
split level 71: [/input-12, 5731] 
split level 72: [/input-12, 5345] 
split level 73: [/input-12, 2033] 
split level 74: [/input-12, 1580] 
split level 75: [/input-4, 6549] 
split level 76: [/input-4, 5044] 
split level 77: [/input-12, 218] 
split level 78: [/input-4, 5847] 
split level 79: [/input-12, 2667] 
split level 80: [/input-4, 7825] 
split level 81: [/input-12, 2034] 
split level 82: [/input-12, 7121] 
split level 83: [/input-12, 4178] 
split level 84: [/input-4, 2710] 
split level 85: [/input-12, 5553] 
split level 86: [/input-12, 1362] 
split level 87: [/input-12, 2644] 
split level 88: [/input-12, 1365] 
split level 89: [/input-12, 5333] 
split level 90: [/input-4, 1241] 
split level 91: [/input-12, 7440] 
split level 92: [/input-12, 5554] 
split level 93: [/input-12, 6243] 
split level 94: [/input-4, 7812] 
split level 95: [/input-12, 2662] 
split level 96: [/input-4, 2692] 
split level 97: [/input-4, 5579] 
split level 98: [/input-4, 2787] 
split level 99: [/input-12, 3476] 
split level 100: [/input-4, 4825] 
split level 101: [/input-12, 5535] 
split level 102: [/input-12, 5734] 
split level 103: [/input-12, 3857] 
split level 104: [/input-4, 1735] 
split level 105: [/input-12, 4433] 
split level 106: [/input-12, 6994] 
split level 107: [/input-12, 2036] 
split level 108: [/input-4, 5827] 
split level 109: [/input-12, 230] 
split level 110: [/input-12, 3466] 
split level 111: [/input-12, 2464] 
split level 112: [/input-12, 2601] 
split level 113: [/input-12, 1074] 
split level 114: [/input-12, 3947] 
split level 115: [/input-12, 7708] 
split level 116: [/input-4, 2200] 
split level 117: [/input-12, 2645] 
split level 118: [/input-4, 4788] 
split level 119: [/input-12, 1745] 
split level 120: [/input-4, 3203] 
split level 121: [/input-12, 5543] 
split level 122: [/input-12, 2670] 
split level 123: [/input-12, 2006] 
split level 124: [/input-12, 7986] 
split level 125: [/input-4, 6806] 
split level 126: [/input-12, 1234] 
split level 127: [/input-12, 2603] 
split level 128: [/input-12, 3957] 
split level 129: [/input-4, 4503] 
split level 130: [/input-4, 5491] 
split level 131: [/input-4, 5080] 
split level 132: [/input-12, 7835] 
split level 133: [/input-4, 1715] 
split level 134: [/input-4, 5830] 
split level 135: [/input-12, 1235] 
split level 136: [/input-4, 6364] 
split level 137: [/input-4, 4262] 
split level 138: [/input-4, 4807] 
split level 139: [/input-4, 2753] 
split level 140: [/input-4, 7845] 
split level 141: [/input-4, 1207] 
split level 142: [/input-4, 4771] 
split level 143: [/input-12, 3879] 
split level 144: [/input-4, 3291] 
split level 145: [/input-4, 1716] 
split level 146: [/input-4, 2754] 
split level 147: [/input-12, 1075] 
split level 148: [/input-12, 6242] 
split level 149: [/input-4, 5763] 
split level 150: [/input-12, 210] 
split level 151: [/input-12, 469] 
split level 152: [/input-4, 6867] 
split level 153: [/input-4, 2932] 
split level 154: [/input-4, 4828] 
split level 155: [/input-12, 6850] 
split level 156: [/input-12, 2605] 
split level 157: [/input-12, 3848] 
split level 158: [/input-4, 6345] 
split level 159: [/input-12, 3861] 
split level 160: [/input-4, 6324] 
split level 161: [/input-4, 5846] 
split level 162: [/input-4, 8154] 
split level 163: [/input-4, 5848] 
split level 164: [/input-4, 4531] 
split level 165: [/input-12, 7006] 
split level 166: [/input-4, 5861] 
split level 167: [/input-4, 3704] 
split level 168: [/input-16, 115] 
split level 169: [/input-12, 1086] 
split level 170: [/input-12, 7331] 
split level 171: [/input-4, 8153] 
split level 172: [/input-12, 2594] 
split level 173: [/input-4, 6342] 
split level 174: [/input-4, 6853] 
split level 175: [/input-4, 6276] 
split level 176: [/input-12, 3473] 
split level 177: [/input-4, 4549] 
split level 178: [/input-4, 1688] 
split level 179: [/input-4, 5828] 
split level 180: [/input-4, 4805] 
split level 181: [/input-12, 4587] 
split level 182: [/input-12, 7312] 
split level 183: [/input-12, 2473] 
split level 184: [/input-4, 2695] 
split level 185: [/input-4, 4569] 
split level 186: [/input-16, 84] 
split level 187: [/input-4, 1349] 
split level 188: [/input-4, 7996] 
split level 189: [/input-16, 225] 
split level 190: [/input-4, 3029] 
split level 191: [/input-4, 4984] 
split level 192: [/input-4, 6837] 
split level 193: [/input-4, 4568] 
split level 194: [/input-4, 4740] 
split level 195: [/input-4, 2788] 
split level 196: [/input-4, 7909] 
split level 197: [/input-4, 1733] 
split level 198: [/input-4, 5862] 
split level 199: [/input-4, 3033] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4423503875732422
10 lb beta sum: 0.0, worst -0.4423408508300781
Time: prepare 0.0116    bound 0.1318    transfer 0.0047    finalize 0.0133    func 0.1640    
Accumulated time: func 0.2372    prepare 0.0218    bound 0.2044    transfer 0.0048    finalize 0.0135    
all_split False
======================Cut inference begins======================
max lb tensor(0.13734818) min lb tensor(-0.44233704)
Number of Verified Splits: 1 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.010793685913085938 
BICCOS Cumulative time: 0.010793685913085938
Preprocessing time: 0.010087251663208008 Inference time: 8.440017700195312e-05 Add cuts time: 6.580352783203125e-05 Cut analysis time: 0.0005562305450439453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.41628 (1), -0.41608 (1), -0.41578 (1), -0.41575 (1), -0.41573 (1), -0.41491 (1), -0.41489 (1), -0.41480 (1), -0.41473 (1), -0.41347 (1), -0.41293 (1), -0.41291 (1), -0.41267 (1), -0.41263 (1), -0.41201 (1), -0.41093 (1), -0.40906 (1), -0.40895 (1), -0.40630 (1), -0.40594 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.7663    set_bounds 0.0102    solve 0.1641    add 0.0873    
Accumulated time: pickout 0.0004    decision 0.7663    set_bounds 0.0102    solve 0.1641    add 0.0873    
Current (lb-rhs): -0.41628074645996094
50 domains visited
Cumulative time: 1.1193840503692627

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 95] [/input-16, 54] [/input-16, 54] [/input-16, 54] [/input-16, 54] [/input-16, 54] [/input-16, 54] [/input-16, 54] [/input-16, 54] [/input-16, 54] 
split level 1: [/input-16, 28] [/input-16, 95] [/input-16, 95] [/input-16, 28] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] 
split level 2: [/input-16, 18] [/input-16, 28] [/input-16, 28] [/input-16, 18] [/input-16, 28] [/input-16, 28] [/input-16, 18] [/input-16, 18] [/input-16, 28] [/input-16, 28] 
split level 3: [/input-16, 31] [/input-16, 18] [/input-16, 31] [/input-16, 31] [/input-16, 18] [/input-16, 18] [/input-16, 31] [/input-16, 31] [/input-16, 18] [/input-16, 18] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3920173645019531
10 lb beta sum: 0.19632111489772797, worst -0.38617801666259766
Time: prepare 0.0068    bound 0.1574    transfer 0.0029    finalize 0.0093    func 0.1791    
Accumulated time: func 0.4163    prepare 0.0289    bound 0.3618    transfer 0.0077    finalize 0.0229    
all_split False
======================Cut inference begins======================
max lb tensor(0.14489031) min lb tensor(-0.38351536)
Number of Verified Splits: 10 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.012691020965576172 
BICCOS Cumulative time: 0.02348470687866211
Preprocessing time: 0.011708974838256836 Inference time: 0.0004756450653076172 Add cuts time: 0.0001723766326904297 Cut analysis time: 0.00033402442932128906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10879 (2), -0.10758 (2), -0.10694 (2), -0.10583 (2), -0.10498 (2), -0.10239 (2), -0.10174 (2), -0.09931 (2), -0.09774 (2), -0.09763 (2), -0.09743 (2), -0.09620 (2), -0.09609 (2), -0.09526 (2), -0.09297 (2), -0.09201 (2), -0.09161 (2), -0.09085 (2), -0.08935 (2), -0.08859 (2), 
Length of domains: 50
Time: pickout 0.0007    decision 0.0249    set_bounds 0.0129    solve 0.1791    add 0.0907    
Accumulated time: pickout 0.0010    decision 0.7912    set_bounds 0.0231    solve 0.3433    add 0.1780    
Current (lb-rhs): -0.10878658294677734
100 domains visited
Cumulative time: 1.440685510635376

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 54] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 54] [/input-16, 54] [/input-16, 95] [/input-16, 54] [/input-16, 54] 
split level 1: [/input-16, 95] [/input-16, 28] [/input-16, 28] [/input-16, 145] [/input-16, 145] [/input-16, 28] [/input-16, 95] [/input-16, 28] [/input-16, 95] [/input-16, 95] 
split level 2: [/input-16, 28] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 28] 
split level 3: [/input-16, 31] [/input-16, 31] [/input-16, 31] [/input-16, 31] [/input-16, 31] [/input-16, 31] [/input-16, 31] [/input-16, 31] [/input-16, 31] [/input-16, 31] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09349536895751953
10 lb beta sum: 0.4631868600845337, worst -0.1000693216919899
Time: prepare 0.0066    bound 0.1488    transfer 0.0038    finalize 0.0113    func 0.1738    
Accumulated time: func 0.5901    prepare 0.0357    bound 0.5106    transfer 0.0114    finalize 0.0342    
all_split False
======================Cut inference begins======================
max lb tensor(0.47665608) min lb tensor(-0.04820108)
Number of Verified Splits: 390 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.03751873970031738 
BICCOS Cumulative time: 0.06100344657897949
Preprocessing time: 0.011697053909301758 Inference time: 0.017226696014404297 Add cuts time: 0.008318901062011719 Cut analysis time: 0.0002760887145996094
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0006    decision 0.0251    set_bounds 0.0155    solve 0.1739    add 0.0192    
Accumulated time: pickout 0.0017    decision 0.8163    set_bounds 0.0386    solve 0.5172    add 0.1972    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([28, 54]), tensor([-1., -1.]), tensor([0, 0]), tensor([0.00034731, 0.09660248]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([28, 54, 95]), tensor([-1.,  1., -1.]), tensor([0, 0, 0]), tensor([0.00034731, 0.28013140, 0.07996373]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([28, 54, 95]), tensor([-1.,  1.,  1.]), tensor([0, 0, 0]), tensor([0.00034731, 0.28013140, 0.14790921]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([28, 95]), tensor([ 1., -1.]), tensor([0, 0]), tensor([0.00034731, 0.08738713]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([28, 95, 54]), tensor([ 1.,  1., -1.]), tensor([0, 0, 0]), tensor([0.00034731, 0.22009949, 0.12188725]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([28, 95, 54]), tensor([1., 1., 1.]), tensor([0, 0, 0]), tensor([0.00034731, 0.22009949, 0.21588425]), tensor([0, 1, 2]))}
Shallow branching resets to n domains:  6
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.23236370086669922
10 lb beta sum: 0.6037203669548035, worst -0.10413569211959839
Time: prepare 0.0004    bound 0.1541    transfer 0.0002    finalize 0.0003    func 0.1550    
Accumulated time: func 0.7451    prepare 0.0361    bound 0.6647    transfer 0.0116    finalize 0.0345    
After pruning, left:  2

Back to Regular BaB

BaB round 1
batch: 2
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 95] [/input-16, 54] 
split level 1: [/input-16, 18] [/input-16, 18] 
split level 2: [/input-16, 31] [/input-16, 31] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2557483911514282, worst -0.06349694728851318
10 lb beta sum: 1.2557483911514282, worst -0.06298768520355225
Time: prepare 0.0009    bound 0.1461    transfer 0.0003    finalize 0.0006    func 0.1481    
Accumulated time: func 0.8932    prepare 0.0372    bound 0.8108    transfer 0.0119    finalize 0.0351    
all_split False
======================Cut inference begins======================
max lb tensor(0.59855139) min lb tensor(-0.06276929)
Number of Verified Splits: 12 of 16
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 1.2557485103607178, worst -0.22340917587280273
10 lb beta sum: 1.315215826034546, worst -0.05271339416503906
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.15731072425842285 
BICCOS Cumulative time: 0.21831417083740234
Preprocessing time: 0.0008473396301269531 Inference time: 0.15584707260131836 Add cuts time: 0.0003337860107421875 Cut analysis time: 0.00028252601623535156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06277 (3), -0.05813 (3), -0.05002 (3), -0.04796 (3), 
Length of domains: 4
Time: pickout 0.0004    decision 0.0129    set_bounds 0.0012    solve 0.1481    add 0.0010    
Accumulated time: pickout 0.0021    decision 0.8293    set_bounds 0.0398    solve 0.6653    add 0.1982    
Current (lb-rhs): -0.06276929378509521
104 domains visited
Cumulative time: 2.2058727741241455

BaB round 2
batch: 4
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] 
split level 1: [/input-16, 97] [/input-16, 97] [/input-16, 97] [/input-16, 97] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2557483911514282, worst -0.005419135093688965
10 lb beta sum: 1.2557483911514282, worst -0.005054831504821777
Time: prepare 0.0009    bound 0.1443    transfer 0.0002    finalize 0.0005    func 0.1460    
Accumulated time: func 1.0392    prepare 0.0382    bound 0.9551    transfer 0.0121    finalize 0.0356    
all_split False
======================Cut inference begins======================
max lb tensor(0.06267786) min lb tensor(-0.00490987)
Number of Verified Splits: 12 of 16
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 1.2557485103607178, worst -0.15407896041870117
10 lb beta sum: 1.2557485103607178, worst -0.1522965431213379
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.15170574188232422 
BICCOS Cumulative time: 0.37001991271972656
Preprocessing time: 0.0008287429809570312 Inference time: 0.1507861614227295 Add cuts time: 7.62939453125e-05 Cut analysis time: 1.4543533325195312e-05
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00491 (5), -0.00437 (5), -0.00173 (5), -0.00121 (5), 
Length of domains: 4
Time: pickout 0.0005    decision 0.0131    set_bounds 0.0011    solve 0.1460    add 0.0009    
Accumulated time: pickout 0.0026    decision 0.8424    set_bounds 0.0409    solve 0.8113    add 0.1991    
Current (lb-rhs): -0.004909873008728027
108 domains visited
Cumulative time: 2.5194830894470215

BaB round 3
batch: 4
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 212] [/input-16, 212] [/input-16, 212] [/input-16, 212] 
split level 1: [/input-16, 171] [/input-16, 171] [/input-16, 171] [/input-16, 171] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2557483911514282, worst 0.013755440711975098

all verified at 0th iter
Time: prepare 0.0009    bound 0.0060    transfer 0.0002    finalize 0.0005    func 0.0076    
Accumulated time: func 1.0468    prepare 0.0393    bound 0.9611    transfer 0.0123    finalize 0.0361    
all_split False
======================Cut inference begins======================
max lb tensor(0.33328402) min lb tensor(0.01375544)
Number of Verified Splits: 16 of 16
No cut inferred: All or none verified.
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.0007970333099365234 
BICCOS Cumulative time: 0.3708169460296631
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0131    set_bounds 0.0012    solve 0.0076    add 0.0000    
Accumulated time: pickout 0.0030    decision 0.8554    set_bounds 0.0421    solve 0.8189    add 0.1991    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
108 domains visited
Cumulative time: 2.5427770614624023


Properties batch 1, size 1
Remaining timeout: 195.59911489486694
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 195.5990285873413
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 195.59900212287903
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 195.59855699539185
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 195.59853339195251
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 195.59851336479187
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 195.59841918945312
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 195.59839987754822
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 4.4017 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 14, vnnlib ID: 14 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-56.00324249, -54.34321594, -58.57629395, -57.76290131, -58.02016449,
         -58.21171570, -57.70610428, -57.29775238, -56.38084030, -51.24348450]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1045]; unstable size 1045; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 83, 1, 1045] with unstable size 82 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 26, 1, 1045] with unstable size 25 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1045] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [545]; unstable size 545; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 26, 1, 545] with unstable size 25 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 545] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [25]; unstable size 25; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.17335129, 1.76476765, 5.30617380, 4.85003948, 4.63025522, 5.29446602,
         4.43446064, 4.03263378, 3.69016790]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0419 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 15, vnnlib ID: 15 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-52.16014481, -54.04909515, -49.91300583, -48.34402847, -49.31958008,
         -48.32622528, -51.18414688, -49.45466614, -53.95164108, -53.55084991]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1178]; unstable size 1178; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 480, 1, 1178] with unstable size 479 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 25, 1, 1178] with unstable size 24 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1178] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [479]; unstable size 479; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 25, 1, 479] with unstable size 24 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 479] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [24]; unstable size 24; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.56415725,  4.13158941,  0.65676141,  0.03761315, -0.15753347,
          2.08208847, -0.10211390,  4.14495182,  3.78941774]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-52.16014481, -54.04909515, -49.91300583, -48.34402847, -49.31958008,
         -48.32622528, -51.18414688, -49.45466614, -53.95164108, -53.55084991]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-52.16013336, -54.04909515, -49.91300964, -48.34402847, -49.31958389,
          -48.32622147, -51.18414688, -49.45465851, -53.95164108, -53.55085754],
         [-52.16013336, -54.04909515, -49.91300964, -48.34402847, -49.31958389,
          -48.32622147, -51.18414688, -49.45465851, -53.95164108, -53.55085754]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.01780701,  1.11063004]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.51904786,  1.58253992,  1.59841299,  ..., -1.63968253,
            -1.60793638, -1.65555561],
           [ 1.55079389,  1.61428595,  1.64603198,  ..., -1.65555561,
            -1.60793638, -1.67142856],
           [ 1.59841299,  1.66190505,  1.67777801,  ..., -1.68730164,
            -1.70317459, -1.68730164],
           ...,
           [ 0.66190481,  0.43968260,  0.45555562,  ...,  1.50317490,
             1.29682565,  0.85238099],
           [ 0.18571436,  0.07460327, -0.13174593,  ...,  1.45555580,
             1.18571460,  0.77301592],
           [ 0.02698422, -0.08412688, -0.22698402,  ...,  1.37619078,
             1.04285717,  0.96349210]],

          [[ 2.10950065,  2.10950065,  2.10144925,  ..., -1.62640905,
            -1.59420288, -1.65861523],
           [ 2.10144925,  2.10950065,  2.10144925,  ..., -1.65861523,
            -1.61030602, -1.67471826],
           [ 2.10144925,  2.10144925,  2.10144925,  ..., -1.70692432,
            -1.70692432, -1.69082129],
           ...,
           [ 0.72463775,  0.54750413,  0.59581327,  ...,  1.64251232,
             1.43317258,  0.96618366],
           [ 0.19323683,  0.04830930, -0.14492741,  ...,  1.59420323,
             1.28824508,  0.83735919],
           [-0.09661824, -0.22544271, -0.33816412,  ...,  1.51368785,
             1.14331758,  1.03059590]],

          [[ 2.10045004,  2.10045004,  2.10045004,  ..., -1.28785622,
            -1.27286363, -1.34782624],
           [ 2.10045004,  2.10045004,  2.10045004,  ..., -1.33283365,
            -1.28785622, -1.34782624],
           [ 2.10045004,  2.10045004,  2.09295392,  ..., -1.37781119,
            -1.37781119, -1.36281872],
           ...,
           [-0.76311839, -0.77811092, -0.64317840,  ...,  1.71064508,
             1.51574254,  1.02098966],
           [-0.97301346, -0.97301346, -1.03298354,  ...,  1.66566753,
             1.36581755,  0.87106466],
           [-0.89805096, -0.91304344, -0.95802099,  ...,  1.59070504,
             1.20089996,  1.02098966]]],


         [[[ 1.51904786,  1.58253992,  1.59841299,  ..., -1.63968253,
            -1.60793638, -1.65555561],
           [ 1.55079389,  1.61428595,  1.64603198,  ..., -1.65555561,
            -1.60793638, -1.67142856],
           [ 1.59841299,  1.66190505,  1.67777801,  ..., -1.68730164,
            -1.70317459, -1.68730164],
           ...,
           [ 0.66190481,  0.43968260,  0.45555562,  ...,  1.50317490,
             1.29682565,  0.85238099],
           [ 0.18571436,  0.07460327, -0.13174593,  ...,  1.45555580,
             1.18571460,  0.77301592],
           [ 0.02698422, -0.08412688, -0.22698402,  ...,  1.37619078,
             1.04285717,  0.96349210]],

          [[ 2.10950065,  2.10950065,  2.10144925,  ..., -1.62640905,
            -1.59420288, -1.65861523],
           [ 2.10144925,  2.10950065,  2.10144925,  ..., -1.65861523,
            -1.61030602, -1.67471826],
           [ 2.10144925,  2.10144925,  2.10144925,  ..., -1.70692432,
            -1.70692432, -1.69082129],
           ...,
           [ 0.72463775,  0.54750413,  0.59581327,  ...,  1.64251232,
             1.43317258,  0.96618366],
           [ 0.19323683,  0.04830930, -0.14492741,  ...,  1.59420323,
             1.28824508,  0.83735919],
           [-0.09661824, -0.22544271, -0.33816412,  ...,  1.51368785,
             1.14331758,  1.03059590]],

          [[ 2.10045004,  2.10045004,  2.10045004,  ..., -1.28785622,
            -1.27286363, -1.34782624],
           [ 2.10045004,  2.10045004,  2.10045004,  ..., -1.33283365,
            -1.28785622, -1.34782624],
           [ 2.10045004,  2.10045004,  2.09295392,  ..., -1.37781119,
            -1.37781119, -1.36281872],
           ...,
           [-0.76311839, -0.77811092, -0.64317840,  ...,  1.71064508,
             1.51574254,  1.02098966],
           [-0.97301346, -0.97301346, -1.03298354,  ...,  1.66566753,
             1.36581755,  0.87106466],
           [-0.89805096, -0.91304344, -0.95802099,  ...,  1.59070504,
             1.20089996,  1.02098966]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0462 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 16, vnnlib ID: 16 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-65.91313171, -69.84630585, -62.91825485, -63.53041458, -62.78865051,
         -63.84257507, -62.87136459, -65.66236877, -67.20186615, -70.23786163]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1598]; unstable size 1598; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 81, 1, 1598] with unstable size 80 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 41, 1, 1598] with unstable size 40 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1598] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [717]; unstable size 717; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 41, 1, 717] with unstable size 40 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 717] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [40]; unstable size 40; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 40] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.50805378,  3.65992212, -1.53934824, -1.69581139,  0.13332506,
         -1.90167868,  0.50978017,  1.55905294,  3.80448556]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-65.91313171, -69.84630585, -62.91825485, -63.53041458, -62.78865051,
         -63.84257507, -62.87136459, -65.66236877, -67.20186615, -70.23786163]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-65.91313171, -69.84631348, -62.91825867, -63.53042221, -62.78865433,
          -63.84257507, -62.87136459, -65.66237640, -67.20187378, -70.23787689],
         [-65.91313171, -69.84631348, -62.91825867, -63.53042221, -62.78865433,
          -63.84257507, -62.87136459, -65.66237640, -67.20187378, -70.23787689]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.61216354, -0.74176788, -0.65905762]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-0.59206349, -0.57619047, -0.54444444,  ..., -1.27460313,
            -1.17936504, -1.05238092],
           [-0.54444444, -0.54444444, -0.51269841,  ..., -1.21111107,
            -1.17936504, -0.94126981],
           [-0.52857143, -0.56031746, -0.52857143,  ..., -1.29047608,
            -1.21111107, -0.90952379],
           ...,
           [-0.35396814, -0.35396814, -0.33809513,  ...,  0.05873025,
             0.09047628,  0.02698422],
           [-0.33809513, -0.32222211, -0.30634910,  ...,  0.15396833,
             0.23333341,  0.24920642],
           [-0.36984116, -0.30634910, -0.35396814,  ...,  0.21746039,
             0.24920642,  0.24920642]],

          [[-0.70853460, -0.69243151, -0.66022539,  ..., -1.25603855,
            -1.19162631, -1.07890499],
           [-0.66022539, -0.66022539, -0.62801927,  ..., -1.19162631,
            -1.19162631, -0.98228657],
           [-0.66022539, -0.67632848, -0.64412236,  ..., -1.27214170,
            -1.22383249, -0.95008045],
           ...,
           [-0.46698871, -0.46698871, -0.45088565,  ..., -0.06441211,
            -0.03220600, -0.09661824],
           [-0.43478248, -0.41867942, -0.38647330,  ...,  0.03220624,
             0.11272153,  0.12882459],
           [-0.45088565, -0.37037024, -0.38647330,  ...,  0.09661847,
             0.14492765,  0.12882459]],

          [[-0.74812591, -0.73313338, -0.68815589,  ..., -1.01799107,
            -0.95802099, -0.95802099],
           [-0.70314842, -0.70314842, -0.67316341,  ..., -0.95802099,
            -0.95802099, -0.86806595],
           [-0.70314842, -0.71814090, -0.68815589,  ..., -1.03298354,
            -0.98800600, -0.82308841],
           ...,
           [-0.46326834, -0.44827583, -0.44827583,  ..., -0.07346311,
            -0.04347810, -0.10344811],
           [-0.43328333, -0.41829082, -0.40329832,  ...,  0.01649191,
             0.09145443,  0.10644694],
           [-0.47826082, -0.40329832, -0.43328333,  ...,  0.04647692,
             0.09145443,  0.07646193]]],


         [[[-0.59206349, -0.57619047, -0.54444444,  ..., -1.27460313,
            -1.17936504, -1.05238092],
           [-0.54444444, -0.54444444, -0.51269841,  ..., -1.21111107,
            -1.17936504, -0.94126981],
           [-0.52857143, -0.56031746, -0.52857143,  ..., -1.29047608,
            -1.21111107, -0.90952379],
           ...,
           [-0.35396814, -0.35396814, -0.33809513,  ...,  0.05873025,
             0.09047628,  0.02698422],
           [-0.33809513, -0.32222211, -0.30634910,  ...,  0.15396833,
             0.23333341,  0.24920642],
           [-0.36984116, -0.30634910, -0.35396814,  ...,  0.21746039,
             0.24920642,  0.24920642]],

          [[-0.70853460, -0.69243151, -0.66022539,  ..., -1.25603855,
            -1.19162631, -1.07890499],
           [-0.66022539, -0.66022539, -0.62801927,  ..., -1.19162631,
            -1.19162631, -0.98228657],
           [-0.66022539, -0.67632848, -0.64412236,  ..., -1.27214170,
            -1.22383249, -0.95008045],
           ...,
           [-0.46698871, -0.46698871, -0.45088565,  ..., -0.06441211,
            -0.03220600, -0.09661824],
           [-0.43478248, -0.41867942, -0.38647330,  ...,  0.03220624,
             0.11272153,  0.12882459],
           [-0.45088565, -0.37037024, -0.38647330,  ...,  0.09661847,
             0.14492765,  0.12882459]],

          [[-0.74812591, -0.73313338, -0.68815589,  ..., -1.01799107,
            -0.95802099, -0.95802099],
           [-0.70314842, -0.70314842, -0.67316341,  ..., -0.95802099,
            -0.95802099, -0.86806595],
           [-0.70314842, -0.71814090, -0.68815589,  ..., -1.03298354,
            -0.98800600, -0.82308841],
           ...,
           [-0.46326834, -0.44827583, -0.44827583,  ..., -0.07346311,
            -0.04347810, -0.10344811],
           [-0.43328333, -0.41829082, -0.40329832,  ...,  0.01649191,
             0.09145443,  0.10644694],
           [-0.47826082, -0.40329832, -0.43328333,  ...,  0.04647692,
             0.09145443,  0.07646193]]],


         [[[-0.59206349, -0.57619047, -0.54444444,  ..., -1.27460313,
            -1.17936504, -1.05238092],
           [-0.54444444, -0.54444444, -0.51269841,  ..., -1.21111107,
            -1.17936504, -0.94126981],
           [-0.52857143, -0.56031746, -0.52857143,  ..., -1.29047608,
            -1.21111107, -0.90952379],
           ...,
           [-0.35396814, -0.35396814, -0.33809513,  ...,  0.05873025,
             0.09047628,  0.02698422],
           [-0.33809513, -0.32222211, -0.30634910,  ...,  0.15396833,
             0.23333341,  0.24920642],
           [-0.36984116, -0.30634910, -0.35396814,  ...,  0.21746039,
             0.24920642,  0.24920642]],

          [[-0.70853460, -0.69243151, -0.66022539,  ..., -1.25603855,
            -1.19162631, -1.07890499],
           [-0.66022539, -0.66022539, -0.62801927,  ..., -1.19162631,
            -1.19162631, -0.98228657],
           [-0.66022539, -0.67632848, -0.64412236,  ..., -1.27214170,
            -1.22383249, -0.95008045],
           ...,
           [-0.46698871, -0.46698871, -0.45088565,  ..., -0.06441211,
            -0.03220600, -0.09661824],
           [-0.43478248, -0.41867942, -0.38647330,  ...,  0.03220624,
             0.11272153,  0.12882459],
           [-0.45088565, -0.37037024, -0.38647330,  ...,  0.09661847,
             0.14492765,  0.12882459]],

          [[-0.74812591, -0.73313338, -0.68815589,  ..., -1.01799107,
            -0.95802099, -0.95802099],
           [-0.70314842, -0.70314842, -0.67316341,  ..., -0.95802099,
            -0.95802099, -0.86806595],
           [-0.70314842, -0.71814090, -0.68815589,  ..., -1.03298354,
            -0.98800600, -0.82308841],
           ...,
           [-0.46326834, -0.44827583, -0.44827583,  ..., -0.07346311,
            -0.04347810, -0.10344811],
           [-0.43328333, -0.41829082, -0.40329832,  ...,  0.01649191,
             0.09145443,  0.10644694],
           [-0.47826082, -0.40329832, -0.43328333,  ...,  0.04647692,
             0.09145443,  0.07646193]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0458 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 17, vnnlib ID: 17 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-82.94766998, -76.51068115, -85.74510956, -86.04956055, -85.73397064,
         -86.89492035, -85.65059662, -87.65414429, -80.65987396, -79.59188080]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1083]; unstable size 1083; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 83, 1, 1083] with unstable size 82 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 32, 1, 1083] with unstable size 31 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1083] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [522]; unstable size 522; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 32, 1, 522] with unstable size 31 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 522] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [31]; unstable size 31; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.41892147, 6.99786234, 7.47647762, 6.93736935, 8.26163769, 6.82482719,
         8.71986580, 2.70772505, 2.14981079]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0393 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 18, vnnlib ID: 18 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-35.19777298, -38.40824509, -30.40200996, -33.15071487, -30.16409302,
         -33.15287399, -29.46845436, -33.05192566, -38.09144974, -37.63133240]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1219]; unstable size 1219; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 78, 1, 1219] with unstable size 77 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 38, 1, 1219] with unstable size 37 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1219] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [632]; unstable size 632; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 38, 1, 632] with unstable size 37 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 632] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [37]; unstable size 37; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 37] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.68389320,  6.53490686,  0.03944254,  2.80014777, -0.06634545,
          2.69240999,  2.01164174,  6.87135124,  5.91179180]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-35.19777298, -38.40824509, -30.40200996, -33.15071487, -30.16409302,
         -33.15287399, -29.46845436, -33.05192566, -38.09144974, -37.63133240]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.48it/s]100%|██████████| 1/1 [00:00<00:00,  8.47it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-35.50207901, -38.83366394, -30.85302353, -33.63578415, -30.50868988,
          -33.61380768, -30.14817047, -33.33837509, -38.45051193, -38.06226349]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.36051941]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1209 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 31.12786102294922
alpha/beta optimization time: 1.4287207126617432
initial alpha-crown bounds: tensor([[ 3.78265715,  6.64228153,  0.09203196,  2.84101939, -0.01873493,
          2.73048711,  2.09348869,  6.95224285,  6.01238632]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.01873493194580078
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.41028332710266
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.4102427959442
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.41021585464478
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.41019439697266
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.41017484664917
Verifying property 4 with 1 instances.
##### Instance 18 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.01873493]], device='cuda:0') need to verify.
Model prediction is: tensor([-35.19777298, -38.40824509, -30.40200996, -33.15071487, -30.16409302,
        -33.15287399, -29.46845436, -33.05192566, -38.09144974, -37.63133240],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.01873493]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1219
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 617
Node /39 input 0: size torch.Size([250]) unstable 35
-----------------
# of unstable neurons: 1871
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00010967254638671875
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.018718957901000977
10 lb beta sum: 0.0, worst -0.01872849464416504
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0719    transfer 0.0001    finalize 0.0002    func 0.0724    
Accumulated time: func 0.0724    prepare 0.0002    bound 0.0719    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 230] 
split level 1: [/input-16, 95] 
split level 2: [/input-16, 225] 
split level 3: [/input-16, 31] 
split level 4: [/input-16, 73] 
split level 5: [/input-16, 166] 
split level 6: [/input-16, 84] 
split level 7: [/input-16, 154] 
split level 8: [/input-16, 7] 
split level 9: [/input-16, 16] 
split level 10: [/input-16, 134] 
split level 11: [/input-16, 65] 
split level 12: [/input-12, 2596] 
split level 13: [/input-12, 6819] 
split level 14: [/input-16, 146] 
split level 15: [/input-12, 2588] 
split level 16: [/input-12, 545] 
split level 17: [/input-16, 171] 
split level 18: [/input-12, 2595] 
split level 19: [/input-12, 1578] 
split level 20: [/input-12, 3308] 
split level 21: [/input-12, 2597] 
split level 22: [/input-12, 3426] 
split level 23: [/input-12, 1962] 
split level 24: [/input-12, 3486] 
split level 25: [/input-12, 2923] 
split level 26: [/input-12, 7732] 
split level 27: [/input-12, 1669] 
split level 28: [/input-12, 3419] 
split level 29: [/input-12, 2602] 
split level 30: [/input-12, 7133] 
split level 31: [/input-12, 2594] 
split level 32: [/input-12, 1371] 
split level 33: [/input-12, 3377] 
split level 34: [/input-12, 5538] 
split level 35: [/input-12, 1166] 
split level 36: [/input-12, 548] 
split level 37: [/input-12, 6908] 
split level 38: [/input-12, 3418] 
split level 39: [/input-12, 1382] 
split level 40: [/input-12, 7134] 
split level 41: [/input-12, 3307] 
split level 42: [/input-12, 8028] 
split level 43: [/input-12, 2762] 
split level 44: [/input-12, 1818] 
split level 45: [/input-4, 3995] 
split level 46: [/input-12, 5524] 
split level 47: [/input-12, 1363] 
split level 48: [/input-12, 3187] 
split level 49: [/input-4, 1381] 
split level 50: [/input-12, 4753] 
split level 51: [/input-12, 3299] 
split level 52: [/input-12, 1710] 
split level 53: [/input-12, 6900] 
split level 54: [/input-12, 5507] 
split level 55: [/input-12, 5515] 
split level 56: [/input-12, 2922] 
split level 57: [/input-12, 1452] 
split level 58: [/input-4, 1370] 
split level 59: [/input-12, 7198] 
split level 60: [/input-12, 1817] 
split level 61: [/input-4, 1380] 
split level 62: [/input-12, 6749] 
split level 63: [/input-12, 5905] 
split level 64: [/input-12, 5514] 
split level 65: [/input-12, 5545] 
split level 66: [/input-12, 6765] 
split level 67: [/input-12, 2909] 
split level 68: [/input-12, 1453] 
split level 69: [/input-12, 5900] 
split level 70: [/input-12, 2761] 
split level 71: [/input-12, 3379] 
split level 72: [/input-12, 787] 
split level 73: [/input-12, 3552] 
split level 74: [/input-12, 3889] 
split level 75: [/input-12, 2584] 
split level 76: [/input-12, 4122] 
split level 77: [/input-12, 6758] 
split level 78: [/input-12, 6763] 
split level 79: [/input-12, 6757] 
split level 80: [/input-12, 2516] 
split level 81: [/input-12, 7583] 
split level 82: [/input-12, 2338] 
split level 83: [/input-12, 2330] 
split level 84: [/input-12, 3502] 
split level 85: [/input-12, 2313] 
split level 86: [/input-12, 1369] 
split level 87: [/input-12, 2027] 
split level 88: [/input-12, 1219] 
split level 89: [/input-12, 3865] 
split level 90: [/input-4, 5253] 
split level 91: [/input-12, 3505] 
split level 92: [/input-12, 872] 
split level 93: [/input-12, 7650] 
split level 94: [/input-12, 4579] 
split level 95: [/input-12, 5405] 
split level 96: [/input-12, 6762] 
split level 97: [/input-12, 5298] 
split level 98: [/input-12, 3569] 
split level 99: [/input-12, 5543] 
split level 100: [/input-12, 2609] 
split level 101: [/input-12, 5397] 
split level 102: [/input-4, 1436] 
split level 103: [/input-4, 7802] 
split level 104: [/input-4, 1383] 
split level 105: [/input-12, 6764] 
split level 106: [/input-12, 3824] 
split level 107: [/input-4, 6313] 
split level 108: [/input-12, 6750] 
split level 109: [/input-12, 1182] 
split level 110: [/input-12, 6245] 
split level 111: [/input-12, 6767] 
split level 112: [/input-12, 4790] 
split level 113: [/input-12, 2351] 
split level 114: [/input-12, 1210] 
split level 115: [/input-12, 7642] 
split level 116: [/input-12, 3496] 
split level 117: [/input-12, 7171] 
split level 118: [/input-12, 5811] 
split level 119: [/input-12, 3147] 
split level 120: [/input-4, 7032] 
split level 121: [/input-12, 3169] 
split level 122: [/input-12, 7339] 
split level 123: [/input-4, 1450] 
split level 124: [/input-4, 5277] 
split level 125: [/input-12, 3170] 
split level 126: [/input-12, 2572] 
split level 127: [/input-12, 6754] 
split level 128: [/input-12, 4116] 
split level 129: [/input-12, 5899] 
split level 130: [/input-12, 6514] 
split level 131: [/input-4, 2147] 
split level 132: [/input-4, 881] 
split level 133: [/input-12, 1425] 
split level 134: [/input-12, 117] 
split level 135: [/input-12, 1169] 
split level 136: [/input-12, 6742] 
split level 137: [/input-12, 1763] 
split level 138: [/input-4, 4211] 
split level 139: [/input-4, 4184] 
split level 140: [/input-12, 2504] 
split level 141: [/input-12, 7624] 
split level 142: [/input-12, 835] 
split level 143: [/input-4, 5269] 
split level 144: [/input-4, 1348] 
split level 145: [/input-12, 1165] 
split level 146: [/input-12, 2025] 
split level 147: [/input-12, 1432] 
split level 148: [/input-4, 4228] 
split level 149: [/input-12, 1697] 
split level 150: [/input-12, 6246] 
split level 151: [/input-12, 2573] 
split level 152: [/input-12, 1440] 
split level 153: [/input-12, 6229] 
split level 154: [/input-12, 7678] 
split level 155: [/input-12, 5800] 
split level 156: [/input-12, 4913] 
split level 157: [/input-12, 6993] 
split level 158: [/input-12, 5329] 
split level 159: [/input-12, 861] 
split level 160: [/input-12, 4388] 
split level 161: [/input-12, 8032] 
split level 162: [/input-4, 4227] 
split level 163: [/input-12, 3148] 
split level 164: [/input-12, 7338] 
split level 165: [/input-12, 4920] 
split level 166: [/input-4, 4198] 
split level 167: [/input-4, 5315] 
split level 168: [/input-4, 2152] 
split level 169: [/input-12, 4114] 
split level 170: [/input-4, 3685] 
split level 171: [/input-12, 615] 
split level 172: [/input-12, 6771] 
split level 173: [/input-12, 1080] 
split level 174: [/input-12, 7560] 
split level 175: [/input-12, 6411] 
split level 176: [/input-12, 1454] 
split level 177: [/input-12, 5045] 
split level 178: [/input-12, 8043] 
split level 179: [/input-4, 1144] 
split level 180: [/input-12, 8054] 
split level 181: [/input-12, 3491] 
split level 182: [/input-12, 1448] 
split level 183: [/input-4, 2666] 
split level 184: [/input-4, 7300] 
split level 185: [/input-4, 6299] 
split level 186: [/input-12, 5365] 
split level 187: [/input-12, 8040] 
split level 188: [/input-12, 6773] 
split level 189: [/input-12, 631] 
split level 190: [/input-4, 6794] 
split level 191: [/input-4, 2154] 
split level 192: [/input-12, 2428] 
split level 193: [/input-12, 2306] 
split level 194: [/input-12, 1772] 
split level 195: [/input-4, 3196] 
split level 196: [/input-12, 5551] 
split level 197: [/input-4, 2119] 
split level 198: [/input-4, 2132] 
split level 199: [/input-4, 6776] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.01859140396118164
10 lb beta sum: 0.0, worst -0.018595218658447266
Time: prepare 0.0116    bound 0.1320    transfer 0.0033    finalize 0.0086    func 0.1582    
Accumulated time: func 0.2306    prepare 0.0219    bound 0.2039    transfer 0.0034    finalize 0.0089    
all_split False
======================Cut inference begins======================
max lb tensor(0.12755513) min lb tensor(-0.01859140)
Number of Verified Splits: 26 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.011585474014282227 
BICCOS Cumulative time: 0.011585474014282227
Preprocessing time: 0.01011967658996582 Inference time: 0.0010097026824951172 Add cuts time: 0.00028133392333984375 Cut analysis time: 0.0001747608184814453
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.7628    set_bounds 0.0105    solve 0.1582    add 0.0103    
Accumulated time: pickout 0.0003    decision 0.7628    set_bounds 0.0105    solve 0.1582    add 0.0103    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([230]), tensor([-1.]), tensor([0]), tensor([236.12768555]), tensor([0]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([230]), tensor([1.]), tensor([0]), tensor([236.12768555]), tensor([0]))}
Shallow branching resets to n domains:  2
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.06498456001281738

all verified at 0th iter
Time: prepare 0.0003    bound 0.0083    transfer 0.0001    finalize 0.0003    func 0.0090    
Accumulated time: func 0.2396    prepare 0.0222    bound 0.2122    transfer 0.0035    finalize 0.0091    
After pruning, left:  0

Back to Regular BaB


Properties batch 5, size 1
Remaining timeout: 197.08169960975647
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.081636428833
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.081613779068
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.08158540725708
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.9185 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 19, vnnlib ID: 19 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-48.94093704, -50.83277130, -44.12195969, -43.09971619, -43.65674973,
         -43.35719299, -44.17518997, -46.80654907, -49.03590775, -51.02867126]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1605]; unstable size 1605; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 87, 1, 1605] with unstable size 86 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 35, 1, 1605] with unstable size 34 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1605] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [718]; unstable size 718; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 35, 1, 718] with unstable size 34 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 718] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [34]; unstable size 34; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 34] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.40593624,  5.54746246, -0.17332649, -0.52624917,  0.09540261,
         -0.21811628,  2.04686427,  3.63472581,  5.71758795]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-48.94093704, -50.83277130, -44.12195969, -43.09971619, -43.65674973,
         -43.35719299, -44.17518997, -46.80654907, -49.03590775, -51.02867126]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.32it/s]100%|██████████| 1/1 [00:00<00:00,  7.32it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-48.60162354, -50.65057755, -43.84852982, -43.21149445, -43.38794708,
          -43.47157669, -44.03695679, -46.63685989, -48.75911331, -50.90108490],
         [-48.60162354, -50.65057755, -43.84852982, -43.21149445, -43.38794708,
          -43.47157669, -44.03695679, -46.63685989, -48.75911331, -50.90108490]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.63703537, 0.17645264, 0.82546234]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1398 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 20.335071563720703
alpha/beta optimization time: 1.4399616718292236
initial alpha-crown bounds: tensor([[ 3.53774238,  5.65207529, -0.11013484, -0.45366597,  0.10522424,
         -0.16982293,  2.17011452,  3.77291059,  5.83062840]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 3 ; Worst class: (+ rhs) -0.45366597175598145
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.37591123580933
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.37586879730225
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.3758351802826
Verifying property 2 with 1 instances.
##### Instance 19 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.11013484]], device='cuda:0') need to verify.
Model prediction is: tensor([-48.94093704, -50.83277130, -44.12195969, -43.09971619, -43.65674973,
        -43.35719299, -44.17518997, -46.80654907, -49.03590775, -51.02867126],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.11013484]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1605
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 704
Node /39 input 0: size torch.Size([250]) unstable 33
-----------------
# of unstable neurons: 2342
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00010395050048828125
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11009097099304199
10 lb beta sum: 0.0, worst -0.11009335517883301
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0725    transfer 0.0001    finalize 0.0002    func 0.0730    
Accumulated time: func 0.0730    prepare 0.0002    bound 0.0725    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 13] 
split level 1: [/input-16, 104] 
split level 2: [/input-16, 166] 
split level 3: [/input-16, 111] 
split level 4: [/input-16, 211] 
split level 5: [/input-16, 54] 
split level 6: [/input-16, 170] 
split level 7: [/input-16, 16] 
split level 8: [/input-16, 31] 
split level 9: [/input-12, 1948] 
split level 10: [/input-12, 794] 
split level 11: [/input-12, 1692] 
split level 12: [/input-12, 1573] 
split level 13: [/input-12, 1579] 
split level 14: [/input-12, 803] 
split level 15: [/input-12, 3115] 
split level 16: [/input-16, 73] 
split level 17: [/input-16, 65] 
split level 18: [/input-12, 2461] 
split level 19: [/input-12, 882] 
split level 20: [/input-12, 5148] 
split level 21: [/input-12, 2011] 
split level 22: [/input-12, 7139] 
split level 23: [/input-12, 5156] 
split level 24: [/input-12, 809] 
split level 25: [/input-12, 6435] 
split level 26: [/input-12, 810] 
split level 27: [/input-16, 146] 
split level 28: [/input-12, 6884] 
split level 29: [/input-12, 5275] 
split level 30: [/input-12, 5157] 
split level 31: [/input-12, 7542] 
split level 32: [/input-12, 5143] 
split level 33: [/input-12, 3171] 
split level 34: [/input-12, 5155] 
split level 35: [/input-12, 7778] 
split level 36: [/input-12, 1572] 
split level 37: [/input-12, 804] 
split level 38: [/input-12, 5135] 
split level 39: [/input-12, 5267] 
split level 40: [/input-12, 2477] 
split level 41: [/input-12, 5261] 
split level 42: [/input-12, 5165] 
split level 43: [/input-12, 5153] 
split level 44: [/input-12, 787] 
split level 45: [/input-12, 797] 
split level 46: [/input-12, 1585] 
split level 47: [/input-12, 5166] 
split level 48: [/input-12, 5149] 
split level 49: [/input-12, 796] 
split level 50: [/input-12, 6428] 
split level 51: [/input-12, 414] 
split level 52: [/input-12, 2453] 
split level 53: [/input-4, 4249] 
split level 54: [/input-12, 733] 
split level 55: [/input-12, 986] 
split level 56: [/input-12, 5126] 
split level 57: [/input-4, 4216] 
split level 58: [/input-4, 4248] 
split level 59: [/input-12, 717] 
split level 60: [/input-16, 190] 
split level 61: [/input-12, 3376] 
split level 62: [/input-12, 2596] 
split level 63: [/input-12, 437] 
split level 64: [/input-16, 180] 
split level 65: [/input-12, 5168] 
split level 66: [/input-12, 1436] 
split level 67: [/input-12, 5140] 
split level 68: [/input-12, 995] 
split level 69: [/input-12, 1190] 
split level 70: [/input-4, 4251] 
split level 71: [/input-12, 7218] 
split level 72: [/input-12, 2588] 
split level 73: [/input-12, 7148] 
split level 74: [/input-12, 363] 
split level 75: [/input-12, 4441] 
split level 76: [/input-12, 4387] 
split level 77: [/input-12, 3789] 
split level 78: [/input-12, 1428] 
split level 79: [/input-12, 5134] 
split level 80: [/input-12, 3788] 
split level 81: [/input-12, 3940] 
split level 82: [/input-12, 1380] 
split level 83: [/input-12, 6150] 
split level 84: [/input-12, 5299] 
split level 85: [/input-12, 3349] 
split level 86: [/input-4, 4228] 
split level 87: [/input-12, 2597] 
split level 88: [/input-12, 7154] 
split level 89: [/input-12, 8046] 
split level 90: [/input-12, 2004] 
split level 91: [/input-12, 622] 
split level 92: [/input-4, 4215] 
split level 93: [/input-12, 5142] 
split level 94: [/input-12, 825] 
split level 95: [/input-12, 5643] 
split level 96: [/input-12, 349] 
split level 97: [/input-12, 3143] 
split level 98: [/input-12, 5139] 
split level 99: [/input-12, 625] 
split level 100: [/input-12, 6901] 
split level 101: [/input-12, 6412] 
split level 102: [/input-4, 4549] 
split level 103: [/input-12, 8038] 
split level 104: [/input-4, 4230] 
split level 105: [/input-4, 4546] 
split level 106: [/input-12, 5013] 
split level 107: [/input-12, 5531] 
split level 108: [/input-12, 5563] 
split level 109: [/input-12, 5535] 
split level 110: [/input-4, 4545] 
split level 111: [/input-12, 5158] 
split level 112: [/input-12, 5637] 
split level 113: [/input-12, 5169] 
split level 114: [/input-4, 4263] 
split level 115: [/input-4, 4170] 
split level 116: [/input-12, 4879] 
split level 117: [/input-12, 5138] 
split level 118: [/input-12, 5020] 
split level 119: [/input-12, 1427] 
split level 120: [/input-12, 1233] 
split level 121: [/input-12, 3419] 
split level 122: [/input-4, 4423] 
split level 123: [/input-12, 8044] 
split level 124: [/input-4, 4533] 
split level 125: [/input-4, 1747] 
split level 126: [/input-12, 2579] 
split level 127: [/input-12, 6421] 
split level 128: [/input-4, 5720] 
split level 129: [/input-4, 4217] 
split level 130: [/input-12, 5159] 
split level 131: [/input-12, 4885] 
split level 132: [/input-4, 4454] 
split level 133: [/input-12, 7219] 
split level 134: [/input-12, 1182] 
split level 135: [/input-12, 3179] 
split level 136: [/input-12, 5565] 
split level 137: [/input-12, 3433] 
split level 138: [/input-12, 8045] 
split level 139: [/input-12, 466] 
split level 140: [/input-12, 3173] 
split level 141: [/input-12, 2010] 
split level 142: [/input-12, 2335] 
split level 143: [/input-4, 5811] 
split level 144: [/input-12, 3814] 
split level 145: [/input-12, 5797] 
split level 146: [/input-12, 8047] 
split level 147: [/input-12, 824] 
split level 148: [/input-4, 4218] 
split level 149: [/input-4, 4198] 
split level 150: [/input-12, 1771] 
split level 151: [/input-12, 5543] 
split level 152: [/input-12, 438] 
split level 153: [/input-12, 4363] 
split level 154: [/input-4, 4211] 
split level 155: [/input-4, 4276] 
split level 156: [/input-4, 3657] 
split level 157: [/input-4, 1717] 
split level 158: [/input-4, 1735] 
split level 159: [/input-12, 1741] 
split level 160: [/input-12, 2933] 
split level 161: [/input-12, 1732] 
split level 162: [/input-12, 5145] 
split level 163: [/input-4, 4184] 
split level 164: [/input-4, 4264] 
split level 165: [/input-12, 3382] 
split level 166: [/input-12, 5787] 
split level 167: [/input-12, 7189] 
split level 168: [/input-4, 4234] 
split level 169: [/input-4, 4156] 
split level 170: [/input-4, 1746] 
split level 171: [/input-4, 4213] 
split level 172: [/input-4, 4250] 
split level 173: [/input-4, 4193] 
split level 174: [/input-4, 4220] 
split level 175: [/input-12, 1377] 
split level 176: [/input-12, 2485] 
split level 177: [/input-12, 4796] 
split level 178: [/input-4, 4222] 
split level 179: [/input-4, 4212] 
split level 180: [/input-4, 2723] 
split level 181: [/input-12, 7225] 
split level 182: [/input-12, 3169] 
split level 183: [/input-4, 4187] 
split level 184: [/input-4, 4485] 
split level 185: [/input-4, 8038] 
split level 186: [/input-4, 7875] 
split level 187: [/input-12, 1340] 
split level 188: [/input-4, 4177] 
split level 189: [/input-4, 4517] 
split level 190: [/input-12, 607] 
split level 191: [/input-4, 3673] 
split level 192: [/input-4, 4205] 
split level 193: [/input-4, 2252] 
split level 194: [/input-12, 4162] 
split level 195: [/input-4, 4844] 
split level 196: [/input-4, 5797] 
split level 197: [/input-4, 2217] 
split level 198: [/input-12, 7462] 
split level 199: [/input-4, 4577] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11004352569580078
10 lb beta sum: 0.0, worst -0.1100468635559082
Time: prepare 0.0113    bound 0.1329    transfer 0.0034    finalize 0.0084    func 0.1586    
Accumulated time: func 0.2316    prepare 0.0215    bound 0.2053    transfer 0.0035    finalize 0.0086    
all_split False
======================Cut inference begins======================
max lb tensor(0.20761061) min lb tensor(-0.11004186)
Number of Verified Splits: 7 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 7
#cuts >= 20: 0
BICCOS time: 0.010919332504272461 
BICCOS Cumulative time: 0.010919332504272461
Preprocessing time: 0.010195255279541016 Inference time: 0.0003116130828857422 Add cuts time: 0.00013136863708496094 Cut analysis time: 0.0002810955047607422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09841 (1), -0.09836 (1), -0.09787 (1), -0.09776 (1), -0.09694 (1), -0.09679 (1), -0.09660 (1), -0.09652 (1), -0.09646 (1), -0.09632 (1), -0.09622 (1), -0.09596 (1), -0.09559 (1), -0.09559 (1), -0.09484 (1), -0.09452 (1), -0.09383 (1), -0.09317 (1), -0.09278 (1), -0.09267 (1), 
Length of domains: 50
Time: pickout 0.0005    decision 0.7652    set_bounds 0.0094    solve 0.1587    add 0.0792    
Accumulated time: pickout 0.0005    decision 0.7652    set_bounds 0.0094    solve 0.1587    add 0.0792    
Current (lb-rhs): -0.09840536117553711
50 domains visited
Cumulative time: 1.1042695045471191

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 13] [/input-16, 13] [/input-16, 104] [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 13] 
split level 1: [/input-16, 104] [/input-16, 104] [/input-16, 166] [/input-16, 104] [/input-16, 104] [/input-16, 166] [/input-16, 104] [/input-16, 104] [/input-16, 104] [/input-16, 104] 
split level 2: [/input-16, 211] [/input-16, 166] [/input-16, 211] [/input-16, 211] [/input-16, 166] [/input-16, 211] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] 
split level 3: [/input-16, 54] [/input-16, 54] [/input-16, 54] [/input-16, 54] [/input-16, 211] [/input-16, 54] [/input-16, 211] [/input-16, 211] [/input-16, 211] [/input-16, 211] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0576634407043457

all verified at 2th iter
Time: prepare 0.0072    bound 0.0234    transfer 0.0029    finalize 0.0096    func 0.0458    
Accumulated time: func 0.2774    prepare 0.0290    bound 0.2288    transfer 0.0064    finalize 0.0182    
all_split False
======================Cut inference begins======================
max lb tensor(0.13569260) min lb tensor(1.43051147e-05)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.03457522392272949 
BICCOS Cumulative time: 0.04549455642700195
Preprocessing time: 0.011850118637084961 Inference time: 0.01524662971496582 Add cuts time: 0.007289886474609375 Cut analysis time: 0.00018858909606933594
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0007    decision 0.0246    set_bounds 0.0120    solve 0.0459    add 0.0152    
Accumulated time: pickout 0.0012    decision 0.7898    set_bounds 0.0214    solve 0.2046    add 0.0944    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([166,  13]), tensor([-1., -1.]), tensor([0, 0]), tensor([-1.26703856e+34,  1.61149547e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([166,  13]), tensor([-1.,  1.]), tensor([0, 0]), tensor([-1.26703856e+34,  7.09372014e-02]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([166,  13]), tensor([ 1., -1.]), tensor([0, 0]), tensor([-1.26703856e+34,  1.62872121e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([166,  13]), tensor([1., 1.]), tensor([0, 0]), tensor([-1.26703856e+34,  6.93607777e-02]), tensor([0, 1]))}
Shallow branching resets to n domains:  4
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.024401187896728516

all verified at 0th iter
Time: prepare 0.0003    bound 0.0059    transfer 0.0002    finalize 0.0003    func 0.0067    
Accumulated time: func 0.2841    prepare 0.0294    bound 0.2346    transfer 0.0066    finalize 0.0185    
After pruning, left:  0

Back to Regular BaB


Properties batch 3, size 1
Remaining timeout: 196.95107746124268
Verifying property 3 with 1 instances.
##### Instance 19 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.45366597]], device='cuda:0') need to verify.
Model prediction is: tensor([-48.94093704, -50.83277130, -44.12195969, -43.09971619, -43.65674973,
        -43.35719299, -44.17518997, -46.80654907, -49.03590775, -51.02867126],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.45366597]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1605
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 704
Node /39 input 0: size torch.Size([250]) unstable 33
-----------------
# of unstable neurons: 2342
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 9.799003601074219e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4536406993865967
10 lb beta sum: 0.0, worst -0.4536409378051758
Time: prepare 0.0002    bound 0.1215    transfer 0.0001    finalize 0.0002    func 0.1221    
Accumulated time: func 0.1221    prepare 0.0002    bound 0.1215    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 64] 
split level 1: [/input-16, 13] 
split level 2: [/input-16, 166] 
split level 3: [/input-16, 54] 
split level 4: [/input-16, 73] 
split level 5: [/input-16, 225] 
split level 6: [/input-16, 31] 
split level 7: [/input-16, 211] 
split level 8: [/input-16, 16] 
split level 9: [/input-16, 104] 
split level 10: [/input-16, 180] 
split level 11: [/input-16, 84] 
split level 12: [/input-16, 190] 
split level 13: [/input-12, 5148] 
split level 14: [/input-16, 154] 
split level 15: [/input-16, 99] 
split level 16: [/input-12, 5156] 
split level 17: [/input-12, 1573] 
split level 18: [/input-12, 882] 
split level 19: [/input-12, 363] 
split level 20: [/input-12, 5157] 
split level 21: [/input-12, 1692] 
split level 22: [/input-12, 349] 
split level 23: [/input-12, 6435] 
split level 24: [/input-12, 5165] 
split level 25: [/input-12, 6428] 
split level 26: [/input-12, 1579] 
split level 27: [/input-12, 5135] 
split level 28: [/input-12, 2843] 
split level 29: [/input-12, 1190] 
split level 30: [/input-12, 5143] 
split level 31: [/input-12, 3171] 
split level 32: [/input-12, 7139] 
split level 33: [/input-12, 5166] 
split level 34: [/input-12, 5149] 
split level 35: [/input-12, 2594] 
split level 36: [/input-12, 8026] 
split level 37: [/input-12, 6891] 
split level 38: [/input-12, 2461] 
split level 39: [/input-12, 6150] 
split level 40: [/input-12, 5643] 
split level 41: [/input-12, 5153] 
split level 42: [/input-12, 5155] 
split level 43: [/input-12, 1572] 
split level 44: [/input-12, 5785] 
split level 45: [/input-12, 5168] 
split level 46: [/input-12, 2597] 
split level 47: [/input-12, 3115] 
split level 48: [/input-12, 2588] 
split level 49: [/input-12, 5787] 
split level 50: [/input-12, 5126] 
split level 51: [/input-12, 5793] 
split level 52: [/input-12, 2596] 
split level 53: [/input-12, 1585] 
split level 54: [/input-12, 794] 
split level 55: [/input-12, 7890] 
split level 56: [/input-12, 5140] 
split level 57: [/input-12, 5180] 
split level 58: [/input-12, 5134] 
split level 59: [/input-4, 4249] 
split level 60: [/input-4, 4216] 
split level 61: [/input-12, 6884] 
split level 62: [/input-4, 4251] 
split level 63: [/input-12, 7778] 
split level 64: [/input-12, 2584] 
split level 65: [/input-12, 6412] 
split level 66: [/input-12, 3349] 
split level 67: [/input-12, 1826] 
split level 68: [/input-12, 2453] 
split level 69: [/input-12, 986] 
split level 70: [/input-12, 7201] 
split level 71: [/input-12, 1763] 
split level 72: [/input-12, 1380] 
split level 73: [/input-12, 733] 
split level 74: [/input-12, 5638] 
split level 75: [/input-12, 717] 
split level 76: [/input-4, 4248] 
split level 77: [/input-12, 803] 
split level 78: [/input-12, 7889] 
split level 79: [/input-12, 3143] 
split level 80: [/input-12, 5141] 
split level 81: [/input-12, 2578] 
split level 82: [/input-12, 341] 
split level 83: [/input-4, 4266] 
split level 84: [/input-12, 5797] 
split level 85: [/input-12, 8038] 
split level 86: [/input-12, 2602] 
split level 87: [/input-12, 5142] 
split level 88: [/input-12, 5786] 
split level 89: [/input-12, 6421] 
split level 90: [/input-12, 7218] 
split level 91: [/input-12, 1841] 
split level 92: [/input-12, 797] 
split level 93: [/input-12, 7926] 
split level 94: [/input-12, 5169] 
split level 95: [/input-12, 3433] 
split level 96: [/input-12, 2335] 
split level 97: [/input-12, 2579] 
split level 98: [/input-12, 7194] 
split level 99: [/input-12, 2592] 
split level 100: [/input-12, 2598] 
split level 101: [/input-12, 5798] 
split level 102: [/input-12, 5788] 
split level 103: [/input-4, 4215] 
split level 104: [/input-12, 8046] 
split level 105: [/input-12, 796] 
split level 106: [/input-12, 5158] 
split level 107: [/input-12, 6258] 
split level 108: [/input-12, 6827] 
split level 109: [/input-12, 5650] 
split level 110: [/input-4, 4228] 
split level 111: [/input-12, 5139] 
split level 112: [/input-12, 5132] 
split level 113: [/input-12, 8027] 
split level 114: [/input-12, 787] 
split level 115: [/input-12, 2568] 
split level 116: [/input-12, 7905] 
split level 117: [/input-12, 5637] 
split level 118: [/input-12, 7148] 
split level 119: [/input-12, 7904] 
split level 120: [/input-12, 7632] 
split level 121: [/input-12, 5159] 
split level 122: [/input-12, 2477] 
split level 123: [/input-12, 810] 
split level 124: [/input-12, 7640] 
split level 125: [/input-12, 3179] 
split level 126: [/input-12, 7554] 
split level 127: [/input-4, 7794] 
split level 128: [/input-12, 6236] 
split level 129: [/input-4, 4269] 
split level 130: [/input-4, 4263] 
split level 131: [/input-4, 4230] 
split level 132: [/input-12, 7542] 
split level 133: [/input-4, 4213] 
split level 134: [/input-12, 1193] 
split level 135: [/input-12, 4885] 
split level 136: [/input-4, 4211] 
split level 137: [/input-4, 6568] 
split level 138: [/input-12, 8045] 
split level 139: [/input-4, 4217] 
split level 140: [/input-12, 3173] 
split level 141: [/input-12, 3169] 
split level 142: [/input-12, 5531] 
split level 143: [/input-12, 3443] 
split level 144: [/input-12, 1182] 
split level 145: [/input-12, 8018] 
split level 146: [/input-12, 5208] 
split level 147: [/input-12, 5261] 
split level 148: [/input-12, 5129] 
split level 149: [/input-12, 2605] 
split level 150: [/input-12, 5145] 
split level 151: [/input-4, 4218] 
split level 152: [/input-12, 8029] 
split level 153: [/input-12, 5138] 
split level 154: [/input-12, 804] 
split level 155: [/input-4, 4806] 
split level 156: [/input-12, 4879] 
split level 157: [/input-4, 4334] 
split level 158: [/input-4, 4198] 
split level 159: [/input-4, 5811] 
split level 160: [/input-12, 5694] 
split level 161: [/input-12, 1197] 
split level 162: [/input-4, 6471] 
split level 163: [/input-12, 78] 
split level 164: [/input-12, 5221] 
split level 165: [/input-4, 2723] 
split level 166: [/input-12, 8044] 
split level 167: [/input-4, 7875] 
split level 168: [/input-4, 4250] 
split level 169: [/input-12, 1562] 
split level 170: [/input-4, 4184] 
split level 171: [/input-4, 7886] 
split level 172: [/input-4, 4187] 
split level 173: [/input-4, 4212] 
split level 174: [/input-12, 7462] 
split level 175: [/input-4, 4264] 
split level 176: [/input-4, 4320] 
split level 177: [/input-4, 4276] 
split level 178: [/input-12, 4212] 
split level 179: [/input-4, 4220] 
split level 180: [/input-12, 7226] 
split level 181: [/input-4, 4156] 
split level 182: [/input-4, 4225] 
split level 183: [/input-12, 1843] 
split level 184: [/input-4, 2283] 
split level 185: [/input-4, 6540] 
split level 186: [/input-4, 2252] 
split level 187: [/input-12, 2675] 
split level 188: [/input-12, 5363] 
split level 189: [/input-12, 4441] 
split level 190: [/input-12, 7225] 
split level 191: [/input-12, 8047] 
split level 192: [/input-4, 4333] 
split level 193: [/input-4, 4313] 
split level 194: [/input-12, 1771] 
split level 195: [/input-4, 4328] 
split level 196: [/input-4, 4222] 
split level 197: [/input-4, 4423] 
split level 198: [/input-4, 4304] 
split level 199: [/input-4, 2689] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4536004066467285
10 lb beta sum: 0.0, worst -0.45358967781066895
Time: prepare 0.0116    bound 0.1332    transfer 0.0034    finalize 0.0095    func 0.1604    
Accumulated time: func 0.2824    prepare 0.0220    bound 0.2546    transfer 0.0036    finalize 0.0097    
all_split False
======================Cut inference begins======================
max lb tensor(-0.22562826) min lb tensor(-0.45358133)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.010144233703613281 
BICCOS Cumulative time: 0.010144233703613281
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.44141 (1), -0.44123 (1), -0.44061 (1), -0.44059 (1), -0.44044 (1), -0.44039 (1), -0.43938 (1), -0.43931 (1), -0.43899 (1), -0.43897 (1), -0.43896 (1), -0.43880 (1), -0.43832 (1), -0.43818 (1), -0.43809 (1), -0.43807 (1), -0.43650 (1), -0.43625 (1), -0.43615 (1), -0.43562 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7715    set_bounds 0.0096    solve 0.1605    add 0.0749    
Accumulated time: pickout 0.0003    decision 0.7715    set_bounds 0.0096    solve 0.1605    add 0.0749    
Current (lb-rhs): -0.44141459465026855
50 domains visited
Cumulative time: 1.1563026905059814

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 64] [/input-16, 64] [/input-16, 13] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 13] [/input-16, 64] 
split level 1: [/input-16, 13] [/input-16, 13] [/input-16, 166] [/input-16, 166] [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 166] [/input-16, 166] [/input-16, 13] 
split level 2: [/input-16, 166] [/input-16, 166] [/input-16, 54] [/input-16, 54] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 54] [/input-16, 54] [/input-16, 54] 
split level 3: [/input-16, 54] [/input-16, 54] [/input-16, 73] [/input-16, 73] [/input-16, 54] [/input-16, 54] [/input-16, 54] [/input-16, 73] [/input-16, 73] [/input-16, 73] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3972783088684082
10 lb beta sum: 0.0, worst -0.39677882194519043
Time: prepare 0.0121    bound 0.1291    transfer 0.0029    finalize 0.0077    func 0.1545    
Accumulated time: func 0.4369    prepare 0.0343    bound 0.3837    transfer 0.0065    finalize 0.0174    
all_split False
======================Cut inference begins======================
max lb tensor(0.23760700) min lb tensor(-0.39664960)
Number of Verified Splits: 1 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.012803316116333008 
BICCOS Cumulative time: 0.02294754981994629
Preprocessing time: 0.011873722076416016 Inference time: 0.000102996826171875 Add cuts time: 7.319450378417969e-05 Cut analysis time: 0.0007534027099609375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.26942 (2), -0.26809 (2), -0.26806 (2), -0.26456 (2), -0.26281 (2), -0.26278 (2), -0.26189 (2), -0.26180 (2), -0.25922 (2), -0.25900 (2), -0.25867 (2), -0.25863 (2), -0.25758 (2), -0.25727 (2), -0.25435 (2), -0.25407 (2), -0.25290 (2), -0.25106 (2), -0.25093 (2), -0.24889 (2), 
Length of domains: 50
Time: pickout 0.0009    decision 0.0247    set_bounds 0.0132    solve 0.1546    add 0.0854    
Accumulated time: pickout 0.0013    decision 0.7961    set_bounds 0.0227    solve 0.3150    add 0.1603    
Current (lb-rhs): -0.26941561698913574
100 domains visited
Cumulative time: 1.4481022357940674

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 13] [/input-16, 64] [/input-16, 64] [/input-16, 13] [/input-16, 64] [/input-16, 64] [/input-16, 166] [/input-16, 166] [/input-16, 64] [/input-16, 13] 
split level 1: [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 13] [/input-16, 13] [/input-16, 54] [/input-16, 54] [/input-16, 166] [/input-16, 166] 
split level 2: [/input-16, 54] [/input-16, 54] [/input-16, 54] [/input-16, 54] [/input-16, 166] [/input-16, 54] [/input-16, 73] [/input-16, 73] [/input-16, 54] [/input-16, 54] 
split level 3: [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 211] [/input-16, 211] [/input-16, 73] [/input-16, 73] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2519853115081787
10 lb beta sum: 0.09539918601512909, worst -0.25510191917419434
Time: prepare 0.0056    bound 0.1481    transfer 0.0029    finalize 0.0091    func 0.1684    
Accumulated time: func 0.6053    prepare 0.0402    bound 0.5318    transfer 0.0094    finalize 0.0265    
all_split False
======================Cut inference begins======================
max lb tensor(0.36026073) min lb tensor(-0.25084114)
Number of Verified Splits: 24 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 5.
#cuts 1-3: 3
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.013489246368408203 
BICCOS Cumulative time: 0.03643679618835449
Preprocessing time: 0.01156926155090332 Inference time: 0.0011687278747558594 Add cuts time: 0.0004343986511230469 Cut analysis time: 0.00031685829162597656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08219 (3), -0.08163 (3), -0.08061 (3), -0.07663 (3), -0.07548 (3), -0.07526 (3), -0.06883 (3), -0.06823 (3), -0.06786 (3), -0.06749 (3), -0.06382 (3), -0.06331 (3), -0.05954 (3), -0.05943 (3), -0.05792 (3), -0.05751 (3), -0.05681 (3), -0.05611 (3), -0.05583 (3), -0.05348 (3), 
Length of domains: 50
Time: pickout 0.0007    decision 0.0253    set_bounds 0.0153    solve 0.1684    add 0.0894    
Accumulated time: pickout 0.0019    decision 0.8214    set_bounds 0.0380    solve 0.4835    add 0.2497    
Current (lb-rhs): -0.08218908309936523
150 domains visited
Cumulative time: 1.7609033584594727

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 13] [/input-16, 166] [/input-16, 166] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 166] [/input-16, 166] [/input-16, 64] [/input-16, 64] 
split level 1: [/input-16, 166] [/input-16, 54] [/input-16, 54] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 54] [/input-16, 54] [/input-16, 54] [/input-16, 54] 
split level 2: [/input-16, 54] [/input-16, 73] [/input-16, 73] [/input-16, 54] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] 
split level 3: [/input-16, 211] [/input-16, 211] [/input-16, 211] [/input-16, 211] [/input-16, 211] [/input-16, 211] [/input-16, 211] [/input-16, 211] [/input-16, 211] [/input-16, 211] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1170046329498291
10 lb beta sum: 0.15439634025096893, worst -0.08138036727905273
Time: prepare 0.0056    bound 0.1493    transfer 0.0029    finalize 0.0086    func 0.1692    
Accumulated time: func 0.7744    prepare 0.0461    bound 0.6811    transfer 0.0124    finalize 0.0352    
all_split False
======================Cut inference begins======================
max lb tensor(0.19827011) min lb tensor(-0.08044314)
Number of Verified Splits: 267 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 6
#cuts 4-6: 9
#cuts >= 20: 0
BICCOS time: 0.030040502548217773 
BICCOS Cumulative time: 0.06647729873657227
Preprocessing time: 0.011538505554199219 Inference time: 0.014019966125488281 Add cuts time: 0.003917217254638672 Cut analysis time: 0.0005648136138916016
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05518 (4), -0.05358 (4), -0.04716 (4), -0.04640 (4), -0.04624 (4), -0.04509 (4), -0.04277 (4), -0.04238 (4), -0.04206 (4), -0.04186 (4), -0.03938 (4), -0.03924 (4), -0.03731 (4), -0.03730 (4), -0.03436 (4), -0.03330 (4), -0.03186 (4), -0.03070 (4), -0.02280 (4), -0.02270 (4), 
Length of domains: 36
Time: pickout 0.0006    decision 0.0250    set_bounds 0.0156    solve 0.1693    add 0.2705    
Accumulated time: pickout 0.0026    decision 0.8464    set_bounds 0.0536    solve 0.6527    add 0.5202    
Current (lb-rhs): -0.05518341064453125
186 domains visited
Cumulative time: 2.2723593711853027

Shallow-BaB round 5
batch: 36
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 64] [/input-16, 64] [/input-16, 166] [/input-16, 166] [/input-16, 54] [/input-16, 54] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] 
split level 1: [/input-16, 73] [/input-16, 73] [/input-16, 54] [/input-16, 54] [/input-16, 73] [/input-16, 73] [/input-16, 166] [/input-16, 73] [/input-16, 166] [/input-16, 73] 
split level 2: [/input-16, 225] [/input-16, 225] [/input-16, 73] [/input-16, 73] [/input-16, 225] [/input-16, 225] [/input-16, 73] [/input-16, 225] [/input-16, 73] [/input-16, 225] 
split level 3: [/input-16, 211] [/input-16, 211] [/input-16, 225] [/input-16, 225] [/input-16, 211] [/input-16, 211] [/input-16, 225] [/input-16, 211] [/input-16, 225] [/input-16, 211] 
split level 4: [/input-16, 16] [/input-16, 16] [/input-16, 16] [/input-16, 16] [/input-16, 16] [/input-16, 16] [/input-16, 16] [/input-16, 16] [/input-16, 16] [/input-16, 16] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07832527160644531
10 lb beta sum: 0.111459881067276, worst -0.037251830101013184
Time: prepare 0.0051    bound 0.1568    transfer 0.0031    finalize 0.0075    func 0.1755    
Accumulated time: func 0.9499    prepare 0.0515    bound 0.8378    transfer 0.0155    finalize 0.0427    
all_split False
======================Cut inference begins======================
max lb tensor(0.36880487) min lb tensor(-0.03263463)
Number of Verified Splits: 317 of 360
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 6
#cuts 4-6: 13
#cuts >= 20: 0
BICCOS time: 0.03548908233642578 
BICCOS Cumulative time: 0.10196638107299805
Preprocessing time: 0.010489940643310547 Inference time: 0.01794576644897461 Add cuts time: 0.006389617919921875 Cut analysis time: 0.00066375732421875
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0006    decision 0.0284    set_bounds 0.0137    solve 0.1756    add 0.0243    
Accumulated time: pickout 0.0031    decision 0.8748    set_bounds 0.0673    solve 0.8284    add 0.5445    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
186 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 84,  13, 166,  64]), tensor([-1., -1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([-1.26703856e+34,  1.28215268e-01,  5.08718640e-02,  1.51746407e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 84,  13, 166,  64]), tensor([-1., -1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([-1.26703856e+34,  1.28215268e-01,  5.08718640e-02,  7.02176243e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 84,  13, 166,  64]), tensor([-1., -1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([-1.26703856e+34,  1.28215268e-01,  7.20115155e-02,  1.51255026e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 84,  13, 166,  64]), tensor([-1., -1.,  1.,  1.]), tensor([0, 0, 0, 0]), tensor([-1.26703856e+34,  1.28215268e-01,  7.20115155e-02,  7.18609244e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([84, 13, 64]), tensor([-1.,  1., -1.]), tensor([0, 0, 0]), tensor([-1.26703856e+34,  8.71417969e-02,  1.44748732e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 84,  13,  64, 211, 166]), tensor([-1.,  1.,  1., -1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([-1.26703856e+34,  8.71417969e-02,  7.90591687e-02,  5.32492846e-02,
         4.83264178e-02]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 84,  13,  64, 211, 166]), tensor([-1.,  1.,  1., -1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([-1.26703856e+34,  8.71417969e-02,  7.90591687e-02,  5.32492846e-02,
         6.22438043e-02]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 84,  13,  64, 211, 166]), tensor([-1.,  1.,  1.,  1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([-1.26703856e+34,  8.71417969e-02,  7.90591687e-02,  2.21168268e-02,
         4.46808785e-02]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 84,  13,  64, 211, 166]), tensor([-1.,  1.,  1.,  1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([-1.26703856e+34,  8.71417969e-02,  7.90591687e-02,  2.21168268e-02,
         6.35736436e-02]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([84]), tensor([1.]), tensor([0]), tensor([-1.26703856e+34]), tensor([0]))}
Shallow branching resets to n domains:  10
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4517669677734375
10 lb beta sum: 0.22687864303588867, worst -0.45172858238220215
Time: prepare 0.0005    bound 0.1466    transfer 0.0003    finalize 0.0005    func 0.1480    
Accumulated time: func 1.0979    prepare 0.0519    bound 0.9845    transfer 0.0158    finalize 0.0432    
After pruning, left:  1

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 64] 
split level 1: [/input-16, 13] 
split level 2: [/input-16, 166] 
split level 3: [/input-16, 54] 
cut re-enabled after branching node selection
0 lb beta sum: 0.005077538080513477, worst -0.22469401359558105
10 lb beta sum: 0.11283561587333679, worst -0.22239279747009277
Time: prepare 0.0009    bound 0.1452    transfer 0.0004    finalize 0.0007    func 0.1474    
Accumulated time: func 1.2453    prepare 0.0531    bound 1.1297    transfer 0.0162    finalize 0.0439    
all_split False
======================Cut inference begins======================
max lb tensor(-0.00354412) min lb tensor(-0.22189553)
Number of Verified Splits: 0 of 16
No cut inferred: All or none verified.
Total number of valid cuts: 19.
#cuts 1-3: 6
#cuts 4-6: 13
#cuts >= 20: 0
BICCOS time: 0.000797271728515625 
BICCOS Cumulative time: 0.10276365280151367
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22190 (4), -0.21001 (4), -0.19912 (4), -0.17489 (4), -0.15507 (4), -0.14400 (4), -0.14288 (4), -0.14051 (4), -0.13323 (4), -0.12413 (4), -0.12017 (4), -0.10844 (4), -0.03015 (4), -0.02331 (4), -0.01783 (4), -0.00354 (4), 
Length of domains: 16
Time: pickout 0.0004    decision 0.0167    set_bounds 0.0013    solve 0.1474    add 0.0013    
Accumulated time: pickout 0.0035    decision 0.8915    set_bounds 0.0686    solve 0.9758    add 0.5458    
Current (lb-rhs): -0.22189553081989288
202 domains visited
Cumulative time: 2.893524169921875

BaB round 2
batch: 16
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] 
cut re-enabled after branching node selection
0 lb beta sum: 0.08461768925189972, worst -0.2067747861146927
10 lb beta sum: 0.11565686017274857, worst -0.20483899116516113
Time: prepare 0.0015    bound 0.1472    transfer 0.0003    finalize 0.0008    func 0.1501    
Accumulated time: func 1.3954    prepare 0.0548    bound 1.2769    transfer 0.0165    finalize 0.0447    
all_split False
======================Cut inference begins======================
max lb tensor(0.09783646) min lb tensor(-0.20472050)
Number of Verified Splits: 8 of 32
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.10998031497001648, worst -0.1637723445892334
10 lb beta sum: 0.3431217074394226, worst -0.19432634115219116
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 6
#cuts 4-6: 14
#cuts >= 20: 0
BICCOS time: 0.15340852737426758 
BICCOS Cumulative time: 0.25617218017578125
Preprocessing time: 0.0013115406036376953 Inference time: 0.15098786354064941 Add cuts time: 0.0004093647003173828 Cut analysis time: 0.0006997585296630859
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20472 (5), -0.19279 (5), -0.18122 (5), -0.15627 (5), -0.13733 (5), -0.12590 (5), -0.12478 (5), -0.12338 (5), -0.11538 (5), -0.10691 (5), -0.10302 (5), -0.10131 (5), -0.09889 (5), -0.09256 (5), -0.09087 (5), -0.08304 (5), -0.04382 (5), -0.04091 (5), -0.03606 (5), -0.02834 (5), 
Length of domains: 24
Time: pickout 0.0004    decision 0.0152    set_bounds 0.0017    solve 0.1501    add 0.0021    
Accumulated time: pickout 0.0040    decision 0.9068    set_bounds 0.0703    solve 1.1259    add 0.5478    
Current (lb-rhs): -0.20472049713134766
226 domains visited
Cumulative time: 3.216691732406616

BaB round 3
batch: 24
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1918315887451172
10 lb beta sum: 0.13906222581863403, worst -0.19167566299438477
Time: prepare 0.0010    bound 0.1453    transfer 0.0004    finalize 0.0013    func 0.1484    
Accumulated time: func 1.5437    prepare 0.0559    bound 1.4222    transfer 0.0169    finalize 0.0460    
all_split False
======================Cut inference begins======================
max lb tensor(0.12758447) min lb tensor(-0.19158912)
Number of Verified Splits: 16 of 48
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19420719146728516
10 lb beta sum: 0.4000837802886963, worst -0.17928966879844666
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 6
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.15772414207458496 
BICCOS Cumulative time: 0.4138963222503662
Preprocessing time: 0.0017457008361816406 Inference time: 0.15410113334655762 Add cuts time: 0.001008749008178711 Cut analysis time: 0.0008685588836669922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19159 (6), -0.17945 (6), -0.16791 (6), -0.14277 (6), -0.12333 (6), -0.11174 (6), -0.11093 (6), -0.11049 (6), -0.10259 (6), -0.09396 (6), -0.09018 (6), -0.08964 (6), -0.08713 (6), -0.08493 (6), -0.08395 (6), -0.07906 (6), -0.07716 (6), -0.07709 (6), -0.06878 (6), -0.06482 (6), 
Length of domains: 32
Time: pickout 0.0005    decision 0.0141    set_bounds 0.0024    solve 0.1484    add 0.0015    
Accumulated time: pickout 0.0045    decision 0.9209    set_bounds 0.0727    solve 1.2743    add 0.5494    
Current (lb-rhs): -0.1915891170501709
258 domains visited
Cumulative time: 3.541614055633545

BaB round 4
batch: 32
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 211] [/input-16, 211] [/input-16, 211] [/input-16, 211] [/input-16, 211] [/input-16, 211] [/input-16, 211] [/input-16, 211] [/input-16, 211] [/input-16, 211] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17059922218322754
10 lb beta sum: 0.10588712245225906, worst -0.17049312591552734
Time: prepare 0.0012    bound 0.1454    transfer 0.0006    finalize 0.0016    func 0.1493    
Accumulated time: func 1.6930    prepare 0.0573    bound 1.5677    transfer 0.0175    finalize 0.0476    
all_split False
======================Cut inference begins======================
max lb tensor(0.02339369) min lb tensor(-0.17043924)
Number of Verified Splits: 15 of 64
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16635799407958984
10 lb beta sum: 0.24503876268863678, worst -0.3691415786743164
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 6
#cuts 4-6: 19
#cuts >= 20: 0
BICCOS time: 0.16522717475891113 
BICCOS Cumulative time: 0.5791234970092773
Preprocessing time: 0.002191781997680664 Inference time: 0.1612687110900879 Add cuts time: 0.0008921623229980469 Cut analysis time: 0.0008745193481445312
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17044 (7), -0.15847 (7), -0.15842 (7), -0.14708 (7), -0.14659 (7), -0.13420 (7), -0.12131 (7), -0.10883 (7), -0.10142 (7), -0.09149 (7), -0.09125 (7), -0.09046 (7), -0.08913 (7), -0.08267 (7), -0.07760 (7), -0.07746 (7), -0.07443 (7), -0.06720 (7), -0.06623 (7), -0.06606 (7), 
Length of domains: 49
Time: pickout 0.0005    decision 0.0144    set_bounds 0.0029    solve 0.1493    add 0.0020    
Accumulated time: pickout 0.0050    decision 0.9353    set_bounds 0.0756    solve 1.4236    add 0.5513    
Current (lb-rhs): -0.1704392433166504
307 domains visited
Cumulative time: 3.876251220703125

BaB round 5
batch: 49
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 16] [/input-16, 16] [/input-16, 16] [/input-16, 16] [/input-16, 16] [/input-16, 16] [/input-16, 16] [/input-16, 16] [/input-16, 16] [/input-16, 16] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15432071685791016
10 lb beta sum: 0.0853734016418457, worst -0.15422964096069336
Time: prepare 0.0017    bound 0.1519    transfer 0.0008    finalize 0.0025    func 0.1578    
Accumulated time: func 1.8508    prepare 0.0592    bound 1.7196    transfer 0.0183    finalize 0.0501    
all_split False
======================Cut inference begins======================
max lb tensor(0.04313422) min lb tensor(-0.15418911)
Number of Verified Splits: 30 of 98
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20085549354553223
10 lb beta sum: 0.30096930265426636, worst -0.09687599539756775
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 34.
#cuts 1-3: 6
#cuts 4-6: 22
#cuts 7-9: 6
#cuts >= 20: 0
BICCOS time: 0.17507576942443848 
BICCOS Cumulative time: 0.7541992664337158
Preprocessing time: 0.0031838417053222656 Inference time: 0.16899585723876953 Add cuts time: 0.0015933513641357422 Cut analysis time: 0.0013027191162109375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15419 (8), -0.14248 (8), -0.14247 (8), -0.13093 (8), -0.13068 (8), -0.12635 (8), -0.11831 (8), -0.11054 (8), -0.10946 (8), -0.10729 (8), -0.10559 (8), -0.09453 (8), -0.09275 (8), -0.08952 (8), -0.08572 (8), -0.07834 (8), -0.07595 (8), -0.07550 (8), -0.07473 (8), -0.07375 (8), 
Length of domains: 68
Time: pickout 0.0006    decision 0.0190    set_bounds 0.0045    solve 0.1578    add 0.0024    
Accumulated time: pickout 0.0055    decision 0.9543    set_bounds 0.0802    solve 1.5814    add 0.5537    
Current (lb-rhs): -0.1541891098022461
375 domains visited
Cumulative time: 4.236225366592407

BaB round 6
batch: 68
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 104] [/input-16, 104] [/input-16, 104] [/input-16, 104] [/input-16, 104] [/input-16, 104] [/input-16, 104] [/input-16, 104] [/input-16, 104] [/input-16, 104] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14303135871887207
10 lb beta sum: 0.09748289734125137, worst -0.14294028282165527
Time: prepare 0.0022    bound 0.1494    transfer 0.0012    finalize 0.0034    func 0.1572    
Accumulated time: func 2.0080    prepare 0.0616    bound 1.8690    transfer 0.0196    finalize 0.0534    
all_split False
======================Cut inference begins======================
max lb tensor(0.01657020) min lb tensor(-0.14290428)
Number of Verified Splits: 34 of 136
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17514824867248535
10 lb beta sum: 0.43935731053352356, worst -0.11655446887016296
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 6
#cuts 4-6: 22
#cuts 7-9: 9
#cuts >= 20: 0
BICCOS time: 0.171522855758667 
BICCOS Cumulative time: 0.9257221221923828
Preprocessing time: 0.004291057586669922 Inference time: 0.16468453407287598 Add cuts time: 0.0010592937469482422 Cut analysis time: 0.0014879703521728516
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14290 (9), -0.13106 (9), -0.13087 (9), -0.11938 (9), -0.11901 (9), -0.11392 (9), -0.11101 (9), -0.10616 (9), -0.10173 (9), -0.09862 (9), -0.09852 (9), -0.09759 (9), -0.09492 (9), -0.09406 (9), -0.09215 (9), -0.08971 (9), -0.08714 (9), -0.08276 (9), -0.08051 (9), -0.07995 (9), 
Length of domains: 102
Time: pickout 0.0013    decision 0.0188    set_bounds 0.0061    solve 0.1572    add 0.0032    
Accumulated time: pickout 0.0069    decision 0.9731    set_bounds 0.0862    solve 1.7386    add 0.5569    
Current (lb-rhs): -0.14290428161621094
477 domains visited
Cumulative time: 4.5948097705841064

BaB round 7
batch: 102
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 31] [/input-16, 31] [/input-16, 180] [/input-16, 180] [/input-16, 31] [/input-16, 180] [/input-16, 31] [/input-16, 180] [/input-16, 31] [/input-16, 180] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1382434368133545
10 lb beta sum: 0.05328069254755974, worst -0.13818955421447754
Time: prepare 0.0031    bound 0.1530    transfer 0.0017    finalize 0.0047    func 0.1639    
Accumulated time: func 2.1718    prepare 0.0649    bound 2.0220    transfer 0.0212    finalize 0.0581    
all_split False
======================Cut inference begins======================
max lb tensor(0.46755341) min lb tensor(-0.13818169)
Number of Verified Splits: 94 of 204
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 7
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.01888561248779297 
BICCOS Cumulative time: 0.9446077346801758
Preprocessing time: 0.0062694549560546875 Inference time: 0.009063482284545898 Add cuts time: 0.0026967525482177734 Cut analysis time: 0.0008559226989746094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13818 (10), -0.12634 (10), -0.12603 (10), -0.11934 (10), -0.11417 (10), -0.10874 (10), -0.10587 (10), -0.09627 (10), -0.09446 (10), -0.09354 (10), -0.09182 (10), -0.08988 (10), -0.08947 (10), -0.08390 (10), -0.08238 (10), -0.08071 (10), -0.08037 (10), -0.07995 (10), -0.07935 (10), -0.07909 (10), 
Length of domains: 110
Time: pickout 0.0008    decision 0.0204    set_bounds 0.0087    solve 0.1639    add 0.0030    
Accumulated time: pickout 0.0077    decision 0.9934    set_bounds 0.0949    solve 1.9025    add 0.5599    
Current (lb-rhs): -0.1381816864013672
587 domains visited
Cumulative time: 4.81124472618103

BaB round 8
batch: 110
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 190] [/input-16, 31] [/input-16, 31] [/input-16, 31] [/input-16, 31] [/input-16, 31] [/input-16, 31] [/input-16, 31] [/input-16, 31] [/input-16, 31] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.122833251953125
10 lb beta sum: 0.06936999410390854, worst -0.12276816368103027
Time: prepare 0.0034    bound 0.1536    transfer 0.0017    finalize 0.0041    func 0.1643    
Accumulated time: func 2.3361    prepare 0.0685    bound 2.1756    transfer 0.0229    finalize 0.0623    
all_split False
======================Cut inference begins======================
max lb tensor(0.42747784) min lb tensor(-0.12275338)
Number of Verified Splits: 104 of 220
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 9
#cuts 4-6: 10
#cuts >= 20: 0
BICCOS time: 0.01939082145690918 
BICCOS Cumulative time: 0.963998556137085
Preprocessing time: 0.0066394805908203125 Inference time: 0.010305643081665039 Add cuts time: 0.0017926692962646484 Cut analysis time: 0.0006530284881591797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12275 (11), -0.12006 (11), -0.11147 (11), -0.11013 (11), -0.10894 (11), -0.10603 (11), -0.10369 (11), -0.10190 (11), -0.09895 (11), -0.09523 (11), -0.09205 (11), -0.09200 (11), -0.08991 (11), -0.08968 (11), -0.08915 (11), -0.08822 (11), -0.08024 (11), -0.07910 (11), -0.07906 (11), -0.07827 (11), 
Length of domains: 116
Time: pickout 0.0010    decision 0.0211    set_bounds 0.0092    solve 0.1644    add 0.0028    
Accumulated time: pickout 0.0087    decision 1.0145    set_bounds 0.1042    solve 2.0669    add 0.5627    
Current (lb-rhs): -0.12275338172912598
703 domains visited
Cumulative time: 5.030010223388672

BaB round 9
batch: 116
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 190] [/input-16, 190] [/input-16, 190] [/input-16, 190] [/input-16, 190] [/input-16, 190] [/input-16, 190] [/input-16, 190] [/input-16, 190] [/input-16, 190] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1094062328338623
10 lb beta sum: 0.07671405375003815, worst -0.10934782028198242
Time: prepare 0.0035    bound 0.1534    transfer 0.0017    finalize 0.0043    func 0.1644    
Accumulated time: func 2.5005    prepare 0.0722    bound 2.3289    transfer 0.0246    finalize 0.0665    
all_split False
======================Cut inference begins======================
max lb tensor(0.35451433) min lb tensor(-0.10933948)
Number of Verified Splits: 44 of 232
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 10
#cuts 4-6: 9
#cuts >= 20: 0
BICCOS time: 0.013359785079956055 
BICCOS Cumulative time: 0.977358341217041
Preprocessing time: 0.006920814514160156 Inference time: 0.004746675491333008 Add cuts time: 0.0008094310760498047 Cut analysis time: 0.0008828639984130859
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10934 (12), -0.10740 (12), -0.10661 (12), -0.10495 (12), -0.09865 (12), -0.09709 (12), -0.09595 (12), -0.09479 (12), -0.09369 (12), -0.09308 (12), -0.09242 (12), -0.08966 (12), -0.08963 (12), -0.08839 (12), -0.08806 (12), -0.08771 (12), -0.08614 (12), -0.08249 (12), -0.08140 (12), -0.07858 (12), 
Length of domains: 188
Time: pickout 0.0018    decision 0.0230    set_bounds 0.0103    solve 0.1645    add 0.0044    
Accumulated time: pickout 0.0105    decision 1.0375    set_bounds 0.1144    solve 2.2314    add 0.5671    
Current (lb-rhs): -0.10933947563171387
891 domains visited
Cumulative time: 5.247916221618652

BaB round 10
batch: 188
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 99] [/input-16, 99] [/input-16, 99] [/input-16, 99] [/input-16, 99] [/input-16, 99] [/input-16, 99] [/input-16, 99] [/input-16, 99] [/input-16, 99] 
cut re-enabled after branching node selection
0 lb beta sum: 0.07487457990646362, worst -0.10564517974853516
10 lb beta sum: 0.23793432116508484, worst -0.10563206672668457
Time: prepare 0.0154    bound 0.1549    transfer 0.0030    finalize 0.0077    func 0.1836    
Accumulated time: func 2.6841    prepare 0.0878    bound 2.4839    transfer 0.0276    finalize 0.0743    
all_split False
======================Cut inference begins======================
max lb tensor(0.08683158) min lb tensor(-0.10562944)
Number of Verified Splits: 163 of 376
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 11
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.03268003463745117 
BICCOS Cumulative time: 1.0100383758544922
Preprocessing time: 0.01103830337524414 Inference time: 0.01891350746154785 Add cuts time: 0.0021238327026367188 Cut analysis time: 0.0006043910980224609
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10563 (13), -0.10366 (13), -0.10288 (13), -0.10118 (13), -0.09491 (13), -0.09331 (13), -0.09215 (13), -0.08995 (13), -0.08969 (13), -0.08929 (13), -0.08844 (13), -0.08659 (13), -0.08463 (13), -0.08116 (13), -0.07870 (13), -0.07862 (13), -0.07519 (13), -0.07476 (13), -0.07469 (13), -0.07395 (13), 
Length of domains: 213
Time: pickout 0.0013    decision 0.0279    set_bounds 0.0136    solve 0.1838    add 0.0054    
Accumulated time: pickout 0.0118    decision 1.0654    set_bounds 0.1281    solve 2.4152    add 0.5725    
Current (lb-rhs): -0.10562944412231445
1104 domains visited
Cumulative time: 5.513926267623901

BaB round 11
batch: 213
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5787] [/input-12, 1692] [/input-12, 1692] [/input-12, 363] [/input-12, 1579] [/input-12, 1692] [/input-12, 7778] [/input-12, 1692] [/input-16, 99] [/input-12, 1579] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10155153274536133
10 lb beta sum: 0.43236279487609863, worst -0.10152816772460938
Time: prepare 0.0084    bound 0.1544    transfer 0.0035    finalize 0.0124    func 0.1815    
Accumulated time: func 2.8656    prepare 0.0965    bound 2.6382    transfer 0.0311    finalize 0.0867    
all_split False
======================Cut inference begins======================
max lb tensor(0.42180347) min lb tensor(-0.10151815)
Number of Verified Splits: 262 of 426
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 13
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.04545164108276367 
BICCOS Cumulative time: 1.0554900169372559
Preprocessing time: 0.012378692626953125 Inference time: 0.029419660568237305 Add cuts time: 0.0031015872955322266 Cut analysis time: 0.0005517005920410156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10152 (14), -0.09967 (14), -0.09892 (14), -0.09839 (14), -0.09785 (14), -0.09674 (14), -0.09428 (14), -0.09220 (14), -0.09086 (14), -0.08844 (14), -0.08744 (14), -0.08662 (14), -0.08639 (14), -0.08625 (14), -0.08537 (14), -0.08535 (14), -0.08398 (14), -0.08324 (14), -0.08294 (14), -0.08268 (14), 
Length of domains: 164
Time: pickout 0.0072    decision 0.0304    set_bounds 0.0152    solve 0.1816    add 0.0036    
Accumulated time: pickout 0.0190    decision 1.0958    set_bounds 0.1433    solve 2.5968    add 0.5761    
Current (lb-rhs): -0.10151815414428711
1268 domains visited
Cumulative time: 5.799474716186523

BaB round 12
batch: 164
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 99] [/input-12, 6150] [/input-16, 99] [/input-12, 6150] [/input-16, 99] [/input-12, 1692] [/input-12, 3171] [/input-16, 99] [/input-12, 6150] [/input-16, 99] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10069584846496582
10 lb beta sum: 0.6384329199790955, worst -0.0989236831665039
Time: prepare 0.0066    bound 0.1735    transfer 0.0025    finalize 0.0065    func 0.1913    
Accumulated time: func 3.0569    prepare 0.1033    bound 2.8117    transfer 0.0337    finalize 0.0932    
all_split False
======================Cut inference begins======================
max lb tensor(0.36527979) min lb tensor(-0.09891033)
Number of Verified Splits: 59 of 328
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 14
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.018820762634277344 
BICCOS Cumulative time: 1.0743107795715332
Preprocessing time: 0.009809017181396484 Inference time: 0.006910562515258789 Add cuts time: 0.0015492439270019531 Cut analysis time: 0.0005519390106201172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09891 (15), -0.09710 (15), -0.09689 (15), -0.09596 (15), -0.09563 (15), -0.09481 (15), -0.08890 (15), -0.08843 (15), -0.08626 (15), -0.08564 (15), -0.08563 (15), -0.08535 (15), -0.08431 (15), -0.08410 (15), -0.08396 (15), -0.08384 (15), -0.08341 (15), -0.08313 (15), -0.08308 (15), -0.08218 (15), 
Length of domains: 269
Time: pickout 0.0013    decision 0.0252    set_bounds 0.0146    solve 0.1914    add 0.0056    
Accumulated time: pickout 0.0203    decision 1.1210    set_bounds 0.1579    solve 2.7882    add 0.5816    
Current (lb-rhs): -0.09891033172607422
1537 domains visited
Cumulative time: 6.0570292472839355

BaB round 13
batch: 256
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 99] [/input-16, 99] [/input-16, 99] [/input-16, 99] [/input-16, 99] [/input-16, 99] [/input-12, 3171] [/input-12, 1692] [/input-12, 5149] [/input-12, 1579] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09712719917297363
10 lb beta sum: 0.752642035484314, worst -0.09432834386825562
Time: prepare 0.0102    bound 0.1701    transfer 0.0039    finalize 0.0122    func 0.1999    
Accumulated time: func 3.2568    prepare 0.1137    bound 2.9819    transfer 0.0376    finalize 0.1054    
all_split False
======================Cut inference begins======================
max lb tensor(0.35557878) min lb tensor(-0.09431155)
Number of Verified Splits: 66 of 512
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 14
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.0257723331451416 
BICCOS Cumulative time: 1.1000831127166748
Preprocessing time: 0.014736175537109375 Inference time: 0.00829172134399414 Add cuts time: 0.002191781997680664 Cut analysis time: 0.0005526542663574219
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09431 (16), -0.09226 (16), -0.09207 (16), -0.09091 (16), -0.09036 (16), -0.08993 (16), -0.08982 (16), -0.08914 (16), -0.08844 (16), -0.08743 (16), -0.08724 (16), -0.08681 (16), -0.08643 (16), -0.08533 (16), -0.08474 (16), -0.08368 (16), -0.08242 (16), -0.08188 (16), -0.08116 (16), -0.08036 (16), 
Length of domains: 459
Time: pickout 0.0014    decision 0.0304    set_bounds 0.0228    solve 0.2001    add 0.0112    
Accumulated time: pickout 0.0216    decision 1.1513    set_bounds 0.1807    solve 2.9882    add 0.5929    
Current (lb-rhs): -0.09431155025959015
1983 domains visited
current_vram/total_varm: 2.6GB/99.9GB, batch_size increase to 512
Cumulative time: 6.3502373695373535

BaB round 14
batch: 459
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1826] [/input-12, 2596] [/input-12, 3171] [/input-12, 6150] [/input-12, 3171] [/input-12, 3171] [/input-12, 717] [/input-12, 986] [/input-12, 1579] [/input-12, 2596] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8142959475517273, worst -0.0919853001832962
10 lb beta sum: 0.8433116674423218, worst -0.09196765720844269
Time: prepare 0.0388    bound 0.2188    transfer 0.0076    finalize 0.0323    func 0.3036    
Accumulated time: func 3.5604    prepare 0.1527    bound 3.2007    transfer 0.0451    finalize 0.1376    
all_split False
======================Cut inference begins======================
max lb tensor(0.24034464) min lb tensor(-0.09195574)
Number of Verified Splits: 91 of 918
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 14
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.0429840087890625 
BICCOS Cumulative time: 1.1430671215057373
Preprocessing time: 0.028015613555908203 Inference time: 0.012252569198608398 Add cuts time: 0.0021486282348632812 Cut analysis time: 0.0005671977996826172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09196 (17), -0.08997 (17), -0.08965 (17), -0.08888 (17), -0.08872 (17), -0.08780 (17), -0.08742 (17), -0.08689 (17), -0.08623 (17), -0.08613 (17), -0.08499 (17), -0.08493 (17), -0.08452 (17), -0.08420 (17), -0.08417 (17), -0.08393 (17), -0.08372 (17), -0.08297 (17), -0.08232 (17), -0.08215 (17), 
Length of domains: 827
Time: pickout 0.0021    decision 0.0490    set_bounds 0.0395    solve 0.3039    add 0.0205    
Accumulated time: pickout 0.0237    decision 1.2003    set_bounds 0.2202    solve 3.2921    add 0.6134    
Current (lb-rhs): -0.09195573627948761
2810 domains visited
Cumulative time: 6.810101270675659

BaB round 15
batch: 512
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 363] [/input-12, 2588] [/input-12, 6150] [/input-16, 99] [/input-12, 6150] [/input-12, 1572] [/input-12, 363] [/input-12, 5149] [/input-12, 717] [/input-12, 1826] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8226040601730347, worst -0.09103496372699738
10 lb beta sum: 0.8241455554962158, worst -0.09100277721881866
Time: prepare 0.0446    bound 0.2230    transfer 0.0080    finalize 0.0273    func 0.3108    
Accumulated time: func 3.8711    prepare 0.1976    bound 3.4238    transfer 0.0531    finalize 0.1649    
all_split False
======================Cut inference begins======================
max lb tensor(0.24023147) min lb tensor(-0.09098823)
Number of Verified Splits: 76 of 1024
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 15
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.04474997520446777 
BICCOS Cumulative time: 1.187817096710205
Preprocessing time: 0.03160214424133301 Inference time: 0.010481119155883789 Add cuts time: 0.002018451690673828 Cut analysis time: 0.0006482601165771484
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09099 (18), -0.08997 (17), -0.08965 (17), -0.08780 (17), -0.08761 (18), -0.08742 (17), -0.08658 (18), -0.08613 (17), -0.08499 (17), -0.08471 (18), -0.08469 (18), -0.08452 (17), -0.08417 (17), -0.08353 (18), -0.08342 (18), -0.08267 (18), -0.08215 (17), -0.08187 (18), -0.08184 (18), -0.08155 (18), 
Length of domains: 1263
Time: pickout 0.0187    decision 0.0487    set_bounds 0.2094    solve 0.3110    add 0.0251    
Accumulated time: pickout 0.0424    decision 1.2490    set_bounds 0.4297    solve 3.6031    add 0.6385    
Current (lb-rhs): -0.09098823368549347
3758 domains visited
current_vram/total_varm: 4.7GB/99.9GB, batch_size increase to 1024
Cumulative time: 7.470674514770508

BaB round 16
batch: 1024
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1826] [/input-12, 2588] [/input-12, 2596] [/input-12, 1692] [/input-12, 717] [/input-12, 717] [/input-12, 5148] [/input-12, 3171] [/input-12, 5149] [/input-12, 6150] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0920255184173584
10 lb beta sum: 0.7814433574676514, worst -0.09097617864608765
Time: prepare 0.0388    bound 0.3751    transfer 0.0240    finalize 0.0713    func 0.5234    
Accumulated time: func 4.3946    prepare 0.2367    bound 3.7989    transfer 0.0771    finalize 0.2362    
all_split False
======================Cut inference begins======================
max lb tensor(0.39158881) min lb tensor(-0.09097226)
Number of Verified Splits: 218 of 2048
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 15
#cuts 4-6: 10
#cuts >= 20: 0
BICCOS time: 0.10090374946594238 
BICCOS Cumulative time: 1.2887208461761475
Preprocessing time: 0.06328892707824707 Inference time: 0.03240847587585449 Add cuts time: 0.004369974136352539 Cut analysis time: 0.0008363723754882812
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09097 (19), -0.08876 (18), -0.08801 (18), -0.08759 (19), -0.08681 (18), -0.08644 (18), -0.08507 (18), -0.08457 (19), -0.08406 (18), -0.08342 (18), -0.08305 (19), -0.08299 (18), -0.08261 (18), -0.08187 (18), -0.08184 (19), -0.08146 (19), -0.08145 (18), -0.08128 (19), -0.08094 (19), -0.08041 (19), 
Length of domains: 2069
Time: pickout 0.0056    decision 0.0866    set_bounds 0.0867    solve 0.5238    add 0.0518    
Accumulated time: pickout 0.0481    decision 1.3356    set_bounds 0.5164    solve 4.1269    add 0.6902    
Current (lb-rhs): -0.09097225964069366
5588 domains visited
current_vram/total_varm: 7.2GB/99.9GB, batch_size increase to 2048
Cumulative time: 8.337401866912842

BaB round 17
batch: 2048
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1826] [/input-12, 1572] [/input-12, 7778] [/input-12, 2596] [/input-12, 363] [/input-12, 2596] [/input-12, 1826] [/input-12, 7778] [/input-12, 7778] [/input-12, 5148] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08968544006347656
10 lb beta sum: 0.7706677913665771, worst -0.08767479658126831
Time: prepare 0.0852    bound 0.6940    transfer 0.0419    finalize 0.1392    func 0.9882    
Accumulated time: func 5.3828    prepare 0.3223    bound 4.4929    transfer 0.1190    finalize 0.3754    
all_split False
======================Cut inference begins======================
max lb tensor(0.36339992) min lb tensor(-0.08766754)
Number of Verified Splits: 462 of 4096
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 33.
#cuts 1-3: 16
#cuts 4-6: 17
#cuts >= 20: 0
BICCOS time: 0.2167527675628662 
BICCOS Cumulative time: 1.5054736137390137
Preprocessing time: 0.13303589820861816 Inference time: 0.07205820083618164 Add cuts time: 0.010628223419189453 Cut analysis time: 0.0010304450988769531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08767 (20), -0.08704 (19), -0.08641 (19), -0.08637 (20), -0.08520 (19), -0.08464 (19), -0.08429 (20), -0.08392 (19), -0.08327 (19), -0.08309 (20), -0.08295 (19), -0.08274 (19), -0.08258 (19), -0.08197 (19), -0.08145 (20), -0.08084 (20), -0.08019 (20), -0.08003 (20), -0.07973 (19), -0.07969 (19), 
Length of domains: 3655
Time: pickout 0.0094    decision 0.1720    set_bounds 0.4680    solve 0.9899    add 0.0957    
Accumulated time: pickout 0.0574    decision 1.5076    set_bounds 0.9844    solve 5.1167    add 0.7859    
Current (lb-rhs): -0.0876675397157669
9222 domains visited
current_vram/total_varm: 12.2GB/99.9GB, batch_size increase to 4096
Cumulative time: 10.305224895477295

BaB round 18
batch: 3655
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 717] [/input-12, 733] [/input-12, 717] [/input-12, 717] [/input-12, 5149] [/input-12, 5155] [/input-12, 7778] [/input-12, 1572] [/input-12, 733] [/input-12, 733] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0868062973022461
10 lb beta sum: 0.7550859451293945, worst -0.08576884865760803
Time: prepare 0.1634    bound 1.1343    transfer 0.1203    finalize 0.2593    func 1.7248    
Accumulated time: func 7.1076    prepare 0.4861    bound 5.6272    transfer 0.2393    finalize 0.6346    
all_split False
======================Cut inference begins======================
max lb tensor(0.42462432) min lb tensor(-0.08576541)
Number of Verified Splits: 1140 of 7310
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 40.
#cuts 1-3: 23
#cuts 4-6: 17
#cuts >= 20: 0
BICCOS time: 0.471355676651001 
BICCOS Cumulative time: 1.9768292903900146
Preprocessing time: 0.23638272285461426 Inference time: 0.198944091796875 Add cuts time: 0.030068159103393555 Cut analysis time: 0.005960702896118164
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08577 (21), -0.08455 (20), -0.08442 (21), -0.08369 (20), -0.08307 (20), -0.08239 (21), -0.08233 (20), -0.08182 (20), -0.08166 (20), -0.08117 (21), -0.08115 (20), -0.08099 (20), -0.08017 (21), -0.08002 (20), -0.07956 (21), -0.07954 (20), -0.07916 (20), -0.07902 (21), -0.07902 (20), -0.07871 (21), 
Length of domains: 6170
Time: pickout 0.1382    decision 0.2938    set_bounds 0.5434    solve 1.7275    add 0.1682    
Accumulated time: pickout 0.1957    decision 1.8014    set_bounds 1.5277    solve 6.8443    add 0.9541    
Current (lb-rhs): -0.08576540648937225
15392 domains visited
Cumulative time: 13.678955554962158

BaB round 19
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 986] [/input-12, 2597] [/input-12, 7778] [/input-12, 2588] [/input-12, 717] [/input-12, 5148] [/input-12, 2597] [/input-12, 1573] [/input-12, 5149] [/input-12, 733] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08478784561157227
10 lb beta sum: 0.8326689004898071, worst -0.16990506649017334
Time: prepare 0.1821    bound 1.2590    transfer 0.1266    finalize 0.6273    func 2.2493    
Accumulated time: func 9.3569    prepare 0.6685    bound 6.8862    transfer 0.3660    finalize 1.2619    
all_split False
======================Cut inference begins======================
max lb tensor(0.40205961) min lb tensor(-0.08382018)
Number of Verified Splits: 1656 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 20
#cuts 4-6: 7
#cuts >= 20: 0
BICCOS time: 0.6061804294586182 
BICCOS Cumulative time: 2.583009719848633
Preprocessing time: 0.2618134021759033 Inference time: 0.2989377975463867 Add cuts time: 0.04442405700683594 Cut analysis time: 0.0010051727294921875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08382 (22), -0.08368 (21), -0.08263 (21), -0.08231 (22), -0.08230 (21), -0.08026 (22), -0.08017 (21), -0.07954 (20), -0.07922 (21), -0.07904 (22), -0.07902 (21), -0.07899 (21), -0.07880 (21), -0.07871 (21), -0.07768 (20), -0.07758 (21), -0.07756 (21), -0.07753 (22), -0.07751 (20), -0.07745 (20), 
Length of domains: 8610
Time: pickout 0.0209    decision 0.5323    set_bounds 0.3825    solve 2.2513    add 0.1950    
Accumulated time: pickout 0.2166    decision 2.3337    set_bounds 1.9102    solve 9.0956    add 1.1491    
Current (lb-rhs): -0.08382017910480499
21928 domains visited
current_vram/total_varm: 29.1GB/99.9GB, batch_size increase to 8192
Cumulative time: 17.701968669891357

BaB round 20
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1826] [/input-12, 5157] [/input-12, 717] [/input-12, 349] [/input-12, 1826] [/input-12, 6150] [/input-12, 5149] [/input-12, 7778] [/input-12, 986] [/input-12, 1579] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08276772499084473
10 lb beta sum: 0.8945103883743286, worst -0.08213156461715698
Time: prepare 0.3501    bound 2.4164    transfer 0.2545    finalize 0.6683    func 3.7982    
Accumulated time: func 13.1551    prepare 1.0190    bound 9.3025    transfer 0.6205    finalize 1.9302    
all_split False
======================Cut inference begins======================
max lb tensor(0.40453649) min lb tensor(-0.08179906)
Number of Verified Splits: 3588 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 15
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 1.5926525592803955 
BICCOS Cumulative time: 4.175662279129028
Preprocessing time: 0.5300123691558838 Inference time: 0.9656422138214111 Add cuts time: 0.09610700607299805 Cut analysis time: 0.0008909702301025391
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08180 (22), -0.08179 (23), -0.08040 (22), -0.08015 (23), -0.07913 (22), -0.07836 (22), -0.07828 (22), -0.07821 (23), -0.07797 (22), -0.07676 (23), -0.07647 (22), -0.07627 (22), -0.07596 (22), -0.07565 (22), -0.07565 (23), -0.07551 (22), -0.07547 (23), -0.07544 (23), -0.07543 (23), -0.07543 (21), 
Length of domains: 13214
Time: pickout 0.0416    decision 0.7844    set_bounds 0.9928    solve 3.8022    add 0.3368    
Accumulated time: pickout 0.2582    decision 3.1181    set_bounds 2.9030    solve 12.8978    add 1.4859    
Current (lb-rhs): -0.08179906010627747
34724 domains visited
Cumulative time: 25.32006049156189

BaB round 21
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2596] [/input-12, 1826] [/input-12, 986] [/input-12, 1826] [/input-12, 3349] [/input-12, 5148] [/input-12, 5148] [/input-12, 5149] [/input-12, 349] [/input-12, 717] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0806422233581543
10 lb beta sum: 0.8525062799453735, worst -0.0799972414970398
Time: prepare 0.3554    bound 2.4121    transfer 0.2506    finalize 0.7029    func 3.8301    
Accumulated time: func 16.9851    prepare 1.3748    bound 11.7146    transfer 0.8711    finalize 2.6331    
all_split False
======================Cut inference begins======================
max lb tensor(0.39846259) min lb tensor(-0.07970817)
Number of Verified Splits: 3658 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 15
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 1.7320034503936768 
BICCOS Cumulative time: 5.907665729522705
Preprocessing time: 0.8753147125244141 Inference time: 0.7481377124786377 Add cuts time: 0.10750865936279297 Cut analysis time: 0.0010423660278320312
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08179 (23), -0.08015 (23), -0.07971 (23), -0.07913 (22), -0.07821 (23), -0.07816 (23), -0.07797 (23), -0.07676 (23), -0.07645 (23), -0.07617 (23), -0.07611 (23), -0.07596 (22), -0.07565 (23), -0.07551 (22), -0.07544 (23), -0.07543 (23), -0.07480 (23), -0.07477 (22), -0.07460 (23), -0.07454 (22), 
Length of domains: 17748
Time: pickout 0.0466    decision 0.6090    set_bounds 1.0568    solve 3.8356    add 0.4595    
Accumulated time: pickout 0.3048    decision 3.7271    set_bounds 3.9597    solve 16.7334    add 1.9455    
Current (lb-rhs): -0.08178667724132538
47450 domains visited
Cumulative time: 33.14027523994446

BaB round 22
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 349] [/input-12, 2597] [/input-12, 5157] [/input-12, 5531] [/input-12, 6150] [/input-12, 7778] [/input-16, 154] [/input-12, 5148] [/input-12, 7778] [/input-12, 717] 
cut re-enabled after branching node selection
0 lb beta sum: 0.36849266290664673, worst -0.08035683631896973
10 lb beta sum: 0.8990797996520996, worst -0.07938520610332489
Time: prepare 0.5174    bound 2.4140    transfer 0.2451    finalize 1.0835    func 4.3702    
Accumulated time: func 21.3553    prepare 1.8926    bound 14.1286    transfer 1.1162    finalize 3.7166    
all_split False
======================Cut inference begins======================
max lb tensor(0.39911723) min lb tensor(-0.07937817)
Number of Verified Splits: 3894 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 15
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 1.4384212493896484 
BICCOS Cumulative time: 7.3460869789123535
Preprocessing time: 0.5418665409088135 Inference time: 0.7831194400787354 Add cuts time: 0.1123964786529541 Cut analysis time: 0.0010387897491455078
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07971 (23), -0.07938 (24), -0.07816 (23), -0.07797 (23), -0.07796 (24), -0.07771 (24), -0.07707 (23), -0.07645 (23), -0.07636 (24), -0.07617 (23), -0.07611 (23), -0.07583 (24), -0.07440 (24), -0.07429 (24), -0.07429 (22), -0.07423 (24), -0.07419 (23), -0.07415 (23), -0.07406 (23), -0.07396 (23), 
Length of domains: 22046
Time: pickout 0.0588    decision 0.6130    set_bounds 1.1257    solve 4.3733    add 0.2814    
Accumulated time: pickout 0.3636    decision 4.3401    set_bounds 5.0854    solve 21.1067    add 2.2269    
Current (lb-rhs): -0.07970817387104034
59940 domains visited
Cumulative time: 41.112481117248535

BaB round 23
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 349] [/input-12, 349] [/input-12, 5149] [/input-12, 1380] [/input-12, 2596] [/input-12, 2596] [/input-12, 5155] [/input-16, 154] [/input-12, 5787] [/input-12, 5787] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9724397659301758, worst -0.07660400867462158
10 lb beta sum: 0.972592830657959, worst -0.07700669765472412
Time: prepare 0.7651    bound 2.4131    transfer 0.2496    finalize 1.1007    func 4.6380    
Accumulated time: func 25.9933    prepare 2.6582    bound 16.5417    transfer 1.3657    finalize 4.8173    
all_split False
======================Cut inference begins======================
max lb tensor(0.24175906) min lb tensor(-0.07659233)
Number of Verified Splits: 3964 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 15
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 1.4571828842163086 
BICCOS Cumulative time: 8.803269863128662
Preprocessing time: 0.5547564029693604 Inference time: 0.7899346351623535 Add cuts time: 0.1114504337310791 Cut analysis time: 0.001041412353515625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07971 (23), -0.07938 (24), -0.07796 (24), -0.07771 (24), -0.07707 (23), -0.07659 (24), -0.07636 (24), -0.07588 (24), -0.07583 (24), -0.07507 (24), -0.07440 (24), -0.07429 (24), -0.07423 (24), -0.07406 (23), -0.07396 (24), -0.07375 (24), -0.07373 (24), -0.07344 (23), -0.07329 (23), -0.07307 (23), 
Length of domains: 26274
Time: pickout 0.0525    decision 0.9750    set_bounds 0.7982    solve 4.6416    add 0.3100    
Accumulated time: pickout 0.4161    decision 5.3151    set_bounds 5.8836    solve 25.7483    add 2.5369    
Current (lb-rhs): -0.07970817387104034
72360 domains visited
Cumulative time: 49.444926261901855

BaB round 24
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5157] [/input-12, 1585] [/input-12, 5787] [/input-12, 349] [/input-12, 5787] [/input-12, 5148] [/input-12, 5155] [/input-12, 3171] [/input-12, 2596] [/input-12, 5155] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9710533022880554, worst -0.07879166305065155
10 lb beta sum: 0.9712116122245789, worst -0.07877473533153534
Time: prepare 0.8064    bound 2.4245    transfer 0.2535    finalize 1.2223    func 4.8188    
Accumulated time: func 30.8121    prepare 3.4654    bound 18.9662    transfer 1.6193    finalize 6.0395    
all_split False
======================Cut inference begins======================
max lb tensor(0.23984909) min lb tensor(-0.07876639)
Number of Verified Splits: 4028 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 15
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 1.5237791538238525 
BICCOS Cumulative time: 10.327049016952515
Preprocessing time: 0.5528504848480225 Inference time: 0.853557825088501 Add cuts time: 0.11633443832397461 Cut analysis time: 0.0010364055633544922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07877 (25), -0.07796 (24), -0.07750 (24), -0.07707 (23), -0.07703 (25), -0.07659 (24), -0.07636 (24), -0.07588 (24), -0.07540 (24), -0.07518 (25), -0.07507 (24), -0.07429 (24), -0.07423 (24), -0.07406 (23), -0.07396 (24), -0.07375 (24), -0.07373 (24), -0.07371 (25), -0.07344 (23), -0.07280 (24), 
Length of domains: 30438
Time: pickout 0.0722    decision 1.2671    set_bounds 0.8932    solve 4.8234    add 0.4175    
Accumulated time: pickout 0.4883    decision 6.5822    set_bounds 6.7769    solve 30.5717    add 2.9543    
Current (lb-rhs): -0.07876639068126678
84716 domains visited
Cumulative time: 58.553816080093384

BaB round 25
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 717] [/input-12, 1380] [/input-12, 5148] [/input-12, 7778] [/input-12, 1573] [/input-12, 1573] [/input-12, 2596] [/input-12, 986] [/input-16, 154] [/input-12, 6150] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9461480975151062, worst -0.07737092673778534
10 lb beta sum: 0.9461480975151062, worst -0.07734160125255585
Time: prepare 0.7649    bound 2.4129    transfer 0.2422    finalize 1.2257    func 4.7553    
Accumulated time: func 35.5675    prepare 4.2308    bound 21.3791    transfer 1.8614    finalize 7.2652    
all_split False
======================Cut inference begins======================
max lb tensor(0.24131060) min lb tensor(-0.07724313)
Number of Verified Splits: 4228 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 15
#cuts 4-6: 9
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 1.545410394668579 
BICCOS Cumulative time: 11.872459411621094
Preprocessing time: 0.5668313503265381 Inference time: 0.8602039813995361 Add cuts time: 0.11713957786560059 Cut analysis time: 0.0012354850769042969
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07877 (25), -0.07750 (24), -0.07724 (25), -0.07703 (25), -0.07659 (24), -0.07588 (24), -0.07561 (25), -0.07540 (24), -0.07518 (25), -0.07507 (24), -0.07473 (24), -0.07396 (24), -0.07375 (24), -0.07373 (24), -0.07371 (25), -0.07347 (25), -0.07279 (24), -0.07246 (24), -0.07234 (23), -0.07218 (25), 
Length of domains: 34402
Time: pickout 0.0493    decision 1.0908    set_bounds 0.8190    solve 4.7594    add 0.6347    
Accumulated time: pickout 0.5377    decision 7.6730    set_bounds 7.5958    solve 35.3311    add 3.5890    
Current (lb-rhs): -0.07876639068126678
96872 domains visited
Cumulative time: 67.55717396736145

BaB round 26
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 154] [/input-12, 5148] [/input-12, 5156] [/input-12, 3349] [/input-12, 986] [/input-12, 1572] [/input-12, 3171] [/input-12, 1380] [/input-12, 1572] [/input-12, 5149] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07617592811584473
10 lb beta sum: 0.7314413189888, worst -0.07561437785625458
Time: prepare 0.3648    bound 2.4168    transfer 0.2515    finalize 0.7121    func 3.8584    
Accumulated time: func 39.4259    prepare 4.5961    bound 23.7959    transfer 2.1129    finalize 7.9774    
all_split False
======================Cut inference begins======================
max lb tensor(0.39538592) min lb tensor(-0.07524616)
Number of Verified Splits: 4206 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 15
#cuts 4-6: 10
#cuts 7-9: 5
#cuts >= 20: 0
BICCOS time: 2.186943769454956 
BICCOS Cumulative time: 14.05940318107605
Preprocessing time: 1.1452419757843018 Inference time: 0.9070396423339844 Add cuts time: 0.1330881118774414 Cut analysis time: 0.0015740394592285156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07877 (25), -0.07750 (24), -0.07724 (25), -0.07703 (25), -0.07561 (25), -0.07540 (24), -0.07525 (25), -0.07518 (25), -0.07473 (24), -0.07396 (24), -0.07394 (25), -0.07371 (25), -0.07347 (25), -0.07312 (25), -0.07299 (25), -0.07279 (24), -0.07243 (25), -0.07230 (25), -0.07218 (25), -0.07202 (25), 
Length of domains: 38388
Time: pickout 0.0533    decision 0.6122    set_bounds 1.3710    solve 3.8645    add 0.3066    
Accumulated time: pickout 0.5909    decision 8.2852    set_bounds 8.9668    solve 39.1956    add 3.8956    
Current (lb-rhs): -0.07876639068126678
109050 domains visited
Cumulative time: 76.06697869300842

BaB round 27
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5155] [/input-12, 5156] [/input-12, 5157] [/input-12, 5155] [/input-16, 154] [/input-12, 2597] [/input-12, 5155] [/input-12, 3349] [/input-12, 5148] [/input-12, 1380] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07866764068603516
10 lb beta sum: 0.6895307302474976, worst -0.07775229215621948
Time: prepare 0.3740    bound 2.4186    transfer 0.2514    finalize 0.7083    func 3.8652    
Accumulated time: func 43.2910    prepare 4.9706    bound 26.2145    transfer 2.3643    finalize 8.6857    
all_split False
======================Cut inference begins======================
max lb tensor(0.40007669) min lb tensor(-0.07774122)
Number of Verified Splits: 4161 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 15
#cuts 4-6: 11
#cuts 7-9: 6
#cuts >= 20: 0
BICCOS time: 1.6039607524871826 
BICCOS Cumulative time: 15.663363933563232
Preprocessing time: 0.562516450881958 Inference time: 0.9017963409423828 Add cuts time: 0.13808441162109375 Cut analysis time: 0.0015635490417480469
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07774 (26), -0.07724 (25), -0.07592 (26), -0.07564 (25), -0.07561 (25), -0.07540 (24), -0.07525 (25), -0.07473 (24), -0.07416 (26), -0.07394 (25), -0.07347 (25), -0.07327 (25), -0.07312 (25), -0.07299 (25), -0.07279 (24), -0.07262 (26), -0.07243 (25), -0.07230 (25), -0.07201 (25), -0.07173 (25), 
Length of domains: 42419
Time: pickout 0.0511    decision 0.6114    set_bounds 1.4726    solve 3.8706    add 0.3091    
Accumulated time: pickout 0.6420    decision 8.8965    set_bounds 10.4395    solve 43.0661    add 4.2047    
Current (lb-rhs): -0.07774122059345245
121273 domains visited
Cumulative time: 84.09274411201477

BaB round 28
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5156] [/input-16, 154] [/input-16, 154] [/input-12, 2597] [/input-12, 363] [/input-12, 349] [/input-12, 5156] [/input-12, 5787] [/input-12, 363] [/input-12, 1585] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07720541954040527
10 lb beta sum: 0.7113783359527588, worst -0.07626788318157196
Time: prepare 0.4318    bound 2.4534    transfer 0.2573    finalize 0.7330    func 3.9878    
Accumulated time: func 47.2788    prepare 5.4028    bound 28.6680    transfer 2.6216    finalize 9.4187    
all_split False
======================Cut inference begins======================
max lb tensor(0.39690143) min lb tensor(-0.07618362)
Number of Verified Splits: 4235 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 15
#cuts 4-6: 12
#cuts 7-9: 8
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 2.352962017059326 
BICCOS Cumulative time: 18.01632595062256
Preprocessing time: 1.2856662273406982 Inference time: 0.9317524433135986 Add cuts time: 0.13377046585083008 Cut analysis time: 0.0017728805541992188
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07774 (26), -0.07618 (26), -0.07592 (26), -0.07564 (25), -0.07525 (25), -0.07468 (25), -0.07447 (26), -0.07416 (26), -0.07413 (25), -0.07394 (25), -0.07327 (25), -0.07312 (25), -0.07299 (25), -0.07279 (24), -0.07262 (26), -0.07243 (25), -0.07238 (26), -0.07230 (25), -0.07173 (25), -0.07173 (25), 
Length of domains: 46376
Time: pickout 0.0558    decision 1.2352    set_bounds 0.8299    solve 3.9977    add 0.3165    
Accumulated time: pickout 0.6978    decision 10.1318    set_bounds 11.2694    solve 47.0638    add 4.5213    
Current (lb-rhs): -0.07774122059345245
133422 domains visited
Cumulative time: 93.00456142425537

BaB round 29
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 154] [/input-12, 5148] [/input-16, 154] [/input-12, 986] [/input-12, 363] [/input-12, 5157] [/input-12, 5787] [/input-12, 5165] [/input-12, 5155] [/input-12, 3349] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07300353050231934
10 lb beta sum: 0.6584447026252747, worst -0.0722472220659256
Time: prepare 0.3807    bound 2.4388    transfer 0.2537    finalize 0.7167    func 3.9019    
Accumulated time: func 51.1808    prepare 5.7840    bound 31.1068    transfer 2.8752    finalize 10.1354    
all_split False
======================Cut inference begins======================
max lb tensor(0.39873517) min lb tensor(-0.07211050)
Number of Verified Splits: 4212 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 15
#cuts 4-6: 14
#cuts 7-9: 6
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 1.6317448616027832 
BICCOS Cumulative time: 19.648070812225342
Preprocessing time: 0.5682024955749512 Inference time: 0.9169564247131348 Add cuts time: 0.144913911819458 Cut analysis time: 0.0016720294952392578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07774 (26), -0.07618 (26), -0.07592 (26), -0.07564 (25), -0.07525 (25), -0.07468 (25), -0.07447 (26), -0.07416 (26), -0.07413 (25), -0.07394 (25), -0.07327 (25), -0.07312 (25), -0.07299 (25), -0.07262 (26), -0.07243 (25), -0.07238 (26), -0.07230 (25), -0.07211 (25), -0.07173 (25), -0.07137 (25), 
Length of domains: 50356
Time: pickout 0.0544    decision 0.6174    set_bounds 1.6147    solve 3.9083    add 0.4004    
Accumulated time: pickout 0.7522    decision 10.7492    set_bounds 12.8841    solve 50.9721    add 4.9217    
Current (lb-rhs): -0.07774122059345245
145594 domains visited
Cumulative time: 101.33996868133545

BaB round 30
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7778] [/input-12, 5156] [/input-12, 5156] [/input-12, 5165] [/input-12, 5153] [/input-12, 2597] [/input-12, 1572] [/input-12, 5531] [/input-12, 5157] [/input-12, 1585] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07500910758972168
10 lb beta sum: 0.6465834379196167, worst -0.07445232570171356
Time: prepare 0.3763    bound 2.4398    transfer 0.2447    finalize 0.7186    func 3.8908    
Accumulated time: func 55.0716    prepare 6.1606    bound 33.5466    transfer 3.1200    finalize 10.8540    
all_split False
======================Cut inference begins======================
max lb tensor(0.39558589) min lb tensor(-0.07407051)
Number of Verified Splits: 4222 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 35.
#cuts 1-3: 15
#cuts 4-6: 14
#cuts 7-9: 5
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 1.6133763790130615 
BICCOS Cumulative time: 21.261447191238403
Preprocessing time: 0.5788049697875977 Inference time: 0.8894138336181641 Add cuts time: 0.14359283447265625 Cut analysis time: 0.0015647411346435547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07774 (26), -0.07618 (26), -0.07592 (26), -0.07564 (25), -0.07468 (25), -0.07447 (26), -0.07416 (26), -0.07413 (25), -0.07407 (26), -0.07327 (25), -0.07274 (26), -0.07262 (26), -0.07238 (26), -0.07230 (25), -0.07225 (26), -0.07211 (25), -0.07195 (26), -0.07131 (25), -0.07122 (26), -0.07102 (25), 
Length of domains: 54326
Time: pickout 0.0559    decision 0.6140    set_bounds 1.5893    solve 3.8992    add 0.3805    
Accumulated time: pickout 0.8082    decision 11.3632    set_bounds 14.4734    solve 54.8713    add 5.3021    
Current (lb-rhs): -0.07774122059345245
157756 domains visited
Cumulative time: 109.608238697052

BaB round 31
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5787] [/input-12, 6827] [/input-12, 717] [/input-12, 733] [/input-16, 154] [/input-12, 349] [/input-12, 5156] [/input-12, 2597] [/input-16, 154] [/input-12, 5531] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07321739196777344
10 lb beta sum: 0.6561687588691711, worst -0.07291311025619507
Time: prepare 0.3847    bound 2.4429    transfer 0.2449    finalize 0.7181    func 3.9005    
Accumulated time: func 58.9720    prepare 6.5458    bound 35.9895    transfer 3.3649    finalize 11.5721    
all_split False
======================Cut inference begins======================
max lb tensor(0.39555588) min lb tensor(-0.07228030)
Number of Verified Splits: 4260 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 35.
#cuts 1-3: 15
#cuts 4-6: 14
#cuts 7-9: 6
#cuts >= 20: 0
BICCOS time: 2.4477288722991943 
BICCOS Cumulative time: 23.709176063537598
Preprocessing time: 0.5656137466430664 Inference time: 1.7435014247894287 Add cuts time: 0.13690757751464844 Cut analysis time: 0.0017061233520507812
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07774 (26), -0.07618 (26), -0.07592 (26), -0.07564 (25), -0.07468 (25), -0.07447 (26), -0.07416 (26), -0.07413 (25), -0.07407 (26), -0.07274 (26), -0.07262 (26), -0.07238 (26), -0.07228 (26), -0.07225 (26), -0.07211 (25), -0.07195 (26), -0.07122 (26), -0.07116 (26), -0.07102 (25), -0.07093 (26), 
Length of domains: 58258
Time: pickout 0.0541    decision 1.3858    set_bounds 0.8478    solve 3.9067    add 0.3242    
Accumulated time: pickout 0.8623    decision 12.7490    set_bounds 15.3212    solve 58.7780    add 5.6264    
Current (lb-rhs): -0.07774122059345245
169880 domains visited
Cumulative time: 118.68466234207153

BaB round 32
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5787] [/input-12, 5787] [/input-12, 1573] [/input-12, 3349] [/input-12, 7778] [/input-12, 5155] [/input-12, 1585] [/input-12, 363] [/input-12, 7778] [/input-12, 349] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07753849029541016
10 lb beta sum: 0.6183842420578003, worst -0.07661072909832001
Time: prepare 0.3709    bound 2.4393    transfer 0.2543    finalize 0.7272    func 3.9046    
Accumulated time: func 62.8766    prepare 6.9171    bound 38.4288    transfer 3.6192    finalize 12.2993    
all_split False
======================Cut inference begins======================
max lb tensor(0.39665091) min lb tensor(-0.07660300)
Number of Verified Splits: 4124 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 15
#cuts 4-6: 14
#cuts 7-9: 8
#cuts >= 20: 0
BICCOS time: 2.5078330039978027 
BICCOS Cumulative time: 26.2170090675354
Preprocessing time: 1.422422170639038 Inference time: 0.9374756813049316 Add cuts time: 0.14612841606140137 Cut analysis time: 0.0018067359924316406
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07660 (27), -0.07618 (26), -0.07503 (26), -0.07475 (27), -0.07468 (25), -0.07447 (26), -0.07413 (25), -0.07407 (26), -0.07302 (27), -0.07274 (26), -0.07238 (26), -0.07228 (26), -0.07225 (26), -0.07211 (25), -0.07195 (26), -0.07144 (27), -0.07122 (26), -0.07116 (26), -0.07085 (26), -0.07082 (26), 
Length of domains: 62326
Time: pickout 0.0609    decision 0.6061    set_bounds 0.8549    solve 3.9118    add 0.4142    
Accumulated time: pickout 0.9232    decision 13.3551    set_bounds 16.1760    solve 62.6898    add 6.0406    
Current (lb-rhs): -0.0766029953956604
182140 domains visited
Cumulative time: 127.15875577926636

BaB round 33
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5261] [/input-12, 5165] [/input-12, 3171] [/input-12, 7778] [/input-12, 5149] [/input-12, 5153] [/input-12, 986] [/input-12, 7778] [/input-12, 5153] [/input-12, 5156] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07602095603942871
10 lb beta sum: 0.6202794313430786, worst -0.07511705160140991
Time: prepare 0.3868    bound 2.4410    transfer 0.2438    finalize 1.6372    func 4.8199    
Accumulated time: func 67.6965    prepare 7.3043    bound 40.8699    transfer 3.8630    finalize 13.9365    
all_split False
======================Cut inference begins======================
max lb tensor(0.40033060) min lb tensor(-0.07499917)
Number of Verified Splits: 4020 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 40.
#cuts 1-3: 15
#cuts 4-6: 15
#cuts 7-9: 10
#cuts >= 20: 0
BICCOS time: 1.620527982711792 
BICCOS Cumulative time: 27.837537050247192
Preprocessing time: 0.5801358222961426 Inference time: 0.8942673206329346 Add cuts time: 0.14429068565368652 Cut analysis time: 0.0018341541290283203
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07660 (27), -0.07503 (26), -0.07500 (27), -0.07475 (27), -0.07407 (26), -0.07377 (26), -0.07331 (26), -0.07327 (27), -0.07302 (27), -0.07274 (26), -0.07228 (26), -0.07225 (26), -0.07211 (25), -0.07195 (26), -0.07144 (27), -0.07122 (26), -0.07118 (27), -0.07116 (26), -0.07082 (26), -0.07055 (26), 
Length of domains: 66498
Time: pickout 0.0599    decision 0.6123    set_bounds 0.8526    solve 4.8282    add 0.9896    
Accumulated time: pickout 0.9830    decision 13.9675    set_bounds 17.0286    solve 67.5180    add 7.0302    
Current (lb-rhs): -0.0766029953956604
194504 domains visited
Cumulative time: 136.25656819343567

BaB round 34
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5157] [/input-12, 7778] [/input-12, 7778] [/input-12, 5148] [/input-12, 2597] [/input-12, 5156] [/input-12, 5156] [/input-12, 2597] [/input-12, 5156] [/input-12, 5531] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06985020637512207
10 lb beta sum: 0.6134067177772522, worst -0.06942826509475708
Time: prepare 1.3327    bound 2.4404    transfer 0.2433    finalize 0.7189    func 4.8480    
Accumulated time: func 72.5445    prepare 8.6375    bound 43.3103    transfer 4.1063    finalize 14.6554    
all_split False
======================Cut inference begins======================
max lb tensor(0.39663464) min lb tensor(-0.06864804)
Number of Verified Splits: 4136 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 41.
#cuts 1-3: 15
#cuts 4-6: 15
#cuts 7-9: 11
#cuts >= 20: 0
BICCOS time: 1.6508166790008545 
BICCOS Cumulative time: 29.488353729248047
Preprocessing time: 0.5686519145965576 Inference time: 0.9425930976867676 Add cuts time: 0.13758206367492676 Cut analysis time: 0.001989603042602539
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07660 (27), -0.07503 (26), -0.07500 (27), -0.07475 (27), -0.07407 (26), -0.07377 (26), -0.07331 (26), -0.07327 (27), -0.07302 (27), -0.07274 (26), -0.07228 (26), -0.07225 (26), -0.07211 (25), -0.07195 (26), -0.07144 (27), -0.07122 (26), -0.07118 (27), -0.07116 (26), -0.07082 (26), -0.07049 (26), 
Length of domains: 70554
Time: pickout 0.0431    decision 0.6169    set_bounds 0.8693    solve 4.8554    add 0.3259    
Accumulated time: pickout 1.0262    decision 14.5843    set_bounds 17.8979    solve 72.3735    add 7.3561    
Current (lb-rhs): -0.0766029953956604
206752 domains visited
Cumulative time: 144.74001026153564

BaB round 35
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5157] [/input-12, 1585] [/input-12, 717] [/input-12, 5156] [/input-12, 363] [/input-12, 5787] [/input-12, 5156] [/input-12, 1585] [/input-12, 5156] [/input-12, 5787] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07205057144165039
10 lb beta sum: 0.5936530828475952, worst -0.07137338817119598
Time: prepare 0.3743    bound 2.4444    transfer 0.2523    finalize 0.7278    func 3.9138    
Accumulated time: func 76.4583    prepare 9.0122    bound 45.7546    transfer 4.3586    finalize 15.3833    
all_split False
======================Cut inference begins======================
max lb tensor(0.39208254) min lb tensor(-0.07121712)
Number of Verified Splits: 4115 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 45.
#cuts 1-3: 15
#cuts 4-6: 16
#cuts 7-9: 14
#cuts >= 20: 0
BICCOS time: 1.5978341102600098 
BICCOS Cumulative time: 31.086187839508057
Preprocessing time: 0.5700442790985107 Inference time: 0.8821637630462646 Add cuts time: 0.14339041709899902 Cut analysis time: 0.0022356510162353516
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07660 (27), -0.07503 (26), -0.07500 (27), -0.07475 (27), -0.07407 (26), -0.07377 (26), -0.07331 (26), -0.07327 (27), -0.07302 (27), -0.07274 (26), -0.07228 (26), -0.07225 (26), -0.07195 (26), -0.07144 (27), -0.07122 (26), -0.07122 (26), -0.07118 (27), -0.07116 (26), -0.07082 (26), -0.07049 (26), 
Length of domains: 74631
Time: pickout 0.0453    decision 0.6171    set_bounds 1.9052    solve 3.9205    add 0.3987    
Accumulated time: pickout 1.0715    decision 15.2014    set_bounds 19.8032    solve 76.2940    add 7.7548    
Current (lb-rhs): -0.0766029953956604
219021 domains visited
Cumulative time: 153.3483338356018

BaB round 36
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2597] [/input-16, 154] [/input-12, 5157] [/input-12, 349] [/input-12, 1585] [/input-12, 5157] [/input-12, 5153] [/input-12, 5156] [/input-12, 986] [/input-12, 349] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07379341125488281
10 lb beta sum: 0.5712897777557373, worst -0.07312646508216858
Time: prepare 0.3790    bound 2.4455    transfer 0.2416    finalize 0.7282    func 3.9087    
Accumulated time: func 80.3670    prepare 9.3917    bound 48.2002    transfer 4.6002    finalize 16.1114    
all_split False
======================Cut inference begins======================
max lb tensor(0.40426475) min lb tensor(-0.07290885)
Number of Verified Splits: 3975 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 47.
#cuts 1-3: 15
#cuts 4-6: 16
#cuts 7-9: 16
#cuts >= 20: 0
BICCOS time: 1.5882635116577148 
BICCOS Cumulative time: 32.67445135116577
Preprocessing time: 0.5728092193603516 Inference time: 0.8649141788482666 Add cuts time: 0.14835691452026367 Cut analysis time: 0.002183198928833008
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07660 (27), -0.07503 (26), -0.07500 (27), -0.07475 (27), -0.07377 (26), -0.07331 (26), -0.07327 (27), -0.07302 (27), -0.07291 (27), -0.07228 (26), -0.07144 (27), -0.07122 (26), -0.07118 (27), -0.07116 (26), -0.07106 (27), -0.07083 (27), -0.07081 (27), -0.07035 (26), -0.06978 (27), -0.06976 (26), 
Length of domains: 78848
Time: pickout 0.0453    decision 0.6203    set_bounds 1.9286    solve 3.9154    add 0.4113    
Accumulated time: pickout 1.1169    decision 15.8217    set_bounds 21.7317    solve 80.2094    add 8.1660    
Current (lb-rhs): -0.0766029953956604
231430 domains visited
Cumulative time: 161.97400379180908

BaB round 37
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 986] [/input-12, 733] [/input-12, 7890] [/input-12, 717] [/input-12, 5153] [/input-12, 5156] [/input-12, 5156] [/input-12, 2597] [/input-12, 1585] [/input-12, 1585] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0688469409942627
10 lb beta sum: 0.5716328620910645, worst -0.06854614615440369
Time: prepare 0.3761    bound 2.4455    transfer 0.2452    finalize 0.7356    func 3.9166    
Accumulated time: func 84.2836    prepare 9.7682    bound 50.6456    transfer 4.8454    finalize 16.8471    
all_split False
======================Cut inference begins======================
max lb tensor(0.39802772) min lb tensor(-0.06773078)
Number of Verified Splits: 3813 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 46.
#cuts 1-3: 15
#cuts 4-6: 17
#cuts 7-9: 14
#cuts >= 20: 0
BICCOS time: 1.5844740867614746 
BICCOS Cumulative time: 34.258925437927246
Preprocessing time: 0.5805668830871582 Inference time: 0.8647487163543701 Add cuts time: 0.13705658912658691 Cut analysis time: 0.002101898193359375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07660 (27), -0.07503 (26), -0.07500 (27), -0.07475 (27), -0.07377 (26), -0.07331 (26), -0.07327 (27), -0.07302 (27), -0.07291 (27), -0.07228 (26), -0.07144 (27), -0.07122 (26), -0.07118 (27), -0.07116 (26), -0.07106 (27), -0.07083 (27), -0.07081 (27), -0.07035 (26), -0.06978 (27), -0.06964 (26), 
Length of domains: 83227
Time: pickout 0.0459    decision 0.6191    set_bounds 1.9807    solve 3.9250    add 0.4201    
Accumulated time: pickout 1.1628    decision 16.4408    set_bounds 23.7125    solve 84.1344    add 8.5862    
Current (lb-rhs): -0.0766029953956604
244001 domains visited
Cumulative time: 170.66680240631104

BaB round 38
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5156] [/input-12, 5156] [/input-12, 5157] [/input-16, 154] [/input-12, 2597] [/input-12, 5165] [/input-12, 5156] [/input-12, 2596] [/input-12, 5156] [/input-12, 1585] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07203412055969238
10 lb beta sum: 0.5754610896110535, worst -0.07118454575538635
Time: prepare 0.3661    bound 2.4477    transfer 0.2423    finalize 0.7433    func 3.9132    
Accumulated time: func 88.1969    prepare 10.1347    bound 53.0933    transfer 5.0877    finalize 17.5904    
all_split False
======================Cut inference begins======================
max lb tensor(0.39433300) min lb tensor(-0.07106350)
Number of Verified Splits: 4015 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 49.
#cuts 1-3: 15
#cuts 4-6: 18
#cuts 7-9: 16
#cuts >= 20: 0
BICCOS time: 1.624354600906372 
BICCOS Cumulative time: 35.88328003883362
Preprocessing time: 0.5725808143615723 Inference time: 0.8555576801300049 Add cuts time: 0.1937410831451416 Cut analysis time: 0.0024750232696533203
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07660 (27), -0.07503 (26), -0.07500 (27), -0.07475 (27), -0.07377 (26), -0.07331 (26), -0.07327 (27), -0.07302 (27), -0.07291 (27), -0.07144 (27), -0.07122 (26), -0.07118 (27), -0.07106 (27), -0.07106 (27), -0.07083 (27), -0.07081 (27), -0.06978 (27), -0.06964 (26), -0.06961 (26), -0.06960 (27), 
Length of domains: 87404
Time: pickout 0.0458    decision 0.6211    set_bounds 2.0724    solve 3.9204    add 0.4191    
Accumulated time: pickout 1.2086    decision 17.0619    set_bounds 25.7848    solve 88.0548    add 9.0052    
Current (lb-rhs): -0.0766029953956604
256370 domains visited
Cumulative time: 179.48618149757385

BaB round 39
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5157] [/input-12, 5165] [/input-12, 1585] [/input-12, 5156] [/input-12, 5156] [/input-12, 1585] [/input-12, 1585] [/input-12, 5165] [/input-12, 1585] [/input-12, 5156] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07485556602478027
10 lb beta sum: 0.5614144802093506, worst -0.07410401105880737
Time: prepare 0.3783    bound 2.4490    transfer 0.2434    finalize 1.9748    func 5.1576    
Accumulated time: func 93.3544    prepare 10.5134    bound 55.5422    transfer 5.3310    finalize 19.5652    
all_split False
======================Cut inference begins======================
max lb tensor(0.39810744) min lb tensor(-0.07396796)
Number of Verified Splits: 3990 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 53.
#cuts 1-3: 15
#cuts 4-6: 19
#cuts 7-9: 17
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 1.643171787261963 
BICCOS Cumulative time: 37.52645182609558
Preprocessing time: 0.5565588474273682 Inference time: 0.9368674755096436 Add cuts time: 0.14699053764343262 Cut analysis time: 0.0027549266815185547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07500 (27), -0.07397 (27), -0.07380 (28), -0.07377 (26), -0.07331 (26), -0.07327 (27), -0.07308 (28), -0.07291 (27), -0.07194 (28), -0.07123 (28), -0.07122 (26), -0.07118 (27), -0.07106 (27), -0.07106 (27), -0.07083 (27), -0.07081 (27), -0.07021 (28), -0.06964 (26), -0.06961 (26), -0.06960 (27), 
Length of domains: 91606
Time: pickout 0.0436    decision 0.6232    set_bounds 0.8605    solve 5.1628    add 0.4299    
Accumulated time: pickout 1.2522    decision 17.6851    set_bounds 26.6453    solve 93.2177    add 9.4351    
Current (lb-rhs): -0.07499916851520538
268764 domains visited
Cumulative time: 188.37136054039001

BaB round 40
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1585] [/input-12, 7778] [/input-12, 2578] [/input-16, 154] [/input-12, 1585] [/input-12, 5153] [/input-12, 1573] [/input-12, 5165] [/input-12, 1585] [/input-12, 363] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0735166072845459
10 lb beta sum: 0.54920893907547, worst -0.07266730070114136
Time: prepare 0.3829    bound 2.4506    transfer 0.2423    finalize 0.7507    func 3.9401    
Accumulated time: func 97.2945    prepare 10.8968    bound 57.9929    transfer 5.5733    finalize 20.3159    
all_split False
======================Cut inference begins======================
max lb tensor(0.39468306) min lb tensor(-0.07251151)
Number of Verified Splits: 3758 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 56.
#cuts 1-3: 15
#cuts 4-6: 21
#cuts 7-9: 19
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 2.901106595993042 
BICCOS Cumulative time: 40.42755842208862
Preprocessing time: 1.8787333965301514 Inference time: 0.8773727416992188 Add cuts time: 0.14225554466247559 Cut analysis time: 0.002744913101196289
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07500 (27), -0.07397 (27), -0.07380 (28), -0.07331 (26), -0.07327 (27), -0.07308 (28), -0.07291 (27), -0.07251 (27), -0.07194 (28), -0.07123 (28), -0.07122 (26), -0.07118 (27), -0.07106 (27), -0.07106 (27), -0.07083 (27), -0.07081 (27), -0.07021 (28), -0.06964 (26), -0.06960 (27), -0.06950 (26), 
Length of domains: 96040
Time: pickout 0.0459    decision 0.6153    set_bounds 0.8696    solve 3.9467    add 0.4404    
Accumulated time: pickout 1.2981    decision 18.3004    set_bounds 27.5150    solve 97.1643    add 9.8755    
Current (lb-rhs): -0.07499916851520538
281390 domains visited
Time out!!!!!!!!
Result: unknown in 201.4847 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 20, vnnlib ID: 20 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-44.56660080, -44.32653046, -40.98115921, -41.46539688, -41.20962524,
         -41.53591537, -38.64438248, -43.94772339, -44.18732834, -45.28670502]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1536]; unstable size 1536; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 85, 1, 1536] with unstable size 84 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 37, 1, 1536] with unstable size 36 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1536] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [622]; unstable size 622; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 37, 1, 622] with unstable size 36 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 622] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [36]; unstable size 36; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 36] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.87269449, 3.66036153, 1.41138625, 1.90117168, 1.71179700, 1.85965133,
         3.71743727, 3.56335497, 4.46677399]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0463 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 21, vnnlib ID: 21 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-37.80647659, -37.80547333, -33.86183548, -32.91009903, -34.06041718,
         -32.61032104, -35.15506744, -33.22491455, -38.20767593, -36.34733582]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1364]; unstable size 1364; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 86, 1, 1364] with unstable size 85 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 26, 1, 1364] with unstable size 25 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1364] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [520]; unstable size 520; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 26, 1, 520] with unstable size 25 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 520] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [25]; unstable size 25; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.73109770,  2.92464972,  0.21648693,  0.14017367,  0.38005352,
          1.45421600, -0.53956759,  3.87028122,  2.25863743]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-37.80647659, -37.80547333, -33.86183548, -32.91009903, -34.06041718,
         -32.61032104, -35.15506744, -33.22491455, -38.20767593, -36.34733582]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.43it/s]100%|██████████| 1/1 [00:00<00:00,  8.42it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-37.59958267, -37.60145950, -33.72734451, -32.82512665, -33.83557510,
          -32.53835297, -34.97224045, -32.73982239, -38.09840012, -36.10914612]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.20146942]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1218 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 15.004729270935059
alpha/beta optimization time: 1.4253489971160889
initial alpha-crown bounds: tensor([[ 3.78655124,  3.03520966,  0.28746724,  0.15327597,  0.46448421,
          1.48956490, -0.49863416,  3.95896602,  2.32784367]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.4986341595649719
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.41036295890808
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.4103229045868
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.4102954864502
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.41026711463928
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.41024780273438
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.4102282524109
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 198.41020917892456
Verifying property 6 with 1 instances.
##### Instance 21 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.49863416]], device='cuda:0') need to verify.
Model prediction is: tensor([-37.80647659, -37.80547333, -33.86183548, -32.91009903, -34.06041718,
        -32.61032104, -35.15506744, -33.22491455, -38.20767593, -36.34733582],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.49863416]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1364
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 510
Node /39 input 0: size torch.Size([250]) unstable 25
-----------------
# of unstable neurons: 1899
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00012302398681640625
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.49860480427742004
10 lb beta sum: 0.0, worst -0.4986083507537842
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0721    transfer 0.0001    finalize 0.0002    func 0.0727    
Accumulated time: func 0.0727    prepare 0.0002    bound 0.0721    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 126] 
split level 1: [/input-16, 154] 
split level 2: [/input-16, 212] 
split level 3: [/input-16, 10] 
split level 4: [/input-16, 166] 
split level 5: [/input-16, 95] 
split level 6: [/input-16, 13] 
split level 7: [/input-12, 7714] 
split level 8: [/input-16, 182] 
split level 9: [/input-12, 2323] 
split level 10: [/input-12, 2341] 
split level 11: [/input-12, 2459] 
split level 12: [/input-12, 5522] 
split level 13: [/input-12, 1452] 
split level 14: [/input-12, 867] 
split level 15: [/input-12, 5324] 
split level 16: [/input-12, 2924] 
split level 17: [/input-12, 7139] 
split level 18: [/input-12, 7137] 
split level 19: [/input-12, 2325] 
split level 20: [/input-12, 1396] 
split level 21: [/input-12, 5508] 
split level 22: [/input-12, 5547] 
split level 23: [/input-12, 6251] 
split level 24: [/input-12, 2365] 
split level 25: [/input-12, 1436] 
split level 26: [/input-12, 8029] 
split level 27: [/input-12, 3294] 
split level 28: [/input-12, 8138] 
split level 29: [/input-12, 6252] 
split level 30: [/input-12, 2451] 
split level 31: [/input-12, 810] 
split level 32: [/input-12, 818] 
split level 33: [/input-12, 7191] 
split level 34: [/input-12, 4467] 
split level 35: [/input-12, 740] 
split level 36: [/input-12, 8091] 
split level 37: [/input-12, 3908] 
split level 38: [/input-16, 247] 
split level 39: [/input-12, 2326] 
split level 40: [/input-12, 8109] 
split level 41: [/input-12, 6250] 
split level 42: [/input-12, 5509] 
split level 43: [/input-12, 7476] 
split level 44: [/input-4, 3222] 
split level 45: [/input-12, 2601] 
split level 46: [/input-4, 7811] 
split level 47: [/input-12, 1386] 
split level 48: [/input-12, 865] 
split level 49: [/input-12, 4782] 
split level 50: [/input-12, 2596] 
split level 51: [/input-12, 1202] 
split level 52: [/input-12, 6260] 
split level 53: [/input-12, 1394] 
split level 54: [/input-12, 5334] 
split level 55: [/input-4, 4791] 
split level 56: [/input-12, 7840] 
split level 57: [/input-12, 2612] 
split level 58: [/input-12, 2084] 
split level 59: [/input-12, 2450] 
split level 60: [/input-12, 5542] 
split level 61: [/input-12, 6491] 
split level 62: [/input-12, 3906] 
split level 63: [/input-12, 2349] 
split level 64: [/input-12, 5163] 
split level 65: [/input-12, 2466] 
split level 66: [/input-12, 3285] 
split level 67: [/input-12, 2590] 
split level 68: [/input-12, 3273] 
split level 69: [/input-12, 6253] 
split level 70: [/input-12, 2611] 
split level 71: [/input-12, 3914] 
split level 72: [/input-12, 3893] 
split level 73: [/input-4, 3974] 
split level 74: [/input-4, 5329] 
split level 75: [/input-12, 2589] 
split level 76: [/input-4, 3288] 
split level 77: [/input-4, 1354] 
split level 78: [/input-12, 5558] 
split level 79: [/input-12, 2603] 
split level 80: [/input-4, 6787] 
split level 81: [/input-12, 2457] 
split level 82: [/input-12, 3292] 
split level 83: [/input-4, 4825] 
split level 84: [/input-12, 540] 
split level 85: [/input-12, 2471] 
split level 86: [/input-12, 4888] 
split level 87: [/input-12, 2029] 
split level 88: [/input-12, 5715] 
split level 89: [/input-12, 4402] 
split level 90: [/input-4, 8161] 
split level 91: [/input-4, 6310] 
split level 92: [/input-4, 3206] 
split level 93: [/input-12, 4411] 
split level 94: [/input-12, 6246] 
split level 95: [/input-12, 5793] 
split level 96: [/input-12, 6824] 
split level 97: [/input-12, 5544] 
split level 98: [/input-4, 2409] 
split level 99: [/input-12, 7350] 
split level 100: [/input-4, 2424] 
split level 101: [/input-12, 6833] 
split level 102: [/input-4, 1591] 
split level 103: [/input-12, 8139] 
split level 104: [/input-4, 3107] 
split level 105: [/input-12, 2602] 
split level 106: [/input-4, 1592] 
split level 107: [/input-12, 8057] 
split level 108: [/input-4, 3190] 
split level 109: [/input-12, 2470] 
split level 110: [/input-12, 3525] 
split level 111: [/input-4, 4890] 
split level 112: [/input-12, 7968] 
split level 113: [/input-4, 6377] 
split level 114: [/input-12, 2435] 
split level 115: [/input-12, 4792] 
split level 116: [/input-4, 4776] 
split level 117: [/input-4, 3091] 
split level 118: [/input-12, 7984] 
split level 119: [/input-4, 2134] 
split level 120: [/input-4, 1454] 
split level 121: [/input-12, 1189] 
split level 122: [/input-12, 2014] 
split level 123: [/input-12, 6485] 
split level 124: [/input-12, 1418] 
split level 125: [/input-12, 4223] 
split level 126: [/input-4, 3257] 
split level 127: [/input-4, 5265] 
split level 128: [/input-12, 1425] 
split level 129: [/input-12, 7004] 
split level 130: [/input-4, 4774] 
split level 131: [/input-4, 4408] 
split level 132: [/input-12, 2483] 
split level 133: [/input-4, 2151] 
split level 134: [/input-12, 6486] 
split level 135: [/input-12, 2259] 
split level 136: [/input-4, 2423] 
split level 137: [/input-12, 6481] 
split level 138: [/input-4, 1666] 
split level 139: [/input-12, 6493] 
split level 140: [/input-12, 2442] 
split level 141: [/input-4, 3129] 
split level 142: [/input-12, 5822] 
split level 143: [/input-12, 4903] 
split level 144: [/input-12, 2585] 
split level 145: [/input-12, 8137] 
split level 146: [/input-12, 5672] 
split level 147: [/input-4, 6170] 
split level 148: [/input-12, 6227] 
split level 149: [/input-4, 2836] 
split level 150: [/input-4, 1561] 
split level 151: [/input-4, 4826] 
split level 152: [/input-12, 1381] 
split level 153: [/input-4, 7874] 
split level 154: [/input-12, 2592] 
split level 155: [/input-12, 4219] 
split level 156: [/input-12, 2493] 
split level 157: [/input-4, 2092] 
split level 158: [/input-4, 2887] 
split level 159: [/input-12, 5651] 
split level 160: [/input-4, 2343] 
split level 161: [/input-12, 6979] 
split level 162: [/input-4, 2888] 
split level 163: [/input-12, 4394] 
split level 164: [/input-12, 8001] 
split level 165: [/input-12, 5246] 
split level 166: [/input-4, 1370] 
split level 167: [/input-4, 2376] 
split level 168: [/input-4, 2410] 
split level 169: [/input-4, 5528] 
split level 170: [/input-4, 3050] 
split level 171: [/input-4, 2089] 
split level 172: [/input-12, 5154] 
split level 173: [/input-4, 2787] 
split level 174: [/input-12, 3524] 
split level 175: [/input-4, 4632] 
split level 176: [/input-4, 4841] 
split level 177: [/input-4, 6149] 
split level 178: [/input-4, 4498] 
split level 179: [/input-4, 2874] 
split level 180: [/input-4, 1730] 
split level 181: [/input-12, 2574] 
split level 182: [/input-12, 5329] 
split level 183: [/input-4, 2865] 
split level 184: [/input-4, 4874] 
split level 185: [/input-4, 1698] 
split level 186: [/input-4, 4497] 
split level 187: [/input-4, 3141] 
split level 188: [/input-4, 2476] 
split level 189: [/input-4, 7081] 
split level 190: [/input-12, 2597] 
split level 191: [/input-4, 1418] 
split level 192: [/input-12, 7657] 
split level 193: [/input-12, 3424] 
split level 194: [/input-12, 3939] 
split level 195: [/input-4, 4499] 
split level 196: [/input-4, 4633] 
split level 197: [/input-12, 7441] 
split level 198: [/input-4, 1258] 
split level 199: [/input-4, 2406] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4983890652656555
10 lb beta sum: 0.0, worst -0.49839290976524353
Time: prepare 0.0118    bound 0.1283    transfer 0.0037    finalize 0.0084    func 0.1548    
Accumulated time: func 0.2275    prepare 0.0222    bound 0.2004    transfer 0.0038    finalize 0.0087    
all_split False
======================Cut inference begins======================
max lb tensor(-0.10278821) min lb tensor(-0.49838907)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.010062694549560547 
BICCOS Cumulative time: 0.010062694549560547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.49002 (1), -0.48973 (1), -0.48959 (1), -0.48943 (1), -0.48907 (1), -0.48859 (1), -0.48850 (1), -0.48795 (1), -0.48748 (1), -0.48720 (1), -0.48618 (1), -0.48617 (1), -0.48584 (1), -0.48572 (1), -0.48533 (1), -0.48498 (1), -0.48496 (1), -0.48421 (1), -0.48404 (1), -0.48331 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7616    set_bounds 0.0100    solve 0.1549    add 0.0848    
Accumulated time: pickout 0.0003    decision 0.7616    set_bounds 0.0100    solve 0.1549    add 0.0848    
Current (lb-rhs): -0.49001580476760864
50 domains visited
Cumulative time: 1.1015737056732178

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 154] [/input-16, 154] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] 
split level 1: [/input-16, 212] [/input-16, 212] [/input-16, 10] [/input-16, 212] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 154] 
split level 2: [/input-16, 10] [/input-16, 10] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 212] [/input-16, 166] [/input-16, 166] [/input-16, 10] 
split level 3: [/input-16, 166] [/input-16, 166] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 166] [/input-16, 182] [/input-16, 182] [/input-16, 182] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4812113344669342
10 lb beta sum: 0.0, worst -0.480825811624527
Time: prepare 0.0124    bound 0.1266    transfer 0.0030    finalize 0.0071    func 0.1517    
Accumulated time: func 0.3792    prepare 0.0349    bound 0.3270    transfer 0.0068    finalize 0.0158    
all_split False
======================Cut inference begins======================
max lb tensor(0.07273757) min lb tensor(-0.48077130)
Number of Verified Splits: 11 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.01336812973022461 
BICCOS Cumulative time: 0.023430824279785156
Preprocessing time: 0.012373685836791992 Inference time: 0.0005333423614501953 Add cuts time: 0.0002040863037109375 Cut analysis time: 0.0002570152282714844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.32693 (2), -0.32668 (2), -0.32648 (2), -0.32597 (2), -0.32536 (2), -0.32482 (2), -0.32335 (2), -0.32329 (2), -0.32280 (2), -0.32204 (2), -0.32165 (2), -0.32147 (2), -0.32119 (2), -0.32087 (2), -0.31868 (2), -0.31717 (2), -0.31524 (2), -0.31405 (2), -0.31368 (2), -0.31347 (2), 
Length of domains: 50
Time: pickout 0.0013    decision 0.0248    set_bounds 0.0124    solve 0.1518    add 0.0896    
Accumulated time: pickout 0.0016    decision 0.7864    set_bounds 0.0224    solve 0.3067    add 0.1745    
Current (lb-rhs): -0.3269309401512146
100 domains visited
Cumulative time: 1.3951523303985596

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] 
split level 1: [/input-16, 10] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 10] [/input-16, 10] [/input-16, 10] 
split level 2: [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 10] [/input-16, 10] [/input-16, 166] [/input-16, 166] [/input-16, 166] 
split level 3: [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.31803131103515625
10 lb beta sum: 0.27043265104293823, worst -0.31768798828125
Time: prepare 0.0065    bound 0.1533    transfer 0.0030    finalize 0.0079    func 0.1739    
Accumulated time: func 0.5531    prepare 0.0416    bound 0.4803    transfer 0.0098    finalize 0.0237    
all_split False
======================Cut inference begins======================
max lb tensor(0.45360565) min lb tensor(-0.31751484)
Number of Verified Splits: 98 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.018691539764404297 
BICCOS Cumulative time: 0.04212236404418945
Preprocessing time: 0.01152181625366211 Inference time: 0.0042951107025146484 Add cuts time: 0.0026404857635498047 Cut analysis time: 0.00023412704467773438
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19648 (3), -0.19458 (3), -0.19458 (3), -0.19450 (3), -0.19091 (3), -0.19010 (3), -0.18989 (3), -0.18983 (3), -0.18967 (3), -0.18941 (3), -0.18822 (3), -0.18809 (3), -0.18798 (3), -0.18497 (3), -0.18231 (3), -0.18211 (3), -0.18209 (3), -0.18160 (3), -0.18126 (3), -0.18121 (3), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0252    set_bounds 0.0154    solve 0.1739    add 0.1013    
Accumulated time: pickout 0.0022    decision 0.8116    set_bounds 0.0378    solve 0.4806    add 0.2758    
Current (lb-rhs): -0.19648444652557373
150 domains visited
Cumulative time: 1.7305231094360352

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] 
split level 1: [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 166] [/input-16, 166] [/input-16, 166] 
split level 2: [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 13] [/input-16, 13] [/input-16, 13] 
split level 3: [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] 
cut re-enabled after branching node selection
0 lb beta sum: 0.3672134280204773, worst -0.19467735290527344
10 lb beta sum: 0.44317686557769775, worst -0.1944202184677124
Time: prepare 0.0156    bound 0.1495    transfer 0.0037    finalize 0.0084    func 0.1800    
Accumulated time: func 0.7330    prepare 0.0574    bound 0.6297    transfer 0.0135    finalize 0.0321    
all_split False
======================Cut inference begins======================
max lb tensor(0.46256283) min lb tensor(-0.19426620)
Number of Verified Splits: 50 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.015084981918334961 
BICCOS Cumulative time: 0.057207345962524414
Preprocessing time: 0.011549234390258789 Inference time: 0.002624034881591797 Add cuts time: 0.0006928443908691406 Cut analysis time: 0.00021886825561523438
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09847 (4), -0.09765 (4), -0.09754 (4), -0.09689 (4), -0.09684 (4), -0.09649 (4), -0.09636 (4), -0.09628 (4), -0.09439 (4), -0.09419 (4), -0.09198 (4), -0.09157 (4), -0.08597 (4), -0.08589 (4), -0.08545 (4), -0.08365 (4), -0.08357 (4), -0.08318 (4), -0.07984 (4), -0.07962 (4), 
Length of domains: 50
Time: pickout 0.0008    decision 0.0260    set_bounds 0.0155    solve 0.1801    add 0.1066    
Accumulated time: pickout 0.0030    decision 0.8376    set_bounds 0.0533    solve 0.6607    add 0.3824    
Current (lb-rhs): -0.09847116470336914
200 domains visited
Cumulative time: 2.0752439498901367

Shallow-BaB round 5
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] 
split level 1: [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] 
split level 2: [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] 
split level 3: [/input-12, 867] [/input-12, 867] [/input-12, 867] [/input-12, 867] [/input-12, 867] [/input-12, 867] [/input-12, 867] [/input-12, 867] [/input-12, 867] [/input-12, 867] 
cut re-enabled after branching node selection
0 lb beta sum: 0.46699604392051697, worst -0.09847164154052734
10 lb beta sum: 0.46699604392051697, worst -0.10240554809570312
Time: prepare 0.0160    bound 0.1499    transfer 0.0029    finalize 0.1996    func 0.3712    
Accumulated time: func 1.1043    prepare 0.0738    bound 0.7797    transfer 0.0164    finalize 0.2317    
all_split False
======================Cut inference begins======================
max lb tensor(0.32782996) min lb tensor(-0.09782624)
Number of Verified Splits: 52 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 2
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.016086578369140625 
BICCOS Cumulative time: 0.07329392433166504
Preprocessing time: 0.012122154235839844 Inference time: 0.0029692649841308594 Add cuts time: 0.0006611347198486328 Cut analysis time: 0.00033402442932128906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02377 (5), -0.02264 (5), -0.02262 (5), -0.02254 (5), -0.02227 (5), -0.02217 (5), -0.02037 (5), -0.02015 (5), -0.02015 (5), -0.02013 (5), -0.02002 (5), -0.02001 (5), -0.01833 (5), -0.01804 (5), -0.01797 (5), -0.01781 (5), -0.01446 (5), -0.01444 (5), -0.01441 (5), -0.01428 (5), 
Length of domains: 50
Time: pickout 0.0007    decision 0.0256    set_bounds 0.0141    solve 0.3714    add 0.1077    
Accumulated time: pickout 0.0038    decision 0.8633    set_bounds 0.0674    solve 1.0321    add 0.4901    
Current (lb-rhs): -0.023773670196533203
250 domains visited
Cumulative time: 2.611755609512329

Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 13, 154, 212, 126]), tensor([-1., -1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([-1.26703856e+34,  1.25830695e-01,  1.15471289e-01,  2.75282725e-03]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 13, 154, 212, 126]), tensor([-1., -1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([-1.26703856e+34,  1.25830695e-01,  1.15471289e-01,  5.82560360e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 13, 154, 212,  10]), tensor([-1., -1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([-1.26703856e+34,  1.25830695e-01,  1.32570907e-01,  5.89062423e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 13, 154, 212,  10, 126]), tensor([-1., -1.,  1.,  1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([-1.26703856e+34,  1.25830695e-01,  1.32570907e-01,  6.41659349e-02,
         7.83072552e-04]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 13, 154, 212,  10, 126]), tensor([-1., -1.,  1.,  1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([-1.26703856e+34,  1.25830695e-01,  1.32570907e-01,  6.41659349e-02,
         3.76323342e-01]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 13, 154, 212,  10, 126]), tensor([-1.,  1., -1., -1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([-1.26703856e+34,  1.64900467e-01,  1.16939887e-01,  5.82820028e-02,
         7.08030304e-04]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 13, 154, 212,  10, 126]), tensor([-1.,  1., -1., -1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([-1.26703856e+34,  1.64900467e-01,  1.16939887e-01,  5.82820028e-02,
         3.97289455e-01]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 13, 154, 212,  10, 126]), tensor([-1.,  1., -1.,  1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([-1.26703856e+34,  1.64900467e-01,  1.16939887e-01,  6.08742088e-02,
         6.96228584e-04]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 13, 154, 212,  10, 126]), tensor([-1.,  1., -1.,  1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([-1.26703856e+34,  1.64900467e-01,  1.16939887e-01,  6.08742088e-02,
         3.92461598e-01]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 13, 154, 212,  10, 126]), tensor([-1.,  1.,  1., -1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([-1.26703856e+34,  1.64900467e-01,  1.33955285e-01,  5.67987412e-02,
         8.16629967e-04]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 13, 154, 212,  10, 126]), tensor([-1.,  1.,  1., -1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([-1.26703856e+34,  1.64900467e-01,  1.33955285e-01,  5.67987412e-02,
         3.73754084e-01]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 13, 154, 212,  10, 126]), tensor([-1.,  1.,  1.,  1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([-1.26703856e+34,  1.64900467e-01,  1.33955285e-01,  6.27868623e-02,
         5.87867340e-04]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 13, 154, 212,  10, 126]), tensor([-1.,  1.,  1.,  1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([-1.26703856e+34,  1.64900467e-01,  1.33955285e-01,  6.27868623e-02,
         3.67051184e-01]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 13, 126]), tensor([ 1., -1.]), tensor([0, 0]), tensor([-1.26703856e+34,  9.02594812e-03]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 13, 126]), tensor([1., 1.]), tensor([0, 0]), tensor([-1.26703856e+34,  3.96950275e-01]), tensor([0, 1]))}
Shallow branching resets to n domains:  15
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.47824105620384216
10 lb beta sum: 0.20812278985977173, worst -0.47638803720474243
Time: prepare 0.0006    bound 0.1627    transfer 0.0003    finalize 0.0005    func 0.1642    
Accumulated time: func 1.2685    prepare 0.0744    bound 0.9424    transfer 0.0167    finalize 0.2322    
After pruning, left:  8

Back to Regular BaB

BaB round 1
batch: 8
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 10] [/input-16, 126] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 154] 
cut re-enabled after branching node selection
0 lb beta sum: 0.2627198100090027, worst -0.34642964601516724
10 lb beta sum: 0.2627198100090027, worst -0.3455040454864502
Time: prepare 0.0009    bound 0.1596    transfer 0.0002    finalize 0.0008    func 0.1617    
Accumulated time: func 1.4302    prepare 0.0755    bound 1.1020    transfer 0.0169    finalize 0.2330    
all_split False
======================Cut inference begins======================
max lb tensor(0.27014750) min lb tensor(-0.34517866)
Number of Verified Splits: 1 of 16
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.4492831230163574, worst 0.16310951113700867

all verified at 0th iter
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 2
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.009329557418823242 
BICCOS Cumulative time: 0.08262348175048828
Preprocessing time: 0.0007359981536865234 Inference time: 0.00823831558227539 Add cuts time: 0.0001251697540283203 Cut analysis time: 0.0002300739288330078
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34518 (1), -0.33284 (1), -0.11717 (1), -0.11547 (1), -0.10142 (1), -0.05619 (1), -0.04188 (1), -0.03594 (1), -0.03396 (1), -0.02800 (1), -0.02439 (1), -0.01936 (1), -0.01369 (1), -0.01005 (1), -0.00417 (1), 
Length of domains: 15
Time: pickout 0.0005    decision 0.0133    set_bounds 0.0009    solve 0.1617    add 0.0012    
Accumulated time: pickout 0.0043    decision 0.8765    set_bounds 0.0683    solve 1.1938    add 0.4913    
Current (lb-rhs): -0.34517866373062134
265 domains visited
Cumulative time: 3.0013175010681152

BaB round 2
batch: 15
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 166] [/input-12, 7714] [/input-12, 7714] [/input-12, 7714] [/input-12, 7714] [/input-12, 7714] [/input-16, 212] [/input-16, 166] [/input-16, 166] [/input-16, 182] 
cut re-enabled after branching node selection
0 lb beta sum: 0.25028225779533386, worst -0.24340710043907166
10 lb beta sum: 0.25028225779533386, worst -0.2427021563053131
Time: prepare 0.0015    bound 0.1649    transfer 0.0006    finalize 0.0009    func 0.1681    
Accumulated time: func 1.5983    prepare 0.0772    bound 1.2668    transfer 0.0175    finalize 0.2339    
all_split False
======================Cut inference begins======================
max lb tensor(0.01340437) min lb tensor(-0.24244422)
Number of Verified Splits: 7 of 30
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.23896470665931702, worst -0.10799768567085266
10 lb beta sum: 0.43627238273620605, worst -0.013375665992498398
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 2
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.16704106330871582 
BICCOS Cumulative time: 0.2496645450592041
Preprocessing time: 0.0012307167053222656 Inference time: 0.16469383239746094 Add cuts time: 0.00027871131896972656 Cut analysis time: 0.0008378028869628906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.24244 (2), -0.23262 (2), -0.22323 (2), -0.21053 (2), -0.07346 (2), -0.07286 (2), -0.06440 (2), -0.06131 (2), -0.05937 (2), -0.05387 (2), -0.04729 (2), -0.03376 (2), -0.03190 (2), -0.02587 (2), -0.02211 (2), -0.02094 (2), -0.01812 (2), -0.01303 (2), -0.01302 (2), -0.00930 (2), 
Length of domains: 23
Time: pickout 0.0005    decision 0.0165    set_bounds 0.0014    solve 0.1681    add 0.0016    
Accumulated time: pickout 0.0048    decision 0.8930    set_bounds 0.0697    solve 1.3619    add 0.4930    
Current (lb-rhs): -0.2424442172050476
288 domains visited
Cumulative time: 3.3567676544189453

BaB round 3
batch: 23
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 10] [/input-16, 182] [/input-12, 7714] [/input-12, 7714] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1910310983657837
10 lb beta sum: 0.15441469848155975, worst -0.18863803148269653
Time: prepare 0.0011    bound 0.1705    transfer 0.0004    finalize 0.0013    func 0.1736    
Accumulated time: func 1.7719    prepare 0.0785    bound 1.4373    transfer 0.0180    finalize 0.2352    
all_split False
======================Cut inference begins======================
max lb tensor(0.01472878) min lb tensor(-0.18834829)
Number of Verified Splits: 14 of 46
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14417850971221924
10 lb beta sum: 0.40220892429351807, worst -0.06149546802043915
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 2
#cuts 4-6: 4
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.17447781562805176 
BICCOS Cumulative time: 0.42414236068725586
Preprocessing time: 0.0016937255859375 Inference time: 0.17210793495178223 Add cuts time: 0.000232696533203125 Cut analysis time: 0.00044345855712890625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18835 (3), -0.18110 (3), -0.17734 (3), -0.17112 (3), -0.16809 (3), -0.16310 (3), -0.15539 (3), -0.15034 (3), -0.05734 (3), -0.05386 (3), -0.05381 (3), -0.05304 (3), -0.05216 (3), -0.04488 (3), -0.04389 (3), -0.04197 (3), -0.04109 (3), -0.03421 (3), -0.03363 (3), -0.02760 (3), 
Length of domains: 32
Time: pickout 0.0006    decision 0.0165    set_bounds 0.0021    solve 0.1738    add 0.0204    
Accumulated time: pickout 0.0053    decision 0.9095    set_bounds 0.0718    solve 1.5357    add 0.5133    
Current (lb-rhs): -0.18834829330444336
320 domains visited
Cumulative time: 3.744900703430176

BaB round 4
batch: 32
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7714] [/input-12, 867] [/input-12, 1452] [/input-12, 2924] [/input-16, 166] [/input-12, 7714] [/input-16, 182] [/input-12, 867] [/input-12, 2924] [/input-12, 2924] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14945253729820251
10 lb beta sum: 0.17572712898254395, worst -0.14734426140785217
Time: prepare 0.0015    bound 0.1609    transfer 0.0008    finalize 0.0014    func 0.1651    
Accumulated time: func 1.9370    prepare 0.0802    bound 1.5982    transfer 0.0188    finalize 0.2365    
all_split False
======================Cut inference begins======================
max lb tensor(0.01307178) min lb tensor(-0.14717048)
Number of Verified Splits: 17 of 64
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11373621225357056
10 lb beta sum: 0.40152478218078613, worst -0.02715158462524414
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 2
#cuts 4-6: 4
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.18114233016967773 
BICCOS Cumulative time: 0.6052846908569336
Preprocessing time: 0.0022656917572021484 Inference time: 0.1781473159790039 Add cuts time: 0.00024247169494628906 Cut analysis time: 0.0004868507385253906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14717 (4), -0.13963 (4), -0.13632 (4), -0.13561 (4), -0.12979 (4), -0.12894 (4), -0.12858 (4), -0.12407 (4), -0.12261 (4), -0.11797 (4), -0.11513 (4), -0.11092 (4), -0.10929 (4), -0.10802 (4), -0.09870 (4), -0.09671 (4), -0.05219 (4), -0.05204 (4), -0.05126 (4), -0.05068 (4), 
Length of domains: 47
Time: pickout 0.0006    decision 0.0145    set_bounds 0.0028    solve 0.1651    add 0.0019    
Accumulated time: pickout 0.0059    decision 0.9240    set_bounds 0.0746    solve 1.7009    add 0.5152    
Current (lb-rhs): -0.14717048406600952
367 domains visited
Cumulative time: 4.111299276351929

BaB round 5
batch: 47
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2924] [/input-12, 2323] [/input-12, 867] [/input-12, 7714] [/input-12, 867] [/input-12, 867] [/input-12, 2924] [/input-12, 7714] [/input-12, 2924] [/input-12, 7714] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13659733533859253
10 lb beta sum: 0.1889115869998932, worst -0.13463789224624634
Time: prepare 0.0021    bound 0.1682    transfer 0.0008    finalize 0.0022    func 0.1740    
Accumulated time: func 2.1110    prepare 0.0824    bound 1.7664    transfer 0.0196    finalize 0.2387    
all_split False
======================Cut inference begins======================
max lb tensor(0.02129459) min lb tensor(-0.13451093)
Number of Verified Splits: 21 of 94
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12529626488685608
10 lb beta sum: 0.3989790976047516, worst -0.04117065668106079
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 2
#cuts 4-6: 4
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.184309720993042 
BICCOS Cumulative time: 0.7895944118499756
Preprocessing time: 0.0031790733337402344 Inference time: 0.18029546737670898 Add cuts time: 0.00026869773864746094 Cut analysis time: 0.0005664825439453125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13451 (5), -0.13037 (5), -0.12783 (5), -0.12760 (5), -0.12296 (5), -0.12145 (5), -0.12073 (5), -0.11982 (5), -0.11701 (5), -0.11484 (5), -0.11383 (5), -0.11324 (5), -0.10872 (5), -0.10797 (5), -0.10779 (5), -0.10394 (5), -0.09769 (5), -0.09568 (5), -0.09396 (5), -0.09255 (5), 
Length of domains: 73
Time: pickout 0.0006    decision 0.0175    set_bounds 0.0041    solve 0.1740    add 0.0024    
Accumulated time: pickout 0.0064    decision 0.9415    set_bounds 0.0787    solve 1.8749    add 0.5176    
Current (lb-rhs): -0.13451093435287476
440 domains visited
Cumulative time: 4.494690895080566

BaB round 6
batch: 73
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6251] [/input-12, 6251] [/input-12, 2924] [/input-16, 182] [/input-12, 740] [/input-12, 740] [/input-12, 2323] [/input-16, 182] [/input-12, 867] [/input-16, 182] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13144773244857788
10 lb beta sum: 0.17838776111602783, worst -0.12955841422080994
Time: prepare 0.0031    bound 0.1669    transfer 0.0014    finalize 0.0030    func 0.1753    
Accumulated time: func 2.2864    prepare 0.0857    bound 1.9333    transfer 0.0209    finalize 0.2417    
all_split False
======================Cut inference begins======================
max lb tensor(0.03055841) min lb tensor(-0.12948349)
Number of Verified Splits: 26 of 146
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.007722616195678711 
BICCOS Cumulative time: 0.7973170280456543
Preprocessing time: 0.0046427249908447266 Inference time: 0.0022335052490234375 Add cuts time: 0.00042247772216796875 Cut analysis time: 0.0004239082336425781
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12948 (6), -0.12208 (6), -0.11975 (6), -0.11908 (6), -0.11804 (6), -0.11374 (6), -0.11249 (6), -0.11106 (6), -0.11055 (6), -0.10777 (6), -0.10688 (6), -0.10618 (6), -0.10467 (6), -0.10406 (6), -0.10302 (6), -0.10103 (6), -0.10048 (6), -0.09904 (6), -0.09674 (6), -0.09328 (6), 
Length of domains: 120
Time: pickout 0.0006    decision 0.0191    set_bounds 0.0065    solve 0.1754    add 0.0034    
Accumulated time: pickout 0.0071    decision 0.9606    set_bounds 0.0852    solve 2.0503    add 0.5210    
Current (lb-rhs): -0.12948349118232727
560 domains visited
Cumulative time: 4.7079010009765625

BaB round 7
batch: 120
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 867] [/input-12, 740] [/input-12, 2924] [/input-12, 6251] [/input-12, 2323] [/input-12, 867] [/input-12, 6251] [/input-12, 2924] [/input-12, 2924] [/input-12, 865] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12757524847984314
10 lb beta sum: 0.2893846035003662, worst -0.12573346495628357
Time: prepare 0.0048    bound 0.1509    transfer 0.0019    finalize 0.0048    func 0.1641    
Accumulated time: func 2.4505    prepare 0.0908    bound 2.0842    transfer 0.0228    finalize 0.2465    
all_split False
======================Cut inference begins======================
max lb tensor(0.02544273) min lb tensor(-0.12570310)
Number of Verified Splits: 16 of 240
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 5.
#cuts 1-3: 3
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.00933074951171875 
BICCOS Cumulative time: 0.806647777557373
Preprocessing time: 0.007351875305175781 Inference time: 0.0014624595642089844 Add cuts time: 0.00021409988403320312 Cut analysis time: 0.00030231475830078125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12570 (7), -0.11819 (7), -0.11645 (7), -0.11509 (7), -0.11489 (7), -0.11365 (7), -0.11262 (7), -0.11189 (7), -0.10853 (7), -0.10841 (7), -0.10689 (7), -0.10626 (7), -0.10593 (7), -0.10567 (7), -0.10494 (7), -0.10424 (7), -0.10389 (7), -0.10356 (7), -0.10072 (7), -0.10008 (7), 
Length of domains: 224
Time: pickout 0.0008    decision 0.0218    set_bounds 0.0103    solve 0.1642    add 0.0046    
Accumulated time: pickout 0.0079    decision 0.9825    set_bounds 0.0955    solve 2.2145    add 0.5256    
Current (lb-rhs): -0.1257030963897705
784 domains visited
Cumulative time: 4.919785976409912

BaB round 8
batch: 224
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1436] [/input-12, 2924] [/input-12, 1452] [/input-12, 2924] [/input-12, 865] [/input-12, 2323] [/input-12, 1436] [/input-12, 1452] [/input-12, 1436] [/input-12, 5508] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1215556263923645
10 lb beta sum: 0.2699098289012909, worst -0.11973094940185547
Time: prepare 0.0088    bound 0.1712    transfer 0.0046    finalize 0.0093    func 0.1970    
Accumulated time: func 2.6475    prepare 0.0998    bound 2.2554    transfer 0.0275    finalize 0.2559    
all_split False
======================Cut inference begins======================
max lb tensor(0.01174390) min lb tensor(-0.11969408)
Number of Verified Splits: 59 of 448
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.02017045021057129 
BICCOS Cumulative time: 0.8268182277679443
Preprocessing time: 0.013173341751098633 Inference time: 0.0053997039794921875 Add cuts time: 0.0006680488586425781 Cut analysis time: 0.0009293556213378906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11969 (8), -0.11885 (8), -0.11253 (8), -0.11219 (8), -0.11079 (8), -0.11072 (8), -0.10990 (8), -0.10911 (8), -0.10903 (8), -0.10901 (8), -0.10806 (8), -0.10806 (8), -0.10692 (8), -0.10581 (8), -0.10455 (8), -0.10312 (8), -0.10287 (8), -0.10282 (8), -0.10221 (8), -0.10194 (8), 
Length of domains: 389
Time: pickout 0.0011    decision 0.0286    set_bounds 0.0195    solve 0.1972    add 0.0093    
Accumulated time: pickout 0.0090    decision 1.0111    set_bounds 0.1151    solve 2.4117    add 0.5349    
Current (lb-rhs): -0.11969408392906189
1173 domains visited
Cumulative time: 5.196665287017822

BaB round 9
batch: 256
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 740] [/input-12, 865] [/input-12, 867] [/input-12, 1436] [/input-12, 2325] [/input-12, 6251] [/input-12, 1452] [/input-12, 5324] [/input-12, 1452] [/input-12, 2325] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11611977219581604
10 lb beta sum: 0.2650831937789917, worst -0.11429405212402344
Time: prepare 0.0102    bound 0.1690    transfer 0.0046    finalize 0.0094    func 0.1972    
Accumulated time: func 2.8447    prepare 0.1102    bound 2.4243    transfer 0.0321    finalize 0.2653    
all_split False
======================Cut inference begins======================
max lb tensor(0.01809104) min lb tensor(-0.11427778)
Number of Verified Splits: 97 of 512
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 7
#cuts >= 20: 0
BICCOS time: 0.02669501304626465 
BICCOS Cumulative time: 0.853513240814209
Preprocessing time: 0.014909982681274414 Inference time: 0.009648323059082031 Add cuts time: 0.0018017292022705078 Cut analysis time: 0.0003349781036376953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11885 (8), -0.11428 (9), -0.11313 (9), -0.10976 (9), -0.10946 (9), -0.10903 (8), -0.10901 (8), -0.10815 (9), -0.10806 (8), -0.10797 (9), -0.10642 (9), -0.10535 (9), -0.10524 (9), -0.10399 (9), -0.10322 (9), -0.10316 (9), -0.10282 (8), -0.10189 (9), -0.10176 (9), -0.10139 (9), 
Length of domains: 548
Time: pickout 0.0100    decision 0.0301    set_bounds 0.0221    solve 0.1974    add 0.0084    
Accumulated time: pickout 0.0189    decision 1.0412    set_bounds 0.1372    solve 2.6091    add 0.5432    
Current (lb-rhs): -0.11884614825248718
1588 domains visited
current_vram/total_varm: 9.2GB/99.9GB, batch_size increase to 512
Cumulative time: 5.492701768875122

BaB round 10
batch: 512
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 865] [/input-12, 2323] [/input-12, 867] [/input-12, 1436] [/input-12, 2323] [/input-12, 867] [/input-12, 6251] [/input-12, 740] [/input-12, 2325] [/input-12, 867] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11535239219665527
10 lb beta sum: 0.26971322298049927, worst -0.11351221799850464
Time: prepare 0.0197    bound 0.2197    transfer 0.0164    finalize 0.0366    func 0.2998    
Accumulated time: func 3.1445    prepare 0.1302    bound 2.6440    transfer 0.0485    finalize 0.3018    
all_split False
======================Cut inference begins======================
max lb tensor(0.02256711) min lb tensor(-0.11349404)
Number of Verified Splits: 192 of 1024
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 8
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.05386614799499512 
BICCOS Cumulative time: 0.9073793888092041
Preprocessing time: 0.03090977668762207 Inference time: 0.02054286003112793 Add cuts time: 0.002007007598876953 Cut analysis time: 0.00040650367736816406
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11349 (9), -0.11224 (9), -0.11179 (10), -0.11049 (10), -0.10756 (10), -0.10653 (10), -0.10634 (9), -0.10524 (9), -0.10518 (9), -0.10455 (10), -0.10440 (9), -0.10413 (10), -0.10399 (9), -0.10307 (10), -0.10271 (10), -0.10235 (10), -0.10214 (9), -0.10083 (10), -0.10072 (10), -0.10068 (10), 
Length of domains: 868
Time: pickout 0.0021    decision 0.0483    set_bounds 0.0442    solve 0.3001    add 0.0186    
Accumulated time: pickout 0.0211    decision 1.0895    set_bounds 0.1814    solve 2.9091    add 0.5618    
Current (lb-rhs): -0.11349403858184814
2420 domains visited
current_vram/total_varm: 9.2GB/99.9GB, batch_size increase to 1024
Cumulative time: 5.963770627975464

BaB round 11
batch: 868
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1452] [/input-12, 867] [/input-12, 1452] [/input-12, 867] [/input-12, 6251] [/input-12, 1436] [/input-12, 5508] [/input-12, 1452] [/input-12, 5508] [/input-12, 5508] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11280748248100281
10 lb beta sum: 0.257188618183136, worst -0.111013263463974
Time: prepare 0.0332    bound 0.3300    transfer 0.0144    finalize 0.0645    func 0.4544    
Accumulated time: func 3.5989    prepare 0.1636    bound 2.9740    transfer 0.0628    finalize 0.3664    
all_split False
======================Cut inference begins======================
max lb tensor(0.01860249) min lb tensor(-0.11100689)
Number of Verified Splits: 264 of 1736
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 12
#cuts >= 20: 0
BICCOS time: 0.09031009674072266 
BICCOS Cumulative time: 0.9976894855499268
Preprocessing time: 0.056825876235961914 Inference time: 0.02991652488708496 Add cuts time: 0.0030701160430908203 Cut analysis time: 0.0004975795745849609
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11101 (10), -0.11045 (11), -0.10968 (10), -0.10917 (11), -0.10613 (11), -0.10438 (11), -0.10351 (10), -0.10316 (11), -0.10278 (10), -0.10264 (11), -0.10248 (10), -0.10196 (10), -0.10193 (10), -0.10172 (11), -0.10144 (10), -0.10122 (11), -0.10088 (11), -0.10010 (10), -0.09993 (10), -0.09955 (10), 
Length of domains: 1472
Time: pickout 0.0307    decision 0.0733    set_bounds 0.0735    solve 0.4547    add 0.0626    
Accumulated time: pickout 0.0518    decision 1.1628    set_bounds 0.2549    solve 3.3639    add 0.6244    
Current (lb-rhs): -0.11100688576698303
3892 domains visited
Cumulative time: 6.758742094039917

BaB round 12
batch: 1024
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3602] [/input-12, 7476] [/input-12, 6251] [/input-12, 5509] [/input-12, 865] [/input-12, 2924] [/input-12, 6251] [/input-12, 2323] [/input-12, 6252] [/input-12, 5324] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11145269870758057
10 lb beta sum: 0.2715860903263092, worst -0.10966771841049194
Time: prepare 0.0413    bound 0.3764    transfer 0.0072    finalize 0.0661    func 0.5055    
Accumulated time: func 4.1044    prepare 0.2052    bound 3.3504    transfer 0.0700    finalize 0.4324    
all_split False
======================Cut inference begins======================
max lb tensor(0.02817996) min lb tensor(-0.10966071)
Number of Verified Splits: 300 of 2048
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 5.
#cuts 1-3: 4
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.10645437240600586 
BICCOS Cumulative time: 1.1041438579559326
Preprocessing time: 0.06474137306213379 Inference time: 0.03541088104248047 Add cuts time: 0.005888223648071289 Cut analysis time: 0.0004138946533203125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10966 (11), -0.10838 (11), -0.10683 (12), -0.10536 (12), -0.10351 (10), -0.10289 (12), -0.10194 (12), -0.10189 (12), -0.10157 (11), -0.10103 (11), -0.10075 (11), -0.10060 (11), -0.10038 (12), -0.10005 (12), -0.10001 (11), -0.09893 (12), -0.09863 (12), -0.09856 (12), -0.09831 (11), -0.09767 (11), 
Length of domains: 2196
Time: pickout 0.0072    decision 0.3655    set_bounds 0.0967    solve 0.5059    add 0.0429    
Accumulated time: pickout 0.0590    decision 1.5282    set_bounds 0.3516    solve 3.8698    add 0.6673    
Current (lb-rhs): -0.10966071486473083
5640 domains visited
current_vram/total_varm: 9.2GB/99.9GB, batch_size increase to 2048
Cumulative time: 7.8933000564575195

BaB round 13
batch: 2048
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5324] [/input-12, 2323] [/input-12, 1452] [/input-12, 740] [/input-12, 5508] [/input-12, 740] [/input-12, 6252] [/input-12, 5324] [/input-12, 7476] [/input-12, 2365] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10805821418762207
10 lb beta sum: 0.24534687399864197, worst -0.10618850588798523
Time: prepare 0.0832    bound 0.6872    transfer 0.0408    finalize 0.2862    func 1.1251    
Accumulated time: func 5.2295    prepare 0.2887    bound 4.0376    transfer 0.1108    finalize 0.7186    
all_split False
======================Cut inference begins======================
max lb tensor(0.52598143) min lb tensor(-0.10616997)
Number of Verified Splits: 612 of 4096
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 5
#cuts 4-6: 2
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.21603846549987793 
BICCOS Cumulative time: 1.3201823234558105
Preprocessing time: 0.13063693046569824 Inference time: 0.07599592208862305 Add cuts time: 0.008840084075927734 Cut analysis time: 0.0005655288696289062
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10617 (12), -0.10455 (12), -0.10316 (13), -0.10212 (11), -0.10184 (12), -0.10170 (13), -0.10162 (13), -0.10090 (12), -0.10015 (13), -0.09912 (13), -0.09818 (13), -0.09814 (13), -0.09784 (12), -0.09775 (13), -0.09720 (12), -0.09673 (13), -0.09672 (13), -0.09669 (12), -0.09666 (13), -0.09637 (12), 
Length of domains: 3632
Time: pickout 0.0080    decision 0.1645    set_bounds 0.1845    solve 1.1260    add 0.0860    
Accumulated time: pickout 0.0671    decision 1.6927    set_bounds 0.5360    solve 4.9958    add 0.7533    
Current (lb-rhs): -0.10616996884346008
9124 domains visited
current_vram/total_varm: 9.2GB/99.9GB, batch_size increase to 4096
Cumulative time: 9.694162607192993

BaB round 14
batch: 3632
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7476] [/input-12, 7476] [/input-12, 865] [/input-12, 2323] [/input-12, 5508] [/input-12, 740] [/input-12, 2084] [/input-12, 2323] [/input-12, 6251] [/input-12, 2365] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10433951020240784
10 lb beta sum: 0.23806458711624146, worst -0.10250824689865112
Time: prepare 0.1563    bound 1.1148    transfer 0.0958    finalize 0.2485    func 1.6646    
Accumulated time: func 6.8941    prepare 0.4453    bound 5.1524    transfer 0.2066    finalize 0.9671    
all_split False
======================Cut inference begins======================
max lb tensor(0.55996060) min lb tensor(-0.10249221)
Number of Verified Splits: 1020 of 7264
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 5
#cuts 4-6: 8
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.4069557189941406 
BICCOS Cumulative time: 1.7271380424499512
Preprocessing time: 0.24664044380187988 Inference time: 0.1434342861175537 Add cuts time: 0.015981674194335938 Cut analysis time: 0.0008993148803710938
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10249 (13), -0.10092 (13), -0.10078 (13), -0.10006 (14), -0.09929 (13), -0.09857 (14), -0.09854 (14), -0.09806 (12), -0.09805 (13), -0.09709 (14), -0.09709 (13), -0.09705 (14), -0.09670 (13), -0.09578 (13), -0.09507 (12), -0.09504 (14), -0.09498 (14), -0.09457 (14), -0.09441 (13), -0.09400 (13), 
Length of domains: 6244
Time: pickout 0.1335    decision 0.2810    set_bounds 0.4852    solve 1.6687    add 0.1486    
Accumulated time: pickout 0.2006    decision 1.9737    set_bounds 1.0212    solve 6.6645    add 0.9019    
Current (lb-rhs): -0.10249221324920654
15368 domains visited
Cumulative time: 12.847724914550781

BaB round 15
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2365] [/input-12, 2323] [/input-12, 7476] [/input-12, 7476] [/input-12, 5508] [/input-12, 7476] [/input-12, 1452] [/input-12, 1436] [/input-12, 2365] [/input-12, 1452] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1022166907787323
10 lb beta sum: 0.22738713026046753, worst -0.10039395093917847
Time: prepare 0.1881    bound 1.2416    transfer 0.1275    finalize 0.3003    func 1.9142    
Accumulated time: func 8.8083    prepare 0.6338    bound 6.3940    transfer 0.3341    finalize 1.2675    
all_split False
======================Cut inference begins======================
max lb tensor(0.64054918) min lb tensor(-0.10038286)
Number of Verified Splits: 1187 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 5
#cuts 4-6: 18
#cuts 7-9: 5
#cuts >= 20: 0
BICCOS time: 0.78774094581604 
BICCOS Cumulative time: 2.514878988265991
Preprocessing time: 0.5743772983551025 Inference time: 0.18941950798034668 Add cuts time: 0.021193981170654297 Cut analysis time: 0.0027501583099365234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10038 (14), -0.09854 (14), -0.09801 (15), -0.09782 (14), -0.09767 (14), -0.09705 (14), -0.09670 (13), -0.09653 (15), -0.09621 (14), -0.09593 (14), -0.09578 (13), -0.09498 (14), -0.09457 (14), -0.09441 (13), -0.09390 (14), -0.09390 (15), -0.09377 (15), -0.09363 (14), -0.09360 (14), -0.09354 (14), 
Length of domains: 9153
Time: pickout 0.0167    decision 0.3202    set_bounds 0.6379    solve 1.9180    add 0.1897    
Accumulated time: pickout 0.2173    decision 2.2940    set_bounds 1.6592    solve 8.5825    add 1.0916    
Current (lb-rhs): -0.10038286447525024
22373 domains visited
current_vram/total_varm: 19.5GB/99.9GB, batch_size increase to 8192
Cumulative time: 16.7516508102417

BaB round 16
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 247] [/input-12, 2325] [/input-12, 7191] [/input-12, 5509] [/input-16, 247] [/input-12, 2326] [/input-12, 865] [/input-12, 2596] [/input-12, 740] [/input-12, 2325] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09907138347625732
10 lb beta sum: 0.20466983318328857, worst -0.09727063775062561
Time: prepare 0.3801    bound 2.4043    transfer 0.2560    finalize 1.0334    func 4.1831    
Accumulated time: func 12.9914    prepare 1.0142    bound 8.7983    transfer 0.5900    finalize 2.3008    
all_split False
======================Cut inference begins======================
max lb tensor(0.67740011) min lb tensor(-0.09726420)
Number of Verified Splits: 2681 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 61.
#cuts 1-3: 5
#cuts 4-6: 49
#cuts 7-9: 7
#cuts >= 20: 0
BICCOS time: 1.032655954360962 
BICCOS Cumulative time: 3.547534942626953
Preprocessing time: 0.5384044647216797 Inference time: 0.4045555591583252 Add cuts time: 0.08666515350341797 Cut analysis time: 0.0030307769775390625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09782 (14), -0.09726 (15), -0.09649 (15), -0.09621 (14), -0.09599 (16), -0.09563 (15), -0.09499 (15), -0.09458 (14), -0.09457 (16), -0.09377 (15), -0.09290 (15), -0.09274 (15), -0.09261 (14), -0.09247 (15), -0.09231 (15), -0.09230 (14), -0.09229 (15), -0.09187 (15), -0.09184 (16), -0.09151 (15), 
Length of domains: 14664
Time: pickout 0.0341    decision 0.6454    set_bounds 1.0200    solve 4.1882    add 0.3518    
Accumulated time: pickout 0.2514    decision 2.9394    set_bounds 2.6792    solve 12.7707    add 1.4433    
Current (lb-rhs): -0.09781810641288757
36076 domains visited
current_vram/total_varm: 37.7GB/99.9GB, batch_size increase to 16384
Cumulative time: 24.088886260986328

BaB round 17
batch: 14664
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 247] [/input-12, 5558] [/input-12, 1452] [/input-12, 5509] [/input-12, 2589] [/input-12, 5324] [/input-12, 2596] [/input-12, 6251] [/input-16, 95] [/input-12, 7191] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09750959277153015
10 lb beta sum: 0.18020276725292206, worst -0.18147620558738708
Time: prepare 0.6702    bound 4.3181    transfer 0.4575    finalize 2.0314    func 7.6758    
Accumulated time: func 20.6673    prepare 1.6849    bound 13.1164    transfer 1.0476    finalize 4.3323    
all_split False
======================Cut inference begins======================
max lb tensor(0.74827963) min lb tensor(-0.09569511)
Number of Verified Splits: 6127 of 29328
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 102.
#cuts 1-3: 6
#cuts 4-6: 83
#cuts 7-9: 13
#cuts >= 20: 0
BICCOS time: 2.513425350189209 
BICCOS Cumulative time: 6.060960292816162
Preprocessing time: 1.3752586841583252 Inference time: 0.9889175891876221 Add cuts time: 0.14496994018554688 Cut analysis time: 0.004279136657714844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09570 (15), -0.09523 (16), -0.09441 (16), -0.09416 (15), -0.09356 (16), -0.09295 (16), -0.09270 (17), -0.09231 (17), -0.09174 (16), -0.09142 (15), -0.09139 (17), -0.09096 (16), -0.09095 (16), -0.09079 (17), -0.09069 (16), -0.09053 (15), -0.09044 (16), -0.09032 (16), -0.09018 (16), -0.09000 (15), 
Length of domains: 23201
Time: pickout 0.5503    decision 1.4010    set_bounds 1.9988    solve 7.6831    add 1.4086    
Accumulated time: pickout 0.8017    decision 4.3404    set_bounds 4.6780    solve 20.4538    add 2.8519    
Current (lb-rhs): -0.09569510817527771
59277 domains visited
Cumulative time: 39.85809826850891

BaB round 18
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5558] [/input-12, 5324] [/input-12, 2326] [/input-16, 95] [/input-12, 5508] [/input-16, 95] [/input-12, 4467] [/input-16, 95] [/input-12, 5509] [/input-12, 5324] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09544214606285095
10 lb beta sum: 0.19879579544067383, worst -0.17975331842899323
Time: prepare 0.7818    bound 4.8768    transfer 0.4845    finalize 2.8757    func 9.2397    
Accumulated time: func 29.9070    prepare 2.4671    bound 17.9932    transfer 1.5321    finalize 7.2080    
all_split False
======================Cut inference begins======================
max lb tensor(0.76100153) min lb tensor(-0.09364828)
Number of Verified Splits: 7633 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 128.
#cuts 1-3: 10
#cuts 4-6: 98
#cuts 7-9: 20
#cuts >= 20: 0
BICCOS time: 3.198523759841919 
BICCOS Cumulative time: 9.259484052658081
Preprocessing time: 1.1009032726287842 Inference time: 1.8608794212341309 Add cuts time: 0.2313671112060547 Cut analysis time: 0.005373954772949219
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09365 (16), -0.09204 (16), -0.09186 (17), -0.09159 (17), -0.09110 (17), -0.09096 (16), -0.09070 (17), -0.09031 (17), -0.08981 (17), -0.08981 (18), -0.08976 (17), -0.08944 (16), -0.08939 (18), -0.08935 (16), -0.08916 (17), -0.08904 (18), -0.08865 (18), -0.08851 (18), -0.08851 (16), -0.08844 (17), 
Length of domains: 31952
Time: pickout 0.0907    decision 2.3004    set_bounds 2.0377    solve 9.2520    add 1.0092    
Accumulated time: pickout 0.8924    decision 6.6407    set_bounds 6.7156    solve 29.7058    add 3.8611    
Current (lb-rhs): -0.0936482846736908
84412 domains visited
Cumulative time: 58.03965091705322

BaB round 19
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2084] [/input-16, 95] [/input-12, 1452] [/input-12, 2325] [/input-12, 5324] [/input-16, 247] [/input-12, 5509] [/input-12, 2466] [/input-12, 4467] [/input-16, 95] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09209337830543518
10 lb beta sum: 0.2335706204175949, worst -0.19346825778484344
Time: prepare 0.7942    bound 4.9130    transfer 0.5112    finalize 3.0008    func 9.4437    
Accumulated time: func 39.3506    prepare 3.2618    bound 22.9062    transfer 2.0433    finalize 10.2088    
all_split False
======================Cut inference begins======================
max lb tensor(0.76224190) min lb tensor(-0.09184602)
Number of Verified Splits: 6970 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 96.
#cuts 1-3: 14
#cuts 4-6: 70
#cuts 7-9: 12
#cuts >= 20: 0
BICCOS time: 3.2305941581726074 
BICCOS Cumulative time: 12.490078210830688
Preprocessing time: 1.112001657485962 Inference time: 1.8985772132873535 Add cuts time: 0.21620988845825195 Cut analysis time: 0.003805398941040039
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09185 (18), -0.09159 (17), -0.09070 (17), -0.09026 (17), -0.08998 (17), -0.08981 (17), -0.08980 (19), -0.08944 (16), -0.08939 (18), -0.08916 (17), -0.08904 (18), -0.08876 (17), -0.08865 (18), -0.08851 (18), -0.08829 (17), -0.08818 (18), -0.08806 (17), -0.08790 (18), -0.08779 (18), -0.08770 (17), 
Length of domains: 41366
Time: pickout 0.0995    decision 2.1424    set_bounds 2.1781    solve 9.4553    add 1.8699    
Accumulated time: pickout 0.9919    decision 8.7832    set_bounds 8.8937    solve 39.1611    add 5.7311    
Current (lb-rhs): -0.09184601902961731
110210 domains visited
Cumulative time: 77.32367706298828

BaB round 20
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1452] [/input-12, 2596] [/input-12, 2326] [/input-16, 247] [/input-12, 2589] [/input-12, 5508] [/input-12, 3273] [/input-12, 2450] [/input-12, 2326] [/input-12, 865] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09019118547439575
10 lb beta sum: 0.31161460280418396, worst -0.16996754705905914
Time: prepare 0.8164    bound 4.8676    transfer 0.4805    finalize 2.4082    func 8.7918    
Accumulated time: func 48.1424    prepare 4.0788    bound 27.7738    transfer 2.5238    finalize 12.6170    
all_split False
======================Cut inference begins======================
max lb tensor(0.75601482) min lb tensor(-0.08938104)
Number of Verified Splits: 5858 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 91.
#cuts 1-3: 15
#cuts 4-6: 64
#cuts 7-9: 12
#cuts >= 20: 0
BICCOS time: 3.0638389587402344 
BICCOS Cumulative time: 15.553917169570923
Preprocessing time: 1.8595521450042725 Inference time: 1.032848834991455 Add cuts time: 0.16770482063293457 Cut analysis time: 0.0037331581115722656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09185 (18), -0.09026 (17), -0.08998 (17), -0.08980 (19), -0.08938 (19), -0.08902 (19), -0.08876 (17), -0.08863 (19), -0.08849 (19), -0.08832 (18), -0.08829 (17), -0.08818 (18), -0.08801 (18), -0.08785 (19), -0.08777 (18), -0.08759 (17), -0.08754 (19), -0.08742 (18), -0.08733 (17), -0.08732 (18), 
Length of domains: 51892
Time: pickout 0.0958    decision 2.1476    set_bounds 2.3533    solve 8.8042    add 1.6118    
Accumulated time: pickout 1.0877    decision 10.9308    set_bounds 11.2470    solve 47.9653    add 7.3429    
Current (lb-rhs): -0.09184601902961731
137120 domains visited
Cumulative time: 95.666494846344

BaB round 21
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 247] [/input-12, 740] [/input-12, 2596] [/input-12, 5509] [/input-12, 7191] [/input-16, 95] [/input-12, 1436] [/input-12, 5508] [/input-16, 95] [/input-12, 6251] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08887973427772522
10 lb beta sum: 0.2909172475337982, worst -0.15860828757286072
Time: prepare 0.8223    bound 4.8659    transfer 0.4842    finalize 3.1762    func 9.5765    
Accumulated time: func 57.7190    prepare 4.9017    bound 32.6397    transfer 3.0080    finalize 15.7932    
all_split False
======================Cut inference begins======================
max lb tensor(0.75453961) min lb tensor(-0.08818144)
Number of Verified Splits: 5667 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 99.
#cuts 1-3: 15
#cuts 4-6: 68
#cuts 7-9: 16
#cuts >= 20: 0
BICCOS time: 2.332869291305542 
BICCOS Cumulative time: 17.886786460876465
Preprocessing time: 1.125000238418579 Inference time: 1.0358574390411377 Add cuts time: 0.16800355911254883 Cut analysis time: 0.004008054733276367
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09185 (18), -0.08998 (17), -0.08980 (19), -0.08938 (19), -0.08902 (19), -0.08863 (19), -0.08849 (19), -0.08832 (18), -0.08829 (17), -0.08818 (19), -0.08801 (18), -0.08785 (19), -0.08777 (18), -0.08756 (18), -0.08754 (19), -0.08742 (18), -0.08732 (18), -0.08732 (18), -0.08725 (18), -0.08704 (18), 
Length of domains: 62609
Time: pickout 0.0945    decision 2.1485    set_bounds 2.4593    solve 9.5912    add 1.0986    
Accumulated time: pickout 1.1822    decision 13.0793    set_bounds 13.7063    solve 57.5565    add 8.4414    
Current (lb-rhs): -0.09184601902961731
164221 domains visited
Cumulative time: 113.64593601226807

BaB round 22
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2325] [/input-12, 740] [/input-12, 740] [/input-16, 247] [/input-12, 2365] [/input-12, 7191] [/input-12, 7191] [/input-16, 95] [/input-12, 2450] [/input-12, 2325] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08890160918235779
10 lb beta sum: 0.2806546688079834, worst -0.1611822098493576
Time: prepare 0.7873    bound 4.8699    transfer 0.5015    finalize 2.3538    func 8.7358    
Accumulated time: func 66.4548    prepare 5.6896    bound 37.5096    transfer 3.5094    finalize 18.1470    
all_split False
======================Cut inference begins======================
max lb tensor(0.75751376) min lb tensor(-0.08862722)
Number of Verified Splits: 5664 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 108.
#cuts 1-3: 15
#cuts 4-6: 69
#cuts 7-9: 24
#cuts >= 20: 0
BICCOS time: 2.363896369934082 
BICCOS Cumulative time: 20.250682830810547
Preprocessing time: 1.1388788223266602 Inference time: 1.0341644287109375 Add cuts time: 0.18628168106079102 Cut analysis time: 0.004571437835693359
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08938 (19), -0.08902 (19), -0.08863 (19), -0.08863 (19), -0.08849 (19), -0.08832 (18), -0.08830 (19), -0.08818 (19), -0.08800 (19), -0.08785 (19), -0.08777 (19), -0.08775 (20), -0.08756 (18), -0.08740 (19), -0.08732 (18), -0.08730 (19), -0.08725 (18), -0.08705 (18), -0.08704 (18), -0.08700 (18), 
Length of domains: 73329
Time: pickout 0.1084    decision 2.6791    set_bounds 2.7025    solve 8.7486    add 7.0401    
Accumulated time: pickout 1.2906    decision 15.7584    set_bounds 16.4088    solve 66.3051    add 15.4815    
Current (lb-rhs): -0.08938103914260864
191325 domains visited
Cumulative time: 137.58656907081604

BaB round 23
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1394] [/input-12, 7137] [/input-12, 1452] [/input-12, 2325] [/input-12, 7191] [/input-12, 5509] [/input-16, 95] [/input-12, 2349] [/input-12, 2326] [/input-16, 247] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08831650018692017
10 lb beta sum: 0.28184977173805237, worst -0.1659441441297531
Time: prepare 0.7980    bound 4.8817    transfer 0.5039    finalize 3.7284    func 10.1357    
Accumulated time: func 76.5905    prepare 6.4883    bound 42.3913    transfer 4.0133    finalize 21.8755    
all_split False
======================Cut inference begins======================
max lb tensor(0.75401360) min lb tensor(-0.08830819)
Number of Verified Splits: 4967 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 120.
#cuts 1-3: 15
#cuts 4-6: 77
#cuts 7-9: 27
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 2.2528457641601562 
BICCOS Cumulative time: 22.503528594970703
Preprocessing time: 1.1550981998443604 Inference time: 0.9263842105865479 Add cuts time: 0.16623663902282715 Cut analysis time: 0.0051267147064208984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08863 (19), -0.08863 (19), -0.08831 (19), -0.08830 (19), -0.08818 (19), -0.08800 (19), -0.08785 (19), -0.08777 (19), -0.08775 (20), -0.08756 (18), -0.08740 (19), -0.08733 (20), -0.08732 (18), -0.08730 (19), -0.08705 (18), -0.08702 (19), -0.08700 (18), -0.08698 (20), -0.08684 (19), -0.08678 (19), 
Length of domains: 84746
Time: pickout 0.0816    decision 2.8134    set_bounds 1.7164    solve 10.1471    add 1.0436    
Accumulated time: pickout 1.3721    decision 18.5718    set_bounds 18.1252    solve 76.4522    add 16.5252    
Current (lb-rhs): -0.08863472938537598
219126 domains visited
Cumulative time: 155.90208101272583

BaB round 24
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2325] [/input-12, 5324] [/input-12, 2349] [/input-12, 5324] [/input-12, 7137] [/input-16, 247] [/input-12, 2596] [/input-16, 247] [/input-12, 2450] [/input-12, 2589] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08666911721229553
10 lb beta sum: 0.27109724283218384, worst -0.15725077688694
Time: prepare 0.8027    bound 4.9034    transfer 0.5025    finalize 2.8512    func 9.2804    
Accumulated time: func 85.8709    prepare 7.2917    bound 47.2947    transfer 4.5158    finalize 24.7267    
all_split False
======================Cut inference begins======================
max lb tensor(0.74551404) min lb tensor(-0.08665630)
Number of Verified Splits: 4635 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 123.
#cuts 1-3: 15
#cuts 4-6: 80
#cuts 7-9: 27
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 2.1767454147338867 
BICCOS Cumulative time: 24.68027400970459
Preprocessing time: 1.1084272861480713 Inference time: 0.8996236324310303 Add cuts time: 0.16350173950195312 Cut analysis time: 0.005192756652832031
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08863 (19), -0.08831 (19), -0.08830 (19), -0.08818 (19), -0.08800 (19), -0.08777 (19), -0.08775 (20), -0.08740 (19), -0.08733 (20), -0.08732 (18), -0.08730 (19), -0.08705 (18), -0.08702 (19), -0.08700 (18), -0.08698 (20), -0.08684 (19), -0.08678 (19), -0.08666 (19), -0.08659 (20), -0.08659 (19), 
Length of domains: 96495
Time: pickout 0.0827    decision 2.9617    set_bounds 1.6991    solve 10.4873    add 1.0512    
Accumulated time: pickout 1.4548    decision 21.5335    set_bounds 19.8243    solve 86.9395    add 17.5763    
Current (lb-rhs): -0.08862721920013428
247259 domains visited
Cumulative time: 174.614981174469

BaB round 25
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 740] [/input-12, 7191] [/input-12, 7137] [/input-12, 6251] [/input-16, 247] [/input-12, 5509] [/input-16, 95] [/input-12, 2323] [/input-16, 95] [/input-12, 4402] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08699598908424377
10 lb beta sum: 0.25192034244537354, worst -0.1649017333984375
Time: prepare 0.7930    bound 4.9090    transfer 0.5001    finalize 2.9008    func 9.3253    
Accumulated time: func 95.1962    prepare 8.0852    bound 52.2037    transfer 5.0159    finalize 27.6274    
all_split False
======================Cut inference begins======================
max lb tensor(0.76142907) min lb tensor(-0.08698416)
Number of Verified Splits: 4998 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 132.
#cuts 1-3: 17
#cuts 4-6: 80
#cuts 7-9: 34
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 2.3067188262939453 
BICCOS Cumulative time: 26.986992835998535
Preprocessing time: 1.1513702869415283 Inference time: 0.9660496711730957 Add cuts time: 0.18370866775512695 Cut analysis time: 0.005590200424194336
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08863 (19), -0.08831 (19), -0.08830 (19), -0.08800 (19), -0.08777 (19), -0.08740 (19), -0.08733 (20), -0.08730 (19), -0.08705 (18), -0.08702 (19), -0.08698 (19), -0.08698 (20), -0.08684 (19), -0.08666 (19), -0.08659 (20), -0.08642 (20), -0.08633 (19), -0.08622 (19), -0.08614 (20), -0.08611 (19), 
Length of domains: 107881
Time: pickout 0.0790    decision 2.1693    set_bounds 3.0682    solve 9.3400    add 1.0404    
Accumulated time: pickout 1.5338    decision 23.7028    set_bounds 22.8925    solve 96.2795    add 18.6168    
Current (lb-rhs): -0.08862721920013428
275029 domains visited
Cumulative time: 192.91407370567322

BaB round 26
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 95] [/input-12, 4467] [/input-12, 1436] [/input-12, 4467] [/input-12, 7137] [/input-16, 247] [/input-12, 865] [/input-16, 95] [/input-12, 7191] [/input-16, 95] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08705395460128784
10 lb beta sum: 0.24066948890686035, worst -0.1638280749320984
Time: prepare 0.8008    bound 4.9532    transfer 0.5032    finalize 2.9363    func 9.4179    
Accumulated time: func 104.6141    prepare 8.8866    bound 57.1569    transfer 5.5190    finalize 30.5637    
all_split False
======================Cut inference begins======================
max lb tensor(0.74284732) min lb tensor(-0.08703572)
Number of Verified Splits: 5138 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 151.
#cuts 1-3: 18
#cuts 4-6: 86
#cuts 7-9: 46
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 3.88138484954834 
BICCOS Cumulative time: 30.868377685546875
Preprocessing time: 2.6035406589508057 Inference time: 0.9932429790496826 Add cuts time: 0.2769434452056885 Cut analysis time: 0.007657766342163086
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08831 (19), -0.08800 (19), -0.08777 (19), -0.08733 (20), -0.08704 (19), -0.08702 (19), -0.08698 (19), -0.08698 (20), -0.08684 (19), -0.08666 (19), -0.08659 (20), -0.08657 (20), -0.08642 (20), -0.08633 (19), -0.08625 (20), -0.08622 (19), -0.08614 (20), -0.08602 (19), -0.08581 (20), -0.08577 (19), 
Length of domains: 119127
Time: pickout 0.0776    decision 3.1465    set_bounds 1.7631    solve 9.4343    add 1.0091    
Accumulated time: pickout 1.6114    decision 26.8492    set_bounds 24.6556    solve 105.7138    add 19.6258    
Current (lb-rhs): -0.088308185338974
302659 domains visited
Time out!!!!!!!!
Result: unknown in 215.5415 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 22, vnnlib ID: 22 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-67.50154114, -71.41767120, -69.80590057, -71.09591675, -69.40167236,
         -71.44901276, -72.40334320, -71.30339050, -63.95865250, -71.11081696]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1219]; unstable size 1219; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 496, 1, 1219] with unstable size 495 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 35, 1, 1219] with unstable size 34 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1219] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [495]; unstable size 495; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 35, 1, 495] with unstable size 34 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 495] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [34]; unstable size 34; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 34] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.40819240, 5.78129864, 4.18495178, 5.55772781, 3.79971075, 5.81590557,
         6.94004726, 5.31684971, 5.73021698]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0785 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 23, vnnlib ID: 23 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-38.52017593, -41.60749054, -39.25333405, -36.18737793, -39.23794174,
         -35.75180054, -39.68068314, -38.51292419, -38.45456314, -40.87796783]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1077]; unstable size 1077; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 510, 1, 1077] with unstable size 509 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 30, 1, 1077] with unstable size 29 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1077] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [509]; unstable size 509; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 30, 1, 509] with unstable size 29 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 509] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [29]; unstable size 29; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.57749653, 4.16660023, 2.25594735, 0.28971466, 2.22185016, 3.13056421,
         1.46274066, 1.01373434, 3.33348417]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0413 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 24, vnnlib ID: 24 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-55.75384521, -54.72256470, -58.07870483, -60.36860275, -58.70055389,
         -60.85055923, -58.80043411, -60.27360535, -57.43202591, -56.74291229]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1632]; unstable size 1632; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 82, 1, 1632] with unstable size 81 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 33, 1, 1632] with unstable size 32 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1632] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [615]; unstable size 615; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 33, 1, 615] with unstable size 32 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 615] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [32]; unstable size 32; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 32] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.95113230,  0.90017319,  3.33239174,  1.39400673,  3.76957941,
          1.64412212,  3.17498064,  0.74224758,  0.68144298]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-55.75384521, -54.72256470, -58.07870483, -60.36860275, -58.70055389,
         -60.85055923, -58.80043411, -60.27360535, -57.43202591, -56.74291229]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.44it/s]100%|██████████| 1/1 [00:00<00:00,  7.43it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-53.68377304, -53.41405869, -55.98672104, -58.38219070, -56.59843063,
          -58.86198425, -56.81354141, -58.27304840, -55.46508408, -55.18228149]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.26971436]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1378 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 15.53147029876709
alpha/beta optimization time: 1.513300895690918
initial alpha-crown bounds: tensor([[-0.86111212,  0.99835873,  3.42765045,  1.50231266,  3.86481476,
          1.75080204,  3.27866459,  0.83740616,  0.73257291]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.861112117767334
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.30467581748962
Verifying property 0 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.86111212]], device='cuda:0') need to verify.
Model prediction is: tensor([-55.75384521, -54.72256470, -58.07870483, -60.36860275, -58.70055389,
        -60.85055923, -58.80043411, -60.27360535, -57.43202591, -56.74291229],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.86111212]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1632
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 606
Node /39 input 0: size torch.Size([250]) unstable 32
-----------------
# of unstable neurons: 2270
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.0001068115234375
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8610296249389648
10 lb beta sum: 0.0, worst -0.8610343933105469
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0730    transfer 0.0001    finalize 0.0002    func 0.0736    
Accumulated time: func 0.0736    prepare 0.0002    bound 0.0730    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 16] 
split level 1: [/input-16, 186] 
split level 2: [/input-16, 95] 
split level 3: [/input-16, 145] 
split level 4: [/input-16, 18] 
split level 5: [/input-16, 13] 
split level 6: [/input-16, 58] 
split level 7: [/input-16, 73] 
split level 8: [/input-16, 217] 
split level 9: [/input-16, 46] 
split level 10: [/input-16, 5] 
split level 11: [/input-16, 99] 
split level 12: [/input-12, 1964] 
split level 13: [/input-12, 805] 
split level 14: [/input-16, 24] 
split level 15: [/input-16, 23] 
split level 16: [/input-16, 215] 
split level 17: [/input-12, 812] 
split level 18: [/input-12, 546] 
split level 19: [/input-12, 547] 
split level 20: [/input-16, 7] 
split level 21: [/input-12, 364] 
split level 22: [/input-12, 1774] 
split level 23: [/input-12, 797] 
split level 24: [/input-12, 1963] 
split level 25: [/input-12, 486] 
split level 26: [/input-12, 1251] 
split level 27: [/input-12, 3492] 
split level 28: [/input-16, 72] 
split level 29: [/input-12, 612] 
split level 30: [/input-12, 4434] 
split level 31: [/input-12, 798] 
split level 32: [/input-12, 2921] 
split level 33: [/input-12, 6251] 
split level 34: [/input-12, 228] 
split level 35: [/input-12, 3298] 
split level 36: [/input-12, 7330] 
split level 37: [/input-12, 3349] 
split level 38: [/input-12, 8033] 
split level 39: [/input-12, 2033] 
split level 40: [/input-12, 2668] 
split level 41: [/input-12, 2034] 
split level 42: [/input-12, 5273] 
split level 43: [/input-12, 2653] 
split level 44: [/input-12, 2610] 
split level 45: [/input-12, 1178] 
split level 46: [/input-12, 3864] 
split level 47: [/input-12, 4402] 
split level 48: [/input-12, 1695] 
split level 49: [/input-12, 477] 
split level 50: [/input-4, 8134] 
split level 51: [/input-12, 7331] 
split level 52: [/input-12, 4410] 
split level 53: [/input-12, 7000] 
split level 54: [/input-12, 7332] 
split level 55: [/input-12, 346] 
split level 56: [/input-12, 5341] 
split level 57: [/input-12, 2146] 
split level 58: [/input-4, 5061] 
split level 59: [/input-12, 3557] 
split level 60: [/input-12, 5340] 
split level 61: [/input-12, 5528] 
split level 62: [/input-4, 8115] 
split level 63: [/input-12, 3862] 
split level 64: [/input-12, 6252] 
split level 65: [/input-12, 1765] 
split level 66: [/input-12, 3867] 
split level 67: [/input-12, 2145] 
split level 68: [/input-4, 4505] 
split level 69: [/input-12, 6262] 
split level 70: [/input-12, 2603] 
split level 71: [/input-4, 6309] 
split level 72: [/input-12, 2593] 
split level 73: [/input-4, 8101] 
split level 74: [/input-4, 4503] 
split level 75: [/input-12, 3942] 
split level 76: [/input-12, 7013] 
split level 77: [/input-12, 2661] 
split level 78: [/input-4, 2711] 
split level 79: [/input-4, 1190] 
split level 80: [/input-12, 413] 
split level 81: [/input-12, 5525] 
split level 82: [/input-12, 5524] 
split level 83: [/input-4, 8118] 
split level 84: [/input-12, 2042] 
split level 85: [/input-12, 2021] 
split level 86: [/input-12, 5520] 
split level 87: [/input-4, 6326] 
split level 88: [/input-12, 1067] 
split level 89: [/input-12, 3556] 
split level 90: [/input-12, 2027] 
split level 91: [/input-4, 4790] 
split level 92: [/input-12, 6244] 
split level 93: [/input-4, 5002] 
split level 94: [/input-12, 478] 
split level 95: [/input-4, 1716] 
split level 96: [/input-12, 2043] 
split level 97: [/input-4, 5062] 
split level 98: [/input-12, 2669] 
split level 99: [/input-12, 3965] 
split level 100: [/input-12, 3947] 
split level 101: [/input-12, 2604] 
split level 102: [/input-4, 2755] 
split level 103: [/input-4, 1734] 
split level 104: [/input-12, 3502] 
split level 105: [/input-12, 5278] 
split level 106: [/input-12, 3462] 
split level 107: [/input-12, 2032] 
split level 108: [/input-12, 5279] 
split level 109: [/input-12, 6742] 
split level 110: [/input-4, 4805] 
split level 111: [/input-4, 4789] 
split level 112: [/input-12, 3876] 
split level 113: [/input-12, 2907] 
split level 114: [/input-4, 1221] 
split level 115: [/input-12, 7837] 
split level 116: [/input-12, 3552] 
split level 117: [/input-12, 4371] 
split level 118: [/input-12, 5684] 
split level 119: [/input-12, 3796] 
split level 120: [/input-12, 6779] 
split level 121: [/input-12, 5532] 
split level 122: [/input-12, 2933] 
split level 123: [/input-12, 2025] 
split level 124: [/input-4, 1675] 
split level 125: [/input-4, 1163] 
split level 126: [/input-4, 1718] 
split level 127: [/input-4, 424] 
split level 128: [/input-12, 6780] 
split level 129: [/input-4, 4549] 
split level 130: [/input-12, 3870] 
split level 131: [/input-4, 3491] 
split level 132: [/input-12, 3146] 
split level 133: [/input-12, 5677] 
split level 134: [/input-4, 2754] 
split level 135: [/input-12, 5358] 
split level 136: [/input-4, 6342] 
split level 137: [/input-12, 7891] 
split level 138: [/input-12, 2014] 
split level 139: [/input-12, 3153] 
split level 140: [/input-12, 1065] 
split level 141: [/input-4, 2681] 
split level 142: [/input-12, 4181] 
split level 143: [/input-12, 2898] 
split level 144: [/input-12, 3962] 
split level 145: [/input-4, 6346] 
split level 146: [/input-12, 2550] 
split level 147: [/input-4, 1244] 
split level 148: [/input-12, 2654] 
split level 149: [/input-12, 1469] 
split level 150: [/input-12, 1470] 
split level 151: [/input-12, 2461] 
split level 152: [/input-12, 3964] 
split level 153: [/input-12, 2013] 
split level 154: [/input-4, 3749] 
split level 155: [/input-4, 3528] 
split level 156: [/input-12, 3789] 
split level 157: [/input-12, 7934] 
split level 158: [/input-4, 4264] 
split level 159: [/input-12, 2044] 
split level 160: [/input-12, 2597] 
split level 161: [/input-4, 2935] 
split level 162: [/input-12, 4115] 
split level 163: [/input-12, 5350] 
split level 164: [/input-4, 1733] 
split level 165: [/input-4, 3275] 
split level 166: [/input-12, 2041] 
split level 167: [/input-12, 1246] 
split level 168: [/input-4, 1242] 
split level 169: [/input-12, 3474] 
split level 170: [/input-4, 8088] 
split level 171: [/input-4, 6835] 
split level 172: [/input-4, 1243] 
split level 173: [/input-12, 4584] 
split level 174: [/input-4, 6593] 
split level 175: [/input-12, 2650] 
split level 176: [/input-4, 6039] 
split level 177: [/input-12, 3345] 
split level 178: [/input-16, 115] 
split level 179: [/input-4, 4531] 
split level 180: [/input-12, 5803] 
split level 181: [/input-12, 479] 
split level 182: [/input-4, 7873] 
split level 183: [/input-4, 1715] 
split level 184: [/input-12, 3946] 
split level 185: [/input-4, 3276] 
split level 186: [/input-12, 1074] 
split level 187: [/input-12, 1468] 
split level 188: [/input-12, 7556] 
split level 189: [/input-4, 2756] 
split level 190: [/input-12, 3871] 
split level 191: [/input-12, 3963] 
split level 192: [/input-4, 2753] 
split level 193: [/input-12, 3480] 
split level 194: [/input-12, 458] 
split level 195: [/input-12, 7132] 
split level 196: [/input-4, 3045] 
split level 197: [/input-4, 3011] 
split level 198: [/input-4, 4286] 
split level 199: [/input-4, 8149] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8605561256408691
10 lb beta sum: 0.0, worst -0.8605546951293945
Time: prepare 0.0116    bound 0.1305    transfer 0.0040    finalize 0.0091    func 0.1578    
Accumulated time: func 0.2314    prepare 0.0222    bound 0.2035    transfer 0.0041    finalize 0.0094    
all_split False
======================Cut inference begins======================
max lb tensor(0.06688643) min lb tensor(-0.86054754)
Number of Verified Splits: 1 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.010948657989501953 
BICCOS Cumulative time: 0.010948657989501953
Preprocessing time: 0.010241508483886719 Inference time: 9.059906005859375e-05 Add cuts time: 6.389617919921875e-05 Cut analysis time: 0.0005526542663574219
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.83934 (1), -0.83864 (1), -0.83858 (1), -0.83738 (1), -0.83660 (1), -0.83644 (1), -0.83637 (1), -0.83632 (1), -0.83513 (1), -0.83394 (1), -0.83225 (1), -0.83217 (1), -0.82972 (1), -0.82869 (1), -0.82867 (1), -0.82802 (1), -0.82781 (1), -0.82755 (1), -0.82538 (1), -0.82376 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7715    set_bounds 0.0093    solve 0.1579    add 0.0784    
Accumulated time: pickout 0.0003    decision 0.7715    set_bounds 0.0093    solve 0.1579    add 0.0784    
Current (lb-rhs): -0.8393397331237793
50 domains visited
Cumulative time: 1.1092147827148438

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 16] [/input-16, 95] [/input-16, 16] [/input-16, 16] [/input-16, 16] [/input-16, 16] [/input-16, 16] [/input-16, 16] [/input-16, 16] [/input-16, 16] 
split level 1: [/input-16, 95] [/input-16, 145] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] 
split level 2: [/input-16, 145] [/input-16, 18] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 18] [/input-16, 145] [/input-16, 145] [/input-16, 145] 
split level 3: [/input-16, 18] [/input-16, 217] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 217] [/input-16, 18] [/input-16, 18] [/input-16, 18] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8066697120666504
10 lb beta sum: 0.19533458352088928, worst -0.8002604246139526
Time: prepare 0.0071    bound 0.1482    transfer 0.0029    finalize 0.0084    func 0.1693    
Accumulated time: func 0.4007    prepare 0.0295    bound 0.3517    transfer 0.0069    finalize 0.0177    
all_split False
======================Cut inference begins======================
max lb tensor(0.13339853) min lb tensor(-0.80012041)
Number of Verified Splits: 5 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.012768745422363281 
BICCOS Cumulative time: 0.023717403411865234
Preprocessing time: 0.012103080749511719 Inference time: 0.00026106834411621094 Add cuts time: 0.00010156631469726562 Cut analysis time: 0.00030303001403808594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34397 (2), -0.34384 (2), -0.34361 (2), -0.34138 (2), -0.33855 (2), -0.33789 (2), -0.33631 (2), -0.33413 (2), -0.32912 (2), -0.32787 (2), -0.32581 (2), -0.31659 (2), -0.31561 (2), -0.31337 (2), -0.30401 (2), -0.29690 (2), -0.29451 (2), -0.29382 (2), -0.29250 (2), -0.29021 (2), 
Length of domains: 50
Time: pickout 0.0008    decision 0.0246    set_bounds 0.0128    solve 0.1693    add 0.0895    
Accumulated time: pickout 0.0011    decision 0.7961    set_bounds 0.0221    solve 0.3272    add 0.1680    
Current (lb-rhs): -0.3439684212207794
100 domains visited
Cumulative time: 1.4192531108856201

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 16] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 16] [/input-16, 16] [/input-16, 16] [/input-16, 16] 
split level 1: [/input-16, 95] [/input-16, 145] [/input-16, 145] [/input-16, 18] [/input-16, 18] [/input-16, 145] [/input-16, 95] [/input-16, 145] [/input-16, 95] [/input-16, 145] 
split level 2: [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 217] [/input-16, 217] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 18] 
split level 3: [/input-12, 1963] [/input-16, 217] [/input-16, 217] [/input-16, 46] [/input-16, 46] [/input-16, 217] [/input-16, 217] [/input-16, 217] [/input-16, 217] [/input-16, 217] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3262190818786621
10 lb beta sum: 0.28714731335639954, worst -0.3212454319000244
Time: prepare 0.0062    bound 0.1559    transfer 0.0032    finalize 0.0079    func 0.1765    
Accumulated time: func 0.5772    prepare 0.0360    bound 0.5076    transfer 0.0101    finalize 0.0257    
all_split False
======================Cut inference begins======================
max lb tensor(0.45080280) min lb tensor(-0.29816225)
Number of Verified Splits: 111 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 12
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.01986980438232422 
BICCOS Cumulative time: 0.04358720779418945
Preprocessing time: 0.011709213256835938 Inference time: 0.005860090255737305 Add cuts time: 0.0017995834350585938 Cut analysis time: 0.0005009174346923828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11444 (3), -0.11437 (3), -0.11403 (3), -0.11087 (3), -0.11053 (3), -0.11052 (3), -0.10663 (3), -0.10632 (3), -0.10321 (3), -0.10310 (3), -0.10306 (3), -0.10093 (3), -0.10070 (3), -0.09935 (3), -0.09889 (3), -0.09811 (3), -0.09698 (3), -0.09562 (3), -0.09331 (3), -0.09192 (3), 
Length of domains: 50
Time: pickout 0.0007    decision 0.0248    set_bounds 0.0154    solve 0.1766    add 0.1001    
Accumulated time: pickout 0.0018    decision 0.8210    set_bounds 0.0375    solve 0.5038    add 0.2681    
Current (lb-rhs): -0.11443823575973511
150 domains visited
Cumulative time: 1.7570066452026367

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 16] [/input-16, 16] [/input-16, 95] [/input-16, 16] [/input-16, 16] [/input-16, 16] [/input-16, 95] [/input-16, 145] [/input-16, 95] [/input-16, 16] 
split level 1: [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 18] [/input-16, 18] [/input-16, 145] 
split level 2: [/input-16, 217] [/input-16, 217] [/input-16, 217] [/input-16, 217] [/input-16, 217] [/input-16, 217] [/input-16, 217] [/input-16, 217] [/input-16, 217] [/input-16, 217] 
split level 3: [/input-16, 46] [/input-16, 46] [/input-16, 46] [/input-16, 46] [/input-12, 364] [/input-12, 364] [/input-16, 46] [/input-16, 46] [/input-12, 1963] [/input-12, 364] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.24192047119140625
10 lb beta sum: 0.6383659243583679, worst -0.16554376482963562
Time: prepare 0.0060    bound 0.1489    transfer 0.0053    finalize 0.0085    func 0.1720    
Accumulated time: func 0.7491    prepare 0.0423    bound 0.6565    transfer 0.0155    finalize 0.0342    
all_split False
======================Cut inference begins======================
max lb tensor(0.40021539) min lb tensor(-0.08238566)
Number of Verified Splits: 330 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 11
#cuts 4-6: 9
#cuts >= 20: 0
BICCOS time: 0.0379176139831543 
BICCOS Cumulative time: 0.08150482177734375
Preprocessing time: 0.011459112167358398 Inference time: 0.017487287521362305 Add cuts time: 0.008304595947265625 Cut analysis time: 0.0006666183471679688
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0013    decision 0.0246    set_bounds 0.0151    solve 0.1721    add 0.0230    
Accumulated time: pickout 0.0030    decision 0.8456    set_bounds 0.0526    solve 0.6759    add 0.2911    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([58]), tensor([-1.]), tensor([0]), tensor([-1.26703856e+34]), tensor([0]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([58, 95, 18, 16]), tensor([ 1., -1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([1.33922002e-08, 1.86901063e-01, 2.34722659e-01, 3.61156583e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([58, 95, 18, 16]), tensor([ 1., -1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([1.33922002e-08, 1.86901063e-01, 2.34722659e-01, 4.59991992e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([58, 95, 18, 16]), tensor([ 1., -1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([1.33922002e-08, 1.86901063e-01, 2.14859545e-01, 3.44926953e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([58, 95, 18, 16]), tensor([ 1., -1.,  1.,  1.]), tensor([0, 0, 0, 0]), tensor([1.33922002e-08, 1.86901063e-01, 2.14859545e-01, 5.21146506e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([58, 95, 18, 16]), tensor([ 1.,  1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([1.33922002e-08, 1.38398632e-01, 2.38257900e-01, 3.48860890e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([58, 95, 18, 16]), tensor([ 1.,  1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([1.33922002e-08, 1.38398632e-01, 2.38257900e-01, 5.32861203e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([58, 95, 18, 16]), tensor([ 1.,  1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([1.33922002e-08, 1.38398632e-01, 2.18592227e-01, 3.35151315e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([58, 95, 18, 16]), tensor([1., 1., 1., 1.]), tensor([0, 0, 0, 0]), tensor([1.33922002e-08, 1.38398632e-01, 2.18592227e-01, 5.44023514e-02]), tensor([0, 1, 2, 3]))}
Shallow branching resets to n domains:  9
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8527789115905762
10 lb beta sum: 0.9548839926719666, worst -0.8431447148323059
Time: prepare 0.0004    bound 0.1459    transfer 0.0002    finalize 0.0004    func 0.1470    
Accumulated time: func 0.8962    prepare 0.0427    bound 0.8024    transfer 0.0157    finalize 0.0346    
After pruning, left:  1

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 16] 
split level 1: [/input-16, 95] 
split level 2: [/input-16, 145] 
split level 3: [/input-16, 18] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6951612234115601, worst -0.5054851770401001
10 lb beta sum: 0.8130737543106079, worst -0.5043336153030396
Time: prepare 0.0009    bound 0.1492    transfer 0.0002    finalize 0.0005    func 0.1510    
Accumulated time: func 1.0471    prepare 0.0438    bound 0.9516    transfer 0.0159    finalize 0.0351    
all_split False
======================Cut inference begins======================
max lb tensor(0.29185784) min lb tensor(-0.50369751)
Number of Verified Splits: 5 of 16
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.6951612234115601, worst -0.2458859384059906

all verified at 4th iter
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 11
#cuts 4-6: 9
#cuts >= 20: 0
BICCOS time: 0.04126119613647461 
BICCOS Cumulative time: 0.12276601791381836
Preprocessing time: 0.000827789306640625 Inference time: 0.039209604263305664 Add cuts time: 0.0005810260772705078 Cut analysis time: 0.0006427764892578125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.50370 (4), -0.45345 (4), -0.44966 (4), -0.40372 (4), -0.23467 (4), -0.18932 (4), -0.18545 (4), -0.16307 (4), -0.14356 (4), -0.09998 (4), -0.06009 (4), 
Length of domains: 11
Time: pickout 0.0004    decision 0.0167    set_bounds 0.0013    solve 0.1510    add 0.0068    
Accumulated time: pickout 0.0034    decision 0.8623    set_bounds 0.0539    solve 0.8269    add 0.2979    
Current (lb-rhs): -0.5036975145339966
161 domains visited
Cumulative time: 2.4200100898742676

BaB round 2
batch: 11
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 217] [/input-16, 217] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 217] [/input-16, 217] [/input-16, 73] [/input-16, 73] [/input-16, 73] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8444576263427734, worst -0.4909850060939789
10 lb beta sum: 0.8476746678352356, worst -0.49041470885276794
Time: prepare 0.0011    bound 0.1522    transfer 0.0003    finalize 0.0009    func 0.1547    
Accumulated time: func 1.2018    prepare 0.0451    bound 1.1038    transfer 0.0161    finalize 0.0361    
all_split False
======================Cut inference begins======================
max lb tensor(0.39924613) min lb tensor(-0.49018297)
Number of Verified Splits: 3 of 22
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.9993261098861694, worst -0.23489952087402344
10 lb beta sum: 1.1969199180603027, worst -0.1368265151977539
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 11
#cuts 4-6: 9
#cuts >= 20: 0
BICCOS time: 0.15300679206848145 
BICCOS Cumulative time: 0.2757728099822998
Preprocessing time: 0.0009875297546386719 Inference time: 0.1509244441986084 Add cuts time: 0.0004799365997314453 Cut analysis time: 0.0006148815155029297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.49018 (5), -0.43917 (5), -0.43601 (5), -0.38921 (5), -0.24274 (5), -0.20028 (5), -0.19502 (5), -0.18003 (5), -0.16862 (5), -0.15952 (5), -0.15052 (5), -0.14702 (5), -0.13718 (5), -0.13115 (5), -0.11517 (5), -0.10576 (5), -0.09703 (5), -0.08308 (5), -0.05532 (5), 
Length of domains: 19
Time: pickout 0.0005    decision 0.0169    set_bounds 0.0012    solve 0.1547    add 0.0015    
Accumulated time: pickout 0.0039    decision 0.8792    set_bounds 0.0551    solve 0.9816    add 0.2995    
Current (lb-rhs): -0.4901829659938812
180 domains visited
Cumulative time: 2.748037815093994

BaB round 3
batch: 19
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 73] [/input-16, 73] [/input-16, 13] [/input-16, 13] [/input-16, 73] [/input-16, 73] [/input-16, 217] [/input-16, 13] [/input-16, 73] [/input-16, 73] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8200047016143799, worst -0.4803400933742523
10 lb beta sum: 0.8609448671340942, worst -0.48005494475364685
Time: prepare 0.0018    bound 0.1452    transfer 0.0004    finalize 0.0013    func 0.1489    
Accumulated time: func 1.3507    prepare 0.0470    bound 1.2490    transfer 0.0165    finalize 0.0373    
all_split False
======================Cut inference begins======================
max lb tensor(0.44856343) min lb tensor(-0.47989568)
Number of Verified Splits: 17 of 38
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.8208871483802795, worst -0.505160927772522
10 lb beta sum: 1.1107102632522583, worst -0.11296391487121582
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 11
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.15756845474243164 
BICCOS Cumulative time: 0.43334126472473145
Preprocessing time: 0.0014979839324951172 Inference time: 0.1544795036315918 Add cuts time: 0.0009036064147949219 Cut analysis time: 0.0006873607635498047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.47990 (6), -0.43835 (6), -0.42529 (6), -0.38791 (6), -0.21895 (6), -0.18838 (6), -0.16109 (6), -0.15701 (6), -0.15517 (6), -0.14934 (6), -0.14620 (6), -0.14619 (6), -0.14173 (6), -0.12514 (6), -0.11986 (6), -0.10808 (6), -0.09982 (6), -0.09468 (6), -0.07936 (6), -0.05357 (6), 
Length of domains: 21
Time: pickout 0.0005    decision 0.0144    set_bounds 0.0019    solve 0.1490    add 0.0014    
Accumulated time: pickout 0.0044    decision 0.8936    set_bounds 0.0571    solve 1.1306    add 0.3009    
Current (lb-rhs): -0.479895681142807
201 domains visited
Cumulative time: 3.07316517829895

BaB round 4
batch: 21
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 217] [/input-16, 217] [/input-16, 13] [/input-16, 217] [/input-16, 217] [/input-16, 217] [/input-16, 217] [/input-16, 217] [/input-16, 217] [/input-16, 217] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4557685852050781
10 lb beta sum: 0.6433283090591431, worst -0.44572052359580994
Time: prepare 0.0009    bound 0.1504    transfer 0.0004    finalize 0.0014    func 0.1535    
Accumulated time: func 1.5041    prepare 0.0481    bound 1.3994    transfer 0.0169    finalize 0.0387    
all_split False
======================Cut inference begins======================
max lb tensor(0.38618428) min lb tensor(-0.44561732)
Number of Verified Splits: 13 of 42
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.49118518829345703
10 lb beta sum: 0.8919234871864319, worst -0.1037459671497345
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 11
#cuts 4-6: 10
#cuts >= 20: 0
BICCOS time: 0.16040539741516113 
BICCOS Cumulative time: 0.5937466621398926
Preprocessing time: 0.0015854835510253906 Inference time: 0.15735125541687012 Add cuts time: 0.0008375644683837891 Cut analysis time: 0.0006310939788818359
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.44562 (7), -0.43641 (7), -0.40312 (7), -0.39656 (7), -0.38864 (7), -0.38646 (7), -0.35107 (7), -0.34929 (7), -0.18326 (7), -0.17671 (7), -0.17152 (7), -0.15384 (7), -0.14306 (7), -0.14137 (7), -0.13961 (7), -0.13711 (7), -0.12453 (7), -0.12155 (7), -0.11156 (7), -0.11155 (7), 
Length of domains: 29
Time: pickout 0.0005    decision 0.0165    set_bounds 0.0020    solve 0.1535    add 0.0016    
Accumulated time: pickout 0.0049    decision 0.9101    set_bounds 0.0591    solve 1.2841    add 0.3025    
Current (lb-rhs): -0.44561731815338135
230 domains visited
Cumulative time: 3.4079644680023193

BaB round 5
batch: 29
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 46] [/input-16, 46] [/input-16, 46] [/input-16, 46] [/input-16, 46] [/input-16, 46] [/input-16, 46] [/input-16, 46] [/input-16, 46] [/input-16, 46] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4350275993347168
10 lb beta sum: 0.6308584809303284, worst -0.42506393790245056
Time: prepare 0.0012    bound 0.1515    transfer 0.0011    finalize 0.0017    func 0.1559    
Accumulated time: func 1.6600    prepare 0.0494    bound 1.5509    transfer 0.0180    finalize 0.0404    
all_split False
======================Cut inference begins======================
max lb tensor(0.08052114) min lb tensor(-0.42499316)
Number of Verified Splits: 9 of 58
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3617591857910156
10 lb beta sum: 0.9849814176559448, worst -0.08629518747329712
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 11
#cuts 4-6: 12
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.15422582626342773 
BICCOS Cumulative time: 0.7479724884033203
Preprocessing time: 0.0021266937255859375 Inference time: 0.15047240257263184 Add cuts time: 0.0008108615875244141 Cut analysis time: 0.0008158683776855469
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.42499 (8), -0.41641 (8), -0.38286 (8), -0.37676 (8), -0.36820 (8), -0.36745 (8), -0.36614 (8), -0.35024 (8), -0.33057 (8), -0.32877 (8), -0.32473 (8), -0.31475 (8), -0.31200 (8), -0.30479 (8), -0.27472 (8), -0.26754 (8), -0.15761 (8), -0.15250 (8), -0.14745 (8), -0.12890 (8), 
Length of domains: 49
Time: pickout 0.0006    decision 0.0173    set_bounds 0.0030    solve 0.1559    add 0.0022    
Accumulated time: pickout 0.0054    decision 0.9274    set_bounds 0.0621    solve 1.4400    add 0.3046    
Current (lb-rhs): -0.4249931573867798
279 domains visited
Cumulative time: 3.741441011428833

BaB round 6
batch: 49
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.42331457138061523
10 lb beta sum: 0.611370861530304, worst -0.4133670926094055
Time: prepare 0.0018    bound 0.1448    transfer 0.0008    finalize 0.0019    func 0.1501    
Accumulated time: func 1.8101    prepare 0.0514    bound 1.6957    transfer 0.0188    finalize 0.0423    
all_split False
======================Cut inference begins======================
max lb tensor(0.44397199) min lb tensor(-0.41329587)
Number of Verified Splits: 33 of 98
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5193939208984375
10 lb beta sum: 1.0074905157089233, worst -0.24464935064315796
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 11
#cuts 4-6: 14
#cuts 7-9: 5
#cuts >= 20: 0
BICCOS time: 0.16968035697937012 
BICCOS Cumulative time: 0.9176528453826904
Preprocessing time: 0.0031359195709228516 Inference time: 0.16396665573120117 Add cuts time: 0.0015020370483398438 Cut analysis time: 0.00107574462890625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.41330 (9), -0.40418 (9), -0.37143 (9), -0.36511 (9), -0.35503 (9), -0.35489 (9), -0.35286 (9), -0.33639 (9), -0.31785 (9), -0.31583 (9), -0.31225 (9), -0.30034 (9), -0.29860 (9), -0.29060 (9), -0.28023 (9), -0.27493 (9), -0.26229 (9), -0.25388 (9), -0.25249 (9), -0.25046 (9), 
Length of domains: 65
Time: pickout 0.0006    decision 0.0157    set_bounds 0.0044    solve 0.1501    add 0.0023    
Accumulated time: pickout 0.0061    decision 0.9431    set_bounds 0.0665    solve 1.5901    add 0.3069    
Current (lb-rhs): -0.4132958650588989
344 domains visited
Cumulative time: 4.0846288204193115

BaB round 7
batch: 65
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 546] [/input-12, 546] [/input-12, 546] [/input-12, 546] [/input-12, 1964] [/input-12, 1964] [/input-12, 1964] [/input-12, 546] [/input-16, 23] [/input-12, 546] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.41112470626831055
10 lb beta sum: 0.6018751263618469, worst -0.4012831449508667
Time: prepare 0.0023    bound 0.1517    transfer 0.0010    finalize 0.0033    func 0.1593    
Accumulated time: func 1.9694    prepare 0.0539    bound 1.8475    transfer 0.0198    finalize 0.0456    
all_split False
======================Cut inference begins======================
max lb tensor(0.15032667) min lb tensor(-0.40127388)
Number of Verified Splits: 32 of 130
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 14
#cuts 4-6: 17
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.010300397872924805 
BICCOS Cumulative time: 0.9279532432556152
Preprocessing time: 0.004127025604248047 Inference time: 0.003260374069213867 Add cuts time: 0.0018429756164550781 Cut analysis time: 0.0010700225830078125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.40127 (10), -0.39206 (10), -0.35928 (10), -0.35297 (10), -0.34245 (10), -0.34205 (10), -0.33975 (10), -0.32372 (10), -0.32370 (10), -0.31467 (10), -0.30511 (10), -0.30307 (10), -0.29893 (10), -0.28827 (10), -0.28725 (10), -0.28496 (10), -0.28318 (10), -0.28218 (10), -0.27846 (10), -0.27713 (10), 
Length of domains: 98
Time: pickout 0.0007    decision 0.0186    set_bounds 0.0052    solve 0.1594    add 0.0024    
Accumulated time: pickout 0.0068    decision 0.9617    set_bounds 0.0717    solve 1.7495    add 0.3093    
Current (lb-rhs): -0.4012738764286041
442 domains visited
Cumulative time: 4.281691312789917

BaB round 8
batch: 98
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 23] [/input-16, 23] [/input-16, 23] [/input-16, 23] [/input-16, 23] [/input-12, 546] [/input-16, 23] [/input-12, 546] [/input-16, 23] [/input-12, 546] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.40007686614990234
10 lb beta sum: 0.5924249887466431, worst -0.3902481198310852
Time: prepare 0.0040    bound 0.1653    transfer 0.0017    finalize 0.0042    func 0.1766    
Accumulated time: func 2.1460    prepare 0.0580    bound 2.0128    transfer 0.0215    finalize 0.0498    
all_split False
======================Cut inference begins======================
max lb tensor(0.41841784) min lb tensor(-0.39022836)
Number of Verified Splits: 30 of 196
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 41.
#cuts 1-3: 14
#cuts 4-6: 25
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.01263427734375 
BICCOS Cumulative time: 0.9405875205993652
Preprocessing time: 0.006124973297119141 Inference time: 0.003004312515258789 Add cuts time: 0.0022041797637939453 Cut analysis time: 0.001300811767578125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.39023 (11), -0.38110 (11), -0.37419 (11), -0.36503 (11), -0.34815 (11), -0.34174 (11), -0.33456 (11), -0.33363 (11), -0.33004 (11), -0.32899 (11), -0.32732 (11), -0.31734 (11), -0.31104 (11), -0.31087 (11), -0.30387 (11), -0.30210 (11), -0.29818 (11), -0.29450 (11), -0.29211 (11), -0.28916 (11), 
Length of domains: 166
Time: pickout 0.0009    decision 0.0199    set_bounds 0.0064    solve 0.1767    add 0.0035    
Accumulated time: pickout 0.0077    decision 0.9816    set_bounds 0.0781    solve 1.9262    add 0.3128    
Current (lb-rhs): -0.39022836089134216
608 domains visited
Cumulative time: 4.502253770828247

BaB round 9
batch: 166
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 364] [/input-16, 24] [/input-12, 364] [/input-12, 364] [/input-12, 364] [/input-16, 24] [/input-12, 364] [/input-12, 364] [/input-16, 24] [/input-12, 812] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.39047956466674805
10 lb beta sum: 0.5874561667442322, worst -0.38055071234703064
Time: prepare 0.0068    bound 0.1704    transfer 0.0033    finalize 0.0093    func 0.1920    
Accumulated time: func 2.3380    prepare 0.0650    bound 2.1832    transfer 0.0248    finalize 0.0591    
all_split False
======================Cut inference begins======================
max lb tensor(0.46607852) min lb tensor(-0.38050282)
Number of Verified Splits: 49 of 332
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 42.
#cuts 1-3: 9
#cuts 4-6: 32
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.019927024841308594 
BICCOS Cumulative time: 0.9605145454406738
Preprocessing time: 0.010115623474121094 Inference time: 0.005136013031005859 Add cuts time: 0.0031921863555908203 Cut analysis time: 0.0014832019805908203
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.38050 (12), -0.37299 (12), -0.37051 (12), -0.36532 (12), -0.36243 (12), -0.35545 (12), -0.35046 (12), -0.33906 (12), -0.33846 (12), -0.33498 (12), -0.33089 (12), -0.32466 (12), -0.32387 (12), -0.32204 (12), -0.32139 (12), -0.32018 (12), -0.31246 (12), -0.31121 (12), -0.30977 (12), -0.30403 (12), 
Length of domains: 283
Time: pickout 0.0010    decision 0.0249    set_bounds 0.0143    solve 0.1921    add 0.0071    
Accumulated time: pickout 0.0087    decision 1.0065    set_bounds 0.0924    solve 2.1183    add 0.3199    
Current (lb-rhs): -0.3805028200149536
891 domains visited
Cumulative time: 4.762300252914429

BaB round 10
batch: 256
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1963] [/input-12, 547] [/input-12, 1963] [/input-16, 24] [/input-12, 1963] [/input-12, 547] [/input-12, 1963] [/input-16, 24] [/input-16, 24] [/input-12, 812] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.38391971588134766
10 lb beta sum: 0.5791329741477966, worst -0.3740299642086029
Time: prepare 0.0103    bound 0.3585    transfer 0.0046    finalize 0.0105    func 0.3873    
Accumulated time: func 2.7253    prepare 0.0755    bound 2.5416    transfer 0.0294    finalize 0.0696    
all_split False
======================Cut inference begins======================
max lb tensor(0.48856729) min lb tensor(-0.37398922)
Number of Verified Splits: 111 of 512
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 14
#cuts 4-6: 14
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.0330350399017334 
BICCOS Cumulative time: 0.9935495853424072
Preprocessing time: 0.015618085861206055 Inference time: 0.013325214385986328 Add cuts time: 0.0031163692474365234 Cut analysis time: 0.0009753704071044922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.37399 (13), -0.36638 (13), -0.36371 (13), -0.35872 (13), -0.35563 (13), -0.34850 (13), -0.34376 (13), -0.34031 (13), -0.33203 (13), -0.33193 (13), -0.33186 (13), -0.32745 (13), -0.32499 (13), -0.32430 (13), -0.32418 (13), -0.31852 (13), -0.31811 (13), -0.31793 (13), -0.31657 (13), -0.31528 (13), 
Length of domains: 428
Time: pickout 0.0016    decision 0.0290    set_bounds 0.0224    solve 0.3875    add 0.0097    
Accumulated time: pickout 0.0103    decision 1.0356    set_bounds 0.1148    solve 2.5058    add 0.3296    
Current (lb-rhs): -0.3739892244338989
1292 domains visited
current_vram/total_varm: 20.6GB/99.9GB, batch_size increase to 512
Cumulative time: 5.247437953948975

BaB round 11
batch: 428
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 364] [/input-12, 547] [/input-12, 364] [/input-12, 1964] [/input-12, 364] [/input-12, 364] [/input-12, 364] [/input-16, 24] [/input-12, 812] [/input-12, 1963] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.37638282775878906
10 lb beta sum: 1.0442993640899658, worst -0.3665197491645813
Time: prepare 0.0169    bound 0.2116    transfer 0.0062    finalize 0.0273    func 0.2676    
Accumulated time: func 2.9928    prepare 0.0927    bound 2.7532    transfer 0.0356    finalize 0.0969    
all_split False
======================Cut inference begins======================
max lb tensor(0.56143939) min lb tensor(-0.36650380)
Number of Verified Splits: 506 of 856
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 16
#cuts 4-6: 14
#cuts >= 20: 0
BICCOS time: 0.09339165687561035 
BICCOS Cumulative time: 1.0869412422180176
Preprocessing time: 0.024782896041870117 Inference time: 0.05852508544921875 Add cuts time: 0.009215593338012695 Cut analysis time: 0.0008680820465087891
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.36650 (14), -0.35598 (14), -0.35121 (14), -0.34073 (14), -0.33259 (14), -0.32462 (14), -0.31927 (14), -0.31727 (14), -0.31680 (14), -0.31058 (14), -0.31024 (14), -0.30714 (14), -0.30501 (14), -0.30406 (14), -0.30312 (14), -0.29925 (14), -0.29623 (14), -0.28761 (14), -0.28449 (14), -0.27967 (14), 
Length of domains: 350
Time: pickout 0.0147    decision 0.0433    set_bounds 0.0371    solve 0.2685    add 0.0064    
Accumulated time: pickout 0.0250    decision 1.0789    set_bounds 0.1519    solve 2.7742    add 0.3359    
Current (lb-rhs): -0.3665038049221039
1642 domains visited
Cumulative time: 5.714329242706299

BaB round 12
batch: 350
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 364] [/input-16, 24] [/input-16, 24] [/input-12, 546] [/input-16, 24] [/input-16, 24] [/input-12, 364] [/input-12, 364] [/input-12, 364] [/input-16, 186] 
cut re-enabled after branching node selection
0 lb beta sum: 1.090240240097046, worst -0.36801964044570923
10 lb beta sum: 1.7174336910247803, worst -0.3665003180503845
Time: prepare 0.0306    bound 0.1963    transfer 0.0053    finalize 0.0140    func 0.2507    
Accumulated time: func 3.2435    prepare 0.1235    bound 2.9495    transfer 0.0409    finalize 0.1109    
all_split False
======================Cut inference begins======================
max lb tensor(0.58407712) min lb tensor(-0.36649519)
Number of Verified Splits: 276 of 700
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 20
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0604248046875 
BICCOS Cumulative time: 1.1473660469055176
Preprocessing time: 0.020371675491333008 Inference time: 0.03419160842895508 Add cuts time: 0.005269289016723633 Cut analysis time: 0.0005922317504882812
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.36650 (15), -0.35595 (15), -0.35118 (15), -0.34072 (15), -0.33245 (15), -0.31932 (15), -0.31919 (15), -0.31712 (15), -0.31133 (15), -0.31024 (15), -0.30714 (15), -0.30511 (15), -0.30486 (15), -0.30379 (15), -0.29916 (15), -0.29735 (15), -0.29597 (15), -0.28449 (15), -0.28133 (15), -0.27958 (15), 
Length of domains: 424
Time: pickout 0.0020    decision 0.0376    set_bounds 0.0300    solve 0.2509    add 0.0094    
Accumulated time: pickout 0.0271    decision 1.1164    set_bounds 0.1818    solve 3.0251    add 0.3454    
Current (lb-rhs): -0.36649519205093384
2066 domains visited
Cumulative time: 6.107433319091797

BaB round 13
batch: 424
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 364] [/input-12, 364] [/input-12, 364] [/input-16, 24] [/input-12, 364] [/input-12, 364] [/input-12, 364] [/input-16, 186] [/input-16, 24] [/input-16, 72] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3657846450805664
10 lb beta sum: 1.0944843292236328, worst -0.3612946569919586
Time: prepare 0.0171    bound 0.2109    transfer 0.0072    finalize 0.0161    func 0.2569    
Accumulated time: func 3.5004    prepare 0.1408    bound 3.1604    transfer 0.0481    finalize 0.1270    
all_split False
======================Cut inference begins======================
max lb tensor(0.76682180) min lb tensor(-0.36128885)
Number of Verified Splits: 353 of 848
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 24
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.07935953140258789 
BICCOS Cumulative time: 1.2267255783081055
Preprocessing time: 0.024802684783935547 Inference time: 0.047307491302490234 Add cuts time: 0.006543874740600586 Cut analysis time: 0.0007054805755615234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.36129 (16), -0.35059 (16), -0.34604 (16), -0.33538 (16), -0.32680 (16), -0.31328 (16), -0.31160 (16), -0.31133 (16), -0.30591 (16), -0.30542 (16), -0.30511 (16), -0.30383 (16), -0.30222 (16), -0.29806 (16), -0.29735 (16), -0.29421 (16), -0.29139 (16), -0.29094 (16), -0.29087 (16), -0.29022 (16), 
Length of domains: 495
Time: pickout 0.0144    decision 0.0433    set_bounds 0.0370    solve 0.2571    add 0.0091    
Accumulated time: pickout 0.0414    decision 1.1597    set_bounds 0.2189    solve 3.2822    add 0.3545    
Current (lb-rhs): -0.361288845539093
2561 domains visited
Cumulative time: 6.550650358200073

BaB round 14
batch: 495
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 364] [/input-12, 2145] [/input-12, 1964] [/input-12, 364] [/input-16, 24] [/input-12, 1964] [/input-12, 1774] [/input-12, 547] [/input-12, 364] [/input-12, 2145] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3535890579223633
10 lb beta sum: 1.0316153764724731, worst -0.34912484884262085
Time: prepare 0.0203    bound 0.2228    transfer 0.0074    finalize 0.0258    func 0.2828    
Accumulated time: func 3.7832    prepare 0.1614    bound 3.3832    transfer 0.0555    finalize 0.1528    
all_split False
======================Cut inference begins======================
max lb tensor(0.58538252) min lb tensor(-0.34911284)
Number of Verified Splits: 313 of 990
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 19
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.07905268669128418 
BICCOS Cumulative time: 1.3057782649993896
Preprocessing time: 0.029731273651123047 Inference time: 0.04251837730407715 Add cuts time: 0.0062580108642578125 Cut analysis time: 0.0005450248718261719
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34911 (17), -0.34718 (17), -0.33756 (17), -0.33513 (17), -0.33359 (17), -0.33253 (17), -0.32199 (17), -0.32074 (17), -0.31408 (17), -0.31349 (17), -0.30585 (17), -0.30378 (17), -0.29956 (17), -0.29928 (17), -0.29852 (17), -0.29831 (17), -0.29720 (17), -0.29638 (17), -0.29488 (17), -0.29279 (17), 
Length of domains: 677
Time: pickout 0.0025    decision 0.0474    set_bounds 0.0423    solve 0.2831    add 0.0160    
Accumulated time: pickout 0.0440    decision 1.2072    set_bounds 0.2612    solve 3.5653    add 0.3705    
Current (lb-rhs): -0.3491128385066986
3238 domains visited
Cumulative time: 7.0247907638549805

BaB round 15
batch: 512
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 24] [/input-16, 24] [/input-12, 1963] [/input-12, 805] [/input-12, 2145] [/input-12, 1964] [/input-12, 547] [/input-16, 72] [/input-16, 72] [/input-12, 805] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.34088706970214844
10 lb beta sum: 1.0749679803848267, worst -0.3333396017551422
Time: prepare 0.0211    bound 0.2219    transfer 0.0073    finalize 0.0188    func 0.2758    
Accumulated time: func 4.0591    prepare 0.1827    bound 3.6050    transfer 0.0629    finalize 0.1717    
all_split False
======================Cut inference begins======================
max lb tensor(0.68645555) min lb tensor(-0.33167702)
Number of Verified Splits: 476 of 1024
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 19
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.24067378044128418 
BICCOS Cumulative time: 1.5464520454406738
Preprocessing time: 0.0312654972076416 Inference time: 0.20059561729431152 Add cuts time: 0.008145570755004883 Cut analysis time: 0.0006670951843261719
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34718 (17), -0.33513 (17), -0.33253 (17), -0.33168 (18), -0.33100 (18), -0.33085 (18), -0.32074 (17), -0.31624 (18), -0.31557 (18), -0.31555 (18), -0.31349 (17), -0.29928 (17), -0.29852 (17), -0.29593 (18), -0.29521 (18), -0.29336 (18), -0.29212 (17), -0.28862 (18), -0.28813 (18), -0.28664 (18), 
Length of domains: 713
Time: pickout 0.0184    decision 0.0472    set_bounds 0.0449    solve 0.2762    add 0.0110    
Accumulated time: pickout 0.0624    decision 1.2544    set_bounds 0.3061    solve 3.8415    add 0.3815    
Current (lb-rhs): -0.34718042612075806
3786 domains visited
current_vram/total_varm: 20.6GB/99.9GB, batch_size increase to 1024
Cumulative time: 7.6694254875183105

BaB round 16
batch: 713
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 24] [/input-16, 24] [/input-12, 1964] [/input-12, 547] [/input-16, 186] [/input-12, 1964] [/input-12, 228] [/input-12, 547] [/input-16, 72] [/input-12, 805] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8839690685272217, worst -0.33891868591308594
10 lb beta sum: 1.1344809532165527, worst -0.33110660314559937
Time: prepare 0.0544    bound 0.2883    transfer 0.0112    finalize 0.0542    func 0.4175    
Accumulated time: func 4.4765    prepare 0.2373    bound 3.8933    transfer 0.0741    finalize 0.2258    
all_split False
======================Cut inference begins======================
max lb tensor(0.39464939) min lb tensor(-0.33098036)
Number of Verified Splits: 289 of 1426
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 19
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.09064555168151855 
BICCOS Cumulative time: 1.6370975971221924
Preprocessing time: 0.04412221908569336 Inference time: 0.040390968322753906 Add cuts time: 0.005532979965209961 Cut analysis time: 0.0005993843078613281
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33098 (19), -0.33084 (19), -0.32932 (18), -0.32912 (18), -0.32897 (18), -0.31905 (19), -0.31840 (19), -0.31554 (19), -0.31553 (19), -0.31500 (18), -0.31451 (18), -0.31450 (18), -0.30374 (19), -0.30275 (19), -0.29587 (19), -0.29551 (18), -0.29511 (19), -0.29476 (18), -0.29250 (18), -0.28142 (18), 
Length of domains: 1137
Time: pickout 0.0031    decision 0.0624    set_bounds 0.0635    solve 0.4178    add 0.0387    
Accumulated time: pickout 0.0654    decision 1.3168    set_bounds 0.3696    solve 4.2593    add 0.4201    
Current (lb-rhs): -0.3309803605079651
4923 domains visited
Cumulative time: 8.350364923477173

BaB round 17
batch: 1024
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7332] [/input-12, 547] [/input-12, 7332] [/input-12, 547] [/input-12, 547] [/input-12, 1963] [/input-12, 547] [/input-12, 1964] [/input-12, 1964] [/input-16, 72] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.33353710174560547
10 lb beta sum: 0.9131165146827698, worst -0.4973582625389099
Time: prepare 0.0432    bound 0.3800    transfer 0.0137    finalize 0.0507    func 0.5012    
Accumulated time: func 4.9778    prepare 0.2809    bound 4.2733    transfer 0.0878    finalize 0.2765    
all_split False
======================Cut inference begins======================
max lb tensor(0.54069555) min lb tensor(-0.32910687)
Number of Verified Splits: 444 of 2048
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 19
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.1432197093963623 
BICCOS Cumulative time: 1.7803173065185547
Preprocessing time: 0.06578898429870605 Inference time: 0.06715655326843262 Add cuts time: 0.00959014892578125 Cut analysis time: 0.0006840229034423828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.32911 (19), -0.32895 (19), -0.32129 (20), -0.32116 (20), -0.32046 (20), -0.32032 (20), -0.31667 (19), -0.31608 (19), -0.31449 (19), -0.31446 (19), -0.30943 (20), -0.30897 (20), -0.30882 (20), -0.30844 (20), -0.30594 (20), -0.30594 (20), -0.30496 (20), -0.30496 (20), -0.30248 (19), -0.30149 (19), 
Length of domains: 1717
Time: pickout 0.0142    decision 0.0906    set_bounds 0.1000    solve 0.5017    add 0.0405    
Accumulated time: pickout 0.0796    decision 1.4074    set_bounds 0.4696    solve 4.7610    add 0.4606    
Current (lb-rhs): -0.329106867313385
6527 domains visited
current_vram/total_varm: 20.6GB/99.9GB, batch_size increase to 2048
Cumulative time: 9.250846862792969

BaB round 18
batch: 1717
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6251] [/input-12, 6251] [/input-12, 1964] [/input-12, 1964] [/input-12, 7332] [/input-12, 2034] [/input-12, 2034] [/input-12, 1964] [/input-12, 6251] [/input-12, 2034] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9933341145515442, worst -0.31940847635269165
10 lb beta sum: 1.0552932024002075, worst -0.4933599829673767
Time: prepare 0.1514    bound 0.5841    transfer 0.0300    finalize 0.1189    func 0.9079    
Accumulated time: func 5.8857    prepare 0.4326    bound 4.8574    transfer 0.1178    finalize 0.3954    
all_split False
======================Cut inference begins======================
max lb tensor(0.51974416) min lb tensor(-0.31938702)
Number of Verified Splits: 572 of 3434
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 21
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.22043204307556152 
BICCOS Cumulative time: 2.000749349594116
Preprocessing time: 0.1113882064819336 Inference time: 0.09765958786010742 Add cuts time: 0.010647058486938477 Cut analysis time: 0.0007371902465820312
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.31939 (20), -0.31923 (20), -0.31859 (20), -0.31841 (20), -0.31622 (21), -0.31611 (21), -0.31539 (21), -0.31529 (21), -0.30965 (21), -0.30929 (21), -0.30882 (21), -0.30840 (21), -0.30703 (20), -0.30678 (20), -0.30636 (20), -0.30619 (20), -0.30486 (20), -0.30483 (20), -0.30423 (21), -0.30395 (20), 
Length of domains: 2862
Time: pickout 0.0670    decision 0.1433    set_bounds 0.3844    solve 0.9087    add 0.0604    
Accumulated time: pickout 0.1466    decision 1.5507    set_bounds 0.8540    solve 5.6697    add 0.5211    
Current (lb-rhs): -0.3193870186805725
9389 domains visited
Cumulative time: 11.053303718566895

BaB round 19
batch: 2048
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2034] [/input-12, 2034] [/input-12, 798] [/input-16, 186] [/input-12, 2145] [/input-12, 6251] [/input-12, 798] [/input-12, 2034] [/input-12, 2145] [/input-12, 6251] 
cut re-enabled after branching node selection
0 lb beta sum: 1.0436463356018066, worst -0.5930352807044983
10 lb beta sum: 1.1134536266326904, worst -0.4922149181365967
Time: prepare 0.1947    bound 0.6849    transfer 0.0419    finalize 0.1387    func 1.0888    
Accumulated time: func 6.9745    prepare 0.6276    bound 5.5424    transfer 0.1597    finalize 0.5341    
all_split False
======================Cut inference begins======================
max lb tensor(0.53522253) min lb tensor(-0.31432301)
Number of Verified Splits: 813 of 4096
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 21
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.2924177646636963 
BICCOS Cumulative time: 2.2931671142578125
Preprocessing time: 0.132965087890625 Inference time: 0.1412034034729004 Add cuts time: 0.017606019973754883 Cut analysis time: 0.0006432533264160156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.31859 (20), -0.31841 (20), -0.31622 (21), -0.31539 (21), -0.31529 (21), -0.31432 (21), -0.31418 (21), -0.30874 (22), -0.30773 (21), -0.30738 (21), -0.30619 (20), -0.30544 (22), -0.30423 (21), -0.30395 (20), -0.30395 (20), -0.30377 (21), -0.30247 (21), -0.30192 (22), -0.30172 (21), -0.30147 (22), 
Length of domains: 4097
Time: pickout 0.0097    decision 0.1650    set_bounds 0.4003    solve 1.0903    add 0.0895    
Accumulated time: pickout 0.1562    decision 1.7158    set_bounds 1.2543    solve 6.7600    add 0.6105    
Current (lb-rhs): -0.31858736276626587
12672 domains visited
current_vram/total_varm: 20.6GB/99.9GB, batch_size increase to 4096
Cumulative time: 13.120513439178467

BaB round 20
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2034] [/input-12, 2034] [/input-12, 547] [/input-12, 6251] [/input-12, 2145] [/input-12, 1964] [/input-12, 805] [/input-12, 1963] [/input-12, 2034] [/input-12, 2034] 
cut re-enabled after branching node selection
0 lb beta sum: 1.0748991966247559, worst -0.5947494506835938
10 lb beta sum: 1.0902209281921387, worst -0.4874241352081299
Time: prepare 0.3778    bound 1.2520    transfer 0.1078    finalize 0.2801    func 2.0752    
Accumulated time: func 9.0497    prepare 1.0056    bound 6.7943    transfer 0.2675    finalize 0.8142    
all_split False
======================Cut inference begins======================
max lb tensor(0.45392305) min lb tensor(-0.31353813)
Number of Verified Splits: 1002 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 21
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.71718430519104 
BICCOS Cumulative time: 3.0103514194488525
Preprocessing time: 0.2784616947174072 Inference time: 0.18854570388793945 Add cuts time: 0.24934792518615723 Cut analysis time: 0.0008289813995361328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.31354 (21), -0.31339 (21), -0.30899 (22), -0.30821 (22), -0.30797 (22), -0.30758 (22), -0.30733 (22), -0.30693 (21), -0.30654 (21), -0.30578 (23), -0.30571 (22), -0.30472 (22), -0.30441 (22), -0.30241 (23), -0.30157 (21), -0.30049 (22), -0.30009 (22), -0.30003 (22), -0.29979 (22), -0.29934 (22), 
Length of domains: 7191
Time: pickout 0.0187    decision 0.3191    set_bounds 0.5780    solve 2.0785    add 0.1764    
Accumulated time: pickout 0.1750    decision 2.0349    set_bounds 1.8323    solve 8.8386    add 0.7869    
Current (lb-rhs): -0.313538134098053
19862 domains visited
current_vram/total_varm: 20.6GB/99.9GB, batch_size increase to 8192
Cumulative time: 17.047062873840332

BaB round 21
batch: 7191
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2145] [/input-12, 5524] [/input-12, 477] [/input-12, 2034] [/input-12, 6251] [/input-12, 1964] [/input-12, 1964] [/input-12, 2145] [/input-12, 477] [/input-12, 547] 
cut re-enabled after branching node selection
0 lb beta sum: 1.073350191116333, worst -0.30686289072036743
10 lb beta sum: 1.0749073028564453, worst -0.306793749332428
Time: prepare 0.6789    bound 2.1357    transfer 0.2112    finalize 0.4888    func 3.6098    
Accumulated time: func 12.6595    prepare 1.6849    bound 8.9300    transfer 0.4787    finalize 1.3030    
all_split False
======================Cut inference begins======================
max lb tensor(0.44316268) min lb tensor(-0.30676419)
Number of Verified Splits: 1003 of 14382
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 21
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.9554154872894287 
BICCOS Cumulative time: 3.9657669067382812
Preprocessing time: 0.7173933982849121 Inference time: 0.20943188667297363 Add cuts time: 0.027838706970214844 Cut analysis time: 0.000751495361328125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.30676 (22), -0.30651 (22), -0.30603 (23), -0.30526 (23), -0.30502 (23), -0.30463 (23), -0.30439 (23), -0.30272 (23), -0.30176 (23), -0.30146 (23), -0.30086 (24), -0.29965 (22), -0.29924 (22), -0.29923 (22), -0.29907 (22), -0.29744 (24), -0.29725 (23), -0.29686 (23), -0.29684 (23), -0.29660 (23), 
Length of domains: 13379
Time: pickout 0.2843    decision 0.5465    set_bounds 0.9542    solve 3.6139    add 0.3141    
Accumulated time: pickout 0.4593    decision 2.5814    set_bounds 2.7865    solve 12.4525    add 1.1010    
Current (lb-rhs): -0.3067641854286194
33241 domains visited
Cumulative time: 23.75151491165161

BaB round 22
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5273] [/input-12, 228] [/input-12, 5524] [/input-12, 5273] [/input-12, 5273] [/input-12, 3349] [/input-12, 5273] [/input-12, 5524] [/input-12, 3349] [/input-12, 2146] 
cut re-enabled after branching node selection
0 lb beta sum: 1.0571972131729126, worst -0.30129557847976685
10 lb beta sum: 1.0580296516418457, worst -0.301194965839386
Time: prepare 0.7847    bound 2.4101    transfer 0.2471    finalize 1.0132    func 4.5671    
Accumulated time: func 17.2266    prepare 2.4699    bound 11.3401    transfer 0.7258    finalize 2.3162    
all_split False
======================Cut inference begins======================
max lb tensor(0.22444469) min lb tensor(-0.30115300)
Number of Verified Splits: 902 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 21
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.8120932579040527 
BICCOS Cumulative time: 4.777860164642334
Preprocessing time: 0.5800566673278809 Inference time: 0.20628690719604492 Add cuts time: 0.02493906021118164 Cut analysis time: 0.0008106231689453125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.30676 (22), -0.30651 (22), -0.30115 (24), -0.30086 (24), -0.30038 (24), -0.30008 (24), -0.29974 (24), -0.29945 (24), -0.29780 (24), -0.29744 (24), -0.29689 (24), -0.29649 (24), -0.29640 (23), -0.29609 (23), -0.29599 (23), -0.29585 (23), -0.29573 (22), -0.29360 (24), -0.29326 (24), -0.29282 (24), 
Length of domains: 20669
Time: pickout 0.0419    decision 0.6334    set_bounds 1.0792    solve 4.5726    add 0.4650    
Accumulated time: pickout 0.5012    decision 3.2148    set_bounds 3.8658    solve 17.0251    add 1.5660    
Current (lb-rhs): -0.3067641854286194
48723 domains visited
current_vram/total_varm: 38.1GB/99.9GB, batch_size increase to 16384
Cumulative time: 31.434971809387207

BaB round 23
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 477] [/input-12, 1774] [/input-12, 2034] [/input-12, 228] [/input-12, 6251] [/input-12, 7332] [/input-12, 5273] [/input-12, 7332] [/input-4, 2955] [/input-12, 2034] 
cut re-enabled after branching node selection
0 lb beta sum: 1.059049367904663, worst -0.3038554787635803
10 lb beta sum: 1.059360146522522, worst -0.3038225769996643
Time: prepare 1.4922    bound 4.7463    transfer 0.5013    finalize 2.8708    func 9.8331    
Accumulated time: func 27.0598    prepare 3.9628    bound 16.0863    transfer 1.2271    finalize 5.1871    
all_split False
======================Cut inference begins======================
max lb tensor(0.20329797) min lb tensor(-0.30380780)
Number of Verified Splits: 1750 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 21
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 1.9274885654449463 
BICCOS Cumulative time: 6.70534873008728
Preprocessing time: 1.4910573959350586 Inference time: 0.40322279930114746 Add cuts time: 0.03243756294250488 Cut analysis time: 0.0007708072662353516
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.30381 (23), -0.30357 (23), -0.30038 (24), -0.30008 (24), -0.29974 (24), -0.29945 (24), -0.29429 (25), -0.29393 (25), -0.29288 (23), -0.29248 (25), -0.29218 (24), -0.29183 (24), -0.29162 (25), -0.29143 (25), -0.29135 (24), -0.29110 (24), -0.29101 (25), -0.29098 (24), -0.29082 (24), -0.28984 (25), 
Length of domains: 35303
Time: pickout 0.0780    decision 2.4835    set_bounds 2.3206    solve 9.8398    add 1.2280    
Accumulated time: pickout 0.5793    decision 5.6984    set_bounds 6.1864    solve 26.8649    add 2.7941    
Current (lb-rhs): -0.30380779504776
79741 domains visited
Cumulative time: 49.49149990081787

BaB round 24
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 228] [/input-12, 6251] [/input-12, 228] [/input-12, 7332] [/input-12, 2033] [/input-12, 5273] [/input-12, 228] [/input-12, 2034] [/input-12, 3349] [/input-12, 5273] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3034696578979492
10 lb beta sum: 0.7810518145561218, worst -0.4646829068660736
Time: prepare 0.7307    bound 4.7486    transfer 0.4978    finalize 2.8544    func 9.0571    
Accumulated time: func 36.1169    prepare 4.6940    bound 20.8349    transfer 1.7249    finalize 8.0414    
all_split False
======================Cut inference begins======================
max lb tensor(0.24077946) min lb tensor(-0.29892260)
Number of Verified Splits: 8699 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 34.
#cuts 1-3: 23
#cuts 4-6: 5
#cuts 7-9: 6
#cuts >= 20: 0
BICCOS time: 3.709005832672119 
BICCOS Cumulative time: 10.4143545627594
Preprocessing time: 1.0878844261169434 Inference time: 2.4010307788848877 Add cuts time: 0.2184603214263916 Cut analysis time: 0.0016303062438964844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.29892 (24), -0.29863 (24), -0.29429 (25), -0.29393 (25), -0.29351 (25), -0.29315 (25), -0.29289 (25), -0.29252 (25), -0.29248 (25), -0.29162 (25), -0.29143 (25), -0.29135 (24), -0.29110 (24), -0.29098 (24), -0.29082 (24), -0.29063 (25), -0.29021 (25), -0.28984 (25), -0.28946 (25), -0.28906 (25), 
Length of domains: 42988
Time: pickout 0.0803    decision 2.6071    set_bounds 2.0518    solve 9.0668    add 1.2618    
Accumulated time: pickout 0.6596    decision 8.3055    set_bounds 8.2381    solve 35.9316    add 4.0559    
Current (lb-rhs): -0.298922598361969
103810 domains visited
Cumulative time: 68.57622575759888

BaB round 25
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6251] [/input-12, 2145] [/input-12, 2145] [/input-12, 5279] [/input-12, 3349] [/input-12, 4371] [/input-12, 1765] [/input-12, 5524] [/input-12, 346] [/input-12, 2146] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2948722839355469
10 lb beta sum: 0.8898454308509827, worst -0.46187955141067505
Time: prepare 0.7374    bound 4.8468    transfer 0.4161    finalize 1.9490    func 8.1745    
Accumulated time: func 44.2914    prepare 5.4320    bound 25.6817    transfer 2.1410    finalize 9.9904    
all_split False
======================Cut inference begins======================
max lb tensor(0.24159610) min lb tensor(-0.29044583)
Number of Verified Splits: 8584 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 23
#cuts 4-6: 6
#cuts 7-9: 7
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 4.048353433609009 
BICCOS Cumulative time: 14.462707996368408
Preprocessing time: 1.2200770378112793 Inference time: 2.584740400314331 Add cuts time: 0.24157142639160156 Cut analysis time: 0.001964569091796875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.29892 (24), -0.29863 (24), -0.29429 (25), -0.29351 (25), -0.29315 (25), -0.29289 (25), -0.29252 (25), -0.29063 (25), -0.29045 (26), -0.29021 (25), -0.28946 (25), -0.28906 (25), -0.28800 (24), -0.28754 (25), -0.28728 (24), -0.28713 (26), -0.28711 (24), -0.28672 (25), -0.28644 (25), -0.28636 (26), 
Length of domains: 50788
Time: pickout 0.1055    decision 2.1388    set_bounds 2.1921    solve 8.1936    add 0.7445    
Accumulated time: pickout 0.7651    decision 10.4443    set_bounds 10.4302    solve 44.1252    add 4.8004    
Current (lb-rhs): -0.298922598361969
127994 domains visited
Cumulative time: 86.18573880195618

BaB round 26
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 477] [/input-12, 228] [/input-12, 2033] [/input-12, 228] [/input-12, 2033] [/input-12, 3492] [/input-4, 6346] [/input-12, 3298] [/input-12, 7332] [/input-12, 228] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.29410314559936523
10 lb beta sum: 0.7987709045410156, worst -0.46197253465652466
Time: prepare 0.7774    bound 4.7772    transfer 0.4113    finalize 1.1277    func 7.3143    
Accumulated time: func 51.6057    prepare 6.2100    bound 30.4588    transfer 2.5523    finalize 11.1182    
all_split False
======================Cut inference begins======================
max lb tensor(0.23939264) min lb tensor(-0.28965840)
Number of Verified Splits: 3867 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 44.
#cuts 1-3: 23
#cuts 4-6: 7
#cuts 7-9: 10
#cuts 10-12: 4
#cuts >= 20: 0
BICCOS time: 2.946120262145996 
BICCOS Cumulative time: 17.408828258514404
Preprocessing time: 1.1188366413116455 Inference time: 1.71757173538208 Add cuts time: 0.10763359069824219 Cut analysis time: 0.0020782947540283203
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.29892 (24), -0.29863 (24), -0.29045 (26), -0.28966 (26), -0.28910 (26), -0.28897 (26), -0.28820 (26), -0.28754 (26), -0.28672 (25), -0.28644 (25), -0.28636 (26), -0.28630 (26), -0.28611 (26), -0.28548 (26), -0.28532 (26), -0.28517 (26), -0.28499 (26), -0.28477 (26), -0.28415 (26), -0.28414 (26), 
Length of domains: 63305
Time: pickout 0.1021    decision 2.1580    set_bounds 2.4102    solve 7.3228    add 0.6936    
Accumulated time: pickout 0.8671    decision 12.6023    set_bounds 12.8404    solve 51.4480    add 5.4940    
Current (lb-rhs): -0.298922598361969
156895 domains visited
Cumulative time: 101.92644214630127

BaB round 27
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2146] [/input-12, 805] [/input-12, 228] [/input-12, 7332] [/input-12, 7332] [/input-12, 6251] [/input-12, 2034] [/input-12, 2146] [/input-12, 805] [/input-12, 3492] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.29654550552368164
10 lb beta sum: 0.7856339812278748, worst -0.46009430289268494
Time: prepare 0.7513    bound 4.7831    transfer 0.4178    finalize 1.1156    func 7.2882    
Accumulated time: func 58.8940    prepare 6.9618    bound 35.2419    transfer 2.9701    finalize 12.2338    
all_split False
======================Cut inference begins======================
max lb tensor(0.09299383) min lb tensor(-0.29206568)
Number of Verified Splits: 2844 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 49.
#cuts 1-3: 23
#cuts 4-6: 7
#cuts 7-9: 15
#cuts 10-12: 4
#cuts >= 20: 0
BICCOS time: 2.778993844985962 
BICCOS Cumulative time: 20.187822103500366
Preprocessing time: 1.1039552688598633 Inference time: 1.5941314697265625 Add cuts time: 0.07851266860961914 Cut analysis time: 0.002394437789916992
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.29207 (25), -0.29170 (25), -0.28966 (26), -0.28910 (26), -0.28897 (26), -0.28865 (25), -0.28827 (25), -0.28820 (26), -0.28754 (26), -0.28672 (25), -0.28644 (25), -0.28630 (26), -0.28574 (27), -0.28548 (26), -0.28532 (26), -0.28517 (26), -0.28499 (26), -0.28477 (26), -0.28415 (26), -0.28408 (26), 
Length of domains: 76845
Time: pickout 0.1019    decision 2.1759    set_bounds 2.5316    solve 7.2963    add 1.2749    
Accumulated time: pickout 0.9691    decision 14.7782    set_bounds 15.3720    solve 58.7443    add 6.7689    
Current (lb-rhs): -0.29206568002700806
186819 domains visited
Cumulative time: 118.18298172950745

BaB round 28
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7331] [/input-12, 5279] [/input-12, 477] [/input-12, 5524] [/input-12, 3298] [/input-12, 2034] [/input-12, 805] [/input-12, 2146] [/input-12, 7332] [/input-12, 228] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.28740549087524414
10 lb beta sum: 0.7888506650924683, worst -0.4574792981147766
Time: prepare 0.7465    bound 4.7914    transfer 0.4057    finalize 1.0776    func 7.2437    
Accumulated time: func 66.1376    prepare 7.7088    bound 40.0333    transfer 3.3757    finalize 13.3114    
all_split False
======================Cut inference begins======================
max lb tensor(0.12569918) min lb tensor(-0.28288996)
Number of Verified Splits: 3035 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 52.
#cuts 1-3: 23
#cuts 4-6: 7
#cuts 7-9: 22
#cuts >= 20: 0
BICCOS time: 1.918675422668457 
BICCOS Cumulative time: 22.106497526168823
Preprocessing time: 1.1263861656188965 Inference time: 0.7087056636810303 Add cuts time: 0.08095479011535645 Cut analysis time: 0.002628803253173828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.29207 (25), -0.29170 (25), -0.28966 (26), -0.28910 (26), -0.28897 (26), -0.28865 (25), -0.28827 (25), -0.28820 (26), -0.28754 (26), -0.28630 (26), -0.28574 (27), -0.28532 (26), -0.28517 (26), -0.28477 (26), -0.28408 (26), -0.28396 (26), -0.28342 (26), -0.28314 (25), -0.28290 (27), -0.28289 (26), 
Length of domains: 90194
Time: pickout 0.0767    decision 2.1793    set_bounds 2.6703    solve 7.2554    add 0.6575    
Accumulated time: pickout 1.0458    decision 16.9574    set_bounds 18.0423    solve 65.9997    add 7.4264    
Current (lb-rhs): -0.29206568002700806
216552 domains visited
Cumulative time: 133.03784322738647

BaB round 29
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 477] [/input-12, 5279] [/input-12, 2034] [/input-12, 2145] [/input-12, 477] [/input-12, 7331] [/input-12, 477] [/input-12, 5279] [/input-12, 2146] [/input-12, 1774] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2894105911254883
10 lb beta sum: 0.7729710340499878, worst -0.45823127031326294
Time: prepare 0.7513    bound 4.8025    transfer 0.4195    finalize 1.1302    func 8.3624    
Accumulated time: func 74.5000    prepare 8.4607    bound 44.8358    transfer 3.7952    finalize 14.4416    
all_split False
======================Cut inference begins======================
max lb tensor(0.07579717) min lb tensor(-0.28495741)
Number of Verified Splits: 3226 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 62.
#cuts 1-3: 23
#cuts 4-6: 7
#cuts 7-9: 32
#cuts >= 20: 0
BICCOS time: 1.97538161277771 
BICCOS Cumulative time: 24.081879138946533
Preprocessing time: 1.109508752822876 Inference time: 0.7660315036773682 Add cuts time: 0.09649109840393066 Cut analysis time: 0.0033502578735351562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.29207 (25), -0.29170 (25), -0.28865 (25), -0.28827 (25), -0.28574 (27), -0.28496 (27), -0.28477 (26), -0.28438 (27), -0.28404 (27), -0.28396 (26), -0.28342 (26), -0.28327 (27), -0.28290 (27), -0.28289 (26), -0.28260 (27), -0.28218 (27), -0.28208 (27), -0.28151 (27), -0.28107 (26), -0.28094 (27), 
Length of domains: 103352
Time: pickout 0.0792    decision 2.8274    set_bounds 1.6965    solve 8.3697    add 0.7321    
Accumulated time: pickout 1.1251    decision 19.7848    set_bounds 19.7387    solve 74.3694    add 8.1585    
Current (lb-rhs): -0.29206568002700806
246094 domains visited
Cumulative time: 148.85097074508667

BaB round 30
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 477] [/input-12, 228] [/input-12, 6251] [/input-12, 805] [/input-12, 5278] [/input-12, 805] [/input-12, 2146] [/input-12, 477] [/input-12, 3492] [/input-12, 805] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.28426170349121094
10 lb beta sum: 0.7738908529281616, worst -0.4552534222602844
Time: prepare 0.7729    bound 4.8157    transfer 0.4034    finalize 1.0922    func 7.3058    
Accumulated time: func 81.8058    prepare 9.2341    bound 49.6516    transfer 4.1986    finalize 15.5337    
all_split False
======================Cut inference begins======================
max lb tensor(0.07638803) min lb tensor(-0.27983719)
Number of Verified Splits: 2986 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 70.
#cuts 1-3: 23
#cuts 4-6: 7
#cuts 7-9: 40
#cuts >= 20: 0
BICCOS time: 1.945120096206665 
BICCOS Cumulative time: 26.0269992351532
Preprocessing time: 1.1436781883239746 Inference time: 0.7077553272247314 Add cuts time: 0.08990669250488281 Cut analysis time: 0.003779888153076172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.29207 (25), -0.29170 (25), -0.28865 (25), -0.28827 (25), -0.28574 (27), -0.28496 (27), -0.28438 (27), -0.28404 (27), -0.28327 (27), -0.28289 (26), -0.28260 (27), -0.28218 (27), -0.28208 (27), -0.28151 (27), -0.28094 (27), -0.28094 (27), -0.28073 (27), -0.28027 (27), -0.27993 (27), -0.27989 (26), 
Length of domains: 116750
Time: pickout 0.0816    decision 2.1741    set_bounds 2.8973    solve 7.3172    add 0.6658    
Accumulated time: pickout 1.2067    decision 21.9589    set_bounds 22.6361    solve 81.6866    add 8.8242    
Current (lb-rhs): -0.29206568002700806
275876 domains visited
Cumulative time: 164.03208446502686

BaB round 31
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2034] [/input-12, 5524] [/input-12, 3349] [/input-12, 2034] [/input-12, 5279] [/input-12, 5278] [/input-12, 5525] [/input-12, 805] [/input-12, 2033] [/input-12, 3492] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2927250862121582
10 lb beta sum: 0.7712618112564087, worst -0.4563172459602356
Time: prepare 0.7650    bound 4.8558    transfer 0.4194    finalize 1.1303    func 8.6518    
Accumulated time: func 90.4576    prepare 9.9996    bound 54.5074    transfer 4.6180    finalize 16.6641    
all_split False
======================Cut inference begins======================
max lb tensor(0.11960234) min lb tensor(-0.28827193)
Number of Verified Splits: 3113 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 66.
#cuts 1-3: 23
#cuts 4-6: 7
#cuts 7-9: 35
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 2.0222296714782715 
BICCOS Cumulative time: 28.04922890663147
Preprocessing time: 1.1061959266662598 Inference time: 0.7444443702697754 Add cuts time: 0.16800236701965332 Cut analysis time: 0.003587007522583008
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.28827 (26), -0.28675 (26), -0.28496 (27), -0.28439 (26), -0.28438 (27), -0.28404 (27), -0.28331 (26), -0.28327 (27), -0.28289 (26), -0.28260 (27), -0.28255 (26), -0.28218 (27), -0.28208 (27), -0.28155 (28), -0.28094 (27), -0.28094 (27), -0.28073 (27), -0.28027 (27), -0.27993 (27), -0.27989 (26), 
Length of domains: 130021
Time: pickout 0.0772    decision 3.4070    set_bounds 1.6941    solve 8.6582    add 0.7465    
Accumulated time: pickout 1.2839    decision 25.3659    set_bounds 24.3302    solve 90.3448    add 9.5707    
Current (lb-rhs): -0.2882719337940216
305531 domains visited
Cumulative time: 180.77095365524292

BaB round 32
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5279] [/input-12, 5273] [/input-12, 805] [/input-12, 3349] [/input-12, 7332] [/input-12, 3349] [/input-12, 5524] [/input-12, 5273] [/input-12, 805] [/input-12, 5279] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.28314638137817383
10 lb beta sum: 0.7631906270980835, worst -0.4535134434700012
Time: prepare 0.7592    bound 6.3352    transfer 0.4061    finalize 1.0964    func 8.8203    
Accumulated time: func 99.2779    prepare 10.7594    bound 60.8426    transfer 5.0240    finalize 17.7605    
all_split False
======================Cut inference begins======================
max lb tensor(0.10873660) min lb tensor(-0.27866468)
Number of Verified Splits: 3089 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 68.
#cuts 1-3: 23
#cuts 4-6: 8
#cuts 7-9: 36
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 2.0455918312072754 
BICCOS Cumulative time: 30.094820737838745
Preprocessing time: 1.1494801044464111 Inference time: 0.7290163040161133 Add cuts time: 0.16363239288330078 Cut analysis time: 0.0034630298614501953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.28827 (26), -0.28675 (26), -0.28496 (27), -0.28439 (26), -0.28438 (27), -0.28404 (27), -0.28331 (26), -0.28327 (27), -0.28260 (27), -0.28255 (26), -0.28208 (27), -0.28155 (28), -0.28094 (27), -0.28094 (27), -0.28073 (27), -0.28027 (27), -0.27989 (26), -0.27984 (27), -0.27968 (26), -0.27941 (27), 
Length of domains: 143316
Time: pickout 0.0797    decision 2.1711    set_bounds 3.1905    solve 8.8336    add 0.6546    
Accumulated time: pickout 1.3636    decision 27.5370    set_bounds 27.5207    solve 99.1784    add 10.2253    
Current (lb-rhs): -0.2882719337940216
335210 domains visited
Cumulative time: 197.86043119430542

BaB round 33
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2033] [/input-12, 805] [/input-12, 1774] [/input-12, 6251] [/input-4, 2955] [/input-4, 1628] [/input-12, 228] [/input-12, 6251] [/input-12, 477] [/input-4, 2955] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2812657356262207
10 lb beta sum: 0.7658778429031372, worst -0.45460259914398193
Time: prepare 0.7764    bound 4.8554    transfer 0.4260    finalize 1.1345    func 7.4123    
Accumulated time: func 106.6902    prepare 11.5363    bound 65.6979    transfer 5.4500    finalize 18.8950    
all_split False
======================Cut inference begins======================
max lb tensor(0.11488160) min lb tensor(-0.27683836)
Number of Verified Splits: 3190 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 66.
#cuts 1-3: 23
#cuts 4-6: 9
#cuts 7-9: 33
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 2.112799882888794 
BICCOS Cumulative time: 32.20762062072754
Preprocessing time: 1.1547486782073975 Inference time: 0.7804610729217529 Add cuts time: 0.17407608032226562 Cut analysis time: 0.0035140514373779297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.28827 (26), -0.28675 (26), -0.28496 (27), -0.28439 (26), -0.28438 (27), -0.28404 (27), -0.28331 (26), -0.28327 (27), -0.28260 (27), -0.28255 (26), -0.28208 (27), -0.28155 (28), -0.28094 (27), -0.28073 (27), -0.27984 (27), -0.27941 (27), -0.27916 (26), -0.27901 (27), -0.27866 (27), -0.27852 (28), 
Length of domains: 156510
Time: pickout 0.0782    decision 2.1765    set_bounds 3.2479    solve 7.4211    add 0.6618    
Accumulated time: pickout 1.4417    decision 29.7135    set_bounds 30.7686    solve 106.5995    add 10.8871    
Current (lb-rhs): -0.2882719337940216
364788 domains visited
Time out!!!!!!!!
Result: unknown in 217.0673 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 25, vnnlib ID: 25 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-29.62648773, -32.31573105, -29.12892342, -28.95562744, -28.48752975,
         -29.20686913, -28.12575150, -29.66490364, -31.72459984, -30.47717476]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1426]; unstable size 1426; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 85, 1, 1426] with unstable size 84 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 40, 1, 1426] with unstable size 39 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1426] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [689]; unstable size 689; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 40, 1, 689] with unstable size 39 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 689] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [39]; unstable size 39; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 39] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.46003675, -2.02311969, -2.28073978, -2.64969301, -2.06321907,
         -3.53042078, -2.01163840,  0.47488981, -1.16572237]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-29.62648773, -32.31573105, -29.12892342, -28.95562744, -28.48752975,
         -29.20686913, -28.12575150, -29.66490364, -31.72459984, -30.47717476]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-29.62648773, -32.31573105, -29.12891960, -28.95562744, -28.48752975,
          -29.20687103, -28.12575150, -29.66489983, -31.72459602, -30.47717285],
         [-29.62648773, -32.31573105, -29.12891960, -28.95562744, -28.48752975,
          -29.20687103, -28.12575150, -29.66489983, -31.72459602, -30.47717285]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.49756813, -0.67086029, -1.13895798, -0.41961670, -1.50073624,
           0.03841209,  0.85068512]]], device='cuda:0')
number of violation:  5
clean attack image tensor([[[[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         ...,


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]]]], device='cuda:0') torch.Size([1, 7, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0847 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 26, vnnlib ID: 26 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-52.04220581, -50.70395279, -54.24013138, -52.11892319, -52.71493149,
         -52.40466690, -53.74149323, -52.53662491, -51.87966537, -49.35151672]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1194]; unstable size 1194; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 441, 1, 1194] with unstable size 440 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 27, 1, 1194] with unstable size 26 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1194] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [440]; unstable size 440; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 27, 1, 440] with unstable size 26 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 440] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [26]; unstable size 26; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.25077820, 0.66541398, 2.93460202, 1.27404046, 1.71838450, 1.48179269,
         2.52181959, 1.25726080, 1.25699973]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0368 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 27, vnnlib ID: 27 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-45.59673691, -48.96349335, -44.47443008, -44.91824722, -42.00286102,
         -44.87453842, -46.46792603, -38.25251389, -48.26871872, -47.52534485]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1282]; unstable size 1282; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 86, 1, 1282] with unstable size 85 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 23, 1, 1282] with unstable size 22 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1282] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [515]; unstable size 515; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 23, 1, 515] with unstable size 22 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 515] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [22]; unstable size 22; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.59416962, 8.36065197, 4.88308907, 5.36049986, 2.94982672, 5.36484480,
         6.50938272, 7.83009529, 7.00661659]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0370 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 28, vnnlib ID: 28 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-76.73006439, -82.57540131, -78.90801239, -80.77256012, -80.16239929,
         -81.27693939, -80.98845673, -83.13385010, -79.79779816, -82.45063019]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1456]; unstable size 1456; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 358, 1, 1456] with unstable size 357 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 15, 1, 1456] with unstable size 14 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1456] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [357]; unstable size 357; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 15, 1, 357] with unstable size 14 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 357] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [14]; unstable size 14; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.89286470, 1.47437739, 3.06921101, 2.51303864, 3.48727417, 3.48969889,
         5.13241291, 2.42312431, 4.80297279]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0389 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 29, vnnlib ID: 29 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-92.66873169, -93.92675781, -88.81002045, -86.92086792, -87.36625671,
         -87.00611877, -87.56363678, -88.03388977, -92.47289276, -93.04116058]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1496]; unstable size 1496; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 474, 1, 1496] with unstable size 473 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 22, 1, 1496] with unstable size 21 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1496] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [473]; unstable size 473; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 22, 1, 473] with unstable size 21 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 473] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [21]; unstable size 21; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.22102928,  4.00891209, -0.21569872, -1.99030972, -1.55612993,
         -1.89430857, -1.68445539,  2.72024155,  3.04973269]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-92.66873169, -93.92675781, -88.81002045, -86.92086792, -87.36625671,
         -87.00611877, -87.56363678, -88.03388977, -92.47289276, -93.04116058]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-92.66872406, -93.92674255, -88.81003571, -86.92086792, -87.36626434,
          -87.00611877, -87.56362915, -88.03387451, -92.47287750, -93.04115295],
         [-92.66872406, -93.92674255, -88.81003571, -86.92086792, -87.36626434,
          -87.00611877, -87.56362915, -88.03387451, -92.47287750, -93.04115295]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.77616119, -1.11300659, -0.66761017, -1.02775574, -0.47024536]]],
       device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0521 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 30, vnnlib ID: 30 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[ -98.02671814, -104.98117828, -101.17490387, -104.29840088,
         -102.31323242, -104.78212738, -104.08334351, -105.74415588,
         -102.65750885, -104.80446625]], device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1510]; unstable size 1510; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 394, 1, 1510] with unstable size 393 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 16, 1, 1510] with unstable size 15 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1510] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [393]; unstable size 393; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 16, 1, 393] with unstable size 15 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 393] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [15]; unstable size 15; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.79251003, 2.26686120, 5.36435843, 3.28717184, 5.80860329, 5.23940182,
         6.61517334, 3.69425392, 5.81328630]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0380 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 31, vnnlib ID: 31 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-54.15471649, -58.34539032, -53.64955521, -55.02834320, -51.72163010,
         -55.08429718, -55.23154068, -54.01410675, -56.05028915, -57.87380219]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1266]; unstable size 1266; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 85, 1, 1266] with unstable size 84 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 32, 1, 1266] with unstable size 31 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1266] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [573]; unstable size 573; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 32, 1, 573] with unstable size 31 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 573] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [31]; unstable size 31; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.86190283, 4.11263752, 0.86914992, 2.31792450, 2.41495347, 2.06266665,
         1.31643534, 2.17061615, 3.62949228]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0374 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 32, vnnlib ID: 32 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-39.66713715, -41.49441528, -38.21555710, -39.07286072, -37.18225479,
         -39.38285828, -38.94539261, -38.09008026, -39.52689743, -40.29069519]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1626]; unstable size 1626; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 79, 1, 1626] with unstable size 78 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 46, 1, 1626] with unstable size 45 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1626] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [642]; unstable size 642; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 46, 1, 642] with unstable size 45 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 642] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [45]; unstable size 45; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 45] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.43631911,  0.98793781, -1.42233181, -0.61714172, -1.94335794,
         -0.27411175, -1.24937010, -0.96059012, -0.02097189]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-39.66713715, -41.49441528, -38.21555710, -39.07286072, -37.18225479,
         -39.38285828, -38.94539261, -38.09008026, -39.52689743, -40.29069519]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-39.66714096, -41.49441910, -38.21556473, -39.07286453, -37.18225479,
          -39.38286209, -38.94540024, -38.09008408, -39.52690506, -40.29069519],
         [-39.66714096, -41.49441910, -38.21556473, -39.07286453, -37.18225479,
          -39.38286209, -38.94540024, -38.09008408, -39.52690506, -40.29069519]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.57705688,  0.12548065,  0.98278046, -0.90782928,  1.29277802,
           0.85531616,  1.43682098,  2.20061111]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         ...,


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]]]],
       device='cuda:0') torch.Size([1, 8, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0583 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 33, vnnlib ID: 33 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[ -91.75786591,  -97.68566132,  -94.58458710,  -98.49835205,
          -97.50816345,  -98.81650543,  -98.49415588, -100.60194397,
          -95.32480621,  -97.85710907]], device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1443]; unstable size 1443; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 385, 1, 1443] with unstable size 384 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 18, 1, 1443] with unstable size 17 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1443] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [384]; unstable size 384; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 18, 1, 384] with unstable size 17 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 384] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [17]; unstable size 17; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.73708105, 1.98516536, 5.75813913, 4.83214378, 6.02368450, 5.69708586,
         7.47961998, 2.61131310, 5.15772533]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0362 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 34, vnnlib ID: 34 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-33.45215607, -33.60874939, -29.87346077, -29.49308014, -29.32261467,
         -29.96984673, -29.30916977, -30.66525650, -34.46723938, -32.71060944]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1469]; unstable size 1469; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 80, 1, 1469] with unstable size 79 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 41, 1, 1469] with unstable size 40 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1469] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [636]; unstable size 636; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 41, 1, 636] with unstable size 40 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 636] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [40]; unstable size 40; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 40] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.52368283,  1.75457668, -0.42849660, -0.86188483,  0.33770686,
         -1.24913645,  0.12832928,  3.23678684,  0.63444901]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-33.45215607, -33.60874939, -29.87346077, -29.49308014, -29.32261467,
         -29.96984673, -29.30916977, -30.66525650, -34.46723938, -32.71060944]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-33.45215607, -33.60875320, -29.87346649, -29.49308395, -29.32261467,
          -29.96984863, -29.30917168, -30.66525841, -34.46723938, -32.71060944],
         [-33.45215607, -33.60875320, -29.87346649, -29.49308395, -29.32261467,
          -29.96984863, -29.30917168, -30.66525841, -34.46723938, -32.71060944]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.38038254, -0.17046928, -0.18391228]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-1.79841268, -1.94126987, -1.67142856,  ..., -1.56031740,
            -1.75079370, -1.76666665],
           [-1.62380958, -1.92539680, -1.78253973,  ..., -1.57619035,
            -1.71904767, -1.75079370],
           [-1.38571417, -1.86190474, -1.86190474,  ..., -1.56031740,
            -1.68730164, -1.73492062],
           ...,
           [-0.14761895, -0.52857143, -0.63968253,  ..., -0.25873005,
            -0.32222211, -0.38571417],
           [-0.00476181, -0.36984116, -0.67142856,  ..., -0.33809513,
            -0.38571417, -0.48095238],
           [ 0.01111121, -0.03650784, -0.25873005,  ..., -0.35396814,
            -0.33809513, -0.41746020]],

          [[-1.80354273, -1.90016103, -1.75523353,  ..., -1.65861523,
            -1.81964576, -1.78743970],
           [-1.69082129, -1.88405800, -1.83574879,  ..., -1.67471826,
            -1.77133656, -1.77133656],
           [-1.54589367, -1.86795497, -1.91626418,  ..., -1.64251208,
            -1.75523353, -1.77133656],
           ...,
           [-0.40257636, -0.83735907, -0.91787434,  ..., -0.49919480,
            -0.54750401, -0.61191624],
           [-0.22544271, -0.64412236, -0.90177131,  ..., -0.61191624,
            -0.66022539, -0.74074072],
           [-0.16103047, -0.25764883, -0.46698871,  ..., -0.67632848,
            -0.66022539, -0.74074072]],

          [[-1.39280367, -1.58770621, -1.34782624,  ..., -1.28785622,
            -1.45277369, -1.43778121],
           [-1.25787115, -1.55772126, -1.43778121,  ..., -1.30284870,
            -1.40779614, -1.40779614],
           [-1.04797614, -1.48275876, -1.51274371,  ..., -1.28785622,
            -1.39280367, -1.40779614],
           ...,
           [ 0.13643195, -0.49325335, -0.83808094,  ...,  0.19640197,
             0.15142445,  0.09145443],
           [ 0.33133450, -0.19340314, -0.61319339,  ...,  0.07646193,
             0.03148442, -0.04347810],
           [ 0.52623707,  0.39130452,  0.13643195,  ...,  0.01649191,
             0.01649191, -0.05847061]]],


         [[[-1.79841268, -1.94126987, -1.67142856,  ..., -1.56031740,
            -1.75079370, -1.76666665],
           [-1.62380958, -1.92539680, -1.78253973,  ..., -1.57619035,
            -1.71904767, -1.75079370],
           [-1.38571417, -1.86190474, -1.86190474,  ..., -1.56031740,
            -1.68730164, -1.73492062],
           ...,
           [-0.14761895, -0.52857143, -0.63968253,  ..., -0.25873005,
            -0.32222211, -0.38571417],
           [-0.00476181, -0.36984116, -0.67142856,  ..., -0.33809513,
            -0.38571417, -0.48095238],
           [ 0.01111121, -0.03650784, -0.25873005,  ..., -0.35396814,
            -0.33809513, -0.41746020]],

          [[-1.80354273, -1.90016103, -1.75523353,  ..., -1.65861523,
            -1.81964576, -1.78743970],
           [-1.69082129, -1.88405800, -1.83574879,  ..., -1.67471826,
            -1.77133656, -1.77133656],
           [-1.54589367, -1.86795497, -1.91626418,  ..., -1.64251208,
            -1.75523353, -1.77133656],
           ...,
           [-0.40257636, -0.83735907, -0.91787434,  ..., -0.49919480,
            -0.54750401, -0.61191624],
           [-0.22544271, -0.64412236, -0.90177131,  ..., -0.61191624,
            -0.66022539, -0.74074072],
           [-0.16103047, -0.25764883, -0.46698871,  ..., -0.67632848,
            -0.66022539, -0.74074072]],

          [[-1.39280367, -1.58770621, -1.34782624,  ..., -1.28785622,
            -1.45277369, -1.43778121],
           [-1.25787115, -1.55772126, -1.43778121,  ..., -1.30284870,
            -1.40779614, -1.40779614],
           [-1.04797614, -1.48275876, -1.51274371,  ..., -1.28785622,
            -1.39280367, -1.40779614],
           ...,
           [ 0.13643195, -0.49325335, -0.83808094,  ...,  0.19640197,
             0.15142445,  0.09145443],
           [ 0.33133450, -0.19340314, -0.61319339,  ...,  0.07646193,
             0.03148442, -0.04347810],
           [ 0.52623707,  0.39130452,  0.13643195,  ...,  0.01649191,
             0.01649191, -0.05847061]]],


         [[[-1.79841268, -1.94126987, -1.67142856,  ..., -1.56031740,
            -1.75079370, -1.76666665],
           [-1.62380958, -1.92539680, -1.78253973,  ..., -1.57619035,
            -1.71904767, -1.75079370],
           [-1.38571417, -1.86190474, -1.86190474,  ..., -1.56031740,
            -1.68730164, -1.73492062],
           ...,
           [-0.14761895, -0.52857143, -0.63968253,  ..., -0.25873005,
            -0.32222211, -0.38571417],
           [-0.00476181, -0.36984116, -0.67142856,  ..., -0.33809513,
            -0.38571417, -0.48095238],
           [ 0.01111121, -0.03650784, -0.25873005,  ..., -0.35396814,
            -0.33809513, -0.41746020]],

          [[-1.80354273, -1.90016103, -1.75523353,  ..., -1.65861523,
            -1.81964576, -1.78743970],
           [-1.69082129, -1.88405800, -1.83574879,  ..., -1.67471826,
            -1.77133656, -1.77133656],
           [-1.54589367, -1.86795497, -1.91626418,  ..., -1.64251208,
            -1.75523353, -1.77133656],
           ...,
           [-0.40257636, -0.83735907, -0.91787434,  ..., -0.49919480,
            -0.54750401, -0.61191624],
           [-0.22544271, -0.64412236, -0.90177131,  ..., -0.61191624,
            -0.66022539, -0.74074072],
           [-0.16103047, -0.25764883, -0.46698871,  ..., -0.67632848,
            -0.66022539, -0.74074072]],

          [[-1.39280367, -1.58770621, -1.34782624,  ..., -1.28785622,
            -1.45277369, -1.43778121],
           [-1.25787115, -1.55772126, -1.43778121,  ..., -1.30284870,
            -1.40779614, -1.40779614],
           [-1.04797614, -1.48275876, -1.51274371,  ..., -1.28785622,
            -1.39280367, -1.40779614],
           ...,
           [ 0.13643195, -0.49325335, -0.83808094,  ...,  0.19640197,
             0.15142445,  0.09145443],
           [ 0.33133450, -0.19340314, -0.61319339,  ...,  0.07646193,
             0.03148442, -0.04347810],
           [ 0.52623707,  0.39130452,  0.13643195,  ...,  0.01649191,
             0.01649191, -0.05847061]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0498 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 35, vnnlib ID: 35 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-35.70710373, -35.96918869, -32.47838974, -30.14597702, -32.91929626,
         -30.90136909, -29.89847374, -32.87059402, -35.89123917, -34.20748901]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1420]; unstable size 1420; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 85, 1, 1420] with unstable size 84 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 42, 1, 1420] with unstable size 41 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1420] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [745]; unstable size 745; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 42, 1, 745] with unstable size 41 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 745] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [41]; unstable size 41; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 41] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.50888968,  3.59013915,  1.10366368,  1.41865659,  0.56636584,
         -1.31944883,  0.90578341,  3.66904521,  2.01307750]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-35.70710373, -35.96918869, -32.47838974, -30.14597702, -32.91929626,
         -30.90136909, -29.89847374, -32.87059402, -35.89123917, -34.20748901]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-35.70710373, -35.96918869, -32.47838974, -30.14597702, -32.91929626,
          -30.90136909, -29.89847374, -32.87059402, -35.89123917, -34.20748901]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.24750328]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.09047651,  1.12222254,  1.12222254,  ...,  1.07460344,
             1.15396857,  1.13809550],
           [ 1.04285717,  1.07460344,  1.07460344,  ...,  1.04285717,
             1.07460344,  1.07460344],
           [ 1.04285717,  1.07460344,  1.07460344,  ...,  1.02698421,
             1.07460344,  1.07460344],
           ...,
           [ 1.04285717,  1.07460344,  1.09047651,  ..., -0.35396814,
             0.55079371,  1.07460344],
           [ 1.04285717,  1.07460344,  1.05873048,  ..., -0.62380952,
            -0.24285704,  0.77301592],
           [ 1.04285717,  1.07460344,  1.07460344,  ..., -0.21111101,
             0.10634929,  0.83650798]],

          [[ 1.25603890,  1.28824508,  1.28824508,  ...,  1.25603890,
             1.27214205,  1.28824508],
           [ 1.20772982,  1.23993587,  1.23993587,  ...,  1.25603890,
             1.23993587,  1.23993587],
           [ 1.20772982,  1.23993587,  1.23993587,  ...,  1.23993587,
             1.23993587,  1.23993587],
           ...,
           [ 1.20772982,  1.23993587,  1.25603890,  ..., -0.49919480,
             0.51529801,  1.17552364],
           [ 1.20772982,  1.23993587,  1.22383285,  ..., -0.82125598,
            -0.32206106,  0.85346222],
           [ 1.20772982,  1.23993587,  1.23993587,  ..., -0.32206106,
             0.08051541,  0.93397754]],

          [[ 1.42578757,  1.45577252,  1.45577252,  ...,  1.44078004,
             1.42578757,  1.45577252],
           [ 1.38081002,  1.41079497,  1.41079497,  ...,  1.41079497,
             1.39580250,  1.41079497],
           [ 1.38081002,  1.41079497,  1.41079497,  ...,  1.44078004,
             1.42578757,  1.41079497],
           ...,
           [ 1.38081002,  1.41079497,  1.42578757,  ..., -0.53823084,
             0.54122955,  1.33583248],
           [ 1.38081002,  1.41079497,  1.41079497,  ..., -1.07796109,
            -0.41829082,  0.99100471],
           [ 1.38081002,  1.41079497,  1.41079497,  ..., -0.64317840,
            -0.07346311,  1.06596720]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0414 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 36, vnnlib ID: 36 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-44.97438049, -49.12579346, -44.74094772, -42.37850571, -44.32573700,
         -43.17233658, -44.71232224, -41.05145645, -48.37161636, -47.40783691]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1297]; unstable size 1297; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 375, 1, 1297] with unstable size 374 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 18, 1, 1297] with unstable size 17 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1297] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [374]; unstable size 374; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 18, 1, 374] with unstable size 17 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 374] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [17]; unstable size 17; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.88268614, 6.74583864, 2.84343338, 0.57535172, 2.35972238, 1.36371815,
         2.66652155, 5.94099283, 4.85066223]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0382 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 37, vnnlib ID: 37 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-64.68026733, -66.16740417, -67.57715607, -70.79747772, -67.87268066,
         -71.41768646, -71.98519897, -70.28328705, -65.53041840, -66.61916351]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1376]; unstable size 1376; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 80, 1, 1376] with unstable size 79 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 30, 1, 1376] with unstable size 29 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1376] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [514]; unstable size 514; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 30, 1, 514] with unstable size 29 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 514] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [29]; unstable size 29; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.06591082,  1.76752925,  4.93203783,  2.01492786,  5.47566891,
          6.03451109,  4.02950907, -0.12523222,  0.37987375]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-64.68026733, -66.16740417, -67.57715607, -70.79747772, -67.87268066,
         -71.41768646, -71.98519897, -70.28328705, -65.53041840, -66.61916351]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.89it/s]100%|██████████| 1/1 [00:00<00:00,  7.88it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-67.01469421, -68.54439545, -69.77024078, -72.99774933, -70.08985138,
          -73.63464355, -74.19017792, -72.52507782, -67.36695862, -68.97202301],
         [-67.01469421, -68.54439545, -69.77024078, -72.99774933, -70.08985138,
          -73.63464355, -74.19017792, -72.52507782, -67.36695862, -68.97202301]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.52970123, 0.35226440]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1301 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 24.88766098022461
alpha/beta optimization time: 1.4819765090942383
initial alpha-crown bounds: tensor([[-0.01740456,  1.81204414,  4.97725773,  2.05403996,  5.52163601,
          6.08433819,  4.08626080, -0.06119132,  0.43068123]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.06119132041931152
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.3480155467987
Verifying property 0 with 1 instances.
##### Instance 37 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.01740456]], device='cuda:0') need to verify.
Model prediction is: tensor([-64.68026733, -66.16740417, -67.57715607, -70.79747772, -67.87268066,
        -71.41768646, -71.98519897, -70.28328705, -65.53041840, -66.61916351],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.01740456]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1376
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 505
Node /39 input 0: size torch.Size([250]) unstable 28
-----------------
# of unstable neurons: 1909
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00011086463928222656
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.017328262329101562
10 lb beta sum: 0.0, worst -0.017329692840576172
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0737    transfer 0.0001    finalize 0.0002    func 0.0743    
Accumulated time: func 0.0743    prepare 0.0002    bound 0.0737    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 100] 
split level 1: [/input-16, 239] 
split level 2: [/input-16, 188] 
split level 3: [/input-16, 65] 
split level 4: [/input-12, 7467] 
split level 5: [/input-16, 126] 
split level 6: [/input-16, 43] 
split level 7: [/input-12, 7473] 
split level 8: [/input-12, 4724] 
split level 9: [/input-16, 132] 
split level 10: [/input-12, 1395] 
split level 11: [/input-16, 60] 
split level 12: [/input-12, 4733] 
split level 13: [/input-12, 7472] 
split level 14: [/input-12, 4725] 
split level 15: [/input-12, 3120] 
split level 16: [/input-12, 1388] 
split level 17: [/input-12, 6508] 
split level 18: [/input-12, 5546] 
split level 19: [/input-12, 5233] 
split level 20: [/input-12, 5203] 
split level 21: [/input-12, 5797] 
split level 22: [/input-4, 5030] 
split level 23: [/input-12, 5550] 
split level 24: [/input-12, 1765] 
split level 25: [/input-12, 5220] 
split level 26: [/input-12, 441] 
split level 27: [/input-12, 1398] 
split level 28: [/input-12, 532] 
split level 29: [/input-12, 2045] 
split level 30: [/input-4, 211] 
split level 31: [/input-12, 109] 
split level 32: [/input-12, 2412] 
split level 33: [/input-12, 4152] 
split level 34: [/input-12, 5817] 
split level 35: [/input-12, 5221] 
split level 36: [/input-12, 802] 
split level 37: [/input-12, 1764] 
split level 38: [/input-4, 1747] 
split level 39: [/input-12, 3924] 
split level 40: [/input-12, 3822] 
split level 41: [/input-12, 6772] 
split level 42: [/input-12, 4726] 
split level 43: [/input-12, 1819] 
split level 44: [/input-12, 6515] 
split level 45: [/input-4, 997] 
split level 46: [/input-12, 443] 
split level 47: [/input-12, 2187] 
split level 48: [/input-12, 2188] 
split level 49: [/input-12, 545] 
split level 50: [/input-4, 1754] 
split level 51: [/input-12, 8051] 
split level 52: [/input-4, 3240] 
split level 53: [/input-12, 893] 
split level 54: [/input-4, 4791] 
split level 55: [/input-12, 892] 
split level 56: [/input-12, 2212] 
split level 57: [/input-12, 548] 
split level 58: [/input-12, 4780] 
split level 59: [/input-12, 794] 
split level 60: [/input-12, 5204] 
split level 61: [/input-4, 1448] 
split level 62: [/input-12, 5818] 
split level 63: [/input-12, 5310] 
split level 64: [/input-4, 4793] 
split level 65: [/input-4, 3285] 
split level 66: [/input-4, 4820] 
split level 67: [/input-4, 1157] 
split level 68: [/input-12, 2934] 
split level 69: [/input-4, 3241] 
split level 70: [/input-12, 1028] 
split level 71: [/input-12, 1811] 
split level 72: [/input-4, 3767] 
split level 73: [/input-16, 37] 
split level 74: [/input-12, 5405] 
split level 75: [/input-12, 2039] 
split level 76: [/input-12, 2011] 
split level 77: [/input-12, 7905] 
split level 78: [/input-4, 6039] 
split level 79: [/input-4, 195] 
split level 80: [/input-4, 233] 
split level 81: [/input-4, 3012] 
split level 82: [/input-4, 1209] 
split level 83: [/input-4, 3224] 
split level 84: [/input-4, 225] 
split level 85: [/input-12, 2524] 
split level 86: [/input-12, 4583] 
split level 87: [/input-4, 166] 
split level 88: [/input-4, 168] 
split level 89: [/input-12, 4147] 
split level 90: [/input-12, 4214] 
split level 91: [/input-4, 7800] 
split level 92: [/input-4, 3794] 
split level 93: [/input-12, 4889] 
split level 94: [/input-4, 206] 
split level 95: [/input-4, 1245] 
split level 96: [/input-4, 5586] 
split level 97: [/input-12, 1769] 
split level 98: [/input-4, 3009] 
split level 99: [/input-12, 7927] 
split level 100: [/input-12, 3787] 
split level 101: [/input-4, 4557] 
split level 102: [/input-4, 1246] 
split level 103: [/input-12, 889] 
split level 104: [/input-12, 3925] 
split level 105: [/input-12, 787] 
split level 106: [/input-12, 1077] 
split level 107: [/input-12, 3819] 
split level 108: [/input-4, 235] 
split level 109: [/input-4, 1738] 
split level 110: [/input-12, 4563] 
split level 111: [/input-4, 2169] 
split level 112: [/input-12, 2554] 
split level 113: [/input-12, 1546] 
split level 114: [/input-4, 2954] 
split level 115: [/input-4, 5056] 
split level 116: [/input-4, 3011] 
split level 117: [/input-12, 3868] 
split level 118: [/input-12, 3811] 
split level 119: [/input-12, 3547] 
split level 120: [/input-4, 2257] 
split level 121: [/input-12, 2193] 
split level 122: [/input-4, 169] 
split level 123: [/input-4, 6363] 
split level 124: [/input-4, 3769] 
split level 125: [/input-4, 3267] 
split level 126: [/input-4, 2795] 
split level 127: [/input-4, 153] 
split level 128: [/input-4, 234] 
split level 129: [/input-12, 1029] 
split level 130: [/input-4, 5605] 
split level 131: [/input-12, 795] 
split level 132: [/input-12, 2585] 
split level 133: [/input-12, 1851] 
split level 134: [/input-12, 3514] 
split level 135: [/input-12, 1548] 
split level 136: [/input-12, 1688] 
split level 137: [/input-4, 1436] 
split level 138: [/input-4, 4546] 
split level 139: [/input-4, 8174] 
split level 140: [/input-12, 6244] 
split level 141: [/input-12, 126] 
split level 142: [/input-12, 5414] 
split level 143: [/input-4, 5867] 
split level 144: [/input-4, 3813] 
split level 145: [/input-12, 5688] 
split level 146: [/input-12, 5560] 
split level 147: [/input-4, 3814] 
split level 148: [/input-4, 3006] 
split level 149: [/input-4, 6757] 
split level 150: [/input-4, 3751] 
split level 151: [/input-12, 2527] 
split level 152: [/input-12, 1266] 
split level 153: [/input-4, 6554] 
split level 154: [/input-12, 1085] 
split level 155: [/input-12, 4582] 
split level 156: [/input-4, 6283] 
split level 157: [/input-4, 3259] 
split level 158: [/input-4, 5574] 
split level 159: [/input-4, 1682] 
split level 160: [/input-4, 7628] 
split level 161: [/input-12, 1740] 
split level 162: [/input-12, 2198] 
split level 163: [/input-12, 3907] 
split level 164: [/input-4, 6379] 
split level 165: [/input-4, 5496] 
split level 166: [/input-4, 5102] 
split level 167: [/input-12, 4447] 
split level 168: [/input-12, 5552] 
split level 169: [/input-4, 197] 
split level 170: [/input-4, 1186] 
split level 171: [/input-4, 146] 
split level 172: [/input-4, 4274] 
split level 173: [/input-4, 2154] 
split level 174: [/input-4, 5054] 
split level 175: [/input-4, 1989] 
split level 176: [/input-12, 4736] 
split level 177: [/input-12, 2326] 
split level 178: [/input-12, 3922] 
split level 179: [/input-4, 1242] 
split level 180: [/input-4, 5011] 
split level 181: [/input-4, 1248] 
split level 182: [/input-12, 7559] 
split level 183: [/input-12, 7841] 
split level 184: [/input-4, 6076] 
split level 185: [/input-4, 6279] 
split level 186: [/input-4, 3018] 
split level 187: [/input-12, 1558] 
split level 188: [/input-4, 4573] 
split level 189: [/input-4, 3042] 
split level 190: [/input-12, 4148] 
split level 191: [/input-4, 5732] 
split level 192: [/input-12, 2654] 
split level 193: [/input-4, 144] 
split level 194: [/input-4, 131] 
split level 195: [/input-4, 8083] 
split level 196: [/input-12, 2186] 
split level 197: [/input-12, 2189] 
split level 198: [/input-4, 4982] 
split level 199: [/input-4, 1163] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.017038822174072266
10 lb beta sum: 0.0, worst -0.017035961151123047
Time: prepare 0.0117    bound 0.1326    transfer 0.0033    finalize 0.0091    func 0.1593    
Accumulated time: func 0.2336    prepare 0.0219    bound 0.2063    transfer 0.0034    finalize 0.0094    
all_split False
======================Cut inference begins======================
max lb tensor(0.31699371) min lb tensor(-0.01703358)
Number of Verified Splits: 43 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.012732267379760742 
BICCOS Cumulative time: 0.012732267379760742
Preprocessing time: 0.01008915901184082 Inference time: 0.0016658306121826172 Add cuts time: 0.0007882118225097656 Cut analysis time: 0.00018906593322753906
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.7875    set_bounds 0.0089    solve 0.1594    add 0.0101    
Accumulated time: pickout 0.0003    decision 0.7875    set_bounds 0.0089    solve 0.1594    add 0.0101    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([100]), tensor([-1.]), tensor([0]), tensor([0.06506336]), tensor([0]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([100]), tensor([1.]), tensor([0]), tensor([0.06506336]), tensor([0]))}
Shallow branching resets to n domains:  2
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.09092187881469727

all verified at 0th iter
Time: prepare 0.0003    bound 0.0058    transfer 0.0001    finalize 0.0003    func 0.0065    
Accumulated time: func 0.2400    prepare 0.0222    bound 0.2121    transfer 0.0035    finalize 0.0096    
After pruning, left:  0

Back to Regular BaB


Properties batch 1, size 1
Remaining timeout: 197.06966185569763
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 197.069598197937
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 197.06957364082336
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 197.0695526599884
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 197.0695321559906
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.06951236724854
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.06949162483215
Verifying property 7 with 1 instances.
##### Instance 37 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.06119132]], device='cuda:0') need to verify.
Model prediction is: tensor([-64.68026733, -66.16740417, -67.57715607, -70.79747772, -67.87268066,
        -71.41768646, -71.98519897, -70.28328705, -65.53041840, -66.61916351],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.06119132]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1376
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 505
Node /39 input 0: size torch.Size([250]) unstable 28
-----------------
# of unstable neurons: 1909
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.0001220703125
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06112074851989746
10 lb beta sum: 0.0, worst -0.0611262321472168
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0746    transfer 0.0001    finalize 0.0002    func 0.0752    
Accumulated time: func 0.0752    prepare 0.0002    bound 0.0746    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 25] 
split level 1: [/input-16, 5] 
split level 2: [/input-16, 43] 
split level 3: [/input-16, 18] 
split level 4: [/input-16, 126] 
split level 5: [/input-16, 13] 
split level 6: [/input-16, 24] 
split level 7: [/input-16, 157] 
split level 8: [/input-16, 60] 
split level 9: [/input-12, 4147] 
split level 10: [/input-16, 239] 
split level 11: [/input-12, 545] 
split level 12: [/input-12, 3883] 
split level 13: [/input-16, 132] 
split level 14: [/input-12, 1077] 
split level 15: [/input-12, 548] 
split level 16: [/input-12, 4152] 
split level 17: [/input-12, 501] 
split level 18: [/input-12, 4726] 
split level 19: [/input-12, 368] 
split level 20: [/input-16, 65] 
split level 21: [/input-12, 2011] 
split level 22: [/input-12, 4148] 
split level 23: [/input-12, 5523] 
split level 24: [/input-12, 236] 
split level 25: [/input-12, 8051] 
split level 26: [/input-12, 7927] 
split level 27: [/input-12, 5550] 
split level 28: [/input-12, 2524] 
split level 29: [/input-12, 6244] 
split level 30: [/input-12, 3819] 
split level 31: [/input-12, 4140] 
split level 32: [/input-4, 997] 
split level 33: [/input-12, 1700] 
split level 34: [/input-12, 4785] 
split level 35: [/input-12, 228] 
split level 36: [/input-12, 1085] 
split level 37: [/input-12, 2004] 
split level 38: [/input-12, 6242] 
split level 39: [/input-12, 4153] 
split level 40: [/input-12, 4144] 
split level 41: [/input-12, 4428] 
split level 42: [/input-12, 3515] 
split level 43: [/input-12, 469] 
split level 44: [/input-12, 3924] 
split level 45: [/input-12, 2915] 
split level 46: [/input-12, 2588] 
split level 47: [/input-4, 7140] 
split level 48: [/input-12, 5515] 
split level 49: [/input-4, 1989] 
split level 50: [/input-12, 5507] 
split level 51: [/input-12, 3822] 
split level 52: [/input-12, 4214] 
split level 53: [/input-12, 1819] 
split level 54: [/input-12, 443] 
split level 55: [/input-12, 4780] 
split level 56: [/input-12, 1261] 
split level 57: [/input-4, 4325] 
split level 58: [/input-12, 227] 
split level 59: [/input-12, 6774] 
split level 60: [/input-4, 2741] 
split level 61: [/input-4, 1157] 
split level 62: [/input-12, 7844] 
split level 63: [/input-12, 7528] 
split level 64: [/input-12, 5324] 
split level 65: [/input-4, 5353] 
split level 66: [/input-12, 5660] 
split level 67: [/input-12, 1701] 
split level 68: [/input-12, 6523] 
split level 69: [/input-4, 6629] 
split level 70: [/input-12, 2585] 
split level 71: [/input-12, 4582] 
split level 72: [/input-12, 3514] 
split level 73: [/input-12, 3877] 
split level 74: [/input-12, 468] 
split level 75: [/input-12, 3374] 
split level 76: [/input-12, 109] 
split level 77: [/input-12, 2596] 
split level 78: [/input-12, 3508] 
split level 79: [/input-4, 4315] 
split level 80: [/input-12, 3569] 
split level 81: [/input-12, 481] 
split level 82: [/input-4, 1474] 
split level 83: [/input-4, 3822] 
split level 84: [/input-12, 7905] 
split level 85: [/input-12, 2237] 
split level 86: [/input-4, 2745] 
split level 87: [/input-12, 2613] 
split level 88: [/input-4, 2727] 
split level 89: [/input-4, 2728] 
split level 90: [/input-12, 2197] 
split level 91: [/input-12, 6772] 
split level 92: [/input-4, 6249] 
split level 93: [/input-4, 6628] 
split level 94: [/input-12, 4913] 
split level 95: [/input-12, 2234] 
split level 96: [/input-4, 7800] 
split level 97: [/input-12, 5404] 
split level 98: [/input-12, 868] 
split level 99: [/input-12, 2593] 
split level 100: [/input-12, 2614] 
split level 101: [/input-12, 471] 
split level 102: [/input-12, 5430] 
split level 103: [/input-12, 780] 
split level 104: [/input-12, 2412] 
split level 105: [/input-12, 4447] 
split level 106: [/input-12, 1253] 
split level 107: [/input-4, 5017] 
split level 108: [/input-4, 4982] 
split level 109: [/input-4, 5859] 
split level 110: [/input-12, 5330] 
split level 111: [/input-12, 2612] 
split level 112: [/input-12, 5405] 
split level 113: [/input-12, 2238] 
split level 114: [/input-4, 4061] 
split level 115: [/input-12, 459] 
split level 116: [/input-4, 1398] 
split level 117: [/input-12, 126] 
split level 118: [/input-12, 4372] 
split level 119: [/input-4, 2181] 
split level 120: [/input-4, 1495] 
split level 121: [/input-12, 3899] 
split level 122: [/input-12, 5915] 
split level 123: [/input-12, 4379] 
split level 124: [/input-12, 7977] 
split level 125: [/input-12, 4118] 
split level 126: [/input-4, 1278] 
split level 127: [/input-12, 5532] 
split level 128: [/input-4, 8083] 
split level 129: [/input-4, 2934] 
split level 130: [/input-4, 4482] 
split level 131: [/input-4, 6262] 
split level 132: [/input-12, 4409] 
split level 133: [/input-4, 3189] 
split level 134: [/input-12, 4889] 
split level 135: [/input-12, 4443] 
split level 136: [/input-4, 5102] 
split level 137: [/input-12, 1546] 
split level 138: [/input-4, 4951] 
split level 139: [/input-4, 6073] 
split level 140: [/input-12, 2233] 
split level 141: [/input-4, 4741] 
split level 142: [/input-4, 3700] 
split level 143: [/input-4, 4729] 
split level 144: [/input-12, 7608] 
split level 145: [/input-12, 3967] 
split level 146: [/input-4, 4711] 
split level 147: [/input-12, 532] 
split level 148: [/input-4, 2164] 
split level 149: [/input-12, 1448] 
split level 150: [/input-4, 8174] 
split level 151: [/input-12, 4903] 
split level 152: [/input-4, 3557] 
split level 153: [/input-12, 88] 
split level 154: [/input-4, 1397] 
split level 155: [/input-12, 7969] 
split level 156: [/input-4, 7628] 
split level 157: [/input-4, 3716] 
split level 158: [/input-4, 7849] 
split level 159: [/input-12, 1549] 
split level 160: [/input-12, 3476] 
split level 161: [/input-12, 1548] 
split level 162: [/input-4, 8082] 
split level 163: [/input-4, 4468] 
split level 164: [/input-12, 1550] 
split level 165: [/input-4, 4725] 
split level 166: [/input-4, 5819] 
split level 167: [/input-4, 6883] 
split level 168: [/input-4, 6850] 
split level 169: [/input-4, 5004] 
split level 170: [/input-12, 3901] 
split level 171: [/input-4, 4782] 
split level 172: [/input-12, 2200] 
split level 173: [/input-12, 1459] 
split level 174: [/input-12, 441] 
split level 175: [/input-12, 1740] 
split level 176: [/input-4, 131] 
split level 177: [/input-4, 6283] 
split level 178: [/input-12, 1395] 
split level 179: [/input-4, 5877] 
split level 180: [/input-12, 3907] 
split level 181: [/input-4, 4696] 
split level 182: [/input-4, 3718] 
split level 183: [/input-4, 1248] 
split level 184: [/input-12, 2212] 
split level 185: [/input-12, 3120] 
split level 186: [/input-4, 1365] 
split level 187: [/input-12, 4180] 
split level 188: [/input-12, 4580] 
split level 189: [/input-12, 3561] 
split level 190: [/input-4, 146] 
split level 191: [/input-12, 463] 
split level 192: [/input-4, 4760] 
split level 193: [/input-4, 3734] 
split level 194: [/input-4, 6884] 
split level 195: [/input-4, 3191] 
split level 196: [/input-12, 4584] 
split level 197: [/input-12, 1030] 
split level 198: [/input-4, 4466] 
split level 199: [/input-4, 6074] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06094837188720703
10 lb beta sum: 0.0, worst -0.06094765663146973
Time: prepare 0.0116    bound 0.1375    transfer 0.0024    finalize 0.0085    func 0.1625    
Accumulated time: func 0.2377    prepare 0.0217    bound 0.2121    transfer 0.0025    finalize 0.0087    
all_split False
======================Cut inference begins======================
max lb tensor(0.38960457) min lb tensor(-0.06094337)
Number of Verified Splits: 9 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.01102590560913086 
BICCOS Cumulative time: 0.01102590560913086
Preprocessing time: 0.010190010070800781 Inference time: 0.0003895759582519531 Add cuts time: 0.0001461505889892578 Cut analysis time: 0.0003001689910888672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05019 (1), -0.05007 (1), -0.05003 (1), -0.04977 (1), -0.04965 (1), -0.04961 (1), -0.04958 (1), -0.04955 (1), -0.04932 (1), -0.04883 (1), -0.04843 (1), -0.04800 (1), -0.04674 (1), -0.04669 (1), -0.04607 (1), -0.04597 (1), -0.04571 (1), -0.04563 (1), -0.04558 (1), -0.04533 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.7826    set_bounds 0.0128    solve 0.1626    add 0.0855    
Accumulated time: pickout 0.0004    decision 0.7826    set_bounds 0.0128    solve 0.1626    add 0.0855    
Current (lb-rhs): -0.0501861572265625
50 domains visited
Cumulative time: 1.153078317642212

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 5] [/input-16, 25] [/input-16, 25] [/input-16, 5] [/input-16, 5] [/input-16, 25] [/input-16, 25] [/input-16, 25] [/input-16, 25] [/input-16, 25] 
split level 1: [/input-16, 25] [/input-16, 5] [/input-16, 5] [/input-16, 43] [/input-16, 25] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 43] [/input-16, 5] 
split level 2: [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 43] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 18] 
split level 3: [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.028540849685668945

all verified at 1th iter
Time: prepare 0.0076    bound 0.0160    transfer 0.0015    finalize 0.0053    func 0.0330    
Accumulated time: func 0.2707    prepare 0.0295    bound 0.2281    transfer 0.0040    finalize 0.0140    
all_split False
======================Cut inference begins======================
max lb tensor(0.21198964) min lb tensor(0.00021744)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.03471851348876953 
BICCOS Cumulative time: 0.04574441909790039
Preprocessing time: 0.011794090270996094 Inference time: 0.015053033828735352 Add cuts time: 0.0076961517333984375 Cut analysis time: 0.00017523765563964844
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0007    decision 0.0254    set_bounds 0.0121    solve 0.0331    add 0.0162    
Accumulated time: pickout 0.0010    decision 0.8079    set_bounds 0.0249    solve 0.1957    add 0.1017    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([24, 25]), tensor([-1., -1.]), tensor([0, 0]), tensor([-1.26703856e+34,  2.13519618e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([24, 25]), tensor([-1.,  1.]), tensor([0, 0]), tensor([-1.26703856e+34,  4.54259366e-02]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([24, 25]), tensor([ 1., -1.]), tensor([0, 0]), tensor([-1.26703856e+34,  2.13673875e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([24, 25]), tensor([1., 1.]), tensor([0, 0]), tensor([-1.26703856e+34,  1.30963832e-01]), tensor([0, 1]))}
Shallow branching resets to n domains:  4
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0007922649383544922

all verified at 1th iter
Time: prepare 0.0004    bound 0.0139    transfer 0.0002    finalize 0.0003    func 0.0148    
Accumulated time: func 0.2855    prepare 0.0299    bound 0.2420    transfer 0.0042    finalize 0.0143    
After pruning, left:  0

Back to Regular BaB


Properties batch 8, size 1
Remaining timeout: 195.57973170280457
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 4.4204 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 38, vnnlib ID: 38 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-32.55001068, -32.76752472, -27.70714378, -28.11469078, -27.48128891,
         -28.23542786, -26.45696640, -29.08260918, -33.45193100, -31.02325058]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1173]; unstable size 1173; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 81, 1, 1173] with unstable size 80 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 42, 1, 1173] with unstable size 41 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1173] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [651]; unstable size 651; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 42, 1, 651] with unstable size 41 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 651] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [41]; unstable size 41; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 41] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.30356979,  3.97908258,  0.23746872,  0.64328551, -0.03222275,
          0.67342263,  1.17413449,  5.25128651,  2.60561395]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-32.55001068, -32.76752472, -27.70714378, -28.11469078, -27.48128891,
         -28.23542786, -26.45696640, -29.08260918, -33.45193100, -31.02325058]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.27it/s]100%|██████████| 1/1 [00:00<00:00,  8.26it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-31.72961426, -32.15378571, -26.85308075, -27.35823059, -26.56164932,
          -27.45627022, -25.82541466, -28.19728279, -32.63410568, -30.40867615]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.73623466]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1239 seconds.
PGD attack failed
verified_status unknown
verified_success False

all verified at 3th iter
best_l after optimization: 19.150863647460938
alpha/beta optimization time: 0.06342792510986328
initial alpha-crown bounds: tensor([[4.34376526, 4.02430391, 0.26089585, 0.66673577, 0.00828385, 0.69858563,
         1.21196198, 5.29221487, 2.64411759]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 0 ; Worst class: (+ rhs) 0.008283853530883789
verified with init bound!
Result: safe-incomplete in 0.2322 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 39, vnnlib ID: 39 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-33.36982346, -33.74578094, -30.16389656, -30.16520691, -29.52587318,
         -30.63605690, -27.64332962, -31.59208107, -35.22317505, -33.11197662]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1198]; unstable size 1198; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 84, 1, 1198] with unstable size 83 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 34, 1, 1198] with unstable size 33 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1198] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [636]; unstable size 636; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 34, 1, 636] with unstable size 33 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 636] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [33]; unstable size 33; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.10294628, 3.65202332, 1.41367555, 1.69482911, 0.80661857, 2.08194733,
         2.23493624, 5.60068655, 3.40243459]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0373 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 40, vnnlib ID: 40 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-56.93875122, -62.64696121, -60.29984665, -61.62555313, -62.05960846,
         -62.23727798, -64.28294373, -61.66979980, -61.49340439, -63.59194183]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1106]; unstable size 1106; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 477, 1, 1106] with unstable size 476 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 24, 1, 1106] with unstable size 23 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1106] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [476]; unstable size 476; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 24, 1, 476] with unstable size 23 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 476] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [23]; unstable size 23; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.84121823, 2.18509388, 3.35330868, 3.65298486, 3.95561314, 5.60361195,
         3.29741430, 3.36051035, 4.83438206]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0366 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 41, vnnlib ID: 41 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-61.11892319, -64.71479797, -63.45914841, -63.06198120, -63.25735092,
         -63.19579315, -64.10837555, -63.39159012, -57.04975128, -62.96732330]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1255]; unstable size 1255; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 503, 1, 1255] with unstable size 502 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 26, 1, 1255] with unstable size 25 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1255] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [502]; unstable size 502; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 26, 1, 502] with unstable size 25 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 502] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [25]; unstable size 25; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.09205937, 5.88272667, 5.08893633, 4.52708197, 4.68411732, 4.57160091,
         5.65382957, 4.54312229, 4.05847454]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0399 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 42, vnnlib ID: 42 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-44.01074219, -46.31268311, -41.53026199, -41.41550827, -42.18536758,
         -41.69894409, -39.82271576, -44.40677643, -44.98052597, -45.72920990]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1322]; unstable size 1322; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 85, 1, 1322] with unstable size 84 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 39, 1, 1322] with unstable size 38 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1322] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [632]; unstable size 632; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 39, 1, 632] with unstable size 38 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 632] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [38]; unstable size 38; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 38] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.45902133, 3.91059399, 0.59382892, 0.67754924, 1.09864187, 0.86412191,
         2.43638301, 2.74438810, 3.32649088]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0399 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 43, vnnlib ID: 43 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-30.35104752, -32.67350769, -26.79523849, -27.73198509, -26.18577194,
         -27.79446983, -25.78666115, -27.69655418, -32.25708771, -31.39225578]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1331]; unstable size 1331; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 80, 1, 1331] with unstable size 79 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 47, 1, 1331] with unstable size 46 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1331] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [681]; unstable size 681; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 47, 1, 681] with unstable size 46 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 681] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [46]; unstable size 46; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 46] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.39488542,  1.56950355, -2.23770380, -0.26650351, -2.63899469,
         -3.13375282, -1.30783188,  1.59532905,  0.28540707]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-30.35104752, -32.67350769, -26.79523849, -27.73198509, -26.18577194,
         -27.79446983, -25.78666115, -27.69655418, -32.25708771, -31.39225578]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-30.35105324, -32.67350388, -26.79524231, -27.73198128, -26.18577194,
          -27.79446793, -25.78665924, -27.69655228, -32.25708389, -31.39225960],
         [-30.35105324, -32.67350388, -26.79524231, -27.73198128, -26.18577194,
          -27.79446793, -25.78665924, -27.69655228, -32.25708389, -31.39225960]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.99922562, -0.06248665, -1.60869598, -2.00780869, -0.09791565]]],
       device='cuda:0')
number of violation:  5
clean attack image tensor([[[[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]]]],
       device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0567 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 44, vnnlib ID: 44 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-36.98879623, -39.78601074, -34.34716034, -36.22712326, -34.46820450,
         -36.75178528, -35.05856323, -37.03714371, -38.71305084, -39.42150879]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1922]; unstable size 1922; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 79, 1, 1922] with unstable size 78 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 42, 1, 1922] with unstable size 41 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1922] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [724]; unstable size 724; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 42, 1, 724] with unstable size 41 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 724] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [41]; unstable size 41; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 41] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.98783076,  3.24135876,  0.84595633, -0.48275951,  1.32616830,
         -0.32513881,  1.32095098,  2.81099224,  2.97730732]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-36.98879623, -39.78601074, -34.34716034, -36.22712326, -34.46820450,
         -36.75178528, -35.05856323, -37.03714371, -38.71305084, -39.42150879]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-37.01920319, -39.70361328, -34.41619492, -36.10545349, -34.35525131,
          -36.62501144, -35.04478455, -36.86394501, -38.74125290, -39.29176331],
         [-37.01920319, -39.70361328, -34.41619492, -36.10545349, -34.35525131,
          -36.62501144, -35.04478455, -36.86394501, -38.74125290, -39.29176331]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.06094360,  0.62858963]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0064 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0479 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 45, vnnlib ID: 45 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-52.74232864, -52.51841354, -51.55333328, -52.13553238, -51.48021317,
         -52.30912018, -52.27637482, -52.97279739, -51.49191666, -52.03668976]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1285]; unstable size 1285; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 84, 1, 1285] with unstable size 83 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 29, 1, 1285] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1285] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [513]; unstable size 513; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 29, 1, 513] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 513] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [28]; unstable size 28; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.28153467, -2.72726393, -2.12566519, -2.89338398, -1.98821878,
         -2.05832052, -1.45333195, -2.34750080, -1.42266750]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-52.74232864, -52.51841354, -51.55333328, -52.13553238, -51.48021317,
         -52.30912018, -52.27637482, -52.97279739, -51.49191666, -52.03668976]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-52.74232483, -52.51841354, -51.55333328, -52.13552856, -51.48020935,
          -52.30912018, -52.27637100, -52.97279358, -51.49191284, -52.03668976],
         [-52.74232483, -52.51841354, -51.55333328, -52.13552856, -51.48020935,
          -52.30912018, -52.27637100, -52.97279358, -51.49191284, -52.03668976]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.22391129, -0.96508026, -0.38288498, -1.03820419, -0.20929337,
          -0.24204254,  0.45438004, -1.02650070, -0.48172379]]],
       device='cuda:0')
number of violation:  7
clean attack image tensor([[[[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         ...,


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]]]], device='cuda:0') torch.Size([1, 9, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0586 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 46, vnnlib ID: 46 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-45.13564682, -47.43756104, -42.03643417, -41.71133041, -42.29084015,
         -41.89345551, -42.05363083, -43.21925735, -47.24848557, -47.07003784]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1618]; unstable size 1618; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 87, 1, 1618] with unstable size 86 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 35, 1, 1618] with unstable size 34 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1618] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [617]; unstable size 617; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 35, 1, 617] with unstable size 34 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 617] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [34]; unstable size 34; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 34] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.75042331,  3.67109156, -0.91408920, -0.31403357, -0.80177069,
         -0.62397337, -0.01102924,  3.62038398,  3.50358200]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-45.13564682, -47.43756104, -42.03643417, -41.71133041, -42.29084015,
         -41.89345551, -42.05363083, -43.21925735, -47.24848557, -47.07003784]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-45.13564682, -47.43755722, -42.03643036, -41.71133423, -42.29083633,
          -41.89345169, -42.05363083, -43.21925354, -47.24848175, -47.07003784],
         [-45.13564682, -47.43755722, -42.03643036, -41.71133423, -42.29083633,
          -41.89345169, -42.05363083, -43.21925354, -47.24848175, -47.07003784]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.14297867, -0.18211746,  0.39738464,  0.16017914,  1.32580185]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]],


         [[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]],


         [[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]],


         [[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]],


         [[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]]]],
       device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0499 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 47, vnnlib ID: 47 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-70.73844147, -74.01277924, -73.30245209, -75.29197693, -73.65782166,
         -75.96274567, -75.98954773, -74.73736572, -66.99603271, -73.69287872]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1242]; unstable size 1242; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 341, 1, 1242] with unstable size 340 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 16, 1, 1242] with unstable size 15 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1242] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [340]; unstable size 340; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 16, 1, 340] with unstable size 15 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 340] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [15]; unstable size 15; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.81666636, 5.76582527, 5.18286133, 7.11525059, 5.34241629, 7.75445223,
         7.77307796, 6.40385008, 5.68047857]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0359 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 48, vnnlib ID: 48 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-37.76497269, -38.72602081, -34.80842209, -32.89048386, -34.58295059,
         -32.43755341, -33.60171890, -33.65731049, -39.55265427, -37.36612701]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1453]; unstable size 1453; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 85, 1, 1453] with unstable size 84 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 39, 1, 1453] with unstable size 38 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1453] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [608]; unstable size 608; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 39, 1, 608] with unstable size 38 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 608] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [38]; unstable size 38; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 38] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.48441100,  3.86506701,  1.03175282,  0.23507315,  0.63811684,
          0.04701185, -0.17994300,  4.91053391,  2.72856617]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-37.76497269, -38.72602081, -34.80842209, -32.89048386, -34.58295059,
         -32.43755341, -33.60171890, -33.65731049, -39.55265427, -37.36612701]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.28it/s]100%|██████████| 1/1 [00:00<00:00,  8.27it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-37.40191269, -38.38393402, -34.46888733, -32.71484375, -34.21141052,
          -32.28158569, -33.45552444, -33.07287598, -39.22408295, -37.05296326]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.79129028]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1236 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 17.494243621826172
alpha/beta optimization time: 1.4633409976959229
initial alpha-crown bounds: tensor([[ 3.60540056,  3.98260689,  1.09342337,  0.24490112,  0.71185374,
          0.09885645, -0.10968959,  5.04532814,  2.82156372]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.10968959331512451
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.3734655380249
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.37342524528503
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.37339854240417
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.3733766078949
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.37335681915283
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.37333631515503
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 198.37331652641296
Verifying property 6 with 1 instances.
##### Instance 48 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.10968959]], device='cuda:0') need to verify.
Model prediction is: tensor([-37.76497269, -38.72602081, -34.80842209, -32.89048386, -34.58295059,
        -32.43755341, -33.60171890, -33.65731049, -39.55265427, -37.36612701],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.10968959]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1453
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 599
Node /39 input 0: size torch.Size([250]) unstable 36
-----------------
# of unstable neurons: 2088
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00011277198791503906
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10964137315750122
10 lb beta sum: 0.0, worst -0.10964491963386536
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0738    transfer 0.0001    finalize 0.0002    func 0.0744    
Accumulated time: func 0.0744    prepare 0.0002    bound 0.0738    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 31] 
split level 1: [/input-16, 73] 
split level 2: [/input-16, 7] 
split level 3: [/input-16, 225] 
split level 4: [/input-16, 126] 
split level 5: [/input-16, 10] 
split level 6: [/input-16, 166] 
split level 7: [/input-16, 180] 
split level 8: [/input-16, 129] 
split level 9: [/input-16, 230] 
split level 10: [/input-12, 2252] 
split level 11: [/input-12, 7779] 
split level 12: [/input-12, 5554] 
split level 13: [/input-12, 1690] 
split level 14: [/input-12, 5517] 
split level 15: [/input-12, 2578] 
split level 16: [/input-12, 7147] 
split level 17: [/input-12, 1443] 
split level 18: [/input-12, 3622] 
split level 19: [/input-12, 7585] 
split level 20: [/input-12, 1822] 
split level 21: [/input-12, 7797] 
split level 22: [/input-12, 2365] 
split level 23: [/input-12, 819] 
split level 24: [/input-12, 6997] 
split level 25: [/input-12, 5516] 
split level 26: [/input-12, 2461] 
split level 27: [/input-16, 247] 
split level 28: [/input-12, 7560] 
split level 29: [/input-12, 8020] 
split level 30: [/input-12, 5353] 
split level 31: [/input-12, 8018] 
split level 32: [/input-12, 2587] 
split level 33: [/input-12, 5555] 
split level 34: [/input-12, 812] 
split level 35: [/input-12, 2454] 
split level 36: [/input-12, 5525] 
split level 37: [/input-12, 2251] 
split level 38: [/input-12, 6251] 
split level 39: [/input-12, 6250] 
split level 40: [/input-12, 2253] 
split level 41: [/input-12, 5509] 
split level 42: [/input-12, 7565] 
split level 43: [/input-12, 875] 
split level 44: [/input-12, 5561] 
split level 45: [/input-12, 1194] 
split level 46: [/input-12, 3613] 
split level 47: [/input-12, 7211] 
split level 48: [/input-12, 7586] 
split level 49: [/input-12, 5522] 
split level 50: [/input-12, 809] 
split level 51: [/input-12, 2351] 
split level 52: [/input-12, 5324] 
split level 53: [/input-12, 5538] 
split level 54: [/input-12, 2323] 
split level 55: [/input-12, 794] 
split level 56: [/input-12, 1444] 
split level 57: [/input-12, 6228] 
split level 58: [/input-12, 2594] 
split level 59: [/input-12, 3924] 
split level 60: [/input-12, 6235] 
split level 61: [/input-12, 3328] 
split level 62: [/input-12, 5546] 
split level 63: [/input-12, 801] 
split level 64: [/input-12, 2462] 
split level 65: [/input-12, 4906] 
split level 66: [/input-12, 6491] 
split level 67: [/input-12, 802] 
split level 68: [/input-12, 5822] 
split level 69: [/input-12, 1213] 
split level 70: [/input-12, 6481] 
split level 71: [/input-12, 5361] 
split level 72: [/input-4, 3274] 
split level 73: [/input-12, 2342] 
split level 74: [/input-12, 2445] 
split level 75: [/input-12, 6492] 
split level 76: [/input-12, 436] 
split level 77: [/input-12, 1259] 
split level 78: [/input-12, 2577] 
split level 79: [/input-12, 5641] 
split level 80: [/input-12, 3908] 
split level 81: [/input-12, 4138] 
split level 82: [/input-12, 2332] 
split level 83: [/input-12, 6051] 
split level 84: [/input-12, 5648] 
split level 85: [/input-4, 5331] 
split level 86: [/input-12, 797] 
split level 87: [/input-12, 6212] 
split level 88: [/input-12, 7230] 
split level 89: [/input-4, 7076] 
split level 90: [/input-12, 808] 
split level 91: [/input-12, 1215] 
split level 92: [/input-12, 6230] 
split level 93: [/input-12, 3289] 
split level 94: [/input-12, 5547] 
split level 95: [/input-12, 1697] 
split level 96: [/input-12, 5226] 
split level 97: [/input-4, 1450] 
split level 98: [/input-4, 5050] 
split level 99: [/input-12, 2524] 
split level 100: [/input-12, 3411] 
split level 101: [/input-12, 2531] 
split level 102: [/input-12, 3281] 
split level 103: [/input-12, 2772] 
split level 104: [/input-4, 4826] 
split level 105: [/input-12, 7146] 
split level 106: [/input-12, 5506] 
split level 107: [/input-12, 8035] 
split level 108: [/input-12, 5325] 
split level 109: [/input-4, 3258] 
split level 110: [/input-12, 2803] 
split level 111: [/input-4, 3273] 
split level 112: [/input-12, 2245] 
split level 113: [/input-12, 1269] 
split level 114: [/input-12, 6996] 
split level 115: [/input-12, 5362] 
split level 116: [/input-12, 5329] 
split level 117: [/input-12, 6502] 
split level 118: [/input-12, 1160] 
split level 119: [/input-12, 7577] 
split level 120: [/input-4, 6552] 
split level 121: [/input-12, 5821] 
split level 122: [/input-12, 1849] 
split level 123: [/input-12, 757] 
split level 124: [/input-12, 2802] 
split level 125: [/input-12, 8008] 
split level 126: [/input-12, 4883] 
split level 127: [/input-12, 3458] 
split level 128: [/input-12, 8017] 
split level 129: [/input-4, 3670] 
split level 130: [/input-12, 6246] 
split level 131: [/input-12, 5190] 
split level 132: [/input-4, 3096] 
split level 133: [/input-12, 1212] 
split level 134: [/input-4, 4008] 
split level 135: [/input-12, 2343] 
split level 136: [/input-12, 1814] 
split level 137: [/input-12, 2017] 
split level 138: [/input-12, 3280] 
split level 139: [/input-4, 4827] 
split level 140: [/input-12, 7895] 
split level 141: [/input-12, 4432] 
split level 142: [/input-4, 4888] 
split level 143: [/input-4, 1080] 
split level 144: [/input-12, 1996] 
split level 145: [/input-12, 5531] 
split level 146: [/input-12, 1453] 
split level 147: [/input-12, 6472] 
split level 148: [/input-12, 3305] 
split level 149: [/input-12, 1956] 
split level 150: [/input-12, 7576] 
split level 151: [/input-4, 3686] 
split level 152: [/input-4, 3654] 
split level 153: [/input-4, 5329] 
split level 154: [/input-4, 4889] 
split level 155: [/input-4, 6501] 
split level 156: [/input-12, 5762] 
split level 157: [/input-12, 2542] 
split level 158: [/input-12, 2246] 
split level 159: [/input-4, 1698] 
split level 160: [/input-4, 8026] 
split level 161: [/input-12, 7568] 
split level 162: [/input-4, 2476] 
split level 163: [/input-12, 2250] 
split level 164: [/input-12, 5143] 
split level 165: [/input-12, 1332] 
split level 166: [/input-12, 2911] 
split level 167: [/input-4, 2839] 
split level 168: [/input-4, 1084] 
split level 169: [/input-4, 5586] 
split level 170: [/input-12, 5230] 
split level 171: [/input-12, 2027] 
split level 172: [/input-12, 2525] 
split level 173: [/input-4, 4378] 
split level 174: [/input-4, 8072] 
split level 175: [/input-4, 5045] 
split level 176: [/input-4, 1561] 
split level 177: [/input-4, 3703] 
split level 178: [/input-12, 1200] 
split level 179: [/input-4, 1470] 
split level 180: [/input-12, 2034] 
split level 181: [/input-12, 1541] 
split level 182: [/input-12, 6188] 
split level 183: [/input-12, 7219] 
split level 184: [/input-4, 6632] 
split level 185: [/input-12, 6484] 
split level 186: [/input-12, 1442] 
split level 187: [/input-12, 5347] 
split level 188: [/input-12, 2508] 
split level 189: [/input-4, 3777] 
split level 190: [/input-4, 7720] 
split level 191: [/input-4, 4664] 
split level 192: [/input-4, 4667] 
split level 193: [/input-4, 4514] 
split level 194: [/input-4, 6499] 
split level 195: [/input-4, 3669] 
split level 196: [/input-12, 4760] 
split level 197: [/input-4, 1367] 
split level 198: [/input-12, 1168] 
split level 199: [/input-4, 1515] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10942304134368896
10 lb beta sum: 0.0, worst -0.10941958427429199
Time: prepare 0.0116    bound 0.1362    transfer 0.0024    finalize 0.0084    func 0.1611    
Accumulated time: func 0.2355    prepare 0.0216    bound 0.2100    transfer 0.0025    finalize 0.0086    
all_split False
======================Cut inference begins======================
max lb tensor(0.17494538) min lb tensor(-0.10941893)
Number of Verified Splits: 9 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.010688543319702148 
BICCOS Cumulative time: 0.010688543319702148
Preprocessing time: 0.009981155395507812 Inference time: 0.00038313865661621094 Add cuts time: 0.0001583099365234375 Cut analysis time: 0.0001659393310546875
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.7813    set_bounds 0.0094    solve 0.1612    add 0.0099    
Accumulated time: pickout 0.0003    decision 0.7813    set_bounds 0.0094    solve 0.1612    add 0.0099    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([31]), tensor([-1.]), tensor([0]), tensor([0.00032720]), tensor([0]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([31]), tensor([1.]), tensor([0]), tensor([0.00032720]), tensor([0]))}
Shallow branching resets to n domains:  2
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04716557264328003

all verified at 1th iter
Time: prepare 0.0003    bound 0.0173    transfer 0.0001    finalize 0.0003    func 0.0181    
Accumulated time: func 0.2536    prepare 0.0220    bound 0.2274    transfer 0.0027    finalize 0.0088    
After pruning, left:  0

Back to Regular BaB


Properties batch 7, size 1
Remaining timeout: 197.0487720966339
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.04871225357056
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.9513 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 49, vnnlib ID: 49 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-52.12164307, -48.82020950, -53.30535507, -54.62094879, -54.05992126,
         -54.87238312, -53.14328384, -54.12695694, -51.47784424, -52.49237061]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1367]; unstable size 1367; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 84, 1, 1367] with unstable size 83 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 31, 1, 1367] with unstable size 30 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1367] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [615]; unstable size 615; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 31, 1, 615] with unstable size 30 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 615] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [30]; unstable size 30; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.60344696, 1.95596695, 3.53216076, 2.65353394, 3.72463894, 2.07529640,
         2.63402462, 0.85971403, 2.33160496]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0931 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 50, vnnlib ID: 50 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-51.93007660, -52.79420471, -50.65008545, -50.56381607, -49.97460556,
         -50.57520294, -51.48264694, -52.99600983, -52.65720749, -53.31124878]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1865]; unstable size 1865; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 83, 1, 1865] with unstable size 82 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 22, 1, 1865] with unstable size 21 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1865] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [576]; unstable size 576; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 22, 1, 576] with unstable size 21 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 576] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [21]; unstable size 21; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.15090567,  0.42230892, -0.67626768, -0.12599742, -1.42490423,
         -0.10434663,  1.13250923,  0.77220881,  1.30103111]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-51.93007660, -52.79420471, -50.65008545, -50.56381607, -49.97460556,
         -50.57520294, -51.48264694, -52.99600983, -52.65720749, -53.31124878]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-51.93008423, -52.79420090, -50.65008545, -50.56381989, -49.97460556,
          -50.57521057, -51.48264313, -52.99600601, -52.65720367, -53.31124878],
         [-51.93008423, -52.79420090, -50.65008545, -50.56381989, -49.97460556,
          -50.57521057, -51.48264313, -52.99600601, -52.65720367, -53.31124878]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.35487366,  0.07487488, -0.01139069, -0.60060501,  0.90743256]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.1030 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 51, vnnlib ID: 51 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-53.19715881, -60.34614944, -55.67786026, -58.08418274, -56.17668915,
         -58.85007477, -58.07608414, -59.88093185, -56.65227890, -60.24586487]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1368]; unstable size 1368; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 309, 1, 1368] with unstable size 308 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 15, 1, 1368] with unstable size 14 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1368] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [308]; unstable size 308; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 15, 1, 308] with unstable size 14 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 308] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [14]; unstable size 14; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.27083921, 1.86903918, 4.16864395, 2.29795694, 4.91491461, 4.16276217,
         5.91211224, 2.54213786, 6.12312984]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0905 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 52, vnnlib ID: 52 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-54.09417343, -59.03852844, -52.54130173, -50.83718872, -52.32003784,
         -50.62448502, -52.29300308, -52.52729034, -58.21152878, -58.01560974]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1442]; unstable size 1442; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 85, 1, 1442] with unstable size 84 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 33, 1, 1442] with unstable size 32 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1442] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [644]; unstable size 644; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 33, 1, 644] with unstable size 32 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 644] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [32]; unstable size 32; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 32] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.68103766, 6.27970123, 0.76230001, 0.04264230, 0.55950117, 0.44369173,
         0.57101250, 5.56108665, 5.21320438]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0452 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 53, vnnlib ID: 53 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-57.89048767, -62.98054886, -58.41598511, -58.76818466, -59.31199646,
         -58.76137161, -57.91069794, -59.35720825, -62.84897232, -61.03285980]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1161]; unstable size 1161; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 449, 1, 1161] with unstable size 448 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 17, 1, 1161] with unstable size 16 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1161] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [448]; unstable size 448; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 17, 1, 448] with unstable size 16 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 448] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [16]; unstable size 16; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.07916415,  3.85072112, -0.62886906,  0.11691236,  0.29926360,
          0.07486665,  0.20172143,  3.65703726,  1.98270607]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-57.89048767, -62.98054886, -58.41598511, -58.76818466, -59.31199646,
         -58.76137161, -57.91069794, -59.35720825, -62.84897232, -61.03285980]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-57.89049530, -62.98055649, -58.41598511, -58.76818848, -59.31200409,
          -58.76137924, -57.91070557, -59.35721588, -62.84897995, -61.03286743],
         [-57.89049530, -62.98055649, -58.41598511, -58.76818848, -59.31200409,
          -58.76137924, -57.91070557, -59.35721588, -62.84897995, -61.03286743]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.02021027,  0.50527954]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.53492093,  1.47142887,  1.45555580,  ..., -0.78253967,
            -0.78253967, -0.51269841],
           [ 1.56666696,  1.53492093,  1.50317490,  ..., -0.73492062,
            -0.70317459, -0.36984116],
           [ 1.63015902,  1.59841299,  1.56666696,  ..., -0.63968253,
            -0.56031746, -0.14761895],
           ...,
           [ 1.48730183,  1.21746063,  1.09047651,  ...,  1.40793681,
             1.37619078,  1.34444475],
           [ 1.45555580,  1.28095269,  1.28095269,  ...,  1.45555580,
             1.40793681,  1.37619078],
           [ 1.39206374,  1.37619078,  1.37619078,  ...,  1.51904786,
             1.47142887,  1.42380977]],

          [[ 1.67471850,  1.61030626,  1.59420323,  ..., -0.48309177,
            -0.48309177, -0.24154577],
           [ 1.70692456,  1.65861547,  1.62640929,  ..., -0.43478248,
            -0.41867942, -0.08051517],
           [ 1.75523376,  1.72302771,  1.69082153,  ..., -0.33816412,
            -0.25764883,  0.12882459],
           ...,
           [ 1.65861547,  1.41706955,  1.22383285,  ...,  1.57810009,
             1.54589403,  1.52979100],
           [ 1.59420323,  1.43317258,  1.41706955,  ...,  1.61030626,
             1.57810009,  1.54589403],
           [ 1.52979100,  1.49758482,  1.52979100,  ...,  1.65861547,
             1.62640929,  1.59420323]],

          [[ 1.39580250,  1.33583248,  1.32084000,  ..., -0.97301346,
            -0.92803597, -0.61319339],
           [ 1.45577252,  1.41079497,  1.38081002,  ..., -0.94302845,
            -0.85307342, -0.46326834],
           [ 1.54572761,  1.51574254,  1.48575759,  ..., -0.83808094,
            -0.70314842, -0.26836565],
           ...,
           [ 1.51574254,  1.23088503,  0.91604215,  ...,  1.41079497,
             1.30584753,  1.29085493],
           [ 1.47076499,  1.26086998,  1.17091501,  ...,  1.53073502,
             1.39580250,  1.33583248],
           [ 1.32084000,  1.26086998,  1.29085493,  ...,  1.68066013,
             1.51574254,  1.42578757]]],


         [[[ 1.53492093,  1.47142887,  1.45555580,  ..., -0.78253967,
            -0.78253967, -0.51269841],
           [ 1.56666696,  1.53492093,  1.50317490,  ..., -0.73492062,
            -0.70317459, -0.36984116],
           [ 1.63015902,  1.59841299,  1.56666696,  ..., -0.63968253,
            -0.56031746, -0.14761895],
           ...,
           [ 1.48730183,  1.21746063,  1.09047651,  ...,  1.40793681,
             1.37619078,  1.34444475],
           [ 1.45555580,  1.28095269,  1.28095269,  ...,  1.45555580,
             1.40793681,  1.37619078],
           [ 1.39206374,  1.37619078,  1.37619078,  ...,  1.51904786,
             1.47142887,  1.42380977]],

          [[ 1.67471850,  1.61030626,  1.59420323,  ..., -0.48309177,
            -0.48309177, -0.24154577],
           [ 1.70692456,  1.65861547,  1.62640929,  ..., -0.43478248,
            -0.41867942, -0.08051517],
           [ 1.75523376,  1.72302771,  1.69082153,  ..., -0.33816412,
            -0.25764883,  0.12882459],
           ...,
           [ 1.65861547,  1.41706955,  1.22383285,  ...,  1.57810009,
             1.54589403,  1.52979100],
           [ 1.59420323,  1.43317258,  1.41706955,  ...,  1.61030626,
             1.57810009,  1.54589403],
           [ 1.52979100,  1.49758482,  1.52979100,  ...,  1.65861547,
             1.62640929,  1.59420323]],

          [[ 1.39580250,  1.33583248,  1.32084000,  ..., -0.97301346,
            -0.92803597, -0.61319339],
           [ 1.45577252,  1.41079497,  1.38081002,  ..., -0.94302845,
            -0.85307342, -0.46326834],
           [ 1.54572761,  1.51574254,  1.48575759,  ..., -0.83808094,
            -0.70314842, -0.26836565],
           ...,
           [ 1.51574254,  1.23088503,  0.91604215,  ...,  1.41079497,
             1.30584753,  1.29085493],
           [ 1.47076499,  1.26086998,  1.17091501,  ...,  1.53073502,
             1.39580250,  1.33583248],
           [ 1.32084000,  1.26086998,  1.29085493,  ...,  1.68066013,
             1.51574254,  1.42578757]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0450 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 54, vnnlib ID: 54 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-41.83774567, -41.97327423, -40.80497742, -40.92567825, -41.35543442,
         -41.16407776, -41.62870407, -39.61708832, -38.40651703, -41.40180969]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1450]; unstable size 1450; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 84, 1, 1450] with unstable size 83 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 20, 1, 1450] with unstable size 19 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1450] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [564]; unstable size 564; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 20, 1, 564] with unstable size 19 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 564] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [19]; unstable size 19; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.36008716,  2.08133960,  0.72550559,  1.01738548,  1.12667203,
          1.21178186,  1.60106206, -0.38544291,  1.89680147]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-41.83774567, -41.97327423, -40.80497742, -40.92567825, -41.35543442,
         -41.16407776, -41.62870407, -39.61708832, -38.40651703, -41.40180969]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.28it/s]100%|██████████| 1/1 [00:00<00:00,  8.28it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-41.30092239, -41.51042175, -39.97282410, -40.04963684, -40.46431732,
          -40.26837540, -40.78676987, -38.56888580, -38.10645676, -40.89028931]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.46242905]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1236 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 12.693793296813965
alpha/beta optimization time: 1.4626259803771973
initial alpha-crown bounds: tensor([[ 2.42094946,  2.27826977,  0.83705640,  1.11355853,  1.23095393,
          1.31122684,  1.70320463, -0.28409052,  2.08266449]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.284090518951416
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.37205505371094
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.37201619148254
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.37198972702026
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.37196850776672
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.37194871902466
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.37192821502686
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 198.3719084262848
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 198.3718867301941
Verifying property 7 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.28409052]], device='cuda:0') need to verify.
Model prediction is: tensor([-41.83774567, -41.97327423, -40.80497742, -40.92567825, -41.35543442,
        -41.16407776, -41.62870407, -39.61708832, -38.40651703, -41.40180969],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.28409052]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1450
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 549
Node /39 input 0: size torch.Size([250]) unstable 19
-----------------
# of unstable neurons: 2018
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00011348724365234375
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.28403836488723755
10 lb beta sum: 0.0, worst -0.28403645753860474
Time: prepare 0.0002    bound 0.1237    transfer 0.0001    finalize 0.0002    func 0.1243    
Accumulated time: func 0.1243    prepare 0.0002    bound 0.1237    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 115] 
split level 1: [/input-16, 95] 
split level 2: [/input-16, 186] 
split level 3: [/input-16, 10] 
split level 4: [/input-16, 248] 
split level 5: [/input-16, 110] 
split level 6: [/input-16, 64] 
split level 7: [/input-16, 235] 
split level 8: [/input-16, 28] 
split level 9: [/input-16, 103] 
split level 10: [/input-12, 2924] 
split level 11: [/input-12, 2915] 
split level 12: [/input-16, 166] 
split level 13: [/input-12, 4213] 
split level 14: [/input-12, 2468] 
split level 15: [/input-12, 4221] 
split level 16: [/input-12, 800] 
split level 17: [/input-16, 89] 
split level 18: [/input-12, 804] 
split level 19: [/input-12, 795] 
split level 20: [/input-12, 817] 
split level 21: [/input-12, 6020] 
split level 22: [/input-12, 7963] 
split level 23: [/input-12, 398] 
split level 24: [/input-12, 7349] 
split level 25: [/input-12, 7955] 
split level 26: [/input-12, 787] 
split level 27: [/input-12, 407] 
split level 28: [/input-12, 809] 
split level 29: [/input-12, 5548] 
split level 30: [/input-12, 397] 
split level 31: [/input-12, 1993] 
split level 32: [/input-12, 1051] 
split level 33: [/input-12, 4210] 
split level 34: [/input-12, 5517] 
split level 35: [/input-12, 2459] 
split level 36: [/input-12, 2410] 
split level 37: [/input-12, 7972] 
split level 38: [/input-12, 5316] 
split level 39: [/input-12, 2458] 
split level 40: [/input-12, 2033] 
split level 41: [/input-12, 4395] 
split level 42: [/input-4, 3274] 
split level 43: [/input-4, 1079] 
split level 44: [/input-12, 4396] 
split level 45: [/input-12, 2460] 
split level 46: [/input-12, 2508] 
split level 47: [/input-12, 5355] 
split level 48: [/input-12, 3645] 
split level 49: [/input-12, 5291] 
split level 50: [/input-12, 5514] 
split level 51: [/input-12, 2457] 
split level 52: [/input-12, 808] 
split level 53: [/input-12, 825] 
split level 54: [/input-12, 5546] 
split level 55: [/input-12, 2466] 
split level 56: [/input-12, 2549] 
split level 57: [/input-12, 824] 
split level 58: [/input-12, 2334] 
split level 59: [/input-12, 2411] 
split level 60: [/input-12, 7945] 
split level 61: [/input-12, 7216] 
split level 62: [/input-12, 7950] 
split level 63: [/input-12, 402] 
split level 64: [/input-12, 7689] 
split level 65: [/input-12, 5397] 
split level 66: [/input-12, 7465] 
split level 67: [/input-12, 1389] 
split level 68: [/input-12, 7949] 
split level 69: [/input-12, 2018] 
split level 70: [/input-12, 2461] 
split level 71: [/input-12, 5176] 
split level 72: [/input-4, 5577] 
split level 73: [/input-12, 4131] 
split level 74: [/input-12, 3956] 
split level 75: [/input-12, 2451] 
split level 76: [/input-4, 3497] 
split level 77: [/input-12, 6778] 
split level 78: [/input-4, 185] 
split level 79: [/input-12, 5508] 
split level 80: [/input-12, 4202] 
split level 81: [/input-12, 2499] 
split level 82: [/input-4, 5073] 
split level 83: [/input-12, 3490] 
split level 84: [/input-12, 2331] 
split level 85: [/input-12, 390] 
split level 86: [/input-12, 1355] 
split level 87: [/input-4, 6345] 
split level 88: [/input-4, 3785] 
split level 89: [/input-12, 375] 
split level 90: [/input-12, 7857] 
split level 91: [/input-12, 5403] 
split level 92: [/input-4, 3770] 
split level 93: [/input-12, 7957] 
split level 94: [/input-12, 2058] 
split level 95: [/input-4, 5025] 
split level 96: [/input-4, 3655] 
split level 97: [/input-12, 728] 
split level 98: [/input-4, 1732] 
split level 99: [/input-12, 5142] 
split level 100: [/input-12, 2442] 
split level 101: [/input-12, 388] 
split level 102: [/input-12, 3411] 
split level 103: [/input-4, 73] 
split level 104: [/input-12, 2057] 
split level 105: [/input-4, 5574] 
split level 106: [/input-12, 2653] 
split level 107: [/input-4, 5610] 
split level 108: [/input-4, 1592] 
split level 109: [/input-4, 4310] 
split level 110: [/input-12, 4450] 
split level 111: [/input-4, 1682] 
split level 112: [/input-4, 102] 
split level 113: [/input-12, 5427] 
split level 114: [/input-12, 2026] 
split level 115: [/input-4, 197] 
split level 116: [/input-4, 1733] 
split level 117: [/input-12, 2941] 
split level 118: [/input-12, 5143] 
split level 119: [/input-4, 3496] 
split level 120: [/input-4, 8083] 
split level 121: [/input-12, 7920] 
split level 122: [/input-12, 5821] 
split level 123: [/input-4, 1236] 
split level 124: [/input-4, 3272] 
split level 125: [/input-4, 5594] 
split level 126: [/input-12, 3506] 
split level 127: [/input-12, 5125] 
split level 128: [/input-12, 7434] 
split level 129: [/input-4, 134] 
split level 130: [/input-12, 1236] 
split level 131: [/input-12, 4763] 
split level 132: [/input-12, 1805] 
split level 133: [/input-12, 3278] 
split level 134: [/input-4, 2011] 
split level 135: [/input-4, 57] 
split level 136: [/input-4, 3894] 
split level 137: [/input-4, 76] 
split level 138: [/input-4, 1720] 
split level 139: [/input-12, 830] 
split level 140: [/input-4, 50] 
split level 141: [/input-4, 3801] 
split level 142: [/input-4, 7065] 
split level 143: [/input-4, 5383] 
split level 144: [/input-12, 2337] 
split level 145: [/input-12, 5653] 
split level 146: [/input-4, 1715] 
split level 147: [/input-4, 4292] 
split level 148: [/input-4, 3656] 
split level 149: [/input-12, 7958] 
split level 150: [/input-12, 8025] 
split level 151: [/input-4, 133] 
split level 152: [/input-4, 4311] 
split level 153: [/input-12, 7703] 
split level 154: [/input-4, 3638] 
split level 155: [/input-12, 4865] 
split level 156: [/input-4, 5560] 
split level 157: [/input-12, 2068] 
split level 158: [/input-4, 3671] 
split level 159: [/input-4, 5746] 
split level 160: [/input-4, 1083] 
split level 161: [/input-4, 2954] 
split level 162: [/input-4, 1118] 
split level 163: [/input-4, 6342] 
split level 164: [/input-12, 6257] 
split level 165: [/input-12, 4921] 
split level 166: [/input-4, 5496] 
split level 167: [/input-4, 44] 
split level 168: [/input-12, 4866] 
split level 169: [/input-12, 2478] 
split level 170: [/input-12, 8168] 
split level 171: [/input-4, 5081] 
split level 172: [/input-4, 3298] 
split level 173: [/input-12, 6021] 
split level 174: [/input-4, 213] 
split level 175: [/input-4, 4548] 
split level 176: [/input-4, 5799] 
split level 177: [/input-4, 4436] 
split level 178: [/input-4, 1105] 
split level 179: [/input-4, 3402] 
split level 180: [/input-4, 4563] 
split level 181: [/input-4, 4263] 
split level 182: [/input-4, 3787] 
split level 183: [/input-4, 49] 
split level 184: [/input-12, 3083] 
split level 185: [/input-4, 4872] 
split level 186: [/input-4, 4615] 
split level 187: [/input-12, 344] 
split level 188: [/input-12, 1346] 
split level 189: [/input-4, 5436] 
split level 190: [/input-4, 3001] 
split level 191: [/input-4, 3811] 
split level 192: [/input-12, 5258] 
split level 193: [/input-4, 6151] 
split level 194: [/input-4, 3269] 
split level 195: [/input-4, 214] 
split level 196: [/input-4, 138] 
split level 197: [/input-4, 33] 
split level 198: [/input-4, 5434] 
split level 199: [/input-4, 1763] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.28359782695770264
10 lb beta sum: 0.0, worst -0.2835972309112549
Time: prepare 0.0115    bound 0.1358    transfer 0.0016    finalize 0.0083    func 0.1597    
Accumulated time: func 0.2840    prepare 0.0216    bound 0.2595    transfer 0.0017    finalize 0.0085    
all_split False
======================Cut inference begins======================
max lb tensor(0.42108482) min lb tensor(-0.28359532)
Number of Verified Splits: 6 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.011327028274536133 
BICCOS Cumulative time: 0.011327028274536133
Preprocessing time: 0.010220527648925781 Inference time: 0.00027489662170410156 Add cuts time: 0.00012373924255371094 Cut analysis time: 0.0007078647613525391
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.27001 (1), -0.26996 (1), -0.26912 (1), -0.26891 (1), -0.26884 (1), -0.26811 (1), -0.26794 (1), -0.26752 (1), -0.26731 (1), -0.26688 (1), -0.26666 (1), -0.26626 (1), -0.26615 (1), -0.26603 (1), -0.26569 (1), -0.26545 (1), -0.26497 (1), -0.26437 (1), -0.26400 (1), -0.26356 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7820    set_bounds 0.0094    solve 0.1598    add 0.0910    
Accumulated time: pickout 0.0003    decision 0.7820    set_bounds 0.0094    solve 0.1598    add 0.0910    
Current (lb-rhs): -0.27001112699508667
50 domains visited
Cumulative time: 1.1853547096252441

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] 
split level 1: [/input-16, 95] [/input-16, 186] [/input-16, 95] [/input-16, 186] [/input-16, 95] [/input-16, 95] [/input-16, 186] [/input-16, 95] [/input-16, 95] [/input-16, 95] 
split level 2: [/input-16, 10] [/input-16, 95] [/input-16, 186] [/input-16, 95] [/input-16, 186] [/input-16, 186] [/input-16, 95] [/input-16, 186] [/input-16, 186] [/input-16, 186] 
split level 3: [/input-16, 235] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 235] [/input-16, 235] [/input-16, 10] [/input-16, 10] [/input-16, 10] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.250424325466156
10 lb beta sum: 1.118734359741211, worst -0.22886082530021667
Time: prepare 0.0074    bound 0.1559    transfer 0.0016    finalize 0.0060    func 0.1734    
Accumulated time: func 0.4574    prepare 0.0292    bound 0.4154    transfer 0.0033    finalize 0.0145    
all_split False
======================Cut inference begins======================
max lb tensor(0.45683992) min lb tensor(-0.22884226)
Number of Verified Splits: 116 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.019057273864746094 
BICCOS Cumulative time: 0.030384302139282227
Preprocessing time: 0.011750936508178711 Inference time: 0.005127668380737305 Add cuts time: 0.0018768310546875 Cut analysis time: 0.0003018379211425781
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12483 (2), -0.12440 (2), -0.12365 (2), -0.12358 (2), -0.12351 (2), -0.12335 (2), -0.12332 (2), -0.12318 (2), -0.12295 (2), -0.12157 (2), -0.12093 (2), -0.12081 (2), -0.11923 (2), -0.11754 (2), -0.11720 (2), -0.11715 (2), -0.11696 (2), -0.11582 (2), -0.11524 (2), -0.11305 (2), 
Length of domains: 50
Time: pickout 0.0007    decision 0.0252    set_bounds 0.0122    solve 0.1735    add 0.0951    
Accumulated time: pickout 0.0010    decision 0.8072    set_bounds 0.0216    solve 0.3332    add 0.1861    
Current (lb-rhs): -0.12482798099517822
100 domains visited
Cumulative time: 1.511284351348877

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] 
split level 1: [/input-16, 95] [/input-16, 186] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] 
split level 2: [/input-16, 186] [/input-16, 95] [/input-16, 186] [/input-16, 186] [/input-16, 10] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 186] 
split level 3: [/input-16, 235] [/input-16, 235] [/input-16, 235] [/input-16, 235] [/input-16, 235] [/input-16, 235] [/input-16, 235] [/input-16, 64] [/input-16, 64] [/input-16, 235] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1608870029449463
10 lb beta sum: 1.6502110958099365, worst -0.09282547235488892
Time: prepare 0.0075    bound 0.1545    transfer 0.0016    finalize 0.0061    func 0.1724    
Accumulated time: func 0.6298    prepare 0.0370    bound 0.5699    transfer 0.0048    finalize 0.0206    
all_split False
======================Cut inference begins======================
max lb tensor(0.59278095) min lb tensor(-0.09240049)
Number of Verified Splits: 207 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 24
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.025833845138549805 
BICCOS Cumulative time: 0.05621814727783203
Preprocessing time: 0.011582612991333008 Inference time: 0.008717060089111328 Add cuts time: 0.004767894744873047 Cut analysis time: 0.0007662773132324219
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02651 (3), -0.02650 (3), -0.02627 (3), -0.02626 (3), -0.02626 (3), -0.02626 (3), -0.02619 (3), -0.02528 (3), -0.02526 (3), -0.02525 (3), -0.02524 (3), -0.02514 (3), -0.02511 (3), -0.02489 (3), -0.02489 (3), -0.02489 (3), -0.02488 (3), -0.02488 (3), -0.02487 (3), -0.02475 (3), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0253    set_bounds 0.0154    solve 0.1725    add 0.1052    
Accumulated time: pickout 0.0016    decision 0.8325    set_bounds 0.0370    solve 0.5058    add 0.2914    
Current (lb-rhs): -0.026509344577789307
150 domains visited
Cumulative time: 1.8564860820770264

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] 
split level 1: [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 186] [/input-16, 95] 
split level 2: [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 95] [/input-16, 186] 
split level 3: [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13057708740234375
10 lb beta sum: 2.981571912765503, worst -0.03227931261062622
Time: prepare 0.0069    bound 0.2002    transfer 0.0016    finalize 0.0072    func 0.2191    
Accumulated time: func 0.8490    prepare 0.0442    bound 0.7702    transfer 0.0064    finalize 0.0278    
all_split False
======================Cut inference begins======================
max lb tensor(0.69989729) min lb tensor(-0.01515174)
Number of Verified Splits: 329 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 63.
#cuts 1-3: 24
#cuts 4-6: 39
#cuts >= 20: 0
BICCOS time: 0.037149667739868164 
BICCOS Cumulative time: 0.0933678150177002
Preprocessing time: 0.011688470840454102 Inference time: 0.01568317413330078 Add cuts time: 0.008119344711303711 Cut analysis time: 0.0016586780548095703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01514 (4), -0.01483 (4), -0.01482 (4), -0.01482 (4), -0.01481 (4), -0.01471 (4), -0.01471 (4), -0.01471 (4), -0.01470 (4), -0.01284 (4), -0.01283 (4), -0.01283 (4), -0.01283 (4), -0.00927 (4), -0.00926 (4), -0.00926 (4), -0.00926 (4), -0.00570 (4), -0.00569 (4), -0.00569 (4), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0253    set_bounds 0.0154    solve 0.2192    add 0.2722    
Accumulated time: pickout 0.0022    decision 0.8578    set_bounds 0.0523    solve 0.7250    add 0.5636    
Current (lb-rhs): -0.015135407447814941
200 domains visited
Cumulative time: 2.426603317260742

Shallow-BaB round 5
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 186] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 95] [/input-16, 186] [/input-16, 115] 
split level 1: [/input-16, 95] [/input-16, 186] [/input-16, 95] [/input-16, 95] [/input-16, 186] [/input-16, 95] [/input-16, 95] [/input-16, 186] [/input-16, 95] [/input-16, 95] 
split level 2: [/input-16, 64] [/input-16, 64] [/input-16, 186] [/input-16, 64] [/input-16, 64] [/input-16, 186] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] 
split level 3: [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 103] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11828863620758057
10 lb beta sum: 2.503430128097534, worst -0.007378727197647095
Time: prepare 0.0078    bound 0.1999    transfer 0.0016    finalize 0.0052    func 0.2170    
Accumulated time: func 1.0660    prepare 0.0523    bound 0.9700    transfer 0.0080    finalize 0.0330    
all_split False
======================Cut inference begins======================
max lb tensor(0.97855461) min lb tensor(-0.00721219)
Number of Verified Splits: 348 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 97.
#cuts 1-3: 24
#cuts 4-6: 73
#cuts >= 20: 0
BICCOS time: 0.04631185531616211 
BICCOS Cumulative time: 0.1396796703338623
Preprocessing time: 0.011634111404418945 Inference time: 0.016748666763305664 Add cuts time: 0.014951467514038086 Cut analysis time: 0.002977609634399414
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00721 (5), -0.00721 (5), -0.00703 (5), -0.00702 (5), -0.00702 (5), -0.00702 (5), -0.00702 (5), -0.00701 (5), -0.00701 (5), -0.00701 (5), -0.00701 (5), -0.00701 (5), -0.00701 (5), -0.00701 (5), -0.00701 (5), -0.00701 (5), -0.00700 (5), -0.00700 (5), -0.00632 (5), -0.00622 (5), 
Length of domains: 50
Time: pickout 0.0007    decision 0.0257    set_bounds 0.0157    solve 0.2171    add 0.2267    
Accumulated time: pickout 0.0029    decision 0.8835    set_bounds 0.0680    solve 0.9421    add 0.7902    
Current (lb-rhs): -0.007209599018096924
250 domains visited
Cumulative time: 2.9590208530426025

Restore {'/input-4': ([], [], [], [], []), '/input-12': ([2924], [-1.0], [0], [0.0001279583666473627], [0]), '/input-16': (tensor([ 10, 115,  95]), tensor([-1., -1., -1.]), tensor([0, 0, 0]), tensor([0.13415720, 0.06644274, 0.01555304]), tensor([1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([2924], [-1.0], [0], [0.0001279583666473627], [0]), '/input-16': (tensor([ 10, 115,  95]), tensor([-1., -1.,  1.]), tensor([0, 0, 0]), tensor([0.13415720, 0.06644274, 0.57870525]), tensor([1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([2924], [-1.0], [0], [0.0001279583666473627], [0]), '/input-16': (tensor([ 10, 115]), tensor([-1.,  1.]), tensor([0, 0]), tensor([0.13415720, 0.60660714]), tensor([1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([2924], [-1.0], [0], [0.0001279583666473627], [0]), '/input-16': (tensor([ 10, 115,  95, 186]), tensor([ 1., -1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([0.13611726, 0.06585942, 0.02006225, 0.10132460]), tensor([1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([2924], [-1.0], [0], [0.0001279583666473627], [0]), '/input-16': (tensor([ 10, 115,  95, 186]), tensor([ 1., -1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([0.13611726, 0.06585942, 0.02006225, 0.02390231]), tensor([1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([2924], [-1.0], [0], [0.0001279583666473627], [0]), '/input-16': (tensor([ 10, 115,  95]), tensor([ 1., -1.,  1.]), tensor([0, 0, 0]), tensor([0.13611726, 0.06585942, 0.69034058]), tensor([1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([2924], [-1.0], [0], [0.0001279583666473627], [0]), '/input-16': (tensor([ 10, 115]), tensor([1., 1.]), tensor([0, 0]), tensor([0.13611726, 0.61586463]), tensor([1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': (tensor([2924]), tensor([1.]), tensor([0]), tensor([-1.26703856e+34]), tensor([0])), '/input-16': ([], [], [], [], [])}
Shallow branching resets to n domains:  8
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.27842408418655396
10 lb beta sum: 2.7474889755249023, worst -0.12388372421264648
Time: prepare 0.0006    bound 0.1858    transfer 0.0002    finalize 0.0004    func 0.1871    
Accumulated time: func 1.2531    prepare 0.0528    bound 1.1559    transfer 0.0082    finalize 0.0334    
After pruning, left:  1

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 115] 
split level 1: [/input-16, 95] 
split level 2: [/input-16, 186] 
split level 3: [/input-16, 10] 
cut re-enabled after branching node selection
0 lb beta sum: 3.5284299850463867, worst -0.04860424995422363
10 lb beta sum: 3.681260347366333, worst -0.044180870056152344
Time: prepare 0.0010    bound 0.1853    transfer 0.0002    finalize 0.0007    func 0.1874    
Accumulated time: func 1.4405    prepare 0.0541    bound 1.3412    transfer 0.0084    finalize 0.0341    
all_split False
======================Cut inference begins======================
max lb tensor(0.62482154) min lb tensor(-0.04404640)
Number of Verified Splits: 14 of 16
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 3.528430223464966, worst -0.05426812171936035
10 lb beta sum: 3.6508984565734863, worst -0.04425162076950073
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 97.
#cuts 1-3: 24
#cuts 4-6: 73
#cuts >= 20: 0
BICCOS time: 0.20013761520385742 
BICCOS Cumulative time: 0.3398172855377197
Preprocessing time: 0.000812530517578125 Inference time: 0.19057416915893555 Add cuts time: 0.005883932113647461 Cut analysis time: 0.002866983413696289
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04405 (4), -0.03230 (4), 
Length of domains: 2
Time: pickout 0.0004    decision 0.0176    set_bounds 0.0011    solve 0.1875    add 0.0010    
Accumulated time: pickout 0.0033    decision 0.9011    set_bounds 0.0691    solve 1.1296    add 0.7913    
Current (lb-rhs): -0.04404640197753906
252 domains visited
Cumulative time: 3.5745644569396973

BaB round 2
batch: 2
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 64] [/input-16, 64] 
split level 1: [/input-16, 235] [/input-16, 235] 
split level 2: [/input-16, 103] [/input-16, 103] 
cut re-enabled after branching node selection
0 lb beta sum: 4.860028266906738, worst -0.04404693841934204
10 lb beta sum: 4.860028266906738, worst -0.04392439126968384
Time: prepare 0.0010    bound 0.1836    transfer 0.0003    finalize 0.0006    func 0.1856    
Accumulated time: func 1.6261    prepare 0.0553    bound 1.5248    transfer 0.0087    finalize 0.0347    
all_split False
======================Cut inference begins======================
max lb tensor(1.42873299) min lb tensor(-0.04387170)
Number of Verified Splits: 14 of 16
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 4.860029220581055, worst -0.33201777935028076
10 lb beta sum: 4.968112945556641, worst -0.04562222957611084
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 97.
#cuts 1-3: 24
#cuts 4-6: 73
#cuts >= 20: 0
BICCOS time: 0.20119690895080566 
BICCOS Cumulative time: 0.5410141944885254
Preprocessing time: 0.0008025169372558594 Inference time: 0.1915726661682129 Add cuts time: 0.005834341049194336 Cut analysis time: 0.002987384796142578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04387 (7), -0.03212 (7), 
Length of domains: 2
Time: pickout 0.0005    decision 0.0132    set_bounds 0.0013    solve 0.1856    add 0.0009    
Accumulated time: pickout 0.0037    decision 0.9143    set_bounds 0.0704    solve 1.3152    add 0.7922    
Current (lb-rhs): -0.04387170076370239
254 domains visited
Cumulative time: 3.977578639984131

BaB round 3
batch: 2
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 248] [/input-16, 248] 
split level 1: [/input-12, 2468] [/input-12, 2468] 
split level 2: [/input-12, 804] [/input-12, 804] 
cut re-enabled after branching node selection
0 lb beta sum: 4.860028266906738, worst -0.029224157333374023
10 lb beta sum: 4.860028266906738, worst -0.029018282890319824
Time: prepare 0.0010    bound 0.1843    transfer 0.0002    finalize 0.0007    func 0.1864    
Accumulated time: func 1.8125    prepare 0.0565    bound 1.7090    transfer 0.0089    finalize 0.0354    
all_split False
======================Cut inference begins======================
max lb tensor(0.05039501) min lb tensor(-0.02894759)
Number of Verified Splits: 8 of 16
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 4.8600287437438965, worst -0.12821805477142334

all verified at 2th iter
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 97.
#cuts 1-3: 24
#cuts 4-6: 73
#cuts >= 20: 0
BICCOS time: 0.04223370552062988 
BICCOS Cumulative time: 0.5832479000091553
Preprocessing time: 0.0007810592651367188 Inference time: 0.03279471397399902 Add cuts time: 0.005799770355224609 Cut analysis time: 0.0028581619262695312
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02895 (10), -0.02732 (10), -0.01751 (10), -0.01549 (10), -0.01362 (10), -0.00922 (10), -0.00425 (10), -0.00103 (10), 
Length of domains: 8
Time: pickout 0.0004    decision 0.0132    set_bounds 0.0018    solve 0.1864    add 0.0012    
Accumulated time: pickout 0.0042    decision 0.9275    set_bounds 0.0722    solve 1.5016    add 0.7934    
Current (lb-rhs): -0.02894759178161621
262 domains visited
Cumulative time: 4.22303318977356

BaB round 4
batch: 8
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2915] [/input-12, 2915] [/input-12, 2915] [/input-12, 2915] [/input-12, 2915] [/input-12, 2915] [/input-12, 2915] [/input-12, 2915] 
cut re-enabled after branching node selection
0 lb beta sum: 4.860028266906738, worst -0.028947651386260986
10 lb beta sum: 4.860028266906738, worst -0.028904080390930176
Time: prepare 0.0010    bound 0.1848    transfer 0.0002    finalize 0.0005    func 0.1866    
Accumulated time: func 1.9991    prepare 0.0577    bound 1.8938    transfer 0.0091    finalize 0.0359    
all_split False
======================Cut inference begins======================
max lb tensor(0.01909113) min lb tensor(-0.02887440)
Number of Verified Splits: 8 of 16
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 98.
#cuts 1-3: 25
#cuts 4-6: 73
#cuts >= 20: 0
BICCOS time: 0.010213375091552734 
BICCOS Cumulative time: 0.593461275100708
Preprocessing time: 0.0007855892181396484 Inference time: 0.0007088184356689453 Add cuts time: 0.005837917327880859 Cut analysis time: 0.0028810501098632812
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02887 (11), -0.02724 (11), -0.01742 (11), -0.01541 (11), -0.01308 (11), -0.00859 (11), -0.00375 (11), -0.00016 (11), 
Length of domains: 8
Time: pickout 0.0004    decision 0.0137    set_bounds 0.0010    solve 0.1866    add 0.0011    
Accumulated time: pickout 0.0046    decision 0.9412    set_bounds 0.0732    solve 1.6882    add 0.7944    
Current (lb-rhs): -0.02887439727783203
270 domains visited
Cumulative time: 4.436267137527466

BaB round 5
batch: 8
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 89] [/input-16, 89] [/input-16, 89] [/input-16, 89] [/input-16, 89] [/input-16, 89] [/input-16, 89] [/input-16, 89] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04101991653442383
10 lb beta sum: 2.388113021850586, worst -0.028854310512542725
Time: prepare 0.0006    bound 0.1830    transfer 0.0002    finalize 0.0005    func 0.1845    
Accumulated time: func 2.1836    prepare 0.0585    bound 2.0768    transfer 0.0093    finalize 0.0364    
all_split False
======================Cut inference begins======================
max lb tensor(0.44505620) min lb tensor(-0.02882457)
Number of Verified Splits: 8 of 16
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 98.
#cuts 1-3: 25
#cuts 4-6: 73
#cuts >= 20: 0
BICCOS time: 0.01013326644897461 
BICCOS Cumulative time: 0.6035945415496826
Preprocessing time: 0.0007836818695068359 Inference time: 0.0007827281951904297 Add cuts time: 0.005723476409912109 Cut analysis time: 0.0028433799743652344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02882 (12), -0.02721 (12), -0.01742 (12), -0.01541 (12), -0.01286 (12), -0.00828 (12), -0.00349 (12), -0.00016 (12), 
Length of domains: 8
Time: pickout 0.0004    decision 0.0134    set_bounds 0.0010    solve 0.1845    add 0.0011    
Accumulated time: pickout 0.0050    decision 0.9546    set_bounds 0.0742    solve 1.8727    add 0.7955    
Current (lb-rhs): -0.028824567794799805
278 domains visited
Cumulative time: 4.647022724151611

BaB round 6
batch: 8
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-12, 809] [/input-16, 166] [/input-12, 809] 
cut re-enabled after branching node selection
0 lb beta sum: 2.7002108097076416, worst -0.028824210166931152
10 lb beta sum: 2.700329542160034, worst -0.18545669317245483
Time: prepare 0.0011    bound 0.1826    transfer 0.0002    finalize 0.0005    func 0.1845    
Accumulated time: func 2.3681    prepare 0.0598    bound 2.2594    transfer 0.0095    finalize 0.0369    
all_split False
======================Cut inference begins======================
max lb tensor(0.38948071) min lb tensor(-0.02880454)
Number of Verified Splits: 7 of 16
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 98.
#cuts 1-3: 25
#cuts 4-6: 73
#cuts >= 20: 0
BICCOS time: 0.009996891021728516 
BICCOS Cumulative time: 0.6135914325714111
Preprocessing time: 0.00077056884765625 Inference time: 0.0006892681121826172 Add cuts time: 0.005640983581542969 Cut analysis time: 0.0028960704803466797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02880 (13), -0.02080 (13), -0.01854 (13), -0.01742 (13), -0.01541 (13), -0.00803 (13), -0.00634 (13), -0.00410 (13), -0.00329 (13), 
Length of domains: 9
Time: pickout 0.0004    decision 0.0134    set_bounds 0.0011    solve 0.1845    add 0.0011    
Accumulated time: pickout 0.0054    decision 0.9680    set_bounds 0.0753    solve 2.0573    add 0.7965    
Current (lb-rhs): -0.028804540634155273
287 domains visited
Cumulative time: 4.857610702514648

BaB round 7
batch: 9
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 809] [/input-12, 7349] [/input-12, 809] [/input-12, 398] [/input-16, 166] [/input-12, 398] [/input-16, 166] [/input-16, 166] [/input-16, 166] 
cut re-enabled after branching node selection
0 lb beta sum: 2.7652053833007812, worst -0.02246534824371338
10 lb beta sum: 2.769547939300537, worst -0.18161582946777344
Time: prepare 0.0011    bound 0.1865    transfer 0.0002    finalize 0.0005    func 0.1885    
Accumulated time: func 2.5566    prepare 0.0611    bound 2.4459    transfer 0.0097    finalize 0.0374    
all_split False
======================Cut inference begins======================
max lb tensor(0.01721966) min lb tensor(-0.02242923)
Number of Verified Splits: 7 of 18
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 98.
#cuts 1-3: 25
#cuts 4-6: 73
#cuts >= 20: 0
BICCOS time: 0.01006317138671875 
BICCOS Cumulative time: 0.6236546039581299
Preprocessing time: 0.0008637905120849609 Inference time: 0.0007126331329345703 Add cuts time: 0.005652427673339844 Cut analysis time: 0.002834320068359375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02243 (14), -0.02079 (14), -0.02018 (14), -0.01853 (14), -0.01305 (14), -0.01235 (14), -0.00625 (14), -0.00443 (14), -0.00400 (14), -0.00144 (14), -0.00003 (14), 
Length of domains: 11
Time: pickout 0.0005    decision 0.0135    set_bounds 0.0011    solve 0.1886    add 0.0013    
Accumulated time: pickout 0.0059    decision 0.9815    set_bounds 0.0764    solve 2.2458    add 0.7978    
Current (lb-rhs): -0.022429227828979492
298 domains visited
Cumulative time: 5.072832822799683

BaB round 8
batch: 11
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 397] [/input-12, 398] [/input-12, 397] [/input-12, 397] [/input-12, 7349] [/input-12, 397] [/input-12, 397] [/input-12, 397] [/input-12, 398] [/input-12, 397] 
cut re-enabled after branching node selection
0 lb beta sum: 2.686471939086914, worst -0.017469584941864014
10 lb beta sum: 2.6899750232696533, worst -0.17697498202323914
Time: prepare 0.0013    bound 0.1877    transfer 0.0002    finalize 0.0008    func 0.1903    
Accumulated time: func 2.7470    prepare 0.0627    bound 2.6336    transfer 0.0100    finalize 0.0383    
all_split False
======================Cut inference begins======================
max lb tensor(0.00880191) min lb tensor(-0.01745242)
Number of Verified Splits: 10 of 22
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 100.
#cuts 1-3: 27
#cuts 4-6: 73
#cuts >= 20: 0
BICCOS time: 0.010964393615722656 
BICCOS Cumulative time: 0.6346189975738525
Preprocessing time: 0.0010311603546142578 Inference time: 0.0010802745819091797 Add cuts time: 0.005964040756225586 Cut analysis time: 0.002888917922973633
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01745 (15), -0.01581 (15), -0.01521 (15), -0.01355 (15), -0.01226 (15), -0.01061 (15), -0.01001 (15), -0.00980 (15), -0.00835 (15), -0.00784 (15), -0.00122 (15), -0.00057 (15), 
Length of domains: 12
Time: pickout 0.0004    decision 0.0145    set_bounds 0.0013    solve 0.1904    add 0.1106    
Accumulated time: pickout 0.0063    decision 0.9960    set_bounds 0.0777    solve 2.4362    add 0.9084    
Current (lb-rhs): -0.0174524188041687
310 domains visited
Cumulative time: 5.408078193664551

BaB round 9
batch: 12
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 809] [/input-12, 7349] [/input-12, 809] [/input-12, 7349] [/input-12, 7349] [/input-12, 809] [/input-12, 7349] [/input-12, 7349] [/input-12, 7349] [/input-12, 7349] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.02188563346862793
10 lb beta sum: 2.2120251655578613, worst -0.009827852249145508
Time: prepare 0.0008    bound 0.1842    transfer 0.0004    finalize 0.0006    func 0.1861    
Accumulated time: func 2.9331    prepare 0.0637    bound 2.8178    transfer 0.0103    finalize 0.0389    
all_split False
======================Cut inference begins======================
max lb tensor(0.01187572) min lb tensor(-0.00982201)
Number of Verified Splits: 12 of 24
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 101.
#cuts 1-3: 28
#cuts 4-6: 73
#cuts >= 20: 0
BICCOS time: 0.011210441589355469 
BICCOS Cumulative time: 0.645829439163208
Preprocessing time: 0.0010533332824707031 Inference time: 0.0013585090637207031 Add cuts time: 0.005908489227294922 Cut analysis time: 0.0028901100158691406
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00982 (16), -0.00816 (16), -0.00757 (16), -0.00590 (16), -0.00450 (16), -0.00415 (16), -0.00283 (16), -0.00226 (16), -0.00211 (16), -0.00166 (16), -0.00133 (16), -0.00057 (16), 
Length of domains: 12
Time: pickout 0.0073    decision 0.0136    set_bounds 0.0013    solve 0.1862    add 0.0576    
Accumulated time: pickout 0.0136    decision 1.0096    set_bounds 0.0790    solve 2.6224    add 0.9660    
Current (lb-rhs): -0.00982201099395752
322 domains visited
Cumulative time: 5.6854681968688965

BaB round 10
batch: 12
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 397] [/input-12, 2459] [/input-12, 397] [/input-12, 2459] [/input-12, 2459] [/input-12, 2459] [/input-12, 2459] [/input-12, 2459] [/input-12, 2459] [/input-12, 2459] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.016589581966400146
10 lb beta sum: 2.1960794925689697, worst -0.004518985748291016
Time: prepare 0.0008    bound 0.1843    transfer 0.0002    finalize 0.0006    func 0.1861    
Accumulated time: func 3.1192    prepare 0.0646    bound 3.0021    transfer 0.0106    finalize 0.0395    
all_split False
======================Cut inference begins======================
max lb tensor(0.00348841) min lb tensor(-0.00450313)
Number of Verified Splits: 17 of 24
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 103.
#cuts 1-3: 30
#cuts 4-6: 73
#cuts >= 20: 0
BICCOS time: 0.01218724250793457 
BICCOS Cumulative time: 0.6580166816711426
Preprocessing time: 0.0009937286376953125 Inference time: 0.0019617080688476562 Add cuts time: 0.006351470947265625 Cut analysis time: 0.0028803348541259766
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00450 (17), -0.00291 (17), -0.00268 (17), -0.00226 (17), -0.00085 (17), -0.00066 (17), -0.00043 (17), 
Length of domains: 7
Time: pickout 0.0005    decision 0.0136    set_bounds 0.0013    solve 0.1861    add 0.0011    
Accumulated time: pickout 0.0141    decision 1.0233    set_bounds 0.0803    solve 2.8085    add 0.9670    
Current (lb-rhs): -0.004503130912780762
329 domains visited
Cumulative time: 5.900506973266602

BaB round 11
batch: 7
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 398] [/input-12, 398] [/input-12, 398] [/input-12, 398] [/input-12, 398] [/input-12, 398] [/input-12, 398] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.01326441764831543
10 lb beta sum: 2.3321855068206787, worst -0.0045052170753479
Time: prepare 0.0006    bound 0.1825    transfer 0.0002    finalize 0.0005    func 0.1839    
Accumulated time: func 3.3031    prepare 0.0653    bound 3.1846    transfer 0.0108    finalize 0.0400    
all_split False
======================Cut inference begins======================
max lb tensor(0.45905453) min lb tensor(-0.00449884)
Number of Verified Splits: 10 of 14
Total number of valid cuts: 103.
#cuts 1-3: 30
#cuts 4-6: 73
#cuts >= 20: 0
BICCOS time: 0.005326747894287109 
BICCOS Cumulative time: 0.6633434295654297
Preprocessing time: 0.0007140636444091797 Inference time: 0.0011830329895019531 Add cuts time: 0.0033867359161376953 Cut analysis time: 4.291534423828125e-05
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00450 (18), -0.00289 (18), -0.00226 (18), -0.00065 (18), 
Length of domains: 4
Time: pickout 0.0004    decision 0.0133    set_bounds 0.0009    solve 0.1839    add 0.0010    
Accumulated time: pickout 0.0145    decision 1.0366    set_bounds 0.0813    solve 2.9924    add 0.9680    
Current (lb-rhs): -0.004498839378356934
333 domains visited
Cumulative time: 6.105581998825073

BaB round 12
batch: 4
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 787] [/input-12, 787] [/input-12, 787] [/input-12, 787] 
split level 1: [/input-12, 5355] [/input-12, 5355] [/input-12, 5355] [/input-12, 5355] 
cut re-enabled after branching node selection
0 lb beta sum: 2.62211537361145, worst 0.004424870014190674

all verified at 0th iter
Time: prepare 0.0010    bound 0.0070    transfer 0.0002    finalize 0.0005    func 0.0088    
Accumulated time: func 3.3119    prepare 0.0665    bound 3.1916    transfer 0.0110    finalize 0.0404    
all_split False
======================Cut inference begins======================
max lb tensor(0.01493454) min lb tensor(0.00442487)
Number of Verified Splits: 16 of 16
No cut inferred: All or none verified.
Total number of valid cuts: 103.
#cuts 1-3: 30
#cuts 4-6: 73
#cuts >= 20: 0
BICCOS time: 0.0008215904235839844 
BICCOS Cumulative time: 0.6641650199890137
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0132    set_bounds 0.0012    solve 0.0088    add 0.0000    
Accumulated time: pickout 0.0149    decision 1.0498    set_bounds 0.0824    solve 3.0012    add 0.9680    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
333 domains visited
Cumulative time: 6.130168437957764


Properties batch 8, size 1
Remaining timeout: 192.0620710849762
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 7.9380 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 55, vnnlib ID: 55 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-44.04984665, -45.37197876, -39.87327194, -41.11951828, -39.62630081,
         -41.56802368, -38.45184708, -42.31037521, -45.44823074, -45.49042511]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1375]; unstable size 1375; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 81, 1, 1375] with unstable size 80 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 42, 1, 1375] with unstable size 41 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1375] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [663]; unstable size 663; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 42, 1, 663] with unstable size 41 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 663] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [41]; unstable size 41; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 41] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.45593309, 4.03137875, 0.70113969, 1.94294107, 0.31613481, 2.34985423,
         2.33074713, 4.72719765, 4.12323856]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0572 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 56, vnnlib ID: 56 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-54.10603714, -59.64939880, -58.47744370, -61.42926407, -58.51839828,
         -61.90941620, -61.94496918, -60.12155914, -54.85457611, -58.46762085]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1342]; unstable size 1342; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 78, 1, 1342] with unstable size 77 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 27, 1, 1342] with unstable size 26 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1342] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [539]; unstable size 539; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 27, 1, 539] with unstable size 26 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 539] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [26]; unstable size 26; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.10340691,  3.16304231,  5.84724522,  2.88892913,  6.23270559,
          6.35812187,  4.26671934, -0.53799391,  3.08024716]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-54.10603714, -59.64939880, -58.47744370, -61.42926407, -58.51839828,
         -61.90941620, -61.94496918, -60.12155914, -54.85457611, -58.46762085]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.29it/s]100%|██████████| 1/1 [00:00<00:00,  8.28it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-53.05960464, -58.43291473, -57.37261200, -60.13663101, -57.41244507,
          -60.62715530, -60.62150955, -59.16921997, -53.29101181, -57.33287048]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.23140717]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1236 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 35.96614074707031
alpha/beta optimization time: 1.4597878456115723
initial alpha-crown bounds: tensor([[ 4.17676163,  3.22199607,  5.90088034,  2.97704792,  6.29093790,
          6.40483856,  4.34110308, -0.48825872,  3.14083338]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.4882587194442749
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.32045936584473
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.32041907310486
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.320392370224
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.3203694820404
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.32034969329834
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.3203296661377
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 198.32030987739563
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 198.3202886581421
Verifying property 7 with 1 instances.
##### Instance 56 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.48825872]], device='cuda:0') need to verify.
Model prediction is: tensor([-54.10603714, -59.64939880, -58.47744370, -61.42926407, -58.51839828,
        -61.90941620, -61.94496918, -60.12155914, -54.85457611, -58.46762085],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.48825872]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1342
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 526
Node /39 input 0: size torch.Size([250]) unstable 26
-----------------
# of unstable neurons: 1894
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00010395050048828125
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4882063865661621
10 lb beta sum: 0.0, worst -0.4882075786590576
Time: prepare 0.0002    bound 0.1225    transfer 0.0001    finalize 0.0002    func 0.1231    
Accumulated time: func 0.1231    prepare 0.0002    bound 0.1225    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 58] 
split level 1: [/input-16, 97] 
split level 2: [/input-16, 25] 
split level 3: [/input-16, 145] 
split level 4: [/input-12, 484] 
split level 5: [/input-16, 64] 
split level 6: [/input-16, 24] 
split level 7: [/input-16, 239] 
split level 8: [/input-16, 157] 
split level 9: [/input-16, 195] 
split level 10: [/input-16, 160] 
split level 11: [/input-12, 5420] 
split level 12: [/input-12, 2275] 
split level 13: [/input-16, 146] 
split level 14: [/input-12, 2230] 
split level 15: [/input-16, 178] 
split level 16: [/input-12, 483] 
split level 17: [/input-12, 3958] 
split level 18: [/input-12, 2277] 
split level 19: [/input-16, 82] 
split level 20: [/input-12, 4393] 
split level 21: [/input-12, 6891] 
split level 22: [/input-12, 1580] 
split level 23: [/input-12, 1075] 
split level 24: [/input-12, 2276] 
split level 25: [/input-12, 619] 
split level 26: [/input-12, 1579] 
split level 27: [/input-12, 4460] 
split level 28: [/input-12, 2274] 
split level 29: [/input-12, 2587] 
split level 30: [/input-12, 4131] 
split level 31: [/input-12, 5430] 
split level 32: [/input-12, 1076] 
split level 33: [/input-12, 3956] 
split level 34: [/input-12, 4773] 
split level 35: [/input-12, 8045] 
split level 36: [/input-12, 4898] 
split level 37: [/input-12, 3882] 
split level 38: [/input-16, 236] 
split level 39: [/input-12, 1820] 
split level 40: [/input-12, 469] 
split level 41: [/input-12, 2273] 
split level 42: [/input-12, 2227] 
split level 43: [/input-12, 1825] 
split level 44: [/input-12, 5429] 
split level 45: [/input-12, 4147] 
split level 46: [/input-12, 3946] 
split level 47: [/input-12, 5913] 
split level 48: [/input-12, 2588] 
split level 49: [/input-12, 2278] 
split level 50: [/input-12, 8036] 
split level 51: [/input-4, 4023] 
split level 52: [/input-12, 6235] 
split level 53: [/input-12, 5541] 
split level 54: [/input-12, 1463] 
split level 55: [/input-12, 4385] 
split level 56: [/input-12, 5914] 
split level 57: [/input-12, 1457] 
split level 58: [/input-12, 3563] 
split level 59: [/input-12, 3877] 
split level 60: [/input-4, 7083] 
split level 61: [/input-12, 3564] 
split level 62: [/input-12, 1061] 
split level 63: [/input-12, 2229] 
split level 64: [/input-12, 2225] 
split level 65: [/input-12, 1448] 
split level 66: [/input-12, 2228] 
split level 67: [/input-12, 1065] 
split level 68: [/input-16, 65] 
split level 69: [/input-12, 1458] 
split level 70: [/input-12, 426] 
split level 71: [/input-12, 470] 
split level 72: [/input-12, 5917] 
split level 73: [/input-12, 871] 
split level 74: [/input-4, 424] 
split level 75: [/input-12, 1811] 
split level 76: [/input-12, 1462] 
split level 77: [/input-12, 1254] 
split level 78: [/input-12, 1459] 
split level 79: [/input-12, 4891] 
split level 80: [/input-4, 4024] 
split level 81: [/input-12, 2586] 
split level 82: [/input-12, 1461] 
split level 83: [/input-12, 3954] 
split level 84: [/input-4, 1240] 
split level 85: [/input-12, 1588] 
split level 86: [/input-12, 2804] 
split level 87: [/input-12, 4428] 
split level 88: [/input-12, 5904] 
split level 89: [/input-4, 6070] 
split level 90: [/input-12, 808] 
split level 91: [/input-12, 6233] 
split level 92: [/input-4, 1241] 
split level 93: [/input-12, 617] 
split level 94: [/input-12, 7603] 
split level 95: [/input-12, 3811] 
split level 96: [/input-4, 3741] 
split level 97: [/input-12, 8034] 
split level 98: [/input-12, 4897] 
split level 99: [/input-12, 2222] 
split level 100: [/input-12, 1590] 
split level 101: [/input-12, 3491] 
split level 102: [/input-12, 4771] 
split level 103: [/input-12, 5542] 
split level 104: [/input-4, 6819] 
split level 105: [/input-12, 3438] 
split level 106: [/input-12, 4394] 
split level 107: [/input-12, 3874] 
split level 108: [/input-12, 4180] 
split level 109: [/input-4, 3758] 
split level 110: [/input-4, 6360] 
split level 111: [/input-12, 5515] 
split level 112: [/input-4, 3773] 
split level 113: [/input-4, 1169] 
split level 114: [/input-12, 6236] 
split level 115: [/input-4, 6359] 
split level 116: [/input-4, 7099] 
split level 117: [/input-12, 6766] 
split level 118: [/input-4, 3757] 
split level 119: [/input-12, 7590] 
split level 120: [/input-4, 6080] 
split level 121: [/input-12, 7507] 
split level 122: [/input-12, 5549] 
split level 123: [/input-4, 1185] 
split level 124: [/input-12, 887] 
split level 125: [/input-12, 4177] 
split level 126: [/input-12, 1589] 
split level 127: [/input-12, 100] 
split level 128: [/input-12, 3892] 
split level 129: [/input-12, 2226] 
split level 130: [/input-12, 4371] 
split level 131: [/input-12, 3948] 
split level 132: [/input-12, 7964] 
split level 133: [/input-12, 4894] 
split level 134: [/input-4, 3742] 
split level 135: [/input-12, 4887] 
split level 136: [/input-4, 6112] 
split level 137: [/input-12, 2217] 
split level 138: [/input-12, 3953] 
split level 139: [/input-12, 1053] 
split level 140: [/input-4, 5257] 
split level 141: [/input-4, 1436] 
split level 142: [/input-12, 609] 
split level 143: [/input-4, 2193] 
split level 144: [/input-4, 408] 
split level 145: [/input-4, 3924] 
split level 146: [/input-4, 6229] 
split level 147: [/input-12, 2589] 
split level 148: [/input-4, 3756] 
split level 149: [/input-12, 612] 
split level 150: [/input-4, 5038] 
split level 151: [/input-4, 7301] 
split level 152: [/input-12, 2232] 
split level 153: [/input-4, 1202] 
split level 154: [/input-12, 5516] 
split level 155: [/input-12, 5216] 
split level 156: [/input-12, 2187] 
split level 157: [/input-4, 1409] 
split level 158: [/input-12, 3366] 
split level 159: [/input-4, 3442] 
split level 160: [/input-12, 1585] 
split level 161: [/input-12, 5332] 
split level 162: [/input-4, 1142] 
split level 163: [/input-4, 5008] 
split level 164: [/input-12, 4170] 
split level 165: [/input-12, 5144] 
split level 166: [/input-12, 6238] 
split level 167: [/input-4, 7825] 
split level 168: [/input-4, 8155] 
split level 169: [/input-4, 3725] 
split level 170: [/input-12, 2799] 
split level 171: [/input-4, 6343] 
split level 172: [/input-4, 5009] 
split level 173: [/input-12, 3548] 
split level 174: [/input-4, 6818] 
split level 175: [/input-12, 7135] 
split level 176: [/input-4, 1681] 
split level 177: [/input-4, 5064] 
split level 178: [/input-4, 4721] 
split level 179: [/input-12, 1773] 
split level 180: [/input-4, 6817] 
split level 181: [/input-4, 1184] 
split level 182: [/input-4, 3190] 
split level 183: [/input-4, 8107] 
split level 184: [/input-12, 5514] 
split level 185: [/input-12, 1712] 
split level 186: [/input-4, 6787] 
split level 187: [/input-4, 1454] 
split level 188: [/input-4, 421] 
split level 189: [/input-4, 1141] 
split level 190: [/input-4, 5601] 
split level 191: [/input-4, 3444] 
split level 192: [/input-4, 2977] 
split level 193: [/input-4, 4332] 
split level 194: [/input-4, 3233] 
split level 195: [/input-4, 1154] 
split level 196: [/input-12, 3886] 
split level 197: [/input-4, 5006] 
split level 198: [/input-12, 8168] 
split level 199: [/input-12, 7503] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4881523847579956
10 lb beta sum: 0.0, worst -0.48815107345581055
Time: prepare 0.0118    bound 0.1443    transfer 0.0039    finalize 0.0161    func 0.1788    
Accumulated time: func 0.3020    prepare 0.0226    bound 0.2669    transfer 0.0040    finalize 0.0163    
all_split False
======================Cut inference begins======================
max lb tensor(0.04362997) min lb tensor(-0.48815000)
Number of Verified Splits: 1 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.01210927963256836 
BICCOS Cumulative time: 0.01210927963256836
Preprocessing time: 0.01121830940246582 Inference time: 9.72747802734375e-05 Add cuts time: 6.628036499023438e-05 Cut analysis time: 0.0007274150848388672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.47185 (1), -0.47159 (1), -0.47144 (1), -0.47076 (1), -0.47039 (1), -0.47033 (1), -0.46904 (1), -0.46839 (1), -0.46689 (1), -0.46502 (1), -0.46470 (1), -0.46470 (1), -0.46436 (1), -0.46422 (1), -0.46361 (1), -0.46332 (1), -0.46276 (1), -0.46177 (1), -0.46098 (1), -0.46019 (1), 
Length of domains: 50
Time: pickout 0.0005    decision 0.7866    set_bounds 0.0108    solve 0.1789    add 0.0860    
Accumulated time: pickout 0.0005    decision 0.7866    set_bounds 0.0108    solve 0.1789    add 0.0860    
Current (lb-rhs): -0.4718453884124756
50 domains visited
Cumulative time: 1.247743844985962

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 58] [/input-16, 58] [/input-16, 97] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] 
split level 1: [/input-16, 97] [/input-16, 97] [/input-16, 25] [/input-16, 97] [/input-16, 25] [/input-16, 25] [/input-16, 97] [/input-16, 97] [/input-16, 97] [/input-16, 97] 
split level 2: [/input-16, 25] [/input-16, 25] [/input-16, 145] [/input-16, 25] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 25] [/input-16, 25] [/input-16, 145] 
split level 3: [/input-12, 6891] [/input-16, 145] [/input-16, 24] [/input-16, 145] [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 145] [/input-16, 145] [/input-16, 24] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.456302285194397
10 lb beta sum: 0.19730766117572784, worst -0.4553781747817993
Time: prepare 0.0073    bound 0.1658    transfer 0.0026    finalize 0.0076    func 0.1859    
Accumulated time: func 0.4878    prepare 0.0301    bound 0.4326    transfer 0.0066    finalize 0.0239    
all_split False
======================Cut inference begins======================
max lb tensor(0.14826596) min lb tensor(-0.45535970)
Number of Verified Splits: 3 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.012875556945800781 
BICCOS Cumulative time: 0.02498483657836914
Preprocessing time: 0.0123443603515625 Inference time: 0.00017833709716796875 Add cuts time: 8.96453857421875e-05 Cut analysis time: 0.000263214111328125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19839 (2), -0.19761 (2), -0.19740 (2), -0.19572 (2), -0.19424 (2), -0.19419 (2), -0.19406 (2), -0.19309 (2), -0.19277 (2), -0.19238 (2), -0.19221 (2), -0.19219 (2), -0.19056 (2), -0.18763 (2), -0.18740 (2), -0.18721 (2), -0.18517 (2), -0.18293 (2), -0.17956 (2), -0.17925 (2), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0249    set_bounds 0.0127    solve 0.1859    add 0.0881    
Accumulated time: pickout 0.0011    decision 0.8115    set_bounds 0.0235    solve 0.3649    add 0.1741    
Current (lb-rhs): -0.19838714599609375
100 domains visited
Cumulative time: 1.5737237930297852

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 58] [/input-16, 97] [/input-16, 97] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] 
split level 1: [/input-16, 97] [/input-16, 25] [/input-16, 25] [/input-16, 97] [/input-16, 25] [/input-16, 25] [/input-16, 97] [/input-16, 97] [/input-16, 25] [/input-16, 25] 
split level 2: [/input-16, 25] [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 145] [/input-16, 24] [/input-16, 145] [/input-16, 24] [/input-16, 24] 
split level 3: [/input-12, 6891] [/input-12, 6891] [/input-12, 6891] [/input-12, 6891] [/input-12, 6891] [/input-16, 24] [/input-12, 6891] [/input-16, 24] [/input-12, 6891] [/input-12, 6891] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18388128280639648
10 lb beta sum: 0.2497052401304245, worst -0.214974045753479
Time: prepare 0.0071    bound 0.1663    transfer 0.0028    finalize 0.0076    func 0.1871    
Accumulated time: func 0.6749    prepare 0.0375    bound 0.5989    transfer 0.0094    finalize 0.0315    
all_split False
======================Cut inference begins======================
max lb tensor(0.26845935) min lb tensor(-0.17829561)
Number of Verified Splits: 96 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.019140005111694336 
BICCOS Cumulative time: 0.04412484169006348
Preprocessing time: 0.012064218521118164 Inference time: 0.004436492919921875 Add cuts time: 0.0023813247680664062 Cut analysis time: 0.0002579689025878906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17830 (3), -0.17313 (3), -0.16210 (3), -0.15687 (3), -0.14402 (3), -0.13456 (3), -0.13233 (3), -0.13014 (3), -0.12029 (3), -0.07577 (3), -0.06794 (3), -0.06509 (3), -0.06130 (3), -0.05941 (3), -0.05885 (3), -0.04125 (3), -0.04033 (3), -0.03905 (3), -0.03477 (3), -0.03454 (3), 
Length of domains: 21
Time: pickout 0.0006    decision 0.0249    set_bounds 0.0151    solve 0.1872    add 0.1012    
Accumulated time: pickout 0.0017    decision 0.8364    set_bounds 0.0387    solve 0.5521    add 0.2752    
Current (lb-rhs): -0.17829561233520508
121 domains visited
Cumulative time: 1.92203688621521

Shallow-BaB round 4
batch: 21
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 25] [/input-16, 25] [/input-16, 25] [/input-16, 25] [/input-16, 97] [/input-16, 97] [/input-16, 97] [/input-16, 25] [/input-16, 58] [/input-16, 97] 
split level 1: [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] 
split level 2: [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 157] 
split level 3: [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 195] [/input-16, 195] [/input-16, 24] 
split level 4: [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 157] [/input-16, 157] [/input-16, 195] 
split level 5: [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] 
split level 6: [/input-12, 2275] [/input-16, 146] [/input-16, 146] [/input-12, 2275] [/input-12, 2275] [/input-12, 2275] [/input-16, 146] [/input-16, 146] [/input-16, 146] [/input-16, 146] 
split level 7: [/input-16, 146] [/input-12, 483] [/input-12, 483] [/input-16, 146] [/input-16, 146] [/input-16, 146] [/input-12, 483] [/input-12, 483] [/input-12, 483] [/input-16, 178] 
split level 8: [/input-12, 2276] [/input-12, 1811] [/input-12, 1811] [/input-12, 2276] [/input-12, 2276] [/input-16, 178] [/input-12, 1811] [/input-12, 1811] [/input-12, 1811] [/input-12, 483] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17340993881225586
10 lb beta sum: 0.5026647448539734, worst -0.16760683059692383
Time: prepare 0.0065    bound 0.1740    transfer 0.0053    finalize 0.0075    func 0.1957    
Accumulated time: func 0.8707    prepare 0.0445    bound 0.7729    transfer 0.0147    finalize 0.0390    
all_split False
======================Cut inference begins======================
max lb tensor(0.33049792) min lb tensor(-0.16555595)
Number of Verified Splits: 122 of 378
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.020523548126220703 
BICCOS Cumulative time: 0.06464838981628418
Preprocessing time: 0.011067867279052734 Inference time: 0.006432056427001953 Add cuts time: 0.002708911895751953 Cut analysis time: 0.0003147125244140625
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0005    decision 0.0463    set_bounds 0.0143    solve 0.1958    add 0.0213    
Accumulated time: pickout 0.0022    decision 0.8826    set_bounds 0.0529    solve 0.7479    add 0.2965    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
121 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([82]), tensor([-1.]), tensor([0]), tensor([3.56759379e-40]), tensor([0]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([82, 58]), tensor([ 1., -1.]), tensor([0, 0]), tensor([-1.26703856e+34,  1.20620295e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([82, 58, 97, 25]), tensor([ 1.,  1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([-1.26703856e+34,  1.50887057e-01,  1.62628740e-01,  9.35039520e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([82, 58, 97, 25]), tensor([ 1.,  1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([-1.26703856e+34,  1.50887057e-01,  1.62628740e-01,  8.29999447e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([82, 58, 97, 25]), tensor([ 1.,  1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([-1.26703856e+34,  1.50887057e-01,  1.29459158e-01,  9.14823860e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([82, 58, 97, 25]), tensor([1., 1., 1., 1.]), tensor([0, 0, 0, 0]), tensor([-1.26703856e+34,  1.50887057e-01,  1.29459158e-01,  8.70568901e-02]), tensor([0, 1, 2, 3]))}
Shallow branching resets to n domains:  6
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.48637866973876953
10 lb beta sum: 0.988561749458313, worst -0.4652959406375885
Time: prepare 0.0004    bound 0.1835    transfer 0.0002    finalize 0.0004    func 0.1845    
Accumulated time: func 1.0552    prepare 0.0449    bound 0.9564    transfer 0.0149    finalize 0.0393    
After pruning, left:  2

Back to Regular BaB

BaB round 1
batch: 2
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 58] [/input-16, 97] 
split level 1: [/input-16, 97] [/input-16, 25] 
split level 2: [/input-16, 25] [/input-16, 145] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9787847995758057, worst -0.15006908774375916
10 lb beta sum: 1.0281116962432861, worst -0.14948585629463196
Time: prepare 0.0009    bound 0.1829    transfer 0.0002    finalize 0.0009    func 0.1850    
Accumulated time: func 1.2402    prepare 0.0460    bound 1.1392    transfer 0.0151    finalize 0.0402    
all_split False
======================Cut inference begins======================
max lb tensor(0.11581090) min lb tensor(-0.14918670)
Number of Verified Splits: 7 of 16
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 1.2455898523330688, worst -0.23755773901939392

all verified at 4th iter
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 6
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.04986763000488281 
BICCOS Cumulative time: 0.11451601982116699
Preprocessing time: 0.0007627010345458984 Inference time: 0.04842972755432129 Add cuts time: 0.0003445148468017578 Cut analysis time: 0.0003306865692138672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14919 (3), -0.14218 (3), -0.14010 (3), -0.12893 (3), -0.09961 (3), -0.09491 (3), -0.09401 (3), -0.09367 (3), -0.00440 (3), 
Length of domains: 9
Time: pickout 0.0004    decision 0.0134    set_bounds 0.0012    solve 0.1850    add 0.0013    
Accumulated time: pickout 0.0027    decision 0.8960    set_bounds 0.0541    solve 0.9329    add 0.2978    
Current (lb-rhs): -0.14918670058250427
130 domains visited
Cumulative time: 2.673997640609741

BaB round 2
batch: 9
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 24] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1549345850944519
10 lb beta sum: 0.5261538028717041, worst -0.14886057376861572
Time: prepare 0.0005    bound 0.1826    transfer 0.0002    finalize 0.0006    func 0.1841    
Accumulated time: func 1.4243    prepare 0.0467    bound 1.3218    transfer 0.0154    finalize 0.0408    
all_split False
======================Cut inference begins======================
max lb tensor(0.17566219) min lb tensor(-0.14864004)
Number of Verified Splits: 10 of 18
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1919163465499878
10 lb beta sum: 0.8681537508964539, worst -0.0292225182056427
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 6
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.18305540084838867 
BICCOS Cumulative time: 0.29757142066955566
Preprocessing time: 0.0008745193481445312 Inference time: 0.1814870834350586 Add cuts time: 0.000354766845703125 Cut analysis time: 0.0003390312194824219
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14864 (4), -0.14185 (4), -0.13957 (4), -0.12869 (4), -0.09864 (4), -0.09380 (4), -0.09334 (4), -0.09305 (4), 
Length of domains: 8
Time: pickout 0.0004    decision 0.0139    set_bounds 0.0011    solve 0.1842    add 0.0398    
Accumulated time: pickout 0.0031    decision 0.9099    set_bounds 0.0553    solve 1.1171    add 0.3376    
Current (lb-rhs): -0.14864003658294678
138 domains visited
Cumulative time: 3.096816301345825

BaB round 3
batch: 8
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 157] [/input-16, 24] [/input-16, 24] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5933164358139038, worst -0.13172781467437744
10 lb beta sum: 0.5933164358139038, worst -0.13138175010681152
Time: prepare 0.0009    bound 0.1641    transfer 0.0002    finalize 0.0005    func 0.1659    
Accumulated time: func 1.5902    prepare 0.0479    bound 1.4859    transfer 0.0156    finalize 0.0413    
all_split False
======================Cut inference begins======================
max lb tensor(0.00634551) min lb tensor(-0.13116294)
Number of Verified Splits: 1 of 16
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.7119797468185425, worst -0.09296274185180664

all verified at 2th iter
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 6
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.1950984001159668 
BICCOS Cumulative time: 0.49266982078552246
Preprocessing time: 0.0009150505065917969 Inference time: 0.19366192817687988 Add cuts time: 0.0001723766326904297 Cut analysis time: 0.0003490447998046875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13116 (5), -0.12549 (5), -0.12379 (5), -0.12162 (5), -0.11771 (5), -0.11449 (5), -0.11155 (5), -0.10503 (5), -0.08984 (5), -0.07677 (5), -0.07657 (5), -0.07604 (5), -0.06834 (5), -0.06501 (5), -0.06157 (5), 
Length of domains: 15
Time: pickout 0.0006    decision 0.0138    set_bounds 0.0011    solve 0.1659    add 0.0014    
Accumulated time: pickout 0.0037    decision 0.9237    set_bounds 0.0564    solve 1.2830    add 0.3390    
Current (lb-rhs): -0.13116294145584106
153 domains visited
Cumulative time: 3.474931240081787

BaB round 4
batch: 15
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 157] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12777531147003174
10 lb beta sum: 0.48669224977493286, worst -0.12172192335128784
Time: prepare 0.0007    bound 0.1667    transfer 0.0005    finalize 0.0008    func 0.1690    
Accumulated time: func 1.7592    prepare 0.0488    bound 1.6526    transfer 0.0161    finalize 0.0421    
all_split False
======================Cut inference begins======================
max lb tensor(0.06679833) min lb tensor(-0.12153041)
Number of Verified Splits: 5 of 30
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1965312957763672
10 lb beta sum: 1.1738159656524658, worst -0.12064485251903534
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 6
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.16868114471435547 
BICCOS Cumulative time: 0.6613509654998779
Preprocessing time: 0.0012936592102050781 Inference time: 0.16667747497558594 Add cuts time: 0.00033855438232421875 Cut analysis time: 0.0003714561462402344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12153 (6), -0.11549 (6), -0.11458 (6), -0.11199 (6), -0.10825 (6), -0.10502 (6), -0.10111 (6), -0.09496 (6), -0.07233 (6), -0.06827 (6), -0.06752 (6), -0.06668 (6), -0.06578 (6), -0.06410 (6), -0.06322 (6), -0.05904 (6), -0.05728 (6), -0.05310 (6), -0.05073 (6), -0.04783 (6), 
Length of domains: 25
Time: pickout 0.0006    decision 0.0144    set_bounds 0.0018    solve 0.1690    add 0.0017    
Accumulated time: pickout 0.0042    decision 0.9381    set_bounds 0.0582    solve 1.4520    add 0.3407    
Current (lb-rhs): -0.12153041362762451
178 domains visited
Cumulative time: 3.831220865249634

BaB round 5
batch: 25
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 160] [/input-16, 195] [/input-16, 195] [/input-16, 160] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12020844221115112
10 lb beta sum: 0.4538075923919678, worst -0.1142038106918335
Time: prepare 0.0010    bound 0.1703    transfer 0.0004    finalize 0.0009    func 0.1730    
Accumulated time: func 1.9322    prepare 0.0500    bound 1.8228    transfer 0.0165    finalize 0.0430    
all_split False
======================Cut inference begins======================
max lb tensor(0.07323825) min lb tensor(-0.11403787)
Number of Verified Splits: 18 of 50
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.23839163780212402
10 lb beta sum: 0.9109721779823303, worst -0.1156260222196579
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 6
#cuts 4-6: 7
#cuts >= 20: 0
BICCOS time: 0.17723464965820312 
BICCOS Cumulative time: 0.838585615158081
Preprocessing time: 0.0018734931945800781 Inference time: 0.1742403507232666 Add cuts time: 0.0005717277526855469 Cut analysis time: 0.0005490779876708984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11404 (7), -0.10827 (7), -0.10741 (7), -0.10500 (7), -0.10138 (7), -0.09791 (7), -0.09434 (7), -0.08826 (7), -0.06514 (7), -0.06050 (7), -0.05590 (7), -0.05525 (7), -0.05460 (7), -0.05344 (7), -0.05130 (7), -0.05014 (7), -0.04669 (7), -0.04586 (7), -0.04212 (7), -0.03812 (7), 
Length of domains: 32
Time: pickout 0.0005    decision 0.0172    set_bounds 0.0024    solve 0.1730    add 0.0015    
Accumulated time: pickout 0.0047    decision 0.9553    set_bounds 0.0606    solve 1.6250    add 0.3422    
Current (lb-rhs): -0.11403787136077881
210 domains visited
Cumulative time: 4.203431844711304

BaB round 6
batch: 32
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 160] [/input-16, 195] [/input-16, 160] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 160] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10794556140899658
10 lb beta sum: 0.47477155923843384, worst -0.10200488567352295
Time: prepare 0.0012    bound 0.1639    transfer 0.0007    finalize 0.0011    func 0.1673    
Accumulated time: func 2.0994    prepare 0.0513    bound 1.9867    transfer 0.0172    finalize 0.0440    
all_split False
======================Cut inference begins======================
max lb tensor(0.20513767) min lb tensor(-0.10191619)
Number of Verified Splits: 17 of 64
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22266054153442383
10 lb beta sum: 1.0181779861450195, worst -0.13869279623031616
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 6
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.17828989028930664 
BICCOS Cumulative time: 1.0168755054473877
Preprocessing time: 0.0021588802337646484 Inference time: 0.17449474334716797 Add cuts time: 0.0010793209075927734 Cut analysis time: 0.00055694580078125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10192 (8), -0.09654 (8), -0.09533 (8), -0.09294 (8), -0.08914 (8), -0.08575 (8), -0.08426 (8), -0.08237 (8), -0.07844 (8), -0.07804 (8), -0.07681 (8), -0.07607 (8), -0.07390 (8), -0.07073 (8), -0.06450 (8), -0.06082 (8), -0.05318 (8), -0.04856 (8), -0.04838 (8), -0.04768 (8), 
Length of domains: 47
Time: pickout 0.0005    decision 0.0148    set_bounds 0.0029    solve 0.1673    add 0.0018    
Accumulated time: pickout 0.0052    decision 0.9700    set_bounds 0.0635    solve 1.7923    add 0.3440    
Current (lb-rhs): -0.10191619396209717
257 domains visited
Cumulative time: 4.569263935089111

BaB round 7
batch: 47
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 146] [/input-16, 146] [/input-16, 146] [/input-12, 2275] [/input-16, 146] [/input-16, 64] [/input-16, 146] [/input-16, 64] [/input-16, 64] [/input-12, 2275] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10248047113418579
10 lb beta sum: 0.39671432971954346, worst -0.10186249017715454
Time: prepare 0.0018    bound 0.1656    transfer 0.0007    finalize 0.0022    func 0.1712    
Accumulated time: func 2.2706    prepare 0.0534    bound 2.1523    transfer 0.0179    finalize 0.0462    
all_split False
======================Cut inference begins======================
max lb tensor(0.41017056) min lb tensor(-0.10185879)
Number of Verified Splits: 24 of 94
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2294062376022339
10 lb beta sum: 0.9302355051040649, worst -0.13112467527389526
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 6
#cuts 4-6: 8
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.1846921443939209 
BICCOS Cumulative time: 1.2015676498413086
Preprocessing time: 0.0030508041381835938 Inference time: 0.1802976131439209 Add cuts time: 0.0007302761077880859 Cut analysis time: 0.0006134510040283203
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10186 (9), -0.09652 (9), -0.08367 (9), -0.08294 (9), -0.08179 (9), -0.08098 (9), -0.07890 (9), -0.07756 (9), -0.07696 (9), -0.07554 (9), -0.07344 (9), -0.07257 (9), -0.07172 (9), -0.06997 (9), -0.06923 (9), -0.06518 (9), -0.06470 (9), -0.06415 (9), -0.06255 (9), -0.06110 (9), 
Length of domains: 70
Time: pickout 0.0006    decision 0.0155    set_bounds 0.0038    solve 0.1713    add 0.0020    
Accumulated time: pickout 0.0058    decision 0.9855    set_bounds 0.0673    solve 1.9636    add 0.3460    
Current (lb-rhs): -0.10185879468917847
327 domains visited
Cumulative time: 4.94740104675293

BaB round 8
batch: 70
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 64] [/input-16, 146] [/input-12, 2275] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-12, 2275] [/input-16, 64] [/input-16, 146] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09037691354751587
10 lb beta sum: 0.3454502522945404, worst -0.08977150917053223
Time: prepare 0.0026    bound 0.1662    transfer 0.0011    finalize 0.0031    func 0.1740    
Accumulated time: func 2.4446    prepare 0.0562    bound 2.3184    transfer 0.0190    finalize 0.0494    
all_split False
======================Cut inference begins======================
max lb tensor(0.49487686) min lb tensor(-0.08976269)
Number of Verified Splits: 46 of 140
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 9
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.010066747665405273 
BICCOS Cumulative time: 1.2116343975067139
Preprocessing time: 0.004397392272949219 Inference time: 0.004373788833618164 Add cuts time: 0.0008449554443359375 Cut analysis time: 0.0004506111145019531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08976 (10), -0.08829 (10), -0.08440 (10), -0.08322 (10), -0.08294 (10), -0.08174 (10), -0.08098 (10), -0.07886 (10), -0.07343 (10), -0.07276 (10), -0.07253 (10), -0.07125 (10), -0.07098 (10), -0.07014 (10), -0.06517 (10), -0.06511 (10), -0.06434 (10), -0.06433 (10), -0.06398 (10), -0.06269 (10), 
Length of domains: 94
Time: pickout 0.0006    decision 0.0171    set_bounds 0.0059    solve 0.1740    add 0.0023    
Accumulated time: pickout 0.0064    decision 1.0026    set_bounds 0.0732    solve 2.1376    add 0.3482    
Current (lb-rhs): -0.08976268768310547
421 domains visited
Cumulative time: 5.158177375793457

BaB round 9
batch: 94
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 178] [/input-12, 2275] [/input-16, 178] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0844530463218689
10 lb beta sum: 0.35251757502555847, worst -0.08942200243473053
Time: prepare 0.0038    bound 0.1701    transfer 0.0012    finalize 0.0030    func 0.1793    
Accumulated time: func 2.6240    prepare 0.0601    bound 2.4886    transfer 0.0203    finalize 0.0523    
all_split False
======================Cut inference begins======================
max lb tensor(0.50127411) min lb tensor(-0.08388203)
Number of Verified Splits: 76 of 188
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 12
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.014248371124267578 
BICCOS Cumulative time: 1.2258827686309814
Preprocessing time: 0.005618572235107422 Inference time: 0.006939888000488281 Add cuts time: 0.000888824462890625 Cut analysis time: 0.00080108642578125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08388 (11), -0.08242 (11), -0.07602 (11), -0.07595 (11), -0.07507 (11), -0.07408 (11), -0.07347 (11), -0.07269 (11), -0.07255 (11), -0.07158 (11), -0.07145 (11), -0.07124 (11), -0.07019 (11), -0.07001 (11), -0.06724 (11), -0.06557 (11), -0.06523 (11), -0.06468 (11), -0.06418 (11), -0.06150 (11), 
Length of domains: 112
Time: pickout 0.0007    decision 0.0180    set_bounds 0.0073    solve 0.1794    add 0.0032    
Accumulated time: pickout 0.0072    decision 1.0207    set_bounds 0.0805    solve 2.3171    add 0.3515    
Current (lb-rhs): -0.08388203382492065
533 domains visited
Cumulative time: 5.3817830085754395

BaB round 10
batch: 112
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-12, 6891] [/input-12, 483] [/input-12, 5420] [/input-12, 5420] [/input-16, 64] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07920461893081665
10 lb beta sum: 0.5823895931243896, worst -0.0753869116306305
Time: prepare 0.0046    bound 0.1749    transfer 0.0010    finalize 0.0053    func 0.1872    
Accumulated time: func 2.8112    prepare 0.0649    bound 2.6634    transfer 0.0212    finalize 0.0576    
all_split False
======================Cut inference begins======================
max lb tensor(0.70900959) min lb tensor(-0.07537405)
Number of Verified Splits: 159 of 224
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 14
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.024254560470581055 
BICCOS Cumulative time: 1.2501373291015625
Preprocessing time: 0.006797075271606445 Inference time: 0.015482187271118164 Add cuts time: 0.001505136489868164 Cut analysis time: 0.00047016143798828125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07537 (12), -0.06910 (12), -0.06758 (12), -0.06726 (12), -0.06626 (12), -0.06503 (12), -0.06182 (12), -0.06091 (12), -0.06032 (12), -0.05933 (12), -0.05853 (12), -0.05836 (12), -0.05817 (12), -0.05710 (12), -0.05703 (12), -0.05636 (12), -0.05603 (12), -0.05586 (12), -0.05499 (12), -0.05166 (12), 
Length of domains: 65
Time: pickout 0.0009    decision 0.0192    set_bounds 0.0096    solve 0.1873    add 0.0034    
Accumulated time: pickout 0.0081    decision 1.0399    set_bounds 0.0901    solve 2.5043    add 0.3549    
Current (lb-rhs): -0.0753740519285202
598 domains visited
Cumulative time: 5.627792835235596

BaB round 11
batch: 65
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2276] [/input-12, 6891] [/input-12, 6891] [/input-12, 2276] [/input-12, 2276] [/input-12, 6891] [/input-12, 6891] [/input-12, 2276] [/input-12, 2275] [/input-16, 178] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07121109962463379
10 lb beta sum: 0.9206575155258179, worst -0.06735222041606903
Time: prepare 0.0027    bound 0.1665    transfer 0.0011    finalize 0.0022    func 0.1735    
Accumulated time: func 2.9847    prepare 0.0679    bound 2.8299    transfer 0.0223    finalize 0.0598    
all_split False
======================Cut inference begins======================
max lb tensor(0.61611712) min lb tensor(-0.06734209)
Number of Verified Splits: 89 of 130
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 15
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.014320135116577148 
BICCOS Cumulative time: 1.2644574642181396
Preprocessing time: 0.004041433334350586 Inference time: 0.008606672286987305 Add cuts time: 0.0012481212615966797 Cut analysis time: 0.0004239082336425781
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06734 (13), -0.06622 (13), -0.06181 (13), -0.06091 (13), -0.05938 (13), -0.05853 (13), -0.05612 (13), -0.05447 (13), -0.05136 (13), -0.05013 (13), -0.04978 (13), -0.04916 (13), -0.04552 (13), -0.04504 (13), -0.04289 (13), -0.04194 (13), -0.03783 (13), -0.03772 (13), -0.03765 (13), -0.03572 (13), 
Length of domains: 41
Time: pickout 0.0009    decision 0.0166    set_bounds 0.0058    solve 0.1736    add 0.0017    
Accumulated time: pickout 0.0090    decision 1.0565    set_bounds 0.0959    solve 2.6779    add 0.3566    
Current (lb-rhs): -0.06734208762645721
639 domains visited
Cumulative time: 5.8412370681762695

BaB round 12
batch: 41
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5420] [/input-12, 2276] [/input-12, 5420] [/input-12, 5420] [/input-12, 2276] [/input-12, 483] [/input-12, 2276] [/input-12, 5420] [/input-12, 2276] [/input-12, 4460] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8714374899864197, worst -0.06259380280971527
10 lb beta sum: 1.4116721153259277, worst -0.05428028106689453
Time: prepare 0.0040    bound 0.1716    transfer 0.0006    finalize 0.0018    func 0.1785    
Accumulated time: func 3.1632    prepare 0.0720    bound 3.0015    transfer 0.0229    finalize 0.0616    
all_split False
======================Cut inference begins======================
max lb tensor(0.32782507) min lb tensor(-0.05424595)
Number of Verified Splits: 44 of 82
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 15
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.008273601531982422 
BICCOS Cumulative time: 1.272731065750122
Preprocessing time: 0.002813577651977539 Inference time: 0.00439143180847168 Add cuts time: 0.0004668235778808594 Cut analysis time: 0.0006017684936523438
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05425 (14), -0.05328 (14), -0.05280 (14), -0.05235 (14), -0.05197 (14), -0.05125 (14), -0.05049 (14), -0.04665 (14), -0.04647 (14), -0.04519 (14), -0.04496 (14), -0.04238 (14), -0.04176 (14), -0.04175 (14), -0.04066 (14), -0.03177 (14), -0.02772 (14), -0.02716 (14), -0.02682 (14), -0.02674 (14), 
Length of domains: 38
Time: pickout 0.0007    decision 0.0150    set_bounds 0.0037    solve 0.1786    add 0.0016    
Accumulated time: pickout 0.0097    decision 1.0714    set_bounds 0.0996    solve 2.8565    add 0.3582    
Current (lb-rhs): -0.054245948791503906
677 domains visited
Cumulative time: 6.049438238143921

BaB round 13
batch: 38
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 483] [/input-12, 4393] [/input-12, 4393] [/input-12, 4393] [/input-12, 2275] [/input-12, 4393] [/input-12, 4393] [/input-12, 4393] [/input-12, 4393] [/input-12, 483] 
cut re-enabled after branching node selection
0 lb beta sum: 1.6009188890457153, worst -0.054245948791503906
10 lb beta sum: 1.6009188890457153, worst -0.05421048402786255
Time: prepare 0.0037    bound 0.1690    transfer 0.0009    finalize 0.0013    func 0.1755    
Accumulated time: func 3.3387    prepare 0.0759    bound 3.1705    transfer 0.0238    finalize 0.0629    
all_split False
======================Cut inference begins======================
max lb tensor(0.21150357) min lb tensor(-0.05419564)
Number of Verified Splits: 9 of 76
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 15
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.004479646682739258 
BICCOS Cumulative time: 1.2772107124328613
Preprocessing time: 0.002579927444458008 Inference time: 0.0010385513305664062 Add cuts time: 0.0003497600555419922 Cut analysis time: 0.0005114078521728516
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05420 (15), -0.05323 (15), -0.05274 (15), -0.05232 (15), -0.05161 (15), -0.05041 (15), -0.04767 (15), -0.04660 (15), -0.04519 (15), -0.04472 (15), -0.04395 (15), -0.04228 (15), -0.04175 (15), -0.03989 (15), -0.03919 (15), -0.03901 (15), -0.03834 (15), -0.03738 (15), -0.03733 (15), -0.03559 (15), 
Length of domains: 67
Time: pickout 0.0006    decision 0.0148    set_bounds 0.0034    solve 0.1755    add 0.0022    
Accumulated time: pickout 0.0102    decision 1.0862    set_bounds 0.1030    solve 3.0320    add 0.3604    
Current (lb-rhs): -0.05419564247131348
744 domains visited
Cumulative time: 6.2506537437438965

BaB round 14
batch: 67
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2276] [/input-12, 2276] [/input-12, 2276] [/input-12, 4393] [/input-12, 5420] [/input-12, 1076] [/input-12, 4393] [/input-12, 4393] [/input-12, 4460] [/input-12, 2274] 
cut re-enabled after branching node selection
0 lb beta sum: 1.5860844850540161, worst -0.04916864633560181
10 lb beta sum: 1.5860844850540161, worst -0.04914450645446777
Time: prepare 0.0061    bound 0.1712    transfer 0.0010    finalize 0.0019    func 0.1813    
Accumulated time: func 3.5200    prepare 0.0822    bound 3.3417    transfer 0.0248    finalize 0.0648    
all_split False
======================Cut inference begins======================
max lb tensor(0.00916147) min lb tensor(-0.04912829)
Number of Verified Splits: 7 of 134
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 16
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.0060923099517822266 
BICCOS Cumulative time: 1.2833030223846436
Preprocessing time: 0.004226207733154297 Inference time: 0.0008771419525146484 Add cuts time: 0.0004267692565917969 Cut analysis time: 0.0005621910095214844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04913 (16), -0.04874 (16), -0.04824 (16), -0.04759 (16), -0.04659 (16), -0.04639 (16), -0.04622 (16), -0.04516 (16), -0.04486 (16), -0.04403 (16), -0.04364 (16), -0.04263 (16), -0.04119 (16), -0.04043 (16), -0.04037 (16), -0.03966 (16), -0.03934 (16), -0.03893 (16), -0.03877 (16), -0.03846 (16), 
Length of domains: 127
Time: pickout 0.0006    decision 0.0188    set_bounds 0.0061    solve 0.1813    add 0.0027    
Accumulated time: pickout 0.0108    decision 1.1051    set_bounds 0.1091    solve 3.2133    add 0.3631    
Current (lb-rhs): -0.04912829399108887
871 domains visited
Cumulative time: 6.466576099395752

BaB round 15
batch: 127
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6891] [/input-12, 6891] [/input-12, 5420] [/input-12, 4460] [/input-12, 5420] [/input-12, 1076] [/input-12, 5420] [/input-12, 4393] [/input-12, 4393] [/input-12, 4393] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.051464855670928955
10 lb beta sum: 0.9947179555892944, worst -0.04076877236366272
Time: prepare 0.0051    bound 0.1727    transfer 0.0011    finalize 0.0042    func 0.1848    
Accumulated time: func 3.7049    prepare 0.0875    bound 3.5144    transfer 0.0259    finalize 0.0690    
all_split False
======================Cut inference begins======================
max lb tensor(0.34166127) min lb tensor(-0.04075065)
Number of Verified Splits: 70 of 254
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 16
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.017543315887451172 
BICCOS Cumulative time: 1.3008463382720947
Preprocessing time: 0.007590532302856445 Inference time: 0.008560657501220703 Add cuts time: 0.0009794235229492188 Cut analysis time: 0.0004127025604248047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04075 (17), -0.04049 (17), -0.03981 (17), -0.03962 (17), -0.03950 (17), -0.03945 (17), -0.03888 (17), -0.03862 (17), -0.03862 (17), -0.03849 (17), -0.03803 (17), -0.03783 (17), -0.03773 (17), -0.03761 (17), -0.03712 (17), -0.03694 (17), -0.03692 (17), -0.03684 (17), -0.03594 (17), -0.03561 (17), 
Length of domains: 184
Time: pickout 0.0008    decision 0.0235    set_bounds 0.0110    solve 0.1849    add 0.0048    
Accumulated time: pickout 0.0116    decision 1.1286    set_bounds 0.1201    solve 3.3983    add 0.3679    
Current (lb-rhs): -0.040750652551651
1055 domains visited
Cumulative time: 6.710306882858276

BaB round 16
batch: 184
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5420] [/input-12, 5420] [/input-12, 1076] [/input-12, 5420] [/input-12, 5420] [/input-12, 1076] [/input-12, 1076] [/input-12, 5420] [/input-12, 1076] [/input-12, 5420] 
cut re-enabled after branching node selection
0 lb beta sum: 1.1093604564666748, worst -0.04048621654510498
10 lb beta sum: 1.1093604564666748, worst -0.04047435522079468
Time: prepare 0.0169    bound 0.1757    transfer 0.0016    finalize 0.0076    func 0.2043    
Accumulated time: func 3.9092    prepare 0.1046    bound 3.6902    transfer 0.0275    finalize 0.0766    
all_split False
======================Cut inference begins======================
max lb tensor(0.24833059) min lb tensor(-0.04046410)
Number of Verified Splits: 138 of 368
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 19
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.03168344497680664 
BICCOS Cumulative time: 1.3325297832489014
Preprocessing time: 0.011065483093261719 Inference time: 0.018075942993164062 Add cuts time: 0.002076387405395508 Cut analysis time: 0.00046563148498535156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04046 (18), -0.03962 (18), -0.03942 (18), -0.03882 (18), -0.03858 (18), -0.03766 (18), -0.03672 (18), -0.03591 (18), -0.03552 (18), -0.03538 (18), -0.03502 (18), -0.03484 (18), -0.03456 (18), -0.03440 (18), -0.03396 (18), -0.03354 (18), -0.03346 (18), -0.03267 (18), -0.03259 (18), -0.03245 (18), 
Length of domains: 230
Time: pickout 0.0063    decision 0.0276    set_bounds 0.1680    solve 0.2044    add 0.0074    
Accumulated time: pickout 0.0179    decision 1.1562    set_bounds 0.2881    solve 3.6027    add 0.3753    
Current (lb-rhs): -0.04046410322189331
1285 domains visited
Cumulative time: 7.156780958175659

BaB round 17
batch: 230
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5420] [/input-12, 5420] [/input-12, 5420] [/input-12, 5420] [/input-12, 5420] [/input-12, 5420] [/input-12, 5420] [/input-12, 5420] [/input-12, 5420] [/input-12, 5420] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.044959843158721924
10 lb beta sum: 1.0408530235290527, worst -0.03655397891998291
Time: prepare 0.0090    bound 0.1775    transfer 0.0018    finalize 0.0071    func 0.1984    
Accumulated time: func 4.1076    prepare 0.1138    bound 3.8677    transfer 0.0293    finalize 0.0837    
all_split False
======================Cut inference begins======================
max lb tensor(0.76735103) min lb tensor(-0.03655133)
Number of Verified Splits: 380 of 460
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 21
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.06947731971740723 
BICCOS Cumulative time: 1.4020071029663086
Preprocessing time: 0.013557910919189453 Inference time: 0.05106639862060547 Add cuts time: 0.0043582916259765625 Cut analysis time: 0.0004947185516357422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03655 (19), -0.03573 (19), -0.03565 (19), -0.03536 (19), -0.03481 (19), -0.03439 (19), -0.03342 (19), -0.03266 (19), -0.03255 (19), -0.03172 (19), -0.03068 (19), -0.03047 (19), -0.02984 (19), -0.02952 (19), -0.02944 (19), -0.02942 (19), -0.02859 (19), -0.02850 (19), -0.02841 (19), -0.02746 (19), 
Length of domains: 80
Time: pickout 0.0015    decision 0.0307    set_bounds 0.0200    solve 0.1986    add 0.0022    
Accumulated time: pickout 0.0194    decision 1.1869    set_bounds 0.3081    solve 3.8013    add 0.3775    
Current (lb-rhs): -0.036551326513290405
1365 domains visited
Cumulative time: 7.481346368789673

BaB round 18
batch: 80
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2276] [/input-12, 2227] [/input-12, 2276] [/input-12, 2276] [/input-12, 2276] [/input-12, 2277] [/input-12, 2277] [/input-12, 2227] [/input-12, 484] [/input-12, 484] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04029649496078491
10 lb beta sum: 1.097319483757019, worst -0.03397366404533386
Time: prepare 0.0034    bound 0.1733    transfer 0.0011    finalize 0.0023    func 0.1812    
Accumulated time: func 4.2888    prepare 0.1173    bound 4.0410    transfer 0.0304    finalize 0.0860    
all_split False
======================Cut inference begins======================
max lb tensor(0.46281987) min lb tensor(-0.03396706)
Number of Verified Splits: 79 of 160
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 23
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.017634868621826172 
BICCOS Cumulative time: 1.4196419715881348
Preprocessing time: 0.004996061325073242 Inference time: 0.010551929473876953 Add cuts time: 0.0015556812286376953 Cut analysis time: 0.0005311965942382812
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03397 (20), -0.03299 (20), -0.03290 (20), -0.03261 (20), -0.03197 (20), -0.03158 (20), -0.03145 (20), -0.02655 (20), -0.02562 (20), -0.02555 (20), -0.02491 (20), -0.02475 (20), -0.02391 (20), -0.02308 (20), -0.02281 (20), -0.02226 (20), -0.02200 (20), -0.02192 (20), -0.02125 (20), -0.02098 (20), 
Length of domains: 81
Time: pickout 0.0010    decision 0.0201    set_bounds 0.0068    solve 0.1813    add 0.0022    
Accumulated time: pickout 0.0204    decision 1.2070    set_bounds 0.3149    solve 3.9826    add 0.3797    
Current (lb-rhs): -0.03396706283092499
1446 domains visited
Cumulative time: 7.711012840270996

BaB round 19
batch: 81
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 484] [/input-12, 469] [/input-12, 469] [/input-12, 484] [/input-12, 469] [/input-12, 469] [/input-12, 3563] [/input-12, 3563] [/input-12, 3563] [/input-12, 3563] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03548067808151245
10 lb beta sum: 1.3693108558654785, worst -0.030235767364501953
Time: prepare 0.0034    bound 0.1699    transfer 0.0008    finalize 0.0023    func 0.1775    
Accumulated time: func 4.4663    prepare 0.1209    bound 4.2109    transfer 0.0312    finalize 0.0883    
all_split False
======================Cut inference begins======================
max lb tensor(0.32546043) min lb tensor(-0.03006029)
Number of Verified Splits: 60 of 162
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 24
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.014905691146850586 
BICCOS Cumulative time: 1.4345476627349854
Preprocessing time: 0.005007266998291016 Inference time: 0.008192777633666992 Add cuts time: 0.0008134841918945312 Cut analysis time: 0.0008921623229980469
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03006 (21), -0.02915 (21), -0.02821 (21), -0.02733 (21), -0.02707 (21), -0.02611 (21), -0.02526 (21), -0.02491 (21), -0.02425 (21), -0.02397 (21), -0.02371 (21), -0.02315 (21), -0.02283 (21), -0.02273 (21), -0.02236 (21), -0.02214 (21), -0.02188 (21), -0.02145 (21), -0.02123 (21), -0.02049 (21), 
Length of domains: 102
Time: pickout 0.0007    decision 0.0211    set_bounds 0.0073    solve 0.1776    add 0.0024    
Accumulated time: pickout 0.0211    decision 1.2282    set_bounds 0.3223    solve 4.1602    add 0.3821    
Current (lb-rhs): -0.030060291290283203
1548 domains visited
Cumulative time: 7.935628175735474

BaB round 20
batch: 102
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 484] [/input-12, 484] [/input-12, 484] [/input-12, 484] [/input-12, 3564] [/input-12, 3564] [/input-12, 4147] [/input-12, 4147] [/input-12, 5429] [/input-12, 5429] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03247004747390747
10 lb beta sum: 1.483177661895752, worst -0.02203887701034546
Time: prepare 0.0041    bound 0.1675    transfer 0.0010    finalize 0.0030    func 0.1770    
Accumulated time: func 4.6434    prepare 0.1252    bound 4.3784    transfer 0.0322    finalize 0.0913    
all_split False
======================Cut inference begins======================
max lb tensor(0.32349932) min lb tensor(-0.02201325)
Number of Verified Splits: 81 of 204
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 25
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.020565271377563477 
BICCOS Cumulative time: 1.4551129341125488
Preprocessing time: 0.0068438053131103516 Inference time: 0.011413812637329102 Add cuts time: 0.001611471176147461 Cut analysis time: 0.0006961822509765625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02201 (22), -0.02106 (22), -0.02080 (22), -0.02031 (22), -0.01996 (22), -0.01985 (22), -0.01932 (22), -0.01907 (22), -0.01890 (22), -0.01888 (22), -0.01821 (22), -0.01819 (22), -0.01794 (22), -0.01720 (22), -0.01717 (22), -0.01621 (22), -0.01599 (22), -0.01509 (22), -0.01502 (22), -0.01413 (22), 
Length of domains: 123
Time: pickout 0.0008    decision 0.0185    set_bounds 0.0087    solve 0.1771    add 0.0028    
Accumulated time: pickout 0.0219    decision 1.2467    set_bounds 0.3310    solve 4.3373    add 0.3849    
Current (lb-rhs): -0.02201324701309204
1671 domains visited
Cumulative time: 8.16472840309143

BaB round 21
batch: 123
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2227] [/input-12, 2227] [/input-12, 4147] [/input-12, 4147] [/input-12, 4147] [/input-12, 4147] [/input-12, 4147] [/input-12, 1076] [/input-12, 1076] [/input-12, 8036] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.029690563678741455
10 lb beta sum: 1.5959725379943848, worst -0.02007216215133667
Time: prepare 0.0049    bound 0.1725    transfer 0.0011    finalize 0.0045    func 0.1847    
Accumulated time: func 4.8281    prepare 0.1304    bound 4.5509    transfer 0.0332    finalize 0.0958    
all_split False
======================Cut inference begins======================
max lb tensor(0.32814646) min lb tensor(-0.02005661)
Number of Verified Splits: 121 of 246
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 26
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.027980327606201172 
BICCOS Cumulative time: 1.48309326171875
Preprocessing time: 0.0074236392974853516 Inference time: 0.01854538917541504 Add cuts time: 0.0014755725860595703 Cut analysis time: 0.0005357265472412109
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02006 (23), -0.01979 (23), -0.01867 (23), -0.01831 (23), -0.01791 (23), -0.01789 (23), -0.01783 (23), -0.01764 (23), -0.01748 (23), -0.01695 (23), -0.01694 (23), -0.01675 (23), -0.01667 (23), -0.01643 (23), -0.01642 (23), -0.01622 (23), -0.01608 (23), -0.01579 (23), -0.01579 (23), -0.01511 (23), 
Length of domains: 125
Time: pickout 0.0009    decision 0.0224    set_bounds 0.0103    solve 0.1848    add 0.0026    
Accumulated time: pickout 0.0229    decision 1.2691    set_bounds 0.3413    solve 4.5221    add 0.3875    
Current (lb-rhs): -0.020056605339050293
1796 domains visited
Cumulative time: 8.414564609527588

BaB round 22
batch: 125
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1076] [/input-12, 1076] [/input-12, 4147] [/input-12, 4147] [/input-12, 2277] [/input-12, 1076] [/input-12, 3563] [/input-12, 4147] [/input-12, 8036] [/input-12, 2274] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.025818467140197754
10 lb beta sum: 1.611085295677185, worst -0.018166005611419678
Time: prepare 0.0050    bound 0.1752    transfer 0.0011    finalize 0.0034    func 0.1864    
Accumulated time: func 5.0145    prepare 0.1356    bound 4.7261    transfer 0.0343    finalize 0.0992    
all_split False
======================Cut inference begins======================
max lb tensor(0.32646704) min lb tensor(-0.01814896)
Number of Verified Splits: 131 of 250
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 26
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.029732465744018555 
BICCOS Cumulative time: 1.5128257274627686
Preprocessing time: 0.00756525993347168 Inference time: 0.020250320434570312 Add cuts time: 0.0013806819915771484 Cut analysis time: 0.0005362033843994141
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01815 (24), -0.01783 (24), -0.01681 (24), -0.01651 (24), -0.01647 (24), -0.01603 (24), -0.01601 (24), -0.01597 (24), -0.01570 (24), -0.01564 (24), -0.01521 (24), -0.01502 (24), -0.01489 (24), -0.01470 (24), -0.01466 (24), -0.01457 (24), -0.01437 (24), -0.01431 (24), -0.01394 (24), -0.01387 (24), 
Length of domains: 119
Time: pickout 0.0010    decision 0.0219    set_bounds 0.0109    solve 0.1865    add 0.0045    
Accumulated time: pickout 0.0238    decision 1.2909    set_bounds 0.3522    solve 4.7085    add 0.3920    
Current (lb-rhs): -0.018148958683013916
1915 domains visited
Cumulative time: 8.669790029525757

BaB round 23
batch: 119
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4147] [/input-12, 5914] [/input-12, 2274] [/input-12, 4147] [/input-12, 8036] [/input-12, 469] [/input-12, 2274] [/input-12, 3563] [/input-12, 4898] [/input-12, 4147] 
cut re-enabled after branching node selection
0 lb beta sum: 1.7795246839523315, worst -0.01588684320449829
10 lb beta sum: 1.7795246839523315, worst -0.01587045192718506
Time: prepare 0.0108    bound 0.1730    transfer 0.0010    finalize 0.0031    func 0.1896    
Accumulated time: func 5.2041    prepare 0.1466    bound 4.8991    transfer 0.0354    finalize 0.1024    
all_split False
======================Cut inference begins======================
max lb tensor(0.23600954) min lb tensor(-0.01586109)
Number of Verified Splits: 130 of 238
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 28
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.030465364456176758 
BICCOS Cumulative time: 1.5432910919189453
Preprocessing time: 0.007119894027709961 Inference time: 0.021034717559814453 Add cuts time: 0.0017437934875488281 Cut analysis time: 0.0005669593811035156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01586 (25), -0.01553 (25), -0.01456 (25), -0.01424 (25), -0.01421 (25), -0.01376 (25), -0.01372 (25), -0.01371 (25), -0.01339 (25), -0.01339 (25), -0.01288 (25), -0.01274 (25), -0.01265 (25), -0.01241 (25), -0.01241 (25), -0.01230 (25), -0.01210 (25), -0.01206 (25), -0.01167 (25), -0.01167 (25), 
Length of domains: 108
Time: pickout 0.0010    decision 0.0221    set_bounds 0.0101    solve 0.1897    add 0.0028    
Accumulated time: pickout 0.0248    decision 1.3130    set_bounds 0.3623    solve 4.8982    add 0.3948    
Current (lb-rhs): -0.015861093997955322
2023 domains visited
Cumulative time: 8.926648378372192

BaB round 24
batch: 108
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 8036] [/input-12, 3563] [/input-12, 8036] [/input-12, 8036] [/input-12, 8036] [/input-12, 8036] [/input-12, 8036] [/input-12, 3563] [/input-12, 8036] [/input-12, 3563] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.02092266082763672
10 lb beta sum: 1.4213460683822632, worst -0.014661312103271484
Time: prepare 0.0044    bound 0.1728    transfer 0.0009    finalize 0.0028    func 0.1824    
Accumulated time: func 5.3865    prepare 0.1511    bound 5.0720    transfer 0.0363    finalize 0.1052    
all_split False
======================Cut inference begins======================
max lb tensor(0.01983517) min lb tensor(-0.01455212)
Number of Verified Splits: 134 of 216
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 31
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.0306546688079834 
BICCOS Cumulative time: 1.5739457607269287
Preprocessing time: 0.006491184234619141 Inference time: 0.021851301193237305 Add cuts time: 0.0017125606536865234 Cut analysis time: 0.0005996227264404297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01455 (26), -0.01423 (26), -0.01370 (26), -0.01338 (26), -0.01321 (26), -0.01288 (26), -0.01287 (26), -0.01240 (26), -0.01203 (26), -0.01152 (26), -0.01152 (26), -0.01107 (26), -0.00878 (26), -0.00846 (26), -0.00827 (26), -0.00787 (26), -0.00757 (26), -0.00716 (26), -0.00703 (26), -0.00669 (26), 
Length of domains: 82
Time: pickout 0.0009    decision 0.0208    set_bounds 0.0095    solve 0.1825    add 0.0024    
Accumulated time: pickout 0.0257    decision 1.3339    set_bounds 0.3718    solve 5.0807    add 0.3973    
Current (lb-rhs): -0.014552116394042969
2105 domains visited
Cumulative time: 9.174333572387695

BaB round 25
batch: 82
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 469] [/input-12, 469] [/input-12, 1579] [/input-12, 469] [/input-12, 1579] [/input-12, 1579] [/input-12, 469] [/input-12, 1579] [/input-12, 1579] [/input-12, 1579] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.01892930269241333
10 lb beta sum: 1.8111748695373535, worst -0.007784247398376465
Time: prepare 0.0034    bound 0.1700    transfer 0.0008    finalize 0.0023    func 0.1777    
Accumulated time: func 5.5642    prepare 0.1547    bound 5.2420    transfer 0.0371    finalize 0.1075    
all_split False
======================Cut inference begins======================
max lb tensor(0.48358566) min lb tensor(-0.00777495)
Number of Verified Splits: 147 of 164
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 34.
#cuts 1-3: 33
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.03162813186645508 
BICCOS Cumulative time: 1.6055738925933838
Preprocessing time: 0.0051114559173583984 Inference time: 0.024367332458496094 Add cuts time: 0.0015573501586914062 Cut analysis time: 0.0005919933319091797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00777 (27), -0.00744 (27), -0.00694 (27), -0.00669 (27), -0.00638 (27), -0.00609 (27), -0.00596 (27), -0.00564 (27), -0.00563 (27), -0.00524 (27), -0.00502 (27), -0.00490 (27), -0.00453 (27), -0.00424 (27), -0.00376 (27), -0.00325 (27), -0.00047 (27), 
Length of domains: 17
Time: pickout 0.0035    decision 0.0173    set_bounds 0.0072    solve 0.1777    add 0.0014    
Accumulated time: pickout 0.0292    decision 1.3512    set_bounds 0.3789    solve 5.2584    add 0.3986    
Current (lb-rhs): -0.007774949073791504
2122 domains visited
Cumulative time: 9.413851022720337

BaB round 26
batch: 17
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1579] [/input-12, 3563] [/input-12, 469] [/input-12, 3563] [/input-12, 469] [/input-12, 3563] [/input-12, 469] [/input-12, 3563] [/input-12, 469] [/input-12, 2274] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.01555722951889038
10 lb beta sum: 1.8221943378448486, worst -0.0040732622146606445
Time: prepare 0.0010    bound 0.1656    transfer 0.0005    finalize 0.0010    func 0.1683    
Accumulated time: func 5.7325    prepare 0.1559    bound 5.4075    transfer 0.0376    finalize 0.1085    
all_split False
======================Cut inference begins======================
max lb tensor(0.24938786) min lb tensor(-0.00406551)
Number of Verified Splits: 12 of 34
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 34.
#cuts 1-3: 33
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.004782676696777344 
BICCOS Cumulative time: 1.6103565692901611
Preprocessing time: 0.0012962818145751953 Inference time: 0.0020651817321777344 Add cuts time: 0.0007567405700683594 Cut analysis time: 0.0006644725799560547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00407 (28), -0.00372 (28), -0.00323 (28), -0.00306 (28), -0.00291 (28), -0.00271 (28), -0.00238 (28), -0.00233 (28), -0.00232 (28), -0.00198 (28), -0.00197 (28), -0.00194 (28), -0.00153 (28), -0.00133 (28), -0.00119 (28), -0.00110 (28), -0.00087 (28), -0.00087 (28), -0.00065 (28), -0.00061 (28), 
Length of domains: 22
Time: pickout 0.0007    decision 0.0138    set_bounds 0.0017    solve 0.1683    add 0.0015    
Accumulated time: pickout 0.0298    decision 1.3650    set_bounds 0.3806    solve 5.4268    add 0.4001    
Current (lb-rhs): -0.004065513610839844
2144 domains visited
Cumulative time: 9.604855060577393

BaB round 27
batch: 22
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2274] [/input-12, 2274] [/input-12, 2274] [/input-12, 2274] [/input-12, 2274] [/input-12, 2274] [/input-12, 2274] [/input-12, 3563] [/input-12, 3563] [/input-12, 3563] 
cut re-enabled after branching node selection
0 lb beta sum: 2.0785813331604004, worst -0.004065871238708496
10 lb beta sum: 2.0785813331604004, worst -0.004060268402099609
Time: prepare 0.0023    bound 0.1687    transfer 0.0003    finalize 0.0016    func 0.1732    
Accumulated time: func 5.9057    prepare 0.1584    bound 5.5762    transfer 0.0380    finalize 0.1101    
all_split False
======================Cut inference begins======================
max lb tensor(0.00594878) min lb tensor(-0.00405443)
Number of Verified Splits: 19 of 44
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 34.
#cuts 1-3: 33
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.0063571929931640625 
BICCOS Cumulative time: 1.6167137622833252
Preprocessing time: 0.001575469970703125 Inference time: 0.0033795833587646484 Add cuts time: 0.0008115768432617188 Cut analysis time: 0.0005905628204345703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00405 (29), -0.00371 (29), -0.00321 (29), -0.00305 (29), -0.00287 (29), -0.00270 (29), -0.00238 (29), -0.00229 (29), -0.00227 (29), -0.00197 (29), -0.00193 (29), -0.00192 (29), -0.00152 (29), -0.00133 (29), -0.00122 (29), -0.00118 (29), -0.00108 (29), -0.00085 (29), -0.00083 (29), -0.00083 (29), 
Length of domains: 25
Time: pickout 0.0005    decision 0.0141    set_bounds 0.0021    solve 0.1734    add 0.0016    
Accumulated time: pickout 0.0304    decision 1.3791    set_bounds 0.3827    solve 5.6001    add 0.4017    
Current (lb-rhs): -0.004054427146911621
2169 domains visited
Cumulative time: 9.803186178207397

BaB round 28
batch: 25
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 484] [/input-12, 484] [/input-12, 484] [/input-12, 484] [/input-12, 484] [/input-12, 484] [/input-12, 484] [/input-16, 236] [/input-16, 236] [/input-16, 236] 
cut re-enabled after branching node selection
0 lb beta sum: 2.065476655960083, worst -0.002954423427581787
10 lb beta sum: 2.065476655960083, worst -0.0029419660568237305
Time: prepare 0.0026    bound 0.1658    transfer 0.0004    finalize 0.0018    func 0.1709    
Accumulated time: func 6.0767    prepare 0.1611    bound 5.7420    transfer 0.0383    finalize 0.1119    
all_split False
======================Cut inference begins======================
max lb tensor(0.03042769) min lb tensor(-0.00293934)
Number of Verified Splits: 37 of 50
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 34.
#cuts 1-3: 33
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.010605096817016602 
BICCOS Cumulative time: 1.6273188591003418
Preprocessing time: 0.0019941329956054688 Inference time: 0.007059335708618164 Add cuts time: 0.0009415149688720703 Cut analysis time: 0.0006101131439208984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00294 (30), -0.00260 (30), -0.00210 (30), -0.00175 (30), -0.00135 (30), -0.00115 (30), -0.00089 (30), -0.00082 (30), -0.00050 (30), -0.00049 (30), -0.00014 (30), -0.00007 (30), -0.00003 (30), 
Length of domains: 13
Time: pickout 0.0005    decision 0.0143    set_bounds 0.0024    solve 0.1710    add 0.0013    
Accumulated time: pickout 0.0309    decision 1.3935    set_bounds 0.3851    solve 5.7711    add 0.4031    
Current (lb-rhs): -0.0029393434524536133
2182 domains visited
Cumulative time: 10.003950834274292

BaB round 29
batch: 13
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-12, 484] [/input-12, 484] [/input-16, 236] 
cut re-enabled after branching node selection
0 lb beta sum: 1.9767879247665405, worst -0.0003864169120788574
10 lb beta sum: 1.9767879247665405, worst -0.0003781318664550781
Time: prepare 0.0015    bound 0.1661    transfer 0.0002    finalize 0.0010    func 0.1690    
Accumulated time: func 6.2457    prepare 0.1628    bound 5.9081    transfer 0.0386    finalize 0.1128    
all_split False
======================Cut inference begins======================
max lb tensor(0.03043258) min lb tensor(-0.00037533)
Number of Verified Splits: 24 of 26
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 34.
#cuts 1-3: 33
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.006747245788574219 
BICCOS Cumulative time: 1.634066104888916
Preprocessing time: 0.0010657310485839844 Inference time: 0.0043218135833740234 Add cuts time: 0.0007755756378173828 Cut analysis time: 0.0005841255187988281
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00038 (31), -0.00002 (31), 
Length of domains: 2
Time: pickout 0.0006    decision 0.0138    set_bounds 0.0014    solve 0.1690    add 0.0009    
Accumulated time: pickout 0.0314    decision 1.4073    set_bounds 0.3866    solve 5.9401    add 0.4039    
Current (lb-rhs): -0.00037533044815063477
2184 domains visited
Cumulative time: 10.196779251098633

BaB round 30
batch: 2
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2225] [/input-12, 2225] 
split level 1: [/input-12, 3564] [/input-12, 3564] 
split level 2: [/input-16, 65] [/input-16, 65] 
cut re-enabled after branching node selection
0 lb beta sum: 1.7799491882324219, worst 0.007412075996398926

all verified at 0th iter
Time: prepare 0.0010    bound 0.0066    transfer 0.0002    finalize 0.0006    func 0.0085    
Accumulated time: func 6.2542    prepare 0.1640    bound 5.9147    transfer 0.0388    finalize 0.1134    
all_split False
======================Cut inference begins======================
max lb tensor(0.01106656) min lb tensor(0.00741208)
Number of Verified Splits: 16 of 16
No cut inferred: All or none verified.
Total number of valid cuts: 34.
#cuts 1-3: 33
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.0008041858673095703 
BICCOS Cumulative time: 1.6348702907562256
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0005    decision 0.0131    set_bounds 0.0018    solve 0.0085    add 0.0000    
Accumulated time: pickout 0.0319    decision 1.4204    set_bounds 0.3883    solve 5.9487    add 0.4040    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2184 domains visited
Cumulative time: 10.221588850021362


Properties batch 8, size 1
Remaining timeout: 187.86796879768372
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 12.1321 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 57, vnnlib ID: 57 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-28.91893959, -30.56066132, -25.36582947, -25.30379105, -25.85960960,
         -25.37417030, -27.14542961, -26.46192360, -30.68348312, -29.38322067]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1509]; unstable size 1509; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 83, 1, 1509] with unstable size 82 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 42, 1, 1509] with unstable size 41 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1509] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [678]; unstable size 678; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 42, 1, 678] with unstable size 41 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 678] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [41]; unstable size 41; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 41] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.08522534,  3.09432983, -1.02446544, -0.23678803, -0.55889213,
          0.56589246, -0.46072555,  3.46229625,  2.06667089]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-28.91893959, -30.56066132, -25.36582947, -25.30379105, -25.85960960,
         -25.37417030, -27.14542961, -26.46192360, -30.68348312, -29.38322067]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-28.91893959, -30.56066322, -25.36582947, -25.30378723, -25.85961151,
          -25.37416840, -27.14543152, -26.46192169, -30.68348312, -29.38321686],
         [-28.91893959, -30.56066322, -25.36582947, -25.30378723, -25.85961151,
          -25.37416840, -27.14543152, -26.46192169, -30.68348312, -29.38321686]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.00833893, -0.07038116,  0.48544312,  1.08775330]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-1.09999990, -0.14761895,  0.78888893,  ..., -1.78253973,
            -1.89365077, -1.87777781],
           [-1.11587298, -0.16349196,  0.56666672,  ..., -1.73492062,
            -1.89365077, -1.87777781],
           [-1.14761901, -1.03650784, -0.63968253,  ..., -1.62380958,
            -1.83015871, -1.79841268],
           ...,
           [-0.24285704, -0.22698402, -0.11587292,  ..., -0.00476181,
             0.21746039,  0.26507944],
           [-0.38571417, -0.21111101, -0.06825387,  ...,  0.01111121,
             0.24920642,  0.43968260],
           [-0.27460307,  0.01111121, -0.02063482,  ..., -0.05238085,
             0.20158738,  0.50317466]],

          [[-1.06280184,  0.32206130,  1.51368785,  ..., -1.77133656,
            -1.88405800, -1.86795497],
           [-1.03059578,  0.22544295,  1.15942061,  ..., -1.72302747,
            -1.88405800, -1.86795497],
           [-1.11111104, -0.95008045, -0.45088565,  ..., -1.61030602,
            -1.81964576, -1.78743970],
           ...,
           [-0.28985494, -0.17713353,  0.08051541,  ..., -0.06441211,
             0.20933989,  0.25764906],
           [-0.53140092, -0.28985494,  0.04830930,  ..., -0.01610294,
             0.25764906,  0.46698883],
           [-0.49919480, -0.11272129,  0.08051541,  ..., -0.03220600,
             0.24154601,  0.54750413]],

          [[-0.83808094,  0.70614707,  1.92054021,  ..., -1.52773619,
            -1.61769128, -1.60269880],
           [-0.82308841,  0.49625200,  1.44078004,  ..., -1.46776617,
            -1.61769128, -1.60269880],
           [-0.92803597, -0.74812591, -0.29835078,  ..., -1.37781119,
            -1.57271373, -1.54272878],
           ...,
           [-0.46326834, -0.20839565,  0.15142445,  ..., -0.01349309,
             0.21139447,  0.30134949],
           [-0.67316341, -0.34332830,  0.09145443,  ...,  0.04647692,
             0.30134949,  0.54122955],
           [-0.65817088, -0.23838064,  0.07646193,  ...,  0.03148442,
             0.31634200,  0.66116959]]],


         [[[-1.09999990, -0.14761895,  0.78888893,  ..., -1.78253973,
            -1.89365077, -1.87777781],
           [-1.11587298, -0.16349196,  0.56666672,  ..., -1.73492062,
            -1.89365077, -1.87777781],
           [-1.14761901, -1.03650784, -0.63968253,  ..., -1.62380958,
            -1.83015871, -1.79841268],
           ...,
           [-0.24285704, -0.22698402, -0.11587292,  ..., -0.00476181,
             0.21746039,  0.26507944],
           [-0.38571417, -0.21111101, -0.06825387,  ...,  0.01111121,
             0.24920642,  0.43968260],
           [-0.27460307,  0.01111121, -0.02063482,  ..., -0.05238085,
             0.20158738,  0.50317466]],

          [[-1.06280184,  0.32206130,  1.51368785,  ..., -1.77133656,
            -1.88405800, -1.86795497],
           [-1.03059578,  0.22544295,  1.15942061,  ..., -1.72302747,
            -1.88405800, -1.86795497],
           [-1.11111104, -0.95008045, -0.45088565,  ..., -1.61030602,
            -1.81964576, -1.78743970],
           ...,
           [-0.28985494, -0.17713353,  0.08051541,  ..., -0.06441211,
             0.20933989,  0.25764906],
           [-0.53140092, -0.28985494,  0.04830930,  ..., -0.01610294,
             0.25764906,  0.46698883],
           [-0.49919480, -0.11272129,  0.08051541,  ..., -0.03220600,
             0.24154601,  0.54750413]],

          [[-0.83808094,  0.70614707,  1.92054021,  ..., -1.52773619,
            -1.61769128, -1.60269880],
           [-0.82308841,  0.49625200,  1.44078004,  ..., -1.46776617,
            -1.61769128, -1.60269880],
           [-0.92803597, -0.74812591, -0.29835078,  ..., -1.37781119,
            -1.57271373, -1.54272878],
           ...,
           [-0.46326834, -0.20839565,  0.15142445,  ..., -0.01349309,
             0.21139447,  0.30134949],
           [-0.67316341, -0.34332830,  0.09145443,  ...,  0.04647692,
             0.30134949,  0.54122955],
           [-0.65817088, -0.23838064,  0.07646193,  ...,  0.03148442,
             0.31634200,  0.66116959]]],


         [[[-1.09999990, -0.14761895,  0.78888893,  ..., -1.78253973,
            -1.89365077, -1.87777781],
           [-1.11587298, -0.16349196,  0.56666672,  ..., -1.73492062,
            -1.89365077, -1.87777781],
           [-1.14761901, -1.03650784, -0.63968253,  ..., -1.62380958,
            -1.83015871, -1.79841268],
           ...,
           [-0.24285704, -0.22698402, -0.11587292,  ..., -0.00476181,
             0.21746039,  0.26507944],
           [-0.38571417, -0.21111101, -0.06825387,  ...,  0.01111121,
             0.24920642,  0.43968260],
           [-0.27460307,  0.01111121, -0.02063482,  ..., -0.05238085,
             0.20158738,  0.50317466]],

          [[-1.06280184,  0.32206130,  1.51368785,  ..., -1.77133656,
            -1.88405800, -1.86795497],
           [-1.03059578,  0.22544295,  1.15942061,  ..., -1.72302747,
            -1.88405800, -1.86795497],
           [-1.11111104, -0.95008045, -0.45088565,  ..., -1.61030602,
            -1.81964576, -1.78743970],
           ...,
           [-0.28985494, -0.17713353,  0.08051541,  ..., -0.06441211,
             0.20933989,  0.25764906],
           [-0.53140092, -0.28985494,  0.04830930,  ..., -0.01610294,
             0.25764906,  0.46698883],
           [-0.49919480, -0.11272129,  0.08051541,  ..., -0.03220600,
             0.24154601,  0.54750413]],

          [[-0.83808094,  0.70614707,  1.92054021,  ..., -1.52773619,
            -1.61769128, -1.60269880],
           [-0.82308841,  0.49625200,  1.44078004,  ..., -1.46776617,
            -1.61769128, -1.60269880],
           [-0.92803597, -0.74812591, -0.29835078,  ..., -1.37781119,
            -1.57271373, -1.54272878],
           ...,
           [-0.46326834, -0.20839565,  0.15142445,  ..., -0.01349309,
             0.21139447,  0.30134949],
           [-0.67316341, -0.34332830,  0.09145443,  ...,  0.04647692,
             0.30134949,  0.54122955],
           [-0.65817088, -0.23838064,  0.07646193,  ...,  0.03148442,
             0.31634200,  0.66116959]]],


         [[[-1.09999990, -0.14761895,  0.78888893,  ..., -1.78253973,
            -1.89365077, -1.87777781],
           [-1.11587298, -0.16349196,  0.56666672,  ..., -1.73492062,
            -1.89365077, -1.87777781],
           [-1.14761901, -1.03650784, -0.63968253,  ..., -1.62380958,
            -1.83015871, -1.79841268],
           ...,
           [-0.24285704, -0.22698402, -0.11587292,  ..., -0.00476181,
             0.21746039,  0.26507944],
           [-0.38571417, -0.21111101, -0.06825387,  ...,  0.01111121,
             0.24920642,  0.43968260],
           [-0.27460307,  0.01111121, -0.02063482,  ..., -0.05238085,
             0.20158738,  0.50317466]],

          [[-1.06280184,  0.32206130,  1.51368785,  ..., -1.77133656,
            -1.88405800, -1.86795497],
           [-1.03059578,  0.22544295,  1.15942061,  ..., -1.72302747,
            -1.88405800, -1.86795497],
           [-1.11111104, -0.95008045, -0.45088565,  ..., -1.61030602,
            -1.81964576, -1.78743970],
           ...,
           [-0.28985494, -0.17713353,  0.08051541,  ..., -0.06441211,
             0.20933989,  0.25764906],
           [-0.53140092, -0.28985494,  0.04830930,  ..., -0.01610294,
             0.25764906,  0.46698883],
           [-0.49919480, -0.11272129,  0.08051541,  ..., -0.03220600,
             0.24154601,  0.54750413]],

          [[-0.83808094,  0.70614707,  1.92054021,  ..., -1.52773619,
            -1.61769128, -1.60269880],
           [-0.82308841,  0.49625200,  1.44078004,  ..., -1.46776617,
            -1.61769128, -1.60269880],
           [-0.92803597, -0.74812591, -0.29835078,  ..., -1.37781119,
            -1.57271373, -1.54272878],
           ...,
           [-0.46326834, -0.20839565,  0.15142445,  ..., -0.01349309,
             0.21139447,  0.30134949],
           [-0.67316341, -0.34332830,  0.09145443,  ...,  0.04647692,
             0.30134949,  0.54122955],
           [-0.65817088, -0.23838064,  0.07646193,  ...,  0.03148442,
             0.31634200,  0.66116959]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0577 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 58, vnnlib ID: 58 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-53.27493286, -51.43072128, -53.25484848, -52.14209366, -54.48398209,
         -52.64693832, -52.15500641, -55.15750122, -53.22054672, -52.05408478]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1168]; unstable size 1168; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 84, 1, 1168] with unstable size 83 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 29, 1, 1168] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1168] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [552]; unstable size 552; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 29, 1, 552] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 552] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [28]; unstable size 28; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.25898707, -2.47425842,  0.05951285,  1.38183677,  0.35360512,
         -0.92727232,  2.03513670, -0.39660966, -1.73952103]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-53.27493286, -51.43072128, -53.25484848, -52.14209366, -54.48398209,
         -52.64693832, -52.15500641, -55.15750122, -53.22054672, -52.05408478]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-53.27493668, -51.43072891, -53.25484848, -52.14209366, -54.48398590,
          -52.64693832, -52.15501785, -55.15750122, -53.22055817, -52.05409241],
         [-53.27493668, -51.43072891, -53.25484848, -52.14209366, -54.48398590,
          -52.64693832, -52.15501785, -55.15750122, -53.22055817, -52.05409241]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.13284302, -0.71136475,  0.01292419,  1.07846451, -0.08800125]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-0.17936498, -0.14761895, -0.09999990,  ...,  0.24920642,
             0.28095245,  0.36031753],
           [-0.13174593, -0.11587292, -0.09999990,  ...,  0.56666672,
             0.29682547,  0.29682547],
           [-0.11587292, -0.08412688, -0.08412688,  ...,  0.32857150,
             0.31269848,  0.36031753],
           ...,
           [ 0.42380959,  0.47142863,  0.63015878,  ...,  1.10634947,
             1.15396857,  1.23333359],
           [ 0.43968260,  0.56666672,  0.59841275,  ...,  1.16984153,
             1.26507962,  1.29682565],
           [ 0.51904768,  0.59841275,  0.56666672,  ...,  1.26507962,
             1.31269872,  1.26507962]],

          [[-0.22544271, -0.19323659, -0.14492741,  ...,  0.22544295,
             0.24154601,  0.27375212],
           [-0.17713353, -0.16103047, -0.14492741,  ...,  0.72463775,
             0.37037048,  0.25764906],
           [-0.16103047, -0.12882435, -0.14492741,  ...,  0.56360716,
             0.43478271,  0.37037048],
           ...,
           [ 0.67632860,  0.74074084,  0.93397754,  ...,  1.32045114,
             1.33655429,  1.38486338],
           [ 0.74074084,  0.88566834,  0.93397754,  ...,  1.33655429,
             1.41706955,  1.41706955],
           [ 0.80515307,  0.90177143,  0.90177143,  ...,  1.43317258,
             1.46537876,  1.36876035]],

          [[-0.11844061, -0.08845562, -0.04347810,  ...,  0.40629703,
             0.42128953,  0.46626705],
           [-0.07346311, -0.05847061, -0.04347810,  ...,  0.30134949,
             0.15142445,  0.25637197],
           [-0.05847061, -0.02848560, -0.02848560,  ...,  0.07646193,
             0.13643195,  0.30134949],
           ...,
           [ 0.97601217,  1.02098966,  1.20089996,  ...,  1.54572761,
             1.59070504,  1.63568258],
           [ 1.03598225,  1.17091501,  1.21589243,  ...,  1.56072009,
             1.63568258,  1.65067506],
           [ 1.11094475,  1.21589243,  1.20089996,  ...,  1.63568258,
             1.68066013,  1.60569763]]],


         [[[-0.17936498, -0.14761895, -0.09999990,  ...,  0.24920642,
             0.28095245,  0.36031753],
           [-0.13174593, -0.11587292, -0.09999990,  ...,  0.56666672,
             0.29682547,  0.29682547],
           [-0.11587292, -0.08412688, -0.08412688,  ...,  0.32857150,
             0.31269848,  0.36031753],
           ...,
           [ 0.42380959,  0.47142863,  0.63015878,  ...,  1.10634947,
             1.15396857,  1.23333359],
           [ 0.43968260,  0.56666672,  0.59841275,  ...,  1.16984153,
             1.26507962,  1.29682565],
           [ 0.51904768,  0.59841275,  0.56666672,  ...,  1.26507962,
             1.31269872,  1.26507962]],

          [[-0.22544271, -0.19323659, -0.14492741,  ...,  0.22544295,
             0.24154601,  0.27375212],
           [-0.17713353, -0.16103047, -0.14492741,  ...,  0.72463775,
             0.37037048,  0.25764906],
           [-0.16103047, -0.12882435, -0.14492741,  ...,  0.56360716,
             0.43478271,  0.37037048],
           ...,
           [ 0.67632860,  0.74074084,  0.93397754,  ...,  1.32045114,
             1.33655429,  1.38486338],
           [ 0.74074084,  0.88566834,  0.93397754,  ...,  1.33655429,
             1.41706955,  1.41706955],
           [ 0.80515307,  0.90177143,  0.90177143,  ...,  1.43317258,
             1.46537876,  1.36876035]],

          [[-0.11844061, -0.08845562, -0.04347810,  ...,  0.40629703,
             0.42128953,  0.46626705],
           [-0.07346311, -0.05847061, -0.04347810,  ...,  0.30134949,
             0.15142445,  0.25637197],
           [-0.05847061, -0.02848560, -0.02848560,  ...,  0.07646193,
             0.13643195,  0.30134949],
           ...,
           [ 0.97601217,  1.02098966,  1.20089996,  ...,  1.54572761,
             1.59070504,  1.63568258],
           [ 1.03598225,  1.17091501,  1.21589243,  ...,  1.56072009,
             1.63568258,  1.65067506],
           [ 1.11094475,  1.21589243,  1.20089996,  ...,  1.63568258,
             1.68066013,  1.60569763]]],


         [[[-0.17936498, -0.14761895, -0.09999990,  ...,  0.24920642,
             0.28095245,  0.36031753],
           [-0.13174593, -0.11587292, -0.09999990,  ...,  0.56666672,
             0.29682547,  0.29682547],
           [-0.11587292, -0.08412688, -0.08412688,  ...,  0.32857150,
             0.31269848,  0.36031753],
           ...,
           [ 0.42380959,  0.47142863,  0.63015878,  ...,  1.10634947,
             1.15396857,  1.23333359],
           [ 0.43968260,  0.56666672,  0.59841275,  ...,  1.16984153,
             1.26507962,  1.29682565],
           [ 0.51904768,  0.59841275,  0.56666672,  ...,  1.26507962,
             1.31269872,  1.26507962]],

          [[-0.22544271, -0.19323659, -0.14492741,  ...,  0.22544295,
             0.24154601,  0.27375212],
           [-0.17713353, -0.16103047, -0.14492741,  ...,  0.72463775,
             0.37037048,  0.25764906],
           [-0.16103047, -0.12882435, -0.14492741,  ...,  0.56360716,
             0.43478271,  0.37037048],
           ...,
           [ 0.67632860,  0.74074084,  0.93397754,  ...,  1.32045114,
             1.33655429,  1.38486338],
           [ 0.74074084,  0.88566834,  0.93397754,  ...,  1.33655429,
             1.41706955,  1.41706955],
           [ 0.80515307,  0.90177143,  0.90177143,  ...,  1.43317258,
             1.46537876,  1.36876035]],

          [[-0.11844061, -0.08845562, -0.04347810,  ...,  0.40629703,
             0.42128953,  0.46626705],
           [-0.07346311, -0.05847061, -0.04347810,  ...,  0.30134949,
             0.15142445,  0.25637197],
           [-0.05847061, -0.02848560, -0.02848560,  ...,  0.07646193,
             0.13643195,  0.30134949],
           ...,
           [ 0.97601217,  1.02098966,  1.20089996,  ...,  1.54572761,
             1.59070504,  1.63568258],
           [ 1.03598225,  1.17091501,  1.21589243,  ...,  1.56072009,
             1.63568258,  1.65067506],
           [ 1.11094475,  1.21589243,  1.20089996,  ...,  1.63568258,
             1.68066013,  1.60569763]]],


         [[[-0.17936498, -0.14761895, -0.09999990,  ...,  0.24920642,
             0.28095245,  0.36031753],
           [-0.13174593, -0.11587292, -0.09999990,  ...,  0.56666672,
             0.29682547,  0.29682547],
           [-0.11587292, -0.08412688, -0.08412688,  ...,  0.32857150,
             0.31269848,  0.36031753],
           ...,
           [ 0.42380959,  0.47142863,  0.63015878,  ...,  1.10634947,
             1.15396857,  1.23333359],
           [ 0.43968260,  0.56666672,  0.59841275,  ...,  1.16984153,
             1.26507962,  1.29682565],
           [ 0.51904768,  0.59841275,  0.56666672,  ...,  1.26507962,
             1.31269872,  1.26507962]],

          [[-0.22544271, -0.19323659, -0.14492741,  ...,  0.22544295,
             0.24154601,  0.27375212],
           [-0.17713353, -0.16103047, -0.14492741,  ...,  0.72463775,
             0.37037048,  0.25764906],
           [-0.16103047, -0.12882435, -0.14492741,  ...,  0.56360716,
             0.43478271,  0.37037048],
           ...,
           [ 0.67632860,  0.74074084,  0.93397754,  ...,  1.32045114,
             1.33655429,  1.38486338],
           [ 0.74074084,  0.88566834,  0.93397754,  ...,  1.33655429,
             1.41706955,  1.41706955],
           [ 0.80515307,  0.90177143,  0.90177143,  ...,  1.43317258,
             1.46537876,  1.36876035]],

          [[-0.11844061, -0.08845562, -0.04347810,  ...,  0.40629703,
             0.42128953,  0.46626705],
           [-0.07346311, -0.05847061, -0.04347810,  ...,  0.30134949,
             0.15142445,  0.25637197],
           [-0.05847061, -0.02848560, -0.02848560,  ...,  0.07646193,
             0.13643195,  0.30134949],
           ...,
           [ 0.97601217,  1.02098966,  1.20089996,  ...,  1.54572761,
             1.59070504,  1.63568258],
           [ 1.03598225,  1.17091501,  1.21589243,  ...,  1.56072009,
             1.63568258,  1.65067506],
           [ 1.11094475,  1.21589243,  1.20089996,  ...,  1.63568258,
             1.68066013,  1.60569763]]],


         [[[-0.17936498, -0.14761895, -0.09999990,  ...,  0.24920642,
             0.28095245,  0.36031753],
           [-0.13174593, -0.11587292, -0.09999990,  ...,  0.56666672,
             0.29682547,  0.29682547],
           [-0.11587292, -0.08412688, -0.08412688,  ...,  0.32857150,
             0.31269848,  0.36031753],
           ...,
           [ 0.42380959,  0.47142863,  0.63015878,  ...,  1.10634947,
             1.15396857,  1.23333359],
           [ 0.43968260,  0.56666672,  0.59841275,  ...,  1.16984153,
             1.26507962,  1.29682565],
           [ 0.51904768,  0.59841275,  0.56666672,  ...,  1.26507962,
             1.31269872,  1.26507962]],

          [[-0.22544271, -0.19323659, -0.14492741,  ...,  0.22544295,
             0.24154601,  0.27375212],
           [-0.17713353, -0.16103047, -0.14492741,  ...,  0.72463775,
             0.37037048,  0.25764906],
           [-0.16103047, -0.12882435, -0.14492741,  ...,  0.56360716,
             0.43478271,  0.37037048],
           ...,
           [ 0.67632860,  0.74074084,  0.93397754,  ...,  1.32045114,
             1.33655429,  1.38486338],
           [ 0.74074084,  0.88566834,  0.93397754,  ...,  1.33655429,
             1.41706955,  1.41706955],
           [ 0.80515307,  0.90177143,  0.90177143,  ...,  1.43317258,
             1.46537876,  1.36876035]],

          [[-0.11844061, -0.08845562, -0.04347810,  ...,  0.40629703,
             0.42128953,  0.46626705],
           [-0.07346311, -0.05847061, -0.04347810,  ...,  0.30134949,
             0.15142445,  0.25637197],
           [-0.05847061, -0.02848560, -0.02848560,  ...,  0.07646193,
             0.13643195,  0.30134949],
           ...,
           [ 0.97601217,  1.02098966,  1.20089996,  ...,  1.54572761,
             1.59070504,  1.63568258],
           [ 1.03598225,  1.17091501,  1.21589243,  ...,  1.56072009,
             1.63568258,  1.65067506],
           [ 1.11094475,  1.21589243,  1.20089996,  ...,  1.63568258,
             1.68066013,  1.60569763]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0501 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 59, vnnlib ID: 59 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-32.53179932, -34.27663422, -29.64380646, -29.96899605, -29.28070641,
         -30.63342094, -28.60422325, -32.08634567, -33.07874680, -34.13999176]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1786]; unstable size 1786; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 501, 1, 1786] with unstable size 500 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 44, 1, 1786] with unstable size 43 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1786] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [500]; unstable size 500; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 44, 1, 500] with unstable size 43 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 500] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [43]; unstable size 43; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 43] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.33535981, 3.86358976, 0.32152689, 0.70028132, 0.02001703, 1.31268001,
         2.33601522, 2.77430105, 3.56764960]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0384 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 60, vnnlib ID: 60 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-66.75519562, -63.48653030, -67.78966522, -67.05683136, -70.14416504,
         -67.88803864, -69.44069672, -70.49210358, -65.85977936, -65.28301239]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1254]; unstable size 1254; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 304, 1, 1254] with unstable size 303 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 25, 1, 1254] with unstable size 24 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1254] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [303]; unstable size 303; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 25, 1, 303] with unstable size 24 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 303] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [24]; unstable size 24; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.11012554, 2.68923903, 2.18399620, 5.06264544, 2.94434118, 4.44530249,
         5.23919058, 0.99521303, 1.12734449]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0387 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 61, vnnlib ID: 61 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-39.21471786, -40.75772476, -41.02931213, -42.05759048, -40.27139664,
         -42.40013885, -41.96969986, -42.15310287, -38.37924576, -40.32546997]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1591]; unstable size 1591; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 81, 1, 1591] with unstable size 80 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 45, 1, 1591] with unstable size 44 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1591] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [662]; unstable size 662; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 45, 1, 662] with unstable size 44 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 662] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [44]; unstable size 44; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 44] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.61465454,  0.27117944,  1.19801664, -0.58175683,  1.46175647,
          0.69804382,  1.02378953, -1.99903214, -0.92333555]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-39.21471786, -40.75772476, -41.02931213, -42.05759048, -40.27139664,
         -42.40013885, -41.96969986, -42.15310287, -38.37924576, -40.32546997]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-39.21472168, -40.75772095, -41.02931595, -42.05759048, -40.27140045,
          -42.40013885, -41.96969604, -42.15310287, -38.37924576, -40.32546997],
         [-39.21472168, -40.75772095, -41.02931595, -42.05759048, -40.27140045,
          -42.40013885, -41.96969604, -42.15310287, -38.37924576, -40.32546997]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.54299927,  1.05667877, -0.83547592,  1.11074829]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0478 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 62, vnnlib ID: 62 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-87.12922668, -92.39070892, -92.51387787, -96.39989471, -93.76632690,
         -97.22203064, -97.51079559, -95.04232025, -85.43056488, -91.87006378]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1216]; unstable size 1216; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 402, 1, 1216] with unstable size 401 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 22, 1, 1216] with unstable size 21 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1216] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [401]; unstable size 401; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 22, 1, 401] with unstable size 21 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 401] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [21]; unstable size 21; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.80785388,  5.94088173,  5.87322617,  9.73789024,  6.88413668,
         10.49198246, 10.80732632,  7.95062542,  5.48463392]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0357 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 63, vnnlib ID: 63 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-36.74089432, -39.43717194, -33.82518387, -36.02922058, -35.14472580,
         -35.65969849, -35.23187637, -37.32099533, -38.33258438, -39.60219574]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1171]; unstable size 1171; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 421, 1, 1171] with unstable size 420 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 20, 1, 1171] with unstable size 19 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1171] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [420]; unstable size 420; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 20, 1, 420] with unstable size 19 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 420] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [19]; unstable size 19; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.64182389,  3.02544355, -2.17539454,  0.10985589, -0.81235027,
         -0.32129061,  1.07171607,  2.10613060,  3.35571456]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-36.74089432, -39.43717194, -33.82518387, -36.02922058, -35.14472580,
         -35.65969849, -35.23187637, -37.32099533, -38.33258438, -39.60219574]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-36.74089432, -39.43717575, -33.82518387, -36.02922058, -35.14472580,
          -35.65969849, -35.23187637, -37.32099533, -38.33258057, -39.60219574],
         [-36.74089432, -39.43717575, -33.82518387, -36.02922058, -35.14472580,
          -35.65969849, -35.23187637, -37.32099533, -38.33258057, -39.60219574]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-1.40669250, -0.08715057,  0.42782211]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]],


         [[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]],


         [[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]]]],
       device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0477 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 64, vnnlib ID: 64 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-35.78859711, -39.73741913, -31.11677551, -33.58768463, -31.62049484,
         -33.66063690, -33.59266281, -34.60187912, -37.69153976, -39.19504547]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1638]; unstable size 1638; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 72, 1, 1638] with unstable size 71 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 37, 1, 1638] with unstable size 36 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1638] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [537]; unstable size 537; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 37, 1, 537] with unstable size 36 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 537] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [36]; unstable size 36; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 36] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.29910326,  7.43693399,  1.49529779, -0.04669762,  1.56833017,
          1.34058905,  2.31315207,  5.11475372,  6.73055553]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-35.78859711, -39.73741913, -31.11677551, -33.58768463, -31.62049484,
         -33.66063690, -33.59266281, -34.60187912, -37.69153976, -39.19504547]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.27it/s]100%|██████████| 1/1 [00:00<00:00,  8.26it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-34.31956863, -38.11719513, -29.64623642, -32.05770874, -29.96618462,
          -32.10971451, -32.00092697, -32.93144989, -36.20344925, -37.52805328]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.31994820]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1239 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 29.759689331054688
alpha/beta optimization time: 1.4495446681976318
initial alpha-crown bounds: tensor([[ 3.35669518e+00,  7.49827385e+00,  1.54262018e+00, -6.53968751e-03,
          1.61736608e+00,  1.38704598e+00,  2.38498592e+00,  5.18284702e+00,
          6.79639530e+00]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.006539687514305115
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.38546562194824
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.38542652130127
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.38540029525757
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.38537788391113
Verifying property 3 with 1 instances.
##### Instance 64 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00653969]], device='cuda:0') need to verify.
Model prediction is: tensor([-35.78859711, -39.73741913, -31.11677551, -33.58768463, -31.62049484,
        -33.66063690, -33.59266281, -34.60187912, -37.69153976, -39.19504547],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00653969]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1638
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 534
Node /39 input 0: size torch.Size([250]) unstable 36
-----------------
# of unstable neurons: 2208
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 9.918212890625e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.006522536277770996
10 lb beta sum: 0.0, worst -0.006522908806800842
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0741    transfer 0.0001    finalize 0.0002    func 0.0746    
Accumulated time: func 0.0746    prepare 0.0002    bound 0.0741    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 230] 
split level 1: [/input-16, 225] 
split level 2: [/input-16, 126] 
split level 3: [/input-16, 145] 
split level 4: [/input-16, 7] 
split level 5: [/input-16, 208] 
split level 6: [/input-16, 31] 
split level 7: [/input-16, 248] 
split level 8: [/input-16, 154] 
split level 9: [/input-16, 180] 
split level 10: [/input-16, 84] 
split level 11: [/input-16, 190] 
split level 12: [/input-16, 129] 
split level 13: [/input-12, 1014] 
split level 14: [/input-12, 2589] 
split level 15: [/input-16, 218] 
split level 16: [/input-16, 82] 
split level 17: [/input-12, 2595] 
split level 18: [/input-12, 1844] 
split level 19: [/input-12, 7880] 
split level 20: [/input-12, 2587] 
split level 21: [/input-12, 2582] 
split level 22: [/input-12, 4573] 
split level 23: [/input-12, 6243] 
split level 24: [/input-12, 2585] 
split level 25: [/input-12, 1372] 
split level 26: [/input-12, 6902] 
split level 27: [/input-12, 7881] 
split level 28: [/input-12, 2576] 
split level 29: [/input-12, 4572] 
split level 30: [/input-12, 1196] 
split level 31: [/input-12, 2333] 
split level 32: [/input-12, 2586] 
split level 33: [/input-12, 2593] 
split level 34: [/input-12, 4569] 
split level 35: [/input-12, 6251] 
split level 36: [/input-12, 2574] 
split level 37: [/input-12, 4570] 
split level 38: [/input-12, 5533] 
split level 39: [/input-12, 3958] 
split level 40: [/input-12, 6508] 
split level 41: [/input-12, 3284] 
split level 42: [/input-12, 1836] 
split level 43: [/input-12, 6748] 
split level 44: [/input-12, 2325] 
split level 45: [/input-12, 6740] 
split level 46: [/input-12, 6732] 
split level 47: [/input-12, 6475] 
split level 48: [/input-12, 2584] 
split level 49: [/input-12, 1828] 
split level 50: [/input-12, 4566] 
split level 51: [/input-12, 5324] 
split level 52: [/input-12, 2003] 
split level 53: [/input-12, 849] 
split level 54: [/input-12, 2004] 
split level 55: [/input-12, 5547] 
split level 56: [/input-12, 778] 
split level 57: [/input-12, 1195] 
split level 58: [/input-12, 1188] 
split level 59: [/input-12, 6901] 
split level 60: [/input-12, 2571] 
split level 61: [/input-12, 5768] 
split level 62: [/input-12, 6757] 
split level 63: [/input-12, 8073] 
split level 64: [/input-12, 2603] 
split level 65: [/input-12, 8081] 
split level 66: [/input-12, 6733] 
split level 67: [/input-12, 5178] 
split level 68: [/input-12, 2931] 
split level 69: [/input-12, 1078] 
split level 70: [/input-12, 1371] 
split level 71: [/input-12, 4462] 
split level 72: [/input-12, 4900] 
split level 73: [/input-12, 2601] 
split level 74: [/input-12, 2578] 
split level 75: [/input-12, 2010] 
split level 76: [/input-12, 1070] 
split level 77: [/input-12, 4562] 
split level 78: [/input-12, 7873] 
split level 79: [/input-12, 6234] 
split level 80: [/input-12, 5139] 
split level 81: [/input-12, 1186] 
split level 82: [/input-4, 6423] 
split level 83: [/input-12, 5130] 
split level 84: [/input-12, 368] 
split level 85: [/input-12, 7997] 
split level 86: [/input-12, 7985] 
split level 87: [/input-12, 6076] 
split level 88: [/input-12, 6762] 
split level 89: [/input-12, 2592] 
split level 90: [/input-12, 5374] 
split level 91: [/input-12, 6410] 
split level 92: [/input-4, 1148] 
split level 93: [/input-12, 4591] 
split level 94: [/input-12, 5426] 
split level 95: [/input-12, 5777] 
split level 96: [/input-4, 1180] 
split level 97: [/input-12, 4220] 
split level 98: [/input-12, 3286] 
split level 99: [/input-12, 5177] 
split level 100: [/input-4, 8120] 
split level 101: [/input-4, 1196] 
split level 102: [/input-12, 2318] 
split level 103: [/input-4, 1213] 
split level 104: [/input-12, 2332] 
split level 105: [/input-4, 6429] 
split level 106: [/input-12, 1544] 
split level 107: [/input-12, 7564] 
split level 108: [/input-4, 4999] 
split level 109: [/input-12, 7566] 
split level 110: [/input-12, 1011] 
split level 111: [/input-4, 5000] 
split level 112: [/input-12, 5238] 
split level 113: [/input-4, 6482] 
split level 114: [/input-12, 5517] 
split level 115: [/input-12, 3482] 
split level 116: [/input-12, 2317] 
split level 117: [/input-12, 6765] 
split level 118: [/input-12, 6217] 
split level 119: [/input-12, 6418] 
split level 120: [/input-4, 1230] 
split level 121: [/input-4, 4806] 
split level 122: [/input-12, 2526] 
split level 123: [/input-12, 2570] 
split level 124: [/input-4, 49] 
split level 125: [/input-12, 2600] 
split level 126: [/input-4, 6713] 
split level 127: [/input-12, 5340] 
split level 128: [/input-4, 1197] 
split level 129: [/input-12, 8001] 
split level 130: [/input-4, 6465] 
split level 131: [/input-4, 4808] 
split level 132: [/input-12, 615] 
split level 133: [/input-12, 5425] 
split level 134: [/input-4, 6358] 
split level 135: [/input-4, 6481] 
split level 136: [/input-4, 5768] 
split level 137: [/input-4, 6444] 
split level 138: [/input-12, 3909] 
split level 139: [/input-4, 1131] 
split level 140: [/input-4, 1113] 
split level 141: [/input-12, 3294] 
split level 142: [/input-12, 4222] 
split level 143: [/input-4, 7818] 
split level 144: [/input-4, 3722] 
split level 145: [/input-4, 3804] 
split level 146: [/input-12, 7171] 
split level 147: [/input-4, 410] 
split level 148: [/input-4, 6466] 
split level 149: [/input-4, 92] 
split level 150: [/input-12, 3172] 
split level 151: [/input-4, 1214] 
split level 152: [/input-4, 3673] 
split level 153: [/input-4, 1181] 
split level 154: [/input-12, 5330] 
split level 155: [/input-12, 2569] 
split level 156: [/input-4, 6681] 
split level 157: [/input-12, 4760] 
split level 158: [/input-4, 1129] 
split level 159: [/input-4, 1672] 
split level 160: [/input-12, 623] 
split level 161: [/input-4, 6729] 
split level 162: [/input-4, 6730] 
split level 163: [/input-4, 90] 
split level 164: [/input-4, 108] 
split level 165: [/input-4, 3790] 
split level 166: [/input-4, 1149] 
split level 167: [/input-4, 65] 
split level 168: [/input-4, 4070] 
split level 169: [/input-4, 6480] 
split level 170: [/input-4, 81] 
split level 171: [/input-4, 5085] 
split level 172: [/input-12, 3401] 
split level 173: [/input-4, 6714] 
split level 174: [/input-12, 7595] 
split level 175: [/input-4, 5061] 
split level 176: [/input-4, 1147] 
split level 177: [/input-4, 6682] 
split level 178: [/input-4, 5099] 
split level 179: [/input-12, 2565] 
split level 180: [/input-4, 124] 
split level 181: [/input-12, 2613] 
split level 182: [/input-4, 1132] 
split level 183: [/input-12, 5558] 
split level 184: [/input-12, 2324] 
split level 185: [/input-4, 1165] 
split level 186: [/input-4, 6697] 
split level 187: [/input-4, 6464] 
split level 188: [/input-12, 8035] 
split level 189: [/input-12, 1393] 
split level 190: [/input-4, 6814] 
split level 191: [/input-4, 142] 
split level 192: [/input-4, 5070] 
split level 193: [/input-4, 5098] 
split level 194: [/input-4, 174] 
split level 195: [/input-4, 158] 
split level 196: [/input-4, 6698] 
split level 197: [/input-4, 4760] 
split level 198: [/input-4, 4790] 
split level 199: [/input-4, 57] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.006449908018112183
10 lb beta sum: 0.0, worst -0.006449639797210693
Time: prepare 0.0116    bound 0.1345    transfer 0.0073    finalize 0.0078    func 0.1638    
Accumulated time: func 0.2384    prepare 0.0216    bound 0.2086    transfer 0.0074    finalize 0.0081    
all_split False
======================Cut inference begins======================
max lb tensor(0.13641106) min lb tensor(-0.00644928)
Number of Verified Splits: 49 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.012914419174194336 
BICCOS Cumulative time: 0.012914419174194336
Preprocessing time: 0.010013103485107422 Inference time: 0.0018529891967773438 Add cuts time: 0.0008761882781982422 Cut analysis time: 0.00017213821411132812
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.7762    set_bounds 0.0094    solve 0.1639    add 0.0101    
Accumulated time: pickout 0.0003    decision 0.7762    set_bounds 0.0094    solve 0.1639    add 0.0101    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([230]), tensor([-1.]), tensor([0]), tensor([1.50251725e+09]), tensor([0]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([230]), tensor([1.]), tensor([0]), tensor([1.50251725e+09]), tensor([0]))}
Shallow branching resets to n domains:  2
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.0015048086643218994

all verified at 0th iter
Time: prepare 0.0003    bound 0.0056    transfer 0.0001    finalize 0.0003    func 0.0063    
Accumulated time: func 0.2447    prepare 0.0219    bound 0.2142    transfer 0.0075    finalize 0.0083    
After pruning, left:  0

Back to Regular BaB


Properties batch 4, size 1
Remaining timeout: 197.15041208267212
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 197.15035343170166
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.15032958984375
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.15030908584595
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.1502890586853
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.8498 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 65, vnnlib ID: 65 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-58.72906494, -60.97653198, -59.40671921, -57.24147034, -59.60900879,
         -57.73253250, -57.60380554, -59.15185547, -58.04276276, -59.98909760]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1301]; unstable size 1301; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 489, 1, 1301] with unstable size 488 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 30, 1, 1301] with unstable size 29 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1301] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [488]; unstable size 488; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 30, 1, 488] with unstable size 29 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 488] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [29]; unstable size 29; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.27384460,  1.68555427,  0.43108797, -1.25777149,  0.47478795,
         -0.82884586, -0.03732407, -1.04593611,  0.60811424]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-58.72906494, -60.97653198, -59.40671921, -57.24147034, -59.60900879,
         -57.73253250, -57.60380554, -59.15185547, -58.04276276, -59.98909760]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-58.72907257, -60.97653580, -59.40672302, -57.24147415, -59.60901260,
          -57.73254013, -57.60380554, -59.15186310, -58.04277039, -59.98911285],
         [-58.72907257, -60.97653580, -59.40672302, -57.24147415, -59.60901260,
          -57.73254013, -57.60380554, -59.15186310, -58.04277039, -59.98911285]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.12526703, -0.36233139,  0.12873459,  1.54805756,  0.43896484]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]],


         [[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]],


         [[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]],


         [[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]],


         [[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0505 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 66, vnnlib ID: 66 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-37.67347717, -41.64546967, -35.52695847, -37.76309967, -35.33711624,
         -37.65639114, -35.63862228, -38.35272217, -38.77254868, -41.72779083]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1128]; unstable size 1128; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 78, 1, 1128] with unstable size 77 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 38, 1, 1128] with unstable size 37 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1128] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [605]; unstable size 605; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 38, 1, 605] with unstable size 37 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 605] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [37]; unstable size 37; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 37] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.65542269,  3.98557258, -0.39179212,  1.73402762,  1.60596085,
         -0.52523720,  1.90785611,  1.47707617,  3.95346546]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-37.67347717, -41.64546967, -35.52695847, -37.76309967, -35.33711624,
         -37.65639114, -35.63862228, -38.35272217, -38.77254868, -41.72779083]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-37.75494003, -41.77433777, -35.68750763, -38.16427231, -35.73581314,
          -38.08541107, -35.95888519, -38.82295990, -38.94647217, -41.94081116],
         [-37.75494003, -41.77433777, -35.68750763, -38.16427231, -35.73581314,
          -38.08541107, -35.95888519, -38.82295990, -38.94647217, -41.94081116]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.04830551,  0.22307205]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0060 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0429 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 67, vnnlib ID: 67 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-24.08288193, -28.26486015, -19.64252472, -22.50557137, -19.79685211,
         -22.53624153, -21.53186607, -22.82653618, -26.24450684, -27.63968849]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1691]; unstable size 1691; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 70, 1, 1691] with unstable size 69 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 38, 1, 1691] with unstable size 37 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1691] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [554]; unstable size 554; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 38, 1, 554] with unstable size 37 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 554] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [37]; unstable size 37; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 37] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.54017210,  7.14389896,  2.13546848, -0.36450881,  2.14679480,
          0.97471797,  2.04821658,  5.48894501,  6.56188583]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-24.08288193, -28.26486015, -19.64252472, -22.50557137, -19.79685211,
         -22.53624153, -21.53186607, -22.82653618, -26.24450684, -27.63968849]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.92508698, -28.08070755, -19.47331810, -22.30952072, -19.47281265,
          -22.30576324, -21.29745483, -22.52469826, -26.06777191, -27.44714928]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.00050545]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0056 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0425 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 68, vnnlib ID: 68 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-75.75396729, -78.56060028, -73.12302399, -72.36154175, -70.42666626,
         -72.16277313, -73.78325653, -67.15097809, -77.57897186, -77.22797394]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1364]; unstable size 1364; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 84, 1, 1364] with unstable size 83 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 30, 1, 1364] with unstable size 29 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1364] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [529]; unstable size 529; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 30, 1, 529] with unstable size 29 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 529] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [29]; unstable size 29; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.63283873, 9.04373264, 4.58316040, 4.04050970, 2.35108995, 3.88864803,
         4.93597031, 8.43582439, 7.91376686]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0360 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 69, vnnlib ID: 69 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-65.47672272, -69.61760712, -68.79780579, -70.09565735, -68.87202454,
         -70.88582611, -71.19541931, -69.85317993, -65.61122894, -68.53379822]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1379]; unstable size 1379; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 427, 1, 1379] with unstable size 426 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 13, 1, 1379] with unstable size 12 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1379] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [426]; unstable size 426; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 13, 1, 426] with unstable size 12 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 426] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [12]; unstable size 12; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.05274510,  2.84472585,  2.07424831,  3.45018744,  2.05029225,
          4.19565773,  4.29219818,  2.97949314,  1.63743877]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-65.47672272, -69.61760712, -68.79780579, -70.09565735, -68.87202454,
         -70.88582611, -71.19541931, -69.85317993, -65.61122894, -68.53379822]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-65.47672272, -69.61760712, -68.79780579, -70.09565735, -68.87202454,
          -70.88582611, -71.19541931, -69.85317993, -65.61122894, -68.53379822]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.13450623]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.80476213,  1.80476213,  1.80476213,  ...,  1.78888917,
             1.78888917,  1.78888917],
           [ 1.80476213,  1.80476213,  1.80476213,  ...,  1.78888917,
             1.78888917,  1.78888917],
           [ 1.80476213,  1.80476213,  1.80476213,  ...,  1.78888917,
             1.78888917,  1.78888917],
           ...,
           [-0.29047608, -0.46507925, -0.11587292,  ...,  0.13809532,
             0.02698422, -0.13174593],
           [ 0.97936511,  0.94761908,  0.99523818,  ...,  0.67777783,
             0.63015878,  0.67777783],
           [ 1.31269872,  1.29682565,  1.26507962,  ..., -0.09999990,
             0.01111121,  0.02698422]],

          [[ 1.86795521,  1.86795521,  1.86795521,  ...,  1.78743994,
             1.78743994,  1.78743994],
           [ 1.86795521,  1.86795521,  1.86795521,  ...,  1.78743994,
             1.78743994,  1.78743994],
           [ 1.86795521,  1.86795521,  1.86795521,  ...,  1.78743994,
             1.78743994,  1.78743994],
           ...,
           [-0.27375188, -0.46698871, -0.12882435,  ..., -0.27375188,
            -0.32206106, -0.53140092],
           [ 0.95008057,  0.88566834,  0.91787446,  ...,  0.12882459,
             0.12882459,  0.11272153],
           [ 1.20772982,  1.17552364,  1.14331758,  ..., -0.40257636,
            -0.25764883, -0.30595800]],

          [[ 1.87556267,  1.87556267,  1.87556267,  ...,  1.81559265,
             1.81559265,  1.81559265],
           [ 1.87556267,  1.87556267,  1.87556267,  ...,  1.81559265,
             1.81559265,  1.81559265],
           [ 1.87556267,  1.87556267,  1.87556267,  ...,  1.81559265,
             1.81559265,  1.81559265],
           ...,
           [-0.26836565, -0.44827583, -0.11844061,  ..., -0.64317840,
            -0.68815589, -0.85307342],
           [ 0.82608712,  0.79610211,  0.82608712,  ..., -0.46326834,
            -0.44827583, -0.44827583],
           [ 1.09595215,  1.06596720,  1.03598225,  ..., -0.73313338,
            -0.61319339, -0.65817088]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0430 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 70, vnnlib ID: 70 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-41.75056458, -43.41510010, -38.91671371, -40.29972458, -38.08592224,
         -40.74008179, -36.66073608, -41.80928040, -43.08291245, -43.98265076]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1555]; unstable size 1555; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 491, 1, 1555] with unstable size 490 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 37, 1, 1555] with unstable size 36 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1555] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [490]; unstable size 490; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 37, 1, 490] with unstable size 36 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 490] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [36]; unstable size 36; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 36] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.70710325, 4.90286636, 1.39001203, 2.85302067, 0.63950670, 3.19801950,
         3.59760189, 4.78831196, 5.64041567]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0361 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 71, vnnlib ID: 71 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-55.22573471, -61.89428329, -59.82545090, -60.97760391, -59.31925583,
         -61.30184174, -59.75405884, -61.36776733, -60.10418701, -60.80920410]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1222]; unstable size 1222; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 502, 1, 1222] with unstable size 501 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 20, 1, 1222] with unstable size 19 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1222] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [501]; unstable size 501; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 20, 1, 501] with unstable size 19 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 501] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [19]; unstable size 19; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.94862366, 3.56731510, 4.22902632, 2.84876466, 4.50731277, 2.96811628,
         4.45974588, 3.68834782, 4.18327093]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0360 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 72, vnnlib ID: 72 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-46.62191010, -50.98563766, -46.68777847, -45.86556244, -46.57845306,
         -46.01876831, -46.39552689, -47.38746262, -48.66510391, -49.60241699]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1292]; unstable size 1292; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 86, 1, 1292] with unstable size 85 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 37, 1, 1292] with unstable size 36 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1292] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [605]; unstable size 605; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 37, 1, 605] with unstable size 36 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 605] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [36]; unstable size 36; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 36] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.02894545,  3.13637638, -0.70147514, -0.60217512, -0.05205036,
         -0.40432000, -0.20393372,  0.79284817,  1.66317058]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-46.62191010, -50.98563766, -46.68777847, -45.86556244, -46.57845306,
         -46.01876831, -46.39552689, -47.38746262, -48.66510391, -49.60241699]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  6.48it/s]100%|██████████| 1/1 [00:00<00:00,  6.47it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-48.32541275, -52.84695053, -48.35956955, -47.41682053, -48.17720032,
          -47.49060059, -47.94475174, -48.84434128, -50.37580872, -51.41252136],
         [-48.32541275, -52.84695053, -48.35956955, -47.41682053, -48.17720032,
          -47.49060059, -47.94475174, -48.84434128, -50.37580872, -51.41252136]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.90859222, 0.94274902, 0.76037979, 0.07378006, 0.52793121,
          1.42752075]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1610 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 3.2825241088867188
alpha/beta optimization time: 1.454249620437622
initial alpha-crown bounds: tensor([[-0.95051414,  3.23047733, -0.63064361, -0.52739286, -0.03901957,
         -0.35271001, -0.09411764,  0.89503038,  1.75141406]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 6 ; Worst class: (+ rhs) -0.9505141377449036
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.3455228805542
Verifying property 0 with 1 instances.
##### Instance 72 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.95051414]], device='cuda:0') need to verify.
Model prediction is: tensor([-46.62191010, -50.98563766, -46.68777847, -45.86556244, -46.57845306,
        -46.01876831, -46.39552689, -47.38746262, -48.66510391, -49.60241699],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.95051414]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1292
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 594
Node /39 input 0: size torch.Size([250]) unstable 36
-----------------
# of unstable neurons: 1922
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00010228157043457031
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.950441837310791
10 lb beta sum: 0.0, worst -0.9504464268684387
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0735    transfer 0.0001    finalize 0.0002    func 0.0740    
Accumulated time: func 0.0740    prepare 0.0002    bound 0.0735    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 134] 
split level 1: [/input-16, 41] 
split level 2: [/input-16, 28] 
split level 3: [/input-16, 180] 
split level 4: [/input-16, 8] 
split level 5: [/input-16, 21] 
split level 6: [/input-16, 25] 
split level 7: [/input-16, 182] 
split level 8: [/input-16, 18] 
split level 9: [/input-16, 195] 
split level 10: [/input-16, 51] 
split level 11: [/input-16, 247] 
split level 12: [/input-16, 13] 
split level 13: [/input-16, 110] 
split level 14: [/input-16, 58] 
split level 15: [/input-16, 73] 
split level 16: [/input-16, 170] 
split level 17: [/input-12, 622] 
split level 18: [/input-12, 613] 
split level 19: [/input-16, 227] 
split level 20: [/input-12, 1443] 
split level 21: [/input-16, 65] 
split level 22: [/input-12, 1300] 
split level 23: [/input-12, 2339] 
split level 24: [/input-12, 610] 
split level 25: [/input-12, 6996] 
split level 26: [/input-12, 1426] 
split level 27: [/input-12, 5717] 
split level 28: [/input-12, 3347] 
split level 29: [/input-12, 6469] 
split level 30: [/input-12, 623] 
split level 31: [/input-12, 1012] 
split level 32: [/input-16, 10] 
split level 33: [/input-12, 2596] 
split level 34: [/input-12, 2440] 
split level 35: [/input-12, 1203] 
split level 36: [/input-12, 8157] 
split level 37: [/input-12, 2259] 
split level 38: [/input-12, 481] 
split level 39: [/input-12, 615] 
split level 40: [/input-12, 597] 
split level 41: [/input-12, 868] 
split level 42: [/input-12, 5221] 
split level 43: [/input-12, 2257] 
split level 44: [/input-12, 1202] 
split level 45: [/input-12, 1299] 
split level 46: [/input-16, 97] 
split level 47: [/input-12, 1354] 
split level 48: [/input-12, 92] 
split level 49: [/input-12, 1428] 
split level 50: [/input-12, 7590] 
split level 51: [/input-12, 5329] 
split level 52: [/input-12, 2267] 
split level 53: [/input-12, 6427] 
split level 54: [/input-12, 1441] 
split level 55: [/input-12, 3346] 
split level 56: [/input-12, 411] 
split level 57: [/input-12, 3870] 
split level 58: [/input-12, 2448] 
split level 59: [/input-12, 1670] 
split level 60: [/input-12, 1204] 
split level 61: [/input-12, 2450] 
split level 62: [/input-12, 7507] 
split level 63: [/input-12, 8093] 
split level 64: [/input-12, 2915] 
split level 65: [/input-12, 2441] 
split level 66: [/input-12, 5521] 
split level 67: [/input-12, 1438] 
split level 68: [/input-12, 1013] 
split level 69: [/input-12, 5330] 
split level 70: [/input-12, 1572] 
split level 71: [/input-12, 2605] 
split level 72: [/input-12, 788] 
split level 73: [/input-12, 2603] 
split level 74: [/input-12, 7000] 
split level 75: [/input-12, 4123] 
split level 76: [/input-4, 7816] 
split level 77: [/input-4, 7815] 
split level 78: [/input-12, 3795] 
split level 79: [/input-12, 2348] 
split level 80: [/input-12, 4115] 
split level 81: [/input-12, 2604] 
split level 82: [/input-12, 2268] 
split level 83: [/input-12, 7598] 
split level 84: [/input-12, 5354] 
split level 85: [/input-12, 630] 
split level 86: [/input-12, 4124] 
split level 87: [/input-12, 2449] 
split level 88: [/input-12, 5214] 
split level 89: [/input-12, 603] 
split level 90: [/input-4, 7819] 
split level 91: [/input-4, 372] 
split level 92: [/input-12, 1205] 
split level 93: [/input-12, 5222] 
split level 94: [/input-12, 2258] 
split level 95: [/input-12, 6226] 
split level 96: [/input-12, 5790] 
split level 97: [/input-4, 6743] 
split level 98: [/input-4, 2410] 
split level 99: [/input-12, 5787] 
split level 100: [/input-12, 2513] 
split level 101: [/input-12, 3341] 
split level 102: [/input-12, 5556] 
split level 103: [/input-12, 8021] 
split level 104: [/input-12, 7985] 
split level 105: [/input-12, 3558] 
split level 106: [/input-12, 5794] 
split level 107: [/input-4, 7803] 
split level 108: [/input-12, 1190] 
split level 109: [/input-12, 5028] 
split level 110: [/input-12, 5205] 
split level 111: [/input-4, 2697] 
split level 112: [/input-12, 5522] 
split level 113: [/input-12, 7644] 
split level 114: [/input-12, 5029] 
split level 115: [/input-4, 7814] 
split level 116: [/input-12, 2531] 
split level 117: [/input-12, 7977] 
split level 118: [/input-12, 5366] 
split level 119: [/input-12, 7576] 
split level 120: [/input-12, 8030] 
split level 121: [/input-12, 2349] 
split level 122: [/input-12, 1998] 
split level 123: [/input-12, 5220] 
split level 124: [/input-12, 6252] 
split level 125: [/input-12, 6410] 
split level 126: [/input-4, 2694] 
split level 127: [/input-12, 3561] 
split level 128: [/input-4, 7813] 
split level 129: [/input-12, 1449] 
split level 130: [/input-4, 7797] 
split level 131: [/input-12, 3359] 
split level 132: [/input-12, 867] 
split level 133: [/input-12, 1748] 
split level 134: [/input-12, 2591] 
split level 135: [/input-12, 6409] 
split level 136: [/input-12, 7597] 
split level 137: [/input-12, 720] 
split level 138: [/input-12, 5548] 
split level 139: [/input-12, 6483] 
split level 140: [/input-12, 7645] 
split level 141: [/input-12, 2266] 
split level 142: [/input-4, 7835] 
split level 143: [/input-12, 5547] 
split level 144: [/input-12, 1208] 
split level 145: [/input-4, 4937] 
split level 146: [/input-12, 1179] 
split level 147: [/input-4, 7804] 
split level 148: [/input-4, 7831] 
split level 149: [/input-12, 7211] 
split level 150: [/input-12, 2015] 
split level 151: [/input-4, 2681] 
split level 152: [/input-4, 356] 
split level 153: [/input-12, 2252] 
split level 154: [/input-12, 2351] 
split level 155: [/input-4, 1594] 
split level 156: [/input-12, 3570] 
split level 157: [/input-4, 1377] 
split level 158: [/input-4, 7802] 
split level 159: [/input-4, 6747] 
split level 160: [/input-4, 1597] 
split level 161: [/input-12, 5219] 
split level 162: [/input-4, 3703] 
split level 163: [/input-4, 2664] 
split level 164: [/input-4, 7801] 
split level 165: [/input-12, 6473] 
split level 166: [/input-4, 7781] 
split level 167: [/input-4, 6748] 
split level 168: [/input-12, 1394] 
split level 169: [/input-12, 5553] 
split level 170: [/input-4, 2372] 
split level 171: [/input-4, 3671] 
split level 172: [/input-4, 7784] 
split level 173: [/input-12, 1416] 
split level 174: [/input-12, 5529] 
split level 175: [/input-12, 876] 
split level 176: [/input-4, 3666] 
split level 177: [/input-4, 3702] 
split level 178: [/input-12, 1461] 
split level 179: [/input-12, 1459] 
split level 180: [/input-4, 7792] 
split level 181: [/input-12, 2261] 
split level 182: [/input-4, 2439] 
split level 183: [/input-12, 1393] 
split level 184: [/input-12, 3958] 
split level 185: [/input-4, 6584] 
split level 186: [/input-4, 2690] 
split level 187: [/input-4, 2185] 
split level 188: [/input-12, 3185] 
split level 189: [/input-4, 7837] 
split level 190: [/input-4, 2440] 
split level 191: [/input-4, 5751] 
split level 192: [/input-4, 7788] 
split level 193: [/input-4, 2198] 
split level 194: [/input-12, 6406] 
split level 195: [/input-12, 637] 
split level 196: [/input-4, 2357] 
split level 197: [/input-12, 5524] 
split level 198: [/input-12, 1225] 
split level 199: [/input-4, 7828] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.9501084089279175
10 lb beta sum: 0.0, worst -0.9501121044158936
Time: prepare 0.0113    bound 0.1336    transfer 0.0016    finalize 0.0076    func 0.1568    
Accumulated time: func 0.2308    prepare 0.0214    bound 0.2070    transfer 0.0017    finalize 0.0078    
all_split False
======================Cut inference begins======================
max lb tensor(0.05699694) min lb tensor(-0.95010841)
Number of Verified Splits: 1 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.010393619537353516 
BICCOS Cumulative time: 0.010393619537353516
Preprocessing time: 0.010101795196533203 Inference time: 6.771087646484375e-05 Add cuts time: 3.457069396972656e-05 Cut analysis time: 0.0001895427703857422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.92144 (1), -0.91866 (1), -0.91846 (1), -0.91721 (1), -0.91715 (1), -0.91399 (1), -0.91381 (1), -0.91363 (1), -0.91335 (1), -0.91334 (1), -0.91318 (1), -0.91226 (1), -0.90997 (1), -0.90865 (1), -0.90803 (1), -0.90644 (1), -0.90437 (1), -0.90381 (1), -0.90294 (1), -0.90292 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7759    set_bounds 0.0092    solve 0.1569    add 0.0780    
Accumulated time: pickout 0.0003    decision 0.7759    set_bounds 0.0092    solve 0.1569    add 0.0780    
Current (lb-rhs): -0.9214406609535217
50 domains visited
Cumulative time: 1.11257004737854

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 180] [/input-16, 28] [/input-16, 28] [/input-16, 28] [/input-16, 180] [/input-16, 28] [/input-16, 28] [/input-16, 28] [/input-16, 28] [/input-16, 28] 
split level 1: [/input-16, 28] [/input-16, 180] [/input-16, 8] [/input-16, 180] [/input-16, 8] [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 180] 
split level 2: [/input-16, 8] [/input-16, 8] [/input-16, 21] [/input-16, 8] [/input-16, 21] [/input-16, 8] [/input-16, 21] [/input-16, 8] [/input-16, 8] [/input-16, 8] 
split level 3: [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8765172362327576
10 lb beta sum: 0.19730766117572784, worst -0.8661374449729919
Time: prepare 0.0067    bound 0.1509    transfer 0.0022    finalize 0.0070    func 0.1694    
Accumulated time: func 0.4002    prepare 0.0283    bound 0.3580    transfer 0.0040    finalize 0.0148    
all_split False
======================Cut inference begins======================
max lb tensor(0.38561860) min lb tensor(-0.86596864)
Number of Verified Splits: 3 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.012709379196166992 
BICCOS Cumulative time: 0.023102998733520508
Preprocessing time: 0.012163877487182617 Inference time: 0.00018405914306640625 Add cuts time: 7.939338684082031e-05 Cut analysis time: 0.00028204917907714844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.49533 (2), -0.49418 (2), -0.49115 (2), -0.48887 (2), -0.48867 (2), -0.48760 (2), -0.48750 (2), -0.48654 (2), -0.47919 (2), -0.47723 (2), -0.47661 (2), -0.47495 (2), -0.47452 (2), -0.47309 (2), -0.47221 (2), -0.46875 (2), -0.46225 (2), -0.46176 (2), -0.45835 (2), -0.45390 (2), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0252    set_bounds 0.0132    solve 0.1695    add 0.0853    
Accumulated time: pickout 0.0009    decision 0.8011    set_bounds 0.0225    solve 0.3264    add 0.1633    
Current (lb-rhs): -0.49532973766326904
100 domains visited
Cumulative time: 1.4193296432495117

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 180] [/input-16, 28] [/input-16, 180] [/input-16, 28] [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 28] [/input-16, 180] [/input-16, 28] 
split level 1: [/input-16, 8] [/input-16, 8] [/input-16, 28] [/input-16, 8] [/input-16, 28] [/input-16, 28] [/input-16, 28] [/input-16, 180] [/input-16, 8] [/input-16, 8] 
split level 2: [/input-16, 21] [/input-16, 21] [/input-16, 21] [/input-16, 21] [/input-16, 8] [/input-16, 21] [/input-16, 8] [/input-16, 21] [/input-16, 21] [/input-16, 21] 
split level 3: [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 21] [/input-16, 182] [/input-16, 21] [/input-16, 182] [/input-16, 182] [/input-16, 182] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4671974182128906
10 lb beta sum: 0.27880987524986267, worst -0.4461914896965027
Time: prepare 0.0060    bound 0.1536    transfer 0.0023    finalize 0.0067    func 0.1719    
Accumulated time: func 0.5721    prepare 0.0346    bound 0.5115    transfer 0.0062    finalize 0.0215    
all_split False
======================Cut inference begins======================
max lb tensor(0.32626528) min lb tensor(-0.43972549)
Number of Verified Splits: 25 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 4
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.014309883117675781 
BICCOS Cumulative time: 0.03741288185119629
Preprocessing time: 0.011747121810913086 Inference time: 0.0015552043914794922 Add cuts time: 0.0005509853363037109 Cut analysis time: 0.0004565715789794922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14164 (3), -0.13745 (3), -0.13732 (3), -0.13717 (3), -0.13536 (3), -0.13521 (3), -0.13387 (3), -0.12778 (3), -0.12755 (3), -0.12354 (3), -0.12153 (3), -0.11999 (3), -0.11878 (3), -0.11854 (3), -0.11768 (3), -0.11754 (3), -0.11475 (3), -0.11235 (3), -0.11032 (3), -0.10904 (3), 
Length of domains: 50
Time: pickout 0.0007    decision 0.0253    set_bounds 0.0153    solve 0.1720    add 0.0891    
Accumulated time: pickout 0.0016    decision 0.8264    set_bounds 0.0378    solve 0.4984    add 0.2524    
Current (lb-rhs): -0.14163681864738464
150 domains visited
Cumulative time: 1.736311912536621

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 8] [/input-16, 28] [/input-16, 28] [/input-16, 8] [/input-16, 8] [/input-16, 180] 
split level 1: [/input-16, 21] [/input-16, 21] [/input-16, 8] [/input-16, 8] [/input-16, 21] [/input-16, 8] [/input-16, 8] [/input-16, 21] [/input-16, 21] [/input-16, 8] 
split level 2: [/input-16, 25] [/input-16, 25] [/input-16, 21] [/input-16, 21] [/input-16, 25] [/input-16, 21] [/input-16, 25] [/input-16, 25] [/input-16, 25] [/input-16, 25] 
split level 3: [/input-16, 182] [/input-16, 182] [/input-16, 25] [/input-16, 25] [/input-16, 182] [/input-16, 25] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1440654993057251
10 lb beta sum: 0.2116750329732895, worst -0.22160327434539795
Time: prepare 0.0056    bound 0.1522    transfer 0.0016    finalize 0.0049    func 0.1670    
Accumulated time: func 0.7391    prepare 0.0404    bound 0.6637    transfer 0.0079    finalize 0.0264    
all_split False
======================Cut inference begins======================
max lb tensor(0.23463500) min lb tensor(-0.10499170)
Number of Verified Splits: 270 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 8
#cuts 4-6: 12
#cuts >= 20: 0
BICCOS time: 0.03213787078857422 
BICCOS Cumulative time: 0.06955075263977051
Preprocessing time: 0.012096405029296875 Inference time: 0.014159917831420898 Add cuts time: 0.005060434341430664 Cut analysis time: 0.0008211135864257812
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05898 (4), -0.05875 (4), -0.05866 (4), -0.05762 (4), -0.05737 (4), -0.05708 (4), -0.05691 (4), -0.05296 (4), -0.05295 (4), -0.04986 (4), -0.04946 (4), -0.04919 (4), -0.04874 (4), -0.04835 (4), -0.04723 (4), -0.04423 (4), -0.04420 (4), -0.04134 (4), -0.03819 (4), -0.03723 (4), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0252    set_bounds 0.0156    solve 0.1671    add 0.2590    
Accumulated time: pickout 0.0022    decision 0.8516    set_bounds 0.0534    solve 0.6654    add 0.5114    
Current (lb-rhs): -0.05897742509841919
200 domains visited
Cumulative time: 2.2362163066864014

Shallow-BaB round 5
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 41] [/input-16, 41] [/input-16, 41] [/input-16, 41] [/input-16, 41] [/input-16, 41] [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 180] 
split level 1: [/input-16, 8] [/input-16, 8] [/input-16, 8] [/input-16, 28] [/input-16, 180] [/input-16, 180] [/input-16, 21] [/input-16, 21] [/input-16, 21] [/input-16, 21] 
split level 2: [/input-16, 21] [/input-16, 21] [/input-16, 21] [/input-16, 25] [/input-16, 8] [/input-16, 8] [/input-16, 25] [/input-16, 25] [/input-16, 25] [/input-16, 25] 
split level 3: [/input-16, 25] [/input-16, 25] [/input-16, 25] [/input-16, 182] [/input-16, 25] [/input-16, 182] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07589924335479736
10 lb beta sum: 0.14660637080669403, worst -0.2266479879617691
Time: prepare 0.0056    bound 0.1548    transfer 0.0016    finalize 0.0059    func 0.1706    
Accumulated time: func 0.9098    prepare 0.0463    bound 0.8185    transfer 0.0095    finalize 0.0323    
all_split False
======================Cut inference begins======================
max lb tensor(0.33446366) min lb tensor(-0.04324242)
Number of Verified Splits: 371 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 9
#cuts 4-6: 21
#cuts >= 20: 0
BICCOS time: 0.04185342788696289 
BICCOS Cumulative time: 0.1114041805267334
Preprocessing time: 0.011477470397949219 Inference time: 0.020943403244018555 Add cuts time: 0.00839543342590332 Cut analysis time: 0.0010371208190917969
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00734 (5), -0.00703 (5), -0.00273 (5), -0.00234 (5), 
Length of domains: 4
Time: pickout 0.0006    decision 0.0255    set_bounds 0.0154    solve 0.1707    add 0.1301    
Accumulated time: pickout 0.0028    decision 0.8772    set_bounds 0.0688    solve 0.8362    add 0.6415    
Current (lb-rhs): -0.0073361992835998535
204 domains visited
Cumulative time: 2.620722770690918

Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 41,   8, 182,  28, 180]), tensor([-1., -1., -1., -1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([2.08917307e-04, 1.52603358e-01, 1.14434674e-01, 7.50211775e-02,
        2.60290384e-01]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 41,   8, 182,  28, 180]), tensor([-1., -1., -1., -1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([0.00020892, 0.15260336, 0.11443467, 0.07502118, 0.04609375]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 41,   8, 182,  28]), tensor([-1., -1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([0.00020892, 0.15260336, 0.11443467, 0.19443795]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 41,   8, 182, 180]), tensor([-1., -1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([2.08917307e-04, 1.52603358e-01, 1.21840641e-01, 2.46917248e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 41,   8, 182, 180,  28]), tensor([-1., -1.,  1.,  1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([0.00020892, 0.15260336, 0.12184064, 0.03773955, 0.08232050]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 41,   8, 182, 180,  28]), tensor([-1., -1.,  1.,  1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([0.00020892, 0.15260336, 0.12184064, 0.03773955, 0.19918002]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 41,   8, 182,  28, 180]), tensor([-1.,  1., -1., -1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([2.08917307e-04, 1.21142730e-01, 1.14245713e-01, 7.51203597e-02,
        2.60070324e-01]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 41,   8, 182,  28, 180]), tensor([-1.,  1., -1., -1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([0.00020892, 0.12114273, 0.11424571, 0.07512036, 0.05602987]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 41,   8, 182,  28]), tensor([-1.,  1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([0.00020892, 0.12114273, 0.11424571, 0.18664965]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 41,   8, 182,  28, 180]), tensor([-1.,  1.,  1., -1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([2.08917307e-04, 1.21142730e-01, 1.20573774e-01, 7.45899826e-02,
        2.59505212e-01]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 41,   8, 182,  28, 180]), tensor([-1.,  1.,  1., -1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([0.00020892, 0.12114273, 0.12057377, 0.07458998, 0.05685723]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 41,   8, 182,  28]), tensor([-1.,  1.,  1.,  1.]), tensor([0, 0, 0, 0]), tensor([0.00020892, 0.12114273, 0.12057377, 0.19036902]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([41]), tensor([1.]), tensor([0]), tensor([0.12673879]), tensor([0]))}
Shallow branching resets to n domains:  13
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.9254541397094727
10 lb beta sum: 0.42236819863319397, worst -0.9156634211540222
Time: prepare 0.0006    bound 0.1501    transfer 0.0002    finalize 0.0005    func 0.1515    
Accumulated time: func 1.0612    prepare 0.0469    bound 0.9686    transfer 0.0097    finalize 0.0328    
After pruning, left:  5

Back to Regular BaB

BaB round 1
batch: 5
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 21] [/input-16, 21] [/input-16, 21] [/input-16, 21] [/input-16, 28] 
split level 1: [/input-16, 25] [/input-16, 25] [/input-16, 25] [/input-16, 25] [/input-16, 180] 
cut re-enabled after branching node selection
0 lb beta sum: 0.38181090354919434, worst -0.7966591119766235
10 lb beta sum: 0.43067535758018494, worst -0.7964462041854858
Time: prepare 0.0011    bound 0.1532    transfer 0.0004    finalize 0.0008    func 0.1556    
Accumulated time: func 1.2169    prepare 0.0481    bound 1.1219    transfer 0.0101    finalize 0.0336    
all_split False
======================Cut inference begins======================
max lb tensor(0.13690184) min lb tensor(-0.79638278)
Number of Verified Splits: 16 of 20
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.41793200373649597, worst -0.4701542854309082
10 lb beta sum: 0.3476007282733917, worst -0.06528657674789429
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 9
#cuts 4-6: 21
#cuts >= 20: 0
BICCOS time: 0.16118288040161133 
BICCOS Cumulative time: 0.2725870609283447
Preprocessing time: 0.0008296966552734375 Inference time: 0.15823769569396973 Add cuts time: 0.001119375228881836 Cut analysis time: 0.0009961128234863281
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.79638 (2), -0.55796 (2), -0.41505 (2), -0.31167 (2), 
Length of domains: 4
Time: pickout 0.0004    decision 0.0163    set_bounds 0.0012    solve 0.1557    add 0.0010    
Accumulated time: pickout 0.0033    decision 0.8934    set_bounds 0.0700    solve 0.9918    add 0.6425    
Current (lb-rhs): -0.7963827848434448
208 domains visited
Cumulative time: 3.1405251026153564

BaB round 2
batch: 4
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 8] [/input-16, 8] [/input-16, 8] [/input-16, 8] 
split level 1: [/input-16, 21] [/input-16, 21] [/input-16, 21] [/input-16, 21] 
cut re-enabled after branching node selection
0 lb beta sum: 0.3859802484512329, worst -0.677810549736023
10 lb beta sum: 0.45431333780288696, worst -0.6774685382843018
Time: prepare 0.0009    bound 0.1485    transfer 0.0002    finalize 0.0007    func 0.1505    
Accumulated time: func 1.3673    prepare 0.0492    bound 1.2704    transfer 0.0103    finalize 0.0343    
all_split False
======================Cut inference begins======================
max lb tensor(-0.00913696) min lb tensor(-0.67733860)
Number of Verified Splits: 0 of 16
No cut inferred: All or none verified.
Total number of valid cuts: 30.
#cuts 1-3: 9
#cuts 4-6: 21
#cuts >= 20: 0
BICCOS time: 0.0008137226104736328 
BICCOS Cumulative time: 0.27340078353881836
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.67734 (4), -0.61155 (4), -0.58021 (4), -0.52755 (4), -0.43523 (4), -0.36956 (4), -0.33074 (4), -0.28160 (4), -0.27674 (4), -0.24078 (4), -0.17510 (4), -0.16850 (4), -0.12878 (4), -0.12838 (4), -0.05565 (4), -0.00914 (4), 
Length of domains: 16
Time: pickout 0.0004    decision 0.0133    set_bounds 0.0011    solve 0.1505    add 0.0013    
Accumulated time: pickout 0.0037    decision 0.9067    set_bounds 0.0712    solve 1.1423    add 0.6438    
Current (lb-rhs): -0.6773386001586914
224 domains visited
Cumulative time: 3.308163642883301

BaB round 3
batch: 16
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 25] [/input-16, 25] [/input-16, 25] [/input-16, 25] [/input-16, 25] [/input-16, 25] [/input-16, 25] [/input-16, 25] [/input-16, 25] [/input-16, 25] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4660358726978302, worst -0.6403990983963013
10 lb beta sum: 0.4613794684410095, worst -0.6401671171188354
Time: prepare 0.0016    bound 0.1506    transfer 0.0004    finalize 0.0009    func 0.1537    
Accumulated time: func 1.5210    prepare 0.0509    bound 1.4209    transfer 0.0107    finalize 0.0352    
all_split False
======================Cut inference begins======================
max lb tensor(0.13884005) min lb tensor(-0.64007223)
Number of Verified Splits: 7 of 32
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.6176291704177856, worst -0.3715282678604126
10 lb beta sum: 0.9246664643287659, worst -0.30251359939575195
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 31.
#cuts 1-3: 9
#cuts 4-6: 22
#cuts >= 20: 0
BICCOS time: 0.1562643051147461 
BICCOS Cumulative time: 0.42966508865356445
Preprocessing time: 0.0012121200561523438 Inference time: 0.15292692184448242 Add cuts time: 0.0010950565338134766 Cut analysis time: 0.0010302066802978516
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.64007 (5), -0.57354 (5), -0.54307 (5), -0.52957 (5), -0.49008 (5), -0.46590 (5), -0.40677 (5), -0.39142 (5), -0.36453 (5), -0.32519 (5), -0.32051 (5), -0.28744 (5), -0.26037 (5), -0.24597 (5), -0.23275 (5), -0.20910 (5), -0.20216 (5), -0.16082 (5), -0.14636 (5), -0.13518 (5), 
Length of domains: 25
Time: pickout 0.0004    decision 0.0139    set_bounds 0.0017    solve 0.1537    add 0.0017    
Accumulated time: pickout 0.0041    decision 0.9206    set_bounds 0.0729    solve 1.2960    add 0.6455    
Current (lb-rhs): -0.640072226524353
249 domains visited
Cumulative time: 3.636054039001465

BaB round 4
batch: 25
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6400721669197083
10 lb beta sum: 0.14030595123767853, worst -0.6399667263031006
Time: prepare 0.0010    bound 0.1492    transfer 0.0004    finalize 0.0012    func 0.1522    
Accumulated time: func 1.6732    prepare 0.0521    bound 1.5701    transfer 0.0111    finalize 0.0364    
all_split False
======================Cut inference begins======================
max lb tensor(0.82250923) min lb tensor(-0.63991541)
Number of Verified Splits: 25 of 50
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4002106189727783

all verified at 4th iter
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 31.
#cuts 1-3: 9
#cuts 4-6: 22
#cuts >= 20: 0
BICCOS time: 0.054677724838256836 
BICCOS Cumulative time: 0.4843428134918213
Preprocessing time: 0.001764535903930664 Inference time: 0.05019569396972656 Add cuts time: 0.0016629695892333984 Cut analysis time: 0.001054525375366211
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.63992 (6), -0.57309 (6), -0.54246 (6), -0.52738 (6), -0.48885 (6), -0.46320 (6), -0.40508 (6), -0.39022 (6), -0.36245 (6), -0.32241 (6), -0.31853 (6), -0.28612 (6), -0.25667 (6), -0.24432 (6), -0.23138 (6), -0.20564 (6), -0.20029 (6), -0.15756 (6), -0.14636 (6), -0.13385 (6), 
Length of domains: 25
Time: pickout 0.0005    decision 0.0144    set_bounds 0.0024    solve 0.1522    add 0.0014    
Accumulated time: pickout 0.0046    decision 0.9350    set_bounds 0.0753    solve 1.4483    add 0.6469    
Current (lb-rhs): -0.639915406703949
274 domains visited
Cumulative time: 3.8618998527526855

BaB round 5
batch: 25
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] 
cut re-enabled after branching node selection
0 lb beta sum: 0.1988218128681183, worst -0.562457799911499
10 lb beta sum: 0.2132522314786911, worst -0.5622497797012329
Time: prepare 0.0023    bound 0.1486    transfer 0.0004    finalize 0.0009    func 0.1525    
Accumulated time: func 1.8258    prepare 0.0545    bound 1.7188    transfer 0.0115    finalize 0.0373    
all_split False
======================Cut inference begins======================
max lb tensor(0.08695763) min lb tensor(-0.56215942)
Number of Verified Splits: 7 of 50
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.22926335036754608, worst -0.43616753816604614
10 lb beta sum: 0.6582625508308411, worst -0.17251156270503998
Total number of valid cuts: 31.
#cuts 1-3: 9
#cuts 4-6: 22
#cuts >= 20: 0
BICCOS time: 0.1547698974609375 
BICCOS Cumulative time: 0.6391127109527588
Preprocessing time: 0.0017135143280029297 Inference time: 0.1524362564086914 Add cuts time: 0.0005986690521240234 Cut analysis time: 2.1457672119140625e-05
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.56216 (7), -0.55711 (7), -0.49510 (7), -0.48495 (7), -0.46319 (7), -0.45675 (7), -0.44587 (7), -0.44500 (7), -0.41043 (7), -0.40520 (7), -0.38290 (7), -0.37805 (7), -0.32329 (7), -0.32072 (7), -0.31011 (7), -0.30897 (7), -0.28081 (7), -0.28037 (7), -0.24244 (7), -0.23925 (7), 
Length of domains: 43
Time: pickout 0.0005    decision 0.0147    set_bounds 0.0025    solve 0.1525    add 0.0017    
Accumulated time: pickout 0.0051    decision 0.9497    set_bounds 0.0778    solve 1.6008    add 0.6485    
Current (lb-rhs): -0.5621594190597534
317 domains visited
Cumulative time: 4.188860654830933

BaB round 6
batch: 43
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] 
cut re-enabled after branching node selection
0 lb beta sum: 0.2082863301038742, worst -0.538644552230835
10 lb beta sum: 0.20632831752300262, worst -0.5385009050369263
Time: prepare 0.0037    bound 0.1489    transfer 0.0005    finalize 0.0018    func 0.1556    
Accumulated time: func 1.9814    prepare 0.0584    bound 1.8677    transfer 0.0120    finalize 0.0392    
all_split False
======================Cut inference begins======================
max lb tensor(0.05297717) min lb tensor(-0.53846979)
Number of Verified Splits: 13 of 86
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.2968003451824188, worst -0.4257690906524658
10 lb beta sum: 0.5338155031204224, worst -0.2036556750535965
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 9
#cuts 4-6: 22
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.16193318367004395 
BICCOS Cumulative time: 0.8010458946228027
Preprocessing time: 0.0027456283569335938 Inference time: 0.15732884407043457 Add cuts time: 0.0007512569427490234 Cut analysis time: 0.0011074542999267578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.53847 (8), -0.53338 (8), -0.47234 (8), -0.46900 (8), -0.46181 (8), -0.46036 (8), -0.44002 (8), -0.43333 (8), -0.42033 (8), -0.41920 (8), -0.38755 (8), -0.38226 (8), -0.37253 (8), -0.35781 (8), -0.35766 (8), -0.35367 (8), -0.35335 (8), -0.35320 (8), -0.35001 (8), -0.34215 (8), 
Length of domains: 73
Time: pickout 0.0005    decision 0.0156    set_bounds 0.0038    solve 0.1557    add 0.0026    
Accumulated time: pickout 0.0056    decision 0.9653    set_bounds 0.0816    solve 1.7565    add 0.6511    
Current (lb-rhs): -0.5384697914123535
390 domains visited
Cumulative time: 4.529305458068848

BaB round 7
batch: 73
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 13] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5187438726425171
10 lb beta sum: 0.2214820235967636, worst -0.5186610221862793
Time: prepare 0.0023    bound 0.1515    transfer 0.0015    finalize 0.0024    func 0.1586    
Accumulated time: func 2.1400    prepare 0.0608    bound 2.0192    transfer 0.0134    finalize 0.0415    
all_split False
======================Cut inference begins======================
max lb tensor(0.04957005) min lb tensor(-0.51863754)
Number of Verified Splits: 23 of 146
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5004695057868958
10 lb beta sum: 0.5889486074447632, worst -0.2904396057128906
Total number of valid cuts: 32.
#cuts 1-3: 9
#cuts 4-6: 22
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.1752924919128418 
BICCOS Cumulative time: 0.9763383865356445
Preprocessing time: 0.0045909881591796875 Inference time: 0.1699683666229248 Add cuts time: 0.0007088184356689453 Cut analysis time: 2.4318695068359375e-05
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.51864 (9), -0.51308 (9), -0.45127 (9), -0.45081 (9), -0.44940 (9), -0.44893 (9), -0.44011 (9), -0.43948 (9), -0.41806 (9), -0.41091 (9), -0.40015 (9), -0.39954 (9), -0.38677 (9), -0.38354 (9), -0.36683 (9), -0.36672 (9), -0.36552 (9), -0.35952 (9), -0.35059 (9), -0.33759 (9), 
Length of domains: 123
Time: pickout 0.0009    decision 0.0169    set_bounds 0.0064    solve 0.1586    add 0.0031    
Accumulated time: pickout 0.0065    decision 0.9822    set_bounds 0.0880    solve 1.9151    add 0.6542    
Current (lb-rhs): -0.5186375379562378
513 domains visited
Cumulative time: 4.8910486698150635

BaB round 8
batch: 123
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 110] 
cut re-enabled after branching node selection
0 lb beta sum: 0.2377816140651703, worst -0.5051366090774536
10 lb beta sum: 0.23769380152225494, worst -0.5050995349884033
Time: prepare 0.0099    bound 0.1512    transfer 0.0011    finalize 0.0050    func 0.1689    
Accumulated time: func 2.3089    prepare 0.0709    bound 2.1704    transfer 0.0145    finalize 0.0466    
all_split False
======================Cut inference begins======================
max lb tensor(0.14165042) min lb tensor(-0.50509048)
Number of Verified Splits: 53 of 246
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 45.
#cuts 1-3: 13
#cuts 4-6: 31
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.01809096336364746 
BICCOS Cumulative time: 0.994429349899292
Preprocessing time: 0.007470846176147461 Inference time: 0.005688905715942383 Add cuts time: 0.0033698081970214844 Cut analysis time: 0.0015614032745361328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.50509 (10), -0.49943 (10), -0.43767 (10), -0.43632 (10), -0.43450 (10), -0.43444 (10), -0.42657 (10), -0.42454 (10), -0.41569 (10), -0.40532 (10), -0.40385 (10), -0.39687 (10), -0.38562 (10), -0.38551 (10), -0.37149 (10), -0.36848 (10), -0.35352 (10), -0.35122 (10), -0.35108 (10), -0.35105 (10), 
Length of domains: 193
Time: pickout 0.0008    decision 0.0212    set_bounds 0.0109    solve 0.1690    add 0.0036    
Accumulated time: pickout 0.0073    decision 1.0034    set_bounds 0.0989    solve 2.0841    add 0.6579    
Current (lb-rhs): -0.5050904750823975
706 domains visited
Cumulative time: 5.115318298339844

BaB round 9
batch: 193
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.48769164085388184
10 lb beta sum: 0.17984795570373535, worst -0.48759007453918457
Time: prepare 0.0060    bound 0.1577    transfer 0.0027    finalize 0.0119    func 0.1809    
Accumulated time: func 2.4898    prepare 0.0771    bound 2.3282    transfer 0.0172    finalize 0.0585    
all_split False
======================Cut inference begins======================
max lb tensor(0.21971089) min lb tensor(-0.48757339)
Number of Verified Splits: 57 of 386
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 58.
#cuts 1-3: 13
#cuts 4-6: 42
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.02362990379333496 
BICCOS Cumulative time: 1.018059253692627
Preprocessing time: 0.010965824127197266 Inference time: 0.006150245666503906 Add cuts time: 0.004423379898071289 Cut analysis time: 0.0020904541015625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.48757 (11), -0.48125 (11), -0.46347 (11), -0.46161 (11), -0.42396 (11), -0.41943 (11), -0.41725 (11), -0.41650 (11), -0.41493 (11), -0.40621 (11), -0.40491 (11), -0.40058 (11), -0.40011 (11), -0.39913 (11), -0.39714 (11), -0.38518 (11), -0.37728 (11), -0.37574 (11), -0.37280 (11), -0.37042 (11), 
Length of domains: 329
Time: pickout 0.0010    decision 0.0283    set_bounds 0.0166    solve 0.1811    add 0.0062    
Accumulated time: pickout 0.0084    decision 1.0318    set_bounds 0.1156    solve 2.2652    add 0.6641    
Current (lb-rhs): -0.48757338523864746
1035 domains visited
Cumulative time: 5.37312650680542

BaB round 10
batch: 256
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 170] [/input-16, 170] [/input-16, 170] [/input-16, 170] [/input-16, 170] [/input-16, 170] [/input-16, 51] [/input-16, 170] [/input-16, 51] [/input-16, 170] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4803966283798218
10 lb beta sum: 0.1519971787929535, worst -0.48035359382629395
Time: prepare 0.0077    bound 0.1531    transfer 0.0020    finalize 0.0101    func 0.1764    
Accumulated time: func 2.6662    prepare 0.0850    bound 2.4813    transfer 0.0192    finalize 0.0685    
all_split False
======================Cut inference begins======================
max lb tensor(0.43065310) min lb tensor(-0.48034596)
Number of Verified Splits: 217 of 512
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 66.
#cuts 1-3: 16
#cuts 4-6: 48
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.052843332290649414 
BICCOS Cumulative time: 1.0709025859832764
Preprocessing time: 0.014505624771118164 Inference time: 0.02578568458557129 Add cuts time: 0.010249614715576172 Cut analysis time: 0.002302408218383789
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.48035 (12), -0.47412 (12), -0.46347 (11), -0.46161 (11), -0.41287 (12), -0.40931 (12), -0.40760 (12), -0.40758 (12), -0.40504 (12), -0.40011 (11), -0.39913 (11), -0.39767 (12), -0.39719 (12), -0.39139 (12), -0.38837 (12), -0.38223 (12), -0.37781 (12), -0.37574 (11), -0.37280 (11), -0.37042 (11), 
Length of domains: 368
Time: pickout 0.0023    decision 0.0312    set_bounds 0.0220    solve 0.1765    add 0.0062    
Accumulated time: pickout 0.0106    decision 1.0629    set_bounds 0.1376    solve 2.4418    add 0.6702    
Current (lb-rhs): -0.4803459644317627
1330 domains visited
current_vram/total_varm: 2.2GB/99.9GB, batch_size increase to 512
Cumulative time: 5.6660919189453125

BaB round 11
batch: 368
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 51] [/input-16, 51] [/input-16, 51] [/input-16, 51] [/input-16, 51] [/input-16, 51] [/input-16, 51] [/input-16, 51] [/input-16, 51] [/input-16, 51] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.471493124961853
10 lb beta sum: 0.2121778428554535, worst -0.47145748138427734
Time: prepare 0.0113    bound 0.2019    transfer 0.0028    finalize 0.0116    func 0.2324    
Accumulated time: func 2.8986    prepare 0.0965    bound 2.6832    transfer 0.0221    finalize 0.0801    
all_split False
======================Cut inference begins======================
max lb tensor(0.44305715) min lb tensor(-0.47144711)
Number of Verified Splits: 322 of 736
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 91.
#cuts 1-3: 18
#cuts 4-6: 69
#cuts 7-9: 4
#cuts >= 20: 0
BICCOS time: 0.07982182502746582 
BICCOS Cumulative time: 1.1507244110107422
Preprocessing time: 0.020788908004760742 Inference time: 0.039695024490356445 Add cuts time: 0.016283273696899414 Cut analysis time: 0.0030546188354492188
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.47145 (13), -0.46508 (13), -0.45612 (12), -0.45432 (12), -0.40425 (13), -0.40019 (13), -0.39855 (13), -0.39817 (13), -0.39749 (13), -0.39315 (12), -0.39245 (12), -0.38819 (13), -0.38740 (13), -0.38468 (13), -0.37816 (13), -0.37368 (13), -0.36871 (13), -0.36541 (12), -0.36338 (12), -0.36318 (12), 
Length of domains: 414
Time: pickout 0.0119    decision 0.0412    set_bounds 0.0313    solve 0.2326    add 0.0067    
Accumulated time: pickout 0.0225    decision 1.1041    set_bounds 0.1689    solve 2.6743    add 0.6769    
Current (lb-rhs): -0.4714471101760864
1744 domains visited
Cumulative time: 6.071985960006714

BaB round 12
batch: 414
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 170] [/input-16, 247] [/input-16, 247] [/input-16, 247] [/input-16, 247] [/input-16, 247] [/input-16, 247] [/input-16, 247] [/input-16, 247] [/input-16, 247] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4622546434402466
10 lb beta sum: 0.2353961169719696, worst -0.46222901344299316
Time: prepare 0.0131    bound 0.2127    transfer 0.0032    finalize 0.0176    func 0.2520    
Accumulated time: func 3.1505    prepare 0.1099    bound 2.8959    transfer 0.0253    finalize 0.0977    
all_split False
======================Cut inference begins======================
max lb tensor(0.71021318) min lb tensor(-0.46222377)
Number of Verified Splits: 321 of 828
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 89.
#cuts 1-3: 19
#cuts 4-6: 66
#cuts 7-9: 4
#cuts >= 20: 0
BICCOS time: 0.08288407325744629 
BICCOS Cumulative time: 1.2336084842681885
Preprocessing time: 0.024512052536010742 Inference time: 0.039582252502441406 Add cuts time: 0.01577615737915039 Cut analysis time: 0.00301361083984375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.46222 (14), -0.45569 (14), -0.44684 (13), -0.44497 (13), -0.39460 (14), -0.39074 (14), -0.38999 (14), -0.38904 (14), -0.38776 (14), -0.38405 (13), -0.38223 (13), -0.37776 (14), -0.37573 (14), -0.36880 (14), -0.36845 (14), -0.36371 (14), -0.35934 (14), -0.35614 (14), -0.35526 (13), -0.35393 (13), 
Length of domains: 507
Time: pickout 0.0020    decision 0.2017    set_bounds 0.0358    solve 0.2522    add 0.0089    
Accumulated time: pickout 0.0245    decision 1.3058    set_bounds 0.2047    solve 2.9265    add 0.6858    
Current (lb-rhs): -0.46222376823425293
2251 domains visited
Cumulative time: 6.6585938930511475

BaB round 13
batch: 507
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 247] [/input-16, 170] [/input-16, 170] [/input-16, 247] [/input-16, 247] [/input-16, 170] [/input-16, 170] [/input-16, 170] [/input-16, 247] [/input-16, 247] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4533103108406067
10 lb beta sum: 0.1771591603755951, worst -0.45330148935317993
Time: prepare 0.0157    bound 0.2293    transfer 0.0039    finalize 0.0153    func 0.2715    
Accumulated time: func 3.4221    prepare 0.1258    bound 3.1252    transfer 0.0292    finalize 0.1130    
all_split False
======================Cut inference begins======================
max lb tensor(0.57755756) min lb tensor(-0.45329338)
Number of Verified Splits: 334 of 1014
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 95.
#cuts 1-3: 23
#cuts 4-6: 68
#cuts 7-9: 4
#cuts >= 20: 0
BICCOS time: 0.09246373176574707 
BICCOS Cumulative time: 1.3260722160339355
Preprocessing time: 0.03040146827697754 Inference time: 0.04292035102844238 Add cuts time: 0.016009092330932617 Cut analysis time: 0.0031328201293945312
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.45329 (15), -0.44421 (15), -0.43752 (14), -0.43557 (14), -0.42734 (15), -0.38834 (15), -0.38037 (15), -0.37530 (15), -0.37490 (15), -0.37436 (14), -0.37298 (14), -0.37108 (15), -0.37000 (15), -0.36950 (15), -0.36828 (15), -0.36610 (15), -0.36325 (15), -0.36076 (15), -0.35942 (15), -0.35409 (15), 
Length of domains: 680
Time: pickout 0.0167    decision 0.0518    set_bounds 0.0425    solve 0.2718    add 0.0120    
Accumulated time: pickout 0.0412    decision 1.3577    set_bounds 0.2472    solve 3.1983    add 0.6979    
Current (lb-rhs): -0.4532933831214905
2931 domains visited
Cumulative time: 7.150818586349487

BaB round 14
batch: 512
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 247] [/input-12, 597] [/input-16, 247] [/input-16, 247] [/input-12, 1012] [/input-12, 1012] [/input-16, 247] [/input-16, 247] [/input-12, 597] [/input-16, 227] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.43495994806289673
10 lb beta sum: 0.20584896206855774, worst -0.43985623121261597
Time: prepare 0.0175    bound 0.2260    transfer 0.0039    finalize 0.0145    func 0.2686    
Accumulated time: func 3.6907    prepare 0.1436    bound 3.3512    transfer 0.0331    finalize 0.1275    
all_split False
======================Cut inference begins======================
max lb tensor(0.72697484) min lb tensor(-0.43489188)
Number of Verified Splits: 346 of 1024
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 115.
#cuts 1-3: 25
#cuts 4-6: 89
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.10042023658752441 
BICCOS Cumulative time: 1.42649245262146
Preprocessing time: 0.03079533576965332 Inference time: 0.04593682289123535 Add cuts time: 0.01981329917907715 Cut analysis time: 0.0038747787475585938
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.44421 (15), -0.43489 (16), -0.43313 (15), -0.42530 (16), -0.41956 (15), -0.41869 (16), -0.39993 (15), -0.38834 (15), -0.37490 (15), -0.37108 (15), -0.37000 (15), -0.36984 (15), -0.36950 (15), -0.36620 (16), -0.36092 (16), -0.36065 (16), -0.35998 (16), -0.35942 (15), -0.35769 (16), -0.35478 (15), 
Length of domains: 846
Time: pickout 0.0023    decision 0.0479    set_bounds 0.0401    solve 0.2689    add 0.0109    
Accumulated time: pickout 0.0435    decision 1.4056    set_bounds 0.2872    solve 3.4672    add 0.7087    
Current (lb-rhs): -0.44421231746673584
3609 domains visited
current_vram/total_varm: 4.8GB/99.9GB, batch_size increase to 1024
Cumulative time: 7.626054525375366

BaB round 15
batch: 846
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 597] [/input-12, 1300] [/input-12, 1300] [/input-12, 1300] [/input-12, 1300] [/input-16, 227] [/input-16, 227] [/input-16, 227] [/input-12, 2339] [/input-16, 227] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4283943176269531
10 lb beta sum: 0.16023388504981995, worst -0.4283379316329956
Time: prepare 0.0297    bound 0.3341    transfer 0.0091    finalize 0.0410    func 0.4259    
Accumulated time: func 4.1166    prepare 0.1735    bound 3.6853    transfer 0.0422    finalize 0.1685    
all_split False
======================Cut inference begins======================
max lb tensor(0.71976745) min lb tensor(-0.42832839)
Number of Verified Splits: 338 of 1692
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 83.
#cuts 1-3: 22
#cuts 4-6: 60
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.11606335639953613 
BICCOS Cumulative time: 1.542555809020996
Preprocessing time: 0.05154919624328613 Inference time: 0.047051429748535156 Add cuts time: 0.014748573303222656 Cut analysis time: 0.0027141571044921875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.42833 (16), -0.42046 (16), -0.41920 (17), -0.41521 (16), -0.41027 (17), -0.41019 (17), -0.40365 (16), -0.40325 (17), -0.39765 (16), -0.39755 (16), -0.39711 (16), -0.39186 (17), -0.38518 (17), -0.36865 (16), -0.36123 (16), -0.35977 (16), -0.35690 (16), -0.35338 (16), -0.35320 (16), -0.35141 (17), 
Length of domains: 1354
Time: pickout 0.0263    decision 0.0758    set_bounds 0.0672    solve 0.4261    add 0.0271    
Accumulated time: pickout 0.0698    decision 1.4814    set_bounds 0.3544    solve 3.8933    add 0.7358    
Current (lb-rhs): -0.42832839488983154
4963 domains visited
Cumulative time: 8.371175289154053

BaB round 16
batch: 1024
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 597] [/input-16, 65] [/input-12, 1300] [/input-16, 65] [/input-16, 227] [/input-16, 227] [/input-16, 227] [/input-16, 227] [/input-16, 65] [/input-16, 65] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4264768362045288
10 lb beta sum: 0.28959304094314575, worst -0.4264686107635498
Time: prepare 0.0386    bound 0.3792    transfer 0.0241    finalize 0.0655    func 0.5210    
Accumulated time: func 4.6376    prepare 0.2124    bound 4.0645    transfer 0.0663    finalize 0.2340    
all_split False
======================Cut inference begins======================
max lb tensor(0.73689902) min lb tensor(-0.42646337)
Number of Verified Splits: 1248 of 2048
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 19
#cuts 4-6: 17
#cuts >= 20: 0
BICCOS time: 0.26744627952575684 
BICCOS Cumulative time: 1.810002088546753
Preprocessing time: 0.06433582305908203 Inference time: 0.17357897758483887 Add cuts time: 0.028402090072631836 Cut analysis time: 0.0011293888092041016
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.42646 (17), -0.41809 (17), -0.41521 (16), -0.41027 (17), -0.40809 (18), -0.40165 (17), -0.39928 (18), -0.39755 (16), -0.39211 (18), -0.38245 (17), -0.38200 (17), -0.38079 (18), -0.37425 (18), -0.37414 (18), -0.36858 (17), -0.36798 (17), -0.36586 (17), -0.35824 (17), -0.35783 (17), -0.35369 (18), 
Length of domains: 1130
Time: pickout 0.0047    decision 0.2203    set_bounds 0.0806    solve 0.5220    add 0.0212    
Accumulated time: pickout 0.0745    decision 1.7016    set_bounds 0.4350    solve 4.4153    add 0.7570    
Current (lb-rhs): -0.42646336555480957
5763 domains visited
current_vram/total_varm: 8.8GB/99.9GB, batch_size increase to 2048
Cumulative time: 9.503228902816772

BaB round 17
batch: 1130
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 65] [/input-12, 1300] [/input-16, 227] [/input-16, 227] [/input-16, 65] [/input-16, 227] [/input-16, 227] [/input-16, 65] [/input-16, 227] [/input-16, 65] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.41569995880126953
10 lb beta sum: 0.927985429763794, worst -0.40976184606552124
Time: prepare 0.0444    bound 0.4095    transfer 0.0079    finalize 0.0772    func 0.5547    
Accumulated time: func 5.1923    prepare 0.2571    bound 4.4740    transfer 0.0741    finalize 0.3112    
all_split False
======================Cut inference begins======================
max lb tensor(0.72032082) min lb tensor(-0.40975353)
Number of Verified Splits: 1374 of 2260
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 21
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.4657559394836426 
BICCOS Cumulative time: 2.2757580280303955
Preprocessing time: 0.0701589584350586 Inference time: 0.36432695388793945 Add cuts time: 0.030390262603759766 Cut analysis time: 0.0008797645568847656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.40975 (18), -0.40131 (18), -0.39455 (19), -0.39289 (18), -0.39027 (19), -0.38480 (18), -0.38203 (17), -0.37834 (17), -0.37508 (19), -0.37492 (17), -0.37103 (19), -0.36724 (19), -0.36664 (18), -0.36259 (19), -0.36154 (19), -0.35972 (19), -0.35648 (18), -0.35616 (18), -0.35521 (18), -0.35517 (18), 
Length of domains: 886
Time: pickout 0.0359    decision 0.0953    set_bounds 0.0908    solve 0.5552    add 0.0139    
Accumulated time: pickout 0.1104    decision 1.7970    set_bounds 0.5258    solve 4.9705    add 0.7709    
Current (lb-rhs): -0.4097535312175751
6649 domains visited
Cumulative time: 10.777873516082764

BaB round 18
batch: 886
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 65] [/input-16, 65] [/input-16, 65] [/input-16, 65] [/input-16, 65] [/input-16, 65] [/input-16, 65] [/input-12, 2258] [/input-12, 1300] [/input-12, 481] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4084426164627075
10 lb beta sum: 1.912144660949707, worst -0.3950258493423462
Time: prepare 0.0357    bound 0.3376    transfer 0.0090    finalize 0.0509    func 0.4449    
Accumulated time: func 5.6372    prepare 0.2931    bound 4.8116    transfer 0.0831    finalize 0.3621    
all_split False
======================Cut inference begins======================
max lb tensor(1.07569146) min lb tensor(-0.39435428)
Number of Verified Splits: 1685 of 1772
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 32
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.31801342964172363 
BICCOS Cumulative time: 2.593771457672119
Preprocessing time: 0.056902408599853516 Inference time: 0.23404741287231445 Add cuts time: 0.026202917098999023 Cut analysis time: 0.0008606910705566406
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.39435 (19), -0.39341 (19), -0.39051 (19), -0.38665 (20), -0.38235 (20), -0.37836 (19), -0.37592 (19), -0.37426 (19), -0.37328 (18), -0.36971 (18), -0.36672 (18), -0.35025 (19), -0.34614 (19), -0.34597 (20), -0.34473 (20), -0.34400 (18), -0.34115 (19), -0.34020 (19), -0.34009 (19), -0.33683 (19), 
Length of domains: 87
Time: pickout 0.0037    decision 0.0768    set_bounds 0.0751    solve 0.4453    add 0.0026    
Accumulated time: pickout 0.1141    decision 1.8738    set_bounds 0.6009    solve 5.4159    add 0.7735    
Current (lb-rhs): -0.39435428380966187
6736 domains visited
Cumulative time: 11.714188814163208

BaB round 19
batch: 87
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-12, 1300] [/input-16, 18] [/input-12, 1572] [/input-12, 1012] [/input-16, 10] [/input-16, 18] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4041985273361206
10 lb beta sum: 3.2449698448181152, worst -0.36473190784454346
Time: prepare 0.0039    bound 0.1741    transfer 0.0010    finalize 0.0030    func 0.1832    
Accumulated time: func 5.8204    prepare 0.2972    bound 4.9857    transfer 0.0841    finalize 0.3651    
all_split False
======================Cut inference begins======================
max lb tensor(0.38954735) min lb tensor(-0.36471105)
Number of Verified Splits: 57 of 174
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.01668548583984375 
BICCOS Cumulative time: 2.610456943511963
Preprocessing time: 0.005495548248291016 Inference time: 0.008439302444458008 Add cuts time: 0.0020318031311035156 Cut analysis time: 0.0007188320159912109
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.36471 (20), -0.36078 (20), -0.35573 (20), -0.35469 (21), -0.35246 (20), -0.35040 (21), -0.34494 (20), -0.34104 (20), -0.33843 (20), -0.33338 (20), -0.33331 (19), -0.33147 (19), -0.32620 (19), -0.32157 (19), -0.31790 (21), -0.31689 (20), -0.31599 (21), -0.31297 (21), -0.31282 (20), -0.31057 (21), 
Length of domains: 117
Time: pickout 0.0025    decision 0.0219    set_bounds 0.0079    solve 0.1833    add 0.0040    
Accumulated time: pickout 0.1166    decision 1.8956    set_bounds 0.6088    solve 5.5992    add 0.7775    
Current (lb-rhs): -0.36471104621887207
6853 domains visited
Cumulative time: 11.951098680496216

BaB round 20
batch: 117
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1012] [/input-16, 10] [/input-12, 1012] [/input-12, 1012] [/input-12, 1012] [/input-12, 1012] [/input-16, 10] [/input-12, 3347] [/input-12, 3347] [/input-16, 10] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.40002477169036865
10 lb beta sum: 3.137944221496582, worst -0.3603702783584595
Time: prepare 0.0050    bound 0.1726    transfer 0.0010    finalize 0.0037    func 0.1844    
Accumulated time: func 6.0048    prepare 0.3024    bound 5.1583    transfer 0.0852    finalize 0.3688    
all_split False
======================Cut inference begins======================
max lb tensor(0.45713758) min lb tensor(-0.36035991)
Number of Verified Splits: 28 of 234
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.013493061065673828 
BICCOS Cumulative time: 2.6239500045776367
Preprocessing time: 0.0070765018463134766 Inference time: 0.004092693328857422 Add cuts time: 0.0016131401062011719 Cut analysis time: 0.0007107257843017578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.36036 (21), -0.35645 (21), -0.35566 (21), -0.35240 (21), -0.35059 (22), -0.34634 (22), -0.34486 (21), -0.34106 (21), -0.34101 (21), -0.33713 (21), -0.33422 (21), -0.33331 (21), -0.33325 (20), -0.33147 (20), -0.33087 (22), -0.32785 (20), -0.32664 (20), -0.32656 (22), -0.32606 (20), -0.32318 (21), 
Length of domains: 206
Time: pickout 0.0023    decision 0.0220    set_bounds 0.0102    solve 0.1845    add 0.0043    
Accumulated time: pickout 0.1189    decision 1.9176    set_bounds 0.6190    solve 5.7837    add 0.7818    
Current (lb-rhs): -0.36035990715026855
7059 domains visited
Cumulative time: 12.188381671905518

BaB round 21
batch: 206
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 10] [/input-12, 1299] [/input-12, 3347] [/input-12, 1299] [/input-12, 3347] [/input-16, 10] [/input-12, 3347] [/input-12, 1012] [/input-12, 8157] [/input-12, 5556] 
cut re-enabled after branching node selection
0 lb beta sum: 3.5968756675720215, worst -0.3571321964263916
10 lb beta sum: 3.6142642498016357, worst -0.35709643363952637
Time: prepare 0.0187    bound 0.1765    transfer 0.0020    finalize 0.0120    func 0.2128    
Accumulated time: func 6.2176    prepare 0.3214    bound 5.3348    transfer 0.0872    finalize 0.3809    
all_split False
======================Cut inference begins======================
max lb tensor(0.35395992) min lb tensor(-0.35708880)
Number of Verified Splits: 66 of 412
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 32
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.024513959884643555 
BICCOS Cumulative time: 2.6484639644622803
Preprocessing time: 0.012017011642456055 Inference time: 0.009457588195800781 Add cuts time: 0.002346038818359375 Cut analysis time: 0.0006933212280273438
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.35709 (22), -0.35312 (22), -0.35258 (22), -0.35240 (22), -0.35057 (23), -0.34633 (23), -0.34484 (22), -0.34101 (22), -0.33750 (22), -0.33744 (22), -0.33421 (22), -0.33359 (22), -0.33354 (22), -0.33351 (22), -0.33320 (21), -0.33147 (21), -0.33087 (23), -0.33058 (23), -0.32920 (22), -0.32783 (21), 
Length of domains: 346
Time: pickout 0.0011    decision 0.0277    set_bounds 0.0174    solve 0.2129    add 0.0076    
Accumulated time: pickout 0.1200    decision 1.9453    set_bounds 0.6365    solve 5.9965    add 0.7894    
Current (lb-rhs): -0.3570888042449951
7405 domains visited
Cumulative time: 12.480440855026245

BaB round 22
batch: 346
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3347] [/input-16, 10] [/input-16, 10] [/input-12, 1299] [/input-12, 2339] [/input-12, 2339] [/input-16, 10] [/input-12, 1299] [/input-12, 1299] [/input-12, 2339] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.39031291007995605
10 lb beta sum: 2.9600021839141846, worst -0.3570868968963623
Time: prepare 0.0138    bound 0.1972    transfer 0.0037    finalize 0.0088    func 0.2280    
Accumulated time: func 6.4456    prepare 0.3354    bound 5.5319    transfer 0.0909    finalize 0.3897    
all_split False
======================Cut inference begins======================
max lb tensor(0.46047235) min lb tensor(-0.35708416)
Number of Verified Splits: 175 of 692
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.05317831039428711 
BICCOS Cumulative time: 2.7016422748565674
Preprocessing time: 0.01998615264892578 Inference time: 0.028977155685424805 Add cuts time: 0.003517627716064453 Cut analysis time: 0.0006973743438720703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.35708 (23), -0.35312 (23), -0.35258 (23), -0.35057 (24), -0.35056 (24), -0.34928 (23), -0.34633 (24), -0.34633 (24), -0.34484 (23), -0.34484 (23), -0.34101 (23), -0.34101 (23), -0.33731 (23), -0.33708 (23), -0.33418 (23), -0.33334 (23), -0.33322 (23), -0.33313 (23), -0.33147 (22), -0.33087 (24), 
Length of domains: 517
Time: pickout 0.0029    decision 0.0383    set_bounds 0.0298    solve 0.2282    add 0.0097    
Accumulated time: pickout 0.1229    decision 1.9835    set_bounds 0.6662    solve 6.2247    add 0.7991    
Current (lb-rhs): -0.35708415508270264
7922 domains visited
Cumulative time: 12.84428095817566

BaB round 23
batch: 517
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1299] [/input-12, 1299] [/input-12, 1299] [/input-12, 6996] [/input-12, 8157] [/input-12, 1299] [/input-12, 597] [/input-12, 8157] [/input-12, 1299] [/input-12, 6996] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3876028060913086
10 lb beta sum: 3.0066447257995605, worst -0.3570840358734131
Time: prepare 0.0199    bound 0.2293    transfer 0.0037    finalize 0.0132    func 0.2729    
Accumulated time: func 6.7185    prepare 0.3555    bound 5.7613    transfer 0.0946    finalize 0.4029    
all_split False
======================Cut inference begins======================
max lb tensor(0.61653519) min lb tensor(-0.35707998)
Number of Verified Splits: 466 of 1034
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.11539435386657715 
BICCOS Cumulative time: 2.8170366287231445
Preprocessing time: 0.030918359756469727 Inference time: 0.07649850845336914 Add cuts time: 0.007252216339111328 Cut analysis time: 0.0007252693176269531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.35708 (24), -0.35311 (24), -0.34890 (24), -0.34567 (25), -0.34561 (24), -0.34510 (25), -0.34480 (25), -0.34424 (25), -0.34234 (24), -0.34150 (25), -0.34149 (25), -0.34142 (24), -0.34064 (25), -0.33851 (24), -0.33762 (24), -0.33678 (24), -0.33566 (25), -0.33294 (24), -0.33115 (24), -0.32931 (23), 
Length of domains: 568
Time: pickout 0.0175    decision 0.0508    set_bounds 0.0439    solve 0.2731    add 0.0107    
Accumulated time: pickout 0.1404    decision 2.0343    set_bounds 0.7101    solve 6.4978    add 0.8098    
Current (lb-rhs): -0.35707998275756836
8490 domains visited
Cumulative time: 13.35928201675415

BaB round 24
batch: 568
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3347] [/input-12, 1572] [/input-12, 2339] [/input-12, 2450] [/input-12, 1572] [/input-12, 2339] [/input-12, 1299] [/input-12, 1012] [/input-12, 3347] [/input-12, 3347] 
cut re-enabled after branching node selection
0 lb beta sum: 3.338001012802124, worst -0.35787439346313477
10 lb beta sum: 3.3581929206848145, worst -0.3578484058380127
Time: prepare 0.0519    bound 0.2478    transfer 0.0047    finalize 0.0203    func 0.3322    
Accumulated time: func 7.0507    prepare 0.4076    bound 6.0091    transfer 0.0993    finalize 0.4232    
all_split False
======================Cut inference begins======================
max lb tensor(0.37207317) min lb tensor(-0.35707998)
Number of Verified Splits: 195 of 1136
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.07239389419555664 
BICCOS Cumulative time: 2.889430522918701
Preprocessing time: 0.03492903709411621 Inference time: 0.03307652473449707 Add cuts time: 0.0036580562591552734 Cut analysis time: 0.0007302761077880859
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.35708 (25), -0.35706 (25), -0.35311 (25), -0.34890 (25), -0.34561 (25), -0.34545 (25), -0.33989 (26), -0.33953 (26), -0.33942 (26), -0.33902 (26), -0.33890 (26), -0.33867 (26), -0.33855 (26), -0.33803 (26), -0.33692 (25), -0.33678 (25), -0.33662 (26), -0.33656 (25), -0.33606 (26), -0.33600 (25), 
Length of domains: 941
Time: pickout 0.0026    decision 0.0531    set_bounds 0.1797    solve 0.3333    add 0.0164    
Accumulated time: pickout 0.1431    decision 2.0874    set_bounds 0.8898    solve 6.8311    add 0.8262    
Current (lb-rhs): -0.35707998275756836
9431 domains visited
Cumulative time: 14.020065546035767

BaB round 25
batch: 941
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1299] [/input-12, 1299] [/input-12, 2258] [/input-12, 3347] [/input-12, 1299] [/input-12, 2258] [/input-12, 2258] [/input-12, 2258] [/input-12, 1572] [/input-12, 1299] 
cut re-enabled after branching node selection
0 lb beta sum: 3.3410117626190186, worst -0.3578338623046875
10 lb beta sum: 3.355032205581665, worst -0.3578214645385742
Time: prepare 0.0838    bound 0.3576    transfer 0.0067    finalize 0.0527    func 0.5134    
Accumulated time: func 7.5641    prepare 0.4917    bound 6.3667    transfer 0.1060    finalize 0.4758    
all_split False
======================Cut inference begins======================
max lb tensor(0.37262130) min lb tensor(-0.35707998)
Number of Verified Splits: 313 of 1882
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.1219477653503418 
BICCOS Cumulative time: 3.011378288269043
Preprocessing time: 0.05852794647216797 Inference time: 0.056517839431762695 Add cuts time: 0.0061168670654296875 Cut analysis time: 0.0007851123809814453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.35708 (26), -0.35706 (26), -0.35311 (26), -0.35309 (26), -0.34890 (26), -0.34877 (26), -0.34561 (26), -0.34539 (26), -0.34073 (26), -0.33692 (26), -0.33665 (26), -0.33635 (26), -0.33600 (26), -0.33514 (27), -0.33478 (27), -0.33471 (27), -0.33430 (27), -0.33418 (27), -0.33394 (27), -0.33385 (27), 
Length of domains: 1569
Time: pickout 0.0057    decision 0.0807    set_bounds 0.0822    solve 0.5138    add 0.0342    
Accumulated time: pickout 0.1487    decision 2.1681    set_bounds 0.9720    solve 7.3450    add 0.8604    
Current (lb-rhs): -0.35707998275756836
11000 domains visited
Cumulative time: 14.863942384719849

BaB round 26
batch: 1569
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4123] [/input-12, 4123] [/input-12, 2441] [/input-12, 2441] [/input-12, 2258] [/input-12, 3795] [/input-12, 2258] [/input-12, 6996] [/input-12, 2441] [/input-12, 3347] 
cut re-enabled after branching node selection
0 lb beta sum: 3.333172082901001, worst -0.3533148765563965
10 lb beta sum: 3.3415398597717285, worst -0.35331296920776367
Time: prepare 0.1398    bound 0.5338    transfer 0.0264    finalize 0.1032    func 0.9940    
Accumulated time: func 8.5582    prepare 0.6318    bound 6.9005    transfer 0.1324    finalize 0.5791    
all_split False
======================Cut inference begins======================
max lb tensor(0.36797166) min lb tensor(-0.35331130)
Number of Verified Splits: 381 of 3138
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.1760082244873047 
BICCOS Cumulative time: 3.1873865127563477
Preprocessing time: 0.09714889526367188 Inference time: 0.07099676132202148 Add cuts time: 0.007016897201538086 Cut analysis time: 0.0008456707000732422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.35331 (27), -0.35245 (27), -0.34937 (27), -0.34890 (27), -0.34870 (27), -0.34850 (27), -0.34761 (27), -0.34745 (27), -0.34561 (27), -0.34539 (27), -0.34519 (27), -0.34400 (27), -0.34373 (27), -0.34357 (27), -0.34188 (27), -0.33598 (27), -0.33409 (27), -0.33199 (27), -0.33159 (27), -0.33157 (27), 
Length of domains: 2757
Time: pickout 0.0505    decision 0.1253    set_bounds 0.1345    solve 0.9946    add 0.0555    
Accumulated time: pickout 0.1992    decision 2.2934    set_bounds 1.1065    solve 8.3396    add 0.9159    
Current (lb-rhs): -0.35331130027770996
13757 domains visited
Cumulative time: 16.409224271774292

BaB round 27
batch: 2048
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2441] [/input-12, 2441] [/input-12, 2450] [/input-12, 2450] [/input-12, 4123] [/input-12, 6996] [/input-12, 4123] [/input-12, 2450] [/input-12, 3347] [/input-12, 2450] 
cut re-enabled after branching node selection
0 lb beta sum: 3.3030850887298584, worst -0.3472752571105957
10 lb beta sum: 3.3095197677612305, worst -0.34746336936950684
Time: prepare 0.1864    bound 0.6678    transfer 0.0335    finalize 0.1302    func 1.0459    
Accumulated time: func 9.6041    prepare 0.8184    bound 7.5683    transfer 0.1660    finalize 0.7092    
all_split False
======================Cut inference begins======================
max lb tensor(0.36645675) min lb tensor(-0.34726048)
Number of Verified Splits: 420 of 4096
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.21831774711608887 
BICCOS Cumulative time: 3.4057042598724365
Preprocessing time: 0.1271350383758545 Inference time: 0.08220195770263672 Add cuts time: 0.008152961730957031 Cut analysis time: 0.000827789306640625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.35331 (27), -0.34937 (27), -0.34726 (28), -0.34627 (28), -0.34519 (27), -0.34480 (28), -0.34381 (28), -0.34375 (28), -0.34337 (28), -0.34273 (28), -0.34248 (28), -0.34234 (28), -0.34221 (28), -0.34188 (27), -0.34150 (28), -0.34133 (28), -0.34120 (28), -0.34051 (28), -0.34044 (28), -0.33947 (28), 
Length of domains: 4385
Time: pickout 0.0081    decision 0.1666    set_bounds 0.1762    solve 1.0470    add 0.0946    
Accumulated time: pickout 0.2074    decision 2.4600    set_bounds 1.2827    solve 9.3866    add 1.0104    
Current (lb-rhs): -0.35331130027770996
17433 domains visited
current_vram/total_varm: 18.2GB/99.9GB, batch_size increase to 4096
Cumulative time: 18.132113218307495

BaB round 28
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3347] [/input-12, 2258] [/input-12, 1572] [/input-12, 2441] [/input-12, 4123] [/input-12, 2450] [/input-12, 2258] [/input-12, 2441] [/input-12, 3347] [/input-12, 2450] 
cut re-enabled after branching node selection
0 lb beta sum: 3.2991905212402344, worst -0.34813547134399414
10 lb beta sum: 3.306593656539917, worst -0.3481178283691406
Time: prepare 0.3758    bound 1.2461    transfer 0.1063    finalize 0.4585    func 2.2416    
Accumulated time: func 11.8456    prepare 1.1945    bound 8.8145    transfer 0.2723    finalize 1.1677    
all_split False
======================Cut inference begins======================
max lb tensor(0.37794423) min lb tensor(-0.34811211)
Number of Verified Splits: 906 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.47027039527893066 
BICCOS Cumulative time: 3.875974655151367
Preprocessing time: 0.25775575637817383 Inference time: 0.19179248809814453 Add cuts time: 0.019828081130981445 Cut analysis time: 0.0008940696716308594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34811 (28), -0.34712 (28), -0.34627 (28), -0.34419 (28), -0.34337 (29), -0.34321 (28), -0.34246 (29), -0.34223 (29), -0.34093 (29), -0.34039 (28), -0.34036 (29), -0.33974 (29), -0.33945 (29), -0.33873 (29), -0.33863 (29), -0.33846 (28), -0.33813 (29), -0.33760 (29), -0.33749 (29), -0.33728 (29), 
Length of domains: 7575
Time: pickout 0.0139    decision 0.4700    set_bounds 0.3569    solve 2.2436    add 0.1699    
Accumulated time: pickout 0.2213    decision 2.9300    set_bounds 1.6396    solve 11.6302    add 1.1804    
Current (lb-rhs): -0.3481121063232422
24719 domains visited
current_vram/total_varm: 28.2GB/99.9GB, batch_size increase to 8192
Cumulative time: 21.87959098815918

BaB round 29
batch: 7575
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2268] [/input-12, 2261] [/input-12, 1572] [/input-12, 2339] [/input-12, 2258] [/input-12, 2258] [/input-12, 867] [/input-12, 2267] [/input-12, 2268] [/input-12, 3795] 
cut re-enabled after branching node selection
0 lb beta sum: 3.29227614402771, worst -0.3441932201385498
10 lb beta sum: 3.2969970703125, worst -0.3442099094390869
Time: prepare 0.6994    bound 2.2489    transfer 0.2133    finalize 0.5277    func 3.7970    
Accumulated time: func 15.6427    prepare 1.8942    bound 11.0633    transfer 0.4856    finalize 1.6953    
all_split False
======================Cut inference begins======================
max lb tensor(0.38804698) min lb tensor(-0.34418845)
Number of Verified Splits: 1339 of 15150
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 1.1056265830993652 
BICCOS Cumulative time: 4.981601238250732
Preprocessing time: 0.49013495445251465 Inference time: 0.5872502326965332 Add cuts time: 0.02730393409729004 Cut analysis time: 0.0009374618530273438
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34419 (29), -0.34308 (29), -0.34222 (30), -0.34189 (29), -0.34178 (29), -0.34116 (29), -0.34103 (29), -0.34092 (30), -0.34031 (29), -0.33831 (30), -0.33798 (29), -0.33728 (30), -0.33727 (29), -0.33715 (30), -0.33713 (30), -0.33705 (30), -0.33645 (30), -0.33639 (30), -0.33606 (30), -0.33594 (30), 
Length of domains: 13811
Time: pickout 0.2886    decision 0.7142    set_bounds 0.8837    solve 3.8006    add 0.3208    
Accumulated time: pickout 0.5099    decision 3.6443    set_bounds 2.5233    solve 15.4309    add 1.5012    
Current (lb-rhs): -0.3441884517669678
38530 domains visited
Cumulative time: 29.02910327911377

BaB round 30
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3347] [/input-12, 3347] [/input-12, 7989] [/input-12, 2339] [/input-12, 2915] [/input-12, 6469] [/input-12, 2261] [/input-12, 1013] [/input-12, 2267] [/input-12, 597] 
cut re-enabled after branching node selection
0 lb beta sum: 3.277073860168457, worst -0.3430814743041992
10 lb beta sum: 3.2807722091674805, worst -0.3430819511413574
Time: prepare 0.7773    bound 2.4237    transfer 0.2118    finalize 0.5365    func 4.0580    
Accumulated time: func 19.7007    prepare 2.6718    bound 13.4870    transfer 0.6974    finalize 2.2319    
all_split False
======================Cut inference begins======================
max lb tensor(0.38536048) min lb tensor(-0.34308004)
Number of Verified Splits: 1313 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 1.1946606636047363 
BICCOS Cumulative time: 6.176261901855469
Preprocessing time: 0.5318312644958496 Inference time: 0.6346240043640137 Add cuts time: 0.027330398559570312 Cut analysis time: 0.0008749961853027344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34308 (30), -0.34188 (30), -0.34177 (30), -0.34116 (29), -0.34103 (30), -0.34029 (30), -0.34009 (31), -0.33917 (30), -0.33876 (31), -0.33798 (30), -0.33788 (30), -0.33727 (29), -0.33639 (30), -0.33617 (31), -0.33606 (31), -0.33592 (31), -0.33580 (31), -0.33537 (30), -0.33527 (31), -0.33516 (31), 
Length of domains: 20690
Time: pickout 0.0333    decision 0.6219    set_bounds 1.0233    solve 4.0609    add 0.4371    
Accumulated time: pickout 0.5431    decision 4.2662    set_bounds 3.5466    solve 19.4917    add 1.9384    
Current (lb-rhs): -0.3430800437927246
53601 domains visited
Cumulative time: 36.443910121917725

BaB round 31
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 8093] [/input-12, 5222] [/input-12, 2258] [/input-12, 1013] [/input-12, 5222] [/input-12, 6469] [/input-12, 2252] [/input-12, 5220] [/input-12, 6469] [/input-12, 1013] 
cut re-enabled after branching node selection
0 lb beta sum: 3.2777180671691895, worst -0.3411545753479004
10 lb beta sum: 3.2803499698638916, worst -0.34114837646484375
Time: prepare 0.7541    bound 2.4250    transfer 0.2120    finalize 0.5369    func 4.0374    
Accumulated time: func 23.7381    prepare 3.4263    bound 15.9121    transfer 0.9095    finalize 2.7687    
all_split False
======================Cut inference begins======================
max lb tensor(0.35920000) min lb tensor(-0.34114242)
Number of Verified Splits: 1250 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.8952419757843018 
BICCOS Cumulative time: 7.0715038776397705
Preprocessing time: 0.5405981540679932 Inference time: 0.3063170909881592 Add cuts time: 0.047206878662109375 Cut analysis time: 0.001119852066040039
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34188 (30), -0.34177 (30), -0.34114 (30), -0.34094 (31), -0.34029 (30), -0.33889 (31), -0.33876 (31), -0.33798 (30), -0.33788 (30), -0.33731 (32), -0.33726 (30), -0.33704 (31), -0.33592 (31), -0.33580 (31), -0.33527 (31), -0.33516 (32), -0.33514 (31), -0.33499 (31), -0.33424 (31), -0.33412 (31), 
Length of domains: 27632
Time: pickout 0.0329    decision 0.6225    set_bounds 1.1209    solve 4.0411    add 0.3547    
Accumulated time: pickout 0.5760    decision 4.8887    set_bounds 4.6676    solve 23.5328    add 2.2931    
Current (lb-rhs): -0.34188365936279297
68735 domains visited
Cumulative time: 43.553940296173096

BaB round 32
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 610] [/input-12, 3795] [/input-12, 1426] [/input-12, 5220] [/input-12, 5220] [/input-12, 6469] [/input-12, 2258] [/input-12, 1426] [/input-12, 6996] [/input-12, 2252] 
cut re-enabled after branching node selection
0 lb beta sum: 3.269886016845703, worst -0.3397524356842041
10 lb beta sum: 3.2722957134246826, worst -0.3397502899169922
Time: prepare 0.7655    bound 2.4257    transfer 0.2127    finalize 0.5516    func 4.0627    
Accumulated time: func 27.8008    prepare 4.1921    bound 18.3378    transfer 1.1221    finalize 3.3203    
all_split False
======================Cut inference begins======================
max lb tensor(0.38951111) min lb tensor(-0.33974743)
Number of Verified Splits: 1208 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.9051508903503418 
BICCOS Cumulative time: 7.976654767990112
Preprocessing time: 0.5470514297485352 Inference time: 0.3049509525299072 Add cuts time: 0.05209660530090332 Cut analysis time: 0.0010519027709960938
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34114 (30), -0.34094 (31), -0.33975 (31), -0.33961 (31), -0.33889 (31), -0.33814 (31), -0.33731 (32), -0.33726 (30), -0.33704 (31), -0.33614 (32), -0.33585 (31), -0.33574 (31), -0.33516 (32), -0.33424 (31), -0.33394 (32), -0.33378 (31), -0.33377 (32), -0.33365 (32), -0.33338 (32), -0.33314 (32), 
Length of domains: 34616
Time: pickout 0.0317    decision 0.9872    set_bounds 1.1711    solve 4.0671    add 0.6525    
Accumulated time: pickout 0.6078    decision 5.8759    set_bounds 5.8387    solve 27.5999    add 2.9456    
Current (lb-rhs): -0.3411424160003662
83911 domains visited
Cumulative time: 51.416841983795166

BaB round 33
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2915] [/input-12, 2450] [/input-12, 2258] [/input-12, 3795] [/input-12, 2258] [/input-12, 3795] [/input-12, 610] [/input-12, 3795] [/input-12, 1426] [/input-12, 5220] 
cut re-enabled after branching node selection
0 lb beta sum: 3.279798984527588, worst -0.3390045166015625
10 lb beta sum: 3.2821645736694336, worst -0.3389930725097656
Time: prepare 0.7611    bound 2.4251    transfer 0.2141    finalize 0.5455    func 4.0549    
Accumulated time: func 31.8557    prepare 4.9537    bound 20.7628    transfer 1.3363    finalize 3.8658    
all_split False
======================Cut inference begins======================
max lb tensor(0.39798510) min lb tensor(-0.33898449)
Number of Verified Splits: 1194 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 1.3475656509399414 
BICCOS Cumulative time: 9.324220418930054
Preprocessing time: 1.0073590278625488 Inference time: 0.31145501136779785 Add cuts time: 0.0278778076171875 Cut analysis time: 0.0008738040924072266
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34094 (31), -0.33975 (31), -0.33961 (31), -0.33898 (31), -0.33889 (31), -0.33814 (31), -0.33731 (32), -0.33704 (31), -0.33614 (32), -0.33585 (31), -0.33574 (31), -0.33516 (32), -0.33510 (31), -0.33394 (32), -0.33377 (32), -0.33365 (32), -0.33338 (32), -0.33314 (32), -0.33302 (32), -0.33266 (31), 
Length of domains: 41614
Time: pickout 0.0349    decision 1.0325    set_bounds 0.8083    solve 4.0595    add 0.3564    
Accumulated time: pickout 0.6426    decision 6.9084    set_bounds 6.6470    solve 31.6594    add 3.3021    
Current (lb-rhs): -0.3409428596496582
99101 domains visited
Cumulative time: 59.09902906417847

BaB round 34
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2915] [/input-12, 1426] [/input-12, 2258] [/input-12, 5220] [/input-12, 2441] [/input-12, 2441] [/input-12, 2915] [/input-12, 6469] [/input-12, 8157] [/input-12, 5221] 
cut re-enabled after branching node selection
0 lb beta sum: 3.270982265472412, worst -0.33817577362060547
10 lb beta sum: 3.2725605964660645, worst -0.33817529678344727
Time: prepare 0.7683    bound 2.4261    transfer 0.2149    finalize 0.5517    func 4.0700    
Accumulated time: func 35.9257    prepare 5.7223    bound 23.1889    transfer 1.5512    finalize 4.4175    
all_split False
======================Cut inference begins======================
max lb tensor(0.39828002) min lb tensor(-0.33817387)
Number of Verified Splits: 1170 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.8773593902587891 
BICCOS Cumulative time: 10.201579809188843
Preprocessing time: 0.5432145595550537 Inference time: 0.30660486221313477 Add cuts time: 0.026630401611328125 Cut analysis time: 0.0009095668792724609
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33975 (31), -0.33961 (31), -0.33898 (31), -0.33817 (32), -0.33814 (31), -0.33731 (32), -0.33621 (32), -0.33614 (32), -0.33585 (31), -0.33574 (31), -0.33510 (31), -0.33425 (32), -0.33377 (32), -0.33365 (32), -0.33338 (32), -0.33314 (32), -0.33302 (32), -0.33241 (33), -0.33228 (32), -0.33227 (32), 
Length of domains: 48636
Time: pickout 0.0351    decision 0.6279    set_bounds 1.3220    solve 4.0735    add 0.3585    
Accumulated time: pickout 0.6777    decision 7.5363    set_bounds 7.9690    solve 35.7329    add 3.6605    
Current (lb-rhs): -0.33974742889404297
114315 domains visited
Cumulative time: 66.43999314308167

BaB round 35
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6996] [/input-12, 2441] [/input-12, 5222] [/input-12, 4115] [/input-12, 5221] [/input-12, 2258] [/input-12, 7989] [/input-12, 3795] [/input-12, 1190] [/input-12, 867] 
cut re-enabled after branching node selection
0 lb beta sum: 3.2592053413391113, worst -0.3373117446899414
10 lb beta sum: 3.2613840103149414, worst -0.33731555938720703
Time: prepare 0.7821    bound 2.4253    transfer 0.2159    finalize 0.5417    func 4.0764    
Accumulated time: func 40.0021    prepare 6.5048    bound 25.6143    transfer 1.7671    finalize 4.9592    
all_split False
======================Cut inference begins======================
max lb tensor(0.39186144) min lb tensor(-0.33731174)
Number of Verified Splits: 1009 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.8422553539276123 
BICCOS Cumulative time: 11.043835163116455
Preprocessing time: 0.545403242111206 Inference time: 0.26976919174194336 Add cuts time: 0.02619028091430664 Cut analysis time: 0.00089263916015625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33898 (31), -0.33817 (32), -0.33731 (33), -0.33707 (32), -0.33699 (32), -0.33621 (32), -0.33614 (32), -0.33550 (32), -0.33510 (31), -0.33425 (32), -0.33377 (33), -0.33315 (32), -0.33310 (32), -0.33241 (33), -0.33228 (32), -0.33227 (33), -0.33222 (33), -0.33159 (32), -0.33128 (33), -0.33119 (33), 
Length of domains: 55819
Time: pickout 0.0379    decision 0.6236    set_bounds 1.3702    solve 4.0808    add 0.3484    
Accumulated time: pickout 0.7156    decision 8.1599    set_bounds 9.3392    solve 39.8137    add 4.0090    
Current (lb-rhs): -0.33898448944091797
129690 domains visited
Cumulative time: 73.7976131439209

BaB round 36
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2258] [/input-12, 5220] [/input-12, 2441] [/input-12, 2259] [/input-12, 7985] [/input-12, 2266] [/input-12, 1426] [/input-12, 5222] [/input-12, 2915] [/input-12, 1426] 
cut re-enabled after branching node selection
0 lb beta sum: 3.262667179107666, worst -0.3361375331878662
10 lb beta sum: 3.2646005153656006, worst -0.33619213104248047
Time: prepare 0.7703    bound 2.4282    transfer 0.2150    finalize 0.5536    func 4.0768    
Accumulated time: func 44.0789    prepare 7.2755    bound 28.0424    transfer 1.9821    finalize 5.5127    
all_split False
======================Cut inference begins======================
max lb tensor(0.37261200) min lb tensor(-0.33613753)
Number of Verified Splits: 1014 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 1.4815425872802734 
BICCOS Cumulative time: 12.525377750396729
Preprocessing time: 0.5575838088989258 Inference time: 0.8998751640319824 Add cuts time: 0.023164749145507812 Cut analysis time: 0.0009188652038574219
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33898 (31), -0.33817 (32), -0.33731 (33), -0.33707 (32), -0.33699 (32), -0.33621 (32), -0.33614 (33), -0.33550 (32), -0.33510 (31), -0.33425 (32), -0.33377 (33), -0.33315 (32), -0.33310 (32), -0.33241 (33), -0.33227 (33), -0.33222 (33), -0.33174 (33), -0.33159 (32), -0.33128 (33), -0.33119 (33), 
Length of domains: 62997
Time: pickout 0.0332    decision 1.2299    set_bounds 0.8062    solve 4.0809    add 0.3771    
Accumulated time: pickout 0.7488    decision 9.3897    set_bounds 10.1454    solve 43.8946    add 4.3861    
Current (lb-rhs): -0.33898448944091797
145060 domains visited
Cumulative time: 81.84928107261658

BaB round 37
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1426] [/input-12, 610] [/input-12, 2441] [/input-12, 2604] [/input-12, 1572] [/input-12, 6996] [/input-12, 1426] [/input-12, 5221] [/input-12, 7598] [/input-12, 5221] 
cut re-enabled after branching node selection
0 lb beta sum: 3.2683699131011963, worst -0.3363914489746094
10 lb beta sum: 3.2702746391296387, worst -0.3363618850708008
Time: prepare 0.7868    bound 2.4272    transfer 0.2120    finalize 0.5511    func 4.0873    
Accumulated time: func 48.1662    prepare 8.0626    bound 30.4696    transfer 2.1941    finalize 6.0638    
all_split False
======================Cut inference begins======================
max lb tensor(0.40256596) min lb tensor(-0.33635473)
Number of Verified Splits: 1092 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 1.57405424118042 
BICCOS Cumulative time: 14.099431991577148
Preprocessing time: 0.5520210266113281 Inference time: 0.9931490421295166 Add cuts time: 0.027978181838989258 Cut analysis time: 0.0009059906005859375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33817 (32), -0.33731 (33), -0.33707 (32), -0.33699 (32), -0.33635 (32), -0.33621 (32), -0.33614 (33), -0.33550 (32), -0.33425 (32), -0.33377 (33), -0.33315 (32), -0.33310 (32), -0.33245 (32), -0.33241 (33), -0.33227 (33), -0.33222 (33), -0.33174 (33), -0.33159 (32), -0.33128 (33), -0.33119 (33), 
Length of domains: 70097
Time: pickout 0.0361    decision 0.6305    set_bounds 0.8227    solve 4.0918    add 0.9282    
Accumulated time: pickout 0.7849    decision 10.0202    set_bounds 10.9681    solve 47.9864    add 5.3143    
Current (lb-rhs): -0.33817386627197266
160352 domains visited
Cumulative time: 89.9951913356781

BaB round 38
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2604] [/input-12, 2268] [/input-12, 6469] [/input-12, 4115] [/input-12, 1299] [/input-12, 2258] [/input-12, 2441] [/input-12, 2252] [/input-12, 1299] [/input-12, 1426] 
cut re-enabled after branching node selection
0 lb beta sum: 3.2750258445739746, worst -0.3315870761871338
10 lb beta sum: 3.2761707305908203, worst -0.3316636085510254
Time: prepare 0.7780    bound 2.4282    transfer 0.2021    finalize 0.5417    func 4.0604    
Accumulated time: func 52.2267    prepare 8.8411    bound 32.8978    transfer 2.3962    finalize 6.6056    
all_split False
======================Cut inference begins======================
max lb tensor(0.39432597) min lb tensor(-0.33158708)
Number of Verified Splits: 1024 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 1.623774528503418 
BICCOS Cumulative time: 15.723206520080566
Preprocessing time: 0.5471794605255127 Inference time: 1.0510368347167969 Add cuts time: 0.024584293365478516 Cut analysis time: 0.0009739398956298828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33817 (32), -0.33731 (33), -0.33707 (32), -0.33699 (32), -0.33635 (32), -0.33621 (32), -0.33614 (33), -0.33550 (32), -0.33425 (32), -0.33377 (33), -0.33315 (32), -0.33310 (32), -0.33245 (32), -0.33241 (33), -0.33227 (33), -0.33222 (33), -0.33174 (33), -0.33159 (33), -0.33128 (33), -0.33119 (33), 
Length of domains: 77265
Time: pickout 0.0323    decision 0.6351    set_bounds 0.8351    solve 4.0656    add 0.3568    
Accumulated time: pickout 0.8172    decision 10.6553    set_bounds 11.8032    solve 52.0520    add 5.6711    
Current (lb-rhs): -0.33817386627197266
175712 domains visited
Cumulative time: 97.58985424041748

BaB round 39
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5221] [/input-12, 7000] [/input-4, 7819] [/input-12, 7598] [/input-12, 7000] [/input-12, 2266] [/input-12, 1441] [/input-12, 6469] [/input-12, 1572] [/input-12, 2258] 
cut re-enabled after branching node selection
0 lb beta sum: 3.259791851043701, worst -0.32242345809936523
10 lb beta sum: 3.2622928619384766, worst -0.3234376907348633
Time: prepare 0.7736    bound 2.4281    transfer 0.2004    finalize 0.5421    func 4.0537    
Accumulated time: func 56.2803    prepare 9.6151    bound 35.3259    transfer 2.5966    finalize 7.1477    
all_split False
======================Cut inference begins======================
max lb tensor(0.37967014) min lb tensor(-0.32230568)
Number of Verified Splits: 1146 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.8970417976379395 
BICCOS Cumulative time: 16.620248317718506
Preprocessing time: 0.5596439838409424 Inference time: 0.3093252182006836 Add cuts time: 0.026921987533569336 Cut analysis time: 0.0011506080627441406
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33817 (32), -0.33731 (33), -0.33707 (32), -0.33699 (32), -0.33635 (32), -0.33621 (32), -0.33614 (33), -0.33550 (32), -0.33425 (32), -0.33377 (33), -0.33315 (32), -0.33310 (32), -0.33245 (32), -0.33241 (33), -0.33227 (33), -0.33222 (33), -0.33174 (33), -0.33159 (33), -0.33128 (33), -0.33119 (33), 
Length of domains: 84311
Time: pickout 0.0306    decision 0.6267    set_bounds 0.8169    solve 4.0589    add 0.3409    
Accumulated time: pickout 0.8478    decision 11.2820    set_bounds 12.6201    solve 56.1109    add 6.0120    
Current (lb-rhs): -0.33817386627197266
190950 domains visited
Cumulative time: 104.413015127182

BaB round 40
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1426] [/input-12, 610] [/input-12, 6996] [/input-12, 7598] [/input-12, 5205] [/input-12, 610] [/input-4, 2697] [/input-12, 2441] [/input-12, 2441] [/input-12, 4115] 
cut re-enabled after branching node selection
0 lb beta sum: 3.26893949508667, worst -0.33817410469055176
10 lb beta sum: 3.2712206840515137, worst -0.33817505836486816
Time: prepare 0.7800    bound 2.4277    transfer 0.2061    finalize 0.5594    func 4.0834    
Accumulated time: func 60.3638    prepare 10.3955    bound 37.7536    transfer 2.8027    finalize 7.7071    
all_split False
======================Cut inference begins======================
max lb tensor(0.36875486) min lb tensor(-0.33817387)
Number of Verified Splits: 1180 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.8852758407592773 
BICCOS Cumulative time: 17.505524158477783
Preprocessing time: 0.5400068759918213 Inference time: 0.31755661964416504 Add cuts time: 0.026732444763183594 Cut analysis time: 0.0009799003601074219
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33817 (33), -0.33731 (33), -0.33707 (32), -0.33699 (32), -0.33635 (32), -0.33620 (33), -0.33614 (33), -0.33550 (32), -0.33462 (33), -0.33377 (33), -0.33315 (32), -0.33310 (32), -0.33261 (33), -0.33245 (32), -0.33227 (33), -0.33222 (33), -0.33174 (33), -0.33159 (33), -0.33119 (33), -0.33115 (33), 
Length of domains: 91323
Time: pickout 0.0329    decision 1.4579    set_bounds 0.8167    solve 4.0873    add 0.3519    
Accumulated time: pickout 0.8807    decision 12.7399    set_bounds 13.4368    solve 60.1983    add 6.3639    
Current (lb-rhs): -0.33817386627197266
206154 domains visited
Cumulative time: 112.09602284431458

BaB round 41
Cut Inference reaches max iterations. Recover the setting
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 597] [/input-12, 1426] [/input-12, 2268] [/input-12, 1426] [/input-12, 5220] [/input-12, 5222] [/input-12, 5220] [/input-12, 5220] [/input-12, 868] [/input-12, 1426] 
cut re-enabled after branching node selection
0 lb beta sum: 3.2489609718322754, worst -0.3339972496032715
10 lb beta sum: 3.253024101257324, worst -0.3339715003967285
Time: prepare 0.7848    bound 2.4272    transfer 0.2026    finalize 0.5595    func 4.0852    
Accumulated time: func 64.4490    prepare 11.1808    bound 40.1808    transfer 3.0054    finalize 8.2666    
all_split False
======================Cut inference begins======================
max lb tensor(0.38672519) min lb tensor(-0.33395100)
Number of Verified Splits: 1172 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.0008225440979003906 
BICCOS Cumulative time: 17.506346702575684
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33817 (33), -0.33707 (32), -0.33699 (32), -0.33635 (32), -0.33620 (33), -0.33614 (33), -0.33550 (32), -0.33462 (33), -0.33395 (34), -0.33377 (33), -0.33315 (32), -0.33310 (32), -0.33261 (33), -0.33245 (32), -0.33174 (33), -0.33159 (33), -0.33119 (33), -0.33106 (33), -0.33055 (33), -0.33042 (33), 
Length of domains: 98343
Time: pickout 0.0306    decision 1.4627    set_bounds 0.8184    solve 4.0912    add 0.3456    
Accumulated time: pickout 0.9112    decision 14.2026    set_bounds 14.2552    solve 64.2895    add 6.7095    
Current (lb-rhs): -0.33817386627197266
221366 domains visited
Cumulative time: 118.9058346748352

BaB round 42
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6996] [/input-12, 8093] [/input-12, 5222] [/input-12, 7598] [/input-12, 5221] [/input-12, 3795] [/input-12, 867] [/input-12, 597] [/input-12, 2266] [/input-12, 2339] 
cut re-enabled after branching node selection
0 lb beta sum: 3.249438762664795, worst -0.3370673656463623
10 lb beta sum: 3.253857135772705, worst -0.3370661735534668
Time: prepare 0.7724    bound 2.4260    transfer 0.2038    finalize 0.5547    func 4.0671    
Accumulated time: func 68.5160    prepare 11.9536    bound 42.6068    transfer 3.2092    finalize 8.8212    
all_split False
======================Cut inference begins======================
max lb tensor(0.39517975) min lb tensor(-0.33706427)
Number of Verified Splits: 1201 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.0008139610290527344 
BICCOS Cumulative time: 17.507160663604736
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33817 (33), -0.33706 (33), -0.33699 (33), -0.33635 (32), -0.33620 (33), -0.33614 (33), -0.33549 (33), -0.33462 (33), -0.33395 (34), -0.33346 (33), -0.33309 (33), -0.33261 (33), -0.33257 (33), -0.33245 (32), -0.33174 (33), -0.33159 (33), -0.33138 (33), -0.33037 (34), -0.32899 (34), -0.32888 (34), 
Length of domains: 105334
Time: pickout 0.0312    decision 0.6271    set_bounds 1.7473    solve 4.0711    add 0.3364    
Accumulated time: pickout 0.9425    decision 14.8296    set_bounds 16.0024    solve 68.3605    add 7.0459    
Current (lb-rhs): -0.33817386627197266
236549 domains visited
Cumulative time: 125.77053618431091

BaB round 43
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5221] [/input-12, 1426] [/input-12, 610] [/input-12, 2915] [/input-12, 2915] [/input-12, 5220] [/input-12, 7598] [/input-12, 2915] [/input-12, 1299] [/input-12, 2915] 
cut re-enabled after branching node selection
0 lb beta sum: 3.2527360916137695, worst -0.3328080177307129
10 lb beta sum: 3.2563016414642334, worst -0.332827091217041
Time: prepare 0.7807    bound 2.4270    transfer 0.2098    finalize 0.5463    func 4.0748    
Accumulated time: func 72.5908    prepare 12.7347    bound 45.0338    transfer 3.4190    finalize 9.3676    
all_split False
======================Cut inference begins======================
max lb tensor(0.39404416) min lb tensor(-0.33277035)
Number of Verified Splits: 1194 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.0007646083831787109 
BICCOS Cumulative time: 17.507925271987915
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33817 (33), -0.33706 (33), -0.33699 (33), -0.33635 (32), -0.33620 (33), -0.33549 (33), -0.33462 (33), -0.33395 (34), -0.33346 (33), -0.33309 (33), -0.33277 (34), -0.33261 (33), -0.33257 (33), -0.33245 (32), -0.33174 (33), -0.33159 (33), -0.33138 (33), -0.33037 (34), -0.32899 (34), -0.32888 (34), 
Length of domains: 112332
Time: pickout 0.0303    decision 0.6289    set_bounds 0.7893    solve 4.0796    add 0.3374    
Accumulated time: pickout 0.9727    decision 15.4586    set_bounds 16.7918    solve 72.4401    add 7.3834    
Current (lb-rhs): -0.33817386627197266
251739 domains visited
Cumulative time: 131.69347953796387

BaB round 44
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4115] [/input-12, 5220] [/input-12, 5220] [/input-12, 867] [/input-12, 2604] [/input-12, 4123] [/input-12, 2266] [/input-12, 7000] [/input-12, 6469] [/input-12, 2261] 
cut re-enabled after branching node selection
0 lb beta sum: 3.2575743198394775, worst -0.32840490341186523
10 lb beta sum: 3.26088547706604, worst -0.3296055793762207
Time: prepare 0.7733    bound 2.4299    transfer 0.2083    finalize 0.5483    func 4.0715    
Accumulated time: func 76.6623    prepare 13.5083    bound 47.4636    transfer 3.6273    finalize 9.9158    
all_split False
======================Cut inference begins======================
max lb tensor(0.37336564) min lb tensor(-0.32827520)
Number of Verified Splits: 1206 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.0008153915405273438 
BICCOS Cumulative time: 17.508740663528442
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33817 (33), -0.33706 (33), -0.33699 (33), -0.33635 (32), -0.33620 (33), -0.33549 (33), -0.33462 (33), -0.33395 (34), -0.33346 (33), -0.33309 (33), -0.33277 (34), -0.33261 (33), -0.33257 (33), -0.33245 (32), -0.33159 (33), -0.33138 (33), -0.33037 (34), -0.32899 (34), -0.32888 (34), -0.32886 (34), 
Length of domains: 119318
Time: pickout 0.0290    decision 0.6296    set_bounds 1.7442    solve 4.0768    add 0.3488    
Accumulated time: pickout 1.0017    decision 16.0882    set_bounds 18.5360    solve 76.5169    add 7.7322    
Current (lb-rhs): -0.33817386627197266
266917 domains visited
Cumulative time: 138.58008551597595

BaB round 45
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1426] [/input-12, 5787] [/input-12, 610] [/input-12, 867] [/input-12, 1426] [/input-12, 6996] [/input-12, 8157] [/input-12, 6469] [/input-12, 6469] [/input-12, 7000] 
cut re-enabled after branching node selection
0 lb beta sum: 3.258803367614746, worst -0.3260188102722168
10 lb beta sum: 3.2611312866210938, worst -0.3285045623779297
Time: prepare 0.7921    bound 2.4271    transfer 0.2069    finalize 0.5587    func 4.0964    
Accumulated time: func 80.7587    prepare 14.3008    bound 49.8907    transfer 3.8342    finalize 10.4746    
all_split False
======================Cut inference begins======================
max lb tensor(0.39452815) min lb tensor(-0.32601881)
Number of Verified Splits: 1142 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.0008237361907958984 
BICCOS Cumulative time: 17.50956439971924
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33817 (33), -0.33706 (33), -0.33699 (33), -0.33635 (32), -0.33620 (33), -0.33549 (33), -0.33462 (33), -0.33395 (34), -0.33346 (33), -0.33309 (33), -0.33277 (34), -0.33261 (33), -0.33257 (33), -0.33245 (32), -0.33159 (33), -0.33138 (33), -0.33037 (34), -0.32899 (34), -0.32888 (34), -0.32886 (34), 
Length of domains: 126368
Time: pickout 0.0289    decision 0.6276    set_bounds 0.7947    solve 4.1011    add 0.3341    
Accumulated time: pickout 1.0306    decision 16.7158    set_bounds 19.3307    solve 80.6181    add 8.0663    
Current (lb-rhs): -0.33817386627197266
282159 domains visited
Cumulative time: 144.52881288528442

BaB round 46
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1204] [/input-12, 868] [/input-12, 5220] [/input-12, 4115] [/input-12, 3795] [/input-12, 2915] [/input-12, 6996] [/input-12, 8157] [/input-12, 7000] [/input-12, 5220] 
cut re-enabled after branching node selection
0 lb beta sum: 3.266160011291504, worst -0.33635520935058594
10 lb beta sum: 3.2687883377075195, worst -0.33635854721069336
Time: prepare 0.7854    bound 2.4268    transfer 0.2126    finalize 0.5581    func 4.0965    
Accumulated time: func 84.8552    prepare 15.0867    bound 52.3175    transfer 4.0468    finalize 11.0327    
all_split False
======================Cut inference begins======================
max lb tensor(0.39200091) min lb tensor(-0.33635330)
Number of Verified Splits: 1183 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.0007982254028320312 
BICCOS Cumulative time: 17.51036262512207
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33817 (33), -0.33706 (33), -0.33699 (33), -0.33635 (33), -0.33620 (33), -0.33549 (33), -0.33462 (33), -0.33395 (34), -0.33346 (33), -0.33309 (33), -0.33277 (34), -0.33261 (33), -0.33257 (33), -0.33244 (33), -0.33220 (33), -0.33159 (33), -0.33138 (33), -0.33037 (34), -0.32899 (34), -0.32888 (34), 
Length of domains: 133377
Time: pickout 0.0299    decision 1.6398    set_bounds 0.7888    solve 4.1014    add 0.3370    
Accumulated time: pickout 1.0605    decision 18.3556    set_bounds 20.1195    solve 84.7195    add 8.4033    
Current (lb-rhs): -0.33817386627197266
297360 domains visited
Cumulative time: 151.4838035106659

BaB round 47
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4123] [/input-12, 2604] [/input-12, 3795] [/input-12, 5205] [/input-12, 6996] [/input-12, 610] [/input-12, 2252] [/input-12, 5787] [/input-12, 2339] [/input-12, 2252] 
cut re-enabled after branching node selection
0 lb beta sum: 3.2643392086029053, worst -0.32828330993652344
10 lb beta sum: 3.2665436267852783, worst -0.32924342155456543
Time: prepare 0.7755    bound 2.4261    transfer 0.2104    finalize 0.5462    func 4.0689    
Accumulated time: func 88.9241    prepare 15.8625    bound 54.7436    transfer 4.2572    finalize 11.5788    
all_split False
======================Cut inference begins======================
max lb tensor(0.38292193) min lb tensor(-0.32824135)
Number of Verified Splits: 1219 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.0008146762847900391 
BICCOS Cumulative time: 17.51117730140686
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33817 (33), -0.33706 (33), -0.33699 (33), -0.33635 (33), -0.33620 (33), -0.33549 (33), -0.33462 (33), -0.33395 (34), -0.33346 (33), -0.33309 (33), -0.33277 (34), -0.33261 (33), -0.33257 (33), -0.33244 (33), -0.33220 (33), -0.33138 (33), -0.33037 (34), -0.32899 (34), -0.32888 (34), -0.32886 (34), 
Length of domains: 140350
Time: pickout 0.0289    decision 0.6316    set_bounds 0.7856    solve 4.0738    add 0.3316    
Accumulated time: pickout 1.0894    decision 18.9872    set_bounds 20.9051    solve 88.7933    add 8.7349    
Current (lb-rhs): -0.33817386627197266
312525 domains visited
Cumulative time: 157.39510250091553

BaB round 48
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4115] [/input-12, 2915] [/input-12, 610] [/input-12, 2915] [/input-4, 7819] [/input-12, 4115] [/input-12, 5222] [/input-12, 5222] [/input-12, 2915] [/input-12, 4123] 
cut re-enabled after branching node selection
0 lb beta sum: 3.2588565349578857, worst -0.3241705894470215
10 lb beta sum: 3.2612483501434326, worst -0.3241844177246094
Time: prepare 0.7764    bound 2.4258    transfer 0.2140    finalize 0.5579    func 4.0857    
Accumulated time: func 93.0098    prepare 16.6393    bound 57.1694    transfer 4.4711    finalize 12.1367    
all_split False
======================Cut inference begins======================
max lb tensor(0.32720959) min lb tensor(-0.32410932)
Number of Verified Splits: 1189 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.0008988380432128906 
BICCOS Cumulative time: 17.512076139450073
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33817 (33), -0.33706 (33), -0.33699 (33), -0.33635 (33), -0.33620 (33), -0.33549 (33), -0.33462 (33), -0.33395 (34), -0.33346 (33), -0.33309 (33), -0.33277 (34), -0.33261 (33), -0.33257 (33), -0.33244 (33), -0.33220 (33), -0.33138 (33), -0.33037 (34), -0.32899 (34), -0.32888 (34), -0.32886 (34), 
Length of domains: 147353
Time: pickout 0.0293    decision 1.6709    set_bounds 0.7914    solve 4.0905    add 0.3429    
Accumulated time: pickout 1.1187    decision 20.6581    set_bounds 21.6965    solve 92.8837    add 9.0778    
Current (lb-rhs): -0.33817386627197266
327720 domains visited
Cumulative time: 164.37949442863464

BaB round 49
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2915] [/input-12, 597] [/input-12, 3795] [/input-12, 2915] [/input-12, 1299] [/input-12, 1299] [/input-12, 1426] [/input-12, 8093] [/input-12, 2339] [/input-12, 1299] 
cut re-enabled after branching node selection
0 lb beta sum: 3.2523584365844727, worst -0.32230567932128906
10 lb beta sum: 3.2548413276672363, worst -0.32227134704589844
Time: prepare 0.7751    bound 2.4256    transfer 0.2141    finalize 0.5568    func 4.0818    
Accumulated time: func 97.0916    prepare 17.4148    bound 59.5950    transfer 4.6852    finalize 12.6935    
all_split False
======================Cut inference begins======================
max lb tensor(0.33821905) min lb tensor(-0.32223916)
Number of Verified Splits: 1134 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.00080108642578125 
BICCOS Cumulative time: 17.512877225875854
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33817 (33), -0.33706 (33), -0.33699 (33), -0.33635 (33), -0.33620 (33), -0.33549 (33), -0.33462 (33), -0.33395 (34), -0.33346 (33), -0.33309 (33), -0.33277 (34), -0.33261 (33), -0.33257 (33), -0.33244 (33), -0.33220 (33), -0.33138 (33), -0.33037 (34), -0.32899 (34), -0.32888 (34), -0.32886 (34), 
Length of domains: 154411
Time: pickout 0.0303    decision 0.6282    set_bounds 0.7964    solve 4.0858    add 0.3406    
Accumulated time: pickout 1.1490    decision 21.2863    set_bounds 22.4929    solve 96.9696    add 9.4184    
Current (lb-rhs): -0.33817386627197266
342970 domains visited
Cumulative time: 170.31895089149475

BaB round 50
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2915] [/input-12, 1299] [/input-12, 1426] [/input-12, 5220] [/input-12, 5205] [/input-12, 1013] [/input-12, 5205] [/input-12, 3795] [/input-12, 8093] [/input-12, 1426] 
cut re-enabled after branching node selection
0 lb beta sum: 3.2604098320007324, worst -0.3348517417907715
10 lb beta sum: 3.2623159885406494, worst -0.3348207473754883
Time: prepare 0.7942    bound 2.4251    transfer 0.2150    finalize 0.5444    func 4.0881    
Accumulated time: func 101.1797    prepare 18.2093    bound 62.0201    transfer 4.9003    finalize 13.2379    
all_split False
======================Cut inference begins======================
max lb tensor(0.36981475) min lb tensor(-0.33480787)
Number of Verified Splits: 1094 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.0007340908050537109 
BICCOS Cumulative time: 17.513611316680908
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33706 (33), -0.33699 (33), -0.33635 (33), -0.33549 (33), -0.33481 (34), -0.33462 (33), -0.33395 (34), -0.33346 (33), -0.33309 (33), -0.33283 (34), -0.33277 (34), -0.33261 (33), -0.33257 (33), -0.33244 (33), -0.33220 (33), -0.33138 (33), -0.33037 (34), -0.32888 (34), -0.32886 (34), -0.32876 (33), 
Length of domains: 161509
Time: pickout 0.0300    decision 1.7535    set_bounds 0.7687    solve 4.0913    add 0.3616    
Accumulated time: pickout 1.1789    decision 23.0397    set_bounds 23.2615    solve 101.0609    add 9.7800    
Current (lb-rhs): -0.337064266204834
358260 domains visited
Cumulative time: 177.3816442489624

BaB round 51
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1441] [/input-12, 1441] [/input-12, 3347] [/input-12, 3795] [/input-12, 2915] [/input-12, 610] [/input-12, 2915] [/input-12, 1190] [/input-12, 6996] [/input-12, 2531] 
cut re-enabled after branching node selection
0 lb beta sum: 3.260223388671875, worst -0.3312861919403076
10 lb beta sum: 3.2623231410980225, worst -0.33126258850097656
Time: prepare 0.7823    bound 2.4249    transfer 0.2113    finalize 0.5537    func 4.0833    
Accumulated time: func 105.2630    prepare 18.9920    bound 64.4450    transfer 5.1116    finalize 13.7915    
all_split False
======================Cut inference begins======================
max lb tensor(0.35470307) min lb tensor(-0.33121276)
Number of Verified Splits: 1196 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.0007834434509277344 
BICCOS Cumulative time: 17.514394760131836
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33706 (33), -0.33699 (33), -0.33635 (33), -0.33549 (33), -0.33481 (34), -0.33395 (34), -0.33346 (33), -0.33309 (33), -0.33283 (34), -0.33277 (34), -0.33257 (33), -0.33244 (33), -0.33220 (33), -0.33138 (33), -0.33121 (34), -0.33037 (34), -0.32918 (34), -0.32888 (34), -0.32886 (34), -0.32876 (33), 
Length of domains: 168505
Time: pickout 0.0285    decision 0.6296    set_bounds 0.7962    solve 4.0870    add 0.3448    
Accumulated time: pickout 1.2074    decision 23.6694    set_bounds 24.0577    solve 105.1479    add 10.1248    
Current (lb-rhs): -0.337064266204834
373448 domains visited
Cumulative time: 183.3339216709137

BaB round 52
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5220] [/input-12, 2915] [/input-12, 1426] [/input-12, 4123] [/input-12, 2604] [/input-12, 6469] [/input-12, 2258] [/input-12, 8093] [/input-12, 2915] [/input-12, 4123] 
cut re-enabled after branching node selection
0 lb beta sum: 3.2629051208496094, worst -0.32846832275390625
10 lb beta sum: 3.264896869659424, worst -0.3284440040588379
Time: prepare 0.7789    bound 2.4253    transfer 0.2105    finalize 0.5702    func 4.0982    
Accumulated time: func 109.3612    prepare 19.7712    bound 66.8703    transfer 5.3220    finalize 14.3617    
all_split False
======================Cut inference begins======================
max lb tensor(0.37954068) min lb tensor(-0.32842565)
Number of Verified Splits: 983 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.0007944107055664062 
BICCOS Cumulative time: 17.515189170837402
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33706 (33), -0.33699 (33), -0.33635 (33), -0.33549 (33), -0.33481 (34), -0.33346 (33), -0.33309 (33), -0.33283 (34), -0.33277 (34), -0.33257 (33), -0.33244 (33), -0.33220 (33), -0.33138 (33), -0.33121 (34), -0.33037 (34), -0.32918 (34), -0.32876 (33), -0.32843 (35), -0.32836 (33), -0.32828 (34), 
Length of domains: 175714
Time: pickout 0.0297    decision 0.6286    set_bounds 1.9609    solve 4.1034    add 0.3449    
Accumulated time: pickout 1.2372    decision 24.2980    set_bounds 26.0187    solve 109.2513    add 10.4697    
Current (lb-rhs): -0.337064266204834
388849 domains visited
Cumulative time: 190.46569085121155

BaB round 53
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4115] [/input-12, 2252] [/input-12, 2915] [/input-12, 6469] [/input-12, 7985] [/input-12, 4115] [/input-12, 597] [/input-12, 6996] [/input-12, 5222] [/input-12, 2915] 
cut re-enabled after branching node selection
0 lb beta sum: 3.2447640895843506, worst -0.3226761817932129
10 lb beta sum: 3.246516227722168, worst -0.32399511337280273
Time: prepare 0.7880    bound 2.4259    transfer 0.2146    finalize 0.5726    func 4.1126    
Accumulated time: func 113.4738    prepare 20.5596    bound 69.2962    transfer 5.5366    finalize 14.9342    
all_split False
======================Cut inference begins======================
max lb tensor(0.36245584) min lb tensor(-0.32261372)
Number of Verified Splits: 1011 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.0009698867797851562 
BICCOS Cumulative time: 17.516159057617188
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33706 (33), -0.33699 (33), -0.33635 (33), -0.33549 (33), -0.33481 (34), -0.33346 (33), -0.33309 (33), -0.33283 (34), -0.33277 (34), -0.33257 (33), -0.33244 (33), -0.33220 (33), -0.33138 (33), -0.33121 (34), -0.33037 (34), -0.32918 (34), -0.32876 (33), -0.32843 (35), -0.32836 (33), -0.32828 (34), 
Length of domains: 182895
Time: pickout 0.0285    decision 0.6302    set_bounds 0.7949    solve 4.1167    add 0.3442    
Accumulated time: pickout 1.2657    decision 24.9282    set_bounds 26.8136    solve 113.3680    add 10.8139    
Current (lb-rhs): -0.337064266204834
404222 domains visited
Cumulative time: 196.43772077560425

BaB round 54
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2604] [/input-12, 2450] [/input-12, 2915] [/input-12, 1441] [/input-12, 3795] [/input-12, 2267] [/input-12, 4115] [/input-12, 2259] [/input-12, 7598] [/input-12, 2268] 
cut re-enabled after branching node selection
0 lb beta sum: 3.250840425491333, worst -0.33373022079467773
10 lb beta sum: 3.2520008087158203, worst -0.33370018005371094
Time: prepare 0.7831    bound 2.4278    transfer 0.2171    finalize 1.8429    func 5.3806    
Accumulated time: func 118.8544    prepare 21.3431    bound 71.7240    transfer 5.7537    finalize 16.7772    
all_split False
======================Cut inference begins======================
max lb tensor(0.35620260) min lb tensor(-0.33369088)
Number of Verified Splits: 1018 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 37.
#cuts 1-3: 33
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.0006101131439208984 
BICCOS Cumulative time: 17.51676917076111
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33635 (33), -0.33481 (34), -0.33369 (34), -0.33362 (34), -0.33346 (33), -0.33283 (34), -0.33277 (34), -0.33257 (33), -0.33244 (33), -0.33220 (33), -0.33212 (34), -0.33138 (33), -0.33121 (34), -0.32975 (34), -0.32918 (34), -0.32876 (33), -0.32843 (35), -0.32836 (33), -0.32828 (34), -0.32824 (34), 
Length of domains: 190069
Time: pickout 0.0292    decision 0.6265    set_bounds 0.7739    solve 5.3847    add 0.3473    
Accumulated time: pickout 1.2948    decision 25.5547    set_bounds 27.5875    solve 118.7527    add 11.1613    
Current (lb-rhs): -0.3363533020019531
419588 domains visited
Time out!!!!!!!!
Result: unknown in 206.8206 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 73, vnnlib ID: 73 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-44.55830002, -46.74199295, -41.41879654, -41.62016678, -41.11595917,
         -42.07121277, -39.18197250, -44.51125336, -46.23334122, -46.01898193]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1416]; unstable size 1416; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 85, 1, 1416] with unstable size 84 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 45, 1, 1416] with unstable size 44 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1416] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [708]; unstable size 708; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 45, 1, 708] with unstable size 44 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 708] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [44]; unstable size 44; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 44] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.38961434, 4.58902550, 1.13672924, 1.47393525, 0.82514834, 1.81789231,
         3.15361929, 4.28552437, 3.75834990]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0949 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 74, vnnlib ID: 74 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-48.81351852, -51.50651169, -48.38296890, -48.28690338, -47.75768661,
         -48.33115387, -49.03993988, -43.59747696, -52.21627426, -49.47776031]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1318]; unstable size 1318; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 509, 1, 1318] with unstable size 508 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 27, 1, 1318] with unstable size 26 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1318] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [508]; unstable size 508; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 27, 1, 508] with unstable size 26 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 508] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [26]; unstable size 26; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.75218606, 5.13884544, 3.50069594, 3.26827836, 3.08584785, 3.37881780,
         3.57124424, 6.52340126, 3.52327752]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0557 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 75, vnnlib ID: 75 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-61.09639359, -63.22761154, -63.39217758, -64.59085083, -62.69541168,
         -65.05948639, -63.67155838, -64.84404755, -62.04094315, -62.72986603]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1204]; unstable size 1204; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 463, 1, 1204] with unstable size 462 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 25, 1, 1204] with unstable size 24 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1204] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [462]; unstable size 462; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 25, 1, 462] with unstable size 24 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 462] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [24]; unstable size 24; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.82115436,  1.29535556,  2.32903838,  0.52633452,  2.73405051,
          1.23286378,  2.18015385, -0.40879142,  0.14633083]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-61.09639359, -63.22761154, -63.39217758, -64.59085083, -62.69541168,
         -65.05948639, -63.67155838, -64.84404755, -62.04094315, -62.72986603]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.34it/s]100%|██████████| 1/1 [00:00<00:00,  8.33it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-63.53534698, -65.45715332, -65.72147369, -66.82593536, -65.01274109,
          -67.30064392, -66.00962830, -67.15670776, -63.84043503, -64.88214874]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.30508804]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1231 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 11.39373779296875
alpha/beta optimization time: 1.4664101600646973
initial alpha-crown bounds: tensor([[ 0.86517978,  1.34594452,  2.38807321,  0.58723807,  2.79456830,
          1.32894671,  2.23499489, -0.35702747,  0.20582032]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.35702747106552124
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.37096571922302
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.3709259033203
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.37089824676514
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.37087631225586
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.37085628509521
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.37083625793457
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 198.37081623077393
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 198.37079453468323
Verifying property 7 with 1 instances.
##### Instance 75 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.35702747]], device='cuda:0') need to verify.
Model prediction is: tensor([-61.09639359, -63.22761154, -63.39217758, -64.59085083, -62.69541168,
        -65.05948639, -63.67155838, -64.84404755, -62.04094315, -62.72986603],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.35702747]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1204
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 458
Node /39 input 0: size torch.Size([250]) unstable 23
-----------------
# of unstable neurons: 1685
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00015854835510253906
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.35702669620513916
10 lb beta sum: 0.0, worst -0.35702916979789734
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0736    transfer 0.0001    finalize 0.0002    func 0.0742    
Accumulated time: func 0.0742    prepare 0.0002    bound 0.0736    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 58] 
split level 1: [/input-16, 97] 
split level 2: [/input-16, 185] 
split level 3: [/input-16, 25] 
split level 4: [/input-16, 180] 
split level 5: [/input-16, 111] 
split level 6: [/input-16, 24] 
split level 7: [/input-16, 178] 
split level 8: [/input-12, 492] 
split level 9: [/input-16, 157] 
split level 10: [/input-12, 1709] 
split level 11: [/input-16, 239] 
split level 12: [/input-12, 4780] 
split level 13: [/input-12, 6227] 
split level 14: [/input-12, 360] 
split level 15: [/input-12, 550] 
split level 16: [/input-12, 2275] 
split level 17: [/input-12, 1075] 
split level 18: [/input-12, 5406] 
split level 19: [/input-12, 5422] 
split level 20: [/input-12, 4372] 
split level 21: [/input-12, 7019] 
split level 22: [/input-16, 132] 
split level 23: [/input-12, 872] 
split level 24: [/input-12, 4139] 
split level 25: [/input-12, 7009] 
split level 26: [/input-16, 65] 
split level 27: [/input-12, 6234] 
split level 28: [/input-12, 4210] 
split level 29: [/input-12, 493] 
split level 30: [/input-4, 3806] 
split level 31: [/input-12, 4144] 
split level 32: [/input-12, 541] 
split level 33: [/input-12, 1078] 
split level 34: [/input-12, 1013] 
split level 35: [/input-12, 501] 
split level 36: [/input-12, 8052] 
split level 37: [/input-12, 2011] 
split level 38: [/input-12, 2149] 
split level 39: [/input-12, 1825] 
split level 40: [/input-12, 7956] 
split level 41: [/input-12, 5914] 
split level 42: [/input-12, 2862] 
split level 43: [/input-4, 356] 
split level 44: [/input-12, 498] 
split level 45: [/input-12, 2286] 
split level 46: [/input-12, 5411] 
split level 47: [/input-4, 1243] 
split level 48: [/input-12, 434] 
split level 49: [/input-12, 4145] 
split level 50: [/input-12, 873] 
split level 51: [/input-12, 101] 
split level 52: [/input-12, 1770] 
split level 53: [/input-12, 2465] 
split level 54: [/input-4, 3822] 
split level 55: [/input-16, 235] 
split level 56: [/input-12, 1070] 
split level 57: [/input-12, 2614] 
split level 58: [/input-12, 7021] 
split level 59: [/input-4, 3804] 
split level 60: [/input-12, 4901] 
split level 61: [/input-4, 3803] 
split level 62: [/input-12, 6226] 
split level 63: [/input-12, 481] 
split level 64: [/input-12, 2613] 
split level 65: [/input-4, 3821] 
split level 66: [/input-12, 2010] 
split level 67: [/input-12, 2587] 
split level 68: [/input-12, 5398] 
split level 69: [/input-12, 3104] 
split level 70: [/input-4, 1261] 
split level 71: [/input-4, 2613] 
split level 72: [/input-12, 2472] 
split level 73: [/input-4, 8139] 
split level 74: [/input-12, 5896] 
split level 75: [/input-12, 1456] 
split level 76: [/input-12, 5261] 
split level 77: [/input-4, 3820] 
split level 78: [/input-12, 2544] 
split level 79: [/input-4, 3805] 
split level 80: [/input-4, 870] 
split level 81: [/input-12, 8043] 
split level 82: [/input-4, 4964] 
split level 83: [/input-12, 1816] 
split level 84: [/input-4, 3819] 
split level 85: [/input-12, 2363] 
split level 86: [/input-4, 8172] 
split level 87: [/input-4, 8171] 
split level 88: [/input-12, 419] 
split level 89: [/input-12, 2467] 
split level 90: [/input-4, 1620] 
split level 91: [/input-4, 1500] 
split level 92: [/input-12, 2593] 
split level 93: [/input-4, 1262] 
split level 94: [/input-4, 3788] 
split level 95: [/input-12, 2354] 
split level 96: [/input-12, 1255] 
split level 97: [/input-12, 4219] 
split level 98: [/input-12, 4586] 
split level 99: [/input-12, 4910] 
split level 100: [/input-12, 3498] 
split level 101: [/input-4, 1605] 
split level 102: [/input-12, 1749] 
split level 103: [/input-12, 7832] 
split level 104: [/input-12, 2538] 
split level 105: [/input-4, 145] 
split level 106: [/input-12, 1764] 
split level 107: [/input-4, 329] 
split level 108: [/input-4, 1228] 
split level 109: [/input-4, 6245] 
split level 110: [/input-4, 8019] 
split level 111: [/input-12, 895] 
split level 112: [/input-12, 4197] 
split level 113: [/input-12, 1742] 
split level 114: [/input-12, 2579] 
split level 115: [/input-4, 7763] 
split level 116: [/input-12, 4193] 
split level 117: [/input-12, 6748] 
split level 118: [/input-4, 5717] 
split level 119: [/input-4, 1501] 
split level 120: [/input-4, 1476] 
split level 121: [/input-12, 3879] 
split level 122: [/input-12, 2568] 
split level 123: [/input-12, 5313] 
split level 124: [/input-4, 4040] 
split level 125: [/input-12, 2150] 
split level 126: [/input-12, 2572] 
split level 127: [/input-12, 1057] 
split level 128: [/input-12, 3882] 
split level 129: [/input-4, 7853] 
split level 130: [/input-4, 220] 
split level 131: [/input-4, 3795] 
split level 132: [/input-4, 7358] 
split level 133: [/input-4, 2617] 
split level 134: [/input-4, 4420] 
split level 135: [/input-4, 3292] 
split level 136: [/input-12, 4194] 
split level 137: [/input-4, 2616] 
split level 138: [/input-4, 2628] 
split level 139: [/input-12, 7025] 
split level 140: [/input-4, 4071] 
split level 141: [/input-4, 3233] 
split level 142: [/input-4, 1636] 
split level 143: [/input-4, 4001] 
split level 144: [/input-4, 2907] 
split level 145: [/input-4, 7769] 
split level 146: [/input-4, 8126] 
split level 147: [/input-12, 2920] 
split level 148: [/input-12, 4412] 
split level 149: [/input-4, 4693] 
split level 150: [/input-4, 4947] 
split level 151: [/input-4, 1251] 
split level 152: [/input-12, 1071] 
split level 153: [/input-4, 1253] 
split level 154: [/input-4, 3774] 
split level 155: [/input-4, 476] 
split level 156: [/input-12, 433] 
split level 157: [/input-4, 7147] 
split level 158: [/input-12, 2601] 
split level 159: [/input-4, 3513] 
split level 160: [/input-4, 6604] 
split level 161: [/input-12, 3963] 
split level 162: [/input-12, 2611] 
split level 163: [/input-4, 2122] 
split level 164: [/input-4, 3052] 
split level 165: [/input-4, 2105] 
split level 166: [/input-4, 4635] 
split level 167: [/input-4, 2139] 
split level 168: [/input-4, 3511] 
split level 169: [/input-12, 5046] 
split level 170: [/input-4, 3426] 
split level 171: [/input-12, 3540] 
split level 172: [/input-12, 2009] 
split level 173: [/input-4, 3428] 
split level 174: [/input-12, 5156] 
split level 175: [/input-12, 7016] 
split level 176: [/input-12, 635] 
split level 177: [/input-4, 4405] 
split level 178: [/input-12, 5209] 
split level 179: [/input-4, 5070] 
split level 180: [/input-4, 6603] 
split level 181: [/input-4, 222] 
split level 182: [/input-4, 3451] 
split level 183: [/input-4, 6349] 
split level 184: [/input-4, 2875] 
split level 185: [/input-4, 3725] 
split level 186: [/input-12, 3574] 
split level 187: [/input-4, 3742] 
split level 188: [/input-4, 4664] 
split level 189: [/input-4, 3478] 
split level 190: [/input-12, 2361] 
split level 191: [/input-4, 4914] 
split level 192: [/input-12, 7843] 
split level 193: [/input-4, 3463] 
split level 194: [/input-4, 3444] 
split level 195: [/input-12, 2576] 
split level 196: [/input-4, 4633] 
split level 197: [/input-4, 8174] 
split level 198: [/input-4, 7796] 
split level 199: [/input-4, 1556] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3568357229232788
10 lb beta sum: 0.0, worst -0.35682445764541626
Time: prepare 0.0113    bound 0.1305    transfer 0.0016    finalize 0.0064    func 0.1524    
Accumulated time: func 0.2266    prepare 0.0216    bound 0.2042    transfer 0.0017    finalize 0.0066    
all_split False
======================Cut inference begins======================
max lb tensor(0.19102454) min lb tensor(-0.35681990)
Number of Verified Splits: 4 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.010471105575561523 
BICCOS Cumulative time: 0.010471105575561523
Preprocessing time: 0.009991884231567383 Inference time: 0.00018477439880371094 Add cuts time: 6.270408630371094e-05 Cut analysis time: 0.00023174285888671875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34098 (1), -0.34069 (1), -0.34065 (1), -0.34041 (1), -0.34021 (1), -0.33972 (1), -0.33950 (1), -0.33949 (1), -0.33939 (1), -0.33927 (1), -0.33914 (1), -0.33909 (1), -0.33809 (1), -0.33790 (1), -0.33778 (1), -0.33764 (1), -0.33636 (1), -0.33562 (1), -0.33537 (1), -0.33510 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7841    set_bounds 0.0086    solve 0.1524    add 0.0769    
Accumulated time: pickout 0.0003    decision 0.7841    set_bounds 0.0086    solve 0.1524    add 0.0769    
Current (lb-rhs): -0.3409789204597473
50 domains visited
Cumulative time: 1.121056079864502

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 58] [/input-16, 58] [/input-16, 97] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] 
split level 1: [/input-16, 97] [/input-16, 97] [/input-16, 185] [/input-16, 185] [/input-16, 97] [/input-16, 97] [/input-16, 97] [/input-16, 185] [/input-16, 97] [/input-16, 185] 
split level 2: [/input-16, 25] [/input-16, 185] [/input-16, 25] [/input-16, 25] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 25] [/input-16, 25] [/input-16, 25] 
split level 3: [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 25] [/input-16, 25] [/input-16, 180] [/input-16, 180] [/input-16, 180] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3087809979915619
10 lb beta sum: 0.8669406175613403, worst -0.2815544903278351
Time: prepare 0.0071    bound 0.1521    transfer 0.0032    finalize 0.0075    func 0.1727    
Accumulated time: func 0.3993    prepare 0.0289    bound 0.3563    transfer 0.0049    finalize 0.0142    
all_split False
======================Cut inference begins======================
max lb tensor(0.29798335) min lb tensor(-0.28143847)
Number of Verified Splits: 81 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 7
#cuts >= 20: 0
BICCOS time: 0.016861677169799805 
BICCOS Cumulative time: 0.027332782745361328
Preprocessing time: 0.011817216873168945 Inference time: 0.0030121803283691406 Add cuts time: 0.0017457008361816406 Cut analysis time: 0.0002865791320800781
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09859 (2), -0.09847 (2), -0.09846 (2), -0.09751 (2), -0.09728 (2), -0.09683 (2), -0.09679 (2), -0.09672 (2), -0.09666 (2), -0.09654 (2), -0.09600 (2), -0.09538 (2), -0.09463 (2), -0.09221 (2), -0.09086 (2), -0.09027 (2), -0.09012 (2), -0.08997 (2), -0.08988 (2), -0.08945 (2), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0257    set_bounds 0.0123    solve 0.1728    add 0.0900    
Accumulated time: pickout 0.0009    decision 0.8098    set_bounds 0.0209    solve 0.3252    add 0.1669    
Current (lb-rhs): -0.09858846664428711
100 domains visited
Cumulative time: 1.4395267963409424

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] 
split level 1: [/input-16, 97] [/input-16, 97] [/input-16, 97] [/input-16, 97] [/input-16, 97] [/input-16, 97] [/input-16, 97] [/input-16, 97] [/input-16, 97] [/input-16, 97] 
split level 2: [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 180] [/input-16, 180] [/input-16, 185] [/input-16, 185] [/input-16, 185] 
split level 3: [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 180] [/input-16, 24] [/input-16, 24] [/input-16, 180] [/input-16, 180] [/input-16, 180] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16250240802764893
10 lb beta sum: 0.8611658811569214, worst -0.09488469362258911
Time: prepare 0.0068    bound 0.1580    transfer 0.0016    finalize 0.0055    func 0.1745    
Accumulated time: func 0.5738    prepare 0.0359    bound 0.5143    transfer 0.0065    finalize 0.0197    
all_split False
======================Cut inference begins======================
max lb tensor(0.21758868) min lb tensor(-0.09476900)
Number of Verified Splits: 323 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.031685829162597656 
BICCOS Cumulative time: 0.059018611907958984
Preprocessing time: 0.011588811874389648 Inference time: 0.014099359512329102 Add cuts time: 0.005817413330078125 Cut analysis time: 0.00018024444580078125
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0006    decision 0.0261    set_bounds 0.0159    solve 0.1746    add 0.0187    
Accumulated time: pickout 0.0015    decision 0.8359    set_bounds 0.0367    solve 0.4999    add 0.1856    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 25, 180,  58]), tensor([-1., -1., -1.]), tensor([0, 0, 0]), tensor([1.60407757e+09, 1.72716424e-01, 2.39669859e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 25, 180,  58]), tensor([-1., -1.,  1.]), tensor([0, 0, 0]), tensor([1.60407757e+09, 1.72716424e-01, 9.00440663e-02]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 25, 180,  58]), tensor([-1.,  1., -1.]), tensor([0, 0, 0]), tensor([1.60407757e+09, 1.68807313e-01, 2.22341508e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 25, 180,  58]), tensor([-1.,  1.,  1.]), tensor([0, 0, 0]), tensor([1.60407757e+09, 1.68807313e-01, 8.37486833e-02]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 25, 180,  58]), tensor([ 1., -1., -1.]), tensor([0, 0, 0]), tensor([0.00021033, 0.18292220, 0.20868905]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 25, 180,  58]), tensor([ 1., -1.,  1.]), tensor([0, 0, 0]), tensor([0.00021033, 0.18292220, 0.08372490]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 25, 180,  58]), tensor([ 1.,  1., -1.]), tensor([0, 0, 0]), tensor([0.00021033, 0.17733569, 0.19427441]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 25, 180,  58]), tensor([1., 1., 1.]), tensor([0, 0, 0]), tensor([0.00021033, 0.17733569, 0.07825486]), tensor([0, 1, 2]))}
Shallow branching resets to n domains:  8
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11904901266098022

all verified at 3th iter
Time: prepare 0.0004    bound 0.0268    transfer 0.0002    finalize 0.0004    func 0.0279    
Accumulated time: func 0.6017    prepare 0.0363    bound 0.5411    transfer 0.0067    finalize 0.0201    
After pruning, left:  0

Back to Regular BaB


Properties batch 8, size 1
Remaining timeout: 196.38164567947388
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 3.6185 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 76, vnnlib ID: 76 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-36.05768204, -38.24317932, -32.99923325, -32.68070602, -33.82321930,
         -32.26228333, -33.92002869, -35.29465485, -37.36972427, -37.38378906]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1372]; unstable size 1372; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 87, 1, 1372] with unstable size 86 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 44, 1, 1372] with unstable size 43 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1372] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [625]; unstable size 625; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 44, 1, 625] with unstable size 43 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 625] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [43]; unstable size 43; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 43] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.82788706,  3.43607974, -0.64496946,  0.21280187,  0.10595465,
          0.68443561,  1.49991059,  3.02725077,  2.95513368]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-36.05768204, -38.24317932, -32.99923325, -32.68070602, -33.82321930,
         -32.26228333, -33.92002869, -35.29465485, -37.36972427, -37.38378906]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.29it/s]100%|██████████| 1/1 [00:00<00:00,  8.28it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-36.63193893, -39.03312683, -33.56277847, -33.66725540, -34.45087051,
          -33.30065536, -34.74061203, -36.15637970, -38.09491348, -38.22306061]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.26212311]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1235 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 13.991009712219238
alpha/beta optimization time: 1.4773552417755127
initial alpha-crown bounds: tensor([[ 1.94095242,  3.60443616, -0.56731200,  0.22025585,  0.18516397,
          0.72837496,  1.59241474,  3.17055511,  3.11616898]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.5673120021820068
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.35787868499756
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.35783767700195
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.35781073570251
Verifying property 2 with 1 instances.
##### Instance 76 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.56731200]], device='cuda:0') need to verify.
Model prediction is: tensor([-36.05768204, -38.24317932, -32.99923325, -32.68070602, -33.82321930,
        -32.26228333, -33.92002869, -35.29465485, -37.36972427, -37.38378906],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.56731200]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1372
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 614
Node /39 input 0: size torch.Size([250]) unstable 39
-----------------
# of unstable neurons: 2025
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00010991096496582031
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5672793388366699
10 lb beta sum: 0.0, worst -0.5672793388366699
Time: prepare 0.0002    bound 0.1238    transfer 0.0001    finalize 0.0002    func 0.1244    
Accumulated time: func 0.1244    prepare 0.0002    bound 0.1238    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 215] 
split level 1: [/input-16, 72] 
split level 2: [/input-16, 138] 
split level 3: [/input-16, 134] 
split level 4: [/input-16, 110] 
split level 5: [/input-16, 35] 
split level 6: [/input-16, 166] 
split level 7: [/input-16, 170] 
split level 8: [/input-16, 115] 
split level 9: [/input-16, 89] 
split level 10: [/input-16, 230] 
split level 11: [/input-16, 247] 
split level 12: [/input-16, 23] 
split level 13: [/input-12, 6822] 
split level 14: [/input-16, 185] 
split level 15: [/input-12, 7522] 
split level 16: [/input-12, 419] 
split level 17: [/input-12, 7211] 
split level 18: [/input-12, 2460] 
split level 19: [/input-12, 2132] 
split level 20: [/input-12, 1579] 
split level 21: [/input-12, 1701] 
split level 22: [/input-12, 3348] 
split level 23: [/input-12, 795] 
split level 24: [/input-16, 126] 
split level 25: [/input-12, 7008] 
split level 26: [/input-12, 7780] 
split level 27: [/input-12, 3433] 
split level 28: [/input-12, 803] 
split level 29: [/input-12, 5134] 
split level 30: [/input-12, 3355] 
split level 31: [/input-12, 6035] 
split level 32: [/input-12, 1436] 
split level 33: [/input-16, 146] 
split level 34: [/input-12, 7835] 
split level 35: [/input-12, 802] 
split level 36: [/input-12, 417] 
split level 37: [/input-12, 5170] 
split level 38: [/input-12, 3330] 
split level 39: [/input-12, 1581] 
split level 40: [/input-12, 2461] 
split level 41: [/input-12, 5132] 
split level 42: [/input-12, 739] 
split level 43: [/input-12, 1354] 
split level 44: [/input-12, 3809] 
split level 45: [/input-12, 1685] 
split level 46: [/input-12, 5171] 
split level 47: [/input-12, 5548] 
split level 48: [/input-12, 2905] 
split level 49: [/input-12, 3346] 
split level 50: [/input-16, 31] 
split level 51: [/input-12, 2467] 
split level 52: [/input-12, 1260] 
split level 53: [/input-12, 1444] 
split level 54: [/input-12, 5179] 
split level 55: [/input-12, 6037] 
split level 56: [/input-12, 5130] 
split level 57: [/input-12, 6260] 
split level 58: [/input-12, 5133] 
split level 59: [/input-12, 5152] 
split level 60: [/input-12, 5533] 
split level 61: [/input-12, 7523] 
split level 62: [/input-12, 3365] 
split level 63: [/input-12, 5146] 
split level 64: [/input-12, 3778] 
split level 65: [/input-12, 1268] 
split level 66: [/input-12, 7212] 
split level 67: [/input-12, 5554] 
split level 68: [/input-12, 3092] 
split level 69: [/input-12, 6813] 
split level 70: [/input-12, 7444] 
split level 71: [/input-12, 3354] 
split level 72: [/input-12, 5138] 
split level 73: [/input-12, 5135] 
split level 74: [/input-12, 5124] 
split level 75: [/input-4, 1224] 
split level 76: [/input-12, 1435] 
split level 77: [/input-12, 2762] 
split level 78: [/input-12, 8033] 
split level 79: [/input-12, 7218] 
split level 80: [/input-12, 3541] 
split level 81: [/input-12, 5129] 
split level 82: [/input-12, 1741] 
split level 83: [/input-12, 7142] 
split level 84: [/input-12, 1583] 
split level 85: [/input-12, 5136] 
split level 86: [/input-12, 3323] 
split level 87: [/input-12, 5153] 
split level 88: [/input-4, 434] 
split level 89: [/input-12, 5180] 
split level 90: [/input-12, 5682] 
split level 91: [/input-4, 5064] 
split level 92: [/input-12, 5169] 
split level 93: [/input-12, 5178] 
split level 94: [/input-12, 6245] 
split level 95: [/input-12, 4452] 
split level 96: [/input-12, 5144] 
split level 97: [/input-4, 3785] 
split level 98: [/input-12, 3886] 
split level 99: [/input-4, 6345] 
split level 100: [/input-12, 5160] 
split level 101: [/input-12, 5131] 
split level 102: [/input-12, 604] 
split level 103: [/input-12, 3885] 
split level 104: [/input-4, 451] 
split level 105: [/input-12, 1261] 
split level 106: [/input-12, 5551] 
split level 107: [/input-4, 465] 
split level 108: [/input-12, 7836] 
split level 109: [/input-4, 5577] 
split level 110: [/input-12, 2466] 
split level 111: [/input-4, 1705] 
split level 112: [/input-12, 1694] 
split level 113: [/input-12, 1789] 
split level 114: [/input-12, 812] 
split level 115: [/input-4, 4535] 
split level 116: [/input-12, 6989] 
split level 117: [/input-12, 5122] 
split level 118: [/input-12, 2459] 
split level 119: [/input-12, 5673] 
split level 120: [/input-12, 1170] 
split level 121: [/input-4, 3768] 
split level 122: [/input-12, 6996] 
split level 123: [/input-4, 6532] 
split level 124: [/input-12, 7036] 
split level 125: [/input-12, 7599] 
split level 126: [/input-12, 8027] 
split level 127: [/input-12, 5123] 
split level 128: [/input-12, 7573] 
split level 129: [/input-12, 4777] 
split level 130: [/input-12, 3428] 
split level 131: [/input-12, 8030] 
split level 132: [/input-4, 1737] 
split level 133: [/input-4, 3769] 
split level 134: [/input-12, 5650] 
split level 135: [/input-4, 4642] 
split level 136: [/input-12, 5681] 
split level 137: [/input-4, 6329] 
split level 138: [/input-4, 6343] 
split level 139: [/input-4, 5825] 
split level 140: [/input-12, 7229] 
split level 141: [/input-12, 5664] 
split level 142: [/input-12, 4389] 
split level 143: [/input-12, 1269] 
split level 144: [/input-4, 418] 
split level 145: [/input-4, 1719] 
split level 146: [/input-4, 2738] 
split level 147: [/input-12, 5149] 
split level 148: [/input-4, 4792] 
split level 149: [/input-12, 4443] 
split level 150: [/input-4, 3240] 
split level 151: [/input-12, 5192] 
split level 152: [/input-12, 8039] 
split level 153: [/input-12, 779] 
split level 154: [/input-12, 1200] 
split level 155: [/input-12, 5177] 
split level 156: [/input-12, 5724] 
split level 157: [/input-12, 5054] 
split level 158: [/input-4, 5718] 
split level 159: [/input-12, 7019] 
split level 160: [/input-12, 5168] 
split level 161: [/input-12, 7138] 
split level 162: [/input-4, 7874] 
split level 163: [/input-4, 1752] 
split level 164: [/input-12, 1445] 
split level 165: [/input-4, 4893] 
split level 166: [/input-12, 100] 
split level 167: [/input-4, 4278] 
split level 168: [/input-4, 5829] 
split level 169: [/input-4, 4454] 
split level 170: [/input-12, 1427] 
split level 171: [/input-4, 4505] 
split level 172: [/input-4, 8134] 
split level 173: [/input-12, 7230] 
split level 174: [/input-4, 5813] 
split level 175: [/input-4, 7777] 
split level 176: [/input-4, 5560] 
split level 177: [/input-12, 790] 
split level 178: [/input-4, 1239] 
split level 179: [/input-4, 483] 
split level 180: [/input-12, 2505] 
split level 181: [/input-4, 4825] 
split level 182: [/input-12, 5166] 
split level 183: [/input-4, 4262] 
split level 184: [/input-12, 5671] 
split level 185: [/input-12, 5798] 
split level 186: [/input-4, 3784] 
split level 187: [/input-4, 3121] 
split level 188: [/input-4, 1638] 
split level 189: [/input-4, 4794] 
split level 190: [/input-4, 1750] 
split level 191: [/input-4, 4283] 
split level 192: [/input-4, 4261] 
split level 193: [/input-12, 2756] 
split level 194: [/input-12, 5900] 
split level 195: [/input-12, 596] 
split level 196: [/input-12, 1353] 
split level 197: [/input-12, 614] 
split level 198: [/input-4, 7994] 
split level 199: [/input-4, 3154] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5669956207275391
10 lb beta sum: 0.0, worst -0.5669870376586914
Time: prepare 0.0116    bound 0.1351    transfer 0.0016    finalize 0.0075    func 0.1583    
Accumulated time: func 0.2826    prepare 0.0221    bound 0.2588    transfer 0.0017    finalize 0.0077    
all_split False
======================Cut inference begins======================
max lb tensor(0.14427876) min lb tensor(-0.56698442)
Number of Verified Splits: 2 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.01041269302368164 
BICCOS Cumulative time: 0.01041269302368164
Preprocessing time: 0.010047674179077148 Inference time: 0.00011134147644042969 Add cuts time: 4.4345855712890625e-05 Cut analysis time: 0.00020933151245117188
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.55494 (1), -0.55438 (1), -0.55436 (1), -0.55415 (1), -0.55407 (1), -0.55399 (1), -0.55391 (1), -0.55383 (1), -0.55349 (1), -0.55280 (1), -0.55250 (1), -0.55203 (1), -0.55124 (1), -0.55035 (1), -0.55005 (1), -0.54970 (1), -0.54936 (1), -0.54830 (1), -0.54805 (1), -0.54787 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.7929    set_bounds 0.0105    solve 0.1584    add 0.0895    
Accumulated time: pickout 0.0004    decision 0.7929    set_bounds 0.0105    solve 0.1584    add 0.0895    
Current (lb-rhs): -0.5549361705780029
50 domains visited
Cumulative time: 1.1980023384094238

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 138] [/input-16, 138] [/input-16, 215] [/input-16, 138] [/input-16, 215] [/input-16, 138] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 138] 
split level 1: [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 138] [/input-16, 110] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 110] 
split level 2: [/input-16, 35] [/input-16, 35] [/input-16, 35] [/input-16, 35] [/input-16, 35] [/input-16, 35] [/input-16, 35] [/input-16, 110] [/input-16, 110] [/input-16, 35] 
split level 3: [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5296318531036377
10 lb beta sum: 0.3719249665737152, worst -0.5247454047203064
Time: prepare 0.0067    bound 0.1534    transfer 0.0016    finalize 0.0067    func 0.1711    
Accumulated time: func 0.4538    prepare 0.0290    bound 0.4123    transfer 0.0033    finalize 0.0144    
all_split False
======================Cut inference begins======================
max lb tensor(0.31570885) min lb tensor(-0.52470642)
Number of Verified Splits: 28 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 7
#cuts >= 20: 0
BICCOS time: 0.014316320419311523 
BICCOS Cumulative time: 0.024729013442993164
Preprocessing time: 0.01180720329284668 Inference time: 0.0012080669403076172 Add cuts time: 0.0004794597625732422 Cut analysis time: 0.0008215904235839844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17503 (2), -0.17265 (2), -0.16934 (2), -0.16725 (2), -0.16658 (2), -0.16629 (2), -0.16579 (2), -0.16478 (2), -0.16423 (2), -0.16377 (2), -0.16308 (2), -0.16295 (2), -0.16277 (2), -0.16268 (2), -0.16266 (2), -0.16057 (2), -0.15915 (2), -0.15876 (2), -0.15726 (2), -0.15711 (2), 
Length of domains: 50
Time: pickout 0.0008    decision 0.0254    set_bounds 0.0132    solve 0.1712    add 0.0912    
Accumulated time: pickout 0.0012    decision 0.8183    set_bounds 0.0237    solve 0.3296    add 0.1806    
Current (lb-rhs): -0.17503058910369873
100 domains visited
Cumulative time: 1.5143187046051025

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] 
split level 1: [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 110] [/input-16, 72] [/input-16, 72] [/input-16, 72] 
split level 2: [/input-16, 35] [/input-16, 35] [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 35] [/input-16, 110] [/input-16, 110] [/input-16, 110] 
split level 3: [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 35] [/input-16, 35] [/input-16, 35] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1853346824645996
10 lb beta sum: 0.9303696751594543, worst -0.11800789833068848
Time: prepare 0.0069    bound 0.1541    transfer 0.0024    finalize 0.0055    func 0.1716    
Accumulated time: func 0.6254    prepare 0.0362    bound 0.5664    transfer 0.0057    finalize 0.0199    
all_split False
======================Cut inference begins======================
max lb tensor(0.23296785) min lb tensor(-0.11466467)
Number of Verified Splits: 391 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 6
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.03746962547302246 
BICCOS Cumulative time: 0.062198638916015625
Preprocessing time: 0.011907339096069336 Inference time: 0.016637802124023438 Add cuts time: 0.00860738754272461 Cut analysis time: 0.0003170967102050781
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11466 (3), -0.11465 (3), -0.10236 (3), -0.07977 (3), -0.05965 (3), -0.04770 (3), -0.01517 (3), -0.00507 (3), -0.00043 (3), 
Length of domains: 9
Time: pickout 0.0006    decision 0.0255    set_bounds 0.0155    solve 0.1717    add 0.1194    
Accumulated time: pickout 0.0018    decision 0.8438    set_bounds 0.0391    solve 0.5013    add 0.3000    
Current (lb-rhs): -0.11466467380523682
109 domains visited
Cumulative time: 1.884709358215332

Shallow-BaB round 4
batch: 9
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 72] [/input-16, 72] [/input-16, 215] 
split level 1: [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 138] [/input-16, 134] [/input-16, 72] 
split level 2: [/input-16, 138] [/input-16, 134] [/input-16, 134] [/input-16, 138] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 138] [/input-16, 134] 
split level 3: [/input-16, 134] [/input-16, 138] [/input-16, 138] [/input-16, 134] [/input-16, 138] [/input-16, 35] [/input-16, 35] [/input-16, 35] [/input-16, 35] 
split level 4: [/input-16, 166] [/input-16, 35] [/input-16, 166] [/input-16, 35] [/input-16, 35] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] 
split level 5: [/input-16, 115] [/input-16, 89] [/input-16, 89] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] 
split level 6: [/input-16, 89] [/input-16, 230] [/input-16, 230] [/input-16, 89] [/input-16, 89] [/input-16, 89] [/input-16, 89] [/input-16, 89] [/input-16, 89] 
split level 7: [/input-16, 247] [/input-16, 247] [/input-16, 247] [/input-16, 247] [/input-16, 230] [/input-16, 247] [/input-16, 247] [/input-16, 230] [/input-16, 230] 
split level 8: [/input-16, 230] [/input-16, 23] [/input-16, 23] [/input-16, 230] [/input-16, 247] [/input-16, 230] [/input-16, 230] [/input-16, 247] [/input-16, 247] 
split level 9: [/input-16, 23] [/input-12, 1701] [/input-12, 6822] [/input-16, 23] [/input-12, 6822] [/input-16, 23] [/input-16, 23] [/input-16, 23] [/input-16, 23] 
split level 10: [/input-12, 7522] [/input-16, 185] [/input-16, 185] [/input-12, 7522] [/input-16, 23] [/input-12, 7522] [/input-12, 7522] [/input-12, 6822] [/input-12, 6822] 
split level 11: [/input-16, 185] [/input-12, 1579] [/input-12, 1579] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] 
split level 12: [/input-12, 2132] [/input-12, 7522] [/input-12, 6260] [/input-12, 7780] [/input-12, 1579] [/input-12, 3348] [/input-12, 2132] [/input-12, 1579] [/input-12, 1579] 
split level 13: [/input-12, 1579] [/input-12, 6260] [/input-12, 7522] [/input-12, 1579] [/input-12, 7522] [/input-12, 1579] [/input-12, 1579] [/input-12, 7522] [/input-12, 7522] 
split level 14: [/input-12, 3348] [/input-12, 7212] [/input-12, 5171] [/input-12, 3348] [/input-12, 7780] [/input-12, 7780] [/input-12, 3348] [/input-12, 6260] [/input-12, 6260] 
split level 15: [/input-12, 7835] [/input-12, 3348] [/input-12, 7212] [/input-12, 1685] [/input-12, 6260] [/input-12, 7835] [/input-12, 7835] [/input-12, 3348] [/input-12, 3348] 
split level 16: [/input-12, 7780] [/input-12, 1685] [/input-12, 3348] [/input-12, 779] [/input-12, 3348] [/input-12, 1685] [/input-12, 7780] [/input-12, 7780] [/input-12, 7780] 
split level 17: [/input-12, 1685] [/input-12, 2459] [/input-12, 1685] [/input-12, 5650] [/input-12, 1685] [/input-12, 6260] [/input-12, 1685] [/input-12, 1685] [/input-12, 1685] 
split level 18: [/input-12, 6260] [/input-12, 6250] [/input-12, 6250] [/input-12, 2505] [/input-12, 790] [/input-12, 2505] [/input-12, 2505] [/input-12, 790] [/input-12, 6250] 
split level 19: [/input-12, 2505] [/input-12, 790] [/input-12, 790] [/input-12, 790] [/input-12, 6250] [/input-12, 790] [/input-12, 790] [/input-12, 6250] [/input-12, 790] 
split level 20: [/input-12, 790] [/input-4, 7994] [/input-4, 7994] [/input-4, 7994] [/input-4, 7994] [/input-4, 7994] [/input-4, 7994] [/input-4, 7994] [/input-4, 7994] 
split level 21: [/input-4, 7994] [/input-12, 4164] [/input-12, 2505] [/input-12, 4164] [/input-12, 2505] [/input-12, 4164] [/input-12, 4164] [/input-12, 2505] [/input-12, 2505] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9958562254905701, worst -0.14268839359283447
10 lb beta sum: 1.1123729944229126, worst -0.10867512226104736
Time: prepare 0.0170    bound 0.1616    transfer 0.0019    finalize 0.0061    func 0.1893    
Accumulated time: func 0.8147    prepare 0.0543    bound 0.7280    transfer 0.0076    finalize 0.0260    
all_split False
======================Cut inference begins======================
max lb tensor(0.48305923) min lb tensor(-0.10530099)
Number of Verified Splits: 159 of 396
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.02395176887512207 
BICCOS Cumulative time: 0.0861504077911377
Preprocessing time: 0.011606454849243164 Inference time: 0.008362054824829102 Add cuts time: 0.0037097930908203125 Cut analysis time: 0.0002734661102294922
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0005    decision 0.0973    set_bounds 0.0133    solve 0.1894    add 0.0232    
Accumulated time: pickout 0.0023    decision 0.9411    set_bounds 0.0524    solve 0.6907    add 0.3232    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
109 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([170, 110, 215]), tensor([-1., -1., -1.]), tensor([0, 0, 0]), tensor([-1.26703856e+34,  2.21138403e-01,  2.88560569e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([170, 110, 215,  72]), tensor([-1., -1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([-1.26703856e+34,  2.21138403e-01,  2.25778092e-02,  2.93125380e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([170, 110, 215,  72]), tensor([-1., -1.,  1.,  1.]), tensor([0, 0, 0, 0]), tensor([-1.26703856e+34,  2.21138403e-01,  2.25778092e-02,  4.68661338e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([170, 110, 166, 215]), tensor([-1.,  1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([-1.26703856e+34,  1.83392450e-01,  1.57611415e-01,  2.79789925e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([170, 110, 166, 215]), tensor([-1.,  1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([-1.26703856e+34,  1.83392450e-01,  1.57611415e-01,  1.04875434e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([170, 110, 166, 215]), tensor([-1.,  1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([-1.26703856e+34,  1.83392450e-01,  1.03035018e-01,  2.75440216e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([170, 110, 166, 215]), tensor([-1.,  1.,  1.,  1.]), tensor([0, 0, 0, 0]), tensor([-1.26703856e+34,  1.83392450e-01,  1.03035018e-01,  9.92535241e-03]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([170]), tensor([1.]), tensor([0]), tensor([267.25927734]), tensor([0]))}
Shallow branching resets to n domains:  8
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5602564811706543
10 lb beta sum: 1.0720536708831787, worst -0.5061454772949219
Time: prepare 0.0005    bound 0.1481    transfer 0.0002    finalize 0.0004    func 0.1493    
Accumulated time: func 0.9639    prepare 0.0548    bound 0.8761    transfer 0.0077    finalize 0.0264    
After pruning, left:  4

Back to Regular BaB

BaB round 1
batch: 4
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 138] [/input-16, 72] [/input-16, 72] [/input-16, 110] 
split level 1: [/input-16, 35] [/input-16, 138] [/input-16, 138] [/input-16, 35] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2193405628204346, worst -0.2554208040237427
10 lb beta sum: 1.2193405628204346, worst -0.2539745569229126
Time: prepare 0.0009    bound 0.1482    transfer 0.0002    finalize 0.0007    func 0.1501    
Accumulated time: func 1.1140    prepare 0.0559    bound 1.0243    transfer 0.0080    finalize 0.0271    
all_split False
======================Cut inference begins======================
max lb tensor(0.94647247) min lb tensor(-0.25330722)
Number of Verified Splits: 10 of 16
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 1.1838396787643433, worst -0.20852291584014893

all verified at 4th iter
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.04555511474609375 
BICCOS Cumulative time: 0.13170552253723145
Preprocessing time: 0.0007557868957519531 Inference time: 0.044167518615722656 Add cuts time: 0.0003695487976074219 Cut analysis time: 0.00026226043701171875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25331 (2), -0.22866 (2), -0.22522 (2), -0.21828 (2), -0.06810 (2), -0.01742 (2), 
Length of domains: 6
Time: pickout 0.0004    decision 0.0134    set_bounds 0.0011    solve 0.1501    add 0.0010    
Accumulated time: pickout 0.0028    decision 0.9545    set_bounds 0.0535    solve 0.8408    add 0.3242    
Current (lb-rhs): -0.2533072233200073
115 domains visited
Cumulative time: 2.6184375286102295

BaB round 2
batch: 6
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 35] [/input-16, 35] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] 
split level 1: [/input-16, 89] [/input-16, 89] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2785087823867798, worst -0.2533069849014282
10 lb beta sum: 1.2785087823867798, worst -0.252663254737854
Time: prepare 0.0012    bound 0.1496    transfer 0.0005    finalize 0.0006    func 0.1522    
Accumulated time: func 1.2662    prepare 0.0573    bound 1.1739    transfer 0.0085    finalize 0.0278    
all_split False
======================Cut inference begins======================
max lb tensor(0.56840003) min lb tensor(-0.25230539)
Number of Verified Splits: 20 of 24
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 1.2785358428955078, worst -0.4073144197463989
10 lb beta sum: 1.3574590682983398, worst -0.4062107801437378
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.16119956970214844 
BICCOS Cumulative time: 0.2929050922393799
Preprocessing time: 0.0010516643524169922 Inference time: 0.15942597389221191 Add cuts time: 0.0004677772521972656 Cut analysis time: 0.0002541542053222656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25231 (4), -0.22805 (4), -0.22466 (4), -0.21774 (4), 
Length of domains: 4
Time: pickout 0.0005    decision 0.0141    set_bounds 0.0015    solve 0.1522    add 0.0225    
Accumulated time: pickout 0.0032    decision 0.9685    set_bounds 0.0550    solve 0.9930    add 0.3468    
Current (lb-rhs): -0.25230538845062256
119 domains visited
Cumulative time: 2.971113920211792

BaB round 3
batch: 4
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 72] 
split level 1: [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2783727645874023, worst -0.18406355381011963
10 lb beta sum: 1.2783727645874023, worst -0.18351447582244873
Time: prepare 0.0009    bound 0.1606    transfer 0.0003    finalize 0.0006    func 0.1626    
Accumulated time: func 1.4288    prepare 0.0584    bound 1.3346    transfer 0.0088    finalize 0.0283    
all_split False
======================Cut inference begins======================
max lb tensor(0.31533372) min lb tensor(-0.18322742)
Number of Verified Splits: 8 of 16
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 1.2783727645874023, worst -0.3236466646194458
10 lb beta sum: 1.2783727645874023, worst -0.3217965364456177
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.16758036613464355 
BICCOS Cumulative time: 0.46048545837402344
Preprocessing time: 0.0008943080902099609 Inference time: 0.16611790657043457 Add cuts time: 0.00028443336486816406 Cut analysis time: 0.0002837181091308594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18323 (6), -0.18209 (6), -0.16034 (6), -0.15869 (6), -0.15780 (6), -0.15427 (6), -0.15019 (6), -0.14749 (6), 
Length of domains: 8
Time: pickout 0.0007    decision 0.0147    set_bounds 0.0013    solve 0.1626    add 0.0012    
Accumulated time: pickout 0.0040    decision 0.9832    set_bounds 0.0563    solve 1.1556    add 0.3479    
Current (lb-rhs): -0.18322741985321045
127 domains visited
Cumulative time: 3.3194451332092285

BaB round 4
batch: 8
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2783727645874023, worst -0.18322694301605225
10 lb beta sum: 1.2783727645874023, worst -0.18288648128509521
Time: prepare 0.0009    bound 0.1594    transfer 0.0002    finalize 0.0006    func 0.1613    
Accumulated time: func 1.5901    prepare 0.0595    bound 1.4940    transfer 0.0090    finalize 0.0289    
all_split False
======================Cut inference begins======================
max lb tensor(0.03152168) min lb tensor(-0.18267667)
Number of Verified Splits: 8 of 16
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 1.2783727645874023, worst -0.22796452045440674
10 lb beta sum: 1.2783727645874023, worst -0.22763550281524658
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.16562199592590332 
BICCOS Cumulative time: 0.6261074542999268
Preprocessing time: 0.0008857250213623047 Inference time: 0.16430950164794922 Add cuts time: 0.00016498565673828125 Cut analysis time: 0.0002617835998535156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18268 (7), -0.18163 (7), -0.15996 (7), -0.15817 (7), -0.15760 (7), -0.15394 (7), -0.14994 (7), -0.14722 (7), 
Length of domains: 8
Time: pickout 0.0005    decision 0.0137    set_bounds 0.0010    solve 0.1613    add 0.0011    
Accumulated time: pickout 0.0044    decision 0.9968    set_bounds 0.0573    solve 1.3169    add 0.3490    
Current (lb-rhs): -0.18267667293548584
135 domains visited
Cumulative time: 3.662780284881592

BaB round 5
batch: 8
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 89] [/input-16, 89] [/input-16, 89] [/input-16, 89] [/input-16, 89] [/input-16, 89] [/input-16, 89] [/input-16, 89] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2783727645874023, worst -0.1689668893814087
10 lb beta sum: 1.2783727645874023, worst -0.1687067747116089
Time: prepare 0.0009    bound 0.1589    transfer 0.0002    finalize 0.0005    func 0.1608    
Accumulated time: func 1.7508    prepare 0.0606    bound 1.6529    transfer 0.0092    finalize 0.0294    
all_split False
======================Cut inference begins======================
max lb tensor(-0.12096655) min lb tensor(-0.16857970)
Number of Verified Splits: 0 of 16
No cut inferred: All or none verified.
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.0008232593536376953 
BICCOS Cumulative time: 0.6269307136535645
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16858 (8), -0.16779 (8), -0.15181 (8), -0.14925 (8), -0.14606 (8), -0.14427 (8), -0.14347 (8), -0.14013 (8), -0.13636 (8), -0.13337 (8), -0.13150 (8), -0.13060 (8), -0.13059 (8), -0.12560 (8), -0.12265 (8), -0.12097 (8), 
Length of domains: 16
Time: pickout 0.0004    decision 0.0134    set_bounds 0.0010    solve 0.1608    add 0.0014    
Accumulated time: pickout 0.0049    decision 1.0103    set_bounds 0.0583    solve 1.4777    add 0.3503    
Current (lb-rhs): -0.16857969760894775
151 domains visited
Cumulative time: 3.840768575668335

BaB round 6
batch: 16
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 247] [/input-16, 230] [/input-16, 247] [/input-16, 230] [/input-16, 247] [/input-16, 230] [/input-16, 247] [/input-16, 230] [/input-16, 247] [/input-16, 230] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2783727645874023, worst -0.15355932712554932
10 lb beta sum: 1.2783727645874023, worst -0.15333640575408936
Time: prepare 0.0015    bound 0.1600    transfer 0.0004    finalize 0.0017    func 0.1639    
Accumulated time: func 1.9148    prepare 0.0623    bound 1.8129    transfer 0.0097    finalize 0.0312    
all_split False
======================Cut inference begins======================
max lb tensor(-0.10026610) min lb tensor(-0.15324223)
Number of Verified Splits: 0 of 32
No cut inferred: All or none verified.
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.0012803077697753906 
BICCOS Cumulative time: 0.6282110214233398
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15324 (9), -0.15284 (9), -0.15278 (9), -0.15175 (9), -0.13589 (9), -0.13580 (9), -0.13357 (9), -0.13320 (9), -0.13167 (9), -0.13134 (9), -0.12996 (9), -0.12883 (9), -0.12758 (9), -0.12740 (9), -0.12354 (9), -0.12284 (9), -0.12068 (9), -0.12020 (9), -0.11833 (9), -0.11779 (9), 
Length of domains: 32
Time: pickout 0.0006    decision 0.0139    set_bounds 0.0017    solve 0.1640    add 0.0015    
Accumulated time: pickout 0.0054    decision 1.0241    set_bounds 0.0600    solve 1.6417    add 0.3518    
Current (lb-rhs): -0.15324223041534424
183 domains visited
Cumulative time: 4.02387261390686

BaB round 7
batch: 32
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 230] [/input-16, 247] [/input-16, 230] [/input-16, 247] [/input-16, 230] [/input-16, 247] [/input-16, 230] [/input-16, 247] [/input-16, 230] [/input-16, 247] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2783727645874023, worst -0.1401458978652954
10 lb beta sum: 1.2783727645874023, worst -0.14002501964569092
Time: prepare 0.0028    bound 0.1597    transfer 0.0006    finalize 0.0014    func 0.1650    
Accumulated time: func 2.0797    prepare 0.0653    bound 1.9726    transfer 0.0102    finalize 0.0326    
all_split False
======================Cut inference begins======================
max lb tensor(-0.08481658) min lb tensor(-0.14000571)
Number of Verified Splits: 0 of 64
No cut inferred: All or none verified.
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.002402782440185547 
BICCOS Cumulative time: 0.6306138038635254
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14001 (10), -0.13958 (10), -0.13958 (10), -0.13852 (10), -0.13705 (10), -0.13663 (10), -0.13626 (10), -0.13518 (10), -0.12286 (10), -0.12262 (10), -0.12017 (10), -0.11988 (10), -0.11910 (10), -0.11875 (10), -0.11799 (10), -0.11701 (10), -0.11667 (10), -0.11646 (10), -0.11637 (10), -0.11630 (10), 
Length of domains: 64
Time: pickout 0.0006    decision 0.0148    set_bounds 0.0031    solve 0.1650    add 0.0022    
Accumulated time: pickout 0.0061    decision 1.0389    set_bounds 0.0631    solve 1.8067    add 0.3540    
Current (lb-rhs): -0.1400057077407837
247 domains visited
Cumulative time: 4.212167263031006

BaB round 8
batch: 64
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2132] [/input-16, 23] [/input-12, 7522] [/input-16, 23] [/input-12, 7522] [/input-16, 23] [/input-12, 7522] [/input-16, 23] [/input-12, 2132] [/input-16, 23] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2783727645874023, worst -0.13545143604278564
10 lb beta sum: 1.2783727645874023, worst -0.1354304552078247
Time: prepare 0.0057    bound 0.1655    transfer 0.0018    finalize 0.0066    func 0.1806    
Accumulated time: func 2.2603    prepare 0.0712    bound 2.1382    transfer 0.0121    finalize 0.0391    
all_split False
======================Cut inference begins======================
max lb tensor(0.00942791) min lb tensor(-0.13542235)
Number of Verified Splits: 16 of 128
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 1.2783727645874023, worst -0.21934115886688232
10 lb beta sum: 1.2783727645874023, worst -0.10345613956451416
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.3698747158050537 
BICCOS Cumulative time: 1.000488519668579
Preprocessing time: 0.004253387451171875 Inference time: 0.36551904678344727 Add cuts time: 8.654594421386719e-05 Cut analysis time: 1.5735626220703125e-05
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13542 (11), -0.13499 (11), -0.13497 (11), -0.13394 (11), -0.13230 (11), -0.13194 (11), -0.13156 (11), -0.13048 (11), -0.11804 (11), -0.11791 (11), -0.11545 (11), -0.11509 (11), -0.11441 (11), -0.11402 (11), -0.11324 (11), -0.11234 (11), -0.11201 (11), -0.11173 (11), -0.11149 (11), -0.11086 (11), 
Length of domains: 112
Time: pickout 0.0011    decision 0.0197    set_bounds 0.0052    solve 0.1806    add 0.0025    
Accumulated time: pickout 0.0072    decision 1.0586    set_bounds 0.0683    solve 1.9873    add 0.3566    
Current (lb-rhs): -0.13542234897613525
359 domains visited
Cumulative time: 4.79183292388916

BaB round 9
batch: 112
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7522] [/input-16, 23] [/input-16, 23] [/input-16, 185] [/input-16, 185] [/input-16, 23] [/input-16, 185] [/input-16, 23] [/input-16, 185] [/input-16, 185] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2783727645874023, worst -0.13302218914031982
10 lb beta sum: 1.2783727645874023, worst -0.1330026388168335
Time: prepare 0.0099    bound 0.1622    transfer 0.0019    finalize 0.0085    func 0.1841    
Accumulated time: func 2.4444    prepare 0.0813    bound 2.3003    transfer 0.0140    finalize 0.0476    
all_split False
======================Cut inference begins======================
max lb tensor(0.02297723) min lb tensor(-0.13299358)
Number of Verified Splits: 43 of 224
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 7
#cuts >= 20: 0
BICCOS time: 0.0129241943359375 
BICCOS Cumulative time: 1.0134127140045166
Preprocessing time: 0.0073473453521728516 Inference time: 0.0047149658203125 Add cuts time: 0.0005655288696289062 Cut analysis time: 0.0002963542938232422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13299 (12), -0.13252 (12), -0.12738 (12), -0.12633 (12), -0.12463 (12), -0.12439 (12), -0.12368 (12), -0.12284 (12), -0.11960 (12), -0.11958 (12), -0.11788 (12), -0.11766 (12), -0.11563 (12), -0.11550 (12), -0.10996 (12), -0.10995 (12), -0.10797 (12), -0.10768 (12), -0.10728 (12), -0.10719 (12), 
Length of domains: 181
Time: pickout 0.0013    decision 0.0193    set_bounds 0.0104    solve 0.1842    add 0.0034    
Accumulated time: pickout 0.0084    decision 1.0779    set_bounds 0.0787    solve 2.1715    add 0.3599    
Current (lb-rhs): -0.13299357891082764
540 domains visited
Cumulative time: 5.024573564529419

BaB round 10
batch: 181
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 23] [/input-16, 185] [/input-16, 23] [/input-16, 185] [/input-16, 23] [/input-16, 185] [/input-12, 6035] [/input-16, 23] [/input-16, 23] [/input-16, 23] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12762784957885742
10 lb beta sum: 0.26425567269325256, worst -0.12535038590431213
Time: prepare 0.0073    bound 0.1711    transfer 0.0030    finalize 0.0067    func 0.1906    
Accumulated time: func 2.6350    prepare 0.0888    bound 2.4714    transfer 0.0170    finalize 0.0543    
all_split False
======================Cut inference begins======================
max lb tensor(0.34930891) min lb tensor(-0.12534289)
Number of Verified Splits: 98 of 362
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 7
#cuts >= 20: 0
BICCOS time: 0.022832393646240234 
BICCOS Cumulative time: 1.0362451076507568
Preprocessing time: 0.010980606079101562 Inference time: 0.009791374206542969 Add cuts time: 0.0006310939788818359 Cut analysis time: 0.0014293193817138672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12534 (13), -0.12480 (13), -0.12288 (13), -0.12220 (13), -0.12170 (13), -0.12126 (13), -0.11996 (13), -0.11983 (13), -0.11973 (13), -0.11953 (13), -0.11693 (13), -0.11690 (13), -0.11596 (13), -0.11487 (13), -0.11483 (13), -0.11467 (13), -0.11354 (13), -0.11291 (13), -0.11278 (13), -0.10742 (13), 
Length of domains: 264
Time: pickout 0.0013    decision 0.0284    set_bounds 0.0144    solve 0.1907    add 0.0043    
Accumulated time: pickout 0.0098    decision 1.1063    set_bounds 0.0931    solve 2.3622    add 0.3642    
Current (lb-rhs): -0.12534289062023163
804 domains visited
Cumulative time: 5.2875635623931885

BaB round 11
batch: 256
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1701] [/input-12, 1579] [/input-12, 6035] [/input-12, 6035] [/input-12, 2132] [/input-16, 115] [/input-12, 6035] [/input-12, 1579] [/input-12, 1701] [/input-12, 1579] 
cut re-enabled after branching node selection
0 lb beta sum: 0.24305903911590576, worst -0.12011535465717316
10 lb beta sum: 0.24305903911590576, worst -0.12008078396320343
Time: prepare 0.0226    bound 0.1632    transfer 0.0034    finalize 0.0124    func 0.2058    
Accumulated time: func 2.8408    prepare 0.1117    bound 2.6347    transfer 0.0204    finalize 0.0667    
all_split False
======================Cut inference begins======================
max lb tensor(0.18984477) min lb tensor(-0.12006791)
Number of Verified Splits: 17 of 512
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.017458438873291016 
BICCOS Cumulative time: 1.0537035465240479
Preprocessing time: 0.015038490295410156 Inference time: 0.0018620491027832031 Add cuts time: 0.00027871131896972656 Cut analysis time: 0.0002791881561279297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12007 (14), -0.11961 (14), -0.11915 (14), -0.11871 (14), -0.11682 (14), -0.11677 (14), -0.11642 (14), -0.11619 (14), -0.11567 (14), -0.11505 (14), -0.11374 (14), -0.11361 (14), -0.11352 (14), -0.11350 (14), -0.11335 (14), -0.11315 (14), -0.11184 (14), -0.11045 (14), -0.11031 (14), -0.11019 (14), 
Length of domains: 503
Time: pickout 0.0012    decision 0.0297    set_bounds 0.0226    solve 0.2060    add 0.0105    
Accumulated time: pickout 0.0110    decision 1.1360    set_bounds 0.1157    solve 2.5682    add 0.3747    
Current (lb-rhs): -0.12006790935993195
1299 domains visited
current_vram/total_varm: 1.9GB/99.9GB, batch_size increase to 512
Cumulative time: 5.575877904891968

BaB round 12
batch: 503
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7522] [/input-12, 2132] [/input-16, 23] [/input-12, 1579] [/input-12, 2132] [/input-12, 1579] [/input-12, 7780] [/input-12, 1701] [/input-12, 1579] [/input-16, 115] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11786699295043945
10 lb beta sum: 0.2830168604850769, worst -0.11775827407836914
Time: prepare 0.0219    bound 0.2008    transfer 0.0115    finalize 0.0293    func 0.2704    
Accumulated time: func 3.1112    prepare 0.1338    bound 2.8354    transfer 0.0319    finalize 0.0960    
all_split False
======================Cut inference begins======================
max lb tensor(0.55501527) min lb tensor(-0.11680436)
Number of Verified Splits: 59 of 1006
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.03992009162902832 
BICCOS Cumulative time: 1.0936236381530762
Preprocessing time: 0.031620025634765625 Inference time: 0.006880283355712891 Add cuts time: 0.0011260509490966797 Cut analysis time: 0.000293731689453125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11680 (15), -0.11642 (15), -0.11564 (15), -0.11497 (15), -0.11456 (15), -0.11441 (15), -0.11403 (15), -0.11320 (15), -0.11269 (15), -0.11181 (15), -0.11148 (15), -0.11091 (15), -0.10958 (15), -0.10874 (15), -0.10859 (15), -0.10857 (15), -0.10851 (15), -0.10842 (15), -0.10841 (15), -0.10814 (15), 
Length of domains: 947
Time: pickout 0.0161    decision 0.0493    set_bounds 0.0477    solve 0.2716    add 0.0184    
Accumulated time: pickout 0.0271    decision 1.1853    set_bounds 0.1634    solve 2.8398    add 0.3931    
Current (lb-rhs): -0.11680436134338379
2246 domains visited
Cumulative time: 6.020600318908691

BaB round 13
batch: 512
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3348] [/input-12, 1579] [/input-12, 7522] [/input-12, 7780] [/input-12, 6822] [/input-12, 3348] [/input-12, 7522] [/input-16, 115] [/input-12, 1701] [/input-16, 115] 
cut re-enabled after branching node selection
0 lb beta sum: 0.31261491775512695, worst -0.11496885120868683
10 lb beta sum: 0.314541757106781, worst -0.1149650365114212
Time: prepare 0.0449    bound 0.2024    transfer 0.0066    finalize 0.0193    func 0.2801    
Accumulated time: func 3.3913    prepare 0.1789    bound 3.0379    transfer 0.0385    finalize 0.1153    
all_split False
======================Cut inference begins======================
max lb tensor(0.52458072) min lb tensor(-0.11495669)
Number of Verified Splits: 131 of 1024
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 8
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.05166435241699219 
BICCOS Cumulative time: 1.1452879905700684
Preprocessing time: 0.03128623962402344 Inference time: 0.017952919006347656 Add cuts time: 0.0020830631256103516 Cut analysis time: 0.0003421306610107422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11496 (16), -0.11456 (15), -0.11441 (16), -0.11403 (15), -0.11265 (16), -0.11205 (16), -0.11141 (16), -0.11133 (16), -0.11078 (16), -0.11030 (16), -0.10859 (15), -0.10843 (16), -0.10821 (16), -0.10814 (15), -0.10764 (15), -0.10749 (16), -0.10705 (15), -0.10695 (16), -0.10575 (16), -0.10531 (16), 
Length of domains: 1328
Time: pickout 0.0020    decision 0.0471    set_bounds 0.0450    solve 0.2805    add 0.0223    
Accumulated time: pickout 0.0291    decision 1.2324    set_bounds 0.2084    solve 3.1202    add 0.4154    
Current (lb-rhs): -0.11495669186115265
3139 domains visited
current_vram/total_varm: 3.0GB/99.9GB, batch_size increase to 1024
Cumulative time: 6.4725306034088135

BaB round 14
batch: 1024
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7522] [/input-16, 115] [/input-16, 115] [/input-12, 7522] [/input-12, 7522] [/input-16, 115] [/input-12, 6035] [/input-12, 2132] [/input-16, 115] [/input-16, 115] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1140284538269043
10 lb beta sum: 0.2233085036277771, worst -0.11441445350646973
Time: prepare 0.0427    bound 0.3743    transfer 0.0179    finalize 0.2312    func 0.6801    
Accumulated time: func 4.0713    prepare 0.2219    bound 3.4122    transfer 0.0564    finalize 0.3465    
all_split False
======================Cut inference begins======================
max lb tensor(0.56355864) min lb tensor(-0.11402106)
Number of Verified Splits: 415 of 2048
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 9
#cuts 4-6: 5
#cuts >= 20: 0
BICCOS time: 0.1352522373199463 
BICCOS Cumulative time: 1.2805402278900146
Preprocessing time: 0.07142853736877441 Inference time: 0.05509495735168457 Add cuts time: 0.008034467697143555 Cut analysis time: 0.00069427490234375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11402 (16), -0.11181 (17), -0.11173 (17), -0.11166 (16), -0.11030 (16), -0.10980 (17), -0.10887 (17), -0.10859 (17), -0.10855 (16), -0.10827 (17), -0.10807 (16), -0.10803 (17), -0.10760 (16), -0.10700 (16), -0.10695 (16), -0.10529 (17), -0.10521 (16), -0.10499 (16), -0.10484 (16), -0.10479 (17), 
Length of domains: 1937
Time: pickout 0.0041    decision 0.0869    set_bounds 0.0897    solve 0.6806    add 0.0371    
Accumulated time: pickout 0.0332    decision 1.3193    set_bounds 0.2981    solve 3.8008    add 0.4525    
Current (lb-rhs): -0.11402106285095215
4772 domains visited
current_vram/total_varm: 5.4GB/99.9GB, batch_size increase to 2048
Cumulative time: 7.516124725341797

BaB round 15
batch: 1937
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1436] [/input-12, 6035] [/input-12, 1436] [/input-16, 115] [/input-12, 7780] [/input-16, 115] [/input-12, 6035] [/input-12, 795] [/input-16, 115] [/input-12, 795] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1116635799407959
10 lb beta sum: 0.2602103054523468, worst -0.11164498329162598
Time: prepare 0.0799    bound 0.6405    transfer 0.0602    finalize 0.1414    func 0.9482    
Accumulated time: func 5.0195    prepare 0.3021    bound 4.0527    transfer 0.1166    finalize 0.4878    
all_split False
======================Cut inference begins======================
max lb tensor(0.74666297) min lb tensor(-0.11163855)
Number of Verified Splits: 1168 of 3874
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 13
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.4994187355041504 
BICCOS Cumulative time: 1.779958963394165
Preprocessing time: 0.12161731719970703 Inference time: 0.355283260345459 Add cuts time: 0.021878719329833984 Cut analysis time: 0.0006394386291503906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11164 (17), -0.11122 (17), -0.10851 (18), -0.10846 (18), -0.10695 (17), -0.10651 (17), -0.10614 (18), -0.10605 (18), -0.10541 (17), -0.10540 (17), -0.10473 (17), -0.10455 (18), -0.10421 (17), -0.10273 (17), -0.10264 (18), -0.10223 (18), -0.10197 (17), -0.10188 (17), -0.10149 (18), -0.10145 (18), 
Length of domains: 2706
Time: pickout 0.0693    decision 0.1538    set_bounds 0.1706    solve 0.9492    add 0.0555    
Accumulated time: pickout 0.1025    decision 1.4731    set_bounds 0.4687    solve 4.7500    add 0.5080    
Current (lb-rhs): -0.11163854598999023
7478 domains visited
Cumulative time: 9.442342519760132

BaB round 16
batch: 2048
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 795] [/input-12, 7212] [/input-12, 6035] [/input-12, 3348] [/input-12, 1436] [/input-12, 1579] [/input-12, 795] [/input-12, 1579] [/input-12, 2132] [/input-12, 2132] 
cut re-enabled after branching node selection
0 lb beta sum: 0.24374212324619293, worst -0.10964083671569824
10 lb beta sum: 0.9421113133430481, worst -0.09961143136024475
Time: prepare 0.1795    bound 0.6710    transfer 0.0554    finalize 0.1384    func 1.0734    
Accumulated time: func 6.0929    prepare 0.4819    bound 4.7237    transfer 0.1720    finalize 0.6263    
all_split False
======================Cut inference begins======================
max lb tensor(0.93593711) min lb tensor(-0.09951262)
Number of Verified Splits: 2831 of 4096
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 23
#cuts >= 20: 0
BICCOS time: 0.7812743186950684 
BICCOS Cumulative time: 2.5612332820892334
Preprocessing time: 0.13527274131774902 Inference time: 0.6008927822113037 Add cuts time: 0.044381141662597656 Cut analysis time: 0.0007276535034179688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10851 (18), -0.10614 (18), -0.10605 (18), -0.09970 (18), -0.09965 (18), -0.09951 (19), -0.09937 (18), -0.09913 (18), -0.09880 (18), -0.09665 (18), -0.09607 (18), -0.09557 (18), -0.09535 (18), -0.09531 (18), -0.09384 (18), -0.09368 (18), -0.09307 (18), -0.09298 (18), -0.09271 (18), -0.09259 (19), 
Length of domains: 1923
Time: pickout 0.0100    decision 0.1673    set_bounds 0.1867    solve 1.0752    add 0.0332    
Accumulated time: pickout 0.1125    decision 1.6404    set_bounds 0.6554    solve 5.8253    add 0.5412    
Current (lb-rhs): -0.10851097106933594
8743 domains visited
current_vram/total_varm: 14.2GB/99.9GB, batch_size increase to 4096
Cumulative time: 11.74056625366211

BaB round 17
batch: 1923
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6822] [/input-12, 6035] [/input-12, 2132] [/input-12, 7522] [/input-12, 7780] [/input-16, 115] [/input-12, 795] [/input-12, 3348] [/input-12, 3355] [/input-12, 1694] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10587668418884277
10 lb beta sum: 2.193070650100708, worst -0.08727209270000458
Time: prepare 0.0772    bound 0.6350    transfer 0.0540    finalize 0.1315    func 0.9235    
Accumulated time: func 7.0164    prepare 0.5593    bound 5.3587    transfer 0.2260    finalize 0.7578    
all_split False
======================Cut inference begins======================
max lb tensor(1.27617145) min lb tensor(-0.08723170)
Number of Verified Splits: 3528 of 3846
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 30
#cuts >= 20: 0
BICCOS time: 0.6742846965789795 
BICCOS Cumulative time: 3.235517978668213
Preprocessing time: 0.12416553497314453 Inference time: 0.49796223640441895 Add cuts time: 0.05145883560180664 Cut analysis time: 0.000698089599609375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08723 (19), -0.08642 (19), -0.08583 (20), -0.08459 (19), -0.08346 (19), -0.08217 (20), -0.08028 (19), -0.07989 (19), -0.07967 (19), -0.07900 (19), -0.07895 (19), -0.07823 (20), -0.07799 (19), -0.07789 (19), -0.07771 (19), -0.07716 (19), -0.07639 (19), -0.07596 (19), -0.07537 (19), -0.07447 (19), 
Length of domains: 318
Time: pickout 0.0083    decision 0.1544    set_bounds 0.1692    solve 0.9244    add 0.0097    
Accumulated time: pickout 0.1208    decision 1.7949    set_bounds 0.8246    solve 6.7496    add 0.5509    
Current (lb-rhs): -0.08723169565200806
9061 domains visited
Cumulative time: 13.71942687034607

BaB round 18
batch: 318
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1436] [/input-12, 3348] [/input-12, 3355] [/input-12, 7780] [/input-12, 1436] [/input-12, 2132] [/input-12, 1436] [/input-12, 1701] [/input-12, 1436] [/input-12, 1436] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10017275810241699
10 lb beta sum: 3.001617431640625, worst -0.08031854033470154
Time: prepare 0.0135    bound 0.1948    transfer 0.0040    finalize 0.0144    func 0.2311    
Accumulated time: func 7.2475    prepare 0.5731    bound 5.5536    transfer 0.2300    finalize 0.7722    
all_split False
======================Cut inference begins======================
max lb tensor(0.69652295) min lb tensor(-0.08024895)
Number of Verified Splits: 449 of 636
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 30
#cuts >= 20: 0
BICCOS time: 0.09093260765075684 
BICCOS Cumulative time: 3.3264505863189697
Preprocessing time: 0.019531965255737305 Inference time: 0.0650022029876709 Add cuts time: 0.005806446075439453 Cut analysis time: 0.0005919933319091797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08025 (21), -0.07752 (20), -0.07636 (21), -0.07378 (20), -0.07338 (20), -0.07206 (21), -0.07126 (20), -0.07017 (20), -0.06951 (20), -0.06755 (20), -0.06747 (20), -0.06693 (21), -0.06692 (21), -0.06666 (20), -0.06631 (20), -0.06513 (20), -0.06439 (20), -0.06277 (19), -0.06251 (20), -0.06211 (20), 
Length of domains: 187
Time: pickout 0.0155    decision 0.0359    set_bounds 0.1617    solve 0.2313    add 0.0050    
Accumulated time: pickout 0.1364    decision 1.8308    set_bounds 0.9863    solve 6.9809    add 0.5559    
Current (lb-rhs): -0.08024895191192627
9248 domains visited
Cumulative time: 14.263445138931274

BaB round 19
batch: 187
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6813] [/input-12, 3348] [/input-12, 6813] [/input-12, 3365] [/input-12, 3348] [/input-12, 3348] [/input-12, 7780] [/input-12, 3365] [/input-12, 7523] [/input-12, 7212] 
cut re-enabled after branching node selection
0 lb beta sum: 3.1265804767608643, worst -0.07783401012420654
10 lb beta sum: 3.1265804767608643, worst -0.07789194583892822
Time: prepare 0.0172    bound 0.1804    transfer 0.0025    finalize 0.0081    func 0.2106    
Accumulated time: func 7.4581    prepare 0.5904    bound 5.7339    transfer 0.2325    finalize 0.7803    
all_split False
======================Cut inference begins======================
max lb tensor(0.51991057) min lb tensor(-0.07780969)
Number of Verified Splits: 135 of 374
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.0333554744720459 
BICCOS Cumulative time: 3.3598060607910156
Preprocessing time: 0.01125955581665039 Inference time: 0.020297527313232422 Add cuts time: 0.0016052722930908203 Cut analysis time: 0.00019311904907226562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07781 (22), -0.07750 (21), -0.07409 (22), -0.07372 (21), -0.07333 (21), -0.07203 (22), -0.07112 (21), -0.07017 (21), -0.06940 (21), -0.06724 (21), -0.06718 (21), -0.06692 (22), -0.06682 (22), -0.06654 (21), -0.06631 (21), -0.06506 (21), -0.06426 (21), -0.06405 (22), -0.06271 (20), -0.06245 (21), 
Length of domains: 239
Time: pickout 0.0020    decision 0.0267    set_bounds 0.0164    solve 0.2108    add 0.0050    
Accumulated time: pickout 0.1384    decision 1.8575    set_bounds 1.0027    solve 7.1917    add 0.5609    
Current (lb-rhs): -0.07780969142913818
9487 domains visited
Cumulative time: 14.558782577514648

BaB round 20
batch: 239
splitting decisions: 
split level 0: [/input-12, 7212] [/input-12, 7212] [/input-12, 7522] [/input-12, 7522] [/input-12, 7522] [/input-12, 3778] [/input-12, 3778] [/input-12, 7212] [/input-12, 7522] [/input-12, 3778] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09513139724731445
10 lb beta sum: 0.2638852298259735, worst -0.01459077000617981

all verified at 11th iter
Time: prepare 0.0095    bound 0.0876    transfer 0.0019    finalize 0.0070    func 0.1092    
Accumulated time: func 7.5673    prepare 0.6001    bound 5.8216    transfer 0.2344    finalize 0.7873    
all_split False
======================Cut inference begins======================
max lb tensor(0.30754596) min lb tensor(0.04279116)
Number of Verified Splits: 478 of 478
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.01401829719543457 
BICCOS Cumulative time: 3.37382435798645
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0018    decision 0.0303    set_bounds 0.0200    solve 0.1099    add 0.0006    
Accumulated time: pickout 0.1402    decision 1.8878    set_bounds 1.0227    solve 7.3016    add 0.5615    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
9487 domains visited
Cumulative time: 14.737481117248535


Properties batch 3, size 1
Remaining timeout: 183.43430495262146
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 183.4342188835144
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 183.43419408798218
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 183.43417286872864
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 183.43415188789368
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 183.43413186073303
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 16.5659 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 77, vnnlib ID: 77 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-81.49273682, -80.97019958, -84.12439728, -82.54110718, -83.65051270,
         -82.78780365, -84.79714203, -84.18125153, -78.58489227, -77.85749054]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1142]; unstable size 1142; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 455, 1, 1142] with unstable size 454 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 29, 1, 1142] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1142] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [454]; unstable size 454; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 29, 1, 454] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 454] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [28]; unstable size 28; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.72871208,  2.10118866,  3.97468567,  3.10145998,  3.76791382,
          3.30881023,  4.92588711,  4.09188509, -0.71353436]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-81.49273682, -80.97019958, -84.12439728, -82.54110718, -83.65051270,
         -82.78780365, -84.79714203, -84.18125153, -78.58489227, -77.85749054]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-81.00509644, -80.86025238, -83.59306335, -82.20608521, -83.17776489,
          -82.47501373, -84.32112122, -83.89413452, -77.93592072, -77.98379517]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.04787445]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0062 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0464 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 78, vnnlib ID: 78 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-40.79726791, -42.20247650, -38.04031372, -37.99784851, -37.67937851,
         -38.30757141, -37.49247742, -39.77943420, -41.93065262, -42.25204468]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1475]; unstable size 1475; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 81, 1, 1475] with unstable size 80 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 45, 1, 1475] with unstable size 44 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1475] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [714]; unstable size 714; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 45, 1, 714] with unstable size 44 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 714] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [44]; unstable size 44; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 44] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.67648226,  1.43122339, -1.09347725, -1.40022254,  0.14118835,
         -1.87846410,  0.09968844,  1.58999085,  1.52146316]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-40.79726791, -42.20247650, -38.04031372, -37.99784851, -37.67937851,
         -38.30757141, -37.49247742, -39.77943420, -41.93065262, -42.25204468]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-40.79726791, -42.20248032, -38.04031372, -37.99784851, -37.67938232,
          -38.30757523, -37.49247360, -39.77943802, -41.93066025, -42.25205231],
         [-40.79726791, -42.20248032, -38.04031372, -37.99784851, -37.67938232,
          -38.30757523, -37.49247360, -39.77943802, -41.93066025, -42.25205231]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.04246521, -0.31846619, -0.50537491]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-0.00476181,  0.01111121,  0.02698422,  ..., -0.51269841,
            -0.56031746, -0.62380952],
           [ 0.04285724, -0.00476181,  0.05873025,  ..., -0.59206349,
            -0.63968253, -0.71904761],
           [ 0.01111121, -0.05238085,  0.09047628,  ..., -0.71904761,
            -0.73492062, -0.71904761],
           ...,
           [ 0.02698422, -0.00476181,  0.10634929,  ..., -1.02063489,
            -1.08412695, -1.51269829],
           [-0.02063482, -0.00476181,  0.05873025,  ..., -0.95714283,
            -1.11587298, -1.48095226],
           [ 0.01111121,  0.02698422,  0.05873025,  ..., -0.94126981,
            -1.19523799, -1.48095226]],

          [[-0.90177131, -0.96618354, -0.96618354,  ..., -1.33655393,
            -1.33655393, -1.36875999],
           [-0.91787434, -0.98228657, -0.86956519,  ..., -1.35265696,
            -1.38486302, -1.43317223],
           [-1.01449275, -1.04669881, -0.80515295,  ..., -1.44927526,
            -1.44927526, -1.44927526],
           ...,
           [-0.99838966, -0.96618354, -0.96618354,  ..., -1.38486302,
            -1.41706920, -1.78743970],
           [-1.03059578, -0.99838966, -1.04669881,  ..., -1.32045078,
            -1.44927526, -1.75523353],
           [-0.99838966, -1.01449275, -1.07890499,  ..., -1.27214170,
            -1.49758446, -1.73913050]],

          [[-1.00299859, -1.03298354, -1.03298354,  ..., -1.27286363,
            -1.27286363, -1.30284870],
           [-1.00299859, -1.03298354, -0.91304344,  ..., -1.28785622,
            -1.31784117, -1.33283365],
           [-1.09295356, -1.07796109, -0.82308841,  ..., -1.39280367,
            -1.37781119, -1.31784117],
           ...,
           [-1.06296861, -1.12293863, -1.09295356,  ..., -1.12293863,
            -1.13793111, -1.43778121],
           [-1.12293863, -1.13793111, -1.12293863,  ..., -1.04797614,
            -1.16791618, -1.43778121],
           [-1.09295356, -1.10794616, -1.09295356,  ..., -1.00299859,
            -1.21289361, -1.46776617]]],


         [[[-0.00476181,  0.01111121,  0.02698422,  ..., -0.51269841,
            -0.56031746, -0.62380952],
           [ 0.04285724, -0.00476181,  0.05873025,  ..., -0.59206349,
            -0.63968253, -0.71904761],
           [ 0.01111121, -0.05238085,  0.09047628,  ..., -0.71904761,
            -0.73492062, -0.71904761],
           ...,
           [ 0.02698422, -0.00476181,  0.10634929,  ..., -1.02063489,
            -1.08412695, -1.51269829],
           [-0.02063482, -0.00476181,  0.05873025,  ..., -0.95714283,
            -1.11587298, -1.48095226],
           [ 0.01111121,  0.02698422,  0.05873025,  ..., -0.94126981,
            -1.19523799, -1.48095226]],

          [[-0.90177131, -0.96618354, -0.96618354,  ..., -1.33655393,
            -1.33655393, -1.36875999],
           [-0.91787434, -0.98228657, -0.86956519,  ..., -1.35265696,
            -1.38486302, -1.43317223],
           [-1.01449275, -1.04669881, -0.80515295,  ..., -1.44927526,
            -1.44927526, -1.44927526],
           ...,
           [-0.99838966, -0.96618354, -0.96618354,  ..., -1.38486302,
            -1.41706920, -1.78743970],
           [-1.03059578, -0.99838966, -1.04669881,  ..., -1.32045078,
            -1.44927526, -1.75523353],
           [-0.99838966, -1.01449275, -1.07890499,  ..., -1.27214170,
            -1.49758446, -1.73913050]],

          [[-1.00299859, -1.03298354, -1.03298354,  ..., -1.27286363,
            -1.27286363, -1.30284870],
           [-1.00299859, -1.03298354, -0.91304344,  ..., -1.28785622,
            -1.31784117, -1.33283365],
           [-1.09295356, -1.07796109, -0.82308841,  ..., -1.39280367,
            -1.37781119, -1.31784117],
           ...,
           [-1.06296861, -1.12293863, -1.09295356,  ..., -1.12293863,
            -1.13793111, -1.43778121],
           [-1.12293863, -1.13793111, -1.12293863,  ..., -1.04797614,
            -1.16791618, -1.43778121],
           [-1.09295356, -1.10794616, -1.09295356,  ..., -1.00299859,
            -1.21289361, -1.46776617]]],


         [[[-0.00476181,  0.01111121,  0.02698422,  ..., -0.51269841,
            -0.56031746, -0.62380952],
           [ 0.04285724, -0.00476181,  0.05873025,  ..., -0.59206349,
            -0.63968253, -0.71904761],
           [ 0.01111121, -0.05238085,  0.09047628,  ..., -0.71904761,
            -0.73492062, -0.71904761],
           ...,
           [ 0.02698422, -0.00476181,  0.10634929,  ..., -1.02063489,
            -1.08412695, -1.51269829],
           [-0.02063482, -0.00476181,  0.05873025,  ..., -0.95714283,
            -1.11587298, -1.48095226],
           [ 0.01111121,  0.02698422,  0.05873025,  ..., -0.94126981,
            -1.19523799, -1.48095226]],

          [[-0.90177131, -0.96618354, -0.96618354,  ..., -1.33655393,
            -1.33655393, -1.36875999],
           [-0.91787434, -0.98228657, -0.86956519,  ..., -1.35265696,
            -1.38486302, -1.43317223],
           [-1.01449275, -1.04669881, -0.80515295,  ..., -1.44927526,
            -1.44927526, -1.44927526],
           ...,
           [-0.99838966, -0.96618354, -0.96618354,  ..., -1.38486302,
            -1.41706920, -1.78743970],
           [-1.03059578, -0.99838966, -1.04669881,  ..., -1.32045078,
            -1.44927526, -1.75523353],
           [-0.99838966, -1.01449275, -1.07890499,  ..., -1.27214170,
            -1.49758446, -1.73913050]],

          [[-1.00299859, -1.03298354, -1.03298354,  ..., -1.27286363,
            -1.27286363, -1.30284870],
           [-1.00299859, -1.03298354, -0.91304344,  ..., -1.28785622,
            -1.31784117, -1.33283365],
           [-1.09295356, -1.07796109, -0.82308841,  ..., -1.39280367,
            -1.37781119, -1.31784117],
           ...,
           [-1.06296861, -1.12293863, -1.09295356,  ..., -1.12293863,
            -1.13793111, -1.43778121],
           [-1.12293863, -1.13793111, -1.12293863,  ..., -1.04797614,
            -1.16791618, -1.43778121],
           [-1.09295356, -1.10794616, -1.09295356,  ..., -1.00299859,
            -1.21289361, -1.46776617]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0480 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 79, vnnlib ID: 79 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-53.73327255, -55.20387650, -53.84458542, -52.15495682, -51.31000519,
         -51.58097076, -53.76881790, -47.04092407, -56.12266922, -53.22363281]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1064]; unstable size 1064; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 87, 1, 1064] with unstable size 86 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 29, 1, 1064] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1064] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [554]; unstable size 554; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 29, 1, 554] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 554] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [28]; unstable size 28; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.91255617, 5.39646626, 5.28247261, 3.51239896, 3.29889059, 2.94452429,
         4.97677803, 7.39127874, 3.48009419]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0366 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 80, vnnlib ID: 80 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-32.01419830, -36.63056183, -32.46035385, -34.77602386, -32.43650818,
         -35.11597443, -32.83395004, -34.70095444, -32.97102737, -35.61683655]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1658]; unstable size 1658; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 71, 1, 1658] with unstable size 70 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 50, 1, 1658] with unstable size 49 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1658] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [674]; unstable size 674; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 50, 1, 674] with unstable size 49 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 674] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [49]; unstable size 49; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 49] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.39011121, -1.27862620,  0.74397731, -1.44451022,  1.01472116,
         -1.34564042,  0.35003281, -0.33168736,  1.47284317]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-32.01419830, -36.63056183, -32.46035385, -34.77602386, -32.43650818,
         -35.11597443, -32.83395004, -34.70095444, -32.97102737, -35.61683655]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-32.97859955, -37.61653519, -32.93682861, -35.27664566, -32.94833755,
          -35.59953308, -33.31379318, -35.31946945, -33.93087769, -36.62162018],
         [-32.97859955, -37.61653519, -32.93682861, -35.27664566, -32.94833755,
          -35.59953308, -33.31379318, -35.31946945, -33.93087769, -36.62162018]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.04177094, -0.03026199,  0.33519363,  0.95227814]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.0121 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0493 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 81, vnnlib ID: 81 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-32.73694229, -38.24230194, -30.38826180, -33.86576843, -30.46055603,
         -33.19583893, -33.23211670, -34.31218719, -37.68148804, -38.27197266]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1596]; unstable size 1596; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 466, 1, 1596] with unstable size 465 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 25, 1, 1596] with unstable size 24 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1596] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [465]; unstable size 465; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 25, 1, 465] with unstable size 24 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 465] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [24]; unstable size 24; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.41671288,  6.61622095,  3.00120306, -0.33062276,  2.29048610,
          2.08264351,  2.83898592,  6.31038857,  6.96077347]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-32.73694229, -38.24230194, -30.38826180, -33.86576843, -30.46055603,
         -33.19583893, -33.23211670, -34.31218719, -37.68148804, -38.27197266]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-32.94462967, -38.45641327, -30.67402267, -34.10126495, -30.60275650,
          -33.41480255, -33.39138412, -34.47226715, -37.96504593, -38.48530579]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.07126617]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0056 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0447 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 82, vnnlib ID: 82 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-48.36866379, -49.38331604, -45.77969360, -45.36150360, -45.67898560,
         -45.48543549, -45.83324814, -47.31180573, -49.63801956, -47.55289459]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1731]; unstable size 1731; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 87, 1, 1731] with unstable size 86 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 32, 1, 1731] with unstable size 31 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1731] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [763]; unstable size 763; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 32, 1, 763] with unstable size 31 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 763] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [31]; unstable size 31; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.87122059,  1.57543588, -1.17208862, -0.30612892, -1.08096123,
         -0.97438264,  0.36015987,  1.97590041, -0.04006219]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-48.36866379, -49.38331604, -45.77969360, -45.36150360, -45.67898560,
         -45.48543549, -45.83324814, -47.31180573, -49.63801956, -47.55289459]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-48.36867523, -49.38331985, -45.77969742, -45.36150742, -45.67898560,
          -45.48544312, -45.83325195, -47.31181335, -49.63801956, -47.55290222],
         [-48.36867523, -49.38331985, -45.77969742, -45.36150742, -45.67898560,
          -45.48544312, -45.83325195, -47.31181335, -49.63801956, -47.55290222]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.29425430, -0.12393570,  0.19354248,  0.34780884,  2.06745911]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.42380959,  0.39206356,  0.47142863,  ..., -0.57619047,
             0.16984135,  0.28095245],
           [ 0.29682547,  0.36031753,  0.53492069,  ..., -0.81428570,
            -0.43333322,  0.34444451],
           [ 0.20158738,  0.39206356,  0.55079371,  ..., -0.76666665,
            -0.79841268, -0.27460307],
           ...,
           [ 0.34444451,  0.50317466,  0.36031753,  ...,  0.36031753,
             0.40793657,  0.28095245],
           [ 0.48730165,  0.58253974,  0.43968260,  ...,  0.69365084,
             0.59841275,  0.50317466],
           [ 0.55079371,  0.61428577,  0.48730165,  ...,  0.80476195,
             0.67777783,  0.66190481]],

          [[ 0.48309189,  0.46698883,  0.57971025,  ..., -0.66022539,
             0.22544295,  0.37037048],
           [ 0.33816436,  0.41867965,  0.64412248,  ..., -1.01449275,
            -0.53140092,  0.35426742],
           [ 0.22544295,  0.45088577,  0.64412248,  ..., -0.95008045,
            -0.96618354, -0.32206106],
           ...,
           [ 0.66022551,  0.82125610,  0.66022551,  ...,  0.70853472,
             0.74074084,  0.59581327],
           [ 0.80515307,  0.90177143,  0.74074084,  ...,  1.06280196,
             0.96618366,  0.86956531],
           [ 0.86956531,  0.93397754,  0.78904998,  ...,  1.20772982,
             1.07890511,  1.06280196]],

          [[ 0.54122955,  0.54122955,  0.67616212,  ..., -0.64317840,
             0.31634200,  0.58620709],
           [ 0.37631202,  0.49625200,  0.69115460,  ..., -1.12293863,
            -0.52323836,  0.51124454],
           [ 0.27136448,  0.49625200,  0.67616212,  ..., -1.13793111,
            -1.04797614, -0.26836565],
           ...,
           [ 0.99100471,  1.14092970,  0.97601217,  ...,  1.05097473,
             1.11094475,  1.00599718],
           [ 1.14092970,  1.21589243,  1.06596720,  ...,  1.36581755,
             1.32084000,  1.26086998],
           [ 1.18590748,  1.24587750,  1.11094475,  ...,  1.54572761,
             1.45577252,  1.47076499]]],


         [[[ 0.42380959,  0.39206356,  0.47142863,  ..., -0.57619047,
             0.16984135,  0.28095245],
           [ 0.29682547,  0.36031753,  0.53492069,  ..., -0.81428570,
            -0.43333322,  0.34444451],
           [ 0.20158738,  0.39206356,  0.55079371,  ..., -0.76666665,
            -0.79841268, -0.27460307],
           ...,
           [ 0.34444451,  0.50317466,  0.36031753,  ...,  0.36031753,
             0.40793657,  0.28095245],
           [ 0.48730165,  0.58253974,  0.43968260,  ...,  0.69365084,
             0.59841275,  0.50317466],
           [ 0.55079371,  0.61428577,  0.48730165,  ...,  0.80476195,
             0.67777783,  0.66190481]],

          [[ 0.48309189,  0.46698883,  0.57971025,  ..., -0.66022539,
             0.22544295,  0.37037048],
           [ 0.33816436,  0.41867965,  0.64412248,  ..., -1.01449275,
            -0.53140092,  0.35426742],
           [ 0.22544295,  0.45088577,  0.64412248,  ..., -0.95008045,
            -0.96618354, -0.32206106],
           ...,
           [ 0.66022551,  0.82125610,  0.66022551,  ...,  0.70853472,
             0.74074084,  0.59581327],
           [ 0.80515307,  0.90177143,  0.74074084,  ...,  1.06280196,
             0.96618366,  0.86956531],
           [ 0.86956531,  0.93397754,  0.78904998,  ...,  1.20772982,
             1.07890511,  1.06280196]],

          [[ 0.54122955,  0.54122955,  0.67616212,  ..., -0.64317840,
             0.31634200,  0.58620709],
           [ 0.37631202,  0.49625200,  0.69115460,  ..., -1.12293863,
            -0.52323836,  0.51124454],
           [ 0.27136448,  0.49625200,  0.67616212,  ..., -1.13793111,
            -1.04797614, -0.26836565],
           ...,
           [ 0.99100471,  1.14092970,  0.97601217,  ...,  1.05097473,
             1.11094475,  1.00599718],
           [ 1.14092970,  1.21589243,  1.06596720,  ...,  1.36581755,
             1.32084000,  1.26086998],
           [ 1.18590748,  1.24587750,  1.11094475,  ...,  1.54572761,
             1.45577252,  1.47076499]]],


         [[[ 0.42380959,  0.39206356,  0.47142863,  ..., -0.57619047,
             0.16984135,  0.28095245],
           [ 0.29682547,  0.36031753,  0.53492069,  ..., -0.81428570,
            -0.43333322,  0.34444451],
           [ 0.20158738,  0.39206356,  0.55079371,  ..., -0.76666665,
            -0.79841268, -0.27460307],
           ...,
           [ 0.34444451,  0.50317466,  0.36031753,  ...,  0.36031753,
             0.40793657,  0.28095245],
           [ 0.48730165,  0.58253974,  0.43968260,  ...,  0.69365084,
             0.59841275,  0.50317466],
           [ 0.55079371,  0.61428577,  0.48730165,  ...,  0.80476195,
             0.67777783,  0.66190481]],

          [[ 0.48309189,  0.46698883,  0.57971025,  ..., -0.66022539,
             0.22544295,  0.37037048],
           [ 0.33816436,  0.41867965,  0.64412248,  ..., -1.01449275,
            -0.53140092,  0.35426742],
           [ 0.22544295,  0.45088577,  0.64412248,  ..., -0.95008045,
            -0.96618354, -0.32206106],
           ...,
           [ 0.66022551,  0.82125610,  0.66022551,  ...,  0.70853472,
             0.74074084,  0.59581327],
           [ 0.80515307,  0.90177143,  0.74074084,  ...,  1.06280196,
             0.96618366,  0.86956531],
           [ 0.86956531,  0.93397754,  0.78904998,  ...,  1.20772982,
             1.07890511,  1.06280196]],

          [[ 0.54122955,  0.54122955,  0.67616212,  ..., -0.64317840,
             0.31634200,  0.58620709],
           [ 0.37631202,  0.49625200,  0.69115460,  ..., -1.12293863,
            -0.52323836,  0.51124454],
           [ 0.27136448,  0.49625200,  0.67616212,  ..., -1.13793111,
            -1.04797614, -0.26836565],
           ...,
           [ 0.99100471,  1.14092970,  0.97601217,  ...,  1.05097473,
             1.11094475,  1.00599718],
           [ 1.14092970,  1.21589243,  1.06596720,  ...,  1.36581755,
             1.32084000,  1.26086998],
           [ 1.18590748,  1.24587750,  1.11094475,  ...,  1.54572761,
             1.45577252,  1.47076499]]],


         [[[ 0.42380959,  0.39206356,  0.47142863,  ..., -0.57619047,
             0.16984135,  0.28095245],
           [ 0.29682547,  0.36031753,  0.53492069,  ..., -0.81428570,
            -0.43333322,  0.34444451],
           [ 0.20158738,  0.39206356,  0.55079371,  ..., -0.76666665,
            -0.79841268, -0.27460307],
           ...,
           [ 0.34444451,  0.50317466,  0.36031753,  ...,  0.36031753,
             0.40793657,  0.28095245],
           [ 0.48730165,  0.58253974,  0.43968260,  ...,  0.69365084,
             0.59841275,  0.50317466],
           [ 0.55079371,  0.61428577,  0.48730165,  ...,  0.80476195,
             0.67777783,  0.66190481]],

          [[ 0.48309189,  0.46698883,  0.57971025,  ..., -0.66022539,
             0.22544295,  0.37037048],
           [ 0.33816436,  0.41867965,  0.64412248,  ..., -1.01449275,
            -0.53140092,  0.35426742],
           [ 0.22544295,  0.45088577,  0.64412248,  ..., -0.95008045,
            -0.96618354, -0.32206106],
           ...,
           [ 0.66022551,  0.82125610,  0.66022551,  ...,  0.70853472,
             0.74074084,  0.59581327],
           [ 0.80515307,  0.90177143,  0.74074084,  ...,  1.06280196,
             0.96618366,  0.86956531],
           [ 0.86956531,  0.93397754,  0.78904998,  ...,  1.20772982,
             1.07890511,  1.06280196]],

          [[ 0.54122955,  0.54122955,  0.67616212,  ..., -0.64317840,
             0.31634200,  0.58620709],
           [ 0.37631202,  0.49625200,  0.69115460,  ..., -1.12293863,
            -0.52323836,  0.51124454],
           [ 0.27136448,  0.49625200,  0.67616212,  ..., -1.13793111,
            -1.04797614, -0.26836565],
           ...,
           [ 0.99100471,  1.14092970,  0.97601217,  ...,  1.05097473,
             1.11094475,  1.00599718],
           [ 1.14092970,  1.21589243,  1.06596720,  ...,  1.36581755,
             1.32084000,  1.26086998],
           [ 1.18590748,  1.24587750,  1.11094475,  ...,  1.54572761,
             1.45577252,  1.47076499]]],


         [[[ 0.42380959,  0.39206356,  0.47142863,  ..., -0.57619047,
             0.16984135,  0.28095245],
           [ 0.29682547,  0.36031753,  0.53492069,  ..., -0.81428570,
            -0.43333322,  0.34444451],
           [ 0.20158738,  0.39206356,  0.55079371,  ..., -0.76666665,
            -0.79841268, -0.27460307],
           ...,
           [ 0.34444451,  0.50317466,  0.36031753,  ...,  0.36031753,
             0.40793657,  0.28095245],
           [ 0.48730165,  0.58253974,  0.43968260,  ...,  0.69365084,
             0.59841275,  0.50317466],
           [ 0.55079371,  0.61428577,  0.48730165,  ...,  0.80476195,
             0.67777783,  0.66190481]],

          [[ 0.48309189,  0.46698883,  0.57971025,  ..., -0.66022539,
             0.22544295,  0.37037048],
           [ 0.33816436,  0.41867965,  0.64412248,  ..., -1.01449275,
            -0.53140092,  0.35426742],
           [ 0.22544295,  0.45088577,  0.64412248,  ..., -0.95008045,
            -0.96618354, -0.32206106],
           ...,
           [ 0.66022551,  0.82125610,  0.66022551,  ...,  0.70853472,
             0.74074084,  0.59581327],
           [ 0.80515307,  0.90177143,  0.74074084,  ...,  1.06280196,
             0.96618366,  0.86956531],
           [ 0.86956531,  0.93397754,  0.78904998,  ...,  1.20772982,
             1.07890511,  1.06280196]],

          [[ 0.54122955,  0.54122955,  0.67616212,  ..., -0.64317840,
             0.31634200,  0.58620709],
           [ 0.37631202,  0.49625200,  0.69115460,  ..., -1.12293863,
            -0.52323836,  0.51124454],
           [ 0.27136448,  0.49625200,  0.67616212,  ..., -1.13793111,
            -1.04797614, -0.26836565],
           ...,
           [ 0.99100471,  1.14092970,  0.97601217,  ...,  1.05097473,
             1.11094475,  1.00599718],
           [ 1.14092970,  1.21589243,  1.06596720,  ...,  1.36581755,
             1.32084000,  1.26086998],
           [ 1.18590748,  1.24587750,  1.11094475,  ...,  1.54572761,
             1.45577252,  1.47076499]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0520 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 83, vnnlib ID: 83 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-63.54446793, -62.58334732, -65.36120605, -64.87749481, -64.70288849,
         -65.00736237, -66.04397583, -65.01132965, -61.99845123, -60.82080078]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1280]; unstable size 1280; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 88, 1, 1280] with unstable size 87 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 39, 1, 1280] with unstable size 38 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1280] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [604]; unstable size 604; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 39, 1, 604] with unstable size 38 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 604] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [38]; unstable size 38; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 38] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.81052923,  0.39148092,  2.21641731,  2.01903915,  1.50830269,
          2.08762407,  2.72220230,  1.50547647, -0.64193678]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-63.54446793, -62.58334732, -65.36120605, -64.87749481, -64.70288849,
         -65.00736237, -66.04397583, -65.01132965, -61.99845123, -60.82080078]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.19it/s]100%|██████████| 1/1 [00:00<00:00,  8.18it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-62.50073242, -61.85676956, -64.34670258, -63.97571945, -63.71329117,
          -64.11492157, -65.11544037, -64.12673950, -60.69838333, -60.39286804]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.30551529]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1248 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 13.64590835571289
alpha/beta optimization time: 1.4648892879486084
initial alpha-crown bounds: tensor([[ 0.90736723,  0.49095058,  2.33085155,  2.13373995,  1.62317848,
          2.20575905,  2.83594036,  1.65043545, -0.53231430]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.5323143005371094
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.3706693649292
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.3706295490265
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.3706018924713
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.3705804347992
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.3705539703369
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.37053322792053
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 198.3705129623413
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 198.37049198150635
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 198.37047219276428
Verifying property 8 with 1 instances.
##### Instance 83 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.53231430]], device='cuda:0') need to verify.
Model prediction is: tensor([-63.54446793, -62.58334732, -65.36120605, -64.87749481, -64.70288849,
        -65.00736237, -66.04397583, -65.01132965, -61.99845123, -60.82080078],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.53231430]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1280
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 594
Node /39 input 0: size torch.Size([250]) unstable 37
-----------------
# of unstable neurons: 1911
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00010991096496582031
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5322885513305664
10 lb beta sum: 0.0, worst -0.5323095321655273
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0747    transfer 0.0001    finalize 0.0002    func 0.0753    
Accumulated time: func 0.0753    prepare 0.0002    bound 0.0747    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 185] 
split level 1: [/input-16, 58] 
split level 2: [/input-16, 5] 
split level 3: [/input-16, 218] 
split level 4: [/input-16, 13] 
split level 5: [/input-16, 126] 
split level 6: [/input-16, 54] 
split level 7: [/input-16, 235] 
split level 8: [/input-16, 134] 
split level 9: [/input-16, 186] 
split level 10: [/input-16, 31] 
split level 11: [/input-16, 215] 
split level 12: [/input-16, 41] 
split level 13: [/input-16, 24] 
split level 14: [/input-16, 99] 
split level 15: [/input-12, 7597] 
split level 16: [/input-16, 170] 
split level 17: [/input-12, 5277] 
split level 18: [/input-16, 35] 
split level 19: [/input-12, 7593] 
split level 20: [/input-16, 7] 
split level 21: [/input-16, 157] 
split level 22: [/input-12, 3359] 
split level 23: [/input-12, 5270] 
split level 24: [/input-12, 3955] 
split level 25: [/input-12, 7009] 
split level 26: [/input-12, 2465] 
split level 27: [/input-12, 3379] 
split level 28: [/input-12, 1963] 
split level 29: [/input-12, 2596] 
split level 30: [/input-12, 3372] 
split level 31: [/input-12, 1562] 
split level 32: [/input-12, 1765] 
split level 33: [/input-12, 1965] 
split level 34: [/input-12, 3884] 
split level 35: [/input-12, 5290] 
split level 36: [/input-12, 3595] 
split level 37: [/input-12, 1710] 
split level 38: [/input-12, 3803] 
split level 39: [/input-12, 3875] 
split level 40: [/input-12, 3954] 
split level 41: [/input-12, 1566] 
split level 42: [/input-12, 3380] 
split level 43: [/input-12, 2476] 
split level 44: [/input-12, 3486] 
split level 45: [/input-12, 7204] 
split level 46: [/input-12, 7851] 
split level 47: [/input-12, 3626] 
split level 48: [/input-12, 7795] 
split level 49: [/input-12, 2012] 
split level 50: [/input-12, 2587] 
split level 51: [/input-12, 3364] 
split level 52: [/input-12, 2235] 
split level 53: [/input-12, 7796] 
split level 54: [/input-12, 8044] 
split level 55: [/input-12, 4782] 
split level 56: [/input-12, 810] 
split level 57: [/input-12, 1757] 
split level 58: [/input-12, 2154] 
split level 59: [/input-12, 1766] 
split level 60: [/input-12, 8043] 
split level 61: [/input-12, 3882] 
split level 62: [/input-12, 718] 
split level 63: [/input-4, 6840] 
split level 64: [/input-4, 6839] 
split level 65: [/input-12, 2668] 
split level 66: [/input-12, 7130] 
split level 67: [/input-12, 1698] 
split level 68: [/input-12, 8042] 
split level 69: [/input-12, 5212] 
split level 70: [/input-12, 3473] 
split level 71: [/input-12, 5213] 
split level 72: [/input-12, 1964] 
split level 73: [/input-12, 3500] 
split level 74: [/input-12, 5716] 
split level 75: [/input-12, 2612] 
split level 76: [/input-12, 3374] 
split level 77: [/input-4, 6823] 
split level 78: [/input-12, 4217] 
split level 79: [/input-4, 2744] 
split level 80: [/input-12, 7844] 
split level 81: [/input-4, 4059] 
split level 82: [/input-12, 7624] 
split level 83: [/input-4, 3820] 
split level 84: [/input-12, 3091] 
split level 85: [/input-4, 3819] 
split level 86: [/input-4, 4060] 
split level 87: [/input-4, 2743] 
split level 88: [/input-12, 7843] 
split level 89: [/input-12, 2658] 
split level 90: [/input-12, 6490] 
split level 91: [/input-4, 3531] 
split level 92: [/input-12, 7531] 
split level 93: [/input-12, 3818] 
split level 94: [/input-12, 3336] 
split level 95: [/input-12, 489] 
split level 96: [/input-12, 7962] 
split level 97: [/input-4, 832] 
split level 98: [/input-12, 314] 
split level 99: [/input-4, 6487] 
split level 100: [/input-12, 6486] 
split level 101: [/input-12, 3487] 
split level 102: [/input-12, 5789] 
split level 103: [/input-12, 308] 
split level 104: [/input-12, 7580] 
split level 105: [/input-4, 376] 
split level 106: [/input-12, 5718] 
split level 107: [/input-4, 6379] 
split level 108: [/input-12, 2763] 
split level 109: [/input-4, 4843] 
split level 110: [/input-4, 6856] 
split level 111: [/input-4, 439] 
split level 112: [/input-12, 7609] 
split level 113: [/input-12, 3878] 
split level 114: [/input-4, 5613] 
split level 115: [/input-4, 5781] 
split level 116: [/input-4, 2681] 
split level 117: [/input-12, 6837] 
split level 118: [/input-12, 1586] 
split level 119: [/input-4, 4846] 
split level 120: [/input-12, 6482] 
split level 121: [/input-4, 7864] 
split level 122: [/input-4, 2507] 
split level 123: [/input-12, 5781] 
split level 124: [/input-4, 424] 
split level 125: [/input-4, 6777] 
split level 126: [/input-4, 7783] 
split level 127: [/input-12, 1256] 
split level 128: [/input-12, 6838] 
split level 129: [/input-12, 7198] 
split level 130: [/input-12, 5271] 
split level 131: [/input-4, 5611] 
split level 132: [/input-12, 7440] 
split level 133: [/input-12, 3344] 
split level 134: [/input-12, 3881] 
split level 135: [/input-12, 2762] 
split level 136: [/input-4, 8179] 
split level 137: [/input-12, 793] 
split level 138: [/input-12, 4220] 
split level 139: [/input-12, 2013] 
split level 140: [/input-12, 2609] 
split level 141: [/input-4, 6600] 
split level 142: [/input-12, 1073] 
split level 143: [/input-4, 4470] 
split level 144: [/input-4, 322] 
split level 145: [/input-4, 1658] 
split level 146: [/input-12, 1462] 
split level 147: [/input-12, 5360] 
split level 148: [/input-12, 5507] 
split level 149: [/input-4, 6760] 
split level 150: [/input-12, 1463] 
split level 151: [/input-4, 1502] 
split level 152: [/input-4, 4469] 
split level 153: [/input-12, 2377] 
split level 154: [/input-12, 3816] 
split level 155: [/input-4, 6761] 
split level 156: [/input-12, 4151] 
split level 157: [/input-4, 6743] 
split level 158: [/input-12, 1999] 
split level 159: [/input-4, 3804] 
split level 160: [/input-4, 4468] 
split level 161: [/input-4, 6790] 
split level 162: [/input-4, 6507] 
split level 163: [/input-4, 6382] 
split level 164: [/input-4, 2667] 
split level 165: [/input-12, 5721] 
split level 166: [/input-4, 4478] 
split level 167: [/input-12, 4914] 
split level 168: [/input-12, 1458] 
split level 169: [/input-4, 413] 
split level 170: [/input-4, 1659] 
split level 171: [/input-12, 8089] 
split level 172: [/input-4, 6393] 
split level 173: [/input-12, 795] 
split level 174: [/input-12, 3477] 
split level 175: [/input-4, 2520] 
split level 176: [/input-12, 3508] 
split level 177: [/input-4, 6745] 
split level 178: [/input-4, 2508] 
split level 179: [/input-12, 7553] 
split level 180: [/input-12, 1152] 
split level 181: [/input-12, 5734] 
split level 182: [/input-4, 5624] 
split level 183: [/input-12, 6243] 
split level 184: [/input-4, 5610] 
split level 185: [/input-4, 8177] 
split level 186: [/input-4, 1627] 
split level 187: [/input-4, 6728] 
split level 188: [/input-4, 1651] 
split level 189: [/input-4, 156] 
split level 190: [/input-4, 2631] 
split level 191: [/input-12, 5669] 
split level 192: [/input-4, 5347] 
split level 193: [/input-4, 3319] 
split level 194: [/input-4, 4444] 
split level 195: [/input-12, 5520] 
split level 196: [/input-4, 2922] 
split level 197: [/input-4, 7847] 
split level 198: [/input-4, 6892] 
split level 199: [/input-4, 4429] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5321865081787109
10 lb beta sum: 0.0, worst -0.5321712493896484
Time: prepare 0.0117    bound 0.1352    transfer 0.0027    finalize 0.0067    func 0.1587    
Accumulated time: func 0.2340    prepare 0.0219    bound 0.2099    transfer 0.0028    finalize 0.0069    
all_split False
======================Cut inference begins======================
max lb tensor(0.48691940) min lb tensor(-0.53215981)
Number of Verified Splits: 4 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.010660409927368164 
BICCOS Cumulative time: 0.010660409927368164
Preprocessing time: 0.010170459747314453 Inference time: 0.00018286705017089844 Add cuts time: 7.796287536621094e-05 Cut analysis time: 0.00022912025451660156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.50991 (1), -0.50982 (1), -0.50969 (1), -0.50947 (1), -0.50933 (1), -0.50916 (1), -0.50793 (1), -0.50781 (1), -0.50726 (1), -0.50667 (1), -0.50570 (1), -0.50560 (1), -0.50556 (1), -0.50538 (1), -0.50484 (1), -0.50253 (1), -0.50134 (1), -0.50094 (1), -0.50045 (1), -0.49833 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7838    set_bounds 0.0095    solve 0.1588    add 0.1530    
Accumulated time: pickout 0.0003    decision 0.7838    set_bounds 0.0095    solve 0.1588    add 0.1530    
Current (lb-rhs): -0.5099086761474609
50 domains visited
Cumulative time: 1.200117588043213

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] 
split level 1: [/input-16, 58] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] 
split level 2: [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 13] 
split level 3: [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.49669694900512695
10 lb beta sum: 0.7329979538917542, worst -0.48655837774276733
Time: prepare 0.0070    bound 0.1546    transfer 0.0017    finalize 0.0067    func 0.1727    
Accumulated time: func 0.4067    prepare 0.0292    bound 0.3645    transfer 0.0044    finalize 0.0137    
all_split False
======================Cut inference begins======================
max lb tensor(0.82312775) min lb tensor(-0.48653752)
Number of Verified Splits: 64 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 17
#cuts >= 20: 0
BICCOS time: 0.016520023345947266 
BICCOS Cumulative time: 0.02718043327331543
Preprocessing time: 0.011878252029418945 Inference time: 0.0024344921112060547 Add cuts time: 0.0017080307006835938 Cut analysis time: 0.0004992485046386719
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08082 (2), -0.07900 (2), -0.07650 (2), -0.07556 (2), -0.07357 (2), -0.07178 (2), -0.07114 (2), -0.06914 (2), -0.06911 (2), -0.06834 (2), -0.06777 (2), -0.06777 (2), -0.06676 (2), -0.06577 (2), -0.06489 (2), -0.06376 (2), -0.06335 (2), -0.06133 (2), -0.05997 (2), -0.05990 (2), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0255    set_bounds 0.0130    solve 0.1728    add 0.0946    
Accumulated time: pickout 0.0009    decision 0.8093    set_bounds 0.0225    solve 0.3316    add 0.2476    
Current (lb-rhs): -0.08082297444343567
100 domains visited
Cumulative time: 1.5233139991760254

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] 
split level 1: [/input-16, 58] [/input-16, 58] [/input-16, 13] [/input-16, 13] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] 
split level 2: [/input-16, 13] [/input-16, 13] [/input-16, 126] [/input-16, 126] [/input-16, 13] [/input-16, 13] [/input-16, 126] [/input-16, 13] [/input-16, 13] [/input-16, 126] 
split level 3: [/input-16, 126] [/input-16, 126] [/input-16, 134] [/input-16, 134] [/input-16, 126] [/input-16, 126] [/input-16, 134] [/input-16, 126] [/input-16, 126] [/input-16, 134] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09020328521728516
10 lb beta sum: 1.416149616241455, worst -0.05492965877056122
Time: prepare 0.0071    bound 0.1747    transfer 0.0017    finalize 0.0068    func 0.1929    
Accumulated time: func 0.5996    prepare 0.0365    bound 0.5392    transfer 0.0061    finalize 0.0205    
all_split False
======================Cut inference begins======================
max lb tensor(0.43424892) min lb tensor(-0.04922444)
Number of Verified Splits: 388 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 7
#cuts >= 20: 0
BICCOS time: 0.03761887550354004 
BICCOS Cumulative time: 0.06479930877685547
Preprocessing time: 0.011693954467773438 Inference time: 0.01662302017211914 Add cuts time: 0.009012699127197266 Cut analysis time: 0.0002892017364501953
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0006    decision 0.0251    set_bounds 0.0154    solve 0.1930    add 0.0190    
Accumulated time: pickout 0.0015    decision 0.8344    set_bounds 0.0379    solve 0.5246    add 0.2667    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([58,  5]), tensor([-1., -1.]), tensor([0, 0]), tensor([3.05861239e-13, 8.74976963e-02]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 58,   5, 185]), tensor([-1.,  1., -1.]), tensor([0, 0, 0]), tensor([3.05861239e-13, 4.24801677e-01, 1.04339078e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 58,   5, 185]), tensor([-1.,  1.,  1.]), tensor([0, 0, 0]), tensor([3.05861239e-13, 4.24801677e-01, 4.22352105e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 58,  13, 185]), tensor([ 1., -1., -1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  9.98182297e-02,  6.79589212e-02]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 58,  13, 185]), tensor([ 1., -1.,  1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  9.98182297e-02,  4.53194737e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 58,  13, 185]), tensor([ 1.,  1., -1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  9.81776416e-02,  6.84388876e-02]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 58,  13, 185]), tensor([1., 1., 1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  9.81776416e-02,  4.50358272e-01]), tensor([0, 1, 2]))}
Shallow branching resets to n domains:  7
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.38144826889038086
10 lb beta sum: 0.6718904376029968, worst -0.3516382575035095
Time: prepare 0.0004    bound 0.1494    transfer 0.0002    finalize 0.0004    func 0.1504    
Accumulated time: func 0.7500    prepare 0.0369    bound 0.6886    transfer 0.0063    finalize 0.0209    
After pruning, left:  1

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 185] 
split level 1: [/input-16, 13] 
split level 2: [/input-16, 126] 
split level 3: [/input-16, 134] 
cut re-enabled after branching node selection
0 lb beta sum: 1.186632752418518, worst -0.22853383421897888
10 lb beta sum: 1.186632752418518, worst -0.2280164659023285
Time: prepare 0.0009    bound 0.1490    transfer 0.0002    finalize 0.0007    func 0.1510    
Accumulated time: func 0.9010    prepare 0.0380    bound 0.8376    transfer 0.0065    finalize 0.0215    
all_split False
======================Cut inference begins======================
max lb tensor(0.46495906) min lb tensor(-0.22786626)
Number of Verified Splits: 8 of 16
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 1.1866328716278076, worst 0.2078637182712555

all verified at 0th iter
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 7
#cuts >= 20: 0
BICCOS time: 0.012547016143798828 
BICCOS Cumulative time: 0.0773463249206543
Preprocessing time: 0.0007269382476806641 Inference time: 0.011270523071289062 Add cuts time: 0.0003025531768798828 Cut analysis time: 0.00024700164794921875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22787 (4), -0.21050 (4), -0.19634 (4), -0.17968 (4), -0.09524 (4), -0.08247 (4), -0.06290 (4), -0.05191 (4), 
Length of domains: 8
Time: pickout 0.0004    decision 0.0168    set_bounds 0.0013    solve 0.1510    add 0.0011    
Accumulated time: pickout 0.0019    decision 0.8512    set_bounds 0.0392    solve 0.6756    add 0.2678    
Current (lb-rhs): -0.2278662621974945
108 domains visited
Cumulative time: 2.1679582595825195

BaB round 2
batch: 8
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 54] [/input-16, 54] [/input-16, 54] [/input-16, 54] [/input-16, 54] [/input-16, 54] [/input-16, 54] [/input-16, 54] 
cut re-enabled after branching node selection
0 lb beta sum: 1.186632752418518, worst -0.20809802412986755
10 lb beta sum: 1.186632752418518, worst -0.207920640707016
Time: prepare 0.0009    bound 0.1481    transfer 0.0002    finalize 0.0005    func 0.1498    
Accumulated time: func 1.0509    prepare 0.0391    bound 0.9858    transfer 0.0067    finalize 0.0220    
all_split False
======================Cut inference begins======================
max lb tensor(0.10215226) min lb tensor(-0.20784149)
Number of Verified Splits: 6 of 16
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 1.1866328716278076, worst -0.31541118025779724
10 lb beta sum: 1.788187026977539, worst -0.057124704122543335
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 7
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.15348315238952637 
BICCOS Cumulative time: 0.23082947731018066
Preprocessing time: 0.0007686614990234375 Inference time: 0.1520214080810547 Add cuts time: 0.00032591819763183594 Cut analysis time: 0.00036716461181640625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20784 (5), -0.19096 (5), -0.17697 (5), -0.16126 (5), -0.07290 (5), -0.06418 (5), -0.06107 (5), -0.04224 (5), -0.03188 (5), -0.03037 (5), 
Length of domains: 10
Time: pickout 0.0004    decision 0.0138    set_bounds 0.0010    solve 0.1499    add 0.0011    
Accumulated time: pickout 0.0023    decision 0.8651    set_bounds 0.0402    solve 0.8255    add 0.2689    
Current (lb-rhs): -0.20784148573875427
118 domains visited
Cumulative time: 2.487907886505127

BaB round 3
batch: 10
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 235] [/input-16, 235] [/input-16, 235] [/input-16, 235] [/input-16, 235] [/input-16, 235] [/input-16, 235] [/input-16, 235] [/input-16, 235] [/input-16, 235] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.21326637268066406
10 lb beta sum: 0.7103075981140137, worst -0.19720546901226044
Time: prepare 0.0006    bound 0.1493    transfer 0.0003    finalize 0.0009    func 0.1512    
Accumulated time: func 1.2021    prepare 0.0398    bound 1.1350    transfer 0.0071    finalize 0.0229    
all_split False
======================Cut inference begins======================
max lb tensor(0.22883072) min lb tensor(-0.19715601)
Number of Verified Splits: 10 of 20
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3875856399536133
10 lb beta sum: 1.4864939451217651, worst -0.05446140468120575
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 7
#cuts 4-6: 9
#cuts >= 20: 0
BICCOS time: 0.15736770629882812 
BICCOS Cumulative time: 0.3881971836090088
Preprocessing time: 0.0008866786956787109 Inference time: 0.15526819229125977 Add cuts time: 0.000598907470703125 Cut analysis time: 0.0006139278411865234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19716 (6), -0.18037 (6), -0.16603 (6), -0.15047 (6), -0.06126 (6), -0.05001 (6), -0.04924 (6), -0.03017 (6), -0.02085 (6), -0.01559 (6), 
Length of domains: 10
Time: pickout 0.0005    decision 0.0165    set_bounds 0.0012    solve 0.1512    add 0.0011    
Accumulated time: pickout 0.0028    decision 0.8816    set_bounds 0.0413    solve 0.9767    add 0.2699    
Current (lb-rhs): -0.19715601205825806
128 domains visited
Cumulative time: 2.8158950805664062

BaB round 4
batch: 10
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19057559967041016
10 lb beta sum: 0.7103075981140137, worst -0.17447414994239807
Time: prepare 0.0005    bound 0.1492    transfer 0.0002    finalize 0.0006    func 0.1507    
Accumulated time: func 1.3528    prepare 0.0405    bound 1.2843    transfer 0.0073    finalize 0.0234    
all_split False
======================Cut inference begins======================
max lb tensor(0.06540111) min lb tensor(-0.17441277)
Number of Verified Splits: 7 of 20
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.31148481369018555
10 lb beta sum: 1.3325855731964111, worst -0.05396336317062378
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 7
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.15523624420166016 
BICCOS Cumulative time: 0.543433427810669
Preprocessing time: 0.0008788108825683594 Inference time: 0.15299558639526367 Add cuts time: 0.0006606578826904297 Cut analysis time: 0.0007011890411376953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17441 (7), -0.15742 (7), -0.14368 (7), -0.13451 (7), -0.12829 (7), -0.12342 (7), -0.08437 (7), -0.07680 (7), -0.03794 (7), -0.02723 (7), -0.02066 (7), -0.00850 (7), -0.00402 (7), 
Length of domains: 13
Time: pickout 0.0013    decision 0.0135    set_bounds 0.0012    solve 0.1507    add 0.0011    
Accumulated time: pickout 0.0041    decision 0.8950    set_bounds 0.0425    solve 1.1275    add 0.2710    
Current (lb-rhs): -0.1744127720594406
141 domains visited
Cumulative time: 3.1391165256500244

BaB round 5
batch: 13
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 99] [/input-16, 99] [/input-16, 99] [/input-16, 99] [/input-16, 99] [/input-16, 99] [/input-16, 99] [/input-16, 99] [/input-16, 99] [/input-16, 99] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17998313903808594
10 lb beta sum: 0.7588756680488586, worst -0.1639198511838913
Time: prepare 0.0006    bound 0.1540    transfer 0.0003    finalize 0.0008    func 0.1560    
Accumulated time: func 1.5088    prepare 0.0413    bound 1.4383    transfer 0.0076    finalize 0.0243    
all_split False
======================Cut inference begins======================
max lb tensor(0.09780709) min lb tensor(-0.16388232)
Number of Verified Splits: 11 of 26
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.36515140533447266
10 lb beta sum: 1.4243650436401367, worst -0.09913985431194305
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 7
#cuts 4-6: 14
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.16014814376831055 
BICCOS Cumulative time: 0.7035815715789795
Preprocessing time: 0.0011262893676757812 Inference time: 0.15698957443237305 Add cuts time: 0.0010447502136230469 Cut analysis time: 0.0009875297546386719
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16388 (8), -0.14726 (8), -0.13295 (8), -0.12350 (8), -0.11739 (8), -0.11310 (8), -0.07244 (8), -0.06505 (8), -0.05021 (8), -0.03428 (8), -0.03381 (8), -0.02620 (8), -0.01839 (8), -0.01561 (8), -0.00831 (8), 
Length of domains: 15
Time: pickout 0.0004    decision 0.0137    set_bounds 0.0014    solve 0.1560    add 0.0013    
Accumulated time: pickout 0.0045    decision 0.9087    set_bounds 0.0439    solve 1.2835    add 0.2723    
Current (lb-rhs): -0.163882315158844
156 domains visited
Cumulative time: 3.4723596572875977

BaB round 6
batch: 15
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 170] [/input-16, 170] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 170] [/input-16, 170] [/input-16, 218] [/input-16, 218] [/input-16, 218] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1735982894897461
10 lb beta sum: 0.6642691493034363, worst -0.1638445109128952
Time: prepare 0.0007    bound 0.1494    transfer 0.0003    finalize 0.0008    func 0.1514    
Accumulated time: func 1.6602    prepare 0.0422    bound 1.5877    transfer 0.0078    finalize 0.0250    
all_split False
======================Cut inference begins======================
max lb tensor(0.57755131) min lb tensor(-0.16381460)
Number of Verified Splits: 10 of 30
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 11
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.0033054351806640625 
BICCOS Cumulative time: 0.7068870067596436
Preprocessing time: 0.001171112060546875 Inference time: 0.0009293556213378906 Add cuts time: 0.0006859302520751953 Cut analysis time: 0.0005190372467041016
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16381 (9), -0.14726 (9), -0.13288 (9), -0.12293 (9), -0.11721 (9), -0.11220 (9), -0.05718 (9), -0.05004 (9), -0.03728 (9), -0.03304 (9), -0.02795 (9), -0.01738 (9), -0.01633 (9), -0.01567 (9), -0.00916 (9), -0.00696 (9), -0.00625 (9), -0.00599 (9), -0.00179 (9), -0.00142 (9), 
Length of domains: 20
Time: pickout 0.0005    decision 0.0139    set_bounds 0.0015    solve 0.1514    add 0.0013    
Accumulated time: pickout 0.0050    decision 0.9226    set_bounds 0.0454    solve 1.4349    add 0.2737    
Current (lb-rhs): -0.16381460428237915
176 domains visited
Cumulative time: 3.649197578430176

BaB round 7
batch: 20
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 35] [/input-16, 35] [/input-16, 35] [/input-16, 218] [/input-16, 218] [/input-16, 170] [/input-16, 170] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1668095588684082
10 lb beta sum: 0.6149740219116211, worst -0.15706291794776917
Time: prepare 0.0009    bound 0.1548    transfer 0.0003    finalize 0.0008    func 0.1571    
Accumulated time: func 1.8173    prepare 0.0435    bound 1.7425    transfer 0.0082    finalize 0.0259    
all_split False
======================Cut inference begins======================
max lb tensor(0.30853790) min lb tensor(-0.15705304)
Number of Verified Splits: 26 of 40
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 14
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.005658149719238281 
BICCOS Cumulative time: 0.7125451564788818
Preprocessing time: 0.0014965534210205078 Inference time: 0.0027370452880859375 Add cuts time: 0.0007536411285400391 Cut analysis time: 0.0006709098815917969
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15705 (10), -0.14038 (10), -0.12592 (10), -0.10933 (10), -0.07603 (10), -0.05672 (10), -0.03616 (10), -0.01962 (10), -0.01711 (10), -0.00969 (10), -0.00900 (10), -0.00455 (10), -0.00405 (10), -0.00187 (10), 
Length of domains: 14
Time: pickout 0.0014    decision 0.0179    set_bounds 0.0022    solve 0.1572    add 0.0014    
Accumulated time: pickout 0.0064    decision 0.9405    set_bounds 0.0476    solve 1.5921    add 0.2750    
Current (lb-rhs): -0.15705303847789764
190 domains visited
Cumulative time: 3.8353769779205322

BaB round 8
batch: 14
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3372] [/input-16, 41] [/input-12, 3372] [/input-16, 218] [/input-16, 41] [/input-16, 35] [/input-16, 41] [/input-16, 41] [/input-16, 35] [/input-16, 41] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16083717346191406
10 lb beta sum: 0.7074529528617859, worst -0.15705910325050354
Time: prepare 0.0007    bound 0.1502    transfer 0.0003    finalize 0.0007    func 0.1522    
Accumulated time: func 1.9695    prepare 0.0444    bound 1.8927    transfer 0.0085    finalize 0.0266    
all_split False
======================Cut inference begins======================
max lb tensor(0.56451410) min lb tensor(-0.15704684)
Number of Verified Splits: 17 of 28
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 14
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.003895998001098633 
BICCOS Cumulative time: 0.7164411544799805
Preprocessing time: 0.0010921955108642578 Inference time: 0.001691579818725586 Add cuts time: 0.0005829334259033203 Cut analysis time: 0.0005292892456054688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15705 (11), -0.14038 (11), -0.11140 (11), -0.10239 (11), -0.09506 (11), -0.06764 (11), -0.03169 (11), -0.01164 (11), -0.00875 (11), -0.00864 (11), -0.00014 (11), 
Length of domains: 11
Time: pickout 0.0005    decision 0.0138    set_bounds 0.0015    solve 0.1522    add 0.0012    
Accumulated time: pickout 0.0069    decision 0.9543    set_bounds 0.0490    solve 1.7443    add 0.2763    
Current (lb-rhs): -0.157046839594841
201 domains visited
Cumulative time: 4.008683919906616

BaB round 9
batch: 11
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 186] [/input-16, 186] [/input-12, 3379] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 170] [/input-16, 170] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14703369140625
10 lb beta sum: 0.5865889191627502, worst -0.14319030940532684
Time: prepare 0.0007    bound 0.1510    transfer 0.0004    finalize 0.0007    func 0.1530    
Accumulated time: func 2.1224    prepare 0.0454    bound 2.0437    transfer 0.0089    finalize 0.0273    
all_split False
======================Cut inference begins======================
max lb tensor(0.61189783) min lb tensor(-0.14317423)
Number of Verified Splits: 10 of 22
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 14
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0031440258026123047 
BICCOS Cumulative time: 0.7195851802825928
Preprocessing time: 0.0010077953338623047 Inference time: 0.00109100341796875 Add cuts time: 0.0005424022674560547 Cut analysis time: 0.0005028247833251953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14317 (12), -0.12688 (12), -0.12053 (12), -0.11140 (12), -0.10228 (12), -0.10145 (12), -0.09415 (12), -0.06755 (12), -0.03169 (12), -0.00875 (12), -0.00864 (12), -0.00302 (12), 
Length of domains: 12
Time: pickout 0.0005    decision 0.0170    set_bounds 0.0012    solve 0.1530    add 0.0012    
Accumulated time: pickout 0.0075    decision 0.9713    set_bounds 0.0503    solve 1.8973    add 0.2775    
Current (lb-rhs): -0.14317423105239868
213 domains visited
Cumulative time: 4.185016632080078

BaB round 10
batch: 12
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 35] [/input-12, 3372] [/input-16, 35] [/input-16, 35] [/input-16, 24] [/input-16, 24] [/input-16, 24] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5680797100067139, worst -0.13821941614151
10 lb beta sum: 0.5676308870315552, worst -0.13819414377212524
Time: prepare 0.0013    bound 0.1501    transfer 0.0005    finalize 0.0006    func 0.1528    
Accumulated time: func 2.2752    prepare 0.0468    bound 2.1938    transfer 0.0094    finalize 0.0279    
all_split False
======================Cut inference begins======================
max lb tensor(0.18176505) min lb tensor(-0.13817841)
Number of Verified Splits: 10 of 24
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 15
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.003094911575317383 
BICCOS Cumulative time: 0.7226800918579102
Preprocessing time: 0.0009853839874267578 Inference time: 0.0011012554168701172 Add cuts time: 0.0004954338073730469 Cut analysis time: 0.0005128383636474609
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13818 (13), -0.12205 (13), -0.11489 (13), -0.10655 (13), -0.09722 (13), -0.09514 (13), -0.08924 (13), -0.05428 (13), -0.04364 (13), -0.03169 (13), -0.02724 (13), -0.00875 (13), -0.00589 (13), -0.00517 (13), 
Length of domains: 14
Time: pickout 0.0005    decision 0.0136    set_bounds 0.0014    solve 0.1528    add 0.0012    
Accumulated time: pickout 0.0079    decision 0.9849    set_bounds 0.0516    solve 2.0501    add 0.2787    
Current (lb-rhs): -0.13817840814590454
227 domains visited
Cumulative time: 4.35776162147522

BaB round 11
batch: 14
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3372] [/input-12, 3372] [/input-12, 3372] [/input-16, 35] [/input-16, 35] [/input-16, 35] [/input-12, 3372] [/input-12, 3372] [/input-12, 3372] [/input-16, 35] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1298050880432129
10 lb beta sum: 0.49924424290657043, worst -0.12596313655376434
Time: prepare 0.0008    bound 0.1496    transfer 0.0003    finalize 0.0007    func 0.1515    
Accumulated time: func 2.4267    prepare 0.0478    bound 2.3434    transfer 0.0097    finalize 0.0286    
all_split False
======================Cut inference begins======================
max lb tensor(0.02058911) min lb tensor(-0.12593895)
Number of Verified Splits: 10 of 28
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 15
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.0032501220703125 
BICCOS Cumulative time: 0.7259302139282227
Preprocessing time: 0.0011105537414550781 Inference time: 0.0011572837829589844 Add cuts time: 0.0005135536193847656 Cut analysis time: 0.0004687309265136719
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12594 (14), -0.11318 (14), -0.11008 (14), -0.10191 (14), -0.09452 (14), -0.09402 (14), -0.09058 (14), -0.08444 (14), -0.08293 (14), -0.08139 (14), -0.07653 (14), -0.07321 (14), -0.06881 (14), -0.06656 (14), -0.03705 (14), -0.03635 (14), -0.02657 (14), -0.02622 (14), 
Length of domains: 18
Time: pickout 0.0004    decision 0.0138    set_bounds 0.0014    solve 0.1516    add 0.0014    
Accumulated time: pickout 0.0084    decision 0.9987    set_bounds 0.0530    solve 2.2016    add 0.2801    
Current (lb-rhs): -0.12593895196914673
245 domains visited
Cumulative time: 4.529841423034668

BaB round 12
batch: 18
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5290] [/input-16, 7] [/input-16, 7] [/input-12, 3372] [/input-12, 5290] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-12, 5290] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5113810300827026, worst -0.12121206521987915
10 lb beta sum: 0.5113810300827026, worst -0.1211891770362854
Time: prepare 0.0018    bound 0.1501    transfer 0.0005    finalize 0.0008    func 0.1534    
Accumulated time: func 2.5802    prepare 0.0498    bound 2.4935    transfer 0.0101    finalize 0.0294    
all_split False
======================Cut inference begins======================
max lb tensor(0.07094377) min lb tensor(-0.12118393)
Number of Verified Splits: 13 of 36
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 16
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.004117727279663086 
BICCOS Cumulative time: 0.7300479412078857
Preprocessing time: 0.001451730728149414 Inference time: 0.0016345977783203125 Add cuts time: 0.0005464553833007812 Cut analysis time: 0.0004849433898925781
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12118 (15), -0.10806 (15), -0.10520 (15), -0.09685 (15), -0.08927 (15), -0.08897 (15), -0.08483 (15), -0.07985 (15), -0.07758 (15), -0.07666 (15), -0.06813 (15), -0.06538 (15), -0.06520 (15), -0.06307 (15), -0.06120 (15), -0.02988 (15), -0.02920 (15), -0.02440 (15), -0.02384 (15), -0.01900 (15), 
Length of domains: 23
Time: pickout 0.0004    decision 0.0140    set_bounds 0.0018    solve 0.1535    add 0.0016    
Accumulated time: pickout 0.0088    decision 1.0127    set_bounds 0.0548    solve 2.3551    add 0.2816    
Current (lb-rhs): -0.12118393182754517
268 domains visited
Cumulative time: 4.7054479122161865

BaB round 13
batch: 23
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 24] [/input-12, 3379] [/input-12, 3372] [/input-16, 7] [/input-16, 24] [/input-12, 3372] [/input-12, 3372] [/input-12, 3372] [/input-12, 3372] [/input-16, 24] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11633491516113281
10 lb beta sum: 0.4417975842952728, worst -0.11243143677711487
Time: prepare 0.0012    bound 0.1500    transfer 0.0010    finalize 0.0009    func 0.1534    
Accumulated time: func 2.7336    prepare 0.0511    bound 2.6435    transfer 0.0111    finalize 0.0303    
all_split False
======================Cut inference begins======================
max lb tensor(0.32052982) min lb tensor(-0.11240979)
Number of Verified Splits: 9 of 46
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 16
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.004094839096069336 
BICCOS Cumulative time: 0.7341427803039551
Preprocessing time: 0.0016794204711914062 Inference time: 0.001241445541381836 Add cuts time: 0.0005788803100585938 Cut analysis time: 0.0005950927734375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11241 (16), -0.11207 (16), -0.09918 (16), -0.09860 (16), -0.09592 (16), -0.09570 (16), -0.08609 (16), -0.08555 (16), -0.07948 (16), -0.07932 (16), -0.07925 (16), -0.07915 (16), -0.07439 (16), -0.07413 (16), -0.07396 (16), -0.07291 (16), -0.06982 (16), -0.06969 (16), -0.06162 (16), -0.06041 (16), 
Length of domains: 37
Time: pickout 0.0005    decision 0.0142    set_bounds 0.0018    solve 0.1536    add 0.0016    
Accumulated time: pickout 0.0093    decision 1.0269    set_bounds 0.0567    solve 2.5087    add 0.2832    
Current (lb-rhs): -0.11240978538990021
305 domains visited
Cumulative time: 4.881439924240112

BaB round 14
batch: 37
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3372] [/input-12, 3379] [/input-12, 5290] [/input-12, 5290] [/input-12, 5290] [/input-12, 2596] [/input-12, 1710] [/input-12, 3379] [/input-12, 1710] [/input-12, 1562] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1100454330444336
10 lb beta sum: 0.44260913133621216, worst -0.10625164210796356
Time: prepare 0.0018    bound 0.1561    transfer 0.0004    finalize 0.0013    func 0.1602    
Accumulated time: func 2.8938    prepare 0.0531    bound 2.7995    transfer 0.0115    finalize 0.0316    
all_split False
======================Cut inference begins======================
max lb tensor(0.14025030) min lb tensor(-0.10623986)
Number of Verified Splits: 7 of 74
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 16
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.004723310470581055 
BICCOS Cumulative time: 0.7388660907745361
Preprocessing time: 0.0024688243865966797 Inference time: 0.00099945068359375 Add cuts time: 0.0006434917449951172 Cut analysis time: 0.0006115436553955078
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10624 (17), -0.10594 (17), -0.10326 (17), -0.10290 (17), -0.09256 (17), -0.09219 (17), -0.09131 (17), -0.09102 (17), -0.09035 (17), -0.09000 (17), -0.08121 (17), -0.08062 (17), -0.07734 (17), -0.07706 (17), -0.07612 (17), -0.07600 (17), -0.07379 (17), -0.07360 (17), -0.06968 (17), -0.06938 (17), 
Length of domains: 67
Time: pickout 0.0005    decision 0.0173    set_bounds 0.0036    solve 0.1602    add 0.0021    
Accumulated time: pickout 0.0099    decision 1.0442    set_bounds 0.0602    solve 2.6689    add 0.2853    
Current (lb-rhs): -0.10623985528945923
372 domains visited
Cumulative time: 5.0701212882995605

BaB round 15
batch: 67
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3380] [/input-12, 1710] [/input-12, 3379] [/input-12, 3380] [/input-12, 2154] [/input-12, 1710] [/input-12, 7796] [/input-12, 1562] [/input-12, 3379] [/input-12, 3379] 
cut re-enabled after branching node selection
0 lb beta sum: 0.49355974793434143, worst -0.10030895471572876
10 lb beta sum: 0.49355974793434143, worst -0.100283682346344
Time: prepare 0.0062    bound 0.1504    transfer 0.0021    finalize 0.0034    func 0.1632    
Accumulated time: func 3.0570    prepare 0.0596    bound 2.9500    transfer 0.0136    finalize 0.0350    
all_split False
======================Cut inference begins======================
max lb tensor(0.11120218) min lb tensor(-0.10026270)
Number of Verified Splits: 9 of 134
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 16
#cuts 4-6: 5
#cuts >= 20: 0
BICCOS time: 0.006788015365600586 
BICCOS Cumulative time: 0.7456541061401367
Preprocessing time: 0.0042266845703125 Inference time: 0.0013306140899658203 Add cuts time: 0.0006663799285888672 Cut analysis time: 0.0005643367767333984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10026 (18), -0.09918 (18), -0.09790 (18), -0.09776 (18), -0.09735 (18), -0.09603 (18), -0.09484 (18), -0.09465 (18), -0.08777 (18), -0.08748 (18), -0.08726 (18), -0.08571 (18), -0.08551 (18), -0.08505 (18), -0.08256 (18), -0.07550 (18), -0.07532 (18), -0.07484 (18), -0.07427 (18), -0.07325 (18), 
Length of domains: 125
Time: pickout 0.0006    decision 0.0166    set_bounds 0.0061    solve 0.1633    add 0.0061    
Accumulated time: pickout 0.0105    decision 1.0607    set_bounds 0.0664    solve 2.8322    add 0.2915    
Current (lb-rhs): -0.10026270151138306
497 domains visited
Cumulative time: 5.2701637744903564

BaB round 16
batch: 125
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1562] [/input-12, 7796] [/input-12, 1562] [/input-12, 7851] [/input-12, 1562] [/input-12, 3379] [/input-12, 2596] [/input-12, 3380] [/input-12, 5290] [/input-12, 5290] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0993804931640625
10 lb beta sum: 0.3971605598926544, worst -0.09555856883525848
Time: prepare 0.0051    bound 0.1679    transfer 0.0023    finalize 0.0052    func 0.1823    
Accumulated time: func 3.2393    prepare 0.0648    bound 3.1178    transfer 0.0160    finalize 0.0403    
all_split False
======================Cut inference begins======================
max lb tensor(0.27425647) min lb tensor(-0.09554535)
Number of Verified Splits: 13 of 250
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 16
#cuts 4-6: 7
#cuts >= 20: 0
BICCOS time: 0.011168718338012695 
BICCOS Cumulative time: 0.7568228244781494
Preprocessing time: 0.0074574947357177734 Inference time: 0.0019061565399169922 Add cuts time: 0.0008683204650878906 Cut analysis time: 0.0009367465972900391
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09555 (19), -0.09437 (19), -0.09309 (19), -0.09288 (19), -0.09252 (19), -0.09123 (19), -0.09000 (19), -0.08971 (19), -0.08403 (19), -0.08335 (19), -0.08219 (19), -0.08207 (19), -0.08182 (19), -0.08172 (19), -0.08152 (19), -0.08106 (19), -0.08027 (19), -0.07982 (19), -0.07899 (19), -0.07894 (19), 
Length of domains: 237
Time: pickout 0.0007    decision 0.0214    set_bounds 0.0109    solve 0.1824    add 0.0043    
Accumulated time: pickout 0.0112    decision 1.0821    set_bounds 0.0772    solve 3.0145    add 0.2958    
Current (lb-rhs): -0.09554535150527954
734 domains visited
Cumulative time: 5.501453876495361

BaB round 17
batch: 237
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7796] [/input-12, 5290] [/input-12, 1710] [/input-12, 718] [/input-12, 3379] [/input-12, 3380] [/input-12, 3379] [/input-12, 1710] [/input-12, 3380] [/input-12, 3380] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0956258773803711
10 lb beta sum: 0.389302134513855, worst -0.0917314887046814
Time: prepare 0.0092    bound 0.1783    transfer 0.0038    finalize 0.0151    func 0.2096    
Accumulated time: func 3.4489    prepare 0.0743    bound 3.2961    transfer 0.0198    finalize 0.0554    
all_split False
======================Cut inference begins======================
max lb tensor(0.30645546) min lb tensor(-0.09169061)
Number of Verified Splits: 65 of 474
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 19
#cuts 4-6: 6
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.027304410934448242 
BICCOS Cumulative time: 0.7841272354125977
Preprocessing time: 0.014120101928710938 Inference time: 0.009617090225219727 Add cuts time: 0.0028116703033447266 Cut analysis time: 0.0007555484771728516
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09169 (20), -0.09043 (20), -0.08906 (20), -0.08906 (20), -0.08867 (20), -0.08726 (20), -0.08590 (20), -0.08588 (20), -0.07936 (20), -0.07876 (20), -0.07858 (20), -0.07793 (20), -0.07721 (20), -0.07710 (20), -0.07660 (20), -0.07631 (20), -0.07574 (20), -0.07573 (20), -0.07572 (20), -0.07569 (20), 
Length of domains: 409
Time: pickout 0.0010    decision 0.0312    set_bounds 0.0206    solve 0.2098    add 0.0087    
Accumulated time: pickout 0.0122    decision 1.1133    set_bounds 0.0979    solve 3.2243    add 0.3046    
Current (lb-rhs): -0.09169061481952667
1143 domains visited
Cumulative time: 5.8011415004730225

BaB round 18
batch: 256
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5290] [/input-12, 3955] [/input-12, 3380] [/input-12, 3380] [/input-12, 1562] [/input-12, 5290] [/input-12, 5290] [/input-12, 2596] [/input-12, 1710] [/input-12, 1710] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07637500762939453
10 lb beta sum: 0.6771519184112549, worst -0.07206912338733673
Time: prepare 0.0099    bound 0.1726    transfer 0.0023    finalize 0.0068    func 0.1955    
Accumulated time: func 3.6444    prepare 0.0843    bound 3.4687    transfer 0.0221    finalize 0.0622    
all_split False
======================Cut inference begins======================
max lb tensor(0.63986939) min lb tensor(-0.07188234)
Number of Verified Splits: 396 of 512
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 25
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.08435559272766113 
BICCOS Cumulative time: 0.8684828281402588
Preprocessing time: 0.014934301376342773 Inference time: 0.06029081344604492 Add cuts time: 0.00843048095703125 Cut analysis time: 0.0006999969482421875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09169 (20), -0.09043 (20), -0.08906 (20), -0.08906 (20), -0.08867 (20), -0.08726 (20), -0.08590 (20), -0.08588 (20), -0.07936 (20), -0.07876 (20), -0.07793 (20), -0.07631 (20), -0.07574 (20), -0.07573 (20), -0.07511 (20), -0.07494 (20), -0.07260 (20), -0.07188 (21), -0.06894 (21), -0.06837 (21), 
Length of domains: 269
Time: pickout 0.0014    decision 0.0304    set_bounds 0.0227    solve 0.1956    add 0.0027    
Accumulated time: pickout 0.0136    decision 1.1438    set_bounds 0.1205    solve 3.4199    add 0.3073    
Current (lb-rhs): -0.09169061481952667
1259 domains visited
current_vram/total_varm: 2.9GB/99.9GB, batch_size increase to 512
Cumulative time: 6.140939950942993

BaB round 19
batch: 269
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2154] [/input-12, 2596] [/input-12, 3380] [/input-12, 1562] [/input-12, 5290] [/input-12, 7796] [/input-12, 1710] [/input-12, 3379] [/input-12, 1710] [/input-12, 3380] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09088134765625
10 lb beta sum: 1.2853307723999023, worst -0.07961544394493103
Time: prepare 0.0106    bound 0.1828    transfer 0.0019    finalize 0.0075    func 0.2065    
Accumulated time: func 3.8509    prepare 0.0952    bound 3.6515    transfer 0.0240    finalize 0.0697    
all_split False
======================Cut inference begins======================
max lb tensor(0.93493587) min lb tensor(-0.07958663)
Number of Verified Splits: 482 of 538
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 28
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.09906864166259766 
BICCOS Cumulative time: 0.9675514698028564
Preprocessing time: 0.015628814697265625 Inference time: 0.07321310043334961 Add cuts time: 0.009563684463500977 Cut analysis time: 0.0006630420684814453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07959 (21), -0.07217 (21), -0.07139 (21), -0.06631 (21), -0.06575 (21), -0.06451 (21), -0.06397 (22), -0.04820 (21), -0.04812 (21), -0.04803 (21), -0.04738 (21), -0.04716 (21), -0.04192 (22), -0.04172 (22), -0.03955 (21), -0.03947 (21), -0.03834 (21), -0.03415 (21), -0.03406 (21), -0.03375 (21), 
Length of domains: 56
Time: pickout 0.0089    decision 0.0338    set_bounds 0.0238    solve 0.2066    add 0.0020    
Accumulated time: pickout 0.0224    decision 1.1775    set_bounds 0.1443    solve 3.6266    add 0.3092    
Current (lb-rhs): -0.07958662509918213
1315 domains visited
Cumulative time: 6.5173180103302

BaB round 20
batch: 56
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3380] [/input-12, 1562] [/input-12, 5290] [/input-12, 1710] [/input-12, 7796] [/input-12, 1766] [/input-12, 5290] [/input-12, 3955] [/input-12, 1766] [/input-12, 1710] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08784294128417969
10 lb beta sum: 1.456741452217102, worst -0.0988500714302063
Time: prepare 0.0027    bound 0.1752    transfer 0.0013    finalize 0.0022    func 0.1823    
Accumulated time: func 4.0331    prepare 0.0980    bound 3.8267    transfer 0.0253    finalize 0.0718    
all_split False
======================Cut inference begins======================
max lb tensor(0.36737216) min lb tensor(-0.06932211)
Number of Verified Splits: 70 of 112
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 28
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.017887592315673828 
BICCOS Cumulative time: 0.9854390621185303
Preprocessing time: 0.0041141510009765625 Inference time: 0.011159420013427734 Add cuts time: 0.0020432472229003906 Cut analysis time: 0.0005707740783691406
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06932 (22), -0.06739 (22), -0.06693 (22), -0.05893 (22), -0.05838 (22), -0.05149 (22), -0.04125 (22), -0.04071 (22), -0.03847 (22), -0.03780 (22), -0.03770 (22), -0.03637 (22), -0.03615 (23), -0.03606 (23), -0.03215 (22), -0.03200 (22), -0.02907 (22), -0.02887 (22), -0.02851 (22), -0.02759 (22), 
Length of domains: 42
Time: pickout 0.0012    decision 0.0163    set_bounds 0.1592    solve 0.1823    add 0.0018    
Accumulated time: pickout 0.0237    decision 1.1938    set_bounds 0.3035    solve 3.8089    add 0.3110    
Current (lb-rhs): -0.06932210922241211
1357 domains visited
Cumulative time: 6.896695375442505

BaB round 21
batch: 42
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2596] [/input-12, 7009] [/input-12, 2596] [/input-12, 3379] [/input-12, 1710] [/input-12, 1710] [/input-12, 1562] [/input-12, 7009] [/input-12, 3955] [/input-12, 3955] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08495712280273438
10 lb beta sum: 1.4755363464355469, worst -0.06736254692077637
Time: prepare 0.0020    bound 0.1700    transfer 0.0005    finalize 0.0019    func 0.1750    
Accumulated time: func 4.2081    prepare 0.1002    bound 3.9967    transfer 0.0258    finalize 0.0737    
all_split False
======================Cut inference begins======================
max lb tensor(0.30080235) min lb tensor(-0.06734151)
Number of Verified Splits: 43 of 84
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 28
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.011450052261352539 
BICCOS Cumulative time: 0.9968891143798828
Preprocessing time: 0.0027959346771240234 Inference time: 0.00673675537109375 Add cuts time: 0.0013575553894042969 Cut analysis time: 0.0005598068237304688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06734 (23), -0.06690 (23), -0.06618 (23), -0.05589 (23), -0.05526 (23), -0.05499 (23), -0.04987 (23), -0.04914 (23), -0.04800 (23), -0.03840 (23), -0.03772 (23), -0.03770 (23), -0.03760 (23), -0.03745 (23), -0.03715 (23), -0.03681 (23), -0.03637 (23), -0.02907 (23), -0.02874 (23), -0.02872 (23), 
Length of domains: 41
Time: pickout 0.0008    decision 0.0153    set_bounds 0.0039    solve 0.1751    add 0.0017    
Accumulated time: pickout 0.0245    decision 1.2091    set_bounds 0.3074    solve 3.9840    add 0.3127    
Current (lb-rhs): -0.06734150648117065
1398 domains visited
Cumulative time: 7.105372428894043

BaB round 22
batch: 41
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3379] [/input-12, 3380] [/input-12, 3379] [/input-12, 3380] [/input-12, 1562] [/input-12, 3955] [/input-12, 3379] [/input-12, 7851] [/input-12, 3379] [/input-12, 3380] 
cut re-enabled after branching node selection
0 lb beta sum: 1.5942620038986206, worst -0.06734293699264526
10 lb beta sum: 1.5942620038986206, worst -0.06732290983200073
Time: prepare 0.0040    bound 0.1671    transfer 0.0007    finalize 0.0017    func 0.1741    
Accumulated time: func 4.3822    prepare 0.1044    bound 4.1639    transfer 0.0265    finalize 0.0754    
all_split False
======================Cut inference begins======================
max lb tensor(0.23099881) min lb tensor(-0.06731671)
Number of Verified Splits: 26 of 82
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 28
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.008578300476074219 
BICCOS Cumulative time: 1.005467414855957
Preprocessing time: 0.002758026123046875 Inference time: 0.004155397415161133 Add cuts time: 0.0011074542999267578 Cut analysis time: 0.0005574226379394531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06732 (24), -0.06687 (24), -0.06616 (24), -0.05576 (24), -0.05553 (24), -0.05520 (24), -0.05491 (24), -0.04953 (24), -0.04917 (24), -0.04881 (24), -0.04780 (24), -0.03836 (24), -0.03768 (24), -0.03760 (24), -0.03755 (24), -0.03722 (24), -0.03700 (24), -0.03660 (24), -0.03637 (24), -0.02868 (24), 
Length of domains: 56
Time: pickout 0.0006    decision 0.0151    set_bounds 0.0037    solve 0.1742    add 0.0020    
Accumulated time: pickout 0.0251    decision 1.2242    set_bounds 0.3111    solve 4.1582    add 0.3147    
Current (lb-rhs): -0.06731671094894409
1454 domains visited
Cumulative time: 7.309961318969727

BaB round 23
batch: 56
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7851] [/input-12, 7851] [/input-12, 7851] [/input-12, 7851] [/input-12, 7851] [/input-12, 7851] [/input-12, 7851] [/input-12, 7851] [/input-12, 7851] [/input-12, 7851] 
cut re-enabled after branching node selection
0 lb beta sum: 1.5487077236175537, worst -0.07109558582305908
10 lb beta sum: 2.188417911529541, worst -0.06731420755386353
Time: prepare 0.0052    bound 0.1662    transfer 0.0006    finalize 0.0020    func 0.1749    
Accumulated time: func 4.5572    prepare 0.1098    bound 4.3301    transfer 0.0271    finalize 0.0774    
all_split False
======================Cut inference begins======================
max lb tensor(0.46644366) min lb tensor(-0.06730837)
Number of Verified Splits: 90 of 112
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 28
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.020884990692138672 
BICCOS Cumulative time: 1.0263524055480957
Preprocessing time: 0.0034983158111572266 Inference time: 0.014709234237670898 Add cuts time: 0.00213623046875 Cut analysis time: 0.0005412101745605469
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06731 (25), -0.06706 (25), -0.05573 (25), -0.05547 (25), -0.04935 (25), -0.04896 (25), -0.03832 (25), -0.03760 (25), -0.03748 (25), -0.03715 (25), -0.02868 (25), -0.02837 (25), -0.02244 (25), -0.02207 (25), -0.02055 (25), -0.01868 (25), -0.01788 (25), -0.01742 (25), -0.00865 (25), -0.00842 (25), 
Length of domains: 22
Time: pickout 0.0006    decision 0.0158    set_bounds 0.0049    solve 0.1750    add 0.0014    
Accumulated time: pickout 0.0257    decision 1.2400    set_bounds 0.3160    solve 4.3332    add 0.3161    
Current (lb-rhs): -0.06730836629867554
1476 domains visited
Cumulative time: 7.529099941253662

BaB round 24
batch: 22
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 718] [/input-12, 718] [/input-12, 718] [/input-12, 1766] [/input-12, 718] [/input-12, 718] [/input-12, 718] [/input-12, 718] [/input-12, 718] [/input-12, 718] 
cut re-enabled after branching node selection
0 lb beta sum: 1.96249258518219, worst -0.06153053045272827
10 lb beta sum: 1.96249258518219, worst -0.06150096654891968
Time: prepare 0.0023    bound 0.1656    transfer 0.0003    finalize 0.0019    func 0.1704    
Accumulated time: func 4.7276    prepare 0.1123    bound 4.4957    transfer 0.0274    finalize 0.0794    
all_split False
======================Cut inference begins======================
max lb tensor(0.00290620) min lb tensor(-0.06147140)
Number of Verified Splits: 3 of 44
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 28
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.0032873153686523438 
BICCOS Cumulative time: 1.029639720916748
Preprocessing time: 0.0015954971313476562 Inference time: 0.000553131103515625 Add cuts time: 0.0006146430969238281 Cut analysis time: 0.0005240440368652344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06147 (26), -0.06120 (26), -0.06062 (26), -0.06036 (26), -0.04973 (26), -0.04951 (26), -0.04850 (26), -0.04828 (26), -0.04322 (26), -0.04281 (26), -0.04237 (26), -0.04197 (26), -0.03234 (26), -0.03153 (26), -0.03128 (26), -0.03105 (26), -0.03098 (26), -0.03027 (26), -0.03000 (26), -0.02969 (26), 
Length of domains: 41
Time: pickout 0.0007    decision 0.0143    set_bounds 0.0021    solve 0.1706    add 0.0017    
Accumulated time: pickout 0.0264    decision 1.2543    set_bounds 0.3182    solve 4.5037    add 0.3178    
Current (lb-rhs): -0.061471402645111084
1517 domains visited
Cumulative time: 7.721867322921753

BaB round 25
batch: 41
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 8044] [/input-12, 8043] [/input-12, 8044] [/input-12, 3875] [/input-12, 1766] [/input-12, 8043] [/input-12, 8044] [/input-12, 1766] [/input-12, 8043] [/input-12, 1766] 
cut re-enabled after branching node selection
0 lb beta sum: 1.9415500164031982, worst -0.05875563621520996
10 lb beta sum: 1.9415500164031982, worst -0.058661699295043945
Time: prepare 0.0040    bound 0.1667    transfer 0.0005    finalize 0.0013    func 0.1731    
Accumulated time: func 4.9006    prepare 0.1164    bound 4.6624    transfer 0.0279    finalize 0.0806    
all_split False
======================Cut inference begins======================
max lb tensor(0.01582730) min lb tensor(-0.05864501)
Number of Verified Splits: 14 of 82
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 28
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.0065593719482421875 
BICCOS Cumulative time: 1.0361990928649902
Preprocessing time: 0.002691030502319336 Inference time: 0.0025577545166015625 Add cuts time: 0.0007708072662353516 Cut analysis time: 0.0005397796630859375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05865 (27), -0.05802 (27), -0.05695 (27), -0.05676 (27), -0.05556 (27), -0.05278 (27), -0.04562 (27), -0.04543 (27), -0.04441 (27), -0.04418 (27), -0.04043 (27), -0.04003 (27), -0.03948 (27), -0.03946 (27), -0.03905 (27), -0.03879 (27), -0.03860 (27), -0.03820 (27), -0.03549 (27), -0.03508 (27), 
Length of domains: 68
Time: pickout 0.0006    decision 0.0149    set_bounds 0.0037    solve 0.1732    add 0.0020    
Accumulated time: pickout 0.0270    decision 1.2692    set_bounds 0.3218    solve 4.6769    add 0.3198    
Current (lb-rhs): -0.058645009994506836
1585 domains visited
Cumulative time: 7.923222064971924

BaB round 26
batch: 68
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7597] [/input-12, 7597] [/input-12, 7597] [/input-12, 1765] [/input-12, 1963] [/input-12, 1766] [/input-12, 7597] [/input-12, 8043] [/input-12, 8044] [/input-12, 1963] 
cut re-enabled after branching node selection
0 lb beta sum: 1.9092503786087036, worst -0.056129395961761475
10 lb beta sum: 1.9092503786087036, worst -0.05608409643173218
Time: prepare 0.0063    bound 0.1658    transfer 0.0007    finalize 0.0032    func 0.1770    
Accumulated time: func 5.0776    prepare 0.1229    bound 4.8282    transfer 0.0286    finalize 0.0839    
all_split False
======================Cut inference begins======================
max lb tensor(0.03081203) min lb tensor(-0.05607790)
Number of Verified Splits: 55 of 136
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 31.
#cuts 1-3: 30
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.016389131546020508 
BICCOS Cumulative time: 1.0525882244110107
Preprocessing time: 0.004147052764892578 Inference time: 0.009911537170410156 Add cuts time: 0.001767873764038086 Cut analysis time: 0.0005626678466796875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05608 (28), -0.05507 (28), -0.05444 (28), -0.05420 (28), -0.05286 (28), -0.05108 (28), -0.05050 (28), -0.05020 (28), -0.04479 (28), -0.04465 (28), -0.04356 (28), -0.04340 (28), -0.03919 (28), -0.03862 (28), -0.03794 (28), -0.03744 (28), -0.03672 (28), -0.03643 (28), -0.03588 (28), -0.03558 (28), 
Length of domains: 81
Time: pickout 0.0010    decision 0.0164    set_bounds 0.0061    solve 0.1770    add 0.0021    
Accumulated time: pickout 0.0280    decision 1.2857    set_bounds 0.3280    solve 4.8539    add 0.3220    
Current (lb-rhs): -0.05607789754867554
1666 domains visited
Cumulative time: 8.142742395401001

BaB round 27
batch: 81
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 8043] [/input-12, 1963] [/input-12, 8043] [/input-12, 8044] [/input-12, 8043] [/input-12, 3882] [/input-12, 3882] [/input-12, 3882] [/input-12, 8043] [/input-12, 8043] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05938386917114258
10 lb beta sum: 1.1355373859405518, worst -0.053506672382354736
Time: prepare 0.0033    bound 0.1666    transfer 0.0013    finalize 0.0033    func 0.1757    
Accumulated time: func 5.2533    prepare 0.1264    bound 4.9948    transfer 0.0299    finalize 0.0872    
all_split False
======================Cut inference begins======================
max lb tensor(0.23750180) min lb tensor(-0.05350026)
Number of Verified Splits: 46 of 162
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 31.
#cuts 1-3: 30
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.015601158142089844 
BICCOS Cumulative time: 1.0681893825531006
Preprocessing time: 0.004957437515258789 Inference time: 0.00846409797668457 Add cuts time: 0.001611948013305664 Cut analysis time: 0.0005676746368408203
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05350 (29), -0.04975 (29), -0.04909 (29), -0.04887 (29), -0.04846 (29), -0.04793 (29), -0.04758 (29), -0.04706 (29), -0.04573 (29), -0.04511 (29), -0.04485 (29), -0.04446 (29), -0.04390 (29), -0.04359 (29), -0.04303 (29), -0.03772 (29), -0.03768 (29), -0.03648 (29), -0.03642 (29), -0.03625 (29), 
Length of domains: 116
Time: pickout 0.0007    decision 0.0171    set_bounds 0.0069    solve 0.1757    add 0.0026    
Accumulated time: pickout 0.0287    decision 1.3028    set_bounds 0.3349    solve 5.0296    add 0.3246    
Current (lb-rhs): -0.05350026488304138
1782 domains visited
Cumulative time: 8.361880540847778

BaB round 28
batch: 116
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 8042] [/input-12, 8042] [/input-12, 1766] [/input-12, 1963] [/input-12, 1963] [/input-12, 1766] [/input-12, 8042] [/input-12, 8042] [/input-12, 2012] [/input-12, 1963] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2814555168151855, worst -0.04997214674949646
10 lb beta sum: 1.2814555168151855, worst -0.04995259642601013
Time: prepare 0.0106    bound 0.1678    transfer 0.0013    finalize 0.0054    func 0.1866    
Accumulated time: func 5.4399    prepare 0.1372    bound 5.1625    transfer 0.0312    finalize 0.0926    
all_split False
======================Cut inference begins======================
max lb tensor(0.24216342) min lb tensor(-0.04994974)
Number of Verified Splits: 108 of 232
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 31
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.030223369598388672 
BICCOS Cumulative time: 1.0984127521514893
Preprocessing time: 0.006867647171020508 Inference time: 0.020145893096923828 Add cuts time: 0.0026068687438964844 Cut analysis time: 0.0006029605865478516
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04995 (30), -0.04974 (30), -0.04907 (30), -0.04886 (30), -0.04844 (30), -0.04789 (30), -0.04756 (30), -0.04699 (30), -0.04596 (30), -0.04570 (30), -0.04508 (30), -0.04483 (30), -0.04442 (30), -0.04386 (30), -0.04358 (30), -0.04297 (30), -0.03421 (30), -0.03414 (30), -0.03299 (30), -0.03291 (30), 
Length of domains: 124
Time: pickout 0.0015    decision 0.0191    set_bounds 0.0098    solve 0.1867    add 0.0033    
Accumulated time: pickout 0.0302    decision 1.3219    set_bounds 0.3447    solve 5.2163    add 0.3279    
Current (lb-rhs): -0.04994973540306091
1906 domains visited
Cumulative time: 8.613310098648071

BaB round 29
batch: 124
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2012] [/input-12, 1766] [/input-12, 2012] [/input-12, 2012] [/input-12, 2012] [/input-12, 2012] [/input-16, 31] [/input-12, 1766] [/input-12, 8042] [/input-12, 8042] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05179882049560547
10 lb beta sum: 1.010343074798584, worst -0.04589259624481201
Time: prepare 0.0051    bound 0.1742    transfer 0.0011    finalize 0.0033    func 0.1855    
Accumulated time: func 5.6254    prepare 0.1425    bound 5.3367    transfer 0.0324    finalize 0.0959    
all_split False
======================Cut inference begins======================
max lb tensor(0.29879498) min lb tensor(-0.04588699)
Number of Verified Splits: 100 of 248
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 35.
#cuts 1-3: 34
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.03006911277770996 
BICCOS Cumulative time: 1.1284818649291992
Preprocessing time: 0.007433414459228516 Inference time: 0.019232511520385742 Add cuts time: 0.0027871131896972656 Cut analysis time: 0.0006160736083984375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04589 (31), -0.04579 (31), -0.04502 (31), -0.04490 (31), -0.04484 (31), -0.04439 (31), -0.04396 (31), -0.04348 (31), -0.04191 (31), -0.04175 (31), -0.04135 (31), -0.04104 (31), -0.04095 (31), -0.04089 (31), -0.04084 (31), -0.04054 (31), -0.04035 (31), -0.04011 (31), -0.03997 (31), -0.03948 (31), 
Length of domains: 148
Time: pickout 0.0009    decision 0.0230    set_bounds 0.0105    solve 0.1855    add 0.0038    
Accumulated time: pickout 0.0311    decision 1.3448    set_bounds 0.3552    solve 5.4019    add 0.3317    
Current (lb-rhs): -0.045886993408203125
2054 domains visited
Cumulative time: 8.867883682250977

BaB round 30
batch: 148
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 31] [/input-12, 1963] [/input-16, 31] [/input-16, 31] [/input-12, 1766] [/input-12, 1766] [/input-12, 1766] [/input-16, 31] [/input-12, 2012] [/input-12, 1963] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.046405792236328125
10 lb beta sum: 1.2029935121536255, worst -0.034128785133361816
Time: prepare 0.0062    bound 0.1762    transfer 0.0013    finalize 0.0059    func 0.1916    
Accumulated time: func 5.8170    prepare 0.1490    bound 5.5129    transfer 0.0336    finalize 0.1018    
all_split False
======================Cut inference begins======================
max lb tensor(0.47705245) min lb tensor(-0.03405786)
Number of Verified Splits: 184 of 296
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 37
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.05005621910095215 
BICCOS Cumulative time: 1.1785380840301514
Preprocessing time: 0.008848190307617188 Inference time: 0.0376582145690918 Add cuts time: 0.0028901100158691406 Cut analysis time: 0.0006597042083740234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03406 (32), -0.03396 (32), -0.03391 (32), -0.03385 (32), -0.03314 (32), -0.03305 (32), -0.03300 (32), -0.03293 (32), -0.03287 (32), -0.03279 (32), -0.03236 (32), -0.03224 (32), -0.03194 (32), -0.03186 (32), -0.03142 (32), -0.03131 (32), -0.02943 (32), -0.02939 (32), -0.02859 (32), -0.02858 (32), 
Length of domains: 112
Time: pickout 0.0080    decision 0.0240    set_bounds 0.0128    solve 0.1917    add 0.0024    
Accumulated time: pickout 0.0391    decision 1.3689    set_bounds 0.3680    solve 5.5936    add 0.3341    
Current (lb-rhs): -0.0340578556060791
2166 domains visited
Cumulative time: 9.158052206039429

BaB round 31
batch: 112
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1766] [/input-12, 2154] [/input-12, 8042] [/input-12, 2154] [/input-12, 8042] [/input-12, 2154] [/input-12, 8042] [/input-12, 2154] [/input-12, 8042] [/input-12, 8042] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.042450904846191406
10 lb beta sum: 1.3779269456863403, worst -0.03167414665222168
Time: prepare 0.0047    bound 0.1675    transfer 0.0009    finalize 0.0031    func 0.1779    
Accumulated time: func 5.9948    prepare 0.1539    bound 5.6804    transfer 0.0346    finalize 0.1050    
all_split False
======================Cut inference begins======================
max lb tensor(0.47385955) min lb tensor(-0.03166193)
Number of Verified Splits: 150 of 224
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 37
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.041115522384643555 
BICCOS Cumulative time: 1.219653606414795
Preprocessing time: 0.006690263748168945 Inference time: 0.0312504768371582 Add cuts time: 0.002528667449951172 Cut analysis time: 0.0006461143493652344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03166 (33), -0.03160 (33), -0.03152 (33), -0.03149 (33), -0.03075 (33), -0.03069 (33), -0.03060 (33), -0.03057 (33), -0.03054 (33), -0.03042 (33), -0.03000 (33), -0.02983 (33), -0.02962 (33), -0.02949 (33), -0.02943 (33), -0.02923 (33), -0.02912 (33), -0.02907 (33), -0.02894 (33), -0.02892 (33), 
Length of domains: 74
Time: pickout 0.0051    decision 0.0194    set_bounds 0.0099    solve 0.1779    add 0.0022    
Accumulated time: pickout 0.0442    decision 1.3883    set_bounds 0.3779    solve 5.7715    add 0.3363    
Current (lb-rhs): -0.031661927700042725
2240 domains visited
Cumulative time: 9.414916276931763

BaB round 32
batch: 74
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1963] [/input-12, 1963] [/input-12, 1963] [/input-12, 1963] [/input-12, 1963] [/input-12, 1963] [/input-12, 8042] [/input-16, 31] [/input-12, 8042] [/input-16, 31] 
cut re-enabled after branching node selection
0 lb beta sum: 1.5584831237792969, worst -0.03166383504867554
10 lb beta sum: 1.5584831237792969, worst -0.03165668249130249
Time: prepare 0.0069    bound 0.1694    transfer 0.0007    finalize 0.0024    func 0.1805    
Accumulated time: func 6.1753    prepare 0.1610    bound 5.8498    transfer 0.0353    finalize 0.1074    
all_split False
======================Cut inference begins======================
max lb tensor(0.24521375) min lb tensor(-0.03164905)
Number of Verified Splits: 58 of 148
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 37
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.01844954490661621 
BICCOS Cumulative time: 1.2381031513214111
Preprocessing time: 0.004638671875 Inference time: 0.01159977912902832 Add cuts time: 0.0015735626220703125 Cut analysis time: 0.0006375312805175781
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03165 (34), -0.03158 (34), -0.03150 (34), -0.03148 (34), -0.03074 (34), -0.03068 (34), -0.03058 (34), -0.03056 (34), -0.03053 (34), -0.03039 (34), -0.02999 (34), -0.02983 (34), -0.02960 (34), -0.02947 (34), -0.02925 (34), -0.02907 (34), -0.02905 (34), -0.02896 (34), -0.02891 (34), -0.02876 (34), 
Length of domains: 90
Time: pickout 0.0009    decision 0.0169    set_bounds 0.0064    solve 0.1805    add 0.0026    
Accumulated time: pickout 0.0450    decision 1.4052    set_bounds 0.3843    solve 5.9520    add 0.3390    
Current (lb-rhs): -0.03164905309677124
2330 domains visited
Cumulative time: 9.641178131103516

BaB round 33
batch: 90
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 31] [/input-12, 2154] [/input-16, 31] [/input-12, 2154] [/input-16, 31] [/input-12, 2154] [/input-16, 31] [/input-12, 2154] [/input-16, 31] [/input-12, 2154] 
cut re-enabled after branching node selection
0 lb beta sum: 1.5689102411270142, worst -0.03164952993392944
10 lb beta sum: 1.5689102411270142, worst -0.03165191411972046
Time: prepare 0.0082    bound 0.1705    transfer 0.0026    finalize 0.0027    func 0.1852    
Accumulated time: func 6.3605    prepare 0.1694    bound 6.0204    transfer 0.0379    finalize 0.1101    
all_split False
======================Cut inference begins======================
max lb tensor(0.02565634) min lb tensor(-0.03164333)
Number of Verified Splits: 49 of 180
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 37
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.01774907112121582 
BICCOS Cumulative time: 1.255852222442627
Preprocessing time: 0.005382537841796875 Inference time: 0.010154008865356445 Add cuts time: 0.0015444755554199219 Cut analysis time: 0.0006680488586425781
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03164 (35), -0.03158 (35), -0.03150 (35), -0.03147 (35), -0.03074 (35), -0.03067 (35), -0.03058 (35), -0.03056 (35), -0.03052 (35), -0.03038 (35), -0.02999 (35), -0.02983 (35), -0.02959 (35), -0.02946 (35), -0.02914 (35), -0.02906 (35), -0.02894 (35), -0.02890 (35), -0.02884 (35), -0.02864 (35), 
Length of domains: 131
Time: pickout 0.0012    decision 0.0176    set_bounds 0.0077    solve 0.1853    add 0.0030    
Accumulated time: pickout 0.0462    decision 1.4228    set_bounds 0.3921    solve 6.1373    add 0.3420    
Current (lb-rhs): -0.0316433310508728
2461 domains visited
Cumulative time: 9.874254703521729

BaB round 34
batch: 131
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2012] [/input-12, 7009] [/input-12, 2012] [/input-12, 7009] [/input-12, 2012] [/input-12, 7009] [/input-12, 2012] [/input-12, 7009] [/input-12, 2012] [/input-12, 7009] 
cut re-enabled after branching node selection
0 lb beta sum: 1.5489846467971802, worst -0.031643807888031006
10 lb beta sum: 1.5489846467971802, worst -0.031665265560150146
Time: prepare 0.0121    bound 0.1743    transfer 0.0011    finalize 0.0033    func 0.1926    
Accumulated time: func 6.5531    prepare 0.1817    bound 6.1947    transfer 0.0389    finalize 0.1134    
all_split False
======================Cut inference begins======================
max lb tensor(0.02254844) min lb tensor(-0.03164333)
Number of Verified Splits: 102 of 262
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 37
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.03310275077819824 
BICCOS Cumulative time: 1.2889549732208252
Preprocessing time: 0.007881641387939453 Inference time: 0.021854639053344727 Add cuts time: 0.0027146339416503906 Cut analysis time: 0.0006518363952636719
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03164 (36), -0.03157 (36), -0.03150 (36), -0.03147 (36), -0.03073 (36), -0.03067 (36), -0.03058 (36), -0.03055 (36), -0.03051 (36), -0.03038 (36), -0.02998 (36), -0.02983 (36), -0.02959 (36), -0.02946 (36), -0.02907 (36), -0.02906 (36), -0.02890 (36), -0.02886 (36), -0.02875 (36), -0.02855 (36), 
Length of domains: 160
Time: pickout 0.0027    decision 0.0233    set_bounds 0.0110    solve 0.1927    add 0.0031    
Accumulated time: pickout 0.0489    decision 1.4460    set_bounds 0.4031    solve 6.3300    add 0.3451    
Current (lb-rhs): -0.0316433310508728
2621 domains visited
Cumulative time: 10.140933275222778

BaB round 35
batch: 160
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7009] [/input-12, 2012] [/input-12, 7009] [/input-12, 2012] [/input-12, 7009] [/input-12, 2012] [/input-12, 7009] [/input-12, 2012] [/input-12, 7009] [/input-12, 2012] 
cut re-enabled after branching node selection
0 lb beta sum: 1.5388240814208984, worst -0.0316433310508728
10 lb beta sum: 1.5388240814208984, worst -0.03166478872299194
Time: prepare 0.0148    bound 0.1740    transfer 0.0012    finalize 0.0040    func 0.1963    
Accumulated time: func 6.7493    prepare 0.1967    bound 6.3687    transfer 0.0402    finalize 0.1174    
all_split False
======================Cut inference begins======================
max lb tensor(0.02015471) min lb tensor(-0.03164333)
Number of Verified Splits: 132 of 320
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 37
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.041797637939453125 
BICCOS Cumulative time: 1.3307526111602783
Preprocessing time: 0.009424209594726562 Inference time: 0.029830455780029297 Add cuts time: 0.0018994808197021484 Cut analysis time: 0.0006434917449951172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03164 (37), -0.03157 (37), -0.03150 (37), -0.03147 (37), -0.03073 (37), -0.03067 (37), -0.03058 (37), -0.03055 (37), -0.03051 (37), -0.03037 (37), -0.02998 (37), -0.02982 (37), -0.02958 (37), -0.02946 (37), -0.02906 (37), -0.02901 (37), -0.02867 (37), -0.02847 (37), -0.02758 (37), -0.02753 (37), 
Length of domains: 188
Time: pickout 0.0011    decision 0.0251    set_bounds 0.0135    solve 0.1963    add 0.0039    
Accumulated time: pickout 0.0500    decision 1.4711    set_bounds 0.4166    solve 6.5263    add 0.3490    
Current (lb-rhs): -0.0316433310508728
2809 domains visited
Cumulative time: 10.423532247543335

BaB round 36
batch: 188
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3359] [/input-12, 3359] [/input-12, 3359] [/input-12, 3359] [/input-12, 3359] [/input-12, 3359] [/input-12, 3359] [/input-12, 3359] [/input-12, 3359] [/input-12, 3359] 
cut re-enabled after branching node selection
0 lb beta sum: 1.5331456661224365, worst -0.03037971258163452
10 lb beta sum: 1.5331456661224365, worst -0.030398786067962646
Time: prepare 0.0170    bound 0.1706    transfer 0.0015    finalize 0.0076    func 0.1992    
Accumulated time: func 6.9485    prepare 0.2139    bound 6.5393    transfer 0.0417    finalize 0.1250    
all_split False
======================Cut inference begins======================
max lb tensor(0.01939893) min lb tensor(-0.03037637)
Number of Verified Splits: 157 of 376
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 37
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.0498652458190918 
BICCOS Cumulative time: 1.3806178569793701
Preprocessing time: 0.010980844497680664 Inference time: 0.03612518310546875 Add cuts time: 0.0021212100982666016 Cut analysis time: 0.0006380081176757812
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03038 (38), -0.03031 (38), -0.03023 (38), -0.03020 (38), -0.02942 (38), -0.02936 (38), -0.02926 (38), -0.02924 (38), -0.02923 (38), -0.02910 (38), -0.02871 (38), -0.02855 (38), -0.02827 (38), -0.02814 (38), -0.02773 (38), -0.02771 (38), -0.02758 (38), -0.02748 (38), -0.02733 (38), -0.02713 (38), 
Length of domains: 219
Time: pickout 0.0020    decision 0.0242    set_bounds 0.0162    solve 0.1993    add 0.0059    
Accumulated time: pickout 0.0520    decision 1.4953    set_bounds 0.4328    solve 6.7256    add 0.3549    
Current (lb-rhs): -0.0303763747215271
3028 domains visited
Cumulative time: 10.722006797790527

BaB round 37
batch: 219
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5277] [/input-12, 5277] [/input-12, 5277] [/input-12, 3884] [/input-12, 5277] [/input-12, 3884] [/input-12, 5277] [/input-12, 3884] [/input-12, 5277] [/input-12, 3884] 
cut re-enabled after branching node selection
0 lb beta sum: 1.53084135055542, worst -0.02890467643737793
10 lb beta sum: 1.53084135055542, worst -0.02889847755432129
Time: prepare 0.0198    bound 0.1751    transfer 0.0016    finalize 0.0064    func 0.2058    
Accumulated time: func 7.1544    prepare 0.2338    bound 6.7145    transfer 0.0433    finalize 0.1314    
all_split False
======================Cut inference begins======================
max lb tensor(0.01876664) min lb tensor(-0.02889752)
Number of Verified Splits: 212 of 438
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 40.
#cuts 1-3: 39
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.06579065322875977 
BICCOS Cumulative time: 1.4464085102081299
Preprocessing time: 0.012813806533813477 Inference time: 0.049724578857421875 Add cuts time: 0.002575397491455078 Cut analysis time: 0.0006768703460693359
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02890 (39), -0.02882 (39), -0.02879 (39), -0.02796 (39), -0.02784 (39), -0.02711 (39), -0.02613 (39), -0.02590 (39), -0.02587 (39), -0.02586 (39), -0.02551 (39), -0.02529 (39), -0.02506 (39), -0.02493 (39), -0.02451 (39), -0.02443 (39), -0.02431 (39), -0.02410 (39), -0.02403 (39), -0.02381 (39), 
Length of domains: 226
Time: pickout 0.0018    decision 0.0291    set_bounds 0.0187    solve 0.2066    add 0.0137    
Accumulated time: pickout 0.0537    decision 1.5244    set_bounds 0.4514    solve 6.9322    add 0.3686    
Current (lb-rhs): -0.028897523880004883
3254 domains visited
Cumulative time: 11.059154033660889

BaB round 38
batch: 226
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3884] [/input-12, 3884] [/input-12, 3884] [/input-4, 2743] [/input-12, 3884] [/input-4, 2743] [/input-12, 3884] [/input-4, 2743] [/input-12, 3884] [/input-4, 2743] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.026946544647216797
10 lb beta sum: 0.45878398418426514, worst -0.025700092315673828
Time: prepare 0.0096    bound 0.1788    transfer 0.0017    finalize 0.0065    func 0.1995    
Accumulated time: func 7.3538    prepare 0.2437    bound 6.8932    transfer 0.0450    finalize 0.1379    
all_split False
======================Cut inference begins======================
max lb tensor(0.02141710) min lb tensor(-0.02569628)
Number of Verified Splits: 269 of 452
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 41.
#cuts 1-3: 40
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.08032798767089844 
BICCOS Cumulative time: 1.5267364978790283
Preprocessing time: 0.013256311416625977 Inference time: 0.06339168548583984 Add cuts time: 0.002972126007080078 Cut analysis time: 0.0007078647613525391
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02570 (40), -0.02565 (40), -0.02546 (40), -0.02544 (40), -0.02475 (40), -0.02471 (40), -0.02464 (40), -0.02449 (40), -0.02447 (40), -0.02447 (40), -0.02410 (40), -0.02388 (40), -0.02364 (40), -0.02350 (40), -0.02312 (40), -0.02303 (40), -0.02290 (40), -0.02269 (40), -0.02264 (40), -0.02240 (40), 
Length of domains: 183
Time: pickout 0.0074    decision 0.0297    set_bounds 0.0189    solve 0.1996    add 0.0034    
Accumulated time: pickout 0.0611    decision 1.5542    set_bounds 0.4703    solve 7.1318    add 0.3720    
Current (lb-rhs): -0.025696277618408203
3437 domains visited
Cumulative time: 11.400070190429688

BaB round 39
batch: 183
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-4, 2743] [/input-4, 2743] [/input-4, 2743] [/input-4, 2743] [/input-4, 2743] [/input-12, 2154] [/input-12, 2154] [/input-12, 2154] [/input-12, 2154] [/input-12, 2154] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.022556304931640625
10 lb beta sum: 0.4571499824523926, worst -0.021279335021972656
Time: prepare 0.0076    bound 0.1772    transfer 0.0014    finalize 0.0054    func 0.1940    
Accumulated time: func 7.5479    prepare 0.2515    bound 7.0704    transfer 0.0464    finalize 0.1433    
all_split False
======================Cut inference begins======================
max lb tensor(0.24371910) min lb tensor(-0.02127028)
Number of Verified Splits: 196 of 366
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 41.
#cuts 1-3: 40
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.06135106086730957 
BICCOS Cumulative time: 1.588087558746338
Preprocessing time: 0.010788917541503906 Inference time: 0.04758167266845703 Add cuts time: 0.00229644775390625 Cut analysis time: 0.0006840229034423828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02127 (41), -0.02103 (41), -0.02101 (41), -0.02055 (41), -0.02043 (41), -0.02034 (41), -0.02034 (41), -0.02030 (41), -0.02025 (41), -0.02021 (41), -0.02019 (41), -0.02005 (41), -0.02005 (41), -0.02004 (41), -0.01966 (41), -0.01943 (41), -0.01934 (41), -0.01934 (41), -0.01926 (41), -0.01924 (41), 
Length of domains: 170
Time: pickout 0.0013    decision 0.0268    set_bounds 0.0156    solve 0.1941    add 0.0032    
Accumulated time: pickout 0.0624    decision 1.5810    set_bounds 0.4859    solve 7.3259    add 0.3752    
Current (lb-rhs): -0.021270275115966797
3607 domains visited
Cumulative time: 11.703833818435669

BaB round 40
batch: 170
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3364] [/input-12, 3364] [/input-12, 3364] [/input-12, 3364] [/input-12, 3364] [/input-12, 3364] [/input-12, 3364] [/input-12, 3364] [/input-12, 3364] [/input-12, 3364] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6807683706283569, worst -0.016517475247383118
10 lb beta sum: 0.6807683706283569, worst -0.016475513577461243
Time: prepare 0.0156    bound 0.1760    transfer 0.0013    finalize 0.0041    func 0.1998    
Accumulated time: func 7.7477    prepare 0.2673    bound 7.2464    transfer 0.0477    finalize 0.1474    
all_split False
======================Cut inference begins======================
max lb tensor(0.01268896) min lb tensor(-0.01645119)
Number of Verified Splits: 135 of 340
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 41.
#cuts 1-3: 40
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.046172142028808594 
BICCOS Cumulative time: 1.6342597007751465
Preprocessing time: 0.01015782356262207 Inference time: 0.03350424766540527 Add cuts time: 0.001840353012084961 Cut analysis time: 0.0006697177886962891
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01645 (42), -0.01613 (42), -0.01612 (42), -0.01596 (42), -0.01592 (42), -0.01583 (42), -0.01583 (42), -0.01581 (42), -0.01580 (42), -0.01558 (42), -0.01525 (42), -0.01523 (42), -0.01522 (42), -0.01518 (42), -0.01517 (42), -0.01516 (42), -0.01516 (42), -0.01508 (42), -0.01508 (42), -0.01506 (42), 
Length of domains: 205
Time: pickout 0.0016    decision 0.0253    set_bounds 0.0146    solve 0.1999    add 0.0041    
Accumulated time: pickout 0.0640    decision 1.6063    set_bounds 0.5006    solve 7.5258    add 0.3792    
Current (lb-rhs): -0.016451194882392883
3812 domains visited
Cumulative time: 11.996392488479614

BaB round 41
Cut Inference reaches max iterations. Recover the setting
batch: 205
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1964] [/input-12, 1964] [/input-12, 1964] [/input-12, 1964] [/input-12, 1964] [/input-12, 1964] [/input-12, 1964] [/input-12, 1964] [/input-12, 1964] [/input-12, 1964] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6427637338638306, worst -0.014478996396064758
10 lb beta sum: 0.6427637338638306, worst -0.014472320675849915
Time: prepare 0.0185    bound 0.1795    transfer 0.0015    finalize 0.0056    func 0.2079    
Accumulated time: func 7.9556    prepare 0.2860    bound 7.4259    transfer 0.0492    finalize 0.1530    
all_split False
======================Cut inference begins======================
max lb tensor(0.01271954) min lb tensor(-0.01446612)
Number of Verified Splits: 241 of 410
Stop inferencing: Max iteration reached.
Total number of valid cuts: 41.
#cuts 1-3: 40
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.00035691261291503906 
BICCOS Cumulative time: 1.6346166133880615
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01447 (43), -0.01405 (43), -0.01401 (43), -0.01391 (43), -0.01385 (43), -0.01370 (43), -0.01367 (43), -0.01364 (43), -0.01363 (43), -0.01353 (43), -0.01314 (43), -0.01312 (43), -0.01311 (43), -0.01309 (43), -0.01309 (43), -0.01308 (43), -0.01296 (43), -0.01293 (43), -0.01293 (43), -0.01292 (43), 
Length of domains: 169
Time: pickout 0.0010    decision 0.0275    set_bounds 0.0176    solve 0.2080    add 0.0031    
Accumulated time: pickout 0.0650    decision 1.6338    set_bounds 0.5181    solve 7.7338    add 0.3823    
Current (lb-rhs): -0.014466121792793274
3981 domains visited
Cumulative time: 12.255326986312866

BaB round 42
batch: 169
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6490] [/input-12, 6490] [/input-12, 6490] [/input-12, 6490] [/input-12, 6490] [/input-12, 6490] [/input-12, 6490] [/input-12, 6490] [/input-12, 6490] [/input-12, 6490] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5910958647727966, worst -0.012718677520751953
10 lb beta sum: 0.5910958647727966, worst -0.012715339660644531
Time: prepare 0.0154    bound 0.1760    transfer 0.0014    finalize 0.0042    func 0.1992    
Accumulated time: func 8.1548    prepare 0.3015    bound 7.6019    transfer 0.0506    finalize 0.1572    
all_split False
======================Cut inference begins======================
max lb tensor(0.01432371) min lb tensor(-0.01270819)
Number of Verified Splits: 209 of 338
Stop inferencing: Max iteration reached.
Total number of valid cuts: 41.
#cuts 1-3: 40
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.0003516674041748047 
BICCOS Cumulative time: 1.6349682807922363
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01271 (44), -0.01267 (44), -0.01256 (44), -0.01251 (44), -0.01235 (44), -0.01233 (44), -0.01231 (44), -0.01229 (44), -0.01182 (44), -0.01181 (44), -0.01178 (44), -0.01177 (44), -0.01176 (44), -0.01175 (44), -0.01166 (44), -0.01164 (44), -0.01159 (44), -0.01157 (44), -0.01157 (44), -0.01151 (44), 
Length of domains: 129
Time: pickout 0.0011    decision 0.0252    set_bounds 0.0145    solve 0.1993    add 0.0035    
Accumulated time: pickout 0.0661    decision 1.6590    set_bounds 0.5327    solve 7.9331    add 0.3858    
Current (lb-rhs): -0.012708187103271484
4110 domains visited
Cumulative time: 12.500420331954956

BaB round 43
batch: 129
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7795] [/input-12, 7795] [/input-12, 1765] [/input-12, 1765] [/input-12, 7795] [/input-12, 1765] [/input-12, 3875] [/input-12, 1765] [/input-12, 1765] [/input-12, 3875] 
cut re-enabled after branching node selection
0 lb beta sum: 0.582389771938324, worst -0.010757923126220703
10 lb beta sum: 0.582389771938324, worst -0.010746955871582031
Time: prepare 0.0117    bound 0.1745    transfer 0.0011    finalize 0.0034    func 0.1924    
Accumulated time: func 8.3471    prepare 0.3135    bound 7.7764    transfer 0.0517    finalize 0.1606    
all_split False
======================Cut inference begins======================
max lb tensor(0.01630656) min lb tensor(-0.01073217)
Number of Verified Splits: 130 of 258
Stop inferencing: Max iteration reached.
Total number of valid cuts: 41.
#cuts 1-3: 40
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.0003552436828613281 
BICCOS Cumulative time: 1.6353235244750977
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01073 (45), -0.01071 (45), -0.01061 (45), -0.01056 (45), -0.01048 (45), -0.01044 (45), -0.01039 (45), -0.01036 (45), -0.00997 (45), -0.00997 (45), -0.00981 (45), -0.00980 (45), -0.00980 (45), -0.00977 (45), -0.00977 (45), -0.00975 (45), -0.00974 (45), -0.00967 (45), -0.00959 (45), -0.00959 (45), 
Length of domains: 128
Time: pickout 0.0084    decision 0.0224    set_bounds 0.0115    solve 0.1925    add 0.0032    
Accumulated time: pickout 0.0745    decision 1.6814    set_bounds 0.5442    solve 8.1255    add 0.3890    
Current (lb-rhs): -0.010732173919677734
4238 domains visited
Cumulative time: 12.73949146270752

BaB round 44
batch: 128
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1765] [/input-12, 1765] [/input-12, 1765] [/input-12, 1765] [/input-12, 1765] [/input-12, 1765] [/input-12, 1765] [/input-12, 1765] [/input-12, 1765] [/input-12, 1765] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5833190679550171, worst -0.008920669555664062
10 lb beta sum: 0.5833190679550171, worst -0.00890970230102539
Time: prepare 0.0116    bound 0.1713    transfer 0.0011    finalize 0.0035    func 0.1893    
Accumulated time: func 8.5365    prepare 0.3253    bound 7.9477    transfer 0.0527    finalize 0.1641    
all_split False
======================Cut inference begins======================
max lb tensor(0.01450336) min lb tensor(-0.00889874)
Number of Verified Splits: 128 of 256
Stop inferencing: Max iteration reached.
Total number of valid cuts: 41.
#cuts 1-3: 40
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.00034332275390625 
BICCOS Cumulative time: 1.635666847229004
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00890 (46), -0.00888 (46), -0.00877 (46), -0.00871 (46), -0.00855 (46), -0.00853 (46), -0.00853 (46), -0.00850 (46), -0.00800 (46), -0.00799 (46), -0.00786 (46), -0.00783 (46), -0.00783 (46), -0.00783 (46), -0.00779 (46), -0.00777 (46), -0.00777 (46), -0.00771 (46), -0.00763 (46), -0.00762 (46), 
Length of domains: 128
Time: pickout 0.0009    decision 0.0198    set_bounds 0.0110    solve 0.1894    add 0.0030    
Accumulated time: pickout 0.0754    decision 1.7012    set_bounds 0.5551    solve 8.3149    add 0.3920    
Current (lb-rhs): -0.008898735046386719
4366 domains visited
Cumulative time: 12.964518547058105

BaB round 45
batch: 128
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3500] [/input-12, 3500] [/input-12, 3500] [/input-12, 3500] [/input-12, 3500] [/input-12, 3500] [/input-12, 3500] [/input-12, 3500] [/input-12, 3500] [/input-12, 3500] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5833190679550171, worst -0.006845951080322266
10 lb beta sum: 0.5833190679550171, worst -0.006785392761230469
Time: prepare 0.0116    bound 0.1670    transfer 0.0010    finalize 0.0031    func 0.1845    
Accumulated time: func 8.7209    prepare 0.3371    bound 8.1147    transfer 0.0537    finalize 0.1673    
all_split False
======================Cut inference begins======================
max lb tensor(0.00925966) min lb tensor(-0.00676823)
Number of Verified Splits: 128 of 256
Stop inferencing: Max iteration reached.
Total number of valid cuts: 41.
#cuts 1-3: 40
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.00034809112548828125 
BICCOS Cumulative time: 1.6360149383544922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00677 (47), -0.00676 (47), -0.00667 (47), -0.00660 (47), -0.00642 (47), -0.00641 (47), -0.00639 (47), -0.00637 (47), -0.00586 (47), -0.00585 (47), -0.00574 (47), -0.00572 (47), -0.00571 (47), -0.00570 (47), -0.00569 (47), -0.00566 (47), -0.00562 (47), -0.00562 (47), -0.00552 (47), -0.00550 (47), 
Length of domains: 128
Time: pickout 0.0009    decision 0.0201    set_bounds 0.0109    solve 0.1845    add 0.0026    
Accumulated time: pickout 0.0763    decision 1.7212    set_bounds 0.5660    solve 8.4994    add 0.3946    
Current (lb-rhs): -0.006768226623535156
4494 domains visited
Cumulative time: 13.184487342834473

BaB round 46
batch: 128
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-4, 3820] [/input-4, 3820] [/input-4, 3820] [/input-4, 3820] [/input-4, 3820] [/input-12, 6490] [/input-4, 3820] [/input-4, 3820] [/input-12, 4217] [/input-4, 3820] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5833190679550171, worst -0.004665374755859375
10 lb beta sum: 0.5833190679550171, worst -0.004664897918701172
Time: prepare 0.0124    bound 0.1680    transfer 0.0010    finalize 0.0033    func 0.1864    
Accumulated time: func 8.9074    prepare 0.3496    bound 8.2828    transfer 0.0548    finalize 0.1705    
all_split False
======================Cut inference begins======================
max lb tensor(0.00483322) min lb tensor(-0.00466013)
Number of Verified Splits: 144 of 256
Stop inferencing: Max iteration reached.
Total number of valid cuts: 41.
#cuts 1-3: 40
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.0003292560577392578 
BICCOS Cumulative time: 1.6363441944122314
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00466 (48), -0.00460 (48), -0.00449 (48), -0.00441 (48), -0.00426 (48), -0.00424 (48), -0.00419 (48), -0.00418 (48), -0.00369 (48), -0.00369 (48), -0.00361 (48), -0.00358 (48), -0.00354 (48), -0.00353 (48), -0.00352 (48), -0.00351 (48), -0.00351 (48), -0.00351 (48), -0.00334 (48), -0.00333 (48), 
Length of domains: 112
Time: pickout 0.0008    decision 0.0197    set_bounds 0.0090    solve 0.1865    add 0.0024    
Accumulated time: pickout 0.0771    decision 1.7409    set_bounds 0.5750    solve 8.6860    add 0.3971    
Current (lb-rhs): -0.004660129547119141
4606 domains visited
Cumulative time: 13.403971672058105

BaB round 47
batch: 112
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6490] [/input-12, 4217] [/input-12, 4217] [/input-12, 6490] [/input-12, 4217] [/input-12, 6490] [/input-12, 6490] [/input-12, 6490] [/input-12, 6490] [/input-12, 6490] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5254663825035095, worst -0.002494335174560547
10 lb beta sum: 0.5254663825035095, worst -0.002490997314453125
Time: prepare 0.0112    bound 0.1673    transfer 0.0009    finalize 0.0030    func 0.1839    
Accumulated time: func 9.0913    prepare 0.3610    bound 8.4501    transfer 0.0557    finalize 0.1736    
all_split False
======================Cut inference begins======================
max lb tensor(0.00468774) min lb tensor(-0.00248575)
Number of Verified Splits: 179 of 224
Stop inferencing: Max iteration reached.
Total number of valid cuts: 41.
#cuts 1-3: 40
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.0003638267517089844 
BICCOS Cumulative time: 1.6367080211639404
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00249 (49), -0.00245 (49), -0.00238 (49), -0.00230 (49), -0.00214 (49), -0.00213 (49), -0.00207 (49), -0.00207 (49), -0.00158 (49), -0.00158 (49), -0.00147 (49), -0.00143 (49), -0.00141 (49), -0.00139 (49), -0.00139 (49), -0.00133 (49), -0.00130 (49), -0.00129 (49), -0.00123 (49), -0.00121 (49), 
Length of domains: 45
Time: pickout 0.0008    decision 0.0190    set_bounds 0.0081    solve 0.1840    add 0.0019    
Accumulated time: pickout 0.0780    decision 1.7599    set_bounds 0.5832    solve 8.8699    add 0.3989    
Current (lb-rhs): -0.0024857521057128906
4651 domains visited
Cumulative time: 13.618946313858032

BaB round 48
batch: 45
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4217] [/input-12, 4217] [/input-12, 4217] [/input-12, 4217] [/input-12, 4217] [/input-12, 4217] [/input-12, 4217] [/input-12, 4217] [/input-12, 4217] [/input-12, 4217] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4021652042865753, worst 0.0004553794860839844

all verified at 0th iter
Time: prepare 0.0049    bound 0.0067    transfer 0.0005    finalize 0.0020    func 0.0147    
Accumulated time: func 9.1060    prepare 0.3661    bound 8.4567    transfer 0.0561    finalize 0.1756    
all_split False
======================Cut inference begins======================
max lb tensor(0.00414605) min lb tensor(0.00045538)
Number of Verified Splits: 90 of 90
Stop inferencing: Max iteration reached.
Total number of valid cuts: 41.
#cuts 1-3: 40
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.00030493736267089844 
BICCOS Cumulative time: 1.6370129585266113
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0009    decision 0.0151    set_bounds 0.0040    solve 0.0147    add 0.0001    
Accumulated time: pickout 0.0788    decision 1.7750    set_bounds 0.5871    solve 8.8846    add 0.3990    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
4651 domains visited
Cumulative time: 13.654377698898315

Result: safe in 15.4818 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 84, vnnlib ID: 84 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-50.59220505, -55.06743622, -46.66724777, -49.18698120, -45.62823105,
         -48.53977203, -47.17492294, -50.40128326, -54.03730392, -54.02929688]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1322]; unstable size 1322; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 465, 1, 1322] with unstable size 464 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 21, 1, 1322] with unstable size 20 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1322] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [464]; unstable size 464; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 21, 1, 464] with unstable size 20 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 464] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [20]; unstable size 20; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.88680124, 7.68868065, 0.51492268, 2.92880058, 2.26077938, 0.43395656,
         3.90024805, 7.18071365, 7.03746367]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0414 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 85, vnnlib ID: 85 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-76.36595917, -72.30648041, -78.74973297, -79.24961090, -78.19865417,
         -79.61373138, -78.28600311, -78.96929932, -74.57076263, -76.01760101]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1193]; unstable size 1193; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 84, 1, 1193] with unstable size 83 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 34, 1, 1193] with unstable size 33 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1193] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [554]; unstable size 554; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 34, 1, 554] with unstable size 33 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 554] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [33]; unstable size 33; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.22719669, 4.10300732, 4.85118484, 3.46767712, 5.19542313, 3.88067293,
         4.28677416, 0.54820919, 2.45964146]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0366 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 86, vnnlib ID: 86 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-41.30177307, -44.34310913, -38.48180389, -40.76507187, -40.35825729,
         -40.60755157, -41.81866074, -40.86270142, -43.57927322, -43.58280182]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1601]; unstable size 1601; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 86, 1, 1601] with unstable size 85 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 15, 1, 1601] with unstable size 14 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1601] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [516]; unstable size 516; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 15, 1, 516] with unstable size 14 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 516] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [14]; unstable size 14; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.92118335, 4.46028996, 1.52684605, 1.22757220, 1.37352955, 2.32750368,
         1.64440870, 4.18956089, 3.81090689]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0361 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 87, vnnlib ID: 87 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-44.86952591, -44.05451965, -41.05271912, -40.80325699, -39.44380951,
         -40.82028580, -39.63182831, -39.83110046, -46.47972488, -43.04592133]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1143]; unstable size 1143; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 87, 1, 1143] with unstable size 86 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 43, 1, 1143] with unstable size 42 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1143] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [651]; unstable size 651; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 43, 1, 651] with unstable size 42 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 651] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [42]; unstable size 42; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 42] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.31224537,  1.84035313, -0.67234612, -0.57651567, -1.94292188,
         -0.54148054, -2.22729301,  4.01652050,  0.91194755]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-44.86952591, -44.05451965, -41.05271912, -40.80325699, -39.44380951,
         -40.82028580, -39.63182831, -39.83110046, -46.47972488, -43.04592133]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-44.86952972, -44.05452347, -41.05271149, -40.80325317, -39.44380951,
          -40.82028580, -39.63182449, -39.83110046, -46.47972870, -43.04592133],
         [-44.86952972, -44.05452347, -41.05271149, -40.80325317, -39.44380951,
          -40.82028580, -39.63182449, -39.83110046, -46.47972870, -43.04592133]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.22161102,  0.97215271, -0.38729095,  0.98918533, -0.19927597]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-1.06825387e+00, -1.29047608e+00, -9.25396800e-01,  ...,
            -6.55555546e-01, -8.14285696e-01, -7.50793636e-01],
           [-9.88888860e-01, -1.02063489e+00, -1.00476182e+00,  ...,
            -7.34920621e-01, -1.17936504e+00, -1.02063489e+00],
           [-1.00476182e+00, -7.66666651e-01, -8.14285696e-01,  ...,
            -1.00476182e+00, -1.17936504e+00, -1.09999990e+00],
           ...,
           [-1.51269829e+00, -2.90476084e-01,  9.00000036e-01,  ...,
             5.66666722e-01,  6.77777827e-01,  6.14285767e-01],
           [-7.66666651e-01,  5.98412752e-01,  9.31746066e-01,  ...,
             2.17460394e-01,  2.65079439e-01,  5.50793707e-01],
           [-1.79364979e-01,  9.63492095e-01,  8.84127021e-01,  ...,
             2.96825469e-01,  2.17460394e-01,  5.98412752e-01]],

          [[-9.33977425e-01, -1.27214170e+00, -9.33977425e-01,  ...,
            -7.08534598e-01, -8.85668218e-01, -8.21255982e-01],
           [-8.37359071e-01, -9.98389661e-01, -1.01449275e+00,  ...,
            -7.56843746e-01, -1.20772946e+00, -1.06280184e+00],
           [-8.53462100e-01, -7.40740716e-01, -8.21255982e-01,  ...,
            -9.82286572e-01, -1.15942025e+00, -1.09500802e+00],
           ...,
           [-1.65861523e+00, -5.15297890e-01,  5.95813274e-01,  ...,
             1.93236828e-01,  2.89855182e-01,  1.93236828e-01],
           [-9.17874336e-01,  3.70370477e-01,  6.11916363e-01,  ...,
            -1.93236589e-01, -1.44927412e-01,  1.61030710e-01],
           [-4.18679416e-01,  6.44122481e-01,  5.15298009e-01,  ...,
            -1.28824353e-01, -1.93236589e-01,  1.93236828e-01]],

          [[-6.28185868e-01, -1.06296861e+00, -8.38080943e-01,  ...,
            -5.53223372e-01, -6.88155890e-01, -5.98200858e-01],
           [-6.73163414e-01, -8.68065953e-01, -8.83058429e-01,  ...,
            -5.08245826e-01, -8.98050964e-01, -7.18140900e-01],
           [-6.28185868e-01, -6.13193393e-01, -7.18140900e-01,  ...,
            -7.93103397e-01, -9.28035975e-01, -8.23088408e-01],
           ...,
           [-1.48275876e+00, -7.48125911e-01,  2.11394474e-01,  ...,
             1.49940979e-03,  1.06446937e-01, -1.34930937e-02],
           [-8.98050964e-01,  1.49940979e-03,  1.81409463e-01,  ...,
            -3.73313308e-01, -3.58320802e-01, -1.18440613e-01],
           [-4.63268340e-01,  3.16341996e-01,  1.36431947e-01,  ...,
            -2.83358276e-01, -3.73313308e-01, -4.34781015e-02]]],


         [[[-1.06825387e+00, -1.29047608e+00, -9.25396800e-01,  ...,
            -6.55555546e-01, -8.14285696e-01, -7.50793636e-01],
           [-9.88888860e-01, -1.02063489e+00, -1.00476182e+00,  ...,
            -7.34920621e-01, -1.17936504e+00, -1.02063489e+00],
           [-1.00476182e+00, -7.66666651e-01, -8.14285696e-01,  ...,
            -1.00476182e+00, -1.17936504e+00, -1.09999990e+00],
           ...,
           [-1.51269829e+00, -2.90476084e-01,  9.00000036e-01,  ...,
             5.66666722e-01,  6.77777827e-01,  6.14285767e-01],
           [-7.66666651e-01,  5.98412752e-01,  9.31746066e-01,  ...,
             2.17460394e-01,  2.65079439e-01,  5.50793707e-01],
           [-1.79364979e-01,  9.63492095e-01,  8.84127021e-01,  ...,
             2.96825469e-01,  2.17460394e-01,  5.98412752e-01]],

          [[-9.33977425e-01, -1.27214170e+00, -9.33977425e-01,  ...,
            -7.08534598e-01, -8.85668218e-01, -8.21255982e-01],
           [-8.37359071e-01, -9.98389661e-01, -1.01449275e+00,  ...,
            -7.56843746e-01, -1.20772946e+00, -1.06280184e+00],
           [-8.53462100e-01, -7.40740716e-01, -8.21255982e-01,  ...,
            -9.82286572e-01, -1.15942025e+00, -1.09500802e+00],
           ...,
           [-1.65861523e+00, -5.15297890e-01,  5.95813274e-01,  ...,
             1.93236828e-01,  2.89855182e-01,  1.93236828e-01],
           [-9.17874336e-01,  3.70370477e-01,  6.11916363e-01,  ...,
            -1.93236589e-01, -1.44927412e-01,  1.61030710e-01],
           [-4.18679416e-01,  6.44122481e-01,  5.15298009e-01,  ...,
            -1.28824353e-01, -1.93236589e-01,  1.93236828e-01]],

          [[-6.28185868e-01, -1.06296861e+00, -8.38080943e-01,  ...,
            -5.53223372e-01, -6.88155890e-01, -5.98200858e-01],
           [-6.73163414e-01, -8.68065953e-01, -8.83058429e-01,  ...,
            -5.08245826e-01, -8.98050964e-01, -7.18140900e-01],
           [-6.28185868e-01, -6.13193393e-01, -7.18140900e-01,  ...,
            -7.93103397e-01, -9.28035975e-01, -8.23088408e-01],
           ...,
           [-1.48275876e+00, -7.48125911e-01,  2.11394474e-01,  ...,
             1.49940979e-03,  1.06446937e-01, -1.34930937e-02],
           [-8.98050964e-01,  1.49940979e-03,  1.81409463e-01,  ...,
            -3.73313308e-01, -3.58320802e-01, -1.18440613e-01],
           [-4.63268340e-01,  3.16341996e-01,  1.36431947e-01,  ...,
            -2.83358276e-01, -3.73313308e-01, -4.34781015e-02]]],


         [[[-1.06825387e+00, -1.29047608e+00, -9.25396800e-01,  ...,
            -6.55555546e-01, -8.14285696e-01, -7.50793636e-01],
           [-9.88888860e-01, -1.02063489e+00, -1.00476182e+00,  ...,
            -7.34920621e-01, -1.17936504e+00, -1.02063489e+00],
           [-1.00476182e+00, -7.66666651e-01, -8.14285696e-01,  ...,
            -1.00476182e+00, -1.17936504e+00, -1.09999990e+00],
           ...,
           [-1.51269829e+00, -2.90476084e-01,  9.00000036e-01,  ...,
             5.66666722e-01,  6.77777827e-01,  6.14285767e-01],
           [-7.66666651e-01,  5.98412752e-01,  9.31746066e-01,  ...,
             2.17460394e-01,  2.65079439e-01,  5.50793707e-01],
           [-1.79364979e-01,  9.63492095e-01,  8.84127021e-01,  ...,
             2.96825469e-01,  2.17460394e-01,  5.98412752e-01]],

          [[-9.33977425e-01, -1.27214170e+00, -9.33977425e-01,  ...,
            -7.08534598e-01, -8.85668218e-01, -8.21255982e-01],
           [-8.37359071e-01, -9.98389661e-01, -1.01449275e+00,  ...,
            -7.56843746e-01, -1.20772946e+00, -1.06280184e+00],
           [-8.53462100e-01, -7.40740716e-01, -8.21255982e-01,  ...,
            -9.82286572e-01, -1.15942025e+00, -1.09500802e+00],
           ...,
           [-1.65861523e+00, -5.15297890e-01,  5.95813274e-01,  ...,
             1.93236828e-01,  2.89855182e-01,  1.93236828e-01],
           [-9.17874336e-01,  3.70370477e-01,  6.11916363e-01,  ...,
            -1.93236589e-01, -1.44927412e-01,  1.61030710e-01],
           [-4.18679416e-01,  6.44122481e-01,  5.15298009e-01,  ...,
            -1.28824353e-01, -1.93236589e-01,  1.93236828e-01]],

          [[-6.28185868e-01, -1.06296861e+00, -8.38080943e-01,  ...,
            -5.53223372e-01, -6.88155890e-01, -5.98200858e-01],
           [-6.73163414e-01, -8.68065953e-01, -8.83058429e-01,  ...,
            -5.08245826e-01, -8.98050964e-01, -7.18140900e-01],
           [-6.28185868e-01, -6.13193393e-01, -7.18140900e-01,  ...,
            -7.93103397e-01, -9.28035975e-01, -8.23088408e-01],
           ...,
           [-1.48275876e+00, -7.48125911e-01,  2.11394474e-01,  ...,
             1.49940979e-03,  1.06446937e-01, -1.34930937e-02],
           [-8.98050964e-01,  1.49940979e-03,  1.81409463e-01,  ...,
            -3.73313308e-01, -3.58320802e-01, -1.18440613e-01],
           [-4.63268340e-01,  3.16341996e-01,  1.36431947e-01,  ...,
            -2.83358276e-01, -3.73313308e-01, -4.34781015e-02]]],


         [[[-1.06825387e+00, -1.29047608e+00, -9.25396800e-01,  ...,
            -6.55555546e-01, -8.14285696e-01, -7.50793636e-01],
           [-9.88888860e-01, -1.02063489e+00, -1.00476182e+00,  ...,
            -7.34920621e-01, -1.17936504e+00, -1.02063489e+00],
           [-1.00476182e+00, -7.66666651e-01, -8.14285696e-01,  ...,
            -1.00476182e+00, -1.17936504e+00, -1.09999990e+00],
           ...,
           [-1.51269829e+00, -2.90476084e-01,  9.00000036e-01,  ...,
             5.66666722e-01,  6.77777827e-01,  6.14285767e-01],
           [-7.66666651e-01,  5.98412752e-01,  9.31746066e-01,  ...,
             2.17460394e-01,  2.65079439e-01,  5.50793707e-01],
           [-1.79364979e-01,  9.63492095e-01,  8.84127021e-01,  ...,
             2.96825469e-01,  2.17460394e-01,  5.98412752e-01]],

          [[-9.33977425e-01, -1.27214170e+00, -9.33977425e-01,  ...,
            -7.08534598e-01, -8.85668218e-01, -8.21255982e-01],
           [-8.37359071e-01, -9.98389661e-01, -1.01449275e+00,  ...,
            -7.56843746e-01, -1.20772946e+00, -1.06280184e+00],
           [-8.53462100e-01, -7.40740716e-01, -8.21255982e-01,  ...,
            -9.82286572e-01, -1.15942025e+00, -1.09500802e+00],
           ...,
           [-1.65861523e+00, -5.15297890e-01,  5.95813274e-01,  ...,
             1.93236828e-01,  2.89855182e-01,  1.93236828e-01],
           [-9.17874336e-01,  3.70370477e-01,  6.11916363e-01,  ...,
            -1.93236589e-01, -1.44927412e-01,  1.61030710e-01],
           [-4.18679416e-01,  6.44122481e-01,  5.15298009e-01,  ...,
            -1.28824353e-01, -1.93236589e-01,  1.93236828e-01]],

          [[-6.28185868e-01, -1.06296861e+00, -8.38080943e-01,  ...,
            -5.53223372e-01, -6.88155890e-01, -5.98200858e-01],
           [-6.73163414e-01, -8.68065953e-01, -8.83058429e-01,  ...,
            -5.08245826e-01, -8.98050964e-01, -7.18140900e-01],
           [-6.28185868e-01, -6.13193393e-01, -7.18140900e-01,  ...,
            -7.93103397e-01, -9.28035975e-01, -8.23088408e-01],
           ...,
           [-1.48275876e+00, -7.48125911e-01,  2.11394474e-01,  ...,
             1.49940979e-03,  1.06446937e-01, -1.34930937e-02],
           [-8.98050964e-01,  1.49940979e-03,  1.81409463e-01,  ...,
            -3.73313308e-01, -3.58320802e-01, -1.18440613e-01],
           [-4.63268340e-01,  3.16341996e-01,  1.36431947e-01,  ...,
            -2.83358276e-01, -3.73313308e-01, -4.34781015e-02]]],


         [[[-1.06825387e+00, -1.29047608e+00, -9.25396800e-01,  ...,
            -6.55555546e-01, -8.14285696e-01, -7.50793636e-01],
           [-9.88888860e-01, -1.02063489e+00, -1.00476182e+00,  ...,
            -7.34920621e-01, -1.17936504e+00, -1.02063489e+00],
           [-1.00476182e+00, -7.66666651e-01, -8.14285696e-01,  ...,
            -1.00476182e+00, -1.17936504e+00, -1.09999990e+00],
           ...,
           [-1.51269829e+00, -2.90476084e-01,  9.00000036e-01,  ...,
             5.66666722e-01,  6.77777827e-01,  6.14285767e-01],
           [-7.66666651e-01,  5.98412752e-01,  9.31746066e-01,  ...,
             2.17460394e-01,  2.65079439e-01,  5.50793707e-01],
           [-1.79364979e-01,  9.63492095e-01,  8.84127021e-01,  ...,
             2.96825469e-01,  2.17460394e-01,  5.98412752e-01]],

          [[-9.33977425e-01, -1.27214170e+00, -9.33977425e-01,  ...,
            -7.08534598e-01, -8.85668218e-01, -8.21255982e-01],
           [-8.37359071e-01, -9.98389661e-01, -1.01449275e+00,  ...,
            -7.56843746e-01, -1.20772946e+00, -1.06280184e+00],
           [-8.53462100e-01, -7.40740716e-01, -8.21255982e-01,  ...,
            -9.82286572e-01, -1.15942025e+00, -1.09500802e+00],
           ...,
           [-1.65861523e+00, -5.15297890e-01,  5.95813274e-01,  ...,
             1.93236828e-01,  2.89855182e-01,  1.93236828e-01],
           [-9.17874336e-01,  3.70370477e-01,  6.11916363e-01,  ...,
            -1.93236589e-01, -1.44927412e-01,  1.61030710e-01],
           [-4.18679416e-01,  6.44122481e-01,  5.15298009e-01,  ...,
            -1.28824353e-01, -1.93236589e-01,  1.93236828e-01]],

          [[-6.28185868e-01, -1.06296861e+00, -8.38080943e-01,  ...,
            -5.53223372e-01, -6.88155890e-01, -5.98200858e-01],
           [-6.73163414e-01, -8.68065953e-01, -8.83058429e-01,  ...,
            -5.08245826e-01, -8.98050964e-01, -7.18140900e-01],
           [-6.28185868e-01, -6.13193393e-01, -7.18140900e-01,  ...,
            -7.93103397e-01, -9.28035975e-01, -8.23088408e-01],
           ...,
           [-1.48275876e+00, -7.48125911e-01,  2.11394474e-01,  ...,
             1.49940979e-03,  1.06446937e-01, -1.34930937e-02],
           [-8.98050964e-01,  1.49940979e-03,  1.81409463e-01,  ...,
            -3.73313308e-01, -3.58320802e-01, -1.18440613e-01],
           [-4.63268340e-01,  3.16341996e-01,  1.36431947e-01,  ...,
            -2.83358276e-01, -3.73313308e-01, -4.34781015e-02]]]]],
       device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0522 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 88, vnnlib ID: 88 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-42.02439499, -44.97517395, -40.71525192, -40.87599182, -41.24326324,
         -40.87339401, -42.14933395, -40.04444122, -43.64363480, -41.59066772]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [930]; unstable size 930; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 84, 1, 930] with unstable size 83 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 24, 1, 930] with unstable size 23 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 930] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [521]; unstable size 521; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 24, 1, 521] with unstable size 23 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 521] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [23]; unstable size 23; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.32409859,  2.93080115, -0.63614821, -0.43161404, -0.69012034,
          0.49456143, -2.12365437,  1.79508078, -0.50731802]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-42.02439499, -44.97517395, -40.71525192, -40.87599182, -41.24326324,
         -40.87339401, -42.14933395, -40.04444122, -43.64363480, -41.59066772]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-42.02439880, -44.97517395, -40.71525574, -40.87599182, -41.24326706,
          -40.87339783, -42.14933777, -40.04444504, -43.64363098, -41.59067535],
         [-42.02439880, -44.97517395, -40.71525574, -40.87599182, -41.24326706,
          -40.87339783, -42.14933777, -40.04444504, -43.64363098, -41.59067535]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.16073608,  0.52801132,  0.15814209, -0.67081070,  0.87541962]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0508 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 89, vnnlib ID: 89 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-49.20108414, -44.66923523, -50.94259262, -50.63168716, -51.05372620,
         -51.32248688, -50.52354813, -52.14093781, -46.85939026, -46.97278595]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1266]; unstable size 1266; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 83, 1, 1266] with unstable size 82 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 34, 1, 1266] with unstable size 33 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1266] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [582]; unstable size 582; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 34, 1, 582] with unstable size 33 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 582] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [33]; unstable size 33; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.74284077, 4.07667351, 4.15703964, 4.27889729, 4.79169703, 3.93438911,
         5.05082989, 0.70681143, 1.44554424]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0360 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 90, vnnlib ID: 90 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-45.98469925, -45.88925934, -44.17130661, -43.48795700, -44.36748886,
         -43.81457520, -44.26184082, -45.82426453, -46.01531982, -45.15727997]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1572]; unstable size 1572; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 86, 1, 1572] with unstable size 85 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 43, 1, 1572] with unstable size 42 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1572] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [620]; unstable size 620; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 43, 1, 620] with unstable size 42 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 620] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [42]; unstable size 42; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 42] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.23907340, -1.10382557, -1.72691226, -1.87707889, -1.49483669,
         -1.62469506, -0.63081807, -0.23698676, -1.70028305]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-45.98469925, -45.88925934, -44.17130661, -43.48795700, -44.36748886,
         -43.81457520, -44.26184082, -45.82426453, -46.01531982, -45.15727997]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-45.98470306, -45.88924789, -44.17129898, -43.48795700, -44.36747742,
          -43.81456375, -44.26184082, -45.82426071, -46.01531219, -45.15727234],
         [-45.98470306, -45.88924789, -44.17129898, -43.48795700, -44.36747742,
          -43.81456375, -44.26184082, -45.82426071, -46.01531219, -45.15727234]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.72286224,  1.62740707, -0.09054184, -0.77388382,  0.10563660,
          -0.44727707,  1.56241989,  1.75347137,  0.89543152]]],
       device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         ...,


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]]]], device='cuda:0') torch.Size([1, 9, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0518 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 91, vnnlib ID: 91 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-78.34169769, -71.93520355, -80.07389069, -79.79589081, -79.83042908,
         -80.05495453, -81.02639771, -79.69437408, -77.82614136, -72.61272430]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1320]; unstable size 1320; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 444, 1, 1320] with unstable size 443 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 21, 1, 1320] with unstable size 20 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1320] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [443]; unstable size 443; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 21, 1, 443] with unstable size 20 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 443] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [20]; unstable size 20; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.37366247,  5.60620880,  5.47174835,  5.15208197,  5.70559931,
          6.60220909,  4.92299318,  4.31680012, -0.20571327]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-78.34169769, -71.93520355, -80.07389069, -79.79589081, -79.83042908,
         -80.05495453, -81.02639771, -79.69437408, -77.82614136, -72.61272430]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.29it/s]100%|██████████| 1/1 [00:00<00:00,  8.28it/s]
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/domain_updater.py:75: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  torch.tensor(history[3]),
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-76.26499939, -70.49734497, -77.90991211, -77.59111023, -77.70992279,
          -77.86473083, -78.87100983, -77.55970001, -75.98882294, -70.72049713]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.22315216]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1237 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 42.8259162902832
alpha/beta optimization time: 1.4581410884857178
initial alpha-crown bounds: tensor([[ 4.45962286,  5.71456194,  5.57683086,  5.26774693,  5.81089735,
          6.71686172,  5.04493284,  4.37532091, -0.14085984]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.14085984230041504
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.37884998321533
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.37881135940552
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.37878513336182
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.3787636756897
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.37874364852905
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.3787226676941
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 198.3787031173706
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 198.37868237495422
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 198.378662109375
Verifying property 8 with 1 instances.
##### Instance 91 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.14085984]], device='cuda:0') need to verify.
Model prediction is: tensor([-78.34169769, -71.93520355, -80.07389069, -79.79589081, -79.83042908,
        -80.05495453, -81.02639771, -79.69437408, -77.82614136, -72.61272430],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.14085984]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1320
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 439
Node /39 input 0: size torch.Size([250]) unstable 20
-----------------
# of unstable neurons: 1779
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00013113021850585938
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14085984230041504
10 lb beta sum: 0.0, worst -0.14086103439331055
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0797    transfer 0.0001    finalize 0.0003    func 0.0803    
Accumulated time: func 0.0803    prepare 0.0002    bound 0.0797    transfer 0.0001    finalize 0.0003    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 78] 
split level 1: [/input-16, 73] 
split level 2: [/input-16, 225] 
split level 3: [/input-16, 223] 
split level 4: [/input-16, 134] 
split level 5: [/input-12, 5675] 
split level 6: [/input-16, 160] 
split level 7: [/input-16, 95] 
split level 8: [/input-16, 37] 
split level 9: [/input-12, 5914] 
split level 10: [/input-16, 154] 
split level 11: [/input-12, 611] 
split level 12: [/input-16, 13] 
split level 13: [/input-12, 725] 
split level 14: [/input-12, 5532] 
split level 15: [/input-12, 6901] 
split level 16: [/input-12, 265] 
split level 17: [/input-12, 1243] 
split level 18: [/input-12, 4378] 
split level 19: [/input-12, 610] 
split level 20: [/input-12, 6754] 
split level 21: [/input-12, 1774] 
split level 22: [/input-4, 1207] 
split level 23: [/input-12, 5651] 
split level 24: [/input-12, 2364] 
split level 25: [/input-12, 1771] 
split level 26: [/input-12, 5916] 
split level 27: [/input-12, 267] 
split level 28: [/input-12, 217] 
split level 29: [/input-12, 5259] 
split level 30: [/input-12, 2331] 
split level 31: [/input-12, 963] 
split level 32: [/input-12, 6731] 
split level 33: [/input-12, 2012] 
split level 34: [/input-4, 6310] 
split level 35: [/input-12, 6228] 
split level 36: [/input-12, 5741] 
split level 37: [/input-12, 2572] 
split level 38: [/input-12, 2465] 
split level 39: [/input-4, 2937] 
split level 40: [/input-12, 7576] 
split level 41: [/input-12, 2569] 
split level 42: [/input-4, 1687] 
split level 43: [/input-4, 4774] 
split level 44: [/input-12, 3302] 
split level 45: [/input-4, 4775] 
split level 46: [/input-12, 1246] 
split level 47: [/input-4, 1719] 
split level 48: [/input-12, 7325] 
split level 49: [/input-4, 3194] 
split level 50: [/input-4, 6311] 
split level 51: [/input-12, 7967] 
split level 52: [/input-4, 3255] 
split level 53: [/input-12, 2611] 
split level 54: [/input-4, 1191] 
split level 55: [/input-12, 2149] 
split level 56: [/input-12, 7214] 
split level 57: [/input-4, 3239] 
split level 58: [/input-12, 6890] 
split level 59: [/input-12, 5523] 
split level 60: [/input-4, 1686] 
split level 61: [/input-4, 1701] 
split level 62: [/input-12, 8021] 
split level 63: [/input-4, 4791] 
split level 64: [/input-4, 3222] 
split level 65: [/input-12, 971] 
split level 66: [/input-4, 5756] 
split level 67: [/input-4, 200] 
split level 68: [/input-4, 5527] 
split level 69: [/input-12, 5349] 
split level 70: [/input-4, 199] 
split level 71: [/input-12, 3926] 
split level 72: [/input-12, 7516] 
split level 73: [/input-12, 5676] 
split level 74: [/input-12, 2571] 
split level 75: [/input-4, 4519] 
split level 76: [/input-4, 3193] 
split level 77: [/input-4, 1192] 
split level 78: [/input-12, 7208] 
split level 79: [/input-12, 1006] 
split level 80: [/input-4, 6295] 
split level 81: [/input-12, 4398] 
split level 82: [/input-12, 2612] 
split level 83: [/input-4, 150] 
split level 84: [/input-4, 5525] 
split level 85: [/input-12, 3630] 
split level 86: [/input-12, 622] 
split level 87: [/input-12, 6729] 
split level 88: [/input-4, 1688] 
split level 89: [/input-12, 5661] 
split level 90: [/input-12, 7956] 
split level 91: [/input-12, 4421] 
split level 92: [/input-12, 1053] 
split level 93: [/input-12, 7141] 
split level 94: [/input-4, 4729] 
split level 95: [/input-4, 5013] 
split level 96: [/input-4, 2698] 
split level 97: [/input-4, 6326] 
split level 98: [/input-4, 3210] 
split level 99: [/input-12, 6158] 
split level 100: [/input-12, 7330] 
split level 101: [/input-12, 7215] 
split level 102: [/input-12, 2363] 
split level 103: [/input-4, 2966] 
split level 104: [/input-4, 149] 
split level 105: [/input-4, 1720] 
split level 106: [/input-12, 2456] 
split level 107: [/input-4, 167] 
split level 108: [/input-4, 3223] 
split level 109: [/input-12, 3492] 
split level 110: [/input-4, 6328] 
split level 111: [/input-12, 4395] 
split level 112: [/input-12, 6260] 
split level 113: [/input-4, 5528] 
split level 114: [/input-4, 6570] 
split level 115: [/input-4, 2965] 
split level 116: [/input-4, 198] 
split level 117: [/input-4, 5045] 
split level 118: [/input-4, 3705] 
split level 119: [/input-12, 6730] 
split level 120: [/input-12, 4198] 
split level 121: [/input-12, 3948] 
split level 122: [/input-12, 2365] 
split level 123: [/input-4, 184] 
split level 124: [/input-4, 5509] 
split level 125: [/input-12, 1546] 
split level 126: [/input-4, 4760] 
split level 127: [/input-4, 6266] 
split level 128: [/input-12, 7977] 
split level 129: [/input-4, 4758] 
split level 130: [/input-4, 597] 
split level 131: [/input-12, 2147] 
split level 132: [/input-4, 5510] 
split level 133: [/input-12, 1361] 
split level 134: [/input-4, 4503] 
split level 135: [/input-4, 6327] 
split level 136: [/input-4, 152] 
split level 137: [/input-4, 1657] 
split level 138: [/input-4, 5558] 
split level 139: [/input-12, 2889] 
split level 140: [/input-12, 1368] 
split level 141: [/input-12, 2613] 
split level 142: [/input-4, 6293] 
split level 143: [/input-4, 6281] 
split level 144: [/input-4, 4996] 
split level 145: [/input-4, 2378] 
split level 146: [/input-12, 7329] 
split level 147: [/input-4, 5526] 
split level 148: [/input-12, 2019] 
split level 149: [/input-4, 2967] 
split level 150: [/input-12, 7144] 
split level 151: [/input-12, 2537] 
split level 152: [/input-4, 4504] 
split level 153: [/input-4, 2997] 
split level 154: [/input-4, 6277] 
split level 155: [/input-4, 4745] 
split level 156: [/input-12, 621] 
split level 157: [/input-12, 3139] 
split level 158: [/input-4, 3001] 
split level 159: [/input-12, 2570] 
split level 160: [/input-4, 939] 
split level 161: [/input-4, 6769] 
split level 162: [/input-4, 2201] 
split level 163: [/input-4, 4971] 
split level 164: [/input-12, 2072] 
split level 165: [/input-12, 6837] 
split level 166: [/input-4, 4983] 
split level 167: [/input-4, 2200] 
split level 168: [/input-12, 362] 
split level 169: [/input-12, 5001] 
split level 170: [/input-4, 3034] 
split level 171: [/input-12, 7003] 
split level 172: [/input-4, 2658] 
split level 173: [/input-12, 781] 
split level 174: [/input-12, 548] 
split level 175: [/input-12, 2608] 
split level 176: [/input-12, 1309] 
split level 177: [/input-4, 3033] 
split level 178: [/input-12, 7842] 
split level 179: [/input-4, 2195] 
split level 180: [/input-4, 3032] 
split level 181: [/input-12, 7541] 
split level 182: [/input-4, 4468] 
split level 183: [/input-4, 4811] 
split level 184: [/input-4, 3690] 
split level 185: [/input-12, 7752] 
split level 186: [/input-4, 3272] 
split level 187: [/input-4, 6343] 
split level 188: [/input-4, 1641] 
split level 189: [/input-12, 6773] 
split level 190: [/input-4, 119] 
split level 191: [/input-12, 3816] 
split level 192: [/input-4, 2234] 
split level 193: [/input-12, 6256] 
split level 194: [/input-4, 1670] 
split level 195: [/input-4, 118] 
split level 196: [/input-12, 6257] 
split level 197: [/input-12, 6262] 
split level 198: [/input-4, 4442] 
split level 199: [/input-4, 7790] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14069914817810059
10 lb beta sum: 0.0, worst -0.1406996250152588
Time: prepare 0.0118    bound 0.1447    transfer 0.0065    finalize 0.0205    func 0.1862    
Accumulated time: func 0.2666    prepare 0.0226    bound 0.2244    transfer 0.0066    finalize 0.0208    
all_split False
======================Cut inference begins======================
max lb tensor(0.11516118) min lb tensor(-0.14069796)
Number of Verified Splits: 4 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.02811455726623535 
BICCOS Cumulative time: 0.02811455726623535
Preprocessing time: 0.02711009979248047 Inference time: 0.000225067138671875 Add cuts time: 8.463859558105469e-05 Cut analysis time: 0.0006947517395019531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13102 (1), -0.13090 (1), -0.13069 (1), -0.13024 (1), -0.13020 (1), -0.13012 (1), -0.12992 (1), -0.12967 (1), -0.12966 (1), -0.12961 (1), -0.12940 (1), -0.12932 (1), -0.12925 (1), -0.12881 (1), -0.12849 (1), -0.12843 (1), -0.12831 (1), -0.12795 (1), -0.12748 (1), -0.12736 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7972    set_bounds 0.0123    solve 0.1863    add 0.1754    
Accumulated time: pickout 0.0003    decision 0.7972    set_bounds 0.0123    solve 0.1863    add 0.1754    
Current (lb-rhs): -0.13101959228515625
50 domains visited
Cumulative time: 1.2875287532806396

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] 
split level 1: [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] 
split level 2: [/input-16, 95] [/input-16, 223] [/input-16, 223] [/input-16, 223] [/input-16, 95] [/input-16, 223] [/input-16, 223] [/input-16, 223] [/input-16, 223] [/input-16, 223] 
split level 3: [/input-12, 5914] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-12, 5914] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12562870979309082
10 lb beta sum: 0.6644335985183716, worst -0.1169491708278656
Time: prepare 0.0076    bound 0.1696    transfer 0.0152    finalize 0.0091    func 0.2047    
Accumulated time: func 0.4712    prepare 0.0304    bound 0.3940    transfer 0.0218    finalize 0.0300    
all_split False
======================Cut inference begins======================
max lb tensor(0.20069814) min lb tensor(-0.11694545)
Number of Verified Splits: 71 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.01717853546142578 
BICCOS Cumulative time: 0.04529309272766113
Preprocessing time: 0.012335538864135742 Inference time: 0.0025730133056640625 Add cuts time: 0.0019457340240478516 Cut analysis time: 0.000324249267578125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07942 (2), -0.07899 (2), -0.07881 (2), -0.07877 (2), -0.07870 (2), -0.07797 (2), -0.07744 (2), -0.07685 (2), -0.07647 (2), -0.07640 (2), -0.07438 (2), -0.07312 (2), -0.07074 (2), -0.07048 (2), -0.06908 (2), -0.06889 (2), -0.06860 (2), -0.06277 (2), -0.06066 (2), -0.05990 (2), 
Length of domains: 50
Time: pickout 0.0008    decision 0.0254    set_bounds 0.0120    solve 0.2048    add 0.0956    
Accumulated time: pickout 0.0011    decision 0.8226    set_bounds 0.0243    solve 0.3911    add 0.2710    
Current (lb-rhs): -0.07942304015159607
100 domains visited
Cumulative time: 1.6434614658355713

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] 
split level 1: [/input-16, 223] [/input-16, 223] [/input-16, 223] [/input-16, 223] [/input-16, 223] [/input-16, 223] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] 
split level 2: [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 223] [/input-16, 223] [/input-16, 223] [/input-16, 223] 
split level 3: [/input-12, 5914] [/input-12, 5914] [/input-12, 4378] [/input-12, 5914] [/input-12, 5914] [/input-12, 5914] [/input-12, 5914] [/input-12, 5914] [/input-16, 95] [/input-12, 4378] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09235811233520508
10 lb beta sum: 0.9692738056182861, worst -0.0738668441772461
Time: prepare 0.0073    bound 0.1886    transfer 0.0044    finalize 0.0073    func 0.2109    
Accumulated time: func 0.6821    prepare 0.0380    bound 0.5826    transfer 0.0262    finalize 0.0372    
all_split False
======================Cut inference begins======================
max lb tensor(0.22284532) min lb tensor(-0.07365519)
Number of Verified Splits: 134 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.021476030349731445 
BICCOS Cumulative time: 0.06676912307739258
Preprocessing time: 0.01199960708618164 Inference time: 0.006397247314453125 Add cuts time: 0.0027399063110351562 Cut analysis time: 0.00033926963806152344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04087 (3), -0.04087 (3), -0.03679 (3), -0.03614 (3), -0.03401 (3), -0.03400 (3), -0.03399 (3), -0.03399 (3), -0.03387 (3), -0.03382 (3), -0.03381 (3), -0.03378 (3), -0.03378 (3), -0.03353 (3), -0.03230 (3), -0.03230 (3), -0.03230 (3), -0.03230 (3), -0.03144 (3), -0.03120 (3), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0249    set_bounds 0.0150    solve 0.2110    add 0.1088    
Accumulated time: pickout 0.0017    decision 0.8475    set_bounds 0.0393    solve 0.6021    add 0.3797    
Current (lb-rhs): -0.04087424278259277
150 domains visited
Cumulative time: 2.025567054748535

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] 
split level 1: [/input-16, 223] [/input-16, 223] [/input-16, 223] [/input-16, 223] [/input-16, 223] [/input-16, 223] [/input-16, 223] [/input-16, 223] [/input-16, 223] [/input-16, 223] 
split level 2: [/input-12, 5914] [/input-12, 5914] [/input-16, 95] [/input-12, 5914] [/input-12, 5914] [/input-12, 5914] [/input-12, 5914] [/input-16, 95] [/input-16, 95] [/input-12, 5914] 
split level 3: [/input-12, 6901] [/input-12, 6901] [/input-12, 6901] [/input-12, 6901] [/input-12, 6901] [/input-12, 6901] [/input-12, 6901] [/input-12, 6901] [/input-4, 3720] [/input-12, 6901] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06123650074005127
10 lb beta sum: 1.486713171005249, worst -0.03064572811126709
Time: prepare 0.0083    bound 0.1879    transfer 0.0040    finalize 0.0112    func 0.2141    
Accumulated time: func 0.8963    prepare 0.0466    bound 0.7704    transfer 0.0302    finalize 0.0484    
all_split False
======================Cut inference begins======================
max lb tensor(0.20023346) min lb tensor(-0.03047085)
Number of Verified Splits: 126 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 11
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.02061176300048828 
BICCOS Cumulative time: 0.08738088607788086
Preprocessing time: 0.011792182922363281 Inference time: 0.005843400955200195 Add cuts time: 0.0025739669799804688 Cut analysis time: 0.00040221214294433594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00576 (4), -0.00546 (4), -0.00546 (4), -0.00545 (4), -0.00542 (4), -0.00533 (4), -0.00502 (4), -0.00502 (4), -0.00502 (4), -0.00501 (4), -0.00495 (4), -0.00495 (4), -0.00471 (4), -0.00471 (4), -0.00406 (4), -0.00401 (4), -0.00376 (4), -0.00376 (4), -0.00376 (4), -0.00375 (4), 
Length of domains: 50
Time: pickout 0.0005    decision 0.0249    set_bounds 0.0154    solve 0.2142    add 0.2649    
Accumulated time: pickout 0.0023    decision 0.8724    set_bounds 0.0547    solve 0.8163    add 0.6446    
Current (lb-rhs): -0.0057582855224609375
200 domains visited
Cumulative time: 2.566333532333374

Shallow-BaB round 5
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] 
split level 1: [/input-16, 223] [/input-16, 223] [/input-16, 223] [/input-16, 223] [/input-16, 223] [/input-16, 223] [/input-16, 223] [/input-16, 223] [/input-16, 223] [/input-16, 223] 
split level 2: [/input-12, 6901] [/input-12, 6901] [/input-12, 6901] [/input-12, 6901] [/input-12, 6901] [/input-12, 6901] [/input-12, 6901] [/input-12, 6901] [/input-16, 134] [/input-16, 134] 
split level 3: [/input-4, 3720] [/input-4, 3720] [/input-4, 3720] [/input-4, 3720] [/input-4, 3720] [/input-4, 3720] [/input-4, 3720] [/input-4, 3720] [/input-12, 5914] [/input-12, 5914] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.040049195289611816
10 lb beta sum: 1.5794668197631836, worst -0.021081268787384033
Time: prepare 0.0083    bound 0.2177    transfer 0.0040    finalize 0.0161    func 0.2488    
Accumulated time: func 1.1451    prepare 0.0552    bound 0.9881    transfer 0.0343    finalize 0.0645    
all_split False
======================Cut inference begins======================
max lb tensor(0.21024370) min lb tensor(-0.00498027)
Number of Verified Splits: 274 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 11
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.03204631805419922 
BICCOS Cumulative time: 0.11942720413208008
Preprocessing time: 0.012060165405273438 Inference time: 0.013403177261352539 Add cuts time: 0.0059320926666259766 Cut analysis time: 0.0006508827209472656
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0006    decision 0.0254    set_bounds 0.0159    solve 0.2489    add 0.0273    
Accumulated time: pickout 0.0029    decision 0.8977    set_bounds 0.0705    solve 1.0653    add 0.6719    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
200 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([2012, 6901], [-1.0, -1.0], [0, 0], [-1.2670385626728067e+34, 0.018374549224972725], [0, 3]), '/input-16': (tensor([225,  95,  78]), tensor([-1., -1., -1.]), tensor([0, 0, 0]), tensor([-1.26705045e+34,  1.88400317e-02,  6.94440445e-04]), tensor([1, 2, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([2012, 6901], [-1.0, -1.0], [0, 0], [-1.2670385626728067e+34, 0.018374549224972725], [0, 3]), '/input-16': (tensor([225,  95,  78]), tensor([-1., -1.,  1.]), tensor([0, 0, 0]), tensor([-1.26705045e+34,  1.88400317e-02,  2.08347484e-01]), tensor([1, 2, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([2012, 6901], [-1.0, 1.0], [0, 0], [-1.2670385626728067e+34, 0.016537295654416084], [0, 3]), '/input-16': (tensor([225,  95,  78]), tensor([-1., -1., -1.]), tensor([0, 0, 0]), tensor([-1.26705045e+34,  1.88400317e-02,  6.94678864e-04]), tensor([1, 2, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([2012, 6901], [-1.0, 1.0], [0, 0], [-1.2670385626728067e+34, 0.016537295654416084], [0, 3]), '/input-16': (tensor([225,  95,  78]), tensor([-1., -1.,  1.]), tensor([0, 0, 0]), tensor([-1.26705045e+34,  1.88400317e-02,  2.10272357e-01]), tensor([1, 2, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([2012, 6901], [-1.0, -1.0], [0, 0], [-1.2670385626728067e+34, 0.01852189190685749], [0, 3]), '/input-16': (tensor([225,  95,  78]), tensor([-1.,  1., -1.]), tensor([0, 0, 0]), tensor([-1.26705045e+34,  1.90499593e-02,  7.36878952e-04]), tensor([1, 2, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([2012, 6901], [-1.0, -1.0], [0, 0], [-1.2670385626728067e+34, 0.01852189190685749], [0, 3]), '/input-16': (tensor([225,  95,  78]), tensor([-1.,  1.,  1.]), tensor([0, 0, 0]), tensor([-1.26705045e+34,  1.90499593e-02,  2.08930895e-01]), tensor([1, 2, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([2012, 6901], [-1.0, 1.0], [0, 0], [-1.2670385626728067e+34, 0.01657484658062458], [0, 3]), '/input-16': (tensor([225,  95,  78]), tensor([-1.,  1., -1.]), tensor([0, 0, 0]), tensor([-1.26705045e+34,  1.90499593e-02,  7.47726997e-04]), tensor([1, 2, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([2012, 6901], [-1.0, 1.0], [0, 0], [-1.2670385626728067e+34, 0.01657484658062458], [0, 3]), '/input-16': (tensor([225,  95,  78]), tensor([-1.,  1.,  1.]), tensor([0, 0, 0]), tensor([-1.26705045e+34,  1.90499593e-02,  2.11372420e-01]), tensor([1, 2, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([2012, 6901], [-1.0, -1.0], [0, 0], [-1.2670385626728067e+34, 0.018435107544064522], [0, 3]), '/input-16': (tensor([225,  95,  78]), tensor([ 1., -1., -1.]), tensor([0, 0, 0]), tensor([-1.26705441e+34,  1.84309054e-02,  8.37014755e-04]), tensor([1, 2, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([2012, 6901], [-1.0, -1.0], [0, 0], [-1.2670385626728067e+34, 0.018435107544064522], [0, 3]), '/input-16': (tensor([225,  95,  78]), tensor([ 1., -1.,  1.]), tensor([0, 0, 0]), tensor([-1.26705441e+34,  1.84309054e-02,  2.07340285e-01]), tensor([1, 2, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([2012, 6901], [-1.0, 1.0], [0, 0], [-1.2670385626728067e+34, 0.016419874504208565], [0, 3]), '/input-16': (tensor([225,  95,  78]), tensor([ 1., -1., -1.]), tensor([0, 0, 0]), tensor([-1.26705441e+34,  1.84309054e-02,  3.52905830e-04]), tensor([1, 2, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([2012, 6901], [-1.0, 1.0], [0, 0], [-1.2670385626728067e+34, 0.016419874504208565], [0, 3]), '/input-16': (tensor([225,  95,  78]), tensor([ 1., -1.,  1.]), tensor([0, 0, 0]), tensor([-1.26705441e+34,  1.84309054e-02,  2.09171340e-01]), tensor([1, 2, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([2012, 6901], [-1.0, -1.0], [0, 0], [-1.2670385626728067e+34, 0.018604563549160957], [0, 3]), '/input-16': (tensor([225,  95,  78]), tensor([ 1.,  1., -1.]), tensor([0, 0, 0]), tensor([-1.26705441e+34,  1.89269949e-02,  7.65489182e-04]), tensor([1, 2, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([2012, 6901], [-1.0, -1.0], [0, 0], [-1.2670385626728067e+34, 0.018604563549160957], [0, 3]), '/input-16': (tensor([225,  95,  78]), tensor([1., 1., 1.]), tensor([0, 0, 0]), tensor([-1.26705441e+34,  1.89269949e-02,  2.06601545e-01]), tensor([1, 2, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([2012, 6901], [-1.0, 1.0], [0, 0], [-1.2670385626728067e+34, 0.016376541927456856], [0, 3]), '/input-16': (tensor([225,  95,  78]), tensor([ 1.,  1., -1.]), tensor([0, 0, 0]), tensor([-1.26705441e+34,  1.89269949e-02,  7.48323044e-04]), tensor([1, 2, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([2012, 6901], [-1.0, 1.0], [0, 0], [-1.2670385626728067e+34, 0.016376541927456856], [0, 3]), '/input-16': (tensor([225,  95,  78]), tensor([1., 1., 1.]), tensor([0, 0, 0]), tensor([-1.26705441e+34,  1.89269949e-02,  2.09109589e-01]), tensor([1, 2, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': (tensor([2012]), tensor([1.]), tensor([0]), tensor([-1.26703856e+34]), tensor([0])), '/input-16': ([], [], [], [], [])}
Shallow branching resets to n domains:  17
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14055514335632324
10 lb beta sum: 0.9422423243522644, worst -0.10630321502685547
Time: prepare 0.0007    bound 0.2054    transfer 0.0008    finalize 0.0008    func 0.2078    
Accumulated time: func 1.3529    prepare 0.0558    bound 1.1935    transfer 0.0351    finalize 0.0652    
After pruning, left:  9

Back to Regular BaB

BaB round 1
batch: 9
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 223] [/input-16, 223] [/input-16, 223] [/input-16, 223] [/input-16, 223] [/input-16, 223] [/input-16, 223] [/input-16, 223] [/input-16, 78] 
cut re-enabled after branching node selection
0 lb beta sum: 2.137211561203003, worst -0.1062936782836914
10 lb beta sum: 2.138284206390381, worst -0.10628724098205566
Time: prepare 0.0010    bound 0.2059    transfer 0.0002    finalize 0.0006    func 0.2079    
Accumulated time: func 1.5608    prepare 0.0571    bound 1.3994    transfer 0.0353    finalize 0.0658    
all_split False
======================Cut inference begins======================
max lb tensor(0.37731910) min lb tensor(-0.10628319)
Number of Verified Splits: 9 of 18
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 2.137211322784424, worst -0.0863034725189209

all verified at 7th iter
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 11
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.08630800247192383 
BICCOS Cumulative time: 0.2057352066040039
Preprocessing time: 0.0009438991546630859 Inference time: 0.0841219425201416 Add cuts time: 0.00057220458984375 Cut analysis time: 0.0006699562072753906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10628 (1), -0.00693 (1), -0.00682 (1), -0.00537 (1), -0.00517 (1), -0.00508 (1), -0.00482 (1), -0.00319 (1), -0.00315 (1), 
Length of domains: 9
Time: pickout 0.0005    decision 0.0136    set_bounds 0.0010    solve 0.2080    add 0.0013    
Accumulated time: pickout 0.0034    decision 0.9114    set_bounds 0.0715    solve 1.2732    add 0.6732    
Current (lb-rhs): -0.10628318786621094
209 domains visited
Cumulative time: 3.4795405864715576

BaB round 2
batch: 9
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 225] 
cut re-enabled after branching node selection
0 lb beta sum: 2.137211561203003, worst -0.08726739883422852
10 lb beta sum: 2.137211561203003, worst -0.08724379539489746
Time: prepare 0.0010    bound 0.2022    transfer 0.0002    finalize 0.0006    func 0.2042    
Accumulated time: func 1.7650    prepare 0.0582    bound 1.6016    transfer 0.0356    finalize 0.0664    
all_split False
======================Cut inference begins======================
max lb tensor(0.00868535) min lb tensor(-0.08723116)
Number of Verified Splits: 8 of 18
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 2.1373705863952637, worst -0.08446478843688965

all verified at 4th iter
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 11
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.054857730865478516 
BICCOS Cumulative time: 0.2605929374694824
Preprocessing time: 0.0008721351623535156 Inference time: 0.0528407096862793 Add cuts time: 0.0006253719329833984 Cut analysis time: 0.0005195140838623047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08723 (2), -0.08429 (2), -0.00530 (2), -0.00512 (2), -0.00386 (2), -0.00375 (2), -0.00348 (2), -0.00316 (2), -0.00176 (2), -0.00167 (2), 
Length of domains: 10
Time: pickout 0.0007    decision 0.0140    set_bounds 0.0011    solve 0.2042    add 0.0012    
Accumulated time: pickout 0.0041    decision 0.9253    set_bounds 0.0726    solve 1.4774    add 0.6745    
Current (lb-rhs): -0.08723115921020508
219 domains visited
Cumulative time: 3.755887746810913

BaB round 3
batch: 10
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 223] [/input-16, 223] 
cut re-enabled after branching node selection
0 lb beta sum: 2.1370842456817627, worst -0.08723115921020508
10 lb beta sum: 2.1370842456817627, worst -0.08722710609436035
Time: prepare 0.0011    bound 0.2028    transfer 0.0005    finalize 0.0012    func 0.2059    
Accumulated time: func 1.9709    prepare 0.0595    bound 1.8045    transfer 0.0361    finalize 0.0676    
all_split False
======================Cut inference begins======================
max lb tensor(0.24299145) min lb tensor(-0.08721972)
Number of Verified Splits: 10 of 20
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 2.1370842456817627, worst -0.07550454139709473

all verified at 8th iter
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 11
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.09690284729003906 
BICCOS Cumulative time: 0.3574957847595215
Preprocessing time: 0.0009157657623291016 Inference time: 0.09486174583435059 Add cuts time: 0.0006189346313476562 Cut analysis time: 0.0005064010620117188
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08722 (3), -0.08425 (3), -0.00493 (3), -0.00470 (3), -0.00354 (3), -0.00338 (3), -0.00309 (3), -0.00274 (3), -0.00140 (3), -0.00129 (3), 
Length of domains: 10
Time: pickout 0.0005    decision 0.0138    set_bounds 0.0012    solve 0.2059    add 0.0010    
Accumulated time: pickout 0.0046    decision 0.9391    set_bounds 0.0738    solve 1.6833    add 0.6755    
Current (lb-rhs): -0.0872197151184082
229 domains visited
Cumulative time: 4.075378894805908

BaB round 4
batch: 10
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 95] [/input-16, 95] [/input-12, 5914] [/input-12, 5914] [/input-12, 5914] [/input-12, 5914] [/input-12, 5914] [/input-12, 5914] [/input-12, 5914] [/input-12, 5914] 
cut re-enabled after branching node selection
0 lb beta sum: 2.1370842456817627, worst -0.0766153335571289
10 lb beta sum: 2.1381447315216064, worst -0.07657122611999512
Time: prepare 0.0014    bound 0.1927    transfer 0.0003    finalize 0.0007    func 0.1953    
Accumulated time: func 2.1662    prepare 0.0615    bound 1.9972    transfer 0.0364    finalize 0.0683    
all_split False
======================Cut inference begins======================
max lb tensor(0.00916386) min lb tensor(-0.07656050)
Number of Verified Splits: 16 of 20
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 2.1373705863952637, worst -0.0917130708694458
10 lb beta sum: 2.394728183746338, worst -0.04837048053741455
Total number of valid cuts: 17.
#cuts 1-3: 11
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.20290422439575195 
BICCOS Cumulative time: 0.5604000091552734
Preprocessing time: 0.0011413097381591797 Inference time: 0.20142364501953125 Add cuts time: 0.00031828880310058594 Cut analysis time: 2.09808349609375e-05
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07656 (4), -0.07607 (4), -0.07309 (4), -0.07283 (4), 
Length of domains: 4
Time: pickout 0.0005    decision 0.0178    set_bounds 0.0050    solve 0.1953    add 0.0597    
Accumulated time: pickout 0.0051    decision 0.9569    set_bounds 0.0788    solve 1.8786    add 0.7352    
Current (lb-rhs): -0.07656049728393555
233 domains visited
Cumulative time: 4.5637640953063965

BaB round 5
batch: 4
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] 
split level 1: [/input-12, 5914] [/input-12, 5914] [/input-12, 5914] [/input-12, 5914] 
cut re-enabled after branching node selection
0 lb beta sum: 2.13885498046875, worst -0.06876397132873535
10 lb beta sum: 2.194443941116333, worst -0.06872868537902832
Time: prepare 0.0010    bound 0.1865    transfer 0.0002    finalize 0.0008    func 0.1887    
Accumulated time: func 2.3549    prepare 0.0627    bound 2.1837    transfer 0.0367    finalize 0.0691    
all_split False
======================Cut inference begins======================
max lb tensor(0.11156821) min lb tensor(-0.06871271)
Number of Verified Splits: 8 of 16
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 2.13885498046875, worst -0.05755805969238281
10 lb beta sum: 2.390974998474121, worst -0.0011469125747680664

all verified at 12th iter
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 11
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.1273641586303711 
BICCOS Cumulative time: 0.6877641677856445
Preprocessing time: 0.0008280277252197266 Inference time: 0.12536001205444336 Add cuts time: 0.0006091594696044922 Cut analysis time: 0.0005669593811035156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06871 (6), -0.06771 (6), -0.06556 (6), -0.06519 (6), -0.06511 (6), -0.06442 (6), -0.06289 (6), -0.06224 (6), 
Length of domains: 8
Time: pickout 0.0006    decision 0.0134    set_bounds 0.0017    solve 0.1887    add 0.1031    
Accumulated time: pickout 0.0057    decision 0.9703    set_bounds 0.0805    solve 2.0673    add 0.8382    
Current (lb-rhs): -0.06871271133422852
241 domains visited
Cumulative time: 5.005691051483154

BaB round 6
batch: 8
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 37] 
cut re-enabled after branching node selection
0 lb beta sum: 2.1995739936828613, worst -0.06871247291564941
10 lb beta sum: 2.1995739936828613, worst -0.06870293617248535
Time: prepare 0.0010    bound 0.1869    transfer 0.0002    finalize 0.0005    func 0.1888    
Accumulated time: func 2.5436    prepare 0.0639    bound 2.3705    transfer 0.0369    finalize 0.0696    
all_split False
======================Cut inference begins======================
max lb tensor(0.18232369) min lb tensor(-0.06869149)
Number of Verified Splits: 8 of 16
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 2.1995739936828613, worst 0.16595065593719482

all verified at 0th iter
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 11
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.014881372451782227 
BICCOS Cumulative time: 0.7026455402374268
Preprocessing time: 0.0007827281951904297 Inference time: 0.012944221496582031 Add cuts time: 0.0006318092346191406 Cut analysis time: 0.000522613525390625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06869 (7), -0.06768 (7), -0.06549 (7), -0.06516 (7), -0.06509 (7), -0.06440 (7), -0.06282 (7), -0.06219 (7), 
Length of domains: 8
Time: pickout 0.0004    decision 0.0138    set_bounds 0.0010    solve 0.1888    add 0.0504    
Accumulated time: pickout 0.0061    decision 0.9841    set_bounds 0.0816    solve 2.2561    add 0.8886    
Current (lb-rhs): -0.06869149208068848
249 domains visited
Cumulative time: 5.275284290313721

BaB round 7
batch: 8
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 611] [/input-12, 1178] [/input-12, 611] [/input-12, 611] [/input-12, 611] [/input-12, 611] [/input-12, 611] [/input-12, 611] 
cut re-enabled after branching node selection
0 lb beta sum: 2.1995739936828613, worst -0.06758511066436768
10 lb beta sum: 2.1995739936828613, worst -0.0675879716873169
Time: prepare 0.0010    bound 0.1859    transfer 0.0002    finalize 0.0005    func 0.1878    
Accumulated time: func 2.7314    prepare 0.0651    bound 2.5564    transfer 0.0371    finalize 0.0701    
all_split False
======================Cut inference begins======================
max lb tensor(-0.02972329) min lb tensor(-0.06758177)
Number of Verified Splits: 0 of 16
No cut inferred: All or none verified.
Total number of valid cuts: 17.
#cuts 1-3: 11
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.0008013248443603516 
BICCOS Cumulative time: 0.7034468650817871
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06758 (8), -0.06403 (8), -0.06091 (8), -0.06049 (8), -0.06040 (8), -0.05952 (8), -0.05819 (8), -0.05743 (8), -0.05423 (8), -0.05096 (8), -0.05084 (8), -0.05066 (8), -0.05018 (8), -0.04821 (8), -0.04769 (8), -0.02972 (8), 
Length of domains: 16
Time: pickout 0.0005    decision 0.0139    set_bounds 0.0010    solve 0.1878    add 0.0013    
Accumulated time: pickout 0.0066    decision 0.9980    set_bounds 0.0826    solve 2.4439    add 0.8899    
Current (lb-rhs): -0.06758177280426025
265 domains visited
Cumulative time: 5.480687141418457

BaB round 8
batch: 16
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6901] [/input-12, 611] [/input-12, 6901] [/input-12, 265] [/input-12, 6901] [/input-16, 73] [/input-12, 6901] [/input-12, 265] [/input-12, 6901] [/input-12, 611] 
cut re-enabled after branching node selection
0 lb beta sum: 2.1995739936828613, worst -0.06284987926483154
10 lb beta sum: 2.1995739936828613, worst -0.06284511089324951
Time: prepare 0.0018    bound 0.1925    transfer 0.0006    finalize 0.0012    func 0.1964    
Accumulated time: func 2.9278    prepare 0.0670    bound 2.7489    transfer 0.0377    finalize 0.0713    
all_split False
======================Cut inference begins======================
max lb tensor(0.21720487) min lb tensor(-0.06284225)
Number of Verified Splits: 3 of 32
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 2.2954564094543457, worst -0.05080282688140869
10 lb beta sum: 2.3612256050109863, worst -0.02073216438293457
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 11
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.19062209129333496 
BICCOS Cumulative time: 0.8940689563751221
Preprocessing time: 0.0012602806091308594 Inference time: 0.18830466270446777 Add cuts time: 0.0005335807800292969 Cut analysis time: 0.0005235671997070312
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06284 (9), -0.06145 (9), -0.06049 (9), -0.05820 (9), -0.05457 (9), -0.05368 (9), -0.05313 (9), -0.05240 (9), -0.05233 (9), -0.05187 (9), -0.05153 (9), -0.05132 (9), -0.05121 (9), -0.05018 (9), -0.05007 (9), -0.04952 (9), -0.04920 (9), -0.04767 (9), -0.04445 (9), -0.04370 (9), 
Length of domains: 29
Time: pickout 0.0004    decision 0.0139    set_bounds 0.0017    solve 0.1965    add 0.0015    
Accumulated time: pickout 0.0070    decision 1.0119    set_bounds 0.0843    solve 2.6404    add 0.8914    
Current (lb-rhs): -0.06284224987030029
294 domains visited
Cumulative time: 5.8855743408203125

BaB round 9
batch: 29
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-12, 6901] [/input-16, 73] [/input-16, 73] [/input-12, 6901] [/input-16, 73] [/input-12, 6901] [/input-16, 73] 
cut re-enabled after branching node selection
0 lb beta sum: 2.189655303955078, worst -0.05693185329437256
10 lb beta sum: 2.189655303955078, worst -0.056855082511901855
Time: prepare 0.0029    bound 0.1882    transfer 0.0009    finalize 0.0015    func 0.1941    
Accumulated time: func 3.1219    prepare 0.0701    bound 2.9371    transfer 0.0387    finalize 0.0729    
all_split False
======================Cut inference begins======================
max lb tensor(0.25535595) min lb tensor(-0.05684483)
Number of Verified Splits: 17 of 58
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 13
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.0054814815521240234 
BICCOS Cumulative time: 0.8995504379272461
Preprocessing time: 0.0021402835845947266 Inference time: 0.0018885135650634766 Add cuts time: 0.0008156299591064453 Cut analysis time: 0.000637054443359375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05684 (10), -0.05548 (10), -0.05481 (10), -0.05456 (10), -0.05445 (10), -0.05368 (10), -0.05362 (10), -0.05243 (10), -0.05240 (10), -0.05233 (10), -0.05221 (10), -0.05153 (10), -0.05128 (10), -0.05034 (10), -0.05016 (10), -0.04919 (10), -0.04649 (10), -0.04577 (10), -0.04491 (10), -0.04450 (10), 
Length of domains: 41
Time: pickout 0.0005    decision 0.0146    set_bounds 0.0027    solve 0.1942    add 0.0017    
Accumulated time: pickout 0.0075    decision 1.0265    set_bounds 0.0870    solve 2.8345    add 0.8932    
Current (lb-rhs): -0.05684483051300049
335 domains visited
Cumulative time: 6.105096101760864

BaB round 10
batch: 41
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4378] [/input-16, 73] [/input-16, 73] [/input-12, 4378] [/input-16, 73] [/input-16, 73] [/input-12, 1178] [/input-16, 73] [/input-16, 73] [/input-12, 4378] 
cut re-enabled after branching node selection
0 lb beta sum: 2.186081886291504, worst -0.0778881311416626
10 lb beta sum: 2.3775041103363037, worst -0.056846022605895996
Time: prepare 0.0041    bound 0.1873    transfer 0.0006    finalize 0.0020    func 0.1947    
Accumulated time: func 3.3166    prepare 0.0744    bound 3.1244    transfer 0.0393    finalize 0.0749    
all_split False
======================Cut inference begins======================
max lb tensor(0.44336724) min lb tensor(-0.05683720)
Number of Verified Splits: 52 of 82
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 18
#cuts >= 20: 0
BICCOS time: 0.009194135665893555 
BICCOS Cumulative time: 0.9087445735931396
Preprocessing time: 0.002839326858520508 Inference time: 0.005086421966552734 Add cuts time: 0.0008528232574462891 Cut analysis time: 0.00041556358337402344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05684 (11), -0.05481 (11), -0.05434 (11), -0.05233 (11), -0.05210 (11), -0.05043 (11), -0.05024 (11), -0.04857 (11), -0.04844 (11), -0.04658 (11), -0.04614 (11), -0.04558 (11), -0.04414 (11), -0.04372 (11), -0.04334 (11), -0.04319 (11), -0.04134 (11), -0.04133 (11), -0.04103 (11), -0.03944 (11), 
Length of domains: 30
Time: pickout 0.0005    decision 0.0152    set_bounds 0.0039    solve 0.1948    add 0.0016    
Accumulated time: pickout 0.0080    decision 1.0417    set_bounds 0.0909    solve 3.0293    add 0.8948    
Current (lb-rhs): -0.05683720111846924
365 domains visited
Cumulative time: 6.331111431121826

BaB round 11
batch: 30
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-12, 1178] [/input-12, 4378] [/input-16, 73] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.061102867126464844
10 lb beta sum: 1.4294159412384033, worst -0.050423502922058105
Time: prepare 0.0015    bound 0.1924    transfer 0.0005    finalize 0.0015    func 0.1963    
Accumulated time: func 3.5129    prepare 0.0761    bound 3.3168    transfer 0.0397    finalize 0.0764    
all_split False
======================Cut inference begins======================
max lb tensor(0.61156988) min lb tensor(-0.05041510)
Number of Verified Splits: 44 of 60
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 20
#cuts >= 20: 0
BICCOS time: 0.007759571075439453 
BICCOS Cumulative time: 0.9165041446685791
Preprocessing time: 0.002000093460083008 Inference time: 0.004354000091552734 Add cuts time: 0.0009710788726806641 Cut analysis time: 0.0004343986511230469
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05042 (12), -0.04856 (12), -0.04842 (12), -0.04656 (12), -0.04038 (12), -0.03923 (12), -0.03881 (12), -0.03852 (12), -0.03732 (12), -0.03729 (12), -0.03694 (12), -0.03539 (12), -0.02920 (12), -0.02771 (12), -0.02724 (12), -0.02577 (12), 
Length of domains: 16
Time: pickout 0.0008    decision 0.0146    set_bounds 0.0028    solve 0.1963    add 0.0013    
Accumulated time: pickout 0.0088    decision 1.0563    set_bounds 0.0937    solve 3.2256    add 0.8961    
Current (lb-rhs): -0.050415098667144775
381 domains visited
Cumulative time: 6.554971218109131

BaB round 12
batch: 16
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05512547492980957
10 lb beta sum: 1.5192277431488037, worst -0.045687198638916016
Time: prepare 0.0009    bound 0.1872    transfer 0.0006    finalize 0.0008    func 0.1897    
Accumulated time: func 3.7025    prepare 0.0772    bound 3.5040    transfer 0.0403    finalize 0.0771    
all_split False
======================Cut inference begins======================
max lb tensor(0.23528838) min lb tensor(-0.04567617)
Number of Verified Splits: 16 of 32
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 20
#cuts >= 20: 0
BICCOS time: 0.00404810905456543 
BICCOS Cumulative time: 0.9205522537231445
Preprocessing time: 0.001224517822265625 Inference time: 0.001741647720336914 Add cuts time: 0.0005717277526855469 Cut analysis time: 0.0005102157592773438
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04568 (13), -0.04382 (13), -0.04354 (13), -0.04168 (13), -0.03561 (13), -0.03497 (13), -0.03390 (13), -0.03375 (13), -0.03303 (13), -0.03287 (13), -0.03204 (13), -0.03094 (13), -0.02490 (13), -0.02322 (13), -0.02297 (13), -0.02130 (13), 
Length of domains: 16
Time: pickout 0.0005    decision 0.0139    set_bounds 0.0016    solve 0.1897    add 0.0012    
Accumulated time: pickout 0.0093    decision 1.0702    set_bounds 0.0953    solve 3.4153    add 0.8973    
Current (lb-rhs): -0.04567617177963257
397 domains visited
Cumulative time: 6.766222715377808

BaB round 13
batch: 16
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5532] [/input-12, 5532] [/input-12, 5532] [/input-12, 5532] [/input-12, 5532] [/input-12, 5532] [/input-12, 5532] [/input-12, 5532] [/input-12, 5532] [/input-12, 5532] 
cut re-enabled after branching node selection
0 lb beta sum: 1.6497068405151367, worst -0.04303187131881714
10 lb beta sum: 1.6497068405151367, worst -0.04302257299423218
Time: prepare 0.0017    bound 0.1875    transfer 0.0003    finalize 0.0008    func 0.1905    
Accumulated time: func 3.8930    prepare 0.0790    bound 3.6914    transfer 0.0406    finalize 0.0779    
all_split False
======================Cut inference begins======================
max lb tensor(-0.00327611) min lb tensor(-0.04301637)
Number of Verified Splits: 0 of 32
No cut inferred: All or none verified.
Total number of valid cuts: 20.
#cuts 1-3: 20
#cuts >= 20: 0
BICCOS time: 0.0012443065643310547 
BICCOS Cumulative time: 0.9217965602874756
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04302 (14), -0.04115 (14), -0.04081 (14), -0.03894 (14), -0.03292 (14), -0.03215 (14), -0.03114 (14), -0.03107 (14), -0.03021 (14), -0.02993 (14), -0.02929 (14), -0.02805 (14), -0.02772 (14), -0.02610 (14), -0.02586 (14), -0.02425 (14), -0.02206 (14), -0.02031 (14), -0.02014 (14), -0.01837 (14), 
Length of domains: 32
Time: pickout 0.0005    decision 0.0138    set_bounds 0.0016    solve 0.1905    add 0.0028    
Accumulated time: pickout 0.0098    decision 1.0840    set_bounds 0.0970    solve 3.6058    add 0.9001    
Current (lb-rhs): -0.04301637411117554
429 domains visited
Cumulative time: 6.976768732070923

BaB round 14
batch: 32
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 610] [/input-12, 610] [/input-12, 610] [/input-12, 610] [/input-12, 610] [/input-12, 610] [/input-12, 610] [/input-12, 610] [/input-12, 610] [/input-12, 610] 
cut re-enabled after branching node selection
0 lb beta sum: 1.6497069597244263, worst -0.04301685094833374
10 lb beta sum: 1.6497069597244263, worst -0.043016135692596436
Time: prepare 0.0033    bound 0.1863    transfer 0.0005    finalize 0.0013    func 0.1918    
Accumulated time: func 4.0848    prepare 0.0826    bound 3.8777    transfer 0.0411    finalize 0.0792    
all_split False
======================Cut inference begins======================
max lb tensor(0.23629832) min lb tensor(-0.04301232)
Number of Verified Splits: 32 of 64
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.0072383880615234375 
BICCOS Cumulative time: 0.929034948348999
Preprocessing time: 0.002197265625 Inference time: 0.0037622451782226562 Add cuts time: 0.0008275508880615234 Cut analysis time: 0.0004513263702392578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04301 (15), -0.04114 (15), -0.04080 (15), -0.03893 (15), -0.03291 (15), -0.03212 (15), -0.03114 (15), -0.03104 (15), -0.03020 (15), -0.02989 (15), -0.02927 (15), -0.02796 (15), -0.02753 (15), -0.02592 (15), -0.02566 (15), -0.02406 (15), -0.02202 (15), -0.02026 (15), -0.02010 (15), -0.01833 (15), 
Length of domains: 32
Time: pickout 0.0005    decision 0.0146    set_bounds 0.0031    solve 0.1919    add 0.0015    
Accumulated time: pickout 0.0103    decision 1.0986    set_bounds 0.1000    solve 3.7977    add 0.9016    
Current (lb-rhs): -0.04301232099533081
461 domains visited
Cumulative time: 7.195847988128662

BaB round 15
batch: 32
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 13] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04494953155517578
10 lb beta sum: 1.156099557876587, worst -0.04301294684410095
Time: prepare 0.0016    bound 0.1872    transfer 0.0005    finalize 0.0012    func 0.1909    
Accumulated time: func 4.2757    prepare 0.0843    bound 4.0649    transfer 0.0416    finalize 0.0804    
all_split False
======================Cut inference begins======================
max lb tensor(0.07328308) min lb tensor(-0.04301035)
Number of Verified Splits: 32 of 64
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.007678031921386719 
BICCOS Cumulative time: 0.9367129802703857
Preprocessing time: 0.0021626949310302734 Inference time: 0.004149436950683594 Add cuts time: 0.0009138584136962891 Cut analysis time: 0.0004520416259765625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04301 (16), -0.04114 (16), -0.04080 (16), -0.03893 (16), -0.03291 (16), -0.03212 (16), -0.03114 (16), -0.03104 (16), -0.03019 (16), -0.02989 (16), -0.02926 (16), -0.02796 (16), -0.02743 (16), -0.02580 (16), -0.02556 (16), -0.02393 (16), -0.02202 (16), -0.02025 (16), -0.02009 (16), -0.01832 (16), 
Length of domains: 32
Time: pickout 0.0005    decision 0.0146    set_bounds 0.0029    solve 0.1909    add 0.0015    
Accumulated time: pickout 0.0108    decision 1.1132    set_bounds 0.1029    solve 3.9886    add 0.9030    
Current (lb-rhs): -0.04301035404205322
493 domains visited
Cumulative time: 7.414258003234863

BaB round 16
batch: 32
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1774] [/input-12, 1774] [/input-12, 1774] [/input-12, 1774] [/input-12, 1774] [/input-12, 1774] [/input-12, 1774] [/input-12, 1774] [/input-12, 1774] [/input-12, 1774] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2759077548980713, worst -0.03845560550689697
10 lb beta sum: 1.2759077548980713, worst -0.03843677043914795
Time: prepare 0.0032    bound 0.1869    transfer 0.0005    finalize 0.0012    func 0.1922    
Accumulated time: func 4.4679    prepare 0.0877    bound 4.2518    transfer 0.0420    finalize 0.0816    
all_split False
======================Cut inference begins======================
max lb tensor(0.00298893) min lb tensor(-0.03841937)
Number of Verified Splits: 6 of 64
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.003801584243774414 
BICCOS Cumulative time: 0.9405145645141602
Preprocessing time: 0.002151966094970703 Inference time: 0.0008141994476318359 Add cuts time: 0.0004038810729980469 Cut analysis time: 0.0004315376281738281
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03842 (17), -0.03716 (17), -0.03649 (17), -0.03621 (17), -0.03527 (17), -0.03494 (17), -0.03428 (17), -0.03306 (17), -0.02831 (17), -0.02753 (17), -0.02705 (17), -0.02654 (17), -0.02640 (17), -0.02627 (17), -0.02555 (17), -0.02532 (17), -0.02527 (17), -0.02517 (17), -0.02460 (17), -0.02433 (17), 
Length of domains: 58
Time: pickout 0.0005    decision 0.0145    set_bounds 0.0029    solve 0.1922    add 0.0020    
Accumulated time: pickout 0.0113    decision 1.1278    set_bounds 0.1058    solve 4.1809    add 0.9050    
Current (lb-rhs): -0.038419365882873535
551 domains visited
Cumulative time: 7.6305248737335205

BaB round 17
batch: 58
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5916] [/input-12, 5916] [/input-12, 5916] [/input-12, 5916] [/input-12, 5916] [/input-12, 5916] [/input-12, 5916] [/input-12, 5916] [/input-12, 5916] [/input-12, 5916] 
cut re-enabled after branching node selection
0 lb beta sum: 1.233315110206604, worst -0.03440701961517334
10 lb beta sum: 1.233315110206604, worst -0.034386277198791504
Time: prepare 0.0054    bound 0.1922    transfer 0.0015    finalize 0.0035    func 0.2036    
Accumulated time: func 4.6715    prepare 0.0932    bound 4.4440    transfer 0.0435    finalize 0.0851    
all_split False
======================Cut inference begins======================
max lb tensor(0.00504398) min lb tensor(-0.03436911)
Number of Verified Splits: 4 of 116
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.005345821380615234 
BICCOS Cumulative time: 0.9458603858947754
Preprocessing time: 0.0037102699279785156 Inference time: 0.0005786418914794922 Add cuts time: 0.0004513263702392578 Cut analysis time: 0.0006055831909179688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03437 (18), -0.03314 (18), -0.03305 (18), -0.03243 (18), -0.03219 (18), -0.03180 (18), -0.03121 (18), -0.03112 (18), -0.03096 (18), -0.03065 (18), -0.03024 (18), -0.02986 (18), -0.02939 (18), -0.02903 (18), -0.02869 (18), -0.02745 (18), -0.02427 (18), -0.02372 (18), -0.02304 (18), -0.02295 (18), 
Length of domains: 112
Time: pickout 0.0005    decision 0.0161    set_bounds 0.0052    solve 0.2037    add 0.0048    
Accumulated time: pickout 0.0118    decision 1.1438    set_bounds 0.1110    solve 4.3845    add 0.9098    
Current (lb-rhs): -0.03436911106109619
663 domains visited
Cumulative time: 7.8663554191589355

BaB round 18
batch: 112
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 725] [/input-12, 725] [/input-12, 725] [/input-12, 725] [/input-12, 725] [/input-12, 725] [/input-12, 725] [/input-12, 725] [/input-12, 725] [/input-12, 725] 
cut re-enabled after branching node selection
0 lb beta sum: 1.222271203994751, worst -0.03289902210235596
10 lb beta sum: 1.2222697734832764, worst -0.03287994861602783
Time: prepare 0.0103    bound 0.1888    transfer 0.0010    finalize 0.0050    func 0.2067    
Accumulated time: func 4.8782    prepare 0.1037    bound 4.6328    transfer 0.0445    finalize 0.0901    
all_split False
======================Cut inference begins======================
max lb tensor(0.01021236) min lb tensor(-0.03286850)
Number of Verified Splits: 87 of 224
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.02187490463256836 
BICCOS Cumulative time: 0.9677352905273438
Preprocessing time: 0.006937503814697266 Inference time: 0.012206077575683594 Add cuts time: 0.0022699832916259766 Cut analysis time: 0.00046133995056152344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03287 (19), -0.03167 (19), -0.03164 (19), -0.03094 (19), -0.03069 (19), -0.03041 (19), -0.02971 (19), -0.02971 (19), -0.02948 (19), -0.02924 (19), -0.02875 (19), -0.02845 (19), -0.02801 (19), -0.02752 (19), -0.02729 (19), -0.02604 (19), -0.02277 (19), -0.02220 (19), -0.02157 (19), -0.02154 (19), 
Length of domains: 137
Time: pickout 0.0009    decision 0.0193    set_bounds 0.0099    solve 0.2068    add 0.0037    
Accumulated time: pickout 0.0127    decision 1.1631    set_bounds 0.1209    solve 4.5913    add 0.9135    
Current (lb-rhs): -0.03286850452423096
800 domains visited
Cumulative time: 8.129462718963623

BaB round 19
batch: 137
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 267] [/input-12, 267] [/input-12, 267] [/input-12, 267] [/input-12, 267] [/input-12, 267] [/input-12, 267] [/input-12, 267] [/input-12, 217] [/input-12, 217] 
cut re-enabled after branching node selection
0 lb beta sum: 1.1692732572555542, worst -0.02995002269744873
10 lb beta sum: 1.1692711114883423, worst -0.02993333339691162
Time: prepare 0.0124    bound 0.1984    transfer 0.0012    finalize 0.0036    func 0.2176    
Accumulated time: func 5.0957    prepare 0.1164    bound 4.8313    transfer 0.0457    finalize 0.0937    
all_split False
======================Cut inference begins======================
max lb tensor(0.24410087) min lb tensor(-0.02992475)
Number of Verified Splits: 77 of 274
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 22
#cuts >= 20: 0
BICCOS time: 0.021417617797851562 
BICCOS Cumulative time: 0.9891529083251953
Preprocessing time: 0.008056402206420898 Inference time: 0.010846614837646484 Add cuts time: 0.0020372867584228516 Cut analysis time: 0.0004773139953613281
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02992 (20), -0.02873 (20), -0.02869 (20), -0.02838 (20), -0.02800 (20), -0.02777 (20), -0.02746 (20), -0.02718 (20), -0.02692 (20), -0.02677 (20), -0.02676 (20), -0.02656 (20), -0.02653 (20), -0.02645 (20), -0.02602 (20), -0.02584 (20), -0.02570 (20), -0.02551 (20), -0.02530 (20), -0.02523 (20), 
Length of domains: 197
Time: pickout 0.0009    decision 0.0265    set_bounds 0.0116    solve 0.2183    add 0.0058    
Accumulated time: pickout 0.0136    decision 1.1896    set_bounds 0.1325    solve 4.8096    add 0.9193    
Current (lb-rhs): -0.029924750328063965
997 domains visited
Cumulative time: 8.414690732955933

BaB round 20
batch: 197
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 217] [/input-12, 217] [/input-12, 217] [/input-12, 217] [/input-12, 217] [/input-12, 217] [/input-12, 217] [/input-12, 217] [/input-12, 1178] [/input-12, 1178] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.029470443725585938
10 lb beta sum: 0.8532494902610779, worst -0.027506887912750244
Time: prepare 0.0077    bound 0.2202    transfer 0.0025    finalize 0.0110    func 0.2448    
Accumulated time: func 5.3405    prepare 0.1244    bound 5.0515    transfer 0.0482    finalize 0.1047    
all_split False
======================Cut inference begins======================
max lb tensor(0.34018642) min lb tensor(-0.02749240)
Number of Verified Splits: 107 of 394
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 22
#cuts >= 20: 0
BICCOS time: 0.030504703521728516 
BICCOS Cumulative time: 1.0196576118469238
Preprocessing time: 0.011471748352050781 Inference time: 0.015500545501708984 Add cuts time: 0.0030574798583984375 Cut analysis time: 0.0004749298095703125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02749 (21), -0.02630 (21), -0.02624 (21), -0.02556 (21), -0.02546 (21), -0.02534 (21), -0.02502 (21), -0.02434 (21), -0.02431 (21), -0.02426 (21), -0.02413 (21), -0.02407 (21), -0.02400 (21), -0.02374 (21), -0.02352 (21), -0.02341 (21), -0.02328 (21), -0.02306 (21), -0.02286 (21), -0.02278 (21), 
Length of domains: 287
Time: pickout 0.0062    decision 0.0278    set_bounds 0.0166    solve 0.2450    add 0.0054    
Accumulated time: pickout 0.0198    decision 1.2174    set_bounds 0.1490    solve 5.0546    add 0.9247    
Current (lb-rhs): -0.027492403984069824
1284 domains visited
Cumulative time: 8.747137069702148

BaB round 21
batch: 256
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1771] [/input-12, 1771] [/input-12, 1771] [/input-12, 1771] [/input-12, 1771] [/input-12, 1771] [/input-12, 1771] [/input-12, 1771] [/input-12, 1178] [/input-12, 1771] 
cut re-enabled after branching node selection
0 lb beta sum: 1.0947545766830444, worst -0.025370478630065918
10 lb beta sum: 1.0947496891021729, worst -0.025354981422424316
Time: prepare 0.0230    bound 0.2199    transfer 0.0021    finalize 0.0133    func 0.2619    
Accumulated time: func 5.6024    prepare 0.1476    bound 5.2714    transfer 0.0503    finalize 0.1180    
all_split False
======================Cut inference begins======================
max lb tensor(0.24503124) min lb tensor(-0.02534974)
Number of Verified Splits: 188 of 512
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 22
#cuts >= 20: 0
BICCOS time: 0.04834151268005371 
BICCOS Cumulative time: 1.0679991245269775
Preprocessing time: 0.014774799346923828 Inference time: 0.030024051666259766 Add cuts time: 0.0030689239501953125 Cut analysis time: 0.0004737377166748047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02535 (22), -0.02434 (21), -0.02426 (21), -0.02415 (22), -0.02412 (22), -0.02342 (22), -0.02329 (22), -0.02318 (22), -0.02290 (22), -0.02230 (21), -0.02219 (22), -0.02198 (22), -0.02194 (22), -0.02185 (22), -0.02136 (22), -0.02125 (22), -0.02109 (22), -0.02095 (22), -0.02080 (22), -0.02073 (22), 
Length of domains: 355
Time: pickout 0.0012    decision 0.0296    set_bounds 0.0223    solve 0.2621    add 0.0055    
Accumulated time: pickout 0.0211    decision 1.2470    set_bounds 0.1714    solve 5.3166    add 0.9302    
Current (lb-rhs): -0.025349736213684082
1608 domains visited
current_vram/total_varm: 2.9GB/99.9GB, batch_size increase to 512
Cumulative time: 9.118075132369995

BaB round 22
batch: 355
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1771] [/input-12, 1771] [/input-12, 1771] [/input-12, 1771] [/input-12, 1771] [/input-12, 1771] [/input-12, 1771] [/input-12, 1771] [/input-12, 1771] [/input-12, 1771] 
cut re-enabled after branching node selection
0 lb beta sum: 1.0478968620300293, worst -0.023553967475891113
10 lb beta sum: 1.0478968620300293, worst -0.02355039119720459
Time: prepare 0.0330    bound 0.2461    transfer 0.0060    finalize 0.0194    func 0.3092    
Accumulated time: func 5.9116    prepare 0.1808    bound 5.5175    transfer 0.0563    finalize 0.1375    
all_split False
======================Cut inference begins======================
max lb tensor(0.24207318) min lb tensor(-0.02354586)
Number of Verified Splits: 261 of 710
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 22
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.06789016723632812 
BICCOS Cumulative time: 1.1358892917633057
Preprocessing time: 0.02053380012512207 Inference time: 0.04223132133483887 Add cuts time: 0.004480123519897461 Cut analysis time: 0.0006449222564697266
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02355 (23), -0.02235 (23), -0.02230 (23), -0.02220 (22), -0.02210 (22), -0.02163 (23), -0.02149 (23), -0.02137 (23), -0.02109 (23), -0.02039 (23), -0.02033 (23), -0.02014 (22), -0.02011 (23), -0.02004 (23), -0.01960 (23), -0.01957 (23), -0.01928 (23), -0.01907 (23), -0.01904 (23), -0.01883 (23), 
Length of domains: 449
Time: pickout 0.0013    decision 0.0396    set_bounds 0.0253    solve 0.3095    add 0.0084    
Accumulated time: pickout 0.0224    decision 1.2866    set_bounds 0.1967    solve 5.6261    add 0.9385    
Current (lb-rhs): -0.02354586124420166
2057 domains visited
Cumulative time: 9.572113752365112

BaB round 23
batch: 449
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-4, 1207] [/input-12, 5259] [/input-4, 1207] [/input-4, 1207] [/input-4, 1207] [/input-4, 1207] [/input-12, 5259] [/input-4, 1207] [/input-12, 5259] [/input-4, 1207] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.023616552352905273
10 lb beta sum: 0.6815836429595947, worst -0.021652311086654663
Time: prepare 0.0205    bound 0.2626    transfer 0.0042    finalize 0.0151    func 0.3084    
Accumulated time: func 6.2200    prepare 0.2015    bound 5.7801    transfer 0.0605    finalize 0.1526    
all_split False
======================Cut inference begins======================
max lb tensor(0.24923402) min lb tensor(-0.02164614)
Number of Verified Splits: 367 of 898
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 31.
#cuts 1-3: 22
#cuts 4-6: 9
#cuts >= 20: 0
BICCOS time: 0.0930643081665039 
BICCOS Cumulative time: 1.2289535999298096
Preprocessing time: 0.027312278747558594 Inference time: 0.0583643913269043 Add cuts time: 0.006601810455322266 Cut analysis time: 0.00078582763671875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02165 (24), -0.02045 (24), -0.02041 (24), -0.02030 (23), -0.02029 (23), -0.01973 (24), -0.01973 (24), -0.01959 (24), -0.01919 (24), -0.01852 (24), -0.01849 (24), -0.01848 (24), -0.01824 (23), -0.01815 (24), -0.01780 (24), -0.01767 (24), -0.01763 (24), -0.01726 (24), -0.01724 (24), -0.01694 (24), 
Length of domains: 531
Time: pickout 0.0147    decision 0.0469    set_bounds 0.0354    solve 0.3087    add 0.0084    
Accumulated time: pickout 0.0371    decision 1.3335    set_bounds 0.2320    solve 5.9348    add 0.9470    
Current (lb-rhs): -0.02164614200592041
2588 domains visited
Cumulative time: 10.081998109817505

BaB round 24
batch: 512
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5259] [/input-4, 1207] [/input-12, 5259] [/input-12, 5259] [/input-12, 5259] [/input-12, 5259] [/input-4, 1207] [/input-12, 5259] [/input-4, 1207] [/input-12, 5259] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.020467042922973633
10 lb beta sum: 0.6370518803596497, worst -0.018508195877075195
Time: prepare 0.0244    bound 0.2787    transfer 0.0038    finalize 0.0166    func 0.3303    
Accumulated time: func 6.5503    prepare 0.2262    bound 6.0588    transfer 0.0643    finalize 0.1692    
all_split False
======================Cut inference begins======================
max lb tensor(0.24869519) min lb tensor(-0.01849955)
Number of Verified Splits: 433 of 1024
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 34.
#cuts 1-3: 23
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.12199091911315918 
BICCOS Cumulative time: 1.3509445190429688
Preprocessing time: 0.03126096725463867 Inference time: 0.0815880298614502 Add cuts time: 0.008161067962646484 Cut analysis time: 0.0009808540344238281
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01850 (24), -0.01840 (24), -0.01783 (25), -0.01712 (25), -0.01664 (25), -0.01662 (25), -0.01645 (24), -0.01594 (25), -0.01592 (25), -0.01592 (25), -0.01590 (25), -0.01582 (25), -0.01541 (25), -0.01523 (25), -0.01521 (25), -0.01502 (25), -0.01498 (25), -0.01472 (25), -0.01471 (25), -0.01471 (25), 
Length of domains: 610
Time: pickout 0.0037    decision 0.0483    set_bounds 0.0423    solve 0.3305    add 0.0125    
Accumulated time: pickout 0.0408    decision 1.3818    set_bounds 0.2744    solve 6.2653    add 0.9595    
Current (lb-rhs): -0.018499553203582764
3179 domains visited
current_vram/total_varm: 5.9GB/99.9GB, batch_size increase to 1024
Cumulative time: 10.653568983078003

BaB round 25
batch: 610
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5259] [/input-12, 5259] [/input-12, 5259] [/input-12, 5259] [/input-12, 5259] [/input-12, 5259] [/input-12, 5259] [/input-12, 2149] [/input-12, 2149] [/input-12, 5259] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.017991304397583008
10 lb beta sum: 0.5605969429016113, worst -0.0166255384683609
Time: prepare 0.0412    bound 0.3248    transfer 0.0058    finalize 0.0386    func 0.4183    
Accumulated time: func 6.9686    prepare 0.2676    bound 6.3836    transfer 0.0701    finalize 0.2078    
all_split False
======================Cut inference begins======================
max lb tensor(0.34093404) min lb tensor(-0.01661302)
Number of Verified Splits: 604 of 1220
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 29
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.15165972709655762 
BICCOS Cumulative time: 1.5026042461395264
Preprocessing time: 0.038417816162109375 Inference time: 0.10072088241577148 Add cuts time: 0.01160287857055664 Cut analysis time: 0.0009181499481201172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01661 (26), -0.01602 (26), -0.01581 (26), -0.01541 (26), -0.01531 (26), -0.01482 (26), -0.01470 (26), -0.01469 (25), -0.01467 (26), -0.01462 (25), -0.01450 (26), -0.01413 (26), -0.01411 (26), -0.01410 (26), -0.01405 (26), -0.01399 (25), -0.01389 (26), -0.01384 (26), -0.01383 (25), -0.01363 (26), 
Length of domains: 616
Time: pickout 0.0190    decision 0.0604    set_bounds 0.2478    solve 0.4187    add 0.0097    
Accumulated time: pickout 0.0598    decision 1.4423    set_bounds 0.5222    solve 6.6840    add 0.9692    
Current (lb-rhs): -0.01661302149295807
3795 domains visited
Cumulative time: 11.56557011604309

BaB round 26
batch: 616
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6731] [/input-12, 6731] [/input-12, 6731] [/input-12, 6731] [/input-12, 6731] [/input-12, 6731] [/input-12, 6731] [/input-12, 6731] [/input-12, 6731] [/input-12, 2149] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.016475439071655273
10 lb beta sum: 0.4449509084224701, worst -0.020350217819213867
Time: prepare 0.0321    bound 0.3258    transfer 0.0062    finalize 0.0167    func 0.3890    
Accumulated time: func 7.3576    prepare 0.2999    bound 6.7094    transfer 0.0764    finalize 0.2244    
all_split False
======================Cut inference begins======================
max lb tensor(0.34211063) min lb tensor(-0.01600486)
Number of Verified Splits: 602 of 1232
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 35.
#cuts 1-3: 29
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.15438079833984375 
BICCOS Cumulative time: 1.6569850444793701
Preprocessing time: 0.03746747970581055 Inference time: 0.10276579856872559 Add cuts time: 0.013306617736816406 Cut analysis time: 0.0008409023284912109
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01600 (27), -0.01530 (27), -0.01481 (27), -0.01480 (27), -0.01462 (26), -0.01449 (27), -0.01410 (27), -0.01410 (27), -0.01408 (27), -0.01404 (27), -0.01401 (27), -0.01360 (27), -0.01338 (27), -0.01337 (27), -0.01319 (27), -0.01291 (27), -0.01289 (27), -0.01287 (26), -0.01285 (27), -0.01283 (27), 
Length of domains: 630
Time: pickout 0.0039    decision 0.0564    set_bounds 0.0523    solve 0.3893    add 0.0165    
Accumulated time: pickout 0.0637    decision 1.4987    set_bounds 0.5744    solve 7.0733    add 0.9858    
Current (lb-rhs): -0.016004860401153564
4425 domains visited
Cumulative time: 12.244269132614136

BaB round 27
batch: 630
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6731] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-12, 2149] [/input-12, 2149] [/input-12, 2149] [/input-12, 2149] [/input-12, 2149] [/input-12, 2149] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.014688253402709961
10 lb beta sum: 0.36257046461105347, worst -0.014050304889678955
Time: prepare 0.0310    bound 0.3288    transfer 0.0064    finalize 0.0322    func 0.4068    
Accumulated time: func 7.7644    prepare 0.3312    bound 7.0382    transfer 0.0828    finalize 0.2567    
all_split False
======================Cut inference begins======================
max lb tensor(0.46919644) min lb tensor(-0.01399606)
Number of Verified Splits: 705 of 1260
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 33.
#cuts 1-3: 27
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.1775341033935547 
BICCOS Cumulative time: 1.8345191478729248
Preprocessing time: 0.03906536102294922 Inference time: 0.1237952709197998 Add cuts time: 0.013848066329956055 Cut analysis time: 0.0008254051208496094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01400 (28), -0.01347 (28), -0.01286 (27), -0.01281 (27), -0.01278 (28), -0.01270 (28), -0.01230 (28), -0.01229 (28), -0.01216 (27), -0.01206 (28), -0.01200 (28), -0.01198 (27), -0.01160 (28), -0.01160 (28), -0.01158 (28), -0.01151 (28), -0.01147 (28), -0.01108 (28), -0.01089 (28), -0.01087 (27), 
Length of domains: 555
Time: pickout 0.0182    decision 0.0592    set_bounds 0.0547    solve 0.4071    add 0.0134    
Accumulated time: pickout 0.0819    decision 1.5579    set_bounds 0.6291    solve 7.4804    add 0.9992    
Current (lb-rhs): -0.01399606466293335
4980 domains visited
Cumulative time: 12.98087191581726

BaB round 28
batch: 555
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2149] [/input-12, 2149] [/input-12, 2149] [/input-12, 2465] [/input-12, 2465] [/input-12, 2465] [/input-12, 2465] [/input-12, 2465] [/input-12, 2465] [/input-12, 2465] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.012979984283447266
10 lb beta sum: 0.33200353384017944, worst -0.012845814228057861
Time: prepare 0.0271    bound 0.3018    transfer 0.0041    finalize 0.0203    func 0.3607    
Accumulated time: func 8.1251    prepare 0.3586    bound 7.3400    transfer 0.0868    finalize 0.2770    
all_split False
======================Cut inference begins======================
max lb tensor(0.32749569) min lb tensor(-0.01279110)
Number of Verified Splits: 641 of 1110
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 43.
#cuts 1-3: 29
#cuts 4-6: 14
#cuts >= 20: 0
BICCOS time: 0.16105985641479492 
BICCOS Cumulative time: 1.9955790042877197
Preprocessing time: 0.03450179100036621 Inference time: 0.1138923168182373 Add cuts time: 0.011554956436157227 Cut analysis time: 0.0011107921600341797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01279 (28), -0.01146 (29), -0.01098 (29), -0.01085 (28), -0.01037 (28), -0.01029 (29), -0.01018 (29), -0.00980 (29), -0.00979 (29), -0.00968 (28), -0.00957 (29), -0.00949 (28), -0.00946 (29), -0.00917 (28), -0.00912 (29), -0.00911 (29), -0.00909 (29), -0.00902 (29), -0.00897 (29), -0.00873 (29), 
Length of domains: 469
Time: pickout 0.0024    decision 0.0525    set_bounds 0.0472    solve 0.3611    add 0.0082    
Accumulated time: pickout 0.0843    decision 1.6104    set_bounds 0.6763    solve 7.8415    add 1.0074    
Current (lb-rhs): -0.012791097164154053
5449 domains visited
Cumulative time: 13.618268013000488

BaB round 29
batch: 469
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2465] [/input-12, 2465] [/input-12, 2465] [/input-4, 1191] [/input-4, 1191] [/input-4, 1191] [/input-4, 1191] [/input-4, 1191] [/input-4, 1191] [/input-4, 1191] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.010462284088134766
10 lb beta sum: 0.26967138051986694, worst -0.010301172733306885
Time: prepare 0.0238    bound 0.2720    transfer 0.0046    finalize 0.0120    func 0.3196    
Accumulated time: func 8.4446    prepare 0.3827    bound 7.6121    transfer 0.0915    finalize 0.2890    
all_split False
======================Cut inference begins======================
max lb tensor(0.00541019) min lb tensor(-0.01027060)
Number of Verified Splits: 512 of 938
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 57.
#cuts 1-3: 34
#cuts 4-6: 23
#cuts >= 20: 0
BICCOS time: 0.13364601135253906 
BICCOS Cumulative time: 2.129225015640259
Preprocessing time: 0.029650449752807617 Inference time: 0.09129953384399414 Add cuts time: 0.011242389678955078 Cut analysis time: 0.0014536380767822266
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01027 (29), -0.00896 (30), -0.00854 (30), -0.00835 (29), -0.00791 (30), -0.00788 (29), -0.00768 (30), -0.00743 (30), -0.00736 (30), -0.00724 (29), -0.00720 (29), -0.00706 (30), -0.00703 (30), -0.00699 (29), -0.00694 (30), -0.00676 (30), -0.00674 (30), -0.00661 (30), -0.00661 (30), -0.00658 (30), 
Length of domains: 426
Time: pickout 0.0224    decision 0.0462    set_bounds 0.0403    solve 0.3198    add 0.0114    
Accumulated time: pickout 0.1067    decision 1.6565    set_bounds 0.7167    solve 8.1614    add 1.0188    
Current (lb-rhs): -0.01027059555053711
5875 domains visited
Cumulative time: 14.195950269699097

BaB round 30
batch: 426
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-4, 1191] [/input-4, 1191] [/input-12, 2364] [/input-12, 2364] [/input-12, 2364] [/input-12, 2364] [/input-12, 2364] [/input-12, 2364] [/input-12, 2364] [/input-12, 2364] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.00795435905456543
10 lb beta sum: 0.209246426820755, worst -0.013494431972503662
Time: prepare 0.0212    bound 0.2470    transfer 0.0044    finalize 0.0108    func 0.2889    
Accumulated time: func 8.7336    prepare 0.4041    bound 7.8591    transfer 0.0959    finalize 0.2998    
all_split False
======================Cut inference begins======================
max lb tensor(0.32432634) min lb tensor(-0.00777066)
Number of Verified Splits: 563 of 852
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 41.
#cuts 1-3: 39
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.14467287063598633 
BICCOS Cumulative time: 2.273897886276245
Preprocessing time: 0.02538585662841797 Inference time: 0.10684418678283691 Add cuts time: 0.01146841049194336 Cut analysis time: 0.0009744167327880859
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00777 (30), -0.00760 (31), -0.00697 (31), -0.00663 (31), -0.00650 (31), -0.00642 (31), -0.00624 (31), -0.00597 (31), -0.00586 (30), -0.00579 (31), -0.00568 (31), -0.00560 (31), -0.00557 (31), -0.00546 (31), -0.00543 (30), -0.00542 (31), -0.00541 (30), -0.00532 (31), -0.00505 (31), -0.00505 (31), 
Length of domains: 289
Time: pickout 0.0045    decision 0.1998    set_bounds 0.0368    solve 0.2891    add 0.0073    
Accumulated time: pickout 0.1112    decision 1.8564    set_bounds 0.7534    solve 8.4505    add 1.0260    
Current (lb-rhs): -0.007770657539367676
6164 domains visited
Cumulative time: 14.881823539733887

BaB round 31
batch: 289
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 963] [/input-12, 963] [/input-12, 963] [/input-12, 963] [/input-12, 963] [/input-12, 963] [/input-12, 963] [/input-12, 963] [/input-12, 963] [/input-12, 963] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.00707554817199707
10 lb beta sum: 0.3214249908924103, worst -0.014409542083740234
Time: prepare 0.0149    bound 0.2198    transfer 0.0035    finalize 0.0126    func 0.2546    
Accumulated time: func 8.9882    prepare 0.4193    bound 8.0789    transfer 0.0993    finalize 0.3124    
all_split False
======================Cut inference begins======================
max lb tensor(0.93621349) min lb tensor(-0.00679764)
Number of Verified Splits: 494 of 578
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 36
#cuts >= 20: 0
BICCOS time: 0.11740851402282715 
BICCOS Cumulative time: 2.3913064002990723
Preprocessing time: 0.0175015926361084 Inference time: 0.09203982353210449 Add cuts time: 0.007209300994873047 Cut analysis time: 0.0006577968597412109
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00680 (32), -0.00617 (32), -0.00569 (32), -0.00562 (32), -0.00530 (32), -0.00503 (32), -0.00499 (32), -0.00491 (32), -0.00479 (32), -0.00478 (32), -0.00462 (32), -0.00452 (32), -0.00449 (32), -0.00428 (32), -0.00412 (32), -0.00405 (32), -0.00401 (32), -0.00381 (32), -0.00380 (32), -0.00372 (31), 
Length of domains: 84
Time: pickout 0.0114    decision 0.0340    set_bounds 0.0249    solve 0.2548    add 0.0026    
Accumulated time: pickout 0.1226    decision 1.8904    set_bounds 0.7783    solve 8.7053    add 1.0287    
Current (lb-rhs): -0.0067976415157318115
6248 domains visited
Cumulative time: 15.329742193222046

BaB round 32
batch: 84
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7214] [/input-12, 7214] [/input-12, 7214] [/input-12, 963] [/input-12, 963] [/input-12, 2364] [/input-12, 2364] [/input-12, 7214] [/input-12, 7214] [/input-12, 7214] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.00514984130859375
10 lb beta sum: 0.49853193759918213, worst -0.004883930087089539
Time: prepare 0.0044    bound 0.1941    transfer 0.0022    finalize 0.0027    func 0.2046    
Accumulated time: func 9.1927    prepare 0.4239    bound 8.2730    transfer 0.1015    finalize 0.3151    
all_split False
======================Cut inference begins======================
max lb tensor(0.47105843) min lb tensor(-0.00488049)
Number of Verified Splits: 140 of 168
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 37
#cuts >= 20: 0
BICCOS time: 0.03575420379638672 
BICCOS Cumulative time: 2.427060604095459
Preprocessing time: 0.005380868911743164 Inference time: 0.027261734008789062 Add cuts time: 0.0024514198303222656 Cut analysis time: 0.0006601810455322266
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00488 (33), -0.00477 (33), -0.00377 (33), -0.00371 (32), -0.00363 (33), -0.00359 (32), -0.00338 (33), -0.00322 (33), -0.00302 (33), -0.00288 (33), -0.00249 (33), -0.00231 (32), -0.00226 (33), -0.00213 (33), -0.00206 (33), -0.00203 (32), -0.00190 (33), -0.00168 (32), -0.00166 (33), -0.00162 (33), 
Length of domains: 28
Time: pickout 0.0014    decision 0.0207    set_bounds 0.0073    solve 0.2047    add 0.0019    
Accumulated time: pickout 0.1240    decision 1.9111    set_bounds 0.7856    solve 8.9099    add 1.0306    
Current (lb-rhs): -0.00488048791885376
6276 domains visited
Cumulative time: 15.60231065750122

BaB round 33
batch: 28
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6754] [/input-12, 6754] [/input-12, 6754] [/input-12, 7214] [/input-12, 7214] [/input-12, 7214] [/input-12, 7214] [/input-12, 7214] [/input-12, 6754] [/input-12, 963] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.003760099411010742
10 lb beta sum: 0.3668924868106842, worst -0.0034593790769577026
Time: prepare 0.0018    bound 0.1913    transfer 0.0005    finalize 0.0020    func 0.1960    
Accumulated time: func 9.3887    prepare 0.4258    bound 8.4642    transfer 0.1020    finalize 0.3171    
all_split False
======================Cut inference begins======================
max lb tensor(0.47320664) min lb tensor(-0.00345713)
Number of Verified Splits: 43 of 56
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 37
#cuts >= 20: 0
BICCOS time: 0.012462854385375977 
BICCOS Cumulative time: 2.439523458480835
Preprocessing time: 0.0020172595977783203 Inference time: 0.008342266082763672 Add cuts time: 0.0014641284942626953 Cut analysis time: 0.0006392002105712891
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00346 (34), -0.00284 (34), -0.00221 (34), -0.00195 (34), -0.00173 (33), -0.00160 (33), -0.00159 (34), -0.00130 (34), -0.00098 (34), -0.00070 (34), -0.00032 (33), -0.00018 (34), -0.00007 (33), 
Length of domains: 13
Time: pickout 0.0008    decision 0.0146    set_bounds 0.0026    solve 0.1961    add 0.0013    
Accumulated time: pickout 0.1248    decision 1.9256    set_bounds 0.7882    solve 9.1060    add 1.0319    
Current (lb-rhs): -0.0034571290016174316
6289 domains visited
Cumulative time: 15.830578088760376

BaB round 34
batch: 13
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7214] [/input-12, 7214] [/input-12, 7325] [/input-12, 7325] [/input-12, 7325] [/input-12, 7325] [/input-12, 7325] [/input-12, 7325] [/input-12, 6754] [/input-12, 6754] 
cut re-enabled after branching node selection
0 lb beta sum: 0.792611837387085, worst -0.0016075968742370605
10 lb beta sum: 0.792611837387085, worst -0.001693427562713623
Time: prepare 0.0017    bound 0.1872    transfer 0.0003    finalize 0.0008    func 0.1902    
Accumulated time: func 9.5789    prepare 0.4277    bound 8.6515    transfer 0.1023    finalize 0.3180    
all_split False
======================Cut inference begins======================
max lb tensor(0.21688414) min lb tensor(-0.00159425)
Number of Verified Splits: 20 of 26
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 37
#cuts >= 20: 0
BICCOS time: 0.006562709808349609 
BICCOS Cumulative time: 2.4460861682891846
Preprocessing time: 0.001094818115234375 Inference time: 0.003858327865600586 Add cuts time: 0.0009963512420654297 Cut analysis time: 0.0006132125854492188
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00159 (34), -0.00144 (35), -0.00108 (35), -0.00031 (34), -0.00018 (35), -0.00007 (34), 
Length of domains: 6
Time: pickout 0.0006    decision 0.0138    set_bounds 0.0014    solve 0.1902    add 0.0010    
Accumulated time: pickout 0.1254    decision 1.9395    set_bounds 0.7897    solve 9.2962    add 1.0329    
Current (lb-rhs): -0.001594245433807373
6295 domains visited
Cumulative time: 16.044573545455933

BaB round 35
batch: 6
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5349] [/input-12, 7325] [/input-12, 7325] [/input-12, 6754] [/input-12, 6754] [/input-12, 6228] 
split level 1: [/input-12, 3630] [/input-12, 5349] [/input-12, 5349] [/input-12, 7325] [/input-12, 7325] [/input-12, 5349] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7134360671043396, worst 0.0021837353706359863

all verified at 0th iter
Time: prepare 0.0015    bound 0.0072    transfer 0.0005    finalize 0.0007    func 0.0100    
Accumulated time: func 9.5889    prepare 0.4294    bound 8.6586    transfer 0.1028    finalize 0.3186    
all_split False
======================Cut inference begins======================
max lb tensor(0.00909138) min lb tensor(0.00218374)
Number of Verified Splits: 24 of 24
No cut inferred: All or none verified.
Total number of valid cuts: 37.
#cuts 1-3: 37
#cuts >= 20: 0
BICCOS time: 0.001031637191772461 
BICCOS Cumulative time: 2.447117805480957
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0005    decision 0.0136    set_bounds 0.0015    solve 0.0100    add 0.0000    
Accumulated time: pickout 0.1259    decision 1.9531    set_bounds 0.7912    solve 9.3063    add 1.0330    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6295 domains visited
Cumulative time: 16.071571111679077

Result: safe in 17.9477 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 92, vnnlib ID: 92 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-54.92657471, -54.66994095, -50.32977676, -48.66766739, -50.01876450,
         -48.51679993, -50.81113815, -50.80987549, -56.28409576, -53.91524506]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1342]; unstable size 1342; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 87, 1, 1342] with unstable size 86 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 27, 1, 1342] with unstable size 26 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1342] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [543]; unstable size 543; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 27, 1, 543] with unstable size 26 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 543] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [26]; unstable size 26; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.88307142e+00, 4.51095581e+00, 9.77957726e-01, 5.37186861e-03,
         5.21817446e-01, 8.99279118e-01, 9.27906394e-01, 6.13705444e+00,
         3.77145767e+00]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0406 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 93, vnnlib ID: 93 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-54.44397354, -52.02896500, -55.36874771, -55.66025925, -55.52178955,
         -55.72690582, -57.77098465, -55.92447281, -52.80612564, -53.49172974]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1442]; unstable size 1442; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 506, 1, 1442] with unstable size 505 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 33, 1, 1442] with unstable size 32 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1442] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [505]; unstable size 505; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 33, 1, 505] with unstable size 32 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 505] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [32]; unstable size 32; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 32] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.44196129,  1.39901924,  1.69405174,  1.46501446,  1.72127175,
          3.56924295,  1.56851625, -0.68834114,  0.59280938]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-54.44397354, -52.02896500, -55.36874771, -55.66025925, -55.52178955,
         -55.72690582, -57.77098465, -55.92447281, -52.80612564, -53.49172974]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.32it/s]100%|██████████| 1/1 [00:00<00:00,  8.31it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-53.86712265, -51.98494720, -54.95112991, -55.31603241, -55.11106873,
          -55.40278244, -57.36561966, -55.58512497, -52.18647385, -53.37888336]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.20152664]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1231 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 12.870193481445312
alpha/beta optimization time: 1.4569332599639893
initial alpha-crown bounds: tensor([[ 0.57761431,  1.54787254,  1.81247354,  1.64905024,  1.83469462,
          3.67072582,  1.72665310, -0.58007288,  0.63118112]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.5800728797912598
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.38019514083862
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.38014817237854
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.38012051582336
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.38009881973267
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.38007879257202
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.3800585269928
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 198.38003706932068
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 198.3800163269043
Verifying property 7 with 1 instances.
##### Instance 93 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.58007288]], device='cuda:0') need to verify.
Model prediction is: tensor([-54.44397354, -52.02896500, -55.36874771, -55.66025925, -55.52178955,
        -55.72690582, -57.77098465, -55.92447281, -52.80612564, -53.49172974],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.58007288]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1442
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 489
Node /39 input 0: size torch.Size([250]) unstable 32
-----------------
# of unstable neurons: 1963
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 9.918212890625e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5800731182098389
10 lb beta sum: 0.0, worst -0.5800778865814209
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0759    transfer 0.0001    finalize 0.0002    func 0.0764    
Accumulated time: func 0.0764    prepare 0.0002    bound 0.0759    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 165] 
split level 1: [/input-16, 185] 
split level 2: [/input-16, 58] 
split level 3: [/input-16, 18] 
split level 4: [/input-16, 182] 
split level 5: [/input-16, 134] 
split level 6: [/input-16, 16] 
split level 7: [/input-16, 126] 
split level 8: [/input-16, 24] 
split level 9: [/input-16, 73] 
split level 10: [/input-16, 95] 
split level 11: [/input-16, 35] 
split level 12: [/input-16, 129] 
split level 13: [/input-16, 157] 
split level 14: [/input-16, 170] 
split level 15: [/input-16, 21] 
split level 16: [/input-16, 104] 
split level 17: [/input-16, 23] 
split level 18: [/input-16, 7] 
split level 19: [/input-12, 3869] 
split level 20: [/input-12, 7861] 
split level 21: [/input-12, 4676] 
split level 22: [/input-12, 7605] 
split level 23: [/input-16, 186] 
split level 24: [/input-12, 7140] 
split level 25: [/input-12, 7540] 
split level 26: [/input-12, 7539] 
split level 27: [/input-12, 2594] 
split level 28: [/input-12, 3469] 
split level 29: [/input-12, 7798] 
split level 30: [/input-12, 5268] 
split level 31: [/input-12, 4219] 
split level 32: [/input-12, 3954] 
split level 33: [/input-12, 3460] 
split level 34: [/input-12, 7965] 
split level 35: [/input-12, 8049] 
split level 36: [/input-12, 7156] 
split level 37: [/input-4, 1143] 
split level 38: [/input-12, 7862] 
split level 39: [/input-12, 3821] 
split level 40: [/input-12, 6067] 
split level 41: [/input-12, 5930] 
split level 42: [/input-12, 7538] 
split level 43: [/input-4, 1128] 
split level 44: [/input-16, 82] 
split level 45: [/input-12, 7012] 
split level 46: [/input-12, 6512] 
split level 47: [/input-4, 7820] 
split level 48: [/input-12, 6469] 
split level 49: [/input-12, 7137] 
split level 50: [/input-4, 7817] 
split level 51: [/input-12, 3553] 
split level 52: [/input-12, 3458] 
split level 53: [/input-4, 412] 
split level 54: [/input-4, 7574] 
split level 55: [/input-4, 7110] 
split level 56: [/input-4, 1109] 
split level 57: [/input-4, 1125] 
split level 58: [/input-12, 3345] 
split level 59: [/input-12, 6452] 
split level 60: [/input-12, 3155] 
split level 61: [/input-12, 6833] 
split level 62: [/input-12, 3339] 
split level 63: [/input-12, 2593] 
split level 64: [/input-4, 102] 
split level 65: [/input-4, 3703] 
split level 66: [/input-12, 3894] 
split level 67: [/input-12, 7230] 
split level 68: [/input-12, 5658] 
split level 69: [/input-16, 208] 
split level 70: [/input-4, 4727] 
split level 71: [/input-4, 103] 
split level 72: [/input-4, 1126] 
split level 73: [/input-12, 8053] 
split level 74: [/input-12, 3154] 
split level 75: [/input-4, 4328] 
split level 76: [/input-12, 7838] 
split level 77: [/input-12, 7601] 
split level 78: [/input-4, 104] 
split level 79: [/input-12, 5670] 
split level 80: [/input-12, 5285] 
split level 81: [/input-12, 470] 
split level 82: [/input-4, 6246] 
split level 83: [/input-12, 1253] 
split level 84: [/input-12, 1771] 
split level 85: [/input-12, 7018] 
split level 86: [/input-4, 4984] 
split level 87: [/input-4, 88] 
split level 88: [/input-4, 4327] 
split level 89: [/input-4, 87] 
split level 90: [/input-12, 2899] 
split level 91: [/input-12, 3574] 
split level 92: [/input-12, 1424] 
split level 93: [/input-12, 5644] 
split level 94: [/input-12, 6997] 
split level 95: [/input-12, 2871] 
split level 96: [/input-12, 7829] 
split level 97: [/input-12, 1767] 
split level 98: [/input-4, 4329] 
split level 99: [/input-4, 4473] 
split level 100: [/input-12, 3892] 
split level 101: [/input-4, 3689] 
split level 102: [/input-4, 3968] 
split level 103: [/input-4, 6309] 
split level 104: [/input-12, 2364] 
split level 105: [/input-4, 1253] 
split level 106: [/input-12, 3504] 
split level 107: [/input-4, 1124] 
split level 108: [/input-4, 4455] 
split level 109: [/input-4, 1112] 
split level 110: [/input-12, 373] 
split level 111: [/input-12, 2357] 
split level 112: [/input-12, 2365] 
split level 113: [/input-12, 3341] 
split level 114: [/input-4, 4729] 
split level 115: [/input-4, 4726] 
split level 116: [/input-12, 7027] 
split level 117: [/input-12, 888] 
split level 118: [/input-4, 3687] 
split level 119: [/input-4, 6373] 
split level 120: [/input-12, 824] 
split level 121: [/input-12, 2898] 
split level 122: [/input-4, 7836] 
split level 123: [/input-12, 3156] 
split level 124: [/input-4, 6250] 
split level 125: [/input-12, 6990] 
split level 126: [/input-12, 1732] 
split level 127: [/input-4, 4326] 
split level 128: [/input-12, 1256] 
split level 129: [/input-4, 5270] 
split level 130: [/input-4, 3751] 
split level 131: [/input-4, 4471] 
split level 132: [/input-4, 4456] 
split level 133: [/input-4, 4325] 
split level 134: [/input-4, 4713] 
split level 135: [/input-4, 4324] 
split level 136: [/input-4, 1146] 
split level 137: [/input-12, 983] 
split level 138: [/input-4, 85] 
split level 139: [/input-4, 1625] 
split level 140: [/input-4, 3239] 
split level 141: [/input-4, 3477] 
split level 142: [/input-4, 3238] 
split level 143: [/input-4, 4774] 
split level 144: [/input-12, 4567] 
split level 145: [/input-4, 4312] 
split level 146: [/input-12, 3961] 
split level 147: [/input-12, 2161] 
split level 148: [/input-4, 3749] 
split level 149: [/input-4, 1237] 
split level 150: [/input-4, 2904] 
split level 151: [/input-4, 2902] 
split level 152: [/input-4, 2983] 
split level 153: [/input-4, 4438] 
split level 154: [/input-4, 3157] 
split level 155: [/input-4, 4714] 
split level 156: [/input-4, 4439] 
split level 157: [/input-4, 6247] 
split level 158: [/input-4, 1905] 
split level 159: [/input-4, 3688] 
split level 160: [/input-12, 2900] 
split level 161: [/input-12, 5645] 
split level 162: [/input-4, 6638] 
split level 163: [/input-4, 71] 
split level 164: [/input-4, 3750] 
split level 165: [/input-4, 4440] 
split level 166: [/input-4, 6249] 
split level 167: [/input-4, 1621] 
split level 168: [/input-12, 2222] 
split level 169: [/input-12, 5201] 
split level 170: [/input-4, 7813] 
split level 171: [/input-4, 2716] 
split level 172: [/input-12, 6257] 
split level 173: [/input-4, 1254] 
split level 174: [/input-12, 5172] 
split level 175: [/input-4, 4311] 
split level 176: [/input-4, 5031] 
split level 177: [/input-4, 2903] 
split level 178: [/input-4, 4309] 
split level 179: [/input-4, 4441] 
split level 180: [/input-12, 8190] 
split level 181: [/input-4, 4308] 
split level 182: [/input-4, 4183] 
split level 183: [/input-4, 4520] 
split level 184: [/input-12, 1465] 
split level 185: [/input-4, 4457] 
split level 186: [/input-12, 7324] 
split level 187: [/input-4, 7809] 
split level 188: [/input-4, 6389] 
split level 189: [/input-4, 4730] 
split level 190: [/input-12, 1421] 
split level 191: [/input-12, 7849] 
split level 192: [/input-4, 7381] 
split level 193: [/input-4, 4315] 
split level 194: [/input-4, 4314] 
split level 195: [/input-4, 1397] 
split level 196: [/input-12, 6802] 
split level 197: [/input-12, 1353] 
split level 198: [/input-12, 1430] 
split level 199: [/input-4, 4296] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5798978805541992
10 lb beta sum: 0.0, worst -0.5798876285552979
Time: prepare 0.0117    bound 0.1355    transfer 0.0029    finalize 0.0156    func 0.1682    
Accumulated time: func 0.2447    prepare 0.0219    bound 0.2113    transfer 0.0030    finalize 0.0158    
all_split False
======================Cut inference begins======================
max lb tensor(0.33657885) min lb tensor(-0.57988071)
Number of Verified Splits: 1 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.01083064079284668 
BICCOS Cumulative time: 0.01083064079284668
Preprocessing time: 0.010114192962646484 Inference time: 8.153915405273438e-05 Add cuts time: 5.984306335449219e-05 Cut analysis time: 0.0005750656127929688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.56430 (1), -0.56401 (1), -0.56393 (1), -0.56350 (1), -0.56299 (1), -0.56247 (1), -0.56241 (1), -0.56132 (1), -0.56090 (1), -0.56087 (1), -0.56010 (1), -0.56003 (1), -0.55971 (1), -0.55916 (1), -0.55913 (1), -0.55911 (1), -0.55895 (1), -0.55810 (1), -0.55674 (1), -0.55624 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.7794    set_bounds 0.0093    solve 0.1683    add 0.1192    
Accumulated time: pickout 0.0004    decision 0.7794    set_bounds 0.0093    solve 0.1683    add 0.1192    
Current (lb-rhs): -0.5642967224121094
50 domains visited
Cumulative time: 1.1709508895874023

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 58] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] 
split level 1: [/input-16, 18] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 18] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] 
split level 2: [/input-16, 16] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 16] [/input-16, 18] [/input-16, 16] [/input-16, 18] [/input-16, 18] [/input-16, 18] 
split level 3: [/input-16, 24] [/input-16, 16] [/input-16, 16] [/input-16, 16] [/input-16, 24] [/input-16, 16] [/input-16, 24] [/input-16, 16] [/input-16, 16] [/input-16, 16] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5324397087097168
10 lb beta sum: 0.1943480521440506, worst -0.5290898680686951
Time: prepare 0.0066    bound 0.1518    transfer 0.0017    finalize 0.0054    func 0.1680    
Accumulated time: func 0.4127    prepare 0.0287    bound 0.3631    transfer 0.0047    finalize 0.0212    
all_split False
======================Cut inference begins======================
max lb tensor(0.11155839) min lb tensor(-0.52873307)
Number of Verified Splits: 16 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 15
#cuts >= 20: 0
BICCOS time: 0.013857126235961914 
BICCOS Cumulative time: 0.024687767028808594
Preprocessing time: 0.01190042495727539 Inference time: 0.000701904296875 Add cuts time: 0.0002651214599609375 Cut analysis time: 0.000989675521850586
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14274 (2), -0.14268 (2), -0.14112 (2), -0.13639 (2), -0.13567 (2), -0.13451 (2), -0.13257 (2), -0.13231 (2), -0.13224 (2), -0.13208 (2), -0.13197 (2), -0.13138 (2), -0.13113 (2), -0.13034 (2), -0.12975 (2), -0.12712 (2), -0.12688 (2), -0.12617 (2), -0.12441 (2), -0.12387 (2), 
Length of domains: 50
Time: pickout 0.0007    decision 0.0254    set_bounds 0.0136    solve 0.1681    add 0.0865    
Accumulated time: pickout 0.0010    decision 0.8048    set_bounds 0.0229    solve 0.3364    add 0.2057    
Current (lb-rhs): -0.14273741841316223
100 domains visited
Cumulative time: 1.479264259338379

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 58] [/input-16, 18] [/input-16, 18] [/input-16, 185] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] 
split level 1: [/input-16, 18] [/input-16, 16] [/input-16, 16] [/input-16, 18] [/input-16, 18] [/input-16, 16] [/input-16, 18] [/input-16, 18] [/input-16, 16] [/input-16, 18] 
split level 2: [/input-16, 16] [/input-16, 126] [/input-16, 126] [/input-16, 16] [/input-16, 16] [/input-16, 126] [/input-16, 126] [/input-16, 16] [/input-16, 126] [/input-16, 126] 
split level 3: [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 126] [/input-16, 24] [/input-16, 24] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11700582504272461
10 lb beta sum: 1.0570803880691528, worst -0.08908861875534058
Time: prepare 0.0067    bound 0.1534    transfer 0.0016    finalize 0.0059    func 0.1706    
Accumulated time: func 0.5833    prepare 0.0356    bound 0.5164    transfer 0.0062    finalize 0.0270    
all_split False
======================Cut inference begins======================
max lb tensor(0.35421973) min lb tensor(-0.07870597)
Number of Verified Splits: 374 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 11
#cuts >= 20: 0
BICCOS time: 0.03603720664978027 
BICCOS Cumulative time: 0.06072497367858887
Preprocessing time: 0.011628866195678711 Inference time: 0.016302108764648438 Add cuts time: 0.007688045501708984 Cut analysis time: 0.0004181861877441406
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07871 (3), -0.07782 (3), -0.07406 (3), -0.07298 (3), -0.07210 (3), -0.06807 (3), -0.05067 (3), -0.04895 (3), -0.04473 (3), -0.03619 (3), -0.02764 (3), -0.02580 (3), -0.01177 (3), -0.01090 (3), -0.00222 (3), 
Length of domains: 15
Time: pickout 0.0006    decision 0.0251    set_bounds 0.0155    solve 0.1707    add 0.1181    
Accumulated time: pickout 0.0016    decision 0.8299    set_bounds 0.0384    solve 0.5071    add 0.3238    
Current (lb-rhs): -0.07870596647262573
115 domains visited
Cumulative time: 1.845585584640503

Shallow-BaB round 4
batch: 15
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 18] [/input-16, 185] [/input-16, 185] 
split level 1: [/input-16, 18] [/input-16, 182] [/input-16, 182] [/input-16, 18] [/input-16, 134] [/input-16, 58] [/input-16, 18] [/input-16, 182] [/input-16, 18] [/input-16, 18] 
split level 2: [/input-16, 182] [/input-16, 16] [/input-16, 16] [/input-16, 134] [/input-16, 16] [/input-16, 182] [/input-16, 182] [/input-16, 16] [/input-16, 182] [/input-16, 134] 
split level 3: [/input-16, 16] [/input-16, 126] [/input-16, 126] [/input-16, 16] [/input-16, 126] [/input-16, 16] [/input-16, 126] [/input-16, 126] [/input-16, 16] [/input-16, 126] 
split level 4: [/input-16, 126] [/input-16, 24] [/input-16, 24] [/input-16, 126] [/input-16, 24] [/input-16, 126] [/input-16, 24] [/input-16, 24] [/input-16, 126] [/input-16, 24] 
split level 5: [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] 
split level 6: [/input-16, 35] [/input-16, 35] [/input-16, 35] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 35] [/input-16, 35] [/input-16, 35] [/input-16, 95] 
split level 7: [/input-16, 129] [/input-16, 129] [/input-16, 129] [/input-16, 35] [/input-16, 35] [/input-16, 35] [/input-16, 129] [/input-16, 129] [/input-16, 129] [/input-16, 35] 
split level 8: [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 129] [/input-16, 129] [/input-16, 129] [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 129] 
split level 9: [/input-16, 170] [/input-16, 170] [/input-16, 170] [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 170] [/input-16, 170] [/input-16, 170] [/input-16, 157] 
split level 10: [/input-16, 21] [/input-16, 21] [/input-16, 21] [/input-16, 170] [/input-16, 170] [/input-16, 170] [/input-16, 21] [/input-16, 21] [/input-16, 21] [/input-16, 170] 
split level 11: [/input-16, 23] [/input-16, 23] [/input-16, 23] [/input-16, 21] [/input-16, 21] [/input-16, 21] [/input-16, 23] [/input-16, 23] [/input-16, 23] [/input-16, 21] 
split level 12: [/input-12, 3821] [/input-12, 3821] [/input-12, 3821] [/input-16, 23] [/input-16, 23] [/input-16, 23] [/input-12, 3821] [/input-12, 3821] [/input-12, 3821] [/input-16, 23] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08921229839324951
10 lb beta sum: 0.3158167004585266, worst -0.09459534287452698
Time: prepare 0.0057    bound 0.1533    transfer 0.0045    finalize 0.0074    func 0.1735    
Accumulated time: func 0.7567    prepare 0.0420    bound 0.6697    transfer 0.0108    finalize 0.0344    
all_split False
======================Cut inference begins======================
max lb tensor(0.50318235) min lb tensor(-0.06778240)
Number of Verified Splits: 269 of 390
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 7
#cuts >= 20: 0
BICCOS time: 0.032975196838378906 
BICCOS Cumulative time: 0.09370017051696777
Preprocessing time: 0.011273860931396484 Inference time: 0.014078378677368164 Add cuts time: 0.00730443000793457 Cut analysis time: 0.0003185272216796875
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0005    decision 0.0611    set_bounds 0.0148    solve 0.1736    add 0.1820    
Accumulated time: pickout 0.0022    decision 0.8910    set_bounds 0.0533    solve 0.6806    add 0.5058    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
115 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([134,  58]), tensor([-1., -1.]), tensor([0, 0]), tensor([-1.26703658e+34,  2.46932074e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([134,  58,  24, 185]), tensor([-1.,  1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([-1.26703658e+34,  1.08465672e-01,  8.83716941e-02,  1.91534329e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([134,  58,  24, 185]), tensor([-1.,  1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([-1.26703658e+34,  1.08465672e-01,  8.83716941e-02,  2.56823987e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([134,  58,  24, 185]), tensor([-1.,  1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([-1.26703658e+34,  1.08465672e-01,  3.99283320e-02,  3.40609848e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([134,  58,  24, 185]), tensor([-1.,  1.,  1.,  1.]), tensor([0, 0, 0, 0]), tensor([-1.26703658e+34,  1.08465672e-01,  3.99283320e-02,  2.54073381e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([134]), tensor([1.]), tensor([0]), tensor([-1.26703658e+34]), tensor([0]))}
Shallow branching resets to n domains:  6
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5707578659057617
10 lb beta sum: 0.8120964765548706, worst -0.5209329724311829
Time: prepare 0.0004    bound 0.1493    transfer 0.0002    finalize 0.0003    func 0.1503    
Accumulated time: func 0.9071    prepare 0.0425    bound 0.8190    transfer 0.0109    finalize 0.0347    
After pruning, left:  2

Back to Regular BaB

BaB round 1
batch: 2
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 18] [/input-16, 185] 
split level 1: [/input-16, 16] [/input-16, 58] 
split level 2: [/input-16, 126] [/input-16, 18] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7626028656959534, worst -0.346920371055603
10 lb beta sum: 0.784217119216919, worst -0.3365870714187622
Time: prepare 0.0009    bound 0.1482    transfer 0.0002    finalize 0.0009    func 0.1504    
Accumulated time: func 1.0574    prepare 0.0436    bound 0.9672    transfer 0.0112    finalize 0.0357    
all_split False
======================Cut inference begins======================
max lb tensor(0.39125144) min lb tensor(-0.33643997)
Number of Verified Splits: 12 of 16
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.7461665868759155, worst -0.24751228094100952

all verified at 2th iter
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 7
#cuts >= 20: 0
BICCOS time: 0.03142571449279785 
BICCOS Cumulative time: 0.12512588500976562
Preprocessing time: 0.0007274150848388672 Inference time: 0.03004145622253418 Add cuts time: 0.0003514289855957031 Cut analysis time: 0.00030541419982910156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33644 (3), -0.24362 (3), -0.16979 (3), -0.09872 (3), 
Length of domains: 4
Time: pickout 0.0004    decision 0.0132    set_bounds 0.0012    solve 0.1504    add 0.0010    
Accumulated time: pickout 0.0026    decision 0.9041    set_bounds 0.0545    solve 0.8310    add 0.5068    
Current (lb-rhs): -0.33643996715545654
119 domains visited
Cumulative time: 2.6777310371398926

BaB round 2
batch: 4
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 16] [/input-16, 16] [/input-16, 16] [/input-16, 16] 
split level 1: [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8833904266357422, worst -0.2825049161911011
10 lb beta sum: 0.8833904266357422, worst -0.2822226285934448
Time: prepare 0.0009    bound 0.1501    transfer 0.0002    finalize 0.0005    func 0.1519    
Accumulated time: func 1.2093    prepare 0.0446    bound 1.1174    transfer 0.0114    finalize 0.0362    
all_split False
======================Cut inference begins======================
max lb tensor(0.13302141) min lb tensor(-0.28209412)
Number of Verified Splits: 6 of 16
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.9129953384399414, worst -0.19480955600738525
10 lb beta sum: 1.1103030443191528, worst -0.015051424503326416
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 7
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.15260839462280273 
BICCOS Cumulative time: 0.27773427963256836
Preprocessing time: 0.0007774829864501953 Inference time: 0.15110015869140625 Add cuts time: 0.0003783702850341797 Cut analysis time: 0.0003523826599121094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.28209 (5), -0.23314 (5), -0.18694 (5), -0.15425 (5), -0.13656 (5), -0.11205 (5), -0.09655 (5), -0.08119 (5), -0.03843 (5), -0.00725 (5), 
Length of domains: 10
Time: pickout 0.0005    decision 0.0136    set_bounds 0.0012    solve 0.1519    add 0.0013    
Accumulated time: pickout 0.0031    decision 0.9178    set_bounds 0.0556    solve 0.9829    add 0.5081    
Current (lb-rhs): -0.2820941209793091
129 domains visited
Cumulative time: 2.9989864826202393

BaB round 3
batch: 10
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.28477954864501953
10 lb beta sum: 0.3673974275588989, worst -0.2819904685020447
Time: prepare 0.0005    bound 0.1491    transfer 0.0004    finalize 0.0014    func 0.1516    
Accumulated time: func 1.3609    prepare 0.0453    bound 1.2665    transfer 0.0118    finalize 0.0375    
all_split False
======================Cut inference begins======================
max lb tensor(0.21777239) min lb tensor(-0.28193384)
Number of Verified Splits: 10 of 20
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3141767978668213
10 lb beta sum: 0.7224926948547363, worst -0.0658876895904541
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 7
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.15758299827575684 
BICCOS Cumulative time: 0.4353172779083252
Preprocessing time: 0.0009014606475830078 Inference time: 0.15601825714111328 Add cuts time: 0.0003170967102050781 Cut analysis time: 0.00034618377685546875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.28193 (6), -0.23253 (6), -0.18581 (6), -0.15107 (6), -0.13504 (6), -0.11146 (6), -0.09347 (6), -0.07983 (6), -0.03740 (6), -0.00607 (6), 
Length of domains: 10
Time: pickout 0.0005    decision 0.0135    set_bounds 0.0011    solve 0.1516    add 0.0012    
Accumulated time: pickout 0.0036    decision 0.9313    set_bounds 0.0568    solve 1.1346    add 0.5093    
Current (lb-rhs): -0.28193384408950806
139 domains visited
Cumulative time: 3.324819564819336

BaB round 4
batch: 10
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 24] 
cut re-enabled after branching node selection
0 lb beta sum: 0.3652564287185669, worst -0.253601610660553
10 lb beta sum: 0.3652564287185669, worst -0.25341707468032837
Time: prepare 0.0011    bound 0.1489    transfer 0.0002    finalize 0.0007    func 0.1511    
Accumulated time: func 1.5120    prepare 0.0466    bound 1.4154    transfer 0.0120    finalize 0.0383    
all_split False
======================Cut inference begins======================
max lb tensor(0.04860103) min lb tensor(-0.25334293)
Number of Verified Splits: 3 of 20
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.558397650718689, worst -0.07644477486610413
10 lb beta sum: 0.9530129432678223, worst -0.03904157876968384
Total number of valid cuts: 9.
#cuts 1-3: 7
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.15016412734985352 
BICCOS Cumulative time: 0.5854814052581787
Preprocessing time: 0.0008842945098876953 Inference time: 0.14914178848266602 Add cuts time: 0.00012421607971191406 Cut analysis time: 1.3828277587890625e-05
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25334 (7), -0.20726 (7), -0.20372 (7), -0.15703 (7), -0.15175 (7), -0.12077 (7), -0.10606 (7), -0.08469 (7), -0.08379 (7), -0.07649 (7), -0.06424 (7), -0.05163 (7), -0.03804 (7), -0.03133 (7), -0.01321 (7), -0.01033 (7), -0.00343 (7), 
Length of domains: 17
Time: pickout 0.0005    decision 0.0135    set_bounds 0.0012    solve 0.1511    add 0.0015    
Accumulated time: pickout 0.0041    decision 0.9448    set_bounds 0.0579    solve 1.2856    add 0.5108    
Current (lb-rhs): -0.2533429265022278
156 domains visited
Cumulative time: 3.6428442001342773

BaB round 5
batch: 17
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] 
cut re-enabled after branching node selection
0 lb beta sum: 0.3311726748943329, worst -0.23655587434768677
10 lb beta sum: 0.3311726748943329, worst -0.2364378571510315
Time: prepare 0.0016    bound 0.1495    transfer 0.0005    finalize 0.0010    func 0.1529    
Accumulated time: func 1.6649    prepare 0.0484    bound 1.5649    transfer 0.0125    finalize 0.0393    
all_split False
======================Cut inference begins======================
max lb tensor(0.04256435) min lb tensor(-0.23640615)
Number of Verified Splits: 16 of 34
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.36410850286483765, worst -0.3680484890937805
10 lb beta sum: 0.7531229257583618, worst -0.21159183979034424
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 7
#cuts 4-6: 3
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.16396427154541016 
BICCOS Cumulative time: 0.7494456768035889
Preprocessing time: 0.0012774467468261719 Inference time: 0.1616206169128418 Add cuts time: 0.0005121231079101562 Cut analysis time: 0.0005540847778320312
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23641 (8), -0.18821 (8), -0.18532 (8), -0.13878 (8), -0.13041 (8), -0.10005 (8), -0.09673 (8), -0.08679 (8), -0.08087 (8), -0.06514 (8), -0.06431 (8), -0.06244 (8), -0.05481 (8), -0.04355 (8), -0.04197 (8), -0.03179 (8), -0.01717 (8), -0.00929 (8), 
Length of domains: 18
Time: pickout 0.0004    decision 0.0140    set_bounds 0.0017    solve 0.1530    add 0.0013    
Accumulated time: pickout 0.0045    decision 0.9588    set_bounds 0.0596    solve 1.4386    add 0.5121    
Current (lb-rhs): -0.236406147480011
174 domains visited
Cumulative time: 3.9775307178497314

BaB round 6
batch: 18
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 129] [/input-16, 129] [/input-16, 129] [/input-16, 129] [/input-16, 129] [/input-16, 129] [/input-16, 129] [/input-16, 129] [/input-16, 129] [/input-16, 129] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2225961685180664
10 lb beta sum: 0.25912395119667053, worst -0.2197655886411667
Time: prepare 0.0008    bound 0.1481    transfer 0.0005    finalize 0.0008    func 0.1504    
Accumulated time: func 1.8153    prepare 0.0493    bound 1.7130    transfer 0.0130    finalize 0.0400    
all_split False
======================Cut inference begins======================
max lb tensor(0.02922767) min lb tensor(-0.21973830)
Number of Verified Splits: 7 of 36
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.21271395683288574
10 lb beta sum: 0.6916016936302185, worst -0.040769100189208984
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 7
#cuts 4-6: 3
#cuts 7-9: 6
#cuts >= 20: 0
BICCOS time: 0.15529823303222656 
BICCOS Cumulative time: 0.9047439098358154
Preprocessing time: 0.0014240741729736328 Inference time: 0.1527707576751709 Add cuts time: 0.0003750324249267578 Cut analysis time: 0.0007283687591552734
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21974 (9), -0.18210 (9), -0.17099 (9), -0.16812 (9), -0.13779 (9), -0.13485 (9), -0.12054 (9), -0.11167 (9), -0.09148 (9), -0.08697 (9), -0.08428 (9), -0.07751 (9), -0.06788 (9), -0.06162 (9), -0.04828 (9), -0.04569 (9), -0.04468 (9), -0.04429 (9), -0.03958 (9), -0.03783 (9), 
Length of domains: 29
Time: pickout 0.0005    decision 0.0140    set_bounds 0.0018    solve 0.1504    add 0.0015    
Accumulated time: pickout 0.0050    decision 0.9728    set_bounds 0.0614    solve 1.5890    add 0.5136    
Current (lb-rhs): -0.21973830461502075
203 domains visited
Cumulative time: 4.30121111869812

BaB round 7
batch: 29
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 157] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.21088695526123047
10 lb beta sum: 0.23905374109745026, worst -0.20813220739364624
Time: prepare 0.0011    bound 0.1493    transfer 0.0008    finalize 0.0010    func 0.1526    
Accumulated time: func 1.9679    prepare 0.0506    bound 1.8623    transfer 0.0138    finalize 0.0410    
all_split False
======================Cut inference begins======================
max lb tensor(0.06003124) min lb tensor(-0.20812114)
Number of Verified Splits: 21 of 58
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 11
#cuts 4-6: 9
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.0060596466064453125 
BICCOS Cumulative time: 0.9108035564422607
Preprocessing time: 0.001920461654663086 Inference time: 0.002151966094970703 Add cuts time: 0.001171112060546875 Cut analysis time: 0.0008161067962646484
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20812 (10), -0.16995 (10), -0.15943 (10), -0.15506 (10), -0.12431 (10), -0.12357 (10), -0.11034 (10), -0.10965 (10), -0.10828 (10), -0.09835 (10), -0.09318 (10), -0.07917 (10), -0.07824 (10), -0.07391 (10), -0.07064 (10), -0.06667 (10), -0.06286 (10), -0.06068 (10), -0.05532 (10), -0.05451 (10), 
Length of domains: 37
Time: pickout 0.0005    decision 0.0146    set_bounds 0.0027    solve 0.1527    add 0.0017    
Accumulated time: pickout 0.0055    decision 0.9874    set_bounds 0.0641    solve 1.7417    add 0.5153    
Current (lb-rhs): -0.2081211358308792
240 domains visited
Cumulative time: 4.479709148406982

BaB round 8
batch: 37
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 35] [/input-16, 35] [/input-16, 35] [/input-16, 35] [/input-16, 35] [/input-16, 35] [/input-16, 35] [/input-16, 35] [/input-16, 35] [/input-16, 157] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20163273811340332
10 lb beta sum: 0.22535499930381775, worst -0.19885151088237762
Time: prepare 0.0013    bound 0.1490    transfer 0.0004    finalize 0.0012    func 0.1525    
Accumulated time: func 2.1204    prepare 0.0521    bound 2.0113    transfer 0.0143    finalize 0.0422    
all_split False
======================Cut inference begins======================
max lb tensor(0.20966063) min lb tensor(-0.19884020)
Number of Verified Splits: 37 of 74
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 20
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.008302688598632812 
BICCOS Cumulative time: 0.9191062450408936
Preprocessing time: 0.0023920536041259766 Inference time: 0.00403285026550293 Add cuts time: 0.0012526512145996094 Cut analysis time: 0.0006251335144042969
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19884 (11), -0.14994 (11), -0.14674 (11), -0.14580 (11), -0.14563 (11), -0.11274 (11), -0.10423 (11), -0.09923 (11), -0.09878 (11), -0.09830 (11), -0.09777 (11), -0.08895 (11), -0.08136 (11), -0.06895 (11), -0.06602 (11), -0.06293 (11), -0.06108 (11), -0.05369 (11), -0.05305 (11), -0.04687 (11), 
Length of domains: 37
Time: pickout 0.0010    decision 0.0149    set_bounds 0.0033    solve 0.1525    add 0.0016    
Accumulated time: pickout 0.0065    decision 1.0024    set_bounds 0.0674    solve 1.8942    add 0.5169    
Current (lb-rhs): -0.1988402009010315
277 domains visited
Cumulative time: 4.661756992340088

BaB round 9
batch: 37
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 170] [/input-16, 21] [/input-16, 170] [/input-16, 21] [/input-16, 21] [/input-16, 170] [/input-16, 21] [/input-16, 170] [/input-16, 35] [/input-16, 170] 
cut re-enabled after branching node selection
0 lb beta sum: 0.29779016971588135, worst -0.2743300199508667
10 lb beta sum: 0.5167964100837708, worst -0.17669415473937988
Time: prepare 0.0032    bound 0.1498    transfer 0.0004    finalize 0.0012    func 0.1551    
Accumulated time: func 2.2755    prepare 0.0555    bound 2.1611    transfer 0.0147    finalize 0.0434    
all_split False
======================Cut inference begins======================
max lb tensor(0.26667154) min lb tensor(-0.17667210)
Number of Verified Splits: 32 of 74
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 17
#cuts 4-6: 5
#cuts >= 20: 0
BICCOS time: 0.0075914859771728516 
BICCOS Cumulative time: 0.9266977310180664
Preprocessing time: 0.0023758411407470703 Inference time: 0.0035021305084228516 Add cuts time: 0.0007898807525634766 Cut analysis time: 0.0009236335754394531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17667 (12), -0.17583 (12), -0.13749 (12), -0.13637 (12), -0.12732 (12), -0.12675 (12), -0.12654 (12), -0.11983 (12), -0.09512 (12), -0.09077 (12), -0.08931 (12), -0.08878 (12), -0.08857 (12), -0.08813 (12), -0.08073 (12), -0.07011 (12), -0.06673 (12), -0.06246 (12), -0.06210 (12), -0.05457 (12), 
Length of domains: 42
Time: pickout 0.0006    decision 0.0150    set_bounds 0.0034    solve 0.1551    add 0.0018    
Accumulated time: pickout 0.0071    decision 1.0173    set_bounds 0.0708    solve 2.0493    add 0.5187    
Current (lb-rhs): -0.176672101020813
319 domains visited
Cumulative time: 4.845553636550903

BaB round 10
batch: 42
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1721045970916748
10 lb beta sum: 0.23371276259422302, worst -0.1692940592765808
Time: prepare 0.0015    bound 0.1550    transfer 0.0006    finalize 0.0018    func 0.1596    
Accumulated time: func 2.4351    prepare 0.0572    bound 2.3161    transfer 0.0153    finalize 0.0452    
all_split False
======================Cut inference begins======================
max lb tensor(0.53544873) min lb tensor(-0.16928922)
Number of Verified Splits: 41 of 84
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 16
#cuts >= 20: 0
BICCOS time: 0.008683443069458008 
BICCOS Cumulative time: 0.9353811740875244
Preprocessing time: 0.0027310848236083984 Inference time: 0.004551887512207031 Add cuts time: 0.0009679794311523438 Cut analysis time: 0.0004324913024902344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16929 (13), -0.16836 (13), -0.11924 (13), -0.11687 (13), -0.11606 (13), -0.11357 (13), -0.11283 (13), -0.11232 (13), -0.10708 (13), -0.10660 (13), -0.10438 (13), -0.10399 (13), -0.08072 (13), -0.07355 (13), -0.06940 (13), -0.06799 (13), -0.06785 (13), -0.06754 (13), -0.06605 (13), -0.06598 (13), 
Length of domains: 43
Time: pickout 0.0006    decision 0.0152    set_bounds 0.0037    solve 0.1597    add 0.0021    
Accumulated time: pickout 0.0077    decision 1.0325    set_bounds 0.0744    solve 2.2089    add 0.5207    
Current (lb-rhs): -0.1692892163991928
362 domains visited
Cumulative time: 5.03571891784668

BaB round 11
batch: 43
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 21] [/input-16, 21] [/input-16, 170] [/input-16, 170] [/input-16, 21] [/input-16, 170] [/input-16, 21] [/input-16, 95] [/input-16, 95] [/input-16, 95] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15207743644714355
10 lb beta sum: 0.39526310563087463, worst -0.14923721551895142
Time: prepare 0.0015    bound 0.1497    transfer 0.0005    finalize 0.0013    func 0.1537    
Accumulated time: func 2.5888    prepare 0.0588    bound 2.4658    transfer 0.0157    finalize 0.0466    
all_split False
======================Cut inference begins======================
max lb tensor(0.31360596) min lb tensor(-0.14921534)
Number of Verified Splits: 44 of 86
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 14
#cuts >= 20: 0
BICCOS time: 0.009225606918334961 
BICCOS Cumulative time: 0.9446067810058594
Preprocessing time: 0.0027358531951904297 Inference time: 0.005351543426513672 Add cuts time: 0.0005860328674316406 Cut analysis time: 0.0005521774291992188
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14922 (14), -0.14828 (14), -0.14606 (14), -0.14533 (14), -0.10932 (14), -0.10828 (14), -0.10570 (14), -0.10494 (14), -0.09931 (14), -0.09868 (14), -0.09785 (14), -0.09651 (14), -0.09624 (14), -0.09513 (14), -0.09145 (14), -0.08891 (14), -0.06780 (14), -0.06145 (14), -0.06040 (14), -0.06028 (14), 
Length of domains: 42
Time: pickout 0.0006    decision 0.0153    set_bounds 0.0037    solve 0.1538    add 0.0017    
Accumulated time: pickout 0.0083    decision 1.0479    set_bounds 0.0782    solve 2.3627    add 0.5224    
Current (lb-rhs): -0.14921534061431885
404 domains visited
Cumulative time: 5.2204365730285645

BaB round 12
batch: 42
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 23] [/input-16, 23] [/input-16, 23] [/input-16, 23] [/input-16, 23] [/input-16, 23] [/input-16, 23] [/input-12, 7798] [/input-16, 95] [/input-16, 23] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13804411888122559
10 lb beta sum: 0.3194505274295807, worst -0.1352768838405609
Time: prepare 0.0016    bound 0.1511    transfer 0.0005    finalize 0.0013    func 0.1551    
Accumulated time: func 2.7440    prepare 0.0606    bound 2.6168    transfer 0.0162    finalize 0.0479    
all_split False
======================Cut inference begins======================
max lb tensor(0.02968419) min lb tensor(-0.13526380)
Number of Verified Splits: 14 of 84
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 14
#cuts >= 20: 0
BICCOS time: 0.0052378177642822266 
BICCOS Cumulative time: 0.9498445987701416
Preprocessing time: 0.0026531219482421875 Inference time: 0.0017704963684082031 Add cuts time: 0.0003380775451660156 Cut analysis time: 0.0004761219024658203
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13526 (15), -0.13420 (15), -0.13287 (15), -0.13225 (15), -0.13202 (15), -0.13127 (15), -0.12967 (15), -0.12932 (15), -0.09464 (15), -0.09396 (15), -0.09370 (15), -0.09299 (15), -0.09129 (15), -0.09069 (15), -0.09039 (15), -0.09001 (15), -0.08526 (15), -0.08462 (15), -0.08379 (15), -0.08288 (15), 
Length of domains: 70
Time: pickout 0.0006    decision 0.0151    set_bounds 0.0036    solve 0.1552    add 0.0020    
Accumulated time: pickout 0.0088    decision 1.0630    set_bounds 0.0818    solve 2.5179    add 0.5244    
Current (lb-rhs): -0.13526380062103271
474 domains visited
Cumulative time: 5.402415037155151

BaB round 13
batch: 70
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 165] [/input-16, 165] [/input-16, 165] [/input-16, 165] [/input-16, 165] [/input-12, 7140] [/input-12, 7140] [/input-12, 7140] [/input-12, 7140] [/input-12, 7140] 
cut re-enabled after branching node selection
0 lb beta sum: 0.43646225333213806, worst -0.1352628469467163
10 lb beta sum: 0.43646225333213806, worst -0.13525784015655518
Time: prepare 0.0062    bound 0.1501    transfer 0.0010    finalize 0.0025    func 0.1608    
Accumulated time: func 2.9047    prepare 0.0670    bound 2.7669    transfer 0.0172    finalize 0.0504    
all_split False
======================Cut inference begins======================
max lb tensor(0.31499380) min lb tensor(-0.13525236)
Number of Verified Splits: 46 of 140
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 17
#cuts >= 20: 0
BICCOS time: 0.011416196823120117 
BICCOS Cumulative time: 0.9612607955932617
Preprocessing time: 0.004340171813964844 Inference time: 0.005781650543212891 Add cuts time: 0.0009169578552246094 Cut analysis time: 0.00037741661071777344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13525 (16), -0.13417 (16), -0.13283 (16), -0.13225 (16), -0.13199 (16), -0.13119 (16), -0.12966 (16), -0.12932 (16), -0.08524 (16), -0.08516 (16), -0.08482 (16), -0.08458 (16), -0.08397 (16), -0.08373 (16), -0.08366 (16), -0.08284 (16), -0.08248 (16), -0.08226 (16), -0.08205 (16), -0.08201 (16), 
Length of domains: 94
Time: pickout 0.0006    decision 0.0172    set_bounds 0.0051    solve 0.1608    add 0.0023    
Accumulated time: pickout 0.0094    decision 1.0801    set_bounds 0.0869    solve 2.6787    add 0.5267    
Current (lb-rhs): -0.13525235652923584
568 domains visited
Cumulative time: 5.600245237350464

BaB round 14
batch: 94
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 104] [/input-16, 104] [/input-12, 7140] [/input-12, 7140] [/input-16, 104] [/input-16, 165] [/input-16, 165] [/input-16, 165] [/input-16, 165] [/input-16, 165] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13042664527893066
10 lb beta sum: 0.3945903182029724, worst -0.13041630387306213
Time: prepare 0.0037    bound 0.1515    transfer 0.0023    finalize 0.0047    func 0.1634    
Accumulated time: func 3.0681    prepare 0.0709    bound 2.9185    transfer 0.0194    finalize 0.0551    
all_split False
======================Cut inference begins======================
max lb tensor(0.31285024) min lb tensor(-0.13040976)
Number of Verified Splits: 123 of 188
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 18
#cuts >= 20: 0
BICCOS time: 0.022852659225463867 
BICCOS Cumulative time: 0.9841134548187256
Preprocessing time: 0.005745887756347656 Inference time: 0.01572394371032715 Add cuts time: 0.001004934310913086 Cut analysis time: 0.00037789344787597656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13041 (17), -0.12934 (17), -0.12797 (17), -0.12742 (17), -0.10020 (17), -0.09598 (17), -0.09407 (17), -0.08514 (17), -0.08471 (17), -0.08394 (17), -0.08357 (17), -0.07722 (17), -0.07716 (17), -0.07681 (17), -0.07669 (17), -0.07644 (17), -0.07639 (17), -0.07378 (17), -0.07019 (17), -0.06944 (17), 
Length of domains: 65
Time: pickout 0.0007    decision 0.0180    set_bounds 0.0079    solve 0.1635    add 0.0024    
Accumulated time: pickout 0.0102    decision 1.0982    set_bounds 0.0948    solve 2.8422    add 0.5291    
Current (lb-rhs): -0.13040976226329803
633 domains visited
Cumulative time: 5.816473007202148

BaB round 15
batch: 65
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7140] [/input-12, 7140] [/input-12, 7140] [/input-16, 104] [/input-16, 104] [/input-12, 7798] [/input-16, 104] [/input-12, 7798] [/input-12, 7140] [/input-12, 7140] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12446355819702148
10 lb beta sum: 0.6618706583976746, worst -0.12443986535072327
Time: prepare 0.0028    bound 0.1537    transfer 0.0020    finalize 0.0046    func 0.1640    
Accumulated time: func 3.2321    prepare 0.0738    bound 3.0722    transfer 0.0214    finalize 0.0597    
all_split False
======================Cut inference begins======================
max lb tensor(0.17253196) min lb tensor(-0.12443165)
Number of Verified Splits: 47 of 130
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 18
#cuts >= 20: 0
BICCOS time: 0.013221979141235352 
BICCOS Cumulative time: 0.9973354339599609
Preprocessing time: 0.004258632659912109 Inference time: 0.007335186004638672 Add cuts time: 0.0011734962463378906 Cut analysis time: 0.0004546642303466797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12443 (18), -0.12337 (18), -0.12098 (18), -0.12064 (18), -0.11815 (18), -0.11688 (18), -0.11317 (18), -0.11264 (18), -0.09533 (18), -0.08832 (18), -0.08511 (18), -0.08031 (18), -0.07999 (18), -0.07917 (18), -0.07885 (18), -0.07774 (18), -0.07681 (18), -0.07443 (18), -0.07248 (18), -0.07246 (18), 
Length of domains: 83
Time: pickout 0.0008    decision 0.0165    set_bounds 0.0050    solve 0.1641    add 0.0022    
Accumulated time: pickout 0.0109    decision 1.1147    set_bounds 0.0998    solve 3.0063    add 0.5313    
Current (lb-rhs): -0.12443165481090546
716 domains visited
Cumulative time: 6.018728017807007

BaB round 16
batch: 83
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7861] [/input-16, 186] [/input-12, 5268] [/input-12, 7798] [/input-12, 7798] [/input-12, 7540] [/input-16, 186] [/input-16, 186] [/input-12, 5268] [/input-16, 186] 
cut re-enabled after branching node selection
0 lb beta sum: 0.3586309552192688, worst -0.11953604221343994
10 lb beta sum: 0.6149919629096985, worst -0.11949479579925537
Time: prepare 0.0077    bound 0.1577    transfer 0.0009    finalize 0.0025    func 0.1700    
Accumulated time: func 3.4021    prepare 0.0817    bound 3.2299    transfer 0.0223    finalize 0.0622    
all_split False
======================Cut inference begins======================
max lb tensor(0.15093255) min lb tensor(-0.11461644)
Number of Verified Splits: 14 of 166
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 18
#cuts >= 20: 0
BICCOS time: 0.008104085922241211 
BICCOS Cumulative time: 1.0054395198822021
Preprocessing time: 0.00511479377746582 Inference time: 0.0019512176513671875 Add cuts time: 0.0004253387451171875 Cut analysis time: 0.0006127357482910156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11462 (19), -0.11369 (19), -0.11347 (19), -0.11181 (19), -0.11132 (19), -0.11110 (19), -0.10869 (19), -0.10835 (19), -0.10795 (19), -0.10722 (19), -0.10703 (19), -0.10507 (19), -0.10359 (19), -0.10325 (19), -0.10029 (19), -0.09921 (19), -0.09533 (19), -0.09222 (19), -0.08832 (19), -0.08803 (19), 
Length of domains: 152
Time: pickout 0.0008    decision 0.0181    set_bounds 0.0073    solve 0.1700    add 0.0037    
Accumulated time: pickout 0.0117    decision 1.1328    set_bounds 0.1071    solve 3.1763    add 0.5350    
Current (lb-rhs): -0.11461643874645233
868 domains visited
Cumulative time: 6.227082014083862

BaB round 17
batch: 152
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 186] [/input-12, 7861] [/input-12, 7861] [/input-12, 7861] [/input-16, 186] [/input-16, 186] [/input-12, 7861] [/input-12, 7861] [/input-16, 186] [/input-12, 7798] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5265650749206543, worst -0.11509114503860474
10 lb beta sum: 0.6314876079559326, worst -0.11511212587356567
Time: prepare 0.0138    bound 0.1601    transfer 0.0021    finalize 0.0055    func 0.1836    
Accumulated time: func 3.5857    prepare 0.0957    bound 3.3900    transfer 0.0244    finalize 0.0677    
all_split False
======================Cut inference begins======================
max lb tensor(0.10280597) min lb tensor(-0.11253004)
Number of Verified Splits: 37 of 304
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 19
#cuts >= 20: 0
BICCOS time: 0.016137361526489258 
BICCOS Cumulative time: 1.0215768814086914
Preprocessing time: 0.009175777435302734 Inference time: 0.005368709564208984 Add cuts time: 0.001192331314086914 Cut analysis time: 0.000400543212890625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11253 (20), -0.11161 (20), -0.11134 (20), -0.10975 (20), -0.10895 (20), -0.10721 (20), -0.10654 (20), -0.10625 (20), -0.10543 (20), -0.10514 (20), -0.10489 (20), -0.10296 (20), -0.09962 (20), -0.09948 (20), -0.09800 (20), -0.09700 (20), -0.09533 (20), -0.09533 (20), -0.09332 (20), -0.08832 (20), 
Length of domains: 267
Time: pickout 0.0008    decision 0.0260    set_bounds 0.0133    solve 0.1837    add 0.0066    
Accumulated time: pickout 0.0125    decision 1.1588    set_bounds 0.1204    solve 3.3600    add 0.5416    
Current (lb-rhs): -0.11253003776073456
1135 domains visited
Cumulative time: 6.474218130111694

BaB round 18
batch: 256
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7798] [/input-16, 7] [/input-12, 7798] [/input-16, 186] [/input-12, 4676] [/input-12, 4676] [/input-12, 7798] [/input-16, 7] [/input-12, 7861] [/input-16, 186] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10892605781555176
10 lb beta sum: 0.647620677947998, worst -0.1089111864566803
Time: prepare 0.0104    bound 0.1535    transfer 0.0023    finalize 0.0195    func 0.1891    
Accumulated time: func 3.7748    prepare 0.1063    bound 3.5436    transfer 0.0267    finalize 0.0872    
all_split False
======================Cut inference begins======================
max lb tensor(0.30176717) min lb tensor(-0.10890774)
Number of Verified Splits: 146 of 512
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 19
#cuts >= 20: 0
BICCOS time: 0.03957414627075195 
BICCOS Cumulative time: 1.0611510276794434
Preprocessing time: 0.014998435974121094 Inference time: 0.022275447845458984 Add cuts time: 0.0018727779388427734 Cut analysis time: 0.00042748451232910156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10891 (21), -0.10801 (21), -0.10772 (21), -0.10609 (21), -0.10268 (21), -0.10158 (21), -0.10154 (21), -0.10147 (21), -0.10134 (21), -0.09948 (20), -0.09931 (21), -0.09904 (21), -0.09885 (21), -0.09533 (21), -0.09400 (21), -0.09059 (21), -0.09033 (21), -0.08832 (21), -0.08736 (21), -0.08717 (21), 
Length of domains: 377
Time: pickout 0.0080    decision 0.0304    set_bounds 0.0227    solve 0.1893    add 0.0069    
Accumulated time: pickout 0.0205    decision 1.1891    set_bounds 0.1431    solve 3.5493    add 0.5486    
Current (lb-rhs): -0.10890774428844452
1501 domains visited
current_vram/total_varm: 1.8GB/99.9GB, batch_size increase to 512
Cumulative time: 6.772809028625488

BaB round 19
batch: 377
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 7] [/input-12, 7798] [/input-12, 5268] [/input-12, 7540] [/input-12, 7861] [/input-12, 7861] [/input-12, 7861] [/input-12, 5268] [/input-16, 7] [/input-12, 7540] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7440392374992371, worst -0.1049380749464035
10 lb beta sum: 0.7798330783843994, worst -0.10492567718029022
Time: prepare 0.0336    bound 0.1748    transfer 0.0065    finalize 0.0164    func 0.2377    
Accumulated time: func 4.0125    prepare 0.1401    bound 3.7184    transfer 0.0331    finalize 0.1036    
all_split False
======================Cut inference begins======================
max lb tensor(0.31681803) min lb tensor(-0.10492377)
Number of Verified Splits: 177 of 754
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 19
#cuts >= 20: 0
BICCOS time: 0.054912567138671875 
BICCOS Cumulative time: 1.1160635948181152
Preprocessing time: 0.023679018020629883 Inference time: 0.02844691276550293 Add cuts time: 0.0023784637451171875 Cut analysis time: 0.000408172607421875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10492 (22), -0.10420 (22), -0.10380 (22), -0.10232 (22), -0.10154 (22), -0.10147 (22), -0.09882 (22), -0.09872 (22), -0.09778 (22), -0.09744 (22), -0.09560 (22), -0.09533 (22), -0.09532 (22), -0.09382 (21), -0.09059 (22), -0.09031 (22), -0.09028 (22), -0.09004 (22), -0.08963 (22), -0.08905 (22), 
Length of domains: 577
Time: pickout 0.0015    decision 0.0420    set_bounds 0.0322    solve 0.2379    add 0.0097    
Accumulated time: pickout 0.0220    decision 1.2312    set_bounds 0.1752    solve 3.7872    add 0.5582    
Current (lb-rhs): -0.10492376983165741
2078 domains visited
Cumulative time: 7.152894496917725

BaB round 20
batch: 512
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7861] [/input-16, 7] [/input-12, 7798] [/input-12, 7798] [/input-16, 7] [/input-16, 7] [/input-12, 7540] [/input-12, 7861] [/input-16, 7] [/input-12, 7539] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7640444040298462, worst -0.10149101912975311
10 lb beta sum: 0.7694418430328369, worst -0.10145597159862518
Time: prepare 0.0463    bound 0.1886    transfer 0.0052    finalize 0.0185    func 0.2652    
Accumulated time: func 4.2777    prepare 0.1867    bound 3.9069    transfer 0.0383    finalize 0.1221    
all_split False
======================Cut inference begins======================
max lb tensor(0.24443537) min lb tensor(-0.10144667)
Number of Verified Splits: 339 of 1024
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 19
#cuts >= 20: 0
BICCOS time: 0.08987712860107422 
BICCOS Cumulative time: 1.2059407234191895
Preprocessing time: 0.03104400634765625 Inference time: 0.05325722694396973 Add cuts time: 0.005110740661621094 Cut analysis time: 0.00046515464782714844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10145 (23), -0.10065 (23), -0.10027 (23), -0.09876 (23), -0.09793 (23), -0.09783 (23), -0.09524 (23), -0.09513 (23), -0.09425 (23), -0.09391 (23), -0.09382 (22), -0.09204 (23), -0.09162 (23), -0.09003 (23), -0.08737 (23), -0.08692 (23), -0.08664 (23), -0.08641 (23), -0.08637 (23), -0.08635 (23), 
Length of domains: 750
Time: pickout 0.0045    decision 0.0503    set_bounds 0.0447    solve 0.2661    add 0.0142    
Accumulated time: pickout 0.0265    decision 1.2815    set_bounds 0.2199    solve 4.0534    add 0.5725    
Current (lb-rhs): -0.10144667327404022
2763 domains visited
current_vram/total_varm: 3.6GB/99.9GB, batch_size increase to 1024
Cumulative time: 7.628115892410278

BaB round 21
batch: 750
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5268] [/input-12, 7539] [/input-12, 5268] [/input-12, 5268] [/input-16, 7] [/input-16, 7] [/input-12, 7798] [/input-16, 7] [/input-12, 6469] [/input-12, 7798] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7301332950592041, worst -0.09650635719299316
10 lb beta sum: 0.7323616743087769, worst -0.09738326072692871
Time: prepare 0.0669    bound 0.2280    transfer 0.0052    finalize 0.0231    func 0.3343    
Accumulated time: func 4.6120    prepare 0.2538    bound 4.1349    transfer 0.0435    finalize 0.1452    
all_split False
======================Cut inference begins======================
max lb tensor(0.24567777) min lb tensor(-0.09650636)
Number of Verified Splits: 434 of 1500
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 19
#cuts >= 20: 0
BICCOS time: 0.12836408615112305 
BICCOS Cumulative time: 1.3343048095703125
Preprocessing time: 0.04922914505004883 Inference time: 0.07245850563049316 Add cuts time: 0.006096839904785156 Cut analysis time: 0.0005795955657958984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09651 (24), -0.09574 (24), -0.09544 (24), -0.09486 (24), -0.09472 (24), -0.09465 (24), -0.09384 (24), -0.09348 (24), -0.09262 (24), -0.09256 (24), -0.09162 (24), -0.09152 (24), -0.09026 (23), -0.08976 (24), -0.08931 (24), -0.08868 (24), -0.08833 (24), -0.08815 (24), -0.08778 (24), -0.08755 (24), 
Length of domains: 1066
Time: pickout 0.0214    decision 0.0673    set_bounds 0.0645    solve 0.3346    add 0.0212    
Accumulated time: pickout 0.0479    decision 1.3488    set_bounds 0.2844    solve 4.3880    add 0.5937    
Current (lb-rhs): -0.09650635719299316
3829 domains visited
Cumulative time: 8.271325588226318

BaB round 22
batch: 1024
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7539] [/input-12, 3821] [/input-12, 3821] [/input-16, 7] [/input-16, 7] [/input-12, 7862] [/input-12, 7539] [/input-12, 7862] [/input-12, 3821] [/input-16, 7] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6801390647888184, worst -0.09231691062450409
10 lb beta sum: 0.6810453534126282, worst -0.0923040360212326
Time: prepare 0.0920    bound 0.2784    transfer 0.0068    finalize 0.0532    func 0.4444    
Accumulated time: func 5.0564    prepare 0.3461    bound 4.4133    transfer 0.0503    finalize 0.1984    
all_split False
======================Cut inference begins======================
max lb tensor(0.24562675) min lb tensor(-0.09230094)
Number of Verified Splits: 422 of 2048
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 19
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.1433241367340088 
BICCOS Cumulative time: 1.4776289463043213
Preprocessing time: 0.06270742416381836 Inference time: 0.07396841049194336 Add cuts time: 0.006030559539794922 Cut analysis time: 0.0006177425384521484
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09230 (25), -0.09138 (25), -0.09131 (25), -0.09122 (25), -0.09089 (25), -0.09030 (25), -0.09012 (25), -0.08984 (25), -0.08977 (25), -0.08887 (25), -0.08875 (25), -0.08874 (25), -0.08862 (25), -0.08812 (25), -0.08796 (25), -0.08790 (24), -0.08780 (25), -0.08702 (25), -0.08679 (25), -0.08632 (25), 
Length of domains: 1668
Time: pickout 0.0045    decision 0.2516    set_bounds 0.0879    solve 0.4448    add 0.0324    
Accumulated time: pickout 0.0524    decision 1.6004    set_bounds 0.3723    solve 4.8328    add 0.6261    
Current (lb-rhs): -0.09230093657970428
5455 domains visited
current_vram/total_varm: 7.1GB/99.9GB, batch_size increase to 2048
Cumulative time: 9.243935585021973

BaB round 23
batch: 1668
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3821] [/input-12, 3821] [/input-12, 7539] [/input-12, 3821] [/input-12, 6067] [/input-12, 6067] [/input-12, 4676] [/input-12, 7862] [/input-12, 4676] [/input-12, 6067] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08991527557373047
10 lb beta sum: 0.3625519871711731, worst -0.08990216255187988
Time: prepare 0.0678    bound 0.5629    transfer 0.0460    finalize 0.1121    func 0.8120    
Accumulated time: func 5.8684    prepare 0.4141    bound 4.9762    transfer 0.0964    finalize 0.3105    
all_split False
======================Cut inference begins======================
max lb tensor(0.48276204) min lb tensor(-0.08989573)
Number of Verified Splits: 1014 of 3336
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 19
#cuts 4-6: 6
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.4531078338623047 
BICCOS Cumulative time: 1.930736780166626
Preprocessing time: 0.10538601875305176 Inference time: 0.3314642906188965 Add cuts time: 0.015262126922607422 Cut analysis time: 0.0009953975677490234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08990 (26), -0.08885 (26), -0.08870 (26), -0.08785 (26), -0.08776 (26), -0.08740 (26), -0.08681 (26), -0.08668 (26), -0.08642 (26), -0.08634 (26), -0.08618 (26), -0.08617 (26), -0.08557 (26), -0.08529 (26), -0.08511 (26), -0.08485 (26), -0.08473 (26), -0.08470 (26), -0.08445 (26), -0.08399 (26), 
Length of domains: 2322
Time: pickout 0.0492    decision 0.1368    set_bounds 0.1429    solve 0.8129    add 0.0418    
Accumulated time: pickout 0.1016    decision 1.7372    set_bounds 0.5152    solve 5.6457    add 0.6680    
Current (lb-rhs): -0.08989572525024414
7777 domains visited
Cumulative time: 10.895503520965576

BaB round 24
batch: 2048
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3821] [/input-12, 6067] [/input-12, 7862] [/input-12, 7539] [/input-12, 6067] [/input-12, 6067] [/input-12, 5930] [/input-12, 4676] [/input-12, 3821] [/input-12, 3469] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0874030590057373
10 lb beta sum: 0.3364102840423584, worst -0.08738675713539124
Time: prepare 0.0863    bound 0.6657    transfer 0.0533    finalize 0.1306    func 0.9638    
Accumulated time: func 6.8322    prepare 0.5007    bound 5.6420    transfer 0.1497    finalize 0.4411    
all_split False
======================Cut inference begins======================
max lb tensor(0.23838148) min lb tensor(-0.08737831)
Number of Verified Splits: 909 of 4096
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 19
#cuts 4-6: 18
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.32310056686401367 
BICCOS Cumulative time: 2.2538373470306396
Preprocessing time: 0.12674593925476074 Inference time: 0.17281699180603027 Add cuts time: 0.0221707820892334 Cut analysis time: 0.0013668537139892578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08776 (26), -0.08738 (27), -0.08681 (26), -0.08668 (26), -0.08649 (27), -0.08634 (26), -0.08586 (27), -0.08557 (26), -0.08522 (27), -0.08511 (26), -0.08389 (27), -0.08384 (27), -0.08324 (27), -0.08306 (27), -0.08285 (27), -0.08273 (27), -0.08259 (27), -0.08245 (27), -0.08241 (27), -0.08240 (27), 
Length of domains: 3461
Time: pickout 0.0079    decision 0.1638    set_bounds 0.1737    solve 0.9653    add 0.0778    
Accumulated time: pickout 0.1095    decision 1.9010    set_bounds 0.6889    solve 6.6109    add 0.7457    
Current (lb-rhs): -0.08775530755519867
10964 domains visited
current_vram/total_varm: 15.2GB/99.9GB, batch_size increase to 4096
Cumulative time: 12.623796224594116

BaB round 25
batch: 3461
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7862] [/input-12, 6067] [/input-12, 7798] [/input-12, 3469] [/input-12, 3821] [/input-12, 4676] [/input-12, 7862] [/input-12, 7539] [/input-12, 3469] [/input-12, 3469] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0863041877746582
10 lb beta sum: 0.32903343439102173, worst -0.08629575371742249
Time: prepare 0.1621    bound 1.0751    transfer 0.0965    finalize 0.2347    func 1.8044    
Accumulated time: func 8.6366    prepare 0.6631    bound 6.7170    transfer 0.2462    finalize 0.6758    
all_split False
======================Cut inference begins======================
max lb tensor(0.06228025) min lb tensor(-0.08628301)
Number of Verified Splits: 1463 of 6922
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 65.
#cuts 1-3: 19
#cuts 4-6: 37
#cuts 7-9: 9
#cuts >= 20: 0
BICCOS time: 0.5529694557189941 
BICCOS Cumulative time: 2.806806802749634
Preprocessing time: 0.22072911262512207 Inference time: 0.2923712730407715 Add cuts time: 0.03724932670593262 Cut analysis time: 0.0026197433471679688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08628 (27), -0.08547 (28), -0.08484 (27), -0.08464 (28), -0.08442 (27), -0.08432 (28), -0.08337 (28), -0.08250 (27), -0.08203 (27), -0.08201 (27), -0.08196 (28), -0.08192 (28), -0.08135 (28), -0.08132 (28), -0.08131 (27), -0.08102 (28), -0.08101 (28), -0.08092 (28), -0.08078 (28), -0.08050 (28), 
Length of domains: 5459
Time: pickout 0.1352    decision 0.4307    set_bounds 0.2888    solve 1.8060    add 0.1272    
Accumulated time: pickout 0.2446    decision 2.3317    set_bounds 0.9777    solve 8.4169    add 0.8729    
Current (lb-rhs): -0.08628301322460175
16423 domains visited
Cumulative time: 15.98999309539795

BaB round 26
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4676] [/input-12, 7862] [/input-12, 4676] [/input-12, 3469] [/input-12, 7798] [/input-12, 7798] [/input-12, 4676] [/input-12, 7539] [/input-12, 3469] [/input-4, 1143] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08443212509155273
10 lb beta sum: 0.31431764364242554, worst -0.08442392945289612
Time: prepare 0.1988    bound 1.2620    transfer 0.1060    finalize 0.2679    func 1.8896    
Accumulated time: func 10.5262    prepare 0.8621    bound 7.9790    transfer 0.3522    finalize 0.9438    
all_split False
======================Cut inference begins======================
max lb tensor(0.06415661) min lb tensor(-0.08439712)
Number of Verified Splits: 2102 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 92.
#cuts 1-3: 19
#cuts 4-6: 48
#cuts 7-9: 24
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.9927458763122559 
BICCOS Cumulative time: 3.7995526790618896
Preprocessing time: 0.2647287845611572 Inference time: 0.6506905555725098 Add cuts time: 0.07341861724853516 Cut analysis time: 0.003907918930053711
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08464 (28), -0.08440 (28), -0.08377 (29), -0.08337 (28), -0.08331 (28), -0.08196 (28), -0.08146 (28), -0.08136 (29), -0.08102 (28), -0.08078 (28), -0.08067 (28), -0.08022 (28), -0.08019 (29), -0.07975 (29), -0.07962 (29), -0.07941 (29), -0.07928 (29), -0.07893 (29), -0.07890 (29), -0.07861 (29), 
Length of domains: 7453
Time: pickout 0.0164    decision 0.3157    set_bounds 0.5298    solve 1.8914    add 0.1547    
Accumulated time: pickout 0.2611    decision 2.6475    set_bounds 1.5076    solve 10.3084    add 1.0276    
Current (lb-rhs): -0.08463740348815918
22513 domains visited
current_vram/total_varm: 31.7GB/99.9GB, batch_size increase to 8192
Cumulative time: 19.925658464431763

BaB round 27
batch: 7453
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-4, 1143] [/input-12, 7539] [/input-12, 7539] [/input-4, 1143] [/input-12, 7539] [/input-12, 3469] [/input-12, 4676] [/input-12, 3469] [/input-12, 3469] [/input-12, 3469] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08296799659729004
10 lb beta sum: 0.32771408557891846, worst -0.08294320106506348
Time: prepare 0.3800    bound 2.9322    transfer 0.2079    finalize 0.5142    func 4.1326    
Accumulated time: func 14.6587    prepare 1.2426    bound 10.9112    transfer 0.5602    finalize 1.4580    
all_split False
======================Cut inference begins======================
max lb tensor(0.79886436) min lb tensor(-0.08293700)
Number of Verified Splits: 4480 of 14906
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 182.
#cuts 1-3: 19
#cuts 4-6: 100
#cuts 7-9: 61
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 1.8998231887817383 
BICCOS Cumulative time: 5.699375867843628
Preprocessing time: 0.48546481132507324 Inference time: 1.2538931369781494 Add cuts time: 0.15233588218688965 Cut analysis time: 0.008129358291625977
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08294 (29), -0.08171 (29), -0.08141 (29), -0.08080 (30), -0.08035 (29), -0.07954 (29), -0.07938 (29), -0.07931 (30), -0.07919 (29), -0.07899 (29), -0.07878 (29), -0.07843 (29), -0.07790 (30), -0.07781 (30), -0.07780 (29), -0.07733 (29), -0.07723 (30), -0.07722 (30), -0.07681 (29), -0.07672 (29), 
Length of domains: 10426
Time: pickout 0.2898    decision 0.5553    set_bounds 0.8881    solve 4.1368    add 0.2429    
Accumulated time: pickout 0.5509    decision 3.2028    set_bounds 2.3957    solve 14.4452    add 1.2705    
Current (lb-rhs): -0.08293700218200684
32939 domains visited
Cumulative time: 28.00350856781006

BaB round 28
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4676] [/input-4, 1143] [/input-12, 7012] [/input-12, 5930] [/input-12, 7862] [/input-12, 4219] [/input-12, 7862] [/input-12, 4219] [/input-12, 7862] [/input-12, 7862] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08053755760192871
10 lb beta sum: 0.32326996326446533, worst -0.09522697329521179
Time: prepare 0.4330    bound 3.3473    transfer 0.2108    finalize 0.5440    func 4.6428    
Accumulated time: func 19.3016    prepare 1.6759    bound 14.2585    transfer 0.7709    finalize 2.0019    
all_split False
======================Cut inference begins======================
max lb tensor(0.99888015) min lb tensor(-0.08048354)
Number of Verified Splits: 4662 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 225.
#cuts 1-3: 19
#cuts 4-6: 144
#cuts 7-9: 60
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 1.7879862785339355 
BICCOS Cumulative time: 7.4873621463775635
Preprocessing time: 0.5401227474212646 Inference time: 1.041128396987915 Add cuts time: 0.19703125953674316 Cut analysis time: 0.009703874588012695
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08048 (30), -0.07997 (30), -0.07988 (31), -0.07874 (30), -0.07861 (30), -0.07846 (30), -0.07843 (29), -0.07840 (31), -0.07834 (30), -0.07827 (30), -0.07790 (30), -0.07784 (30), -0.07781 (30), -0.07762 (30), -0.07713 (30), -0.07642 (30), -0.07635 (30), -0.07628 (30), -0.07593 (30), -0.07592 (30), 
Length of domains: 13956
Time: pickout 0.0395    decision 0.6219    set_bounds 0.9738    solve 4.9608    add 0.2830    
Accumulated time: pickout 0.5904    decision 3.8248    set_bounds 3.3695    solve 19.4060    add 1.5535    
Current (lb-rhs): -0.08048354089260101
44661 domains visited
Cumulative time: 36.740562438964844

BaB round 29
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-4, 1143] [/input-4, 1143] [/input-4, 1143] [/input-12, 3469] [/input-12, 4219] [/input-4, 1143] [/input-4, 1143] [/input-12, 3469] [/input-12, 4219] [/input-12, 7012] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0779421329498291
10 lb beta sum: 0.345000296831131, worst -0.07832741737365723
Time: prepare 0.4437    bound 3.4141    transfer 0.2103    finalize 0.9047    func 5.0820    
Accumulated time: func 24.3836    prepare 2.1200    bound 17.6726    transfer 0.9812    finalize 2.9067    
all_split False
======================Cut inference begins======================
max lb tensor(1.20434427) min lb tensor(-0.07789803)
Number of Verified Splits: 5252 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 199.
#cuts 1-3: 24
#cuts 4-6: 118
#cuts 7-9: 56
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 1.9561767578125 
BICCOS Cumulative time: 9.443538904190063
Preprocessing time: 0.5506672859191895 Inference time: 1.175487756729126 Add cuts time: 0.22147107124328613 Cut analysis time: 0.008550643920898438
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07840 (31), -0.07834 (30), -0.07790 (31), -0.07747 (30), -0.07725 (31), -0.07713 (30), -0.07686 (31), -0.07679 (31), -0.07673 (31), -0.07666 (32), -0.07642 (30), -0.07600 (31), -0.07592 (30), -0.07579 (31), -0.07564 (31), -0.07537 (31), -0.07534 (31), -0.07532 (31), -0.07531 (30), -0.07522 (31), 
Length of domains: 16896
Time: pickout 0.0455    decision 0.8644    set_bounds 0.7421    solve 5.0867    add 0.3623    
Accumulated time: pickout 0.6359    decision 4.6892    set_bounds 4.1116    solve 24.4927    add 1.9158    
Current (lb-rhs): -0.078402578830719
55793 domains visited
Cumulative time: 45.87590575218201

BaB round 30
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4219] [/input-12, 7012] [/input-12, 7539] [/input-4, 1143] [/input-12, 7012] [/input-4, 1143] [/input-12, 7539] [/input-12, 6469] [/input-12, 7539] [/input-4, 1143] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07747507095336914
10 lb beta sum: 0.37779831886291504, worst -0.0775081217288971
Time: prepare 0.4503    bound 3.3780    transfer 0.2122    finalize 0.9202    func 5.0701    
Accumulated time: func 29.4536    prepare 2.5707    bound 21.0506    transfer 1.1934    finalize 3.8269    
all_split False
======================Cut inference begins======================
max lb tensor(1.32517982) min lb tensor(-0.07744317)
Number of Verified Splits: 5966 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 245.
#cuts 1-3: 26
#cuts 4-6: 152
#cuts 7-9: 67
#cuts >= 20: 0
BICCOS time: 2.4931771755218506 
BICCOS Cumulative time: 11.936716079711914
Preprocessing time: 0.5588774681091309 Inference time: 1.2691247463226318 Add cuts time: 0.654592752456665 Cut analysis time: 0.010582208633422852
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07790 (31), -0.07744 (31), -0.07725 (31), -0.07666 (32), -0.07564 (31), -0.07553 (31), -0.07534 (31), -0.07532 (31), -0.07505 (32), -0.07502 (31), -0.07494 (32), -0.07490 (32), -0.07441 (31), -0.07431 (32), -0.07423 (32), -0.07410 (32), -0.07390 (31), -0.07383 (31), -0.07335 (31), -0.07333 (32), 
Length of domains: 19122
Time: pickout 0.0408    decision 0.9424    set_bounds 0.7445    solve 5.0745    add 0.2658    
Accumulated time: pickout 0.6767    decision 5.6316    set_bounds 4.8560    solve 29.5672    add 2.1815    
Current (lb-rhs): -0.07789802551269531
66211 domains visited
Cumulative time: 55.52566361427307

BaB round 31
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7862] [/input-4, 1143] [/input-12, 4219] [/input-12, 5930] [/input-12, 7862] [/input-12, 7012] [/input-4, 7817] [/input-12, 5930] [/input-4, 1143] [/input-4, 7569] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07549905776977539
10 lb beta sum: 0.3866073489189148, worst -0.07545271515846252
Time: prepare 0.4634    bound 3.4400    transfer 0.2105    finalize 0.9681    func 5.1950    
Accumulated time: func 34.6486    prepare 3.0344    bound 24.4906    transfer 1.4039    finalize 4.7950    
all_split False
======================Cut inference begins======================
max lb tensor(1.19909120) min lb tensor(-0.07544379)
Number of Verified Splits: 5206 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 267.
#cuts 1-3: 26
#cuts 4-6: 161
#cuts 7-9: 78
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 2.0370523929595947 
BICCOS Cumulative time: 13.973768472671509
Preprocessing time: 0.5627083778381348 Inference time: 1.191103458404541 Add cuts time: 0.2716214656829834 Cut analysis time: 0.011619091033935547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07744 (31), -0.07553 (31), -0.07544 (32), -0.07505 (32), -0.07502 (31), -0.07494 (32), -0.07490 (32), -0.07478 (33), -0.07451 (32), -0.07441 (31), -0.07431 (32), -0.07423 (32), -0.07410 (32), -0.07390 (31), -0.07335 (32), -0.07333 (32), -0.07312 (32), -0.07302 (31), -0.07295 (32), -0.07271 (31), 
Length of domains: 22108
Time: pickout 0.0449    decision 0.6274    set_bounds 0.7634    solve 5.2002    add 0.2903    
Accumulated time: pickout 0.7215    decision 6.2590    set_bounds 5.6194    solve 34.7674    add 2.4719    
Current (lb-rhs): -0.07744316756725311
77389 domains visited
Cumulative time: 64.62355279922485

BaB round 32
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 82] [/input-12, 5930] [/input-12, 5930] [/input-12, 7862] [/input-12, 7798] [/input-12, 4676] [/input-12, 4219] [/input-16, 82] [/input-12, 5930] [/input-16, 82] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07409834861755371
10 lb beta sum: 0.3651439845561981, worst -0.08347989618778229
Time: prepare 0.4862    bound 3.5112    transfer 0.2118    finalize 0.5714    func 5.4170    
Accumulated time: func 40.0656    prepare 3.5215    bound 28.0019    transfer 1.6157    finalize 5.3664    
all_split False
======================Cut inference begins======================
max lb tensor(1.21054602) min lb tensor(-0.07409787)
Number of Verified Splits: 4777 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 270.
#cuts 1-3: 26
#cuts 4-6: 168
#cuts 7-9: 76
#cuts >= 20: 0
BICCOS time: 1.899536371231079 
BICCOS Cumulative time: 15.873304843902588
Preprocessing time: 0.5675263404846191 Inference time: 1.058046817779541 Add cuts time: 0.2618257999420166 Cut analysis time: 0.012137413024902344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07544 (32), -0.07494 (32), -0.07478 (33), -0.07451 (32), -0.07410 (32), -0.07335 (32), -0.07312 (32), -0.07295 (32), -0.07237 (31), -0.07218 (32), -0.07194 (32), -0.07191 (32), -0.07184 (32), -0.07169 (33), -0.07168 (32), -0.07155 (32), -0.07126 (32), -0.07113 (32), -0.07112 (32), -0.07111 (33), 
Length of domains: 25523
Time: pickout 0.0396    decision 1.1489    set_bounds 0.8207    solve 5.4237    add 0.2825    
Accumulated time: pickout 0.7611    decision 7.4080    set_bounds 6.4402    solve 40.1911    add 2.7544    
Current (lb-rhs): -0.07544378936290741
88996 domains visited
Cumulative time: 74.33088302612305

BaB round 33
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 82] [/input-16, 82] [/input-12, 4219] [/input-16, 82] [/input-16, 82] [/input-16, 82] [/input-12, 7798] [/input-16, 82] [/input-12, 7862] [/input-12, 7862] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07237434387207031
10 lb beta sum: 0.34480276703834534, worst -0.09696097671985626
Time: prepare 0.4893    bound 3.5133    transfer 0.2068    finalize 0.5644    func 4.8848    
Accumulated time: func 44.9504    prepare 4.0112    bound 31.5151    transfer 1.8225    finalize 5.9308    
all_split False
======================Cut inference begins======================
max lb tensor(1.20354795) min lb tensor(-0.07233794)
Number of Verified Splits: 4389 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 301.
#cuts 1-3: 26
#cuts 4-6: 172
#cuts 7-9: 103
#cuts >= 20: 0
BICCOS time: 2.4061572551727295 
BICCOS Cumulative time: 18.279462099075317
Preprocessing time: 1.079219102859497 Inference time: 1.0479202270507812 Add cuts time: 0.2655959129333496 Cut analysis time: 0.013422012329101562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07544 (32), -0.07478 (33), -0.07451 (32), -0.07410 (32), -0.07335 (32), -0.07234 (32), -0.07194 (32), -0.07169 (33), -0.07168 (32), -0.07165 (33), -0.07155 (32), -0.07146 (33), -0.07112 (32), -0.07111 (33), -0.07111 (33), -0.07100 (32), -0.07070 (33), -0.07061 (33), -0.07057 (32), -0.07043 (32), 
Length of domains: 29326
Time: pickout 0.0445    decision 0.6339    set_bounds 1.2628    solve 4.8917    add 0.3411    
Accumulated time: pickout 0.8056    decision 8.0419    set_bounds 7.7030    solve 45.0827    add 3.0955    
Current (lb-rhs): -0.07544378936290741
100991 domains visited
Cumulative time: 83.9983766078949

BaB round 34
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 82] [/input-16, 82] [/input-12, 4219] [/input-12, 6469] [/input-12, 4219] [/input-12, 5930] [/input-16, 82] [/input-16, 82] [/input-12, 4219] [/input-16, 82] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0738229751586914
10 lb beta sum: 0.3493679165840149, worst -0.0738019049167633
Time: prepare 0.9784    bound 3.5461    transfer 0.2055    finalize 0.5521    func 5.3925    
Accumulated time: func 50.3429    prepare 4.9900    bound 35.0613    transfer 2.0280    finalize 6.4829    
all_split False
======================Cut inference begins======================
max lb tensor(1.20732331) min lb tensor(-0.07378893)
Number of Verified Splits: 4692 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 304.
#cuts 1-3: 27
#cuts 4-6: 183
#cuts 7-9: 94
#cuts >= 20: 0
BICCOS time: 2.0135114192962646 
BICCOS Cumulative time: 20.292973518371582
Preprocessing time: 0.5838723182678223 Inference time: 1.1256086826324463 Add cuts time: 0.2907290458679199 Cut analysis time: 0.013301372528076172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07410 (32), -0.07379 (33), -0.07365 (33), -0.07248 (33), -0.07234 (32), -0.07194 (32), -0.07169 (33), -0.07165 (33), -0.07155 (32), -0.07146 (33), -0.07112 (32), -0.07111 (33), -0.07111 (33), -0.07100 (32), -0.07070 (33), -0.07061 (33), -0.07043 (32), -0.07040 (34), -0.07023 (33), -0.06967 (33), 
Length of domains: 32826
Time: pickout 0.0428    decision 0.6303    set_bounds 0.8068    solve 5.4010    add 0.6483    
Accumulated time: pickout 0.8485    decision 8.6722    set_bounds 8.5098    solve 50.4838    add 3.7437    
Current (lb-rhs): -0.07409787178039551
112683 domains visited
Cumulative time: 93.63726353645325

BaB round 35
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 82] [/input-4, 1143] [/input-12, 7798] [/input-16, 82] [/input-12, 7798] [/input-4, 87] [/input-16, 82] [/input-12, 4219] [/input-16, 82] [/input-12, 7538] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06965780258178711
10 lb beta sum: 0.34925922751426697, worst -0.08878286182880402
Time: prepare 0.4772    bound 3.5460    transfer 0.2120    finalize 0.5648    func 4.9119    
Accumulated time: func 55.2549    prepare 5.4676    bound 38.6072    transfer 2.2400    finalize 7.0477    
all_split False
======================Cut inference begins======================
max lb tensor(1.20966959) min lb tensor(-0.06963615)
Number of Verified Splits: 4642 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 339.
#cuts 1-3: 29
#cuts 4-6: 184
#cuts 7-9: 125
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 2.601243019104004 
BICCOS Cumulative time: 22.894216537475586
Preprocessing time: 1.1570124626159668 Inference time: 1.1229405403137207 Add cuts time: 0.3060595989227295 Cut analysis time: 0.015230417251586914
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07379 (33), -0.07365 (33), -0.07248 (33), -0.07234 (32), -0.07165 (33), -0.07155 (32), -0.07146 (33), -0.07043 (32), -0.07040 (34), -0.06964 (33), -0.06927 (33), -0.06913 (33), -0.06900 (33), -0.06891 (34), -0.06888 (33), -0.06860 (33), -0.06854 (33), -0.06853 (33), -0.06822 (34), -0.06818 (33), 
Length of domains: 36376
Time: pickout 0.0505    decision 1.1076    set_bounds 0.8040    solve 4.9187    add 0.3115    
Accumulated time: pickout 0.8990    decision 9.7798    set_bounds 9.3138    solve 55.4025    add 4.0552    
Current (lb-rhs): -0.07378892600536346
124425 domains visited
Cumulative time: 103.51903939247131

BaB round 36
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4219] [/input-12, 7012] [/input-12, 7012] [/input-16, 82] [/input-12, 4219] [/input-12, 7012] [/input-16, 82] [/input-16, 82] [/input-12, 7012] [/input-12, 7538] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07071185111999512
10 lb beta sum: 0.3382743299007416, worst -0.11142897605895996
Time: prepare 0.4829    bound 3.5961    transfer 0.2050    finalize 1.1550    func 5.5489    
Accumulated time: func 60.8037    prepare 5.9510    bound 42.2034    transfer 2.4450    finalize 8.2027    
all_split False
======================Cut inference begins======================
max lb tensor(1.19479680) min lb tensor(-0.07067013)
Number of Verified Splits: 4958 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 340.
#cuts 1-3: 30
#cuts 4-6: 196
#cuts 7-9: 112
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 2.1028528213500977 
BICCOS Cumulative time: 24.997069358825684
Preprocessing time: 0.563422679901123 Inference time: 1.194566249847412 Add cuts time: 0.32952189445495605 Cut analysis time: 0.015341997146606445
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07379 (33), -0.07365 (33), -0.07248 (33), -0.07234 (32), -0.07165 (33), -0.07067 (33), -0.07040 (34), -0.06964 (33), -0.06955 (33), -0.06927 (33), -0.06900 (33), -0.06891 (34), -0.06888 (33), -0.06854 (33), -0.06853 (33), -0.06822 (34), -0.06818 (33), -0.06810 (33), -0.06798 (33), -0.06797 (34), 
Length of domains: 39610
Time: pickout 0.0431    decision 0.6308    set_bounds 0.8163    solve 5.5536    add 0.3174    
Accumulated time: pickout 0.9420    decision 10.4105    set_bounds 10.1300    solve 60.9561    add 4.3726    
Current (lb-rhs): -0.07378892600536346
135851 domains visited
Cumulative time: 113.08788084983826

BaB round 37
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 82] [/input-16, 82] [/input-16, 82] [/input-16, 82] [/input-12, 5930] [/input-12, 6469] [/input-12, 7538] [/input-16, 82] [/input-12, 7798] [/input-16, 82] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07071161270141602
10 lb beta sum: 0.38503724336624146, worst -0.07070055603981018
Time: prepare 0.5045    bound 3.5935    transfer 0.2068    finalize 0.5603    func 4.9746    
Accumulated time: func 65.7783    prepare 6.4560    bound 45.7969    transfer 2.6518    finalize 8.7631    
all_split False
======================Cut inference begins======================
max lb tensor(1.60351181) min lb tensor(-0.07068618)
Number of Verified Splits: 5160 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 281.
#cuts 1-3: 30
#cuts 4-6: 142
#cuts 7-9: 106
#cuts 10-12: 3
#cuts >= 20: 0
BICCOS time: 2.077174425125122 
BICCOS Cumulative time: 27.074243783950806
Preprocessing time: 0.5765688419342041 Inference time: 1.1904854774475098 Add cuts time: 0.29692816734313965 Cut analysis time: 0.013191938400268555
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07379 (33), -0.07069 (33), -0.07067 (33), -0.07040 (34), -0.06964 (33), -0.06955 (33), -0.06929 (34), -0.06891 (34), -0.06888 (33), -0.06822 (34), -0.06818 (33), -0.06812 (34), -0.06810 (33), -0.06797 (34), -0.06759 (34), -0.06746 (34), -0.06746 (33), -0.06730 (34), -0.06728 (34), -0.06715 (33), 
Length of domains: 42642
Time: pickout 0.0433    decision 0.6319    set_bounds 1.4198    solve 4.9813    add 0.3004    
Accumulated time: pickout 0.9853    decision 11.0425    set_bounds 11.5498    solve 65.9374    add 4.6730    
Current (lb-rhs): -0.07378892600536346
147075 domains visited
Cumulative time: 122.65088391304016

BaB round 38
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 82] [/input-12, 7798] [/input-4, 87] [/input-12, 7538] [/input-12, 5930] [/input-12, 7538] [/input-12, 7538] [/input-12, 5930] [/input-16, 82] [/input-12, 7012] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06940293312072754
10 lb beta sum: 0.4049384891986847, worst -0.06940355896949768
Time: prepare 0.4840    bound 3.5311    transfer 0.2092    finalize 0.5656    func 4.8986    
Accumulated time: func 70.6770    prepare 6.9404    bound 49.3280    transfer 2.8609    finalize 9.3286    
all_split False
======================Cut inference begins======================
max lb tensor(1.65512776) min lb tensor(-0.06938939)
Number of Verified Splits: 5849 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 263.
#cuts 1-3: 31
#cuts 4-6: 143
#cuts 7-9: 87
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 3.0060527324676514 
BICCOS Cumulative time: 30.080296516418457
Preprocessing time: 1.2758300304412842 Inference time: 1.4147498607635498 Add cuts time: 0.3036024570465088 Cut analysis time: 0.011870384216308594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07069 (33), -0.07067 (33), -0.06964 (33), -0.06955 (33), -0.06939 (34), -0.06929 (34), -0.06888 (33), -0.06825 (35), -0.06824 (34), -0.06822 (34), -0.06812 (34), -0.06810 (33), -0.06797 (34), -0.06746 (34), -0.06746 (33), -0.06730 (34), -0.06728 (34), -0.06715 (33), -0.06706 (34), -0.06691 (33), 
Length of domains: 44985
Time: pickout 0.0467    decision 1.2707    set_bounds 0.8206    solve 4.9071    add 0.3119    
Accumulated time: pickout 1.0320    decision 12.3131    set_bounds 12.3704    solve 70.8445    add 4.9849    
Current (lb-rhs): -0.07068617641925812
157610 domains visited
Cumulative time: 133.1301040649414

BaB round 39
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7538] [/input-4, 7817] [/input-12, 6452] [/input-12, 6469] [/input-12, 3458] [/input-12, 7538] [/input-12, 5930] [/input-12, 7012] [/input-12, 7538] [/input-4, 7817] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06720733642578125
10 lb beta sum: 0.4233914613723755, worst -0.0723147988319397
Time: prepare 0.4855    bound 3.5067    transfer 0.2040    finalize 0.5534    func 5.6013    
Accumulated time: func 76.2783    prepare 7.4263    bound 52.8348    transfer 3.0649    finalize 9.8820    
all_split False
======================Cut inference begins======================
max lb tensor(1.32753396) min lb tensor(-0.06713347)
Number of Verified Splits: 5078 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 278.
#cuts 1-3: 23
#cuts 4-6: 164
#cuts 7-9: 85
#cuts 10-12: 6
#cuts >= 20: 0
BICCOS time: 2.0964956283569336 
BICCOS Cumulative time: 32.17679214477539
Preprocessing time: 0.5785443782806396 Inference time: 1.240938663482666 Add cuts time: 0.2644646167755127 Cut analysis time: 0.012547969818115234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07069 (33), -0.07067 (33), -0.06955 (33), -0.06939 (34), -0.06929 (34), -0.06888 (33), -0.06825 (35), -0.06824 (34), -0.06812 (34), -0.06746 (34), -0.06728 (34), -0.06713 (34), -0.06706 (34), -0.06674 (33), -0.06664 (35), -0.06664 (34), -0.06601 (34), -0.06600 (34), -0.06599 (35), -0.06578 (33), 
Length of domains: 48099
Time: pickout 0.0479    decision 0.6261    set_bounds 0.8285    solve 5.6062    add 0.2713    
Accumulated time: pickout 1.0799    decision 12.9393    set_bounds 13.1989    solve 76.4507    add 5.2562    
Current (lb-rhs): -0.07068617641925812
168916 domains visited
Cumulative time: 142.71945357322693

BaB round 40
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7538] [/input-12, 7538] [/input-16, 82] [/input-12, 3458] [/input-4, 104] [/input-12, 7538] [/input-12, 6469] [/input-12, 7538] [/input-4, 7817] [/input-12, 7538] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06726551055908203
10 lb beta sum: 0.396212100982666, worst -0.09424947202205658
Time: prepare 0.4896    bound 3.5247    transfer 0.2102    finalize 0.5705    func 4.9068    
Accumulated time: func 81.1852    prepare 7.9163    bound 56.3594    transfer 3.2751    finalize 10.4525    
all_split False
======================Cut inference begins======================
max lb tensor(0.80031407) min lb tensor(-0.06726551)
Number of Verified Splits: 5426 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 297.
#cuts 1-3: 23
#cuts 4-6: 184
#cuts 7-9: 85
#cuts 10-12: 5
#cuts >= 20: 0
BICCOS time: 2.219510316848755 
BICCOS Cumulative time: 34.396302461624146
Preprocessing time: 0.5869834423065186 Inference time: 1.3303864002227783 Add cuts time: 0.2886962890625 Cut analysis time: 0.013444185256958008
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07069 (33), -0.06939 (34), -0.06929 (34), -0.06825 (35), -0.06824 (34), -0.06812 (34), -0.06746 (34), -0.06728 (34), -0.06727 (34), -0.06713 (34), -0.06664 (35), -0.06664 (34), -0.06631 (34), -0.06601 (34), -0.06599 (35), -0.06575 (34), -0.06557 (35), -0.06519 (34), -0.06517 (34), -0.06515 (35), 
Length of domains: 50865
Time: pickout 0.0455    decision 0.6273    set_bounds 1.5969    solve 4.9134    add 0.3141    
Accumulated time: pickout 1.1254    decision 13.5666    set_bounds 14.7958    solve 81.3641    add 5.5703    
Current (lb-rhs): -0.07068617641925812
179874 domains visited
Cumulative time: 152.5549771785736

BaB round 41
Cut Inference reaches max iterations. Recover the setting
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7538] [/input-12, 7538] [/input-16, 82] [/input-16, 82] [/input-12, 6452] [/input-4, 7569] [/input-12, 7538] [/input-12, 6452] [/input-12, 6469] [/input-16, 82] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06629753112792969
10 lb beta sum: 0.40607118606567383, worst -0.0950237512588501
Time: prepare 0.4786    bound 3.5426    transfer 0.2036    finalize 0.5614    func 4.8971    
Accumulated time: func 86.0823    prepare 8.3953    bound 59.9021    transfer 3.4788    finalize 11.0139    
all_split False
======================Cut inference begins======================
max lb tensor(0.78861737) min lb tensor(-0.06627999)
Number of Verified Splits: 5712 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 297.
#cuts 1-3: 23
#cuts 4-6: 184
#cuts 7-9: 85
#cuts 10-12: 5
#cuts >= 20: 0
BICCOS time: 0.0014798641204833984 
BICCOS Cumulative time: 34.39778232574463
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06939 (34), -0.06929 (34), -0.06825 (35), -0.06824 (34), -0.06812 (34), -0.06746 (34), -0.06727 (34), -0.06713 (34), -0.06664 (35), -0.06664 (34), -0.06631 (34), -0.06628 (34), -0.06599 (35), -0.06575 (34), -0.06557 (35), -0.06519 (34), -0.06517 (34), -0.06515 (35), -0.06512 (35), -0.06509 (34), 
Length of domains: 53345
Time: pickout 0.0474    decision 0.6289    set_bounds 1.5738    solve 4.9042    add 0.3850    
Accumulated time: pickout 1.1728    decision 14.1954    set_bounds 16.3696    solve 86.2683    add 5.9553    
Current (lb-rhs): -0.06938938796520233
190546 domains visited
Cumulative time: 160.21268010139465

BaB round 42
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-4, 88] [/input-12, 4219] [/input-4, 87] [/input-4, 1143] [/input-12, 7538] [/input-16, 82] [/input-12, 3553] [/input-12, 7538] [/input-12, 7538] [/input-12, 7538] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06687378883361816
10 lb beta sum: 0.39520499110221863, worst -0.07184790074825287
Time: prepare 0.4816    bound 3.5413    transfer 0.2097    finalize 1.3369    func 5.6809    
Accumulated time: func 91.7631    prepare 8.8773    bound 63.4434    transfer 3.6885    finalize 12.3508    
all_split False
======================Cut inference begins======================
max lb tensor(0.79154730) min lb tensor(-0.06687236)
Number of Verified Splits: 5085 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 297.
#cuts 1-3: 23
#cuts 4-6: 184
#cuts 7-9: 85
#cuts 10-12: 5
#cuts >= 20: 0
BICCOS time: 0.0009572505950927734 
BICCOS Cumulative time: 34.39873957633972
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06939 (34), -0.06825 (35), -0.06824 (34), -0.06746 (34), -0.06727 (34), -0.06713 (34), -0.06687 (35), -0.06664 (35), -0.06664 (34), -0.06631 (34), -0.06628 (34), -0.06599 (35), -0.06567 (35), -0.06557 (35), -0.06519 (34), -0.06517 (34), -0.06515 (35), -0.06512 (35), -0.06509 (34), -0.06504 (34), 
Length of domains: 56452
Time: pickout 0.0462    decision 0.6293    set_bounds 0.8221    solve 5.6864    add 0.2727    
Accumulated time: pickout 1.2190    decision 14.8248    set_bounds 17.1917    solve 91.9547    add 6.2281    
Current (lb-rhs): -0.06938938796520233
201845 domains visited
Cumulative time: 167.76225352287292

BaB round 43
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-4, 87] [/input-4, 7569] [/input-4, 7817] [/input-12, 6469] [/input-4, 87] [/input-12, 6469] [/input-16, 82] [/input-12, 6452] [/input-12, 3458] [/input-12, 6452] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0672600269317627
10 lb beta sum: 0.37177035212516785, worst -0.07482337951660156
Time: prepare 0.4916    bound 3.5407    transfer 0.2112    finalize 0.5529    func 4.9083    
Accumulated time: func 96.6714    prepare 9.3692    bound 66.9841    transfer 3.8997    finalize 12.9037    
all_split False
======================Cut inference begins======================
max lb tensor(0.77825928) min lb tensor(-0.06724600)
Number of Verified Splits: 5009 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 297.
#cuts 1-3: 23
#cuts 4-6: 184
#cuts 7-9: 85
#cuts 10-12: 5
#cuts >= 20: 0
BICCOS time: 0.0012798309326171875 
BICCOS Cumulative time: 34.40001940727234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06727 (34), -0.06725 (35), -0.06713 (34), -0.06687 (35), -0.06631 (34), -0.06628 (34), -0.06599 (35), -0.06599 (35), -0.06590 (36), -0.06567 (35), -0.06557 (35), -0.06522 (35), -0.06519 (34), -0.06517 (34), -0.06515 (35), -0.06512 (35), -0.06509 (34), -0.06504 (34), -0.06458 (35), -0.06455 (35), 
Length of domains: 59635
Time: pickout 0.0442    decision 0.6302    set_bounds 0.8100    solve 4.9150    add 0.3346    
Accumulated time: pickout 1.2632    decision 15.4550    set_bounds 18.0017    solve 96.8697    add 6.5626    
Current (lb-rhs): -0.06726551055908203
213220 domains visited
Cumulative time: 174.5953094959259

BaB round 44
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6469] [/input-12, 5930] [/input-12, 7539] [/input-4, 104] [/input-12, 6469] [/input-12, 6469] [/input-12, 7538] [/input-12, 7539] [/input-4, 7569] [/input-12, 6452] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06432867050170898
10 lb beta sum: 0.36438608169555664, worst -0.07752393186092377
Time: prepare 0.4828    bound 3.5436    transfer 0.2106    finalize 0.5435    func 4.8932    
Accumulated time: func 101.5646    prepare 9.8525    bound 70.5276    transfer 4.1103    finalize 13.4472    
all_split False
======================Cut inference begins======================
max lb tensor(0.40958560) min lb tensor(-0.06427269)
Number of Verified Splits: 5126 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 297.
#cuts 1-3: 23
#cuts 4-6: 184
#cuts 7-9: 85
#cuts 10-12: 5
#cuts >= 20: 0
BICCOS time: 0.0013604164123535156 
BICCOS Cumulative time: 34.40137982368469
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06727 (34), -0.06725 (35), -0.06687 (35), -0.06631 (34), -0.06628 (34), -0.06599 (35), -0.06590 (36), -0.06567 (35), -0.06557 (35), -0.06522 (35), -0.06517 (34), -0.06512 (35), -0.06509 (34), -0.06504 (34), -0.06458 (35), -0.06444 (34), -0.06442 (35), -0.06427 (35), -0.06423 (36), -0.06414 (34), 
Length of domains: 62701
Time: pickout 0.0450    decision 1.4268    set_bounds 0.8018    solve 4.9006    add 0.2685    
Accumulated time: pickout 1.3083    decision 16.8817    set_bounds 18.8035    solve 101.7703    add 6.8311    
Current (lb-rhs): -0.06726551055908203
224478 domains visited
Cumulative time: 182.1374156475067

BaB round 45
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6452] [/input-12, 6469] [/input-12, 6469] [/input-12, 7798] [/input-12, 6469] [/input-4, 88] [/input-4, 87] [/input-4, 104] [/input-4, 87] [/input-12, 6469] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06372857093811035
10 lb beta sum: 0.34861403703689575, worst -0.06450247764587402
Time: prepare 0.4970    bound 3.5413    transfer 0.2094    finalize 0.5557    func 4.9246    
Accumulated time: func 106.4892    prepare 10.3498    bound 74.0689    transfer 4.3197    finalize 14.0029    
all_split False
======================Cut inference begins======================
max lb tensor(0.41148055) min lb tensor(-0.06362486)
Number of Verified Splits: 4753 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 297.
#cuts 1-3: 23
#cuts 4-6: 184
#cuts 7-9: 85
#cuts 10-12: 5
#cuts >= 20: 0
BICCOS time: 0.0013756752014160156 
BICCOS Cumulative time: 34.40275549888611
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06727 (34), -0.06725 (35), -0.06687 (35), -0.06631 (34), -0.06628 (34), -0.06599 (35), -0.06590 (36), -0.06567 (35), -0.06522 (35), -0.06517 (34), -0.06512 (35), -0.06509 (34), -0.06458 (35), -0.06444 (34), -0.06442 (35), -0.06427 (35), -0.06423 (36), -0.06414 (34), -0.06412 (35), -0.06399 (36), 
Length of domains: 66140
Time: pickout 0.0437    decision 0.6297    set_bounds 1.6378    solve 4.9320    add 0.8375    
Accumulated time: pickout 1.3519    decision 17.5115    set_bounds 20.4413    solve 106.7023    add 7.6686    
Current (lb-rhs): -0.06726551055908203
236109 domains visited
Cumulative time: 190.32179284095764

BaB round 46
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5930] [/input-12, 7829] [/input-12, 7829] [/input-12, 5930] [/input-12, 7538] [/input-12, 6469] [/input-12, 3458] [/input-12, 3553] [/input-12, 3458] [/input-4, 7817] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06512451171875
10 lb beta sum: 0.35066571831703186, worst -0.07518741488456726
Time: prepare 0.4823    bound 3.5402    transfer 0.2092    finalize 1.3989    func 5.7395    
Accumulated time: func 112.2287    prepare 10.8325    bound 77.6091    transfer 4.5289    finalize 15.4018    
all_split False
======================Cut inference begins======================
max lb tensor(0.40823698) min lb tensor(-0.06511460)
Number of Verified Splits: 4732 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 297.
#cuts 1-3: 23
#cuts 4-6: 184
#cuts 7-9: 85
#cuts 10-12: 5
#cuts >= 20: 0
BICCOS time: 0.00089263916015625 
BICCOS Cumulative time: 34.403648138046265
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06725 (35), -0.06687 (35), -0.06628 (34), -0.06599 (35), -0.06590 (36), -0.06567 (35), -0.06522 (35), -0.06512 (35), -0.06511 (35), -0.06509 (34), -0.06458 (35), -0.06442 (35), -0.06427 (35), -0.06423 (36), -0.06399 (36), -0.06388 (35), -0.06384 (35), -0.06362 (35), -0.06344 (35), -0.06341 (36), 
Length of domains: 69600
Time: pickout 0.0385    decision 0.6283    set_bounds 0.7992    solve 5.7447    add 0.2585    
Accumulated time: pickout 1.3904    decision 18.1398    set_bounds 21.2404    solve 112.4470    add 7.9271    
Current (lb-rhs): -0.06724600493907928
247761 domains visited
Cumulative time: 197.8653483390808

BaB round 47
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6469] [/input-12, 6452] [/input-12, 7538] [/input-12, 4219] [/input-12, 6452] [/input-12, 6469] [/input-12, 7539] [/input-12, 7538] [/input-12, 6452] [/input-12, 6469] 
cut re-enabled after branching node selection
0 lb beta sum: 0.33849871158599854, worst -0.06412373483181
10 lb beta sum: 0.4330926537513733, worst -0.0994710624217987
Time: prepare 0.8130    bound 3.5391    transfer 0.2088    finalize 0.5476    func 5.2211    
Accumulated time: func 117.4498    prepare 11.6458    bound 81.1483    transfer 4.7377    finalize 15.9494    
all_split False
======================Cut inference begins======================
max lb tensor(0.39994878) min lb tensor(-0.06411897)
Number of Verified Splits: 3702 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 297.
#cuts 1-3: 23
#cuts 4-6: 184
#cuts 7-9: 85
#cuts 10-12: 5
#cuts >= 20: 0
BICCOS time: 0.0012660026550292969 
BICCOS Cumulative time: 34.404914140701294
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06725 (35), -0.06687 (35), -0.06599 (35), -0.06590 (36), -0.06567 (35), -0.06522 (35), -0.06511 (35), -0.06509 (34), -0.06442 (35), -0.06427 (35), -0.06423 (36), -0.06412 (35), -0.06399 (36), -0.06388 (35), -0.06384 (35), -0.06362 (35), -0.06344 (35), -0.06341 (36), -0.06283 (36), -0.06281 (35), 
Length of domains: 74090
Time: pickout 0.0379    decision 0.6280    set_bounds 0.8031    solve 5.2274    add 0.2847    
Accumulated time: pickout 1.4283    decision 18.7678    set_bounds 22.0435    solve 117.6744    add 8.2118    
Current (lb-rhs): -0.06724600493907928
260443 domains visited
Time out!!!!!!!!
Result: unknown in 207.8062 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 94, vnnlib ID: 94 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-65.31011963, -70.79913330, -65.82142639, -69.16690826, -69.77214813,
         -69.41471100, -69.14160156, -72.50074005, -65.64284515, -70.42536163]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1412]; unstable size 1412; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 337, 1, 1412] with unstable size 336 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 17, 1, 1412] with unstable size 16 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1412] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [336]; unstable size 336; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 17, 1, 336] with unstable size 16 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 336] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [16]; unstable size 16; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.99259377,  4.39521503,  2.71884775,  3.17176580,  2.91816807,
          2.71710205,  5.74594641, -0.90789545,  3.93935442]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-65.31011963, -70.79913330, -65.82142639, -69.16690826, -69.77214813,
         -69.41471100, -69.14160156, -72.50074005, -65.64284515, -70.42536163]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-65.31011963, -70.79913330, -65.82143402, -69.16690826, -69.77214813,
          -69.41471100, -69.14160156, -72.50074005, -65.64284515, -70.42537689],
         [-65.31011963, -70.79913330, -65.82143402, -69.16690826, -69.77214813,
          -69.41471100, -69.14160156, -72.50074005, -65.64284515, -70.42537689]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.51131439, -0.17858887]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-9.88888860e-01, -8.93650770e-01, -7.66666651e-01,  ...,
            -5.12698412e-01, -2.26984024e-01,  1.36031771e+00],
           [-9.73015904e-01, -9.09523785e-01, -8.14285696e-01,  ...,
            -5.76190472e-01, -4.33333218e-01,  1.53968334e-01],
           [-8.77777755e-01, -8.61904740e-01, -7.82539666e-01,  ...,
            -5.12698412e-01, -4.49206233e-01, -6.82538673e-02],
           ...,
           [-1.27460313e+00, -1.16349196e+00, -1.09999990e+00,  ...,
            -1.14761901e+00, -9.73015904e-01, -8.41268823e-02],
           [-9.73015904e-01, -9.25396800e-01, -8.93650770e-01,  ...,
            -9.25396800e-01, -7.66666651e-01, -6.82538673e-02],
           [ 8.84127021e-01, -1.31745934e-01, -1.95237994e-01,  ...,
            -2.26984024e-01, -2.11111009e-01,  1.53968334e-01]],

          [[ 1.93236828e-01,  3.54267418e-01,  4.34782714e-01,  ...,
             6.60225511e-01,  6.44122481e-01,  1.57810009e+00],
           [ 3.22061300e-01,  4.34782714e-01,  4.83091891e-01,  ...,
             6.76328599e-01,  5.79710245e-01,  4.66988832e-01],
           [ 3.38164359e-01,  4.18679655e-01,  4.50885773e-01,  ...,
             6.44122481e-01,  5.31401038e-01,  2.25442946e-01],
           ...,
           [ 1.22934580e-07,  1.12721533e-01,  1.28824592e-01,  ...,
             2.41546005e-01,  1.12721533e-01,  1.44927651e-01],
           [ 3.22062373e-02, -1.61029361e-02,  1.61031820e-02,  ...,
             1.28824592e-01,  1.61031820e-02,  1.12721533e-01],
           [ 1.30434811e+00,  1.12721533e-01,  9.66184735e-02,  ...,
             1.44927651e-01,  9.66184735e-02,  1.44927651e-01]],

          [[ 1.11094475e+00,  1.24587750e+00,  1.23088503e+00,  ...,
             1.47076499e+00,  1.33583248e+00,  1.84557760e+00],
           [ 1.23088503e+00,  1.32084000e+00,  1.29085493e+00,  ...,
             1.54572761e+00,  1.45577252e+00,  1.00599718e+00],
           [ 1.15592217e+00,  1.21589243e+00,  1.17091501e+00,  ...,
             1.47076499e+00,  1.41079497e+00,  8.11094642e-01],
           ...,
           [ 7.81109631e-01,  1.06596720e+00,  1.06596720e+00,  ...,
             1.06596720e+00,  9.46027160e-01,  8.26087117e-01],
           [ 6.91154599e-01,  8.56072128e-01,  8.56072128e-01,  ...,
             8.86057138e-01,  7.81109631e-01,  7.81109631e-01],
           [ 1.59070504e+00,  7.81109631e-01,  7.06147075e-01,  ...,
             7.21139610e-01,  6.61169589e-01,  7.06147075e-01]]],


         [[[-9.88888860e-01, -8.93650770e-01, -7.66666651e-01,  ...,
            -5.12698412e-01, -2.26984024e-01,  1.36031771e+00],
           [-9.73015904e-01, -9.09523785e-01, -8.14285696e-01,  ...,
            -5.76190472e-01, -4.33333218e-01,  1.53968334e-01],
           [-8.77777755e-01, -8.61904740e-01, -7.82539666e-01,  ...,
            -5.12698412e-01, -4.49206233e-01, -6.82538673e-02],
           ...,
           [-1.27460313e+00, -1.16349196e+00, -1.09999990e+00,  ...,
            -1.14761901e+00, -9.73015904e-01, -8.41268823e-02],
           [-9.73015904e-01, -9.25396800e-01, -8.93650770e-01,  ...,
            -9.25396800e-01, -7.66666651e-01, -6.82538673e-02],
           [ 8.84127021e-01, -1.31745934e-01, -1.95237994e-01,  ...,
            -2.26984024e-01, -2.11111009e-01,  1.53968334e-01]],

          [[ 1.93236828e-01,  3.54267418e-01,  4.34782714e-01,  ...,
             6.60225511e-01,  6.44122481e-01,  1.57810009e+00],
           [ 3.22061300e-01,  4.34782714e-01,  4.83091891e-01,  ...,
             6.76328599e-01,  5.79710245e-01,  4.66988832e-01],
           [ 3.38164359e-01,  4.18679655e-01,  4.50885773e-01,  ...,
             6.44122481e-01,  5.31401038e-01,  2.25442946e-01],
           ...,
           [ 1.22934580e-07,  1.12721533e-01,  1.28824592e-01,  ...,
             2.41546005e-01,  1.12721533e-01,  1.44927651e-01],
           [ 3.22062373e-02, -1.61029361e-02,  1.61031820e-02,  ...,
             1.28824592e-01,  1.61031820e-02,  1.12721533e-01],
           [ 1.30434811e+00,  1.12721533e-01,  9.66184735e-02,  ...,
             1.44927651e-01,  9.66184735e-02,  1.44927651e-01]],

          [[ 1.11094475e+00,  1.24587750e+00,  1.23088503e+00,  ...,
             1.47076499e+00,  1.33583248e+00,  1.84557760e+00],
           [ 1.23088503e+00,  1.32084000e+00,  1.29085493e+00,  ...,
             1.54572761e+00,  1.45577252e+00,  1.00599718e+00],
           [ 1.15592217e+00,  1.21589243e+00,  1.17091501e+00,  ...,
             1.47076499e+00,  1.41079497e+00,  8.11094642e-01],
           ...,
           [ 7.81109631e-01,  1.06596720e+00,  1.06596720e+00,  ...,
             1.06596720e+00,  9.46027160e-01,  8.26087117e-01],
           [ 6.91154599e-01,  8.56072128e-01,  8.56072128e-01,  ...,
             8.86057138e-01,  7.81109631e-01,  7.81109631e-01],
           [ 1.59070504e+00,  7.81109631e-01,  7.06147075e-01,  ...,
             7.21139610e-01,  6.61169589e-01,  7.06147075e-01]]]]],
       device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0536 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 95, vnnlib ID: 95 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-43.13674164, -41.65016174, -43.47764206, -43.35157394, -43.69926834,
         -43.12554169, -43.15471268, -45.77563095, -44.56752396, -44.63112640]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1206]; unstable size 1206; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 85, 1, 1206] with unstable size 84 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 35, 1, 1206] with unstable size 34 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1206] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [573]; unstable size 573; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 35, 1, 573] with unstable size 34 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 573] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [34]; unstable size 34; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 34] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.30576611, -0.34400010, -0.05298042, -0.18811536, -0.33676624,
         -0.67952442,  1.76640654,  1.44419479,  1.76872420]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-43.13674164, -41.65016174, -43.47764206, -43.35157394, -43.69926834,
         -43.12554169, -43.15471268, -45.77563095, -44.56752396, -44.63112640]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  6.74it/s]100%|██████████| 1/1 [00:00<00:00,  6.73it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-43.90104294, -42.84260178, -44.13679123, -44.01449585, -44.39517212,
          -43.78121948, -43.57873917, -46.56137848, -45.33133316, -45.61675262],
         [-43.90104294, -42.84260178, -44.13679123, -44.01449585, -44.39517212,
          -43.78121948, -43.57873917, -46.56137848, -45.33133316, -45.61675262]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.05844116, 1.29418945, 1.17189407, 1.55257034, 0.93861771,
          0.73613739]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1520 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 4.008353233337402
alpha/beta optimization time: 1.4554693698883057
initial alpha-crown bounds: tensor([[-0.17642689, -0.22869706,  0.05145860, -0.05243778, -0.23268437,
         -0.57539797,  1.88312721,  1.52684116,  1.81257010]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 5 ; Worst class: (+ rhs) -0.5753979682922363
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.352370262146
Verifying property 0 with 1 instances.
##### Instance 95 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.17642689]], device='cuda:0') need to verify.
Model prediction is: tensor([-43.13674164, -41.65016174, -43.47764206, -43.35157394, -43.69926834,
        -43.12554169, -43.15471268, -45.77563095, -44.56752396, -44.63112640],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.17642689]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1206
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 562
Node /39 input 0: size torch.Size([250]) unstable 34
-----------------
# of unstable neurons: 1802
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00010919570922851562
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17640328407287598
10 lb beta sum: 0.0, worst -0.17640769481658936
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0746    transfer 0.0001    finalize 0.0002    func 0.0751    
Accumulated time: func 0.0751    prepare 0.0002    bound 0.0746    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 16] 
split level 1: [/input-16, 129] 
split level 2: [/input-16, 134] 
split level 3: [/input-16, 18] 
split level 4: [/input-16, 186] 
split level 5: [/input-16, 31] 
split level 6: [/input-16, 138] 
split level 7: [/input-16, 58] 
split level 8: [/input-16, 170] 
split level 9: [/input-16, 10] 
split level 10: [/input-16, 73] 
split level 11: [/input-16, 248] 
split level 12: [/input-12, 819] 
split level 13: [/input-16, 227] 
split level 14: [/input-12, 3126] 
split level 15: [/input-16, 8] 
split level 16: [/input-16, 215] 
split level 17: [/input-16, 72] 
split level 18: [/input-12, 6829] 
split level 19: [/input-12, 811] 
split level 20: [/input-12, 3818] 
split level 21: [/input-12, 3476] 
split level 22: [/input-12, 4139] 
split level 23: [/input-12, 2931] 
split level 24: [/input-16, 7] 
split level 25: [/input-12, 7789] 
split level 26: [/input-12, 2784] 
split level 27: [/input-12, 803] 
split level 28: [/input-12, 1261] 
split level 29: [/input-12, 3826] 
split level 30: [/input-12, 6052] 
split level 31: [/input-12, 1970] 
split level 32: [/input-16, 157] 
split level 33: [/input-12, 8098] 
split level 34: [/input-12, 6051] 
split level 35: [/input-12, 5556] 
split level 36: [/input-12, 5895] 
split level 37: [/input-12, 1597] 
split level 38: [/input-12, 2033] 
split level 39: [/input-12, 2905] 
split level 40: [/input-12, 2550] 
split level 41: [/input-12, 1774] 
split level 42: [/input-12, 2914] 
split level 43: [/input-12, 7213] 
split level 44: [/input-12, 6987] 
split level 45: [/input-12, 6261] 
split level 46: [/input-12, 8037] 
split level 47: [/input-12, 1766] 
split level 48: [/input-12, 7461] 
split level 49: [/input-12, 851] 
split level 50: [/input-12, 5332] 
split level 51: [/input-12, 5909] 
split level 52: [/input-12, 7981] 
split level 53: [/input-12, 6823] 
split level 54: [/input-12, 7833] 
split level 55: [/input-12, 537] 
split level 56: [/input-12, 7122] 
split level 57: [/input-12, 2889] 
split level 58: [/input-12, 7210] 
split level 59: [/input-12, 3462] 
split level 60: [/input-12, 7842] 
split level 61: [/input-12, 5331] 
split level 62: [/input-12, 7209] 
split level 63: [/input-12, 2542] 
split level 64: [/input-12, 2854] 
split level 65: [/input-4, 1704] 
split level 66: [/input-12, 1759] 
split level 67: [/input-12, 3445] 
split level 68: [/input-4, 1484] 
split level 69: [/input-12, 6771] 
split level 70: [/input-12, 4745] 
split level 71: [/input-12, 1065] 
split level 72: [/input-12, 7972] 
split level 73: [/input-12, 1845] 
split level 74: [/input-12, 1772] 
split level 75: [/input-4, 4022] 
split level 76: [/input-12, 4154] 
split level 77: [/input-12, 2434] 
split level 78: [/input-12, 1260] 
split level 79: [/input-4, 5250] 
split level 80: [/input-4, 1637] 
split level 81: [/input-12, 364] 
split level 82: [/input-12, 5521] 
split level 83: [/input-4, 1674] 
split level 84: [/input-12, 73] 
split level 85: [/input-12, 5801] 
split level 86: [/input-4, 5083] 
split level 87: [/input-4, 8167] 
split level 88: [/input-12, 3350] 
split level 89: [/input-12, 78] 
split level 90: [/input-12, 2025] 
split level 91: [/input-12, 7440] 
split level 92: [/input-4, 3987] 
split level 93: [/input-12, 1586] 
split level 94: [/input-4, 5813] 
split level 95: [/input-12, 3509] 
split level 96: [/input-4, 438] 
split level 97: [/input-12, 7860] 
split level 98: [/input-4, 1720] 
split level 99: [/input-12, 5512] 
split level 100: [/input-4, 3800] 
split level 101: [/input-16, 115] 
split level 102: [/input-4, 5001] 
split level 103: [/input-4, 5032] 
split level 104: [/input-12, 2029] 
split level 105: [/input-4, 5749] 
split level 106: [/input-12, 1748] 
split level 107: [/input-12, 6495] 
split level 108: [/input-12, 5894] 
split level 109: [/input-12, 1456] 
split level 110: [/input-12, 1996] 
split level 111: [/input-12, 7825] 
split level 112: [/input-4, 905] 
split level 113: [/input-12, 4401] 
split level 114: [/input-4, 3805] 
split level 115: [/input-4, 4964] 
split level 116: [/input-4, 5080] 
split level 117: [/input-4, 5812] 
split level 118: [/input-4, 8065] 
split level 119: [/input-12, 1227] 
split level 120: [/input-12, 3949] 
split level 121: [/input-12, 2590] 
split level 122: [/input-12, 1454] 
split level 123: [/input-12, 3619] 
split level 124: [/input-12, 2476] 
split level 125: [/input-12, 1074] 
split level 126: [/input-4, 8147] 
split level 127: [/input-4, 4518] 
split level 128: [/input-12, 4214] 
split level 129: [/input-12, 1057] 
split level 130: [/input-4, 3303] 
split level 131: [/input-12, 2642] 
split level 132: [/input-12, 5520] 
split level 133: [/input-4, 3277] 
split level 134: [/input-4, 7457] 
split level 135: [/input-12, 7645] 
split level 136: [/input-12, 4369] 
split level 137: [/input-4, 3802] 
split level 138: [/input-12, 2484] 
split level 139: [/input-4, 2772] 
split level 140: [/input-12, 1994] 
split level 141: [/input-12, 7593] 
split level 142: [/input-12, 7599] 
split level 143: [/input-12, 4593] 
split level 144: [/input-12, 2185] 
split level 145: [/input-12, 2549] 
split level 146: [/input-12, 7587] 
split level 147: [/input-4, 4839] 
split level 148: [/input-12, 7642] 
split level 149: [/input-4, 7845] 
split level 150: [/input-12, 5823] 
split level 151: [/input-4, 5750] 
split level 152: [/input-4, 5094] 
split level 153: [/input-4, 5096] 
split level 154: [/input-4, 5515] 
split level 155: [/input-4, 1719] 
split level 156: [/input-4, 1767] 
split level 157: [/input-4, 3304] 
split level 158: [/input-12, 462] 
split level 159: [/input-4, 8151] 
split level 160: [/input-4, 5764] 
split level 161: [/input-12, 446] 
split level 162: [/input-4, 3293] 
split level 163: [/input-12, 2340] 
split level 164: [/input-12, 7839] 
split level 165: [/input-4, 3005] 
split level 166: [/input-4, 4549] 
split level 167: [/input-4, 616] 
split level 168: [/input-12, 791] 
split level 169: [/input-4, 4564] 
split level 170: [/input-12, 4564] 
split level 171: [/input-4, 4841] 
split level 172: [/input-12, 8051] 
split level 173: [/input-4, 4534] 
split level 174: [/input-12, 396] 
split level 175: [/input-4, 4517] 
split level 176: [/input-4, 1178] 
split level 177: [/input-4, 4579] 
split level 178: [/input-4, 5778] 
split level 179: [/input-4, 3819] 
split level 180: [/input-4, 6837] 
split level 181: [/input-4, 5860] 
split level 182: [/input-4, 6331] 
split level 183: [/input-12, 864] 
split level 184: [/input-12, 6268] 
split level 185: [/input-12, 6795] 
split level 186: [/input-12, 5504] 
split level 187: [/input-12, 4598] 
split level 188: [/input-4, 6581] 
split level 189: [/input-12, 5692] 
split level 190: [/input-4, 7779] 
split level 191: [/input-4, 8097] 
split level 192: [/input-4, 1438] 
split level 193: [/input-12, 7491] 
split level 194: [/input-4, 227] 
split level 195: [/input-4, 5598] 
split level 196: [/input-4, 3305] 
split level 197: [/input-12, 2636] 
split level 198: [/input-4, 7891] 
split level 199: [/input-4, 7905] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17615604400634766
10 lb beta sum: 0.0, worst -0.17615318298339844
Time: prepare 0.0116    bound 0.1314    transfer 0.0049    finalize 0.0073    func 0.1579    
Accumulated time: func 0.2330    prepare 0.0217    bound 0.2060    transfer 0.0050    finalize 0.0076    
all_split False
======================Cut inference begins======================
max lb tensor(0.32219076) min lb tensor(-0.17614973)
Number of Verified Splits: 9 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.010764837265014648 
BICCOS Cumulative time: 0.010764837265014648
Preprocessing time: 0.009971141815185547 Inference time: 0.00037789344787597656 Add cuts time: 0.0001342296600341797 Cut analysis time: 0.0002815723419189453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15799 (1), -0.15793 (1), -0.15757 (1), -0.15654 (1), -0.15651 (1), -0.15611 (1), -0.15592 (1), -0.15573 (1), -0.15548 (1), -0.15500 (1), -0.15465 (1), -0.15428 (1), -0.15427 (1), -0.15371 (1), -0.15350 (1), -0.15332 (1), -0.15274 (1), -0.15247 (1), -0.15208 (1), -0.15196 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7798    set_bounds 0.0088    solve 0.1579    add 0.0861    
Accumulated time: pickout 0.0003    decision 0.7798    set_bounds 0.0088    solve 0.1579    add 0.0861    
Current (lb-rhs): -0.15798592567443848
50 domains visited
Cumulative time: 1.1263809204101562

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 16] [/input-16, 16] [/input-16, 16] [/input-16, 16] [/input-16, 16] [/input-16, 16] [/input-16, 16] [/input-16, 129] [/input-16, 16] [/input-16, 16] 
split level 1: [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] 
split level 2: [/input-16, 186] [/input-16, 18] [/input-16, 186] [/input-16, 18] [/input-16, 186] [/input-16, 18] [/input-16, 18] [/input-16, 186] [/input-16, 186] [/input-16, 186] 
split level 3: [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 186] [/input-16, 186] [/input-16, 138] [/input-16, 138] [/input-16, 138] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1236339807510376
10 lb beta sum: 1.156162142753601, worst -0.010599017143249512

all verified at 13th iter
Time: prepare 0.0070    bound 0.1061    transfer 0.0043    finalize 0.0065    func 0.1265    
Accumulated time: func 0.3595    prepare 0.0290    bound 0.3121    transfer 0.0093    finalize 0.0141    
all_split False
======================Cut inference begins======================
max lb tensor(0.45584702) min lb tensor(0.00020957)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.03527975082397461 
BICCOS Cumulative time: 0.04604458808898926
Preprocessing time: 0.012006282806396484 Inference time: 0.015556573867797852 Add cuts time: 0.007535696029663086 Cut analysis time: 0.0001811981201171875
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0008    decision 0.0252    set_bounds 0.0127    solve 0.1266    add 0.0153    
Accumulated time: pickout 0.0011    decision 0.8050    set_bounds 0.0215    solve 0.2845    add 0.1014    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([186,  16]), tensor([-1., -1.]), tensor([0, 0]), tensor([2.89531200e+07, 7.34235495e-02]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([186,  16]), tensor([-1.,  1.]), tensor([0, 0]), tensor([2.89531200e+07, 4.57571447e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([186,  16]), tensor([ 1., -1.]), tensor([0, 0]), tensor([2.89531200e+07, 1.86274216e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([186,  16]), tensor([1., 1.]), tensor([0, 0]), tensor([2.89531200e+07, 4.67929304e-01]), tensor([0, 1]))}
Shallow branching resets to n domains:  4
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0005741119384765625

all verified at 1th iter
Time: prepare 0.0003    bound 0.0132    transfer 0.0002    finalize 0.0003    func 0.0141    
Accumulated time: func 0.3736    prepare 0.0293    bound 0.3253    transfer 0.0094    finalize 0.0144    
After pruning, left:  0

Back to Regular BaB


Properties batch 1, size 1
Remaining timeout: 196.76109862327576
Verifying property 1 with 1 instances.
##### Instance 95 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.22869706]], device='cuda:0') need to verify.
Model prediction is: tensor([-43.13674164, -41.65016174, -43.47764206, -43.35157394, -43.69926834,
        -43.12554169, -43.15471268, -45.77563095, -44.56752396, -44.63112640],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.22869706]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1206
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 562
Node /39 input 0: size torch.Size([250]) unstable 34
-----------------
# of unstable neurons: 1802
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 9.632110595703125e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.228668212890625
10 lb beta sum: 0.0, worst -0.22867441177368164
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0743    transfer 0.0001    finalize 0.0002    func 0.0749    
Accumulated time: func 0.0749    prepare 0.0002    bound 0.0743    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 171] 
split level 1: [/input-16, 227] 
split level 2: [/input-16, 186] 
split level 3: [/input-16, 215] 
split level 4: [/input-16, 72] 
split level 5: [/input-16, 134] 
split level 6: [/input-16, 16] 
split level 7: [/input-16, 115] 
split level 8: [/input-16, 138] 
split level 9: [/input-16, 10] 
split level 10: [/input-16, 170] 
split level 11: [/input-16, 230] 
split level 12: [/input-16, 157] 
split level 13: [/input-16, 8] 
split level 14: [/input-16, 58] 
split level 15: [/input-16, 18] 
split level 16: [/input-16, 31] 
split level 17: [/input-16, 154] 
split level 18: [/input-16, 248] 
split level 19: [/input-12, 3126] 
split level 20: [/input-16, 73] 
split level 21: [/input-12, 819] 
split level 22: [/input-16, 7] 
split level 23: [/input-12, 811] 
split level 24: [/input-16, 140] 
split level 25: [/input-12, 6829] 
split level 26: [/input-12, 5332] 
split level 27: [/input-12, 1970] 
split level 28: [/input-12, 537] 
split level 29: [/input-12, 7213] 
split level 30: [/input-12, 6746] 
split level 31: [/input-12, 7461] 
split level 32: [/input-12, 803] 
split level 33: [/input-12, 2042] 
split level 34: [/input-12, 4369] 
split level 35: [/input-12, 2550] 
split level 36: [/input-12, 2033] 
split level 37: [/input-12, 2931] 
split level 38: [/input-12, 355] 
split level 39: [/input-12, 3826] 
split level 40: [/input-12, 1261] 
split level 41: [/input-12, 7789] 
split level 42: [/input-12, 3476] 
split level 43: [/input-12, 364] 
split level 44: [/input-12, 5563] 
split level 45: [/input-12, 1381] 
split level 46: [/input-12, 1774] 
split level 47: [/input-12, 7981] 
split level 48: [/input-4, 1484] 
split level 49: [/input-12, 1766] 
split level 50: [/input-12, 5331] 
split level 51: [/input-12, 7833] 
split level 52: [/input-12, 1260] 
split level 53: [/input-12, 5801] 
split level 54: [/input-12, 7842] 
split level 55: [/input-12, 7210] 
split level 56: [/input-12, 1845] 
split level 57: [/input-12, 7972] 
split level 58: [/input-12, 7209] 
split level 59: [/input-12, 1748] 
split level 60: [/input-4, 5733] 
split level 61: [/input-12, 2029] 
split level 62: [/input-12, 3445] 
split level 63: [/input-12, 6982] 
split level 64: [/input-12, 4386] 
split level 65: [/input-12, 4128] 
split level 66: [/input-12, 8037] 
split level 67: [/input-4, 438] 
split level 68: [/input-4, 8065] 
split level 69: [/input-12, 3619] 
split level 70: [/input-4, 5813] 
split level 71: [/input-12, 5521] 
split level 72: [/input-12, 5234] 
split level 73: [/input-12, 6051] 
split level 74: [/input-12, 5556] 
split level 75: [/input-12, 1057] 
split level 76: [/input-4, 1674] 
split level 77: [/input-12, 3462] 
split level 78: [/input-12, 6981] 
split level 79: [/input-4, 1704] 
split level 80: [/input-4, 8167] 
split level 81: [/input-12, 7122] 
split level 82: [/input-12, 4361] 
split level 83: [/input-4, 1637] 
split level 84: [/input-4, 5749] 
split level 85: [/input-4, 4964] 
split level 86: [/input-4, 5083] 
split level 87: [/input-12, 3350] 
split level 88: [/input-4, 5750] 
split level 89: [/input-12, 8098] 
split level 90: [/input-4, 2771] 
split level 91: [/input-12, 2221] 
split level 92: [/input-4, 7876] 
split level 93: [/input-4, 5812] 
split level 94: [/input-12, 7860] 
split level 95: [/input-12, 1065] 
split level 96: [/input-12, 5370] 
split level 97: [/input-12, 6771] 
split level 98: [/input-4, 2772] 
split level 99: [/input-4, 616] 
split level 100: [/input-12, 1972] 
split level 101: [/input-12, 2542] 
split level 102: [/input-12, 5520] 
split level 103: [/input-12, 1994] 
split level 104: [/input-12, 2642] 
split level 105: [/input-4, 3805] 
split level 106: [/input-4, 7877] 
split level 107: [/input-12, 6495] 
split level 108: [/input-12, 4593] 
split level 109: [/input-12, 791] 
split level 110: [/input-12, 2476] 
split level 111: [/input-4, 8147] 
split level 112: [/input-12, 1586] 
split level 113: [/input-4, 905] 
split level 114: [/input-12, 5682] 
split level 115: [/input-12, 4409] 
split level 116: [/input-12, 5643] 
split level 117: [/input-4, 4839] 
split level 118: [/input-12, 4411] 
split level 119: [/input-4, 1720] 
split level 120: [/input-4, 3276] 
split level 121: [/input-12, 7988] 
split level 122: [/input-4, 5080] 
split level 123: [/input-12, 462] 
split level 124: [/input-12, 2185] 
split level 125: [/input-12, 5257] 
split level 126: [/input-4, 5096] 
split level 127: [/input-4, 5764] 
split level 128: [/input-4, 4564] 
split level 129: [/input-4, 3293] 
split level 130: [/input-4, 8151] 
split level 131: [/input-4, 3277] 
split level 132: [/input-4, 1767] 
split level 133: [/input-12, 5644] 
split level 134: [/input-12, 1597] 
split level 135: [/input-4, 7845] 
split level 136: [/input-4, 2757] 
split level 137: [/input-12, 6764] 
split level 138: [/input-12, 370] 
split level 139: [/input-12, 4598] 
split level 140: [/input-4, 4518] 
split level 141: [/input-4, 1273] 
split level 142: [/input-4, 2785] 
split level 143: [/input-4, 6853] 
split level 144: [/input-4, 5778] 
split level 145: [/input-4, 5860] 
split level 146: [/input-4, 1766] 
split level 147: [/input-12, 2025] 
split level 148: [/input-4, 7892] 
split level 149: [/input-4, 3303] 
split level 150: [/input-12, 8051] 
split level 151: [/input-4, 6837] 
split level 152: [/input-4, 4579] 
split level 153: [/input-4, 5094] 
split level 154: [/input-4, 4437] 
split level 155: [/input-4, 6884] 
split level 156: [/input-12, 8178] 
split level 157: [/input-12, 73] 
split level 158: [/input-4, 5863] 
split level 159: [/input-4, 4549] 
split level 160: [/input-4, 5032] 
split level 161: [/input-12, 4214] 
split level 162: [/input-4, 1438] 
split level 163: [/input-4, 3005] 
split level 164: [/input-4, 4517] 
split level 165: [/input-4, 6883] 
split level 166: [/input-12, 2914] 
split level 167: [/input-12, 7587] 
split level 168: [/input-4, 6819] 
split level 169: [/input-12, 2636] 
split level 170: [/input-12, 5692] 
split level 171: [/input-4, 6627] 
split level 172: [/input-4, 227] 
split level 173: [/input-4, 4841] 
split level 174: [/input-12, 6757] 
split level 175: [/input-4, 7779] 
split level 176: [/input-12, 7642] 
split level 177: [/input-4, 7891] 
split level 178: [/input-12, 5894] 
split level 179: [/input-12, 6795] 
split level 180: [/input-4, 6581] 
split level 181: [/input-4, 5598] 
split level 182: [/input-4, 5864] 
split level 183: [/input-12, 3110] 
split level 184: [/input-4, 8054] 
split level 185: [/input-12, 4389] 
split level 186: [/input-4, 6869] 
split level 187: [/input-4, 6836] 
split level 188: [/input-4, 1719] 
split level 189: [/input-4, 6885] 
split level 190: [/input-4, 3819] 
split level 191: [/input-4, 7900] 
split level 192: [/input-12, 2484] 
split level 193: [/input-4, 7905] 
split level 194: [/input-4, 4534] 
split level 195: [/input-4, 3305] 
split level 196: [/input-12, 2535] 
split level 197: [/input-12, 1227] 
split level 198: [/input-4, 6244] 
split level 199: [/input-12, 3371] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22827768325805664
10 lb beta sum: 0.0, worst -0.22827363014221191
Time: prepare 0.0113    bound 0.1350    transfer 0.0015    finalize 0.0057    func 0.1562    
Accumulated time: func 0.2310    prepare 0.0214    bound 0.2093    transfer 0.0016    finalize 0.0059    
all_split False
======================Cut inference begins======================
max lb tensor(0.32351208) min lb tensor(-0.22827029)
Number of Verified Splits: 10 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 10
#cuts >= 20: 0
BICCOS time: 0.010876178741455078 
BICCOS Cumulative time: 0.010876178741455078
Preprocessing time: 0.009993791580200195 Inference time: 0.0004112720489501953 Add cuts time: 0.00016951560974121094 Cut analysis time: 0.00030159950256347656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21004 (1), -0.20827 (1), -0.20786 (1), -0.20734 (1), -0.20716 (1), -0.20608 (1), -0.20574 (1), -0.20542 (1), -0.20489 (1), -0.20483 (1), -0.20452 (1), -0.20440 (1), -0.20345 (1), -0.20341 (1), -0.20277 (1), -0.20237 (1), -0.20196 (1), -0.20181 (1), -0.20140 (1), -0.19825 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7764    set_bounds 0.0105    solve 0.1563    add 0.0823    
Accumulated time: pickout 0.0003    decision 0.7764    set_bounds 0.0105    solve 0.1563    add 0.0823    
Current (lb-rhs): -0.21004056930541992
50 domains visited
Cumulative time: 1.1322064399719238

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 227] [/input-16, 227] [/input-16, 227] [/input-16, 227] [/input-16, 227] [/input-16, 227] [/input-16, 186] [/input-16, 227] [/input-16, 227] [/input-16, 227] 
split level 1: [/input-16, 72] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 72] [/input-16, 186] [/input-16, 72] [/input-16, 186] [/input-16, 186] [/input-16, 186] 
split level 2: [/input-16, 115] [/input-16, 72] [/input-16, 115] [/input-16, 72] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 72] [/input-16, 72] [/input-16, 72] 
split level 3: [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 115] [/input-16, 138] [/input-16, 115] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1092839241027832
10 lb beta sum: 1.3631724119186401, worst -0.0056493282318115234
Time: prepare 0.0067    bound 0.1528    transfer 0.0015    finalize 0.0074    func 0.1712    
Accumulated time: func 0.4022    prepare 0.0283    bound 0.3621    transfer 0.0032    finalize 0.0134    
all_split False
======================Cut inference begins======================
max lb tensor(0.22965312) min lb tensor(-0.00314069)
Number of Verified Splits: 398 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.03473329544067383 
BICCOS Cumulative time: 0.045609474182128906
Preprocessing time: 0.011752843856811523 Inference time: 0.015662670135498047 Add cuts time: 0.007140159606933594 Cut analysis time: 0.00017762184143066406
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0007    decision 0.0251    set_bounds 0.0133    solve 0.1713    add 0.0152    
Accumulated time: pickout 0.0010    decision 0.8015    set_bounds 0.0238    solve 0.3275    add 0.0975    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([186, 227]), tensor([-1., -1.]), tensor([0, 0]), tensor([-1.26703658e+34,  1.13536403e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([186, 227]), tensor([-1.,  1.]), tensor([0, 0]), tensor([-1.26703658e+34,  2.36901566e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([186, 227]), tensor([ 1., -1.]), tensor([0, 0]), tensor([-1.26703658e+34,  1.18394181e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([186, 227]), tensor([1., 1.]), tensor([0, 0]), tensor([-1.26703658e+34,  2.22029254e-01]), tensor([0, 1]))}
Shallow branching resets to n domains:  4
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.026525020599365234

all verified at 0th iter
Time: prepare 0.0003    bound 0.0060    transfer 0.0001    finalize 0.0003    func 0.0067    
Accumulated time: func 0.4089    prepare 0.0287    bound 0.3681    transfer 0.0033    finalize 0.0136    
After pruning, left:  0

Back to Regular BaB


Properties batch 2, size 1
Remaining timeout: 195.1901297569275
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 195.19005751609802
Verifying property 3 with 1 instances.
##### Instance 95 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.05243778]], device='cuda:0') need to verify.
Model prediction is: tensor([-43.13674164, -41.65016174, -43.47764206, -43.35157394, -43.69926834,
        -43.12554169, -43.15471268, -45.77563095, -44.56752396, -44.63112640],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.05243778]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1206
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 562
Node /39 input 0: size torch.Size([250]) unstable 34
-----------------
# of unstable neurons: 1802
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00010204315185546875
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05241680145263672
10 lb beta sum: 0.0, worst -0.05242109298706055
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0738    transfer 0.0001    finalize 0.0002    func 0.0743    
Accumulated time: func 0.0743    prepare 0.0002    bound 0.0738    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 10] 
split level 1: [/input-16, 230] 
split level 2: [/input-16, 115] 
split level 3: [/input-16, 186] 
split level 4: [/input-16, 16] 
split level 5: [/input-16, 138] 
split level 6: [/input-16, 157] 
split level 7: [/input-16, 72] 
split level 8: [/input-16, 73] 
split level 9: [/input-16, 154] 
split level 10: [/input-16, 248] 
split level 11: [/input-16, 31] 
split level 12: [/input-16, 134] 
split level 13: [/input-16, 7] 
split level 14: [/input-16, 18] 
split level 15: [/input-12, 3126] 
split level 16: [/input-12, 819] 
split level 17: [/input-12, 6829] 
split level 18: [/input-12, 7981] 
split level 19: [/input-12, 5332] 
split level 20: [/input-12, 2931] 
split level 21: [/input-12, 811] 
split level 22: [/input-12, 6261] 
split level 23: [/input-12, 537] 
split level 24: [/input-12, 7972] 
split level 25: [/input-16, 58] 
split level 26: [/input-12, 7213] 
split level 27: [/input-12, 7461] 
split level 28: [/input-12, 5563] 
split level 29: [/input-12, 1845] 
split level 30: [/input-12, 1261] 
split level 31: [/input-4, 1484] 
split level 32: [/input-12, 2029] 
split level 33: [/input-12, 5331] 
split level 34: [/input-12, 2550] 
split level 35: [/input-12, 2042] 
split level 36: [/input-12, 5556] 
split level 37: [/input-12, 355] 
split level 38: [/input-12, 3476] 
split level 39: [/input-12, 6052] 
split level 40: [/input-12, 5801] 
split level 41: [/input-12, 6051] 
split level 42: [/input-12, 7842] 
split level 43: [/input-4, 5733] 
split level 44: [/input-12, 3445] 
split level 45: [/input-12, 2918] 
split level 46: [/input-12, 6259] 
split level 47: [/input-12, 2033] 
split level 48: [/input-12, 364] 
split level 49: [/input-12, 1970] 
split level 50: [/input-12, 6771] 
split level 51: [/input-4, 1637] 
split level 52: [/input-12, 2595] 
split level 53: [/input-12, 1381] 
split level 54: [/input-12, 7209] 
split level 55: [/input-12, 5234] 
split level 56: [/input-4, 5749] 
split level 57: [/input-12, 803] 
split level 58: [/input-12, 7833] 
split level 59: [/input-12, 7210] 
split level 60: [/input-12, 1774] 
split level 61: [/input-4, 1670] 
split level 62: [/input-12, 3547] 
split level 63: [/input-12, 7988] 
split level 64: [/input-12, 4593] 
split level 65: [/input-12, 5814] 
split level 66: [/input-12, 6268] 
split level 67: [/input-4, 5083] 
split level 68: [/input-12, 8037] 
split level 69: [/input-4, 616] 
split level 70: [/input-4, 5813] 
split level 71: [/input-4, 2771] 
split level 72: [/input-4, 8167] 
split level 73: [/input-4, 4964] 
split level 74: [/input-12, 3826] 
split level 75: [/input-4, 5750] 
split level 76: [/input-12, 5370] 
split level 77: [/input-4, 1438] 
split level 78: [/input-4, 2772] 
split level 79: [/input-12, 2531] 
split level 80: [/input-4, 3805] 
split level 81: [/input-12, 1065] 
split level 82: [/input-12, 1586] 
split level 83: [/input-12, 5652] 
split level 84: [/input-12, 1766] 
split level 85: [/input-4, 4839] 
split level 86: [/input-12, 7642] 
split level 87: [/input-4, 7876] 
split level 88: [/input-4, 5250] 
split level 89: [/input-12, 2434] 
split level 90: [/input-12, 5521] 
split level 91: [/input-4, 3276] 
split level 92: [/input-12, 3462] 
split level 93: [/input-12, 5643] 
split level 94: [/input-4, 6378] 
split level 95: [/input-4, 2785] 
split level 96: [/input-12, 3322] 
split level 97: [/input-4, 3277] 
split level 98: [/input-4, 8065] 
split level 99: [/input-4, 5812] 
split level 100: [/input-4, 357] 
split level 101: [/input-12, 3350] 
split level 102: [/input-12, 7860] 
split level 103: [/input-4, 5764] 
split level 104: [/input-12, 6764] 
split level 105: [/input-12, 4598] 
split level 106: [/input-12, 8051] 
split level 107: [/input-4, 8054] 
split level 108: [/input-12, 3619] 
split level 109: [/input-12, 7789] 
split level 110: [/input-12, 4745] 
split level 111: [/input-12, 791] 
split level 112: [/input-12, 6060] 
split level 113: [/input-4, 3789] 
split level 114: [/input-4, 3005] 
split level 115: [/input-4, 5080] 
split level 116: [/input-4, 3293] 
split level 117: [/input-12, 1597] 
split level 118: [/input-4, 4841] 
split level 119: [/input-12, 5644] 
split level 120: [/input-4, 7845] 
split level 121: [/input-4, 7877] 
split level 122: [/input-4, 4823] 
split level 123: [/input-4, 1767] 
split level 124: [/input-4, 7892] 
split level 125: [/input-12, 353] 
split level 126: [/input-12, 5217] 
split level 127: [/input-12, 1057] 
split level 128: [/input-12, 5520] 
split level 129: [/input-4, 6884] 
split level 130: [/input-4, 8147] 
split level 131: [/input-4, 3467] 
split level 132: [/input-4, 5096] 
split level 133: [/input-4, 5863] 
split level 134: [/input-4, 4564] 
split level 135: [/input-4, 5094] 
split level 136: [/input-4, 8151] 
split level 137: [/input-4, 7779] 
split level 138: [/input-12, 2914] 
split level 139: [/input-12, 3110] 
split level 140: [/input-12, 73] 
split level 141: [/input-12, 7340] 
split level 142: [/input-12, 8098] 
split level 143: [/input-4, 5860] 
split level 144: [/input-4, 6819] 
split level 145: [/input-12, 462] 
split level 146: [/input-4, 6883] 
split level 147: [/input-4, 4579] 
split level 148: [/input-4, 2757] 
split level 149: [/input-4, 1404] 
split level 150: [/input-12, 6226] 
split level 151: [/input-12, 2620] 
split level 152: [/input-4, 4437] 
split level 153: [/input-12, 2025] 
split level 154: [/input-4, 5676] 
split level 155: [/input-4, 2786] 
split level 156: [/input-4, 5778] 
split level 157: [/input-4, 7891] 
split level 158: [/input-4, 3021] 
split level 159: [/input-16, 140] 
split level 160: [/input-12, 2636] 
split level 161: [/input-12, 6757] 
split level 162: [/input-12, 2185] 
split level 163: [/input-12, 864] 
split level 164: [/input-4, 6627] 
split level 165: [/input-4, 1386] 
split level 166: [/input-4, 6331] 
split level 167: [/input-4, 7900] 
split level 168: [/input-4, 5598] 
split level 169: [/input-4, 7906] 
split level 170: [/input-4, 1766] 
split level 171: [/input-4, 3304] 
split level 172: [/input-4, 3303] 
split level 173: [/input-12, 5823] 
split level 174: [/input-12, 5682] 
split level 175: [/input-12, 2642] 
split level 176: [/input-4, 7905] 
split level 177: [/input-4, 3819] 
split level 178: [/input-4, 905] 
split level 179: [/input-4, 4549] 
split level 180: [/input-12, 1994] 
split level 181: [/input-4, 5864] 
split level 182: [/input-4, 5032] 
split level 183: [/input-12, 2535] 
split level 184: [/input-4, 6244] 
split level 185: [/input-12, 4214] 
split level 186: [/input-4, 7811] 
split level 187: [/input-4, 2770] 
split level 188: [/input-4, 3305] 
split level 189: [/input-4, 227] 
split level 190: [/input-12, 370] 
split level 191: [/input-4, 6837] 
split level 192: [/input-4, 4517] 
split level 193: [/input-4, 3004] 
split level 194: [/input-12, 7969] 
split level 195: [/input-4, 3042] 
split level 196: [/input-12, 5692] 
split level 197: [/input-4, 6836] 
split level 198: [/input-4, 6885] 
split level 199: [/input-4, 7890] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05194091796875
10 lb beta sum: 0.0, worst -0.0519404411315918
Time: prepare 0.0113    bound 0.1352    transfer 0.0022    finalize 0.0060    func 0.1574    
Accumulated time: func 0.2317    prepare 0.0213    bound 0.2090    transfer 0.0023    finalize 0.0062    
all_split False
======================Cut inference begins======================
max lb tensor(0.45528984) min lb tensor(-0.05193520)
Number of Verified Splits: 23 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.011742353439331055 
BICCOS Cumulative time: 0.011742353439331055
Preprocessing time: 0.010115861892700195 Inference time: 0.0008487701416015625 Add cuts time: 0.0002665519714355469 Cut analysis time: 0.00051116943359375
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.7804    set_bounds 0.0096    solve 0.1574    add 0.0099    
Accumulated time: pickout 0.0003    decision 0.7804    set_bounds 0.0096    solve 0.1574    add 0.0099    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([10]), tensor([-1.]), tensor([0]), tensor([0.00034981]), tensor([0]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([10]), tensor([1.]), tensor([0]), tensor([0.00034981]), tensor([0]))}
Shallow branching resets to n domains:  2
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.012369155883789062

all verified at 0th iter
Time: prepare 0.0003    bound 0.0057    transfer 0.0001    finalize 0.0003    func 0.0064    
Accumulated time: func 0.2381    prepare 0.0216    bound 0.2146    transfer 0.0025    finalize 0.0065    
After pruning, left:  0

Back to Regular BaB


Properties batch 4, size 1
Remaining timeout: 193.95437026023865
Verifying property 4 with 1 instances.
##### Instance 95 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.23268437]], device='cuda:0') need to verify.
Model prediction is: tensor([-43.13674164, -41.65016174, -43.47764206, -43.35157394, -43.69926834,
        -43.12554169, -43.15471268, -45.77563095, -44.56752396, -44.63112640],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.23268437]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1206
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 562
Node /39 input 0: size torch.Size([250]) unstable 34
-----------------
# of unstable neurons: 1802
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00010204315185546875
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2326509952545166
10 lb beta sum: 0.0, worst -0.2326524257659912
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0738    transfer 0.0001    finalize 0.0002    func 0.0744    
Accumulated time: func 0.0744    prepare 0.0002    bound 0.0738    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 248] 
split level 1: [/input-16, 157] 
split level 2: [/input-16, 186] 
split level 3: [/input-16, 18] 
split level 4: [/input-16, 115] 
split level 5: [/input-16, 16] 
split level 6: [/input-16, 154] 
split level 7: [/input-16, 230] 
split level 8: [/input-16, 7] 
split level 9: [/input-16, 72] 
split level 10: [/input-16, 10] 
split level 11: [/input-16, 31] 
split level 12: [/input-12, 3126] 
split level 13: [/input-16, 170] 
split level 14: [/input-12, 819] 
split level 15: [/input-16, 73] 
split level 16: [/input-16, 58] 
split level 17: [/input-12, 811] 
split level 18: [/input-16, 134] 
split level 19: [/input-12, 7981] 
split level 20: [/input-16, 227] 
split level 21: [/input-12, 5332] 
split level 22: [/input-12, 7972] 
split level 23: [/input-12, 7461] 
split level 24: [/input-12, 537] 
split level 25: [/input-12, 1261] 
split level 26: [/input-12, 5909] 
split level 27: [/input-12, 364] 
split level 28: [/input-12, 5895] 
split level 29: [/input-12, 1970] 
split level 30: [/input-12, 6746] 
split level 31: [/input-12, 4369] 
split level 32: [/input-12, 7323] 
split level 33: [/input-12, 5331] 
split level 34: [/input-12, 8098] 
split level 35: [/input-12, 6829] 
split level 36: [/input-16, 140] 
split level 37: [/input-12, 1774] 
split level 38: [/input-12, 2931] 
split level 39: [/input-12, 3476] 
split level 40: [/input-4, 5733] 
split level 41: [/input-12, 5234] 
split level 42: [/input-12, 7842] 
split level 43: [/input-12, 5521] 
split level 44: [/input-12, 355] 
split level 45: [/input-4, 5748] 
split level 46: [/input-12, 6771] 
split level 47: [/input-12, 3462] 
split level 48: [/input-12, 3445] 
split level 49: [/input-12, 5801] 
split level 50: [/input-12, 7833] 
split level 51: [/input-4, 1670] 
split level 52: [/input-12, 1766] 
split level 53: [/input-12, 1381] 
split level 54: [/input-4, 5749] 
split level 55: [/input-12, 803] 
split level 56: [/input-12, 1845] 
split level 57: [/input-12, 7987] 
split level 58: [/input-12, 2033] 
split level 59: [/input-16, 138] 
split level 60: [/input-12, 3826] 
split level 61: [/input-12, 4361] 
split level 62: [/input-12, 1065] 
split level 63: [/input-12, 4401] 
split level 64: [/input-12, 1994] 
split level 65: [/input-12, 2889] 
split level 66: [/input-4, 1704] 
split level 67: [/input-12, 7213] 
split level 68: [/input-12, 1972] 
split level 69: [/input-12, 4128] 
split level 70: [/input-12, 1260] 
split level 71: [/input-12, 7988] 
split level 72: [/input-4, 4964] 
split level 73: [/input-12, 2550] 
split level 74: [/input-12, 7209] 
split level 75: [/input-12, 7789] 
split level 76: [/input-12, 5249] 
split level 77: [/input-12, 8037] 
split level 78: [/input-12, 6051] 
split level 79: [/input-12, 5894] 
split level 80: [/input-12, 7859] 
split level 81: [/input-4, 1484] 
split level 82: [/input-12, 1057] 
split level 83: [/input-4, 5750] 
split level 84: [/input-12, 4101] 
split level 85: [/input-12, 3509] 
split level 86: [/input-12, 7860] 
split level 87: [/input-12, 2642] 
split level 88: [/input-12, 7210] 
split level 89: [/input-4, 5083] 
split level 90: [/input-4, 8167] 
split level 91: [/input-4, 1637] 
split level 92: [/input-4, 5764] 
split level 93: [/input-12, 4593] 
split level 94: [/input-12, 464] 
split level 95: [/input-4, 5813] 
split level 96: [/input-12, 5370] 
split level 97: [/input-12, 6764] 
split level 98: [/input-12, 1074] 
split level 99: [/input-4, 1620] 
split level 100: [/input-4, 2771] 
split level 101: [/input-4, 8065] 
split level 102: [/input-12, 4409] 
split level 103: [/input-4, 5032] 
split level 104: [/input-12, 6495] 
split level 105: [/input-4, 5001] 
split level 106: [/input-12, 8051] 
split level 107: [/input-4, 1674] 
split level 108: [/input-12, 1748] 
split level 109: [/input-12, 6982] 
split level 110: [/input-12, 3110] 
split level 111: [/input-12, 2029] 
split level 112: [/input-4, 5686] 
split level 113: [/input-12, 5520] 
split level 114: [/input-4, 5812] 
split level 115: [/input-4, 4839] 
split level 116: [/input-12, 7642] 
split level 117: [/input-12, 2221] 
split level 118: [/input-12, 1389] 
split level 119: [/input-12, 4214] 
split level 120: [/input-4, 8054] 
split level 121: [/input-12, 5556] 
split level 122: [/input-4, 3805] 
split level 123: [/input-4, 1720] 
split level 124: [/input-4, 7845] 
split level 125: [/input-4, 7779] 
split level 126: [/input-12, 2645] 
split level 127: [/input-4, 905] 
split level 128: [/input-4, 5685] 
split level 129: [/input-12, 4411] 
split level 130: [/input-4, 2772] 
split level 131: [/input-12, 5652] 
split level 132: [/input-4, 616] 
split level 133: [/input-12, 2636] 
split level 134: [/input-4, 3802] 
split level 135: [/input-4, 4438] 
split level 136: [/input-4, 4933] 
split level 137: [/input-12, 5217] 
split level 138: [/input-4, 8147] 
split level 139: [/input-4, 3293] 
split level 140: [/input-12, 1222] 
split level 141: [/input-4, 1438] 
split level 142: [/input-12, 6757] 
split level 143: [/input-4, 1671] 
split level 144: [/input-12, 5823] 
split level 145: [/input-4, 3789] 
split level 146: [/input-12, 462] 
split level 147: [/input-12, 5643] 
split level 148: [/input-12, 6795] 
split level 149: [/input-12, 2185] 
split level 150: [/input-4, 2676] 
split level 151: [/input-4, 4437] 
split level 152: [/input-12, 2025] 
split level 153: [/input-12, 1996] 
split level 154: [/input-4, 5863] 
split level 155: [/input-4, 4518] 
split level 156: [/input-12, 5512] 
split level 157: [/input-4, 3277] 
split level 158: [/input-4, 3467] 
split level 159: [/input-4, 1767] 
split level 160: [/input-4, 5729] 
split level 161: [/input-4, 6244] 
split level 162: [/input-4, 6627] 
split level 163: [/input-4, 5080] 
split level 164: [/input-4, 5094] 
split level 165: [/input-4, 8151] 
split level 166: [/input-4, 6837] 
split level 167: [/input-4, 6819] 
split level 168: [/input-4, 3819] 
split level 169: [/input-4, 5778] 
split level 170: [/input-4, 5511] 
split level 171: [/input-12, 5425] 
split level 172: [/input-4, 1719] 
split level 173: [/input-4, 5864] 
split level 174: [/input-12, 4386] 
split level 175: [/input-12, 864] 
split level 176: [/input-4, 5860] 
split level 177: [/input-4, 4579] 
split level 178: [/input-12, 4198] 
split level 179: [/input-12, 5682] 
split level 180: [/input-4, 1404] 
split level 181: [/input-12, 4598] 
split level 182: [/input-4, 4564] 
split level 183: [/input-4, 1178] 
split level 184: [/input-4, 1386] 
split level 185: [/input-4, 6883] 
split level 186: [/input-4, 227] 
split level 187: [/input-4, 7811] 
split level 188: [/input-4, 7891] 
split level 189: [/input-4, 6331] 
split level 190: [/input-4, 6836] 
split level 191: [/input-4, 7900] 
split level 192: [/input-12, 2620] 
split level 193: [/input-12, 7969] 
split level 194: [/input-4, 4517] 
split level 195: [/input-4, 8001] 
split level 196: [/input-12, 1454] 
split level 197: [/input-12, 1230] 
split level 198: [/input-12, 2535] 
split level 199: [/input-12, 73] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.232222318649292
10 lb beta sum: 0.0, worst -0.2322220802307129
Time: prepare 0.0116    bound 0.1348    transfer 0.0026    finalize 0.0098    func 0.1614    
Accumulated time: func 0.2358    prepare 0.0216    bound 0.2086    transfer 0.0027    finalize 0.0100    
all_split False
======================Cut inference begins======================
max lb tensor(0.32833028) min lb tensor(-0.23221970)
Number of Verified Splits: 7 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 7
#cuts >= 20: 0
BICCOS time: 0.010938644409179688 
BICCOS Cumulative time: 0.010938644409179688
Preprocessing time: 0.009937524795532227 Inference time: 0.0002846717834472656 Add cuts time: 0.00011181831359863281 Cut analysis time: 0.0006046295166015625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21391 (1), -0.21329 (1), -0.21286 (1), -0.21231 (1), -0.21219 (1), -0.21036 (1), -0.20924 (1), -0.20892 (1), -0.20890 (1), -0.20882 (1), -0.20871 (1), -0.20726 (1), -0.20709 (1), -0.20705 (1), -0.20646 (1), -0.20634 (1), -0.20501 (1), -0.20443 (1), -0.20255 (1), -0.20184 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7740    set_bounds 0.0090    solve 0.1615    add 0.0814    
Accumulated time: pickout 0.0003    decision 0.7740    set_bounds 0.0090    solve 0.1615    add 0.0814    
Current (lb-rhs): -0.2139132022857666
50 domains visited
Cumulative time: 1.1186497211456299

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 157] [/input-16, 248] [/input-16, 248] 
split level 1: [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 186] [/input-16, 157] [/input-16, 157] 
split level 2: [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 186] [/input-16, 186] 
split level 3: [/input-16, 115] [/input-16, 230] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 115] [/input-16, 115] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18852663040161133
10 lb beta sum: 1.0577201843261719, worst -0.098641037940979
Time: prepare 0.0069    bound 0.1545    transfer 0.0015    finalize 0.0052    func 0.1708    
Accumulated time: func 0.4066    prepare 0.0288    bound 0.3631    transfer 0.0042    finalize 0.0152    
all_split False
======================Cut inference begins======================
max lb tensor(0.20872235) min lb tensor(-0.09858024)
Number of Verified Splits: 261 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.02817058563232422 
BICCOS Cumulative time: 0.039109230041503906
Preprocessing time: 0.011980533599853516 Inference time: 0.010850667953491211 Add cuts time: 0.005156517028808594 Cut analysis time: 0.00018286705017089844
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0006    decision 0.0252    set_bounds 0.0129    solve 0.1709    add 0.0148    
Accumulated time: pickout 0.0009    decision 0.7991    set_bounds 0.0219    solve 0.3324    add 0.0961    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([186, 248]), tensor([-1., -1.]), tensor([0, 0]), tensor([-1.26703658e+34,  2.64075577e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([186, 248]), tensor([-1.,  1.]), tensor([0, 0]), tensor([-1.26703658e+34,  1.33080706e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([186, 248]), tensor([ 1., -1.]), tensor([0, 0]), tensor([0.00031265, 0.25928646]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([186, 248]), tensor([1., 1.]), tensor([0, 0]), tensor([0.00031265, 0.13494371]), tensor([0, 1]))}
Shallow branching resets to n domains:  4
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07007527351379395

all verified at 2th iter
Time: prepare 0.0003    bound 0.0196    transfer 0.0002    finalize 0.0003    func 0.0205    
Accumulated time: func 0.4271    prepare 0.0291    bound 0.3828    transfer 0.0044    finalize 0.0155    
After pruning, left:  0

Back to Regular BaB


Properties batch 5, size 1
Remaining timeout: 192.41131401062012
Verifying property 5 with 1 instances.
##### Instance 95 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.57539797]], device='cuda:0') need to verify.
Model prediction is: tensor([-43.13674164, -41.65016174, -43.47764206, -43.35157394, -43.69926834,
        -43.12554169, -43.15471268, -45.77563095, -44.56752396, -44.63112640],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.57539797]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1206
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 562
Node /39 input 0: size torch.Size([250]) unstable 34
-----------------
# of unstable neurons: 1802
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00010275840759277344
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5753817558288574
10 lb beta sum: 0.0, worst -0.575387716293335
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0740    transfer 0.0001    finalize 0.0002    func 0.0746    
Accumulated time: func 0.0746    prepare 0.0002    bound 0.0740    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 140] 
split level 1: [/input-16, 186] 
split level 2: [/input-16, 103] 
split level 3: [/input-16, 16] 
split level 4: [/input-16, 115] 
split level 5: [/input-16, 157] 
split level 6: [/input-16, 227] 
split level 7: [/input-16, 248] 
split level 8: [/input-16, 18] 
split level 9: [/input-16, 138] 
split level 10: [/input-16, 10] 
split level 11: [/input-16, 170] 
split level 12: [/input-16, 230] 
split level 13: [/input-16, 72] 
split level 14: [/input-16, 154] 
split level 15: [/input-16, 134] 
split level 16: [/input-16, 7] 
split level 17: [/input-12, 3126] 
split level 18: [/input-12, 819] 
split level 19: [/input-12, 364] 
split level 20: [/input-12, 811] 
split level 21: [/input-12, 355] 
split level 22: [/input-16, 31] 
split level 23: [/input-12, 537] 
split level 24: [/input-12, 7981] 
split level 25: [/input-12, 7461] 
split level 26: [/input-12, 5654] 
split level 27: [/input-12, 2869] 
split level 28: [/input-12, 2029] 
split level 29: [/input-12, 4369] 
split level 30: [/input-4, 1674] 
split level 31: [/input-12, 3826] 
split level 32: [/input-16, 73] 
split level 33: [/input-12, 1774] 
split level 34: [/input-12, 7842] 
split level 35: [/input-4, 1704] 
split level 36: [/input-12, 803] 
split level 37: [/input-12, 370] 
split level 38: [/input-12, 5332] 
split level 39: [/input-12, 499] 
split level 40: [/input-12, 2550] 
split level 41: [/input-4, 1670] 
split level 42: [/input-12, 5331] 
split level 43: [/input-12, 373] 
split level 44: [/input-12, 2033] 
split level 45: [/input-12, 2931] 
split level 46: [/input-12, 1766] 
split level 47: [/input-4, 1637] 
split level 48: [/input-12, 5644] 
split level 49: [/input-12, 5652] 
split level 50: [/input-12, 2185] 
split level 51: [/input-4, 8167] 
split level 52: [/input-12, 7213] 
split level 53: [/input-4, 1620] 
split level 54: [/input-4, 5733] 
split level 55: [/input-12, 1994] 
split level 56: [/input-12, 3350] 
split level 57: [/input-12, 7972] 
split level 58: [/input-4, 438] 
split level 59: [/input-4, 3803] 
split level 60: [/input-12, 1057] 
split level 61: [/input-12, 7642] 
split level 62: [/input-4, 5813] 
split level 63: [/input-12, 1065] 
split level 64: [/input-12, 5370] 
split level 65: [/input-12, 1845] 
split level 66: [/input-4, 5749] 
split level 67: [/input-12, 1748] 
split level 68: [/input-4, 1484] 
split level 69: [/input-4, 3805] 
split level 70: [/input-12, 5682] 
split level 71: [/input-12, 5801] 
split level 72: [/input-12, 6771] 
split level 73: [/input-12, 5643] 
split level 74: [/input-12, 3462] 
split level 75: [/input-4, 616] 
split level 76: [/input-12, 4564] 
split level 77: [/input-12, 1970] 
split level 78: [/input-12, 1772] 
split level 79: [/input-12, 7209] 
split level 80: [/input-4, 4964] 
split level 81: [/input-4, 7779] 
split level 82: [/input-4, 7876] 
split level 83: [/input-12, 2025] 
split level 84: [/input-4, 4518] 
split level 85: [/input-4, 7845] 
split level 86: [/input-12, 2642] 
split level 87: [/input-12, 4361] 
split level 88: [/input-4, 3821] 
split level 89: [/input-12, 2542] 
split level 90: [/input-12, 7988] 
split level 91: [/input-12, 2221] 
split level 92: [/input-4, 7877] 
split level 93: [/input-4, 8065] 
split level 94: [/input-4, 5750] 
split level 95: [/input-4, 5764] 
split level 96: [/input-4, 8151] 
split level 97: [/input-12, 7210] 
split level 98: [/input-4, 1671] 
split level 99: [/input-4, 5032] 
split level 100: [/input-4, 2771] 
split level 101: [/input-4, 4435] 
split level 102: [/input-12, 7340] 
split level 103: [/input-12, 7789] 
split level 104: [/input-4, 6581] 
split level 105: [/input-4, 5515] 
split level 106: [/input-12, 5556] 
split level 107: [/input-4, 5812] 
split level 108: [/input-4, 4549] 
split level 109: [/input-4, 2676] 
split level 110: [/input-4, 3802] 
split level 111: [/input-4, 1676] 
split level 112: [/input-12, 5521] 
split level 113: [/input-4, 6837] 
split level 114: [/input-12, 2645] 
split level 115: [/input-4, 4438] 
split level 116: [/input-4, 4534] 
split level 117: [/input-4, 1720] 
split level 118: [/input-4, 5080] 
split level 119: [/input-12, 791] 
split level 120: [/input-4, 905] 
split level 121: [/input-12, 5657] 
split level 122: [/input-4, 4839] 
split level 123: [/input-4, 4517] 
split level 124: [/input-12, 4422] 
split level 125: [/input-4, 5096] 
split level 126: [/input-4, 3293] 
split level 127: [/input-4, 2772] 
split level 128: [/input-4, 2785] 
split level 129: [/input-4, 1766] 
split level 130: [/input-4, 2757] 
split level 131: [/input-12, 2636] 
split level 132: [/input-4, 2662] 
split level 133: [/input-12, 6987] 
split level 134: [/input-4, 3303] 
split level 135: [/input-4, 2786] 
split level 136: [/input-4, 3277] 
split level 137: [/input-4, 4437] 
split level 138: [/input-4, 3789] 
split level 139: [/input-4, 3005] 
split level 140: [/input-4, 7796] 
split level 141: [/input-4, 7811] 
split level 142: [/input-4, 1767] 
split level 143: [/input-4, 4579] 
split level 144: [/input-4, 3276] 
split level 145: [/input-4, 7906] 
split level 146: [/input-12, 5741] 
split level 147: [/input-4, 3021] 
split level 148: [/input-4, 6819] 
split level 149: [/input-12, 5520] 
split level 150: [/input-12, 6982] 
split level 151: [/input-4, 6853] 
split level 152: [/input-4, 1719] 
split level 153: [/input-12, 2549] 
split level 154: [/input-12, 353] 
split level 155: [/input-4, 1730] 
split level 156: [/input-4, 5596] 
split level 157: [/input-4, 8147] 
split level 158: [/input-12, 7860] 
split level 159: [/input-4, 5863] 
split level 160: [/input-4, 6331] 
split level 161: [/input-4, 4564] 
split level 162: [/input-4, 6836] 
split level 163: [/input-4, 5597] 
split level 164: [/input-4, 3819] 
split level 165: [/input-4, 3179] 
split level 166: [/input-12, 7836] 
split level 167: [/input-12, 5692] 
split level 168: [/input-4, 3042] 
split level 169: [/input-4, 6627] 
split level 170: [/input-4, 4497] 
split level 171: [/input-12, 2535] 
split level 172: [/input-4, 4452] 
split level 173: [/input-4, 5601] 
split level 174: [/input-4, 5598] 
split level 175: [/input-12, 4598] 
split level 176: [/input-4, 7891] 
split level 177: [/input-4, 210] 
split level 178: [/input-4, 8054] 
split level 179: [/input-4, 227] 
split level 180: [/input-4, 2770] 
split level 181: [/input-12, 4214] 
split level 182: [/input-4, 4760] 
split level 183: [/input-4, 5094] 
split level 184: [/input-4, 7800] 
split level 185: [/input-4, 5685] 
split level 186: [/input-4, 5860] 
split level 187: [/input-4, 8097] 
split level 188: [/input-4, 6869] 
split level 189: [/input-4, 7905] 
split level 190: [/input-4, 7828] 
split level 191: [/input-4, 7890] 
split level 192: [/input-4, 5842] 
split level 193: [/input-4, 4546] 
split level 194: [/input-4, 1612] 
split level 195: [/input-4, 5864] 
split level 196: [/input-4, 3004] 
split level 197: [/input-4, 6885] 
split level 198: [/input-4, 3309] 
split level 199: [/input-12, 5894] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5749821662902832
10 lb beta sum: 0.0, worst -0.5749797821044922
Time: prepare 0.0114    bound 0.1346    transfer 0.0017    finalize 0.0054    func 0.1556    
Accumulated time: func 0.2302    prepare 0.0214    bound 0.2086    transfer 0.0018    finalize 0.0056    
all_split False
======================Cut inference begins======================
max lb tensor(-0.05243778) min lb tensor(-0.57497764)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.009944915771484375 
BICCOS Cumulative time: 0.009944915771484375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.55740 (1), -0.55734 (1), -0.55703 (1), -0.55622 (1), -0.55588 (1), -0.55523 (1), -0.55402 (1), -0.55290 (1), -0.55273 (1), -0.55243 (1), -0.55098 (1), -0.55082 (1), -0.54981 (1), -0.54765 (1), -0.54654 (1), -0.54631 (1), -0.54533 (1), -0.54476 (1), -0.54394 (1), -0.54362 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7761    set_bounds 0.0092    solve 0.1557    add 0.0761    
Accumulated time: pickout 0.0003    decision 0.7761    set_bounds 0.0092    solve 0.1557    add 0.0761    
Current (lb-rhs): -0.5573961734771729
50 domains visited
Cumulative time: 1.1092486381530762

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 140] [/input-16, 140] [/input-16, 140] [/input-16, 140] [/input-16, 186] [/input-16, 140] [/input-16, 140] [/input-16, 140] [/input-16, 140] [/input-16, 140] 
split level 1: [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 103] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 103] 
split level 2: [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 115] [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 115] 
split level 3: [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 138] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 138] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5141637325286865
10 lb beta sum: 0.0, worst -0.5138964653015137
Time: prepare 0.0120    bound 0.1307    transfer 0.0023    finalize 0.0050    func 0.1527    
Accumulated time: func 0.3828    prepare 0.0336    bound 0.3393    transfer 0.0041    finalize 0.0107    
all_split False
======================Cut inference begins======================
max lb tensor(0.24139214) min lb tensor(-0.51379824)
Number of Verified Splits: 17 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 7
#cuts >= 20: 0
BICCOS time: 0.013620853424072266 
BICCOS Cumulative time: 0.02356576919555664
Preprocessing time: 0.011676788330078125 Inference time: 0.0007522106170654297 Add cuts time: 0.0003609657287597656 Cut analysis time: 0.0008308887481689453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20991 (2), -0.20931 (2), -0.20635 (2), -0.20533 (2), -0.20420 (2), -0.20279 (2), -0.19944 (2), -0.19918 (2), -0.19822 (2), -0.19700 (2), -0.19533 (2), -0.19349 (2), -0.18905 (2), -0.18803 (2), -0.18652 (2), -0.18320 (2), -0.18236 (2), -0.17854 (2), -0.15906 (2), -0.15762 (2), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0252    set_bounds 0.0136    solve 0.1527    add 0.0882    
Accumulated time: pickout 0.0010    decision 0.8013    set_bounds 0.0227    solve 0.3084    add 0.1644    
Current (lb-rhs): -0.20991301536560059
100 domains visited
Cumulative time: 1.4035284519195557

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 140] [/input-16, 140] [/input-16, 140] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 140] [/input-16, 186] [/input-16, 186] [/input-16, 103] 
split level 1: [/input-16, 103] [/input-16, 186] [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 115] 
split level 2: [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 248] [/input-16, 248] [/input-16, 248] 
split level 3: [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17876172065734863
10 lb beta sum: 0.46005842089653015, worst -0.1464383751153946
Time: prepare 0.0061    bound 0.1541    transfer 0.0017    finalize 0.0054    func 0.1700    
Accumulated time: func 0.5528    prepare 0.0400    bound 0.4934    transfer 0.0058    finalize 0.0161    
all_split False
======================Cut inference begins======================
max lb tensor(0.29909158) min lb tensor(-0.14099741)
Number of Verified Splits: 234 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 13
#cuts >= 20: 0
BICCOS time: 0.027840852737426758 
BICCOS Cumulative time: 0.0514066219329834
Preprocessing time: 0.011609792709350586 Inference time: 0.011396169662475586 Add cuts time: 0.00442194938659668 Cut analysis time: 0.00041294097900390625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06303 (3), -0.06164 (3), -0.06117 (3), -0.06064 (3), -0.06030 (3), -0.05995 (3), -0.05933 (3), -0.05927 (3), -0.05921 (3), -0.05877 (3), -0.05824 (3), -0.05802 (3), -0.05794 (3), -0.05744 (3), -0.05644 (3), -0.05430 (3), -0.05399 (3), -0.05350 (3), -0.05324 (3), -0.05309 (3), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0253    set_bounds 0.0154    solve 0.1701    add 0.1138    
Accumulated time: pickout 0.0016    decision 0.8266    set_bounds 0.0381    solve 0.4784    add 0.2781    
Current (lb-rhs): -0.06302885711193085
150 domains visited
Cumulative time: 1.7567920684814453

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 103] [/input-16, 186] 
split level 1: [/input-16, 227] [/input-16, 227] [/input-16, 227] [/input-16, 227] [/input-16, 227] [/input-16, 227] [/input-16, 227] [/input-16, 227] [/input-16, 115] [/input-16, 115] 
split level 2: [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 227] [/input-16, 248] 
split level 3: [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07247519493103027
10 lb beta sum: 0.7068053483963013, worst -0.17340004444122314
Time: prepare 0.0064    bound 0.1540    transfer 0.0017    finalize 0.0051    func 0.1698    
Accumulated time: func 0.7226    prepare 0.0467    bound 0.6474    transfer 0.0075    finalize 0.0211    
all_split False
======================Cut inference begins======================
max lb tensor(0.33179775) min lb tensor(0.00610042)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 7
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.04011273384094238 
BICCOS Cumulative time: 0.09151935577392578
Preprocessing time: 0.011728048324584961 Inference time: 0.019840478897094727 Add cuts time: 0.008188247680664062 Cut analysis time: 0.0003559589385986328
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0007    decision 0.0254    set_bounds 0.0158    solve 0.1699    add 0.0242    
Accumulated time: pickout 0.0023    decision 0.8520    set_bounds 0.0539    solve 0.6483    add 0.3024    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([140, 103, 138, 186]), tensor([-1., -1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([2.79046400e+06, 1.02633521e-01, 8.50959495e-02, 1.13193296e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([140, 103, 138, 186]), tensor([-1., -1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([2.79046400e+06, 1.02633521e-01, 8.50959495e-02, 1.85656801e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([140, 103, 138, 186]), tensor([-1., -1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([2.79046400e+06, 1.02633521e-01, 1.01666003e-01, 1.10471785e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([140, 103, 138, 186]), tensor([-1., -1.,  1.,  1.]), tensor([0, 0, 0, 0]), tensor([2.79046400e+06, 1.02633521e-01, 1.01666003e-01, 5.49007058e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([140, 103, 138, 186]), tensor([-1.,  1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([2.79046400e+06, 1.09619424e-01, 8.45259130e-02, 1.19818211e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([140, 103, 138, 186]), tensor([-1.,  1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([2.79046400e+06, 1.09619424e-01, 8.45259130e-02, 1.82503670e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([140, 103, 138, 186]), tensor([-1.,  1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([2.79046400e+06, 1.09619424e-01, 1.03260890e-01, 1.16826728e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([140, 103, 138, 186]), tensor([-1.,  1.,  1.,  1.]), tensor([0, 0, 0, 0]), tensor([2.79046400e+06, 1.09619424e-01, 1.03260890e-01, 5.21962196e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([140, 186]), tensor([ 1., -1.]), tensor([0, 0]), tensor([2.79046400e+06, 1.64819524e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([140, 186]), tensor([1., 1.]), tensor([0, 0]), tensor([2.79046400e+06, 8.89640301e-02]), tensor([0, 1]))}
Shallow branching resets to n domains:  10
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3616204261779785
10 lb beta sum: 0.7171127200126648, worst -0.3221513628959656
Time: prepare 0.0005    bound 0.1508    transfer 0.0003    finalize 0.0004    func 0.1521    
Accumulated time: func 0.8747    prepare 0.0472    bound 0.7982    transfer 0.0077    finalize 0.0216    
After pruning, left:  2

Back to Regular BaB

BaB round 1
batch: 2
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 103] [/input-16, 103] 
split level 1: [/input-16, 115] [/input-16, 115] 
split level 2: [/input-16, 138] [/input-16, 138] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2524563074111938, worst -0.1381867527961731
10 lb beta sum: 1.3107712268829346, worst -0.13749319314956665
Time: prepare 0.0009    bound 0.1479    transfer 0.0002    finalize 0.0007    func 0.1499    
Accumulated time: func 1.0246    prepare 0.0482    bound 0.9461    transfer 0.0080    finalize 0.0222    
all_split False
======================Cut inference begins======================
max lb tensor(0.06313072) min lb tensor(-0.13714415)
Number of Verified Splits: 10 of 16
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 1.2656210660934448, worst -0.18264061212539673
10 lb beta sum: 1.373313546180725, worst -0.09740978479385376
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 7
#cuts 4-6: 5
#cuts >= 20: 0
BICCOS time: 0.15511512756347656 
BICCOS Cumulative time: 0.24663448333740234
Preprocessing time: 0.0007252693176269531 Inference time: 0.1535627841949463 Add cuts time: 0.0003859996795654297 Cut analysis time: 0.0004410743713378906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13714 (3), -0.12090 (3), -0.10953 (3), -0.08960 (3), -0.04015 (3), -0.03410 (3), 
Length of domains: 6
Time: pickout 0.0004    decision 0.0132    set_bounds 0.0012    solve 0.1499    add 0.0010    
Accumulated time: pickout 0.0027    decision 0.8652    set_bounds 0.0551    solve 0.7982    add 0.3034    
Current (lb-rhs): -0.13714414834976196
156 domains visited
Cumulative time: 2.682110548019409

BaB round 2
batch: 6
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 227] [/input-16, 227] [/input-16, 227] [/input-16, 227] [/input-16, 227] [/input-16, 227] 
split level 1: [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12808609008789062
10 lb beta sum: 0.8385576009750366, worst -0.08930818736553192
Time: prepare 0.0006    bound 0.1493    transfer 0.0005    finalize 0.0006    func 0.1512    
Accumulated time: func 1.1757    prepare 0.0490    bound 1.0954    transfer 0.0085    finalize 0.0229    
all_split False
======================Cut inference begins======================
max lb tensor(0.26174405) min lb tensor(-0.08912903)
Number of Verified Splits: 18 of 24
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2382829189300537
10 lb beta sum: 1.0851889848709106, worst -0.17691272497177124
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 7
#cuts 4-6: 12
#cuts >= 20: 0
BICCOS time: 0.1609337329864502 
BICCOS Cumulative time: 0.40756821632385254
Preprocessing time: 0.0009853839874267578 Inference time: 0.1582777500152588 Add cuts time: 0.0009417533874511719 Cut analysis time: 0.0007288455963134766
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08913 (5), -0.07457 (5), -0.05902 (5), -0.04012 (5), -0.01551 (5), -0.01011 (5), 
Length of domains: 6
Time: pickout 0.0004    decision 0.0134    set_bounds 0.0015    solve 0.1512    add 0.0010    
Accumulated time: pickout 0.0031    decision 0.8786    set_bounds 0.0566    solve 0.9494    add 0.3044    
Current (lb-rhs): -0.08912903070449829
162 domains visited
Cumulative time: 3.010899305343628

BaB round 3
batch: 6
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 72] [/input-16, 230] [/input-16, 230] [/input-16, 72] [/input-16, 230] [/input-16, 230] 
split level 1: [/input-16, 230] [/input-16, 72] [/input-16, 72] [/input-16, 230] [/input-16, 72] [/input-16, 72] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07545900344848633
10 lb beta sum: 0.7399038076400757, worst -0.03690186142921448
Time: prepare 0.0006    bound 0.1482    transfer 0.0003    finalize 0.0006    func 0.1499    
Accumulated time: func 1.3256    prepare 0.0498    bound 1.2436    transfer 0.0088    finalize 0.0235    
all_split False
======================Cut inference begins======================
max lb tensor(0.04141741) min lb tensor(-0.03677516)
Number of Verified Splits: 18 of 24
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19823598861694336
10 lb beta sum: 1.0954535007476807, worst -0.1207064837217331
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 7
#cuts 4-6: 13
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.1622028350830078 
BICCOS Cumulative time: 0.5697710514068604
Preprocessing time: 0.0009927749633789062 Inference time: 0.15954303741455078 Add cuts time: 0.0008292198181152344 Cut analysis time: 0.0008378028869628906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03678 (7), -0.03413 (7), -0.02139 (7), -0.02073 (7), -0.00565 (7), -0.00284 (7), 
Length of domains: 6
Time: pickout 0.0004    decision 0.0134    set_bounds 0.0015    solve 0.1499    add 0.0011    
Accumulated time: pickout 0.0036    decision 0.8920    set_bounds 0.0581    solve 1.0993    add 0.3055    
Current (lb-rhs): -0.03677515685558319
168 domains visited
Cumulative time: 3.3396222591400146

BaB round 4
batch: 6
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] 
split level 1: [/input-16, 170] [/input-16, 170] [/input-16, 170] [/input-16, 170] [/input-16, 170] [/input-16, 170] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04088449478149414
10 lb beta sum: 0.4932692050933838, worst -0.0025238245725631714
Time: prepare 0.0006    bound 0.1483    transfer 0.0002    finalize 0.0006    func 0.1499    
Accumulated time: func 1.4755    prepare 0.0505    bound 1.3919    transfer 0.0090    finalize 0.0240    
all_split False
======================Cut inference begins======================
max lb tensor(0.19379455) min lb tensor(-0.00246173)
Number of Verified Splits: 23 of 24
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22945666313171387
10 lb beta sum: 1.063742995262146, worst -0.1141480952501297
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 7
#cuts 4-6: 13
#cuts 7-9: 6
#cuts >= 20: 0
BICCOS time: 0.16658782958984375 
BICCOS Cumulative time: 0.7363588809967041
Preprocessing time: 0.000988006591796875 Inference time: 0.1632096767425537 Add cuts time: 0.001276254653930664 Cut analysis time: 0.0011138916015625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00246 (9), 
Length of domains: 1
Time: pickout 0.0004    decision 0.0134    set_bounds 0.0015    solve 0.1499    add 0.0007    
Accumulated time: pickout 0.0040    decision 0.9053    set_bounds 0.0595    solve 1.2492    add 0.3062    
Current (lb-rhs): -0.002461731433868408
169 domains visited
Cumulative time: 3.672304153442383

BaB round 5
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 16] 
split level 1: [/input-16, 18] 
split level 2: [/input-16, 154] 
split level 3: [/input-16, 7] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.030511856079101562

all verified at 0th iter
Time: prepare 0.0005    bound 0.0060    transfer 0.0002    finalize 0.0005    func 0.0072    
Accumulated time: func 1.4827    prepare 0.0512    bound 1.3979    transfer 0.0092    finalize 0.0245    
all_split False
======================Cut inference begins======================
max lb tensor(0.18457985) min lb tensor(0.03051186)
Number of Verified Splits: 16 of 16
No cut inferred: All or none verified.
Total number of valid cuts: 26.
#cuts 1-3: 7
#cuts 4-6: 13
#cuts 7-9: 6
#cuts >= 20: 0
BICCOS time: 0.0007882118225097656 
BICCOS Cumulative time: 0.7371470928192139
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0168    set_bounds 0.0013    solve 0.0073    add 0.0000    
Accumulated time: pickout 0.0044    decision 0.9221    set_bounds 0.0609    solve 1.2565    add 0.3063    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
169 domains visited
Cumulative time: 3.6990489959716797


Properties batch 6, size 1
Remaining timeout: 188.55499601364136
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 188.55491733551025
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 188.55489230155945
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 11.4452 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 96, vnnlib ID: 96 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-32.10542679, -36.00106430, -29.05366135, -31.51975250, -29.62254143,
         -31.23254395, -29.20639992, -32.18095779, -35.42340851, -35.43077850]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1155]; unstable size 1155; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 79, 1, 1155] with unstable size 78 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 31, 1, 1155] with unstable size 30 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1155] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [546]; unstable size 546; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 31, 1, 546] with unstable size 30 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 546] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [30]; unstable size 30; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.98122799,  4.62680721, -1.27625299,  1.19775546, -0.77404165,
          0.84422779,  1.21068919,  4.39953756,  4.22668648]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-32.10542679, -36.00106430, -29.05366135, -31.51975250, -29.62254143,
         -31.23254395, -29.20639992, -32.18095779, -35.42340851, -35.43077850]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-32.10542679, -36.00106430, -29.05365753, -31.51975250, -29.62254143,
          -31.23254204, -29.20639801, -32.18095016, -35.42340469, -35.43077850],
         [-32.10542679, -36.00106430, -29.05365753, -31.51975250, -29.62254143,
          -31.23254204, -29.20639801, -32.18095016, -35.42340469, -35.43077850]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.15274048,  0.41614342]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]],


         [[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0473 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 97, vnnlib ID: 97 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-31.26043129, -34.86041260, -28.50840378, -29.91226959, -28.94694138,
         -30.39052582, -29.73165321, -31.06744957, -32.05524826, -34.09683990]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1758]; unstable size 1758; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 80, 1, 1758] with unstable size 79 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 44, 1, 1758] with unstable size 43 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1758] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [726]; unstable size 726; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 44, 1, 726] with unstable size 43 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 726] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [43]; unstable size 43; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 43] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.09046066,  4.22023487,  0.37345028, -0.57486296,  0.82142949,
         -0.08420306,  1.18300128,  1.35981357,  3.07959223]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-31.26043129, -34.86041260, -28.50840378, -29.91226959, -28.94694138,
         -30.39052582, -29.73165321, -31.06744957, -32.05524826, -34.09683990]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.03it/s]100%|██████████| 1/1 [00:00<00:00,  8.02it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-30.91589355, -34.42177963, -28.22304153, -29.52758980, -28.41012573,
          -30.00357056, -29.32695389, -30.66612434, -31.65113258, -33.65831757],
         [-30.91589355, -34.42177963, -28.22304153, -29.52758980, -28.41012573,
          -30.00357056, -29.32695389, -30.66612434, -31.65113258, -33.65831757]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.18708420, 1.10391235]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1275 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 12.963838577270508
alpha/beta optimization time: 1.45945143699646
initial alpha-crown bounds: tensor([[ 1.27105618e+00,  4.47317743e+00,  4.48950291e-01, -3.92429650e-01,
          8.99473667e-01, -3.60786915e-04,  1.32482409e+00,  1.61705184e+00,
          3.32209539e+00]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.3924296498298645
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.37316370010376
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.37312650680542
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.37309980392456
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.3730776309967
Verifying property 3 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.39242965]], device='cuda:0') need to verify.
Model prediction is: tensor([-31.26043129, -34.86041260, -28.50840378, -29.91226959, -28.94694138,
        -30.39052582, -29.73165321, -31.06744957, -32.05524826, -34.09683990],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.39242965]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1758
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 710
Node /39 input 0: size torch.Size([250]) unstable 42
-----------------
# of unstable neurons: 2510
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.0001049041748046875
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3923848271369934
10 lb beta sum: 0.0, worst -0.392389178276062
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0739    transfer 0.0001    finalize 0.0002    func 0.0744    
Accumulated time: func 0.0744    prepare 0.0002    bound 0.0739    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 10] 
split level 1: [/input-16, 64] 
split level 2: [/input-16, 126] 
split level 3: [/input-16, 230] 
split level 4: [/input-16, 145] 
split level 5: [/input-16, 225] 
split level 6: [/input-16, 73] 
split level 7: [/input-16, 208] 
split level 8: [/input-16, 31] 
split level 9: [/input-16, 248] 
split level 10: [/input-16, 190] 
split level 11: [/input-16, 180] 
split level 12: [/input-16, 129] 
split level 13: [/input-16, 97] 
split level 14: [/input-12, 2596] 
split level 15: [/input-12, 7925] 
split level 16: [/input-12, 6997] 
split level 17: [/input-12, 7924] 
split level 18: [/input-12, 2341] 
split level 19: [/input-12, 857] 
split level 20: [/input-12, 4578] 
split level 21: [/input-12, 4577] 
split level 22: [/input-12, 1570] 
split level 23: [/input-12, 2581] 
split level 24: [/input-12, 4773] 
split level 25: [/input-12, 4570] 
split level 26: [/input-12, 8036] 
split level 27: [/input-12, 2601] 
split level 28: [/input-12, 8035] 
split level 29: [/input-12, 4569] 
split level 30: [/input-12, 4900] 
split level 31: [/input-12, 4898] 
split level 32: [/input-12, 858] 
split level 33: [/input-12, 2582] 
split level 34: [/input-12, 1580] 
split level 35: [/input-12, 2764] 
split level 36: [/input-12, 864] 
split level 37: [/input-12, 5324] 
split level 38: [/input-12, 1346] 
split level 39: [/input-16, 21] 
split level 40: [/input-12, 6476] 
split level 41: [/input-12, 467] 
split level 42: [/input-12, 6475] 
split level 43: [/input-12, 1571] 
split level 44: [/input-12, 2274] 
split level 45: [/input-12, 2270] 
split level 46: [/input-12, 2931] 
split level 47: [/input-12, 468] 
split level 48: [/input-12, 1572] 
split level 49: [/input-12, 2602] 
split level 50: [/input-12, 5332] 
split level 51: [/input-12, 1702] 
split level 52: [/input-12, 4571] 
split level 53: [/input-12, 1196] 
split level 54: [/input-12, 883] 
split level 55: [/input-12, 4896] 
split level 56: [/input-12, 2513] 
split level 57: [/input-12, 1562] 
split level 58: [/input-12, 7317] 
split level 59: [/input-12, 7313] 
split level 60: [/input-12, 2363] 
split level 61: [/input-12, 2573] 
split level 62: [/input-12, 7916] 
split level 63: [/input-12, 7661] 
split level 64: [/input-12, 2522] 
split level 65: [/input-12, 2013] 
split level 66: [/input-12, 94] 
split level 67: [/input-12, 7913] 
split level 68: [/input-16, 51] 
split level 69: [/input-12, 4890] 
split level 70: [/input-12, 4897] 
split level 71: [/input-12, 3289] 
split level 72: [/input-12, 2273] 
split level 73: [/input-12, 2277] 
split level 74: [/input-12, 7171] 
split level 75: [/input-12, 7653] 
split level 76: [/input-12, 466] 
split level 77: [/input-12, 7998] 
split level 78: [/input-12, 2265] 
split level 79: [/input-12, 5525] 
split level 80: [/input-12, 4889] 
split level 81: [/input-12, 7636] 
split level 82: [/input-12, 2421] 
split level 83: [/input-12, 1001] 
split level 84: [/input-12, 2005] 
split level 85: [/input-12, 7874] 
split level 86: [/input-12, 4888] 
split level 87: [/input-12, 2364] 
split level 88: [/input-12, 2604] 
split level 89: [/input-12, 2285] 
split level 90: [/input-12, 2275] 
split level 91: [/input-4, 5066] 
split level 92: [/input-12, 5507] 
split level 93: [/input-12, 5660] 
split level 94: [/input-12, 102] 
split level 95: [/input-12, 6246] 
split level 96: [/input-12, 5549] 
split level 97: [/input-4, 5085] 
split level 98: [/input-12, 2014] 
split level 99: [/input-12, 7592] 
split level 100: [/input-12, 2572] 
split level 101: [/input-12, 5315] 
split level 102: [/input-12, 3288] 
split level 103: [/input-12, 4580] 
split level 104: [/input-12, 4894] 
split level 105: [/input-12, 1204] 
split level 106: [/input-4, 8028] 
split level 107: [/input-4, 5084] 
split level 108: [/input-12, 5659] 
split level 109: [/input-12, 5652] 
split level 110: [/input-12, 4579] 
split level 111: [/input-12, 2276] 
split level 112: [/input-12, 2251] 
split level 113: [/input-12, 2269] 
split level 114: [/input-12, 6898] 
split level 115: [/input-4, 8140] 
split level 116: [/input-12, 5661] 
split level 117: [/input-12, 2015] 
split level 118: [/input-12, 2020] 
split level 119: [/input-4, 494] 
split level 120: [/input-12, 6257] 
split level 121: [/input-4, 5051] 
split level 122: [/input-4, 7961] 
split level 123: [/input-12, 6773] 
split level 124: [/input-12, 2803] 
split level 125: [/input-12, 2514] 
split level 126: [/input-12, 3946] 
split level 127: [/input-12, 5333] 
split level 128: [/input-4, 7147] 
split level 129: [/input-12, 6075] 
split level 130: [/input-12, 2258] 
split level 131: [/input-4, 6580] 
split level 132: [/input-4, 2654] 
split level 133: [/input-12, 2257] 
split level 134: [/input-4, 8027] 
split level 135: [/input-12, 1453] 
split level 136: [/input-4, 8158] 
split level 137: [/input-12, 5769] 
split level 138: [/input-12, 1203] 
split level 139: [/input-12, 6762] 
split level 140: [/input-12, 5363] 
split level 141: [/input-12, 5547] 
split level 142: [/input-12, 5770] 
split level 143: [/input-12, 2333] 
split level 144: [/input-12, 5236] 
split level 145: [/input-12, 5235] 
split level 146: [/input-12, 2571] 
split level 147: [/input-12, 1067] 
split level 148: [/input-4, 7080] 
split level 149: [/input-12, 6770] 
split level 150: [/input-4, 7241] 
split level 151: [/input-4, 460] 
split level 152: [/input-12, 1071] 
split level 153: [/input-4, 4683] 
split level 154: [/input-12, 3294] 
split level 155: [/input-4, 314] 
split level 156: [/input-4, 1105] 
split level 157: [/input-12, 3277] 
split level 158: [/input-4, 5690] 
split level 159: [/input-4, 5688] 
split level 160: [/input-4, 6147] 
split level 161: [/input-4, 1628] 
split level 162: [/input-12, 6772] 
split level 163: [/input-12, 5186] 
split level 164: [/input-4, 7036] 
split level 165: [/input-12, 6485] 
split level 166: [/input-4, 6353] 
split level 167: [/input-12, 1366] 
split level 168: [/input-12, 2530] 
split level 169: [/input-4, 5034] 
split level 170: [/input-12, 3276] 
split level 171: [/input-4, 1595] 
split level 172: [/input-4, 8119] 
split level 173: [/input-4, 6566] 
split level 174: [/input-4, 5047] 
split level 175: [/input-12, 6763] 
split level 176: [/input-12, 3346] 
split level 177: [/input-12, 5651] 
split level 178: [/input-4, 331] 
split level 179: [/input-12, 7875] 
split level 180: [/input-4, 2475] 
split level 181: [/input-4, 2474] 
split level 182: [/input-12, 458] 
split level 183: [/input-4, 1593] 
split level 184: [/input-12, 5555] 
split level 185: [/input-4, 4649] 
split level 186: [/input-12, 4464] 
split level 187: [/input-12, 2561] 
split level 188: [/input-4, 1722] 
split level 189: [/input-4, 1313] 
split level 190: [/input-4, 8102] 
split level 191: [/input-4, 3610] 
split level 192: [/input-4, 4612] 
split level 193: [/input-4, 8125] 
split level 194: [/input-4, 4427] 
split level 195: [/input-4, 7977] 
split level 196: [/input-12, 482] 
split level 197: [/input-4, 2427] 
split level 198: [/input-12, 888] 
split level 199: [/input-4, 4817] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3922693133354187
10 lb beta sum: 0.0, worst -0.3922681510448456
Time: prepare 0.0119    bound 0.1348    transfer 0.0029    finalize 0.0099    func 0.1622    
Accumulated time: func 0.2366    prepare 0.0219    bound 0.2087    transfer 0.0030    finalize 0.0102    
all_split False
======================Cut inference begins======================
max lb tensor(-0.25388062) min lb tensor(-0.39226401)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.010080575942993164 
BICCOS Cumulative time: 0.010080575942993164
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.38481 (1), -0.38464 (1), -0.38460 (1), -0.38448 (1), -0.38428 (1), -0.38424 (1), -0.38320 (1), -0.38316 (1), -0.38298 (1), -0.38287 (1), -0.38276 (1), -0.38273 (1), -0.38262 (1), -0.38254 (1), -0.38190 (1), -0.38186 (1), -0.38178 (1), -0.38173 (1), -0.38161 (1), -0.38155 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7747    set_bounds 0.0095    solve 0.1623    add 0.0780    
Accumulated time: pickout 0.0003    decision 0.7747    set_bounds 0.0095    solve 0.1623    add 0.0780    
Current (lb-rhs): -0.3848097324371338
50 domains visited
Cumulative time: 1.116588830947876

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 10] [/input-16, 10] [/input-16, 126] [/input-16, 10] [/input-16, 64] [/input-16, 10] [/input-16, 10] [/input-16, 64] [/input-16, 10] [/input-16, 10] 
split level 1: [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 126] [/input-16, 10] [/input-16, 126] [/input-16, 64] [/input-16, 10] [/input-16, 126] [/input-16, 64] 
split level 2: [/input-16, 126] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 126] [/input-16, 64] [/input-16, 126] [/input-16, 126] [/input-16, 230] [/input-16, 126] 
split level 3: [/input-16, 230] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 230] [/input-16, 225] [/input-16, 225] [/input-16, 230] [/input-16, 225] [/input-16, 230] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.34820497035980225
10 lb beta sum: 0.0, worst -0.34795600175857544
Time: prepare 0.0120    bound 0.1318    transfer 0.0015    finalize 0.0051    func 0.1530    
Accumulated time: func 0.3896    prepare 0.0342    bound 0.3405    transfer 0.0046    finalize 0.0153    
all_split False
======================Cut inference begins======================
max lb tensor(-0.03832912) min lb tensor(-0.34720504)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.011841773986816406 
BICCOS Cumulative time: 0.02192234992980957
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21910 (2), -0.21908 (2), -0.21894 (2), -0.21830 (2), -0.21671 (2), -0.21334 (2), -0.21041 (2), -0.21035 (2), -0.21004 (2), -0.20702 (2), -0.19909 (2), -0.19868 (2), -0.19698 (2), -0.19689 (2), -0.19612 (2), -0.19595 (2), -0.19583 (2), -0.19571 (2), -0.19552 (2), -0.19550 (2), 
Length of domains: 50
Time: pickout 0.0013    decision 0.0251    set_bounds 0.0135    solve 0.1531    add 0.0834    
Accumulated time: pickout 0.0016    decision 0.7998    set_bounds 0.0230    solve 0.3153    add 0.1613    
Current (lb-rhs): -0.21909546852111816
100 domains visited
Cumulative time: 1.4049608707427979

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 126] [/input-16, 126] [/input-16, 10] [/input-16, 64] [/input-16, 64] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 126] 
split level 1: [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 230] [/input-16, 230] [/input-16, 64] [/input-16, 126] [/input-16, 126] [/input-16, 64] [/input-16, 230] 
split level 2: [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 145] [/input-16, 145] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 126] [/input-16, 225] 
split level 3: [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 145] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20796898007392883
10 lb beta sum: 0.0, worst -0.2162068486213684
Time: prepare 0.0110    bound 0.1305    transfer 0.0015    finalize 0.0056    func 0.1511    
Accumulated time: func 0.5407    prepare 0.0454    bound 0.4709    transfer 0.0061    finalize 0.0209    
all_split False
======================Cut inference begins======================
max lb tensor(0.24017346) min lb tensor(-0.20733178)
Number of Verified Splits: 42 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 1
#cuts 4-6: 10
#cuts >= 20: 0
BICCOS time: 0.014777183532714844 
BICCOS Cumulative time: 0.036699533462524414
Preprocessing time: 0.011677265167236328 Inference time: 0.001984834671020508 Add cuts time: 0.00061798095703125 Cut analysis time: 0.0004971027374267578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03267 (3), -0.03229 (3), -0.03205 (3), -0.03146 (3), -0.03140 (3), -0.02839 (3), -0.02824 (3), -0.02811 (3), -0.02748 (3), -0.02681 (3), -0.02622 (3), -0.02601 (3), -0.02525 (3), -0.02369 (3), -0.02187 (3), -0.02025 (3), -0.01976 (3), -0.01947 (3), -0.01928 (3), -0.01888 (3), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0254    set_bounds 0.0156    solve 0.1512    add 0.0984    
Accumulated time: pickout 0.0026    decision 0.8252    set_bounds 0.0386    solve 0.4665    add 0.2597    
Current (lb-rhs): -0.032673776149749756
150 domains visited
Cumulative time: 1.7114779949188232

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 126] [/input-16, 230] [/input-16, 10] [/input-16, 230] 
split level 1: [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 230] [/input-16, 225] [/input-16, 230] [/input-16, 225] 
split level 2: [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 225] [/input-16, 145] 
split level 3: [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 208] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.020571529865264893
10 lb beta sum: 0.04258196800947189, worst -0.04324731230735779
Time: prepare 0.0059    bound 0.1548    transfer 0.0018    finalize 0.0051    func 0.1703    
Accumulated time: func 0.7110    prepare 0.0515    bound 0.6258    transfer 0.0079    finalize 0.0260    
all_split False
======================Cut inference begins======================
max lb tensor(0.17310172) min lb tensor(-0.00690234)
Number of Verified Splits: 395 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 4
#cuts 4-6: 12
#cuts >= 20: 0
BICCOS time: 0.03849530220031738 
BICCOS Cumulative time: 0.0751948356628418
Preprocessing time: 0.01151585578918457 Inference time: 0.021431684494018555 Add cuts time: 0.004935503005981445 Cut analysis time: 0.0006122589111328125
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0015    decision 0.0257    set_bounds 0.0156    solve 0.1704    add 0.0235    
Accumulated time: pickout 0.0041    decision 0.8509    set_bounds 0.0542    solve 0.6369    add 0.2831    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([126,  10]), tensor([-1., -1.]), tensor([0, 0]), tensor([-1.26703658e+34,  3.76371592e-02]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([126,  10,  64, 230]), tensor([-1.,  1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([-1.26703658e+34,  1.46813050e-01,  1.17827252e-01,  6.92596883e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([126,  10,  64, 230]), tensor([-1.,  1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([-1.26703658e+34,  1.46813050e-01,  1.17827252e-01,  1.04733452e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([126,  10,  64]), tensor([-1.,  1.,  1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  1.46813050e-01,  8.49194378e-02]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([126,  64]), tensor([ 1., -1.]), tensor([0, 0]), tensor([-1.26703658e+34,  1.19865522e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([126,  64]), tensor([1., 1.]), tensor([0, 0]), tensor([-1.26703658e+34,  8.10337812e-02]), tensor([0, 1]))}
Shallow branching resets to n domains:  6
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.27759647369384766
10 lb beta sum: 0.09563994407653809, worst -0.2750537097454071
Time: prepare 0.0004    bound 0.1471    transfer 0.0002    finalize 0.0003    func 0.1480    
Accumulated time: func 0.8590    prepare 0.0519    bound 0.7728    transfer 0.0080    finalize 0.0263    
After pruning, left:  3

Back to Regular BaB

BaB round 1
batch: 3
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 64] [/input-16, 10] [/input-16, 10] 
split level 1: [/input-16, 230] [/input-16, 230] [/input-16, 230] 
split level 2: [/input-16, 225] [/input-16, 225] [/input-16, 225] 
cut re-enabled after branching node selection
0 lb beta sum: 0.028293155133724213, worst -0.14050927758216858
10 lb beta sum: 0.1701124608516693, worst -0.12060549855232239
Time: prepare 0.0012    bound 0.1501    transfer 0.0005    finalize 0.0006    func 0.1526    
Accumulated time: func 1.0117    prepare 0.0533    bound 0.9230    transfer 0.0085    finalize 0.0269    
all_split False
======================Cut inference begins======================
max lb tensor(0.11129336) min lb tensor(-0.12021703)
Number of Verified Splits: 12 of 24
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.033581092953681946, worst -0.12070006132125854
10 lb beta sum: 0.4403762221336365, worst -0.10289698839187622
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 4
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.15802621841430664 
BICCOS Cumulative time: 0.23322105407714844
Preprocessing time: 0.0009152889251708984 Inference time: 0.15590810775756836 Add cuts time: 0.00046634674072265625 Cut analysis time: 0.0007364749908447266
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12022 (3), -0.10151 (3), -0.08565 (3), -0.07104 (3), -0.06050 (3), -0.05377 (3), -0.04929 (3), -0.03491 (3), -0.01146 (3), -0.00470 (3), -0.00330 (3), -0.00094 (3), 
Length of domains: 12
Time: pickout 0.0004    decision 0.0131    set_bounds 0.0016    solve 0.1526    add 0.0011    
Accumulated time: pickout 0.0045    decision 0.8640    set_bounds 0.0558    solve 0.7896    add 0.2843    
Current (lb-rhs): -0.12021702527999878
162 domains visited
Cumulative time: 2.4790780544281006

BaB round 2
batch: 12
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1091163158416748
10 lb beta sum: 0.06685633957386017, worst -0.10871058702468872
Time: prepare 0.0006    bound 0.1483    transfer 0.0002    finalize 0.0006    func 0.1499    
Accumulated time: func 1.1615    prepare 0.0541    bound 1.0712    transfer 0.0088    finalize 0.0275    
all_split False
======================Cut inference begins======================
max lb tensor(0.06947938) min lb tensor(-0.10849589)
Number of Verified Splits: 13 of 24
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2067747861146927
10 lb beta sum: 0.20454099774360657, worst -0.15472017228603363
Total number of valid cuts: 20.
#cuts 1-3: 4
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.1587505340576172 
BICCOS Cumulative time: 0.3919715881347656
Preprocessing time: 0.0009953975677490234 Inference time: 0.15729641914367676 Add cuts time: 0.0004367828369140625 Cut analysis time: 2.193450927734375e-05
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10850 (4), -0.09018 (4), -0.07482 (4), -0.05936 (4), -0.05686 (4), -0.03950 (4), -0.03673 (4), -0.03329 (4), -0.00930 (4), -0.00349 (4), -0.00048 (4), 
Length of domains: 11
Time: pickout 0.0005    decision 0.0137    set_bounds 0.0013    solve 0.1499    add 0.0012    
Accumulated time: pickout 0.0051    decision 0.8777    set_bounds 0.0571    solve 0.9395    add 0.2855    
Current (lb-rhs): -0.10849589109420776
173 domains visited
Cumulative time: 2.8047118186950684

BaB round 3
batch: 11
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 208] 
cut re-enabled after branching node selection
0 lb beta sum: 0.11348555982112885, worst -0.09251964092254639
10 lb beta sum: 0.11348555982112885, worst -0.09227627515792847
Time: prepare 0.0011    bound 0.1484    transfer 0.0003    finalize 0.0008    func 0.1509    
Accumulated time: func 1.3124    prepare 0.0554    bound 1.2197    transfer 0.0091    finalize 0.0283    
all_split False
======================Cut inference begins======================
max lb tensor(0.03901368) min lb tensor(-0.09217080)
Number of Verified Splits: 9 of 22
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.12707607448101044, worst -0.15744605660438538
10 lb beta sum: 0.39268729090690613, worst -0.14262732863426208
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 4
#cuts 4-6: 20
#cuts >= 20: 0
BICCOS time: 0.1588916778564453 
BICCOS Cumulative time: 0.5508632659912109
Preprocessing time: 0.0009353160858154297 Inference time: 0.15610313415527344 Add cuts time: 0.0009694099426269531 Cut analysis time: 0.0008838176727294922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09217 (5), -0.07363 (5), -0.06115 (5), -0.05996 (5), -0.04428 (5), -0.04163 (5), -0.03871 (5), -0.02127 (5), -0.02110 (5), -0.02076 (5), -0.01709 (5), -0.01414 (5), -0.00048 (5), 
Length of domains: 13
Time: pickout 0.0005    decision 0.0138    set_bounds 0.0012    solve 0.1509    add 0.0012    
Accumulated time: pickout 0.0056    decision 0.8915    set_bounds 0.0583    solve 1.0904    add 0.2867    
Current (lb-rhs): -0.09217080473899841
186 domains visited
Cumulative time: 3.131509304046631

BaB round 4
batch: 13
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 31] [/input-16, 248] [/input-16, 31] [/input-16, 31] [/input-16, 248] [/input-16, 31] [/input-16, 248] [/input-16, 31] [/input-16, 248] [/input-16, 31] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08040472865104675
10 lb beta sum: 0.07981318235397339, worst -0.0802360475063324
Time: prepare 0.0006    bound 0.1487    transfer 0.0003    finalize 0.0008    func 0.1506    
Accumulated time: func 1.4630    prepare 0.0562    bound 1.3684    transfer 0.0094    finalize 0.0290    
all_split False
======================Cut inference begins======================
max lb tensor(0.01517457) min lb tensor(-0.08015713)
Number of Verified Splits: 6 of 26
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1069498062133789
10 lb beta sum: 0.30647528171539307, worst -0.06942903995513916
Total number of valid cuts: 24.
#cuts 1-3: 4
#cuts 4-6: 20
#cuts >= 20: 0
BICCOS time: 0.15261554718017578 
BICCOS Cumulative time: 0.7034788131713867
Preprocessing time: 0.0011012554168701172 Inference time: 0.15099525451660156 Add cuts time: 0.0004990100860595703 Cut analysis time: 2.002716064453125e-05
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08016 (6), -0.07620 (6), -0.06191 (6), -0.05600 (6), -0.05081 (6), -0.04813 (6), -0.04581 (6), -0.03472 (6), -0.02958 (6), -0.02584 (6), -0.02043 (6), -0.01972 (6), -0.01524 (6), -0.01088 (6), -0.00950 (6), -0.00780 (6), -0.00454 (6), -0.00349 (6), -0.00250 (6), -0.00007 (6), 
Length of domains: 20
Time: pickout 0.0005    decision 0.0140    set_bounds 0.0014    solve 0.1506    add 0.0017    
Accumulated time: pickout 0.0061    decision 0.9055    set_bounds 0.0597    solve 1.2410    add 0.2884    
Current (lb-rhs): -0.08015713095664978
206 domains visited
Cumulative time: 3.452548027038574

BaB round 5
batch: 20
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] [/input-16, 73] 
cut re-enabled after branching node selection
0 lb beta sum: 0.07887177169322968, worst -0.07500076293945312
10 lb beta sum: 0.07887177169322968, worst -0.07489913702011108
Time: prepare 0.0019    bound 0.1485    transfer 0.0003    finalize 0.0008    func 0.1519    
Accumulated time: func 1.6149    prepare 0.0583    bound 1.5169    transfer 0.0097    finalize 0.0298    
all_split False
======================Cut inference begins======================
max lb tensor(0.25924474) min lb tensor(-0.07484359)
Number of Verified Splits: 21 of 40
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.08581318706274033, worst -0.15761448442935944
10 lb beta sum: 0.2621055841445923, worst -0.15142272412776947
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 4
#cuts 4-6: 24
#cuts >= 20: 0
BICCOS time: 0.16504383087158203 
BICCOS Cumulative time: 0.8685226440429688
Preprocessing time: 0.0014171600341796875 Inference time: 0.16097760200500488 Add cuts time: 0.0015931129455566406 Cut analysis time: 0.0010559558868408203
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07484 (7), -0.07100 (7), -0.05667 (7), -0.05088 (7), -0.04590 (7), -0.04260 (7), -0.04031 (7), -0.03443 (7), -0.02511 (7), -0.02415 (7), -0.01949 (7), -0.01380 (7), -0.00908 (7), -0.00889 (7), -0.00668 (7), -0.00554 (7), -0.00403 (7), -0.00254 (7), -0.00214 (7), 
Length of domains: 19
Time: pickout 0.0005    decision 0.0140    set_bounds 0.0019    solve 0.1519    add 0.0013    
Accumulated time: pickout 0.0066    decision 0.9195    set_bounds 0.0616    solve 1.3929    add 0.2898    
Current (lb-rhs): -0.07484358549118042
225 domains visited
Cumulative time: 3.787581443786621

BaB round 6
batch: 19
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 31] [/input-16, 248] [/input-16, 248] [/input-16, 31] [/input-16, 248] [/input-16, 31] [/input-16, 248] [/input-16, 31] [/input-16, 31] [/input-16, 31] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0630335807800293
10 lb beta sum: 0.0, worst -0.06295138597488403
Time: prepare 0.0008    bound 0.1513    transfer 0.0003    finalize 0.0008    func 0.1535    
Accumulated time: func 1.7683    prepare 0.0593    bound 1.6682    transfer 0.0100    finalize 0.0306    
all_split False
======================Cut inference begins======================
max lb tensor(0.01221681) min lb tensor(-0.06293735)
Number of Verified Splits: 15 of 38
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16540399193763733
10 lb beta sum: 0.2042033076286316, worst -0.15413324534893036
Total number of valid cuts: 28.
#cuts 1-3: 4
#cuts 4-6: 24
#cuts >= 20: 0
BICCOS time: 0.16085004806518555 
BICCOS Cumulative time: 1.0293726921081543
Preprocessing time: 0.001432180404663086 Inference time: 0.15877676010131836 Add cuts time: 0.0006186962127685547 Cut analysis time: 2.2411346435546875e-05
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06294 (8), -0.05988 (8), -0.05896 (8), -0.05616 (8), -0.04508 (8), -0.03966 (8), -0.03902 (8), -0.03458 (8), -0.03318 (8), -0.03152 (8), -0.03089 (8), -0.02864 (8), -0.02289 (8), -0.02195 (8), -0.02075 (8), -0.01900 (8), -0.01276 (8), -0.01145 (8), -0.00776 (8), -0.00693 (8), 
Length of domains: 23
Time: pickout 0.0005    decision 0.0142    set_bounds 0.0018    solve 0.1536    add 0.0015    
Accumulated time: pickout 0.0071    decision 0.9337    set_bounds 0.0635    solve 1.5465    add 0.2912    
Current (lb-rhs): -0.06293734908103943
248 domains visited
Cumulative time: 4.120270252227783

BaB round 7
batch: 23
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 190] [/input-16, 190] [/input-16, 190] [/input-16, 190] [/input-16, 190] [/input-16, 190] [/input-16, 190] [/input-16, 190] [/input-16, 190] [/input-16, 180] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05830204486846924
10 lb beta sum: 0.0, worst -0.05828201770782471
Time: prepare 0.0025    bound 0.1525    transfer 0.0007    finalize 0.0012    func 0.1573    
Accumulated time: func 1.9256    prepare 0.0619    bound 1.8208    transfer 0.0107    finalize 0.0318    
all_split False
======================Cut inference begins======================
max lb tensor(0.03927583) min lb tensor(-0.05827186)
Number of Verified Splits: 16 of 46
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 33.
#cuts 1-3: 9
#cuts 4-6: 24
#cuts >= 20: 0
BICCOS time: 0.005922794342041016 
BICCOS Cumulative time: 1.0352954864501953
Preprocessing time: 0.0017549991607666016 Inference time: 0.001527547836303711 Add cuts time: 0.001440286636352539 Cut analysis time: 0.001199960708618164
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05827 (9), -0.05503 (9), -0.05425 (9), -0.05141 (9), -0.03985 (9), -0.03432 (9), -0.03375 (9), -0.02922 (9), -0.02849 (9), -0.02687 (9), -0.02614 (9), -0.02388 (9), -0.01788 (9), -0.01598 (9), -0.01282 (9), -0.01220 (9), -0.01150 (9), -0.00908 (9), -0.00899 (9), -0.00730 (9), 
Length of domains: 30
Time: pickout 0.0007    decision 0.0143    set_bounds 0.1540    solve 0.1573    add 0.0017    
Accumulated time: pickout 0.0077    decision 0.9480    set_bounds 0.2175    solve 1.7038    add 0.2929    
Current (lb-rhs): -0.0582718551158905
278 domains visited
Cumulative time: 4.454505443572998

BaB round 8
batch: 30
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 190] [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 190] [/input-16, 180] [/input-16, 180] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04793056845664978
10 lb beta sum: 0.04989169165492058, worst -0.04787987470626831
Time: prepare 0.0011    bound 0.1500    transfer 0.0004    finalize 0.0010    func 0.1530    
Accumulated time: func 2.0786    prepare 0.0633    bound 1.9707    transfer 0.0111    finalize 0.0328    
all_split False
======================Cut inference begins======================
max lb tensor(0.36660257) min lb tensor(-0.04786927)
Number of Verified Splits: 32 of 60
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 8
#cuts 4-6: 13
#cuts >= 20: 0
BICCOS time: 0.007002830505371094 
BICCOS Cumulative time: 1.0422983169555664
Preprocessing time: 0.002012014389038086 Inference time: 0.003197193145751953 Add cuts time: 0.001058340072631836 Cut analysis time: 0.0007352828979492188
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04787 (10), -0.04734 (10), -0.04468 (10), -0.04425 (10), -0.04405 (10), -0.04305 (10), -0.04140 (10), -0.03995 (10), -0.02911 (10), -0.02906 (10), -0.02396 (10), -0.02336 (10), -0.02325 (10), -0.02269 (10), -0.01919 (10), -0.01871 (10), -0.01788 (10), -0.01695 (10), -0.01585 (10), -0.01536 (10), 
Length of domains: 28
Time: pickout 0.0007    decision 0.0148    set_bounds 0.0029    solve 0.1530    add 0.0018    
Accumulated time: pickout 0.0084    decision 0.9628    set_bounds 0.2204    solve 1.8568    add 0.2947    
Current (lb-rhs): -0.04786926507949829
306 domains visited
Cumulative time: 4.634998321533203

BaB round 9
batch: 28
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 129] [/input-16, 129] [/input-16, 129] [/input-16, 129] [/input-16, 129] [/input-16, 129] [/input-16, 129] [/input-16, 129] [/input-16, 129] [/input-16, 129] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.040149807929992676
10 lb beta sum: 0.22807756066322327, worst -0.039561301469802856
Time: prepare 0.0011    bound 0.1517    transfer 0.0006    finalize 0.0013    func 0.1550    
Accumulated time: func 2.2336    prepare 0.0645    bound 2.1224    transfer 0.0117    finalize 0.0342    
all_split False
======================Cut inference begins======================
max lb tensor(0.63533574) min lb tensor(-0.03955042)
Number of Verified Splits: 36 of 56
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 9
#cuts 4-6: 13
#cuts >= 20: 0
BICCOS time: 0.007149696350097656 
BICCOS Cumulative time: 1.049448013305664
Preprocessing time: 0.0019404888153076172 Inference time: 0.003618955612182617 Add cuts time: 0.0007243156433105469 Cut analysis time: 0.000865936279296875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03955 (11), -0.03838 (11), -0.03638 (11), -0.03526 (11), -0.03480 (11), -0.03372 (11), -0.03232 (11), -0.02978 (11), -0.02138 (11), -0.01984 (11), -0.01551 (11), -0.01518 (11), -0.01379 (11), -0.01266 (11), -0.01117 (11), -0.00996 (11), -0.00947 (11), -0.00907 (11), -0.00784 (11), -0.00648 (11), 
Length of domains: 20
Time: pickout 0.0006    decision 0.0145    set_bounds 0.0026    solve 0.1550    add 0.0016    
Accumulated time: pickout 0.0090    decision 0.9773    set_bounds 0.2230    solve 2.0119    add 0.2963    
Current (lb-rhs): -0.03955042362213135
326 domains visited
Cumulative time: 4.816873550415039

BaB round 10
batch: 20
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 97] [/input-12, 2596] [/input-16, 97] [/input-16, 97] [/input-12, 2596] [/input-16, 97] [/input-12, 2596] [/input-16, 97] [/input-16, 97] [/input-12, 2596] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03388318419456482
10 lb beta sum: 0.12450335174798965, worst -0.03378945589065552
Time: prepare 0.0010    bound 0.1504    transfer 0.0003    finalize 0.0009    func 0.1528    
Accumulated time: func 2.3864    prepare 0.0657    bound 2.2728    transfer 0.0120    finalize 0.0350    
all_split False
======================Cut inference begins======================
max lb tensor(0.38386619) min lb tensor(-0.03377864)
Number of Verified Splits: 11 of 40
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 10
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.0036733150482177734 
BICCOS Cumulative time: 1.0531213283538818
Preprocessing time: 0.0014469623565673828 Inference time: 0.0011050701141357422 Add cuts time: 0.0005922317504882812 Cut analysis time: 0.0005290508270263672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03378 (12), -0.03243 (12), -0.03236 (12), -0.03159 (12), -0.03071 (12), -0.02945 (12), -0.02893 (12), -0.02882 (12), -0.02832 (12), -0.02769 (12), -0.02757 (12), -0.02709 (12), -0.02650 (12), -0.02508 (12), -0.02363 (12), -0.02311 (12), -0.02010 (12), -0.01853 (12), -0.01385 (12), -0.01133 (12), 
Length of domains: 29
Time: pickout 0.0006    decision 0.0142    set_bounds 0.0017    solve 0.1530    add 0.0015    
Accumulated time: pickout 0.0095    decision 0.9915    set_bounds 0.2247    solve 2.1648    add 0.2978    
Current (lb-rhs): -0.033778637647628784
355 domains visited
Cumulative time: 4.991704940795898

BaB round 11
batch: 29
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7924] [/input-12, 858] [/input-12, 7924] [/input-12, 7924] [/input-16, 97] [/input-12, 2602] [/input-12, 7924] [/input-12, 7924] [/input-12, 858] [/input-12, 7924] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.032633304595947266
10 lb beta sum: 0.24008049070835114, worst -0.03178292512893677
Time: prepare 0.0014    bound 0.1683    transfer 0.0006    finalize 0.0012    func 0.1719    
Accumulated time: func 2.5583    prepare 0.0672    bound 2.4411    transfer 0.0126    finalize 0.0362    
all_split False
======================Cut inference begins======================
max lb tensor(0.34644055) min lb tensor(-0.03176865)
Number of Verified Splits: 21 of 58
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 13
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.005185842514038086 
BICCOS Cumulative time: 1.05830717086792
Preprocessing time: 0.0019462108612060547 Inference time: 0.0021708011627197266 Add cuts time: 0.00043654441833496094 Cut analysis time: 0.0006322860717773438
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03177 (13), -0.03046 (13), -0.03033 (13), -0.02950 (13), -0.02878 (13), -0.02738 (13), -0.02689 (13), -0.02678 (13), -0.02630 (13), -0.02567 (13), -0.02547 (13), -0.02495 (13), -0.02459 (13), -0.02306 (13), -0.02212 (13), -0.02170 (13), -0.02112 (13), -0.02101 (13), -0.02010 (13), -0.01949 (13), 
Length of domains: 37
Time: pickout 0.0006    decision 0.0146    set_bounds 0.0019    solve 0.1719    add 0.0017    
Accumulated time: pickout 0.0101    decision 1.0061    set_bounds 0.2267    solve 2.3367    add 0.2994    
Current (lb-rhs): -0.03176864981651306
392 domains visited
Cumulative time: 5.187832832336426

BaB round 12
batch: 37
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4570] [/input-12, 2601] [/input-12, 2581] [/input-12, 4570] [/input-12, 858] [/input-12, 4570] [/input-12, 4570] [/input-12, 2602] [/input-12, 2596] [/input-12, 4570] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03125980496406555
10 lb beta sum: 0.6049770712852478, worst -0.02850387990474701
Time: prepare 0.0018    bound 0.1659    transfer 0.0005    finalize 0.0015    func 0.1702    
Accumulated time: func 2.7285    prepare 0.0692    bound 2.6070    transfer 0.0130    finalize 0.0377    
all_split False
======================Cut inference begins======================
max lb tensor(0.34815967) min lb tensor(-0.02849233)
Number of Verified Splits: 12 of 74
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 13
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.004651546478271484 
BICCOS Cumulative time: 1.0629587173461914
Preprocessing time: 0.0024967193603515625 Inference time: 0.0012743473052978516 Add cuts time: 0.0003833770751953125 Cut analysis time: 0.0004971027374267578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02849 (14), -0.02728 (14), -0.02705 (14), -0.02646 (14), -0.02550 (14), -0.02403 (14), -0.02377 (14), -0.02362 (14), -0.02287 (14), -0.02252 (14), -0.02234 (14), -0.02219 (14), -0.02168 (14), -0.02156 (14), -0.02115 (14), -0.02113 (14), -0.02008 (14), -0.01989 (14), -0.01986 (14), -0.01956 (14), 
Length of domains: 62
Time: pickout 0.0006    decision 0.0150    set_bounds 0.0034    solve 0.1702    add 0.0021    
Accumulated time: pickout 0.0107    decision 1.0210    set_bounds 0.2301    solve 2.5069    add 0.3015    
Current (lb-rhs): -0.028492331504821777
454 domains visited
Cumulative time: 5.383983135223389

BaB round 13
batch: 62
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2581] [/input-12, 4570] [/input-12, 2581] [/input-12, 2581] [/input-12, 2581] [/input-12, 858] [/input-12, 4570] [/input-12, 2581] [/input-12, 4570] [/input-12, 2581] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7998762726783752, worst -0.026362121105194092
10 lb beta sum: 0.7998762726783752, worst -0.026343971490859985
Time: prepare 0.0058    bound 0.1712    transfer 0.0011    finalize 0.0032    func 0.1823    
Accumulated time: func 2.9107    prepare 0.0751    bound 2.7782    transfer 0.0141    finalize 0.0409    
all_split False
======================Cut inference begins======================
max lb tensor(0.23996428) min lb tensor(-0.02633458)
Number of Verified Splits: 7 of 124
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 13
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.006184101104736328 
BICCOS Cumulative time: 1.0691428184509277
Preprocessing time: 0.0039882659912109375 Inference time: 0.0009748935699462891 Add cuts time: 0.0005080699920654297 Cut analysis time: 0.0007128715515136719
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02633 (15), -0.02508 (15), -0.02460 (15), -0.02436 (15), -0.02427 (15), -0.02294 (15), -0.02294 (15), -0.02286 (15), -0.02216 (15), -0.02198 (15), -0.02124 (15), -0.02122 (15), -0.02094 (15), -0.02087 (15), -0.02059 (15), -0.02018 (15), -0.01998 (15), -0.01991 (15), -0.01986 (15), -0.01974 (15), 
Length of domains: 117
Time: pickout 0.0006    decision 0.0165    set_bounds 0.0055    solve 0.1823    add 0.0037    
Accumulated time: pickout 0.0113    decision 1.0375    set_bounds 0.2356    solve 2.6892    add 0.3052    
Current (lb-rhs): -0.02633458375930786
571 domains visited
Cumulative time: 5.599055528640747

BaB round 14
batch: 117
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 858] [/input-12, 2596] [/input-12, 858] [/input-12, 858] [/input-12, 2596] [/input-12, 2581] [/input-12, 858] [/input-12, 858] [/input-12, 2596] [/input-12, 858] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7899802923202515, worst -0.02383023500442505
10 lb beta sum: 0.7899802923202515, worst -0.023772478103637695
Time: prepare 0.0106    bound 0.1696    transfer 0.0010    finalize 0.0036    func 0.1864    
Accumulated time: func 3.0971    prepare 0.0860    bound 2.9478    transfer 0.0151    finalize 0.0445    
all_split False
======================Cut inference begins======================
max lb tensor(0.24293321) min lb tensor(-0.02374583)
Number of Verified Splits: 52 of 234
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 15
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.016521930694580078 
BICCOS Cumulative time: 1.0856647491455078
Preprocessing time: 0.00713038444519043 Inference time: 0.0068171024322509766 Add cuts time: 0.0020189285278320312 Cut analysis time: 0.0005555152893066406
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02375 (16), -0.02273 (16), -0.02253 (16), -0.02239 (16), -0.02204 (16), -0.02166 (16), -0.02123 (16), -0.02113 (16), -0.02089 (16), -0.02080 (16), -0.02054 (16), -0.02040 (16), -0.02034 (16), -0.02026 (16), -0.01995 (16), -0.01994 (16), -0.01980 (16), -0.01935 (16), -0.01903 (16), -0.01900 (16), 
Length of domains: 182
Time: pickout 0.0008    decision 0.0210    set_bounds 0.0102    solve 0.1864    add 0.0058    
Accumulated time: pickout 0.0121    decision 1.0585    set_bounds 0.2458    solve 2.8757    add 0.3110    
Current (lb-rhs): -0.023745834827423096
753 domains visited
Cumulative time: 5.840356826782227

BaB round 15
batch: 182
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2596] [/input-12, 2602] [/input-12, 883] [/input-12, 2602] [/input-12, 883] [/input-12, 2596] [/input-12, 883] [/input-12, 883] [/input-12, 883] [/input-12, 883] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.024618834257125854
10 lb beta sum: 0.6350535750389099, worst -0.023731112480163574
Time: prepare 0.0072    bound 0.1760    transfer 0.0030    finalize 0.0062    func 0.1948    
Accumulated time: func 3.2919    prepare 0.0933    bound 3.1238    transfer 0.0181    finalize 0.0507    
all_split False
======================Cut inference begins======================
max lb tensor(0.38228762) min lb tensor(-0.02372640)
Number of Verified Splits: 68 of 364
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 15
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.02254629135131836 
BICCOS Cumulative time: 1.1082110404968262
Preprocessing time: 0.010625839233398438 Inference time: 0.009175539016723633 Add cuts time: 0.002082347869873047 Cut analysis time: 0.0006625652313232422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02373 (17), -0.02264 (17), -0.02253 (17), -0.02235 (17), -0.02161 (17), -0.02157 (17), -0.02140 (17), -0.02127 (17), -0.02076 (17), -0.02057 (17), -0.02029 (17), -0.02025 (17), -0.02023 (17), -0.01968 (17), -0.01942 (17), -0.01937 (17), -0.01922 (17), -0.01911 (17), -0.01902 (17), -0.01874 (17), 
Length of domains: 296
Time: pickout 0.0016    decision 0.0279    set_bounds 0.0159    solve 0.1950    add 0.0074    
Accumulated time: pickout 0.0138    decision 1.0864    set_bounds 0.2617    solve 3.0706    add 0.3184    
Current (lb-rhs): -0.02372640371322632
1049 domains visited
Cumulative time: 6.11142635345459

BaB round 16
batch: 256
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 883] [/input-12, 2596] [/input-12, 883] [/input-12, 2596] [/input-12, 2602] [/input-12, 6257] [/input-12, 2602] [/input-12, 2596] [/input-12, 883] [/input-12, 6257] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.02343761920928955
10 lb beta sum: 0.5823523998260498, worst -0.022555142641067505
Time: prepare 0.0101    bound 0.1734    transfer 0.0019    finalize 0.0116    func 0.2004    
Accumulated time: func 3.4923    prepare 0.1036    bound 3.2972    transfer 0.0200    finalize 0.0623    
all_split False
======================Cut inference begins======================
max lb tensor(0.38994816) min lb tensor(-0.02254969)
Number of Verified Splits: 120 of 512
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 15
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.03639554977416992 
BICCOS Cumulative time: 1.144606590270996
Preprocessing time: 0.014899015426635742 Inference time: 0.0172882080078125 Add cuts time: 0.003203868865966797 Cut analysis time: 0.0010044574737548828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02255 (18), -0.02156 (18), -0.02146 (18), -0.02127 (17), -0.02119 (18), -0.02114 (18), -0.02076 (18), -0.02050 (18), -0.02044 (18), -0.02007 (18), -0.01969 (18), -0.01968 (18), -0.01938 (18), -0.01934 (18), -0.01930 (18), -0.01907 (18), -0.01904 (18), -0.01898 (18), -0.01896 (18), -0.01867 (18), 
Length of domains: 432
Time: pickout 0.0024    decision 0.0303    set_bounds 0.0222    solve 0.2005    add 0.0080    
Accumulated time: pickout 0.0162    decision 1.1167    set_bounds 0.2839    solve 3.2711    add 0.3264    
Current (lb-rhs): -0.022549688816070557
1441 domains visited
current_vram/total_varm: 2.1GB/99.9GB, batch_size increase to 512
Cumulative time: 6.412729263305664

BaB round 17
batch: 432
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 883] [/input-12, 2596] [/input-12, 6257] [/input-12, 2602] [/input-12, 2596] [/input-12, 6257] [/input-12, 858] [/input-12, 2602] [/input-12, 2596] [/input-12, 6257] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.022318124771118164
10 lb beta sum: 0.5122798085212708, worst -0.021642178297042847
Time: prepare 0.0168    bound 0.2156    transfer 0.0042    finalize 0.0213    func 0.2638    
Accumulated time: func 3.7560    prepare 0.1207    bound 3.5128    transfer 0.0242    finalize 0.0836    
all_split False
======================Cut inference begins======================
max lb tensor(0.38745105) min lb tensor(-0.02144104)
Number of Verified Splits: 176 of 864
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 15
#cuts 4-6: 9
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.05598616600036621 
BICCOS Cumulative time: 1.2005927562713623
Preprocessing time: 0.025301218032836914 Inference time: 0.026958942413330078 Add cuts time: 0.002961397171020508 Cut analysis time: 0.0007646083831787109
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02144 (19), -0.02119 (19), -0.02076 (19), -0.02044 (19), -0.02037 (19), -0.02009 (18), -0.02007 (19), -0.02003 (19), -0.01969 (19), -0.01941 (19), -0.01938 (19), -0.01932 (19), -0.01897 (19), -0.01896 (19), -0.01879 (19), -0.01855 (19), -0.01825 (19), -0.01824 (19), -0.01821 (19), -0.01818 (19), 
Length of domains: 688
Time: pickout 0.0179    decision 0.0452    set_bounds 0.0376    solve 0.2640    add 0.0124    
Accumulated time: pickout 0.0341    decision 1.1619    set_bounds 0.3215    solve 3.5352    add 0.3388    
Current (lb-rhs): -0.02144104242324829
2129 domains visited
Cumulative time: 6.848155498504639

BaB round 18
batch: 512
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6257] [/input-12, 2602] [/input-12, 2596] [/input-12, 2602] [/input-12, 6476] [/input-12, 6257] [/input-12, 2602] [/input-12, 2602] [/input-12, 6257] [/input-12, 6476] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.02144142985343933
10 lb beta sum: 0.4001934230327606, worst -0.021441519260406494
Time: prepare 0.0197    bound 0.2242    transfer 0.0042    finalize 0.0169    func 0.2718    
Accumulated time: func 4.0279    prepare 0.1406    bound 3.7371    transfer 0.0284    finalize 0.1006    
all_split False
======================Cut inference begins======================
max lb tensor(0.39279670) min lb tensor(-0.02143463)
Number of Verified Splits: 258 of 1024
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 17
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.07391715049743652 
BICCOS Cumulative time: 1.2745099067687988
Preprocessing time: 0.030826091766357422 Inference time: 0.03811931610107422 Add cuts time: 0.004219532012939453 Cut analysis time: 0.0007522106170654297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02143 (20), -0.02042 (20), -0.02035 (20), -0.02012 (20), -0.02002 (20), -0.01969 (19), -0.01968 (20), -0.01937 (20), -0.01931 (20), -0.01902 (20), -0.01898 (19), -0.01877 (20), -0.01855 (20), -0.01832 (20), -0.01825 (19), -0.01822 (20), -0.01821 (20), -0.01812 (19), -0.01802 (20), -0.01793 (20), 
Length of domains: 942
Time: pickout 0.0033    decision 0.0490    set_bounds 0.0438    solve 0.2721    add 0.0148    
Accumulated time: pickout 0.0374    decision 1.2108    set_bounds 0.3653    solve 3.8072    add 0.3536    
Current (lb-rhs): -0.021434634923934937
2895 domains visited
current_vram/total_varm: 4.2GB/99.9GB, batch_size increase to 1024
Cumulative time: 7.3086042404174805

BaB round 19
batch: 942
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2602] [/input-12, 2596] [/input-12, 2596] [/input-12, 1562] [/input-12, 6257] [/input-12, 6257] [/input-12, 1562] [/input-12, 1346] [/input-12, 6257] [/input-12, 2602] 
cut re-enabled after branching node selection
0 lb beta sum: 0.31926119327545166, worst -0.23601034283638
10 lb beta sum: 0.4680132567882538, worst -0.020659148693084717
Time: prepare 0.0743    bound 0.3575    transfer 0.0085    finalize 0.0392    func 0.4918    
Accumulated time: func 4.5196    prepare 0.2152    bound 4.0945    transfer 0.0369    finalize 0.1397    
all_split False
======================Cut inference begins======================
max lb tensor(0.38834175) min lb tensor(-0.02065262)
Number of Verified Splits: 495 of 1884
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 18
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.1445605754852295 
BICCOS Cumulative time: 1.4190704822540283
Preprocessing time: 0.058573246002197266 Inference time: 0.0765378475189209 Add cuts time: 0.008573293685913086 Cut analysis time: 0.0008761882781982422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02065 (21), -0.01952 (21), -0.01940 (21), -0.01923 (21), -0.01897 (20), -0.01860 (21), -0.01857 (20), -0.01852 (21), -0.01825 (21), -0.01799 (21), -0.01791 (21), -0.01767 (21), -0.01757 (21), -0.01737 (21), -0.01722 (21), -0.01720 (20), -0.01715 (21), -0.01693 (21), -0.01681 (21), -0.01678 (21), 
Length of domains: 1389
Time: pickout 0.0319    decision 0.0828    set_bounds 0.0799    solve 0.6559    add 0.0258    
Accumulated time: pickout 0.0693    decision 1.2936    set_bounds 0.4451    solve 4.4631    add 0.3793    
Current (lb-rhs): -0.02065262198448181
4284 domains visited
Cumulative time: 8.336013317108154

BaB round 20
batch: 1024
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4578] [/input-12, 1562] [/input-12, 4578] [/input-12, 1562] [/input-12, 1562] [/input-12, 4578] [/input-12, 1562] [/input-12, 1562] [/input-12, 1562] [/input-12, 1562] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.018772900104522705
10 lb beta sum: 0.4804162085056305, worst -0.018733561038970947
Time: prepare 0.0388    bound 0.3754    transfer 0.0072    finalize 0.0434    func 0.4791    
Accumulated time: func 4.9987    prepare 0.2542    bound 4.4699    transfer 0.0440    finalize 0.1831    
all_split False
======================Cut inference begins======================
max lb tensor(0.40111804) min lb tensor(-0.01872686)
Number of Verified Splits: 779 of 2048
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 18
#cuts 4-6: 10
#cuts >= 20: 0
BICCOS time: 0.203383207321167 
BICCOS Cumulative time: 1.6224536895751953
Preprocessing time: 0.06337857246398926 Inference time: 0.1257002353668213 Add cuts time: 0.013372182846069336 Cut analysis time: 0.0009322166442871094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01952 (21), -0.01923 (21), -0.01873 (22), -0.01860 (21), -0.01814 (21), -0.01800 (22), -0.01799 (21), -0.01764 (22), -0.01757 (21), -0.01737 (21), -0.01722 (21), -0.01715 (21), -0.01693 (21), -0.01690 (22), -0.01681 (21), -0.01679 (22), -0.01672 (21), -0.01660 (22), -0.01657 (21), -0.01650 (22), 
Length of domains: 1634
Time: pickout 0.0051    decision 0.0894    set_bounds 0.0868    solve 0.4794    add 0.0236    
Accumulated time: pickout 0.0744    decision 1.3829    set_bounds 0.5319    solve 4.9426    add 0.4029    
Current (lb-rhs): -0.019520387053489685
5553 domains visited
current_vram/total_varm: 8.5GB/99.9GB, batch_size increase to 2048
Cumulative time: 9.234097003936768

BaB round 21
batch: 1634
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4578] [/input-12, 1562] [/input-12, 4578] [/input-12, 4578] [/input-12, 1346] [/input-12, 2602] [/input-12, 4890] [/input-12, 2602] [/input-12, 4578] [/input-12, 1346] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.017859339714050293
10 lb beta sum: 0.4305340051651001, worst -0.02016046643257141
Time: prepare 0.0630    bound 0.5544    transfer 0.0444    finalize 0.2459    func 0.9289    
Accumulated time: func 5.9276    prepare 0.3175    bound 5.0243    transfer 0.0884    finalize 0.4290    
all_split False
======================Cut inference begins======================
max lb tensor(0.39959985) min lb tensor(-0.01785934)
Number of Verified Splits: 1102 of 3268
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 19
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.3065478801727295 
BICCOS Cumulative time: 1.9290015697479248
Preprocessing time: 0.10014533996582031 Inference time: 0.18600893020629883 Add cuts time: 0.01937699317932129 Cut analysis time: 0.0010166168212890625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01786 (22), -0.01763 (22), -0.01712 (22), -0.01689 (22), -0.01680 (22), -0.01672 (22), -0.01660 (23), -0.01621 (23), -0.01605 (22), -0.01602 (22), -0.01588 (23), -0.01563 (22), -0.01549 (22), -0.01548 (23), -0.01546 (23), -0.01543 (22), -0.01533 (22), -0.01509 (23), -0.01506 (22), -0.01506 (23), 
Length of domains: 2166
Time: pickout 0.0567    decision 0.1316    set_bounds 0.1425    solve 0.9299    add 0.0380    
Accumulated time: pickout 0.1311    decision 1.5145    set_bounds 0.6744    solve 5.8725    add 0.4409    
Current (lb-rhs): -0.017859339714050293
7719 domains visited
Cumulative time: 10.854775428771973

BaB round 22
batch: 2048
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1346] [/input-12, 4578] [/input-12, 4571] [/input-12, 4578] [/input-12, 1346] [/input-12, 1562] [/input-12, 4890] [/input-12, 1562] [/input-12, 4578] [/input-12, 1562] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.015787065029144287
10 lb beta sum: 0.36418962478637695, worst -0.016048818826675415
Time: prepare 0.0841    bound 0.6703    transfer 0.0532    finalize 0.1360    func 0.9719    
Accumulated time: func 6.8994    prepare 0.4019    bound 5.6946    transfer 0.1416    finalize 0.5650    
all_split False
======================Cut inference begins======================
max lb tensor(0.39927822) min lb tensor(-0.01578707)
Number of Verified Splits: 1526 of 4096
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 22
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.42174530029296875 
BICCOS Cumulative time: 2.3507468700408936
Preprocessing time: 0.12761735916137695 Inference time: 0.2675611972808838 Add cuts time: 0.02557539939880371 Cut analysis time: 0.0009913444519042969
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01660 (23), -0.01579 (23), -0.01549 (23), -0.01546 (23), -0.01534 (23), -0.01512 (24), -0.01509 (23), -0.01506 (23), -0.01495 (23), -0.01482 (24), -0.01479 (23), -0.01477 (23), -0.01472 (23), -0.01452 (23), -0.01447 (23), -0.01438 (23), -0.01438 (24), -0.01435 (23), -0.01434 (23), -0.01430 (23), 
Length of domains: 2688
Time: pickout 0.0125    decision 0.1636    set_bounds 0.1752    solve 1.1278    add 0.0661    
Accumulated time: pickout 0.1436    decision 1.6782    set_bounds 0.8496    solve 7.0003    add 0.5070    
Current (lb-rhs): -0.01659807562828064
10289 domains visited
current_vram/total_varm: 15.7GB/99.9GB, batch_size increase to 4096
Cumulative time: 12.844703674316406

BaB round 23
batch: 2688
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2274] [/input-12, 2274] [/input-16, 21] [/input-12, 2274] [/input-16, 21] [/input-12, 1346] [/input-12, 1346] [/input-12, 1346] [/input-12, 4578] [/input-12, 1346] 
cut re-enabled after branching node selection
0 lb beta sum: 0.018640149384737015, worst -0.21545171737670898
10 lb beta sum: 0.5887770056724548, worst -0.014645099639892578
Time: prepare 0.1190    bound 0.8566    transfer 0.0693    finalize 0.3492    func 1.4301    
Accumulated time: func 8.3295    prepare 0.5212    bound 6.5512    transfer 0.2109    finalize 0.9142    
all_split False
======================Cut inference begins======================
max lb tensor(0.64877081) min lb tensor(-0.01463830)
Number of Verified Splits: 3752 of 5376
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.8766522407531738 
BICCOS Cumulative time: 3.2273991107940674
Preprocessing time: 0.16831111907958984 Inference time: 0.6619210243225098 Add cuts time: 0.04608154296875 Cut analysis time: 0.00033855438232421875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01464 (24), -0.01394 (24), -0.01357 (24), -0.01351 (24), -0.01346 (24), -0.01325 (24), -0.01308 (24), -0.01305 (24), -0.01293 (24), -0.01284 (24), -0.01278 (25), -0.01278 (24), -0.01260 (24), -0.01254 (24), -0.01243 (24), -0.01239 (24), -0.01235 (25), -0.01230 (24), -0.01209 (24), -0.01201 (24), 
Length of domains: 1624
Time: pickout 0.0974    decision 0.2062    set_bounds 0.2342    solve 1.4316    add 0.0312    
Accumulated time: pickout 0.2410    decision 1.8844    set_bounds 1.0838    solve 8.4319    add 0.5382    
Current (lb-rhs): -0.014638304710388184
11913 domains visited
Cumulative time: 15.766757488250732

BaB round 24
batch: 1624
splitting decisions: 
split level 0: [/input-16, 21] [/input-16, 21] [/input-16, 21] [/input-16, 21] [/input-12, 4571] [/input-12, 4571] [/input-12, 4571] [/input-16, 21] [/input-12, 4571] [/input-16, 21] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.014198124408721924
10 lb beta sum: 0.22727788984775543, worst -0.01810544729232788
Time: prepare 0.0688    bound 0.3897    transfer 0.0439    finalize 0.1081    func 0.6331    
Accumulated time: func 8.9626    prepare 0.5901    bound 6.9409    transfer 0.2548    finalize 1.0223    
all_split False
======================Cut inference begins======================
max lb tensor(0.39848247) min lb tensor(7.45058060e-07)
Number of Verified Splits: 3248 of 3248
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.10527586936950684 
BICCOS Cumulative time: 3.332674980163574
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0084    decision 0.1306    set_bounds 0.2858    solve 0.6339    add 0.0009    
Accumulated time: pickout 0.2495    decision 2.0150    set_bounds 1.3696    solve 9.0658    add 0.5391    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
11913 domains visited
Cumulative time: 16.95623278617859


Properties batch 4, size 1
Remaining timeout: 181.23107433319092
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 181.23095107078552
Verifying property 5 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00036079]], device='cuda:0') need to verify.
Model prediction is: tensor([-31.26043129, -34.86041260, -28.50840378, -29.91226959, -28.94694138,
        -30.39052582, -29.73165321, -31.06744957, -32.05524826, -34.09683990],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00036079]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1758
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 710
Node /39 input 0: size torch.Size([250]) unstable 42
-----------------
# of unstable neurons: 2510
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 9.512901306152344e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.00027573108673095703
10 lb beta sum: 0.0, worst -0.00028192996978759766
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0740    transfer 0.0001    finalize 0.0002    func 0.0746    
Accumulated time: func 0.0746    prepare 0.0002    bound 0.0740    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 140] 
split level 1: [/input-16, 208] 
split level 2: [/input-16, 190] 
split level 3: [/input-16, 37] 
split level 4: [/input-16, 43] 
split level 5: [/input-16, 225] 
split level 6: [/input-16, 248] 
split level 7: [/input-16, 51] 
split level 8: [/input-16, 97] 
split level 9: [/input-16, 195] 
split level 10: [/input-16, 64] 
split level 11: [/input-16, 160] 
split level 12: [/input-12, 5667] 
split level 13: [/input-16, 78] 
split level 14: [/input-16, 25] 
split level 15: [/input-12, 3284] 
split level 16: [/input-16, 235] 
split level 17: [/input-12, 5658] 
split level 18: [/input-12, 7987] 
split level 19: [/input-12, 5659] 
split level 20: [/input-16, 178] 
split level 21: [/input-12, 6898] 
split level 22: [/input-12, 5661] 
split level 23: [/input-16, 145] 
split level 24: [/input-12, 4570] 
split level 25: [/input-12, 5666] 
split level 26: [/input-12, 4773] 
split level 27: [/input-12, 3290] 
split level 28: [/input-12, 2009] 
split level 29: [/input-12, 1419] 
split level 30: [/input-12, 5668] 
split level 31: [/input-12, 5900] 
split level 32: [/input-12, 102] 
split level 33: [/input-16, 180] 
split level 34: [/input-12, 4571] 
split level 35: [/input-12, 94] 
split level 36: [/input-12, 2546] 
split level 37: [/input-12, 2037] 
split level 38: [/input-12, 4880] 
split level 39: [/input-12, 5652] 
split level 40: [/input-12, 3293] 
split level 41: [/input-12, 6475] 
split level 42: [/input-12, 4888] 
split level 43: [/input-12, 4464] 
split level 44: [/input-12, 1993] 
split level 45: [/input-12, 5660] 
split level 46: [/input-12, 434] 
split level 47: [/input-12, 3276] 
split level 48: [/input-12, 2529] 
split level 49: [/input-12, 7314] 
split level 50: [/input-12, 2002] 
split level 51: [/input-16, 132] 
split level 52: [/input-12, 5653] 
split level 53: [/input-4, 5540] 
split level 54: [/input-12, 4578] 
split level 55: [/input-12, 3793] 
split level 56: [/input-12, 1702] 
split level 57: [/input-16, 129] 
split level 58: [/input-12, 3289] 
split level 59: [/input-12, 2270] 
split level 60: [/input-12, 1770] 
split level 61: [/input-12, 4896] 
split level 62: [/input-12, 1428] 
split level 63: [/input-12, 467] 
split level 64: [/input-12, 4393] 
split level 65: [/input-12, 6773] 
split level 66: [/input-12, 883] 
split level 67: [/input-12, 6075] 
split level 68: [/input-12, 2572] 
split level 69: [/input-12, 2571] 
split level 70: [/input-12, 5677] 
split level 71: [/input-12, 5651] 
split level 72: [/input-12, 7313] 
split level 73: [/input-12, 5417] 
split level 74: [/input-12, 5657] 
split level 75: [/input-4, 1188] 
split level 76: [/input-12, 1418] 
split level 77: [/input-12, 813] 
split level 78: [/input-12, 368] 
split level 79: [/input-12, 4579] 
split level 80: [/input-12, 2530] 
split level 81: [/input-12, 6892] 
split level 82: [/input-12, 3432] 
split level 83: [/input-12, 2386] 
split level 84: [/input-12, 2526] 
split level 85: [/input-12, 1196] 
split level 86: [/input-4, 1204] 
split level 87: [/input-12, 4130] 
split level 88: [/input-12, 7924] 
split level 89: [/input-12, 3346] 
split level 90: [/input-12, 3288] 
split level 91: [/input-12, 6476] 
split level 92: [/input-4, 1105] 
split level 93: [/input-4, 2964] 
split level 94: [/input-12, 2273] 
split level 95: [/input-4, 2980] 
split level 96: [/input-12, 2302] 
split level 97: [/input-12, 3277] 
split level 98: [/input-4, 4774] 
split level 99: [/input-4, 2982] 
split level 100: [/input-12, 4889] 
split level 101: [/input-12, 3794] 
split level 102: [/input-12, 4740] 
split level 103: [/input-4, 2949] 
split level 104: [/input-12, 85] 
split level 105: [/input-4, 3169] 
split level 106: [/input-12, 2491] 
split level 107: [/input-4, 7013] 
split level 108: [/input-12, 5909] 
split level 109: [/input-4, 4518] 
split level 110: [/input-12, 475] 
split level 111: [/input-12, 2333] 
split level 112: [/input-4, 8158] 
split level 113: [/input-4, 4756] 
split level 114: [/input-4, 5802] 
split level 115: [/input-4, 2999] 
split level 116: [/input-4, 1686] 
split level 117: [/input-4, 2946] 
split level 118: [/input-12, 7477] 
split level 119: [/input-4, 5288] 
split level 120: [/input-4, 8140] 
split level 121: [/input-12, 6772] 
split level 122: [/input-12, 1238] 
split level 123: [/input-4, 129] 
split level 124: [/input-12, 814] 
split level 125: [/input-12, 2522] 
split level 126: [/input-4, 5507] 
split level 127: [/input-12, 5235] 
split level 128: [/input-12, 1229] 
split level 129: [/input-4, 3219] 
split level 130: [/input-4, 4485] 
split level 131: [/input-4, 1735] 
split level 132: [/input-4, 4499] 
split level 133: [/input-12, 4385] 
split level 134: [/input-4, 7897] 
split level 135: [/input-4, 1717] 
split level 136: [/input-12, 5324] 
split level 137: [/input-4, 2965] 
split level 138: [/input-4, 161] 
split level 139: [/input-12, 3416] 
split level 140: [/input-4, 4772] 
split level 141: [/input-4, 4758] 
split level 142: [/input-12, 4580] 
split level 143: [/input-4, 146] 
split level 144: [/input-4, 1703] 
split level 145: [/input-4, 130] 
split level 146: [/input-4, 4468] 
split level 147: [/input-4, 1634] 
split level 148: [/input-4, 3172] 
split level 149: [/input-12, 2539] 
split level 150: [/input-4, 1137] 
split level 151: [/input-4, 2678] 
split level 152: [/input-4, 2932] 
split level 153: [/input-12, 7636] 
split level 154: [/input-4, 2630] 
split level 155: [/input-12, 4121] 
split level 156: [/input-12, 3424] 
split level 157: [/input-12, 2369] 
split level 158: [/input-4, 162] 
split level 159: [/input-12, 6485] 
split level 160: [/input-12, 7317] 
split level 161: [/input-4, 4486] 
split level 162: [/input-12, 4897] 
split level 163: [/input-12, 7998] 
split level 164: [/input-4, 5569] 
split level 165: [/input-4, 2934] 
split level 166: [/input-4, 8119] 
split level 167: [/input-4, 132] 
split level 168: [/input-4, 1106] 
split level 169: [/input-4, 4792] 
split level 170: [/input-4, 4722] 
split level 171: [/input-4, 2947] 
split level 172: [/input-4, 83] 
split level 173: [/input-12, 476] 
split level 174: [/input-12, 1426] 
split level 175: [/input-12, 7913] 
split level 176: [/input-12, 4113] 
split level 177: [/input-4, 1636] 
split level 178: [/input-12, 5665] 
split level 179: [/input-4, 1651] 
split level 180: [/input-4, 5833] 
split level 181: [/input-12, 806] 
split level 182: [/input-4, 5556] 
split level 183: [/input-4, 4977] 
split level 184: [/input-4, 1722] 
split level 185: [/input-4, 2182] 
split level 186: [/input-4, 149] 
split level 187: [/input-4, 1216] 
split level 188: [/input-4, 2181] 
split level 189: [/input-4, 2778] 
split level 190: [/input-4, 5570] 
split level 191: [/input-4, 328] 
split level 192: [/input-12, 2014] 
split level 193: [/input-12, 4874] 
split level 194: [/input-4, 2677] 
split level 195: [/input-12, 5946] 
split level 196: [/input-4, 6308] 
split level 197: [/input-12, 2548] 
split level 198: [/input-4, 177] 
split level 199: [/input-4, 1654] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -7.683038711547852e-05
10 lb beta sum: 0.0, worst -6.890296936035156e-05
Time: prepare 0.0113    bound 0.1332    transfer 0.0030    finalize 0.0084    func 0.1586    
Accumulated time: func 0.2331    prepare 0.0214    bound 0.2073    transfer 0.0031    finalize 0.0087    
all_split False
======================Cut inference begins======================
max lb tensor(0.13930541) min lb tensor(-6.47902489e-05)
Number of Verified Splits: 399 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.029839515686035156 
BICCOS Cumulative time: 0.029839515686035156
Preprocessing time: 0.010001420974731445 Inference time: 0.015204668045043945 Add cuts time: 0.004433631896972656 Cut analysis time: 0.00019979476928710938
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.7771    set_bounds 0.0086    solve 0.1586    add 0.0123    
Accumulated time: pickout 0.0003    decision 0.7771    set_bounds 0.0086    solve 0.1586    add 0.0123    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([140]), tensor([-1.]), tensor([0]), tensor([-1.26703658e+34]), tensor([0]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([140]), tensor([1.]), tensor([0]), tensor([-1.26703658e+34]), tensor([0]))}
Shallow branching resets to n domains:  2
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.0895991325378418

all verified at 0th iter
Time: prepare 0.0003    bound 0.0057    transfer 0.0001    finalize 0.0003    func 0.0064    
Accumulated time: func 0.2395    prepare 0.0217    bound 0.2130    transfer 0.0032    finalize 0.0089    
After pruning, left:  0

Back to Regular BaB


Properties batch 6, size 1
Remaining timeout: 179.98373436927795
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 179.98366904258728
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 179.9836449623108
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 20.0164 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 98, vnnlib ID: 98 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-36.95824051, -38.48999023, -36.10776520, -34.11059570, -34.73225021,
         -33.84208679, -36.04211044, -35.72389984, -36.79173660, -39.57273102]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1685]; unstable size 1685; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 82, 1, 1685] with unstable size 81 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 34, 1, 1685] with unstable size 33 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1685] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [620]; unstable size 620; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 34, 1, 620] with unstable size 33 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 620] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [33]; unstable size 33; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.87972784,  2.87177968,  1.12241006,  0.09522444, -0.25388825,
          0.74342489,  0.63379133,  1.47811484,  4.22960281]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-36.95824051, -38.48999023, -36.10776520, -34.11059570, -34.73225021,
         -33.84208679, -36.04211044, -35.72389984, -36.79173660, -39.57273102]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.14it/s]100%|██████████| 1/1 [00:00<00:00,  8.13it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-37.68597794, -39.11447144, -36.76440430, -34.94841385, -35.19564819,
          -34.70260620, -36.66382980, -36.25878143, -37.46166992, -40.20363617]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.49304199]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1258 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 13.448054313659668
alpha/beta optimization time: 1.4511489868164062
initial alpha-crown bounds: tensor([[ 1.95446444,  2.96078348,  1.18483400,  0.10698718, -0.13672388,
          0.81901312,  0.68705273,  1.56672192,  4.30492163]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.13672387599945068
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.3817811012268
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.38174319267273
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.38171672821045
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.38169479370117
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.38167476654053
Verifying property 4 with 1 instances.
##### Instance 98 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.13672388]], device='cuda:0') need to verify.
Model prediction is: tensor([-36.95824051, -38.48999023, -36.10776520, -34.11059570, -34.73225021,
        -33.84208679, -36.04211044, -35.72389984, -36.79173660, -39.57273102],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.13672388]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1685
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 605
Node /39 input 0: size torch.Size([250]) unstable 32
-----------------
# of unstable neurons: 2322
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 9.799003601074219e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1366642713546753
10 lb beta sum: 0.0, worst -0.13666629791259766
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0740    transfer 0.0001    finalize 0.0002    func 0.0745    
Accumulated time: func 0.0745    prepare 0.0002    bound 0.0740    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 89] 
split level 1: [/input-16, 230] 
split level 2: [/input-16, 10] 
split level 3: [/input-16, 13] 
split level 4: [/input-16, 166] 
split level 5: [/input-16, 182] 
split level 6: [/input-16, 95] 
split level 7: [/input-16, 8] 
split level 8: [/input-16, 31] 
split level 9: [/input-16, 225] 
split level 10: [/input-16, 215] 
split level 11: [/input-16, 186] 
split level 12: [/input-16, 72] 
split level 13: [/input-16, 104] 
split level 14: [/input-16, 190] 
split level 15: [/input-12, 7500] 
split level 16: [/input-16, 7] 
split level 17: [/input-12, 7508] 
split level 18: [/input-12, 7124] 
split level 19: [/input-12, 3441] 
split level 20: [/input-12, 2580] 
split level 21: [/input-12, 6419] 
split level 22: [/input-12, 6244] 
split level 23: [/input-12, 3357] 
split level 24: [/input-12, 6242] 
split level 25: [/input-12, 1252] 
split level 26: [/input-12, 249] 
split level 27: [/input-12, 3442] 
split level 28: [/input-12, 1585] 
split level 29: [/input-12, 5682] 
split level 30: [/input-12, 6258] 
split level 31: [/input-12, 1371] 
split level 32: [/input-12, 3435] 
split level 33: [/input-12, 7122] 
split level 34: [/input-12, 6465] 
split level 35: [/input-12, 2581] 
split level 36: [/input-12, 7001] 
split level 37: [/input-12, 1363] 
split level 38: [/input-12, 5673] 
split level 39: [/input-12, 6421] 
split level 40: [/input-12, 1444] 
split level 41: [/input-12, 1589] 
split level 42: [/input-12, 8029] 
split level 43: [/input-12, 5686] 
split level 44: [/input-12, 810] 
split level 45: [/input-12, 6436] 
split level 46: [/input-12, 1435] 
split level 47: [/input-12, 1577] 
split level 48: [/input-12, 4572] 
split level 49: [/input-12, 5142] 
split level 50: [/input-12, 1437] 
split level 51: [/input-12, 5548] 
split level 52: [/input-12, 6868] 
split level 53: [/input-12, 6250] 
split level 54: [/input-12, 8036] 
split level 55: [/input-12, 5664] 
split level 56: [/input-12, 4588] 
split level 57: [/input-12, 4587] 
split level 58: [/input-12, 7894] 
split level 59: [/input-12, 5158] 
split level 60: [/input-12, 5134] 
split level 61: [/input-12, 5150] 
split level 62: [/input-12, 2462] 
split level 63: [/input-12, 3401] 
split level 64: [/input-4, 4630] 
split level 65: [/input-12, 5793] 
split level 66: [/input-4, 5790] 
split level 67: [/input-12, 7002] 
split level 68: [/input-12, 8043] 
split level 69: [/input-12, 2577] 
split level 70: [/input-12, 7558] 
split level 71: [/input-12, 2617] 
split level 72: [/input-4, 6497] 
split level 73: [/input-12, 3364] 
split level 74: [/input-12, 5637] 
split level 75: [/input-12, 4684] 
split level 76: [/input-4, 7753] 
split level 77: [/input-12, 1552] 
split level 78: [/input-12, 7148] 
split level 79: [/input-12, 7143] 
split level 80: [/input-4, 2602] 
split level 81: [/input-12, 5647] 
split level 82: [/input-12, 7228] 
split level 83: [/input-12, 1185] 
split level 84: [/input-12, 5528] 
split level 85: [/input-4, 1653] 
split level 86: [/input-12, 788] 
split level 87: [/input-4, 2658] 
split level 88: [/input-12, 7214] 
split level 89: [/input-12, 7590] 
split level 90: [/input-12, 733] 
split level 91: [/input-12, 4581] 
split level 92: [/input-12, 1590] 
split level 93: [/input-12, 883] 
split level 94: [/input-12, 2603] 
split level 95: [/input-12, 2531] 
split level 96: [/input-12, 2598] 
split level 97: [/input-12, 7115] 
split level 98: [/input-12, 1445] 
split level 99: [/input-4, 2642] 
split level 100: [/input-4, 381] 
split level 101: [/input-4, 2711] 
split level 102: [/input-12, 1576] 
split level 103: [/input-12, 3875] 
split level 104: [/input-12, 771] 
split level 105: [/input-4, 1258] 
split level 106: [/input-4, 391] 
split level 107: [/input-12, 5520] 
split level 108: [/input-12, 5357] 
split level 109: [/input-12, 5681] 
split level 110: [/input-4, 1601] 
split level 111: [/input-12, 7193] 
split level 112: [/input-12, 1244] 
split level 113: [/input-4, 6529] 
split level 114: [/input-4, 1669] 
split level 115: [/input-12, 407] 
split level 116: [/input-12, 1930] 
split level 117: [/input-4, 6554] 
split level 118: [/input-12, 5365] 
split level 119: [/input-12, 268] 
split level 120: [/input-4, 7770] 
split level 121: [/input-4, 2631] 
split level 122: [/input-12, 7227] 
split level 123: [/input-4, 405] 
split level 124: [/input-4, 2713] 
split level 125: [/input-4, 2632] 
split level 126: [/input-12, 4742] 
split level 127: [/input-12, 7114] 
split level 128: [/input-12, 726] 
split level 129: [/input-12, 5143] 
split level 130: [/input-12, 5658] 
split level 131: [/input-4, 4981] 
split level 132: [/input-4, 8154] 
split level 133: [/input-4, 2641] 
split level 134: [/input-12, 2826] 
split level 135: [/input-12, 7229] 
split level 136: [/input-12, 7517] 
split level 137: [/input-4, 4625] 
split level 138: [/input-12, 5781] 
split level 139: [/input-4, 6604] 
split level 140: [/input-12, 7156] 
split level 141: [/input-4, 7809] 
split level 142: [/input-12, 5672] 
split level 143: [/input-4, 2725] 
split level 144: [/input-4, 2690] 
split level 145: [/input-4, 5804] 
split level 146: [/input-4, 2897] 
split level 147: [/input-4, 2699] 
split level 148: [/input-12, 5680] 
split level 149: [/input-4, 3210] 
split level 150: [/input-12, 5138] 
split level 151: [/input-4, 2726] 
split level 152: [/input-4, 6542] 
split level 153: [/input-4, 1210] 
split level 154: [/input-4, 4746] 
split level 155: [/input-4, 6583] 
split level 156: [/input-12, 3949] 
split level 157: [/input-4, 6793] 
split level 158: [/input-4, 1362] 
split level 159: [/input-12, 843] 
split level 160: [/input-4, 7757] 
split level 161: [/input-4, 4897] 
split level 162: [/input-4, 2730] 
split level 163: [/input-4, 2712] 
split level 164: [/input-4, 7979] 
split level 165: [/input-4, 4510] 
split level 166: [/input-12, 1202] 
split level 167: [/input-4, 6496] 
split level 168: [/input-4, 6809] 
split level 169: [/input-4, 6547] 
split level 170: [/input-12, 7113] 
split level 171: [/input-12, 3870] 
split level 172: [/input-4, 4517] 
split level 173: [/input-4, 2881] 
split level 174: [/input-4, 7817] 
split level 175: [/input-12, 5550] 
split level 176: [/input-4, 7854] 
split level 177: [/input-12, 5543] 
split level 178: [/input-4, 6794] 
split level 179: [/input-4, 1622] 
split level 180: [/input-4, 6261] 
split level 181: [/input-12, 5687] 
split level 182: [/input-4, 4483] 
split level 183: [/input-4, 6810] 
split level 184: [/input-12, 879] 
split level 185: [/input-4, 4631] 
split level 186: [/input-4, 7885] 
split level 187: [/input-4, 3720] 
split level 188: [/input-4, 6209] 
split level 189: [/input-12, 8130] 
split level 190: [/input-12, 5810] 
split level 191: [/input-4, 6262] 
split level 192: [/input-4, 6582] 
split level 193: [/input-4, 1576] 
split level 194: [/input-4, 7772] 
split level 195: [/input-4, 7811] 
split level 196: [/input-12, 8136] 
split level 197: [/input-4, 1538] 
split level 198: [/input-4, 390] 
split level 199: [/input-4, 4694] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13656413555145264
10 lb beta sum: 0.0, worst -0.13656353950500488
Time: prepare 0.0117    bound 0.1494    transfer 0.0017    finalize 0.0059    func 0.1712    
Accumulated time: func 0.2458    prepare 0.0218    bound 0.2234    transfer 0.0018    finalize 0.0061    
all_split False
======================Cut inference begins======================
max lb tensor(0.29000330) min lb tensor(-0.13656044)
Number of Verified Splits: 8 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.011006355285644531 
BICCOS Cumulative time: 0.011006355285644531
Preprocessing time: 0.01000070571899414 Inference time: 0.0006170272827148438 Add cuts time: 0.00011658668518066406 Cut analysis time: 0.0002720355987548828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12720 (1), -0.12682 (1), -0.12666 (1), -0.12663 (1), -0.12647 (1), -0.12639 (1), -0.12632 (1), -0.12497 (1), -0.12471 (1), -0.12462 (1), -0.12460 (1), -0.12426 (1), -0.12425 (1), -0.12407 (1), -0.12405 (1), -0.12400 (1), -0.12381 (1), -0.12331 (1), -0.12302 (1), -0.12288 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7783    set_bounds 0.0113    solve 0.1713    add 0.2039    
Accumulated time: pickout 0.0003    decision 0.7783    set_bounds 0.0113    solve 0.1713    add 0.2039    
Current (lb-rhs): -0.12720179557800293
50 domains visited
Cumulative time: 1.2603638172149658

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 230] [/input-16, 230] [/input-16, 89] [/input-16, 89] [/input-16, 230] [/input-16, 89] [/input-16, 89] [/input-16, 230] [/input-16, 89] [/input-16, 89] 
split level 1: [/input-16, 10] [/input-16, 13] [/input-16, 230] [/input-16, 230] [/input-16, 10] [/input-16, 230] [/input-16, 230] [/input-16, 10] [/input-16, 13] [/input-16, 230] 
split level 2: [/input-16, 13] [/input-16, 182] [/input-16, 95] [/input-16, 13] [/input-16, 13] [/input-16, 182] [/input-16, 13] [/input-16, 13] [/input-16, 95] [/input-16, 13] 
split level 3: [/input-16, 95] [/input-16, 95] [/input-16, 182] [/input-16, 182] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 182] [/input-16, 95] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10931265354156494
10 lb beta sum: 1.0333172082901, worst -0.016522765159606934
Time: prepare 0.0070    bound 0.1659    transfer 0.0016    finalize 0.0053    func 0.1824    
Accumulated time: func 0.4282    prepare 0.0290    bound 0.3893    transfer 0.0034    finalize 0.0114    
all_split False
======================Cut inference begins======================
max lb tensor(0.17811120) min lb tensor(-0.01644325)
Number of Verified Splits: 350 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.03259444236755371 
BICCOS Cumulative time: 0.04360079765319824
Preprocessing time: 0.011840105056762695 Inference time: 0.013880491256713867 Add cuts time: 0.0066988468170166016 Cut analysis time: 0.00017499923706054688
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0009    decision 0.0251    set_bounds 0.0128    solve 0.1825    add 0.0151    
Accumulated time: pickout 0.0013    decision 0.8034    set_bounds 0.0241    solve 0.3538    add 0.2190    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([13, 89]), tensor([-1., -1.]), tensor([0, 0]), tensor([-1.26703856e+34,  1.87357649e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([13, 89]), tensor([-1.,  1.]), tensor([0, 0]), tensor([-1.26703856e+34,  1.18368194e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([13, 89]), tensor([ 1., -1.]), tensor([0, 0]), tensor([-1.26703856e+34,  1.82715222e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([13, 89]), tensor([1., 1.]), tensor([0, 0]), tensor([-1.26703856e+34,  1.21822283e-01]), tensor([0, 1]))}
Shallow branching resets to n domains:  4
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04803037643432617

all verified at 1th iter
Time: prepare 0.0003    bound 0.0132    transfer 0.0002    finalize 0.0003    func 0.0140    
Accumulated time: func 0.4422    prepare 0.0294    bound 0.4024    transfer 0.0036    finalize 0.0117    
After pruning, left:  0

Back to Regular BaB


Properties batch 5, size 1
Remaining timeout: 196.6443371772766
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 196.64426517486572
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 196.64424085617065
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 196.64403128623962
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 3.3561 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 99, vnnlib ID: 99 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-36.47071838, -37.50796127, -33.32374573, -34.24576187, -33.47919083,
         -34.88409805, -32.65712357, -35.79407501, -37.16398621, -37.08315277]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1720]; unstable size 1720; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 423, 1, 1720] with unstable size 422 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 32, 1, 1720] with unstable size 31 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1720] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [422]; unstable size 422; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 32, 1, 422] with unstable size 31 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 422] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [31]; unstable size 31; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.07931232, 3.36409092, 0.21817631, 0.90646470, 0.39887971, 1.50427270,
         2.29552174, 3.43513083, 2.88395786]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0397 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 100, vnnlib ID: 100 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-34.14896393, -35.80829620, -30.90149879, -30.84393692, -30.56109619,
         -30.75483704, -32.71432114, -31.38027954, -35.92918777, -34.81771088]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1503]; unstable size 1503; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 84, 1, 1503] with unstable size 83 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 44, 1, 1503] with unstable size 43 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1503] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [673]; unstable size 673; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 44, 1, 673] with unstable size 43 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 673] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [43]; unstable size 43; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 43] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.84733909,  2.36650801, -1.38065577, -1.47729659, -0.29457140,
          0.40620613, -1.31243265,  2.59831762,  1.76269555]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-34.14896393, -35.80829620, -30.90149879, -30.84393692, -30.56109619,
         -30.75483704, -32.71432114, -31.38027954, -35.92918777, -34.81771088]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-34.14896011, -35.80829239, -30.90149689, -30.84393883, -30.56109428,
          -30.75483894, -32.71432114, -31.38028145, -35.92918396, -34.81771088],
         [-34.14896011, -35.80829239, -30.90149689, -30.84393883, -30.56109428,
          -30.75483894, -32.71432114, -31.38028145, -35.92918396, -34.81771088]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.05755806, -0.28284454, -0.08909988,  0.53634262]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]],


         [[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]],


         [[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]],


         [[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0483 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 101, vnnlib ID: 101 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-62.77455521, -66.65770721, -67.22808075, -68.38772583, -67.48366547,
         -69.06375885, -69.44602966, -69.80056000, -61.50294495, -65.89199066]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1701]; unstable size 1701; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 409, 1, 1701] with unstable size 408 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 29, 1, 1701] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1701] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [408]; unstable size 408; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 29, 1, 408] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 408] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [28]; unstable size 28; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.28343064, 3.80186605, 3.98758841, 5.34658527, 4.22654295, 5.93363667,
         6.30144691, 6.33828497, 3.23874140]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0362 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 102, vnnlib ID: 102 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-60.72018814, -64.57864380, -57.41277695, -58.99687576, -57.78982925,
         -59.09402466, -60.24190521, -60.17395782, -61.96921921, -63.53029633]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1476]; unstable size 1476; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 85, 1, 1476] with unstable size 84 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 29, 1, 1476] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1476] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [621]; unstable size 621; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 29, 1, 621] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 621] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [28]; unstable size 28; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.62146366,  4.73687983, -1.02857602,  0.13364577,  0.21131301,
          1.14124918,  1.10334039,  2.63701010,  3.66951799]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-60.72018814, -64.57864380, -57.41277695, -58.99687576, -57.78982925,
         -59.09402466, -60.24190521, -60.17395782, -61.96921921, -63.53029633]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-60.72018814, -64.57864380, -57.41277695, -58.99687576, -57.78982925,
          -59.09402466, -60.24190521, -60.17395782, -61.96921921, -63.53029633]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.37705231]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.05873048,  1.48730183,  1.43968284,  ...,  1.12222254,
             0.82063496,  1.02698421],
           [ 1.29682565,  1.50317490,  1.55079389,  ...,  0.70952386,
             1.01111114,  1.37619078],
           [ 1.24920666,  1.50317490,  1.63015902,  ...,  0.58253974,
             1.04285717,  1.15396857],
           ...,
           [ 0.47142863,  0.64603180,  0.37619054,  ..., -0.35396814,
            -0.43333322, -0.44920623],
           [ 0.23333341,  0.42380959,  0.28095245,  ..., -0.48095238,
            -0.44920623, -0.52857143],
           [ 0.15396833,  0.32857150,  0.21746039,  ..., -0.49682540,
            -0.44920623, -0.54444444]],

          [[ 1.06280196,  1.51368785,  1.48148179,  ...,  1.07890511,
             0.78904998,  0.99838978],
           [ 1.32045114,  1.52979100,  1.57810009,  ...,  0.66022551,
             0.98228669,  1.35265732],
           [ 1.27214205,  1.52979100,  1.67471850,  ...,  0.54750413,
             0.99838978,  1.11111140],
           ...,
           [ 0.43478271,  0.61191636,  0.32206130,  ..., -0.48309177,
            -0.49919480, -0.49919480],
           [ 0.20933989,  0.40257660,  0.24154601,  ..., -0.56360704,
            -0.51529789, -0.57971013],
           [ 0.11272153,  0.30595824,  0.17713377,  ..., -0.56360704,
            -0.51529789, -0.61191624]],

          [[ 0.99100471,  1.36581755,  1.29085493,  ...,  0.76611710,
             0.54122955,  0.73613209],
           [ 1.20089996,  1.35082495,  1.36581755,  ...,  0.37631202,
             0.75112462,  1.11094475],
           [ 1.12593722,  1.33583248,  1.41079497,  ...,  0.24137947,
             0.79610211,  0.91604215],
           ...,
           [ 0.07646193,  0.25637197,  0.06146942,  ..., -0.52323836,
            -0.61319339, -0.61319339],
           [-0.16341813,  0.01649191, -0.07346311,  ..., -0.62818587,
            -0.59820086, -0.64317840],
           [-0.25337315, -0.11844061, -0.16341813,  ..., -0.62818587,
            -0.58320838, -0.65817088]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0413 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 103, vnnlib ID: 103 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-23.73739624, -27.25483322, -19.74769402, -23.04071808, -19.31443596,
         -23.07445335, -21.48899269, -23.01406288, -25.99716759, -27.14100075]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1708]; unstable size 1708; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 54, 1, 1708] with unstable size 53 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 35, 1, 1708] with unstable size 34 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1708] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [514]; unstable size 514; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 35, 1, 514] with unstable size 34 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 514] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [34]; unstable size 34; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 34] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.22602463, 6.73693323, 0.05888748, 3.04410338, 3.07713747, 1.13142192,
         2.84612799, 5.79341793, 6.76589060]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0360 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 104, vnnlib ID: 104 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-38.59510422, -41.69892502, -37.10548019, -36.78110504, -37.83023453,
         -35.73198700, -39.43843079, -38.04397202, -41.30195999, -41.24199677]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1528]; unstable size 1528; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 84, 1, 1528] with unstable size 83 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 44, 1, 1528] with unstable size 43 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1528] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [686]; unstable size 686; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 44, 1, 686] with unstable size 43 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 686] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [43]; unstable size 43; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 43] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.10714030, 3.07718658, 0.30163670, 0.83472884, 0.94052649, 2.31545091,
         0.87444067, 3.15677953, 2.48604655]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0367 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 105, vnnlib ID: 105 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-37.40053177, -40.28186798, -35.55488205, -36.70278549, -36.19623947,
         -36.90448761, -37.05190659, -36.89894104, -38.05983353, -39.66683960]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1558]; unstable size 1558; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 84, 1, 1558] with unstable size 83 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 43, 1, 1558] with unstable size 42 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1558] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [646]; unstable size 646; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 43, 1, 646] with unstable size 42 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 646] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [42]; unstable size 42; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 42] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.28264451,  0.57399619, -2.50431538, -1.38977456, -1.82276440,
         -1.19711065, -1.08628273, -1.01294088,  0.23761261]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-37.40053177, -40.28186798, -35.55488205, -36.70278549, -36.19623947,
         -36.90448761, -37.05190659, -36.89894104, -38.05983353, -39.66683960]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-37.40052795, -40.28186798, -35.55487823, -36.70278549, -36.19623947,
          -36.90447998, -37.05190277, -36.89894485, -38.05982971, -39.66683960],
         [-37.40052795, -40.28186798, -35.55487823, -36.70278549, -36.19623947,
          -36.90447998, -37.05190277, -36.89894485, -38.05982971, -39.66683960]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.50158310, -1.34406662, -0.19615936, -0.70270538,  0.00553513,
           0.15295792,  1.16088486]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         ...,


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]]]], device='cuda:0') torch.Size([1, 7, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0519 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 106, vnnlib ID: 106 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-54.29871750, -52.69551849, -56.80072403, -57.98298264, -57.24283218,
         -58.72964478, -58.07186508, -58.55930328, -52.88463593, -54.53328705]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1467]; unstable size 1467; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 85, 1, 1467] with unstable size 84 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 34, 1, 1467] with unstable size 33 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1467] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [567]; unstable size 567; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 34, 1, 567] with unstable size 33 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 567] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [33]; unstable size 33; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.29504585,  1.74570656,  2.78946781,  1.80564213,  3.43534994,
          2.88651276,  2.87172699, -1.70118761,  0.54212451]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-54.29871750, -52.69551849, -56.80072403, -57.98298264, -57.24283218,
         -58.72964478, -58.07186508, -58.55930328, -52.88463593, -54.53328705]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-52.95393753, -52.00519943, -55.37104034, -56.66461563, -55.76719284,
          -57.41325378, -56.79220200, -57.14434052, -51.33675385, -53.58268738],
         [-52.95393753, -52.00519943, -55.37104034, -56.66461563, -55.76719284,
          -57.41325378, -56.79220200, -57.14434052, -51.33675385, -53.58268738]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.94873810, -0.66844559]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0062 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0429 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 107, vnnlib ID: 107 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-54.96462631, -60.47603989, -58.07621002, -60.06776810, -58.03663635,
         -60.11645508, -60.53408051, -58.77461243, -56.76296234, -59.91695404]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1340]; unstable size 1340; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 74, 1, 1340] with unstable size 73 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 38, 1, 1340] with unstable size 37 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1340] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [623]; unstable size 623; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 38, 1, 623] with unstable size 37 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 623] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [37]; unstable size 37; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 37] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.62970138, 1.86259007, 3.57444763, 1.56869292, 3.57276320, 3.90060592,
         2.09328890, 0.24989629, 3.31537199]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0363 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 108, vnnlib ID: 108 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-42.87492752, -43.44275665, -39.84105301, -39.24934387, -38.85487366,
         -39.74973297, -38.77320099, -40.10695648, -44.00919342, -42.48444366]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1632]; unstable size 1632; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 84, 1, 1632] with unstable size 83 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 35, 1, 1632] with unstable size 34 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1632] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [646]; unstable size 646; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 35, 1, 646] with unstable size 34 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 646] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [34]; unstable size 34; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 34] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.07217050,  2.07297468, -0.26580286, -1.44039571,  0.35686034,
         -1.22587717, -0.44078180,  2.68315601,  1.28025734]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-42.87492752, -43.44275665, -39.84105301, -39.24934387, -38.85487366,
         -39.74973297, -38.77320099, -40.10695648, -44.00919342, -42.48444366]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-42.87493134, -43.44275665, -39.84106064, -39.24934006, -38.85487366,
          -39.74972916, -38.77320099, -40.10695648, -44.00919724, -42.48444366],
         [-42.87493134, -43.44275665, -39.84106064, -39.24934006, -38.85487366,
          -39.74972916, -38.77320099, -40.10695648, -44.00919724, -42.48444366]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.59172058, -0.39446640, -0.47613907,  0.85761642]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-0.97301590, -1.03650784, -1.13174593,  ..., -0.84603173,
            -0.46507925, -0.29047608],
           [-0.97301590, -1.03650784, -1.14761901,  ..., -0.94126981,
            -0.41746020, -0.03650784],
           [-0.95714283, -1.02063489, -1.13174593,  ..., -1.06825387,
            -0.25873005,  0.09047628],
           ...,
           [-0.43333322,  0.15396833,  0.13809532,  ..., -1.63968253,
            -0.83015871, -0.09999990],
           [-0.16349196,  0.10634929, -0.13174593,  ..., -1.40158725,
            -0.79841268, -0.09999990],
           [-0.06825387,  0.05873025,  0.09047628,  ..., -1.00476182,
            -0.73492062, -0.09999990]],

          [[-1.49758446, -1.52979064, -1.54589367,  ..., -1.12721407,
            -0.88566822, -0.77294683],
           [-1.49758446, -1.52979064, -1.57809973,  ..., -1.20772946,
            -0.82125598, -0.53140092],
           [-1.48148143, -1.49758446, -1.54589367,  ..., -1.35265696,
            -0.64412236, -0.40257636],
           ...,
           [-1.11111104, -0.37037024, -0.48309177,  ..., -1.78743970,
            -0.90177131, -0.28985494],
           [-0.90177131, -0.43478248, -0.75684375,  ..., -1.64251208,
            -0.88566822, -0.27375188],
           [-0.83735907, -0.49919480, -0.51529789,  ..., -1.35265696,
            -0.83735907, -0.25764883]],

          [[-0.23838064, -0.38830581, -0.40329832,  ..., -1.00299859,
            -1.03298354, -1.03298354],
           [-0.25337315, -0.40329832, -0.43328333,  ..., -1.06296861,
            -0.95802099, -0.80809593],
           [-0.23838064, -0.37331331, -0.41829082,  ..., -1.22788620,
            -0.76311839, -0.68815589],
           ...,
           [ 0.07646193, -0.01349309, -0.44827583,  ..., -1.07796109,
            -0.67316341, -0.35832080],
           [ 0.25637197, -0.07346311, -0.65817088,  ..., -0.86806595,
            -0.64317840, -0.34332830],
           [ 0.31634200, -0.04347810, -0.29835078,  ..., -0.52323836,
            -0.58320838, -0.34332830]]],


         [[[-0.97301590, -1.03650784, -1.13174593,  ..., -0.84603173,
            -0.46507925, -0.29047608],
           [-0.97301590, -1.03650784, -1.14761901,  ..., -0.94126981,
            -0.41746020, -0.03650784],
           [-0.95714283, -1.02063489, -1.13174593,  ..., -1.06825387,
            -0.25873005,  0.09047628],
           ...,
           [-0.43333322,  0.15396833,  0.13809532,  ..., -1.63968253,
            -0.83015871, -0.09999990],
           [-0.16349196,  0.10634929, -0.13174593,  ..., -1.40158725,
            -0.79841268, -0.09999990],
           [-0.06825387,  0.05873025,  0.09047628,  ..., -1.00476182,
            -0.73492062, -0.09999990]],

          [[-1.49758446, -1.52979064, -1.54589367,  ..., -1.12721407,
            -0.88566822, -0.77294683],
           [-1.49758446, -1.52979064, -1.57809973,  ..., -1.20772946,
            -0.82125598, -0.53140092],
           [-1.48148143, -1.49758446, -1.54589367,  ..., -1.35265696,
            -0.64412236, -0.40257636],
           ...,
           [-1.11111104, -0.37037024, -0.48309177,  ..., -1.78743970,
            -0.90177131, -0.28985494],
           [-0.90177131, -0.43478248, -0.75684375,  ..., -1.64251208,
            -0.88566822, -0.27375188],
           [-0.83735907, -0.49919480, -0.51529789,  ..., -1.35265696,
            -0.83735907, -0.25764883]],

          [[-0.23838064, -0.38830581, -0.40329832,  ..., -1.00299859,
            -1.03298354, -1.03298354],
           [-0.25337315, -0.40329832, -0.43328333,  ..., -1.06296861,
            -0.95802099, -0.80809593],
           [-0.23838064, -0.37331331, -0.41829082,  ..., -1.22788620,
            -0.76311839, -0.68815589],
           ...,
           [ 0.07646193, -0.01349309, -0.44827583,  ..., -1.07796109,
            -0.67316341, -0.35832080],
           [ 0.25637197, -0.07346311, -0.65817088,  ..., -0.86806595,
            -0.64317840, -0.34332830],
           [ 0.31634200, -0.04347810, -0.29835078,  ..., -0.52323836,
            -0.58320838, -0.34332830]]],


         [[[-0.97301590, -1.03650784, -1.13174593,  ..., -0.84603173,
            -0.46507925, -0.29047608],
           [-0.97301590, -1.03650784, -1.14761901,  ..., -0.94126981,
            -0.41746020, -0.03650784],
           [-0.95714283, -1.02063489, -1.13174593,  ..., -1.06825387,
            -0.25873005,  0.09047628],
           ...,
           [-0.43333322,  0.15396833,  0.13809532,  ..., -1.63968253,
            -0.83015871, -0.09999990],
           [-0.16349196,  0.10634929, -0.13174593,  ..., -1.40158725,
            -0.79841268, -0.09999990],
           [-0.06825387,  0.05873025,  0.09047628,  ..., -1.00476182,
            -0.73492062, -0.09999990]],

          [[-1.49758446, -1.52979064, -1.54589367,  ..., -1.12721407,
            -0.88566822, -0.77294683],
           [-1.49758446, -1.52979064, -1.57809973,  ..., -1.20772946,
            -0.82125598, -0.53140092],
           [-1.48148143, -1.49758446, -1.54589367,  ..., -1.35265696,
            -0.64412236, -0.40257636],
           ...,
           [-1.11111104, -0.37037024, -0.48309177,  ..., -1.78743970,
            -0.90177131, -0.28985494],
           [-0.90177131, -0.43478248, -0.75684375,  ..., -1.64251208,
            -0.88566822, -0.27375188],
           [-0.83735907, -0.49919480, -0.51529789,  ..., -1.35265696,
            -0.83735907, -0.25764883]],

          [[-0.23838064, -0.38830581, -0.40329832,  ..., -1.00299859,
            -1.03298354, -1.03298354],
           [-0.25337315, -0.40329832, -0.43328333,  ..., -1.06296861,
            -0.95802099, -0.80809593],
           [-0.23838064, -0.37331331, -0.41829082,  ..., -1.22788620,
            -0.76311839, -0.68815589],
           ...,
           [ 0.07646193, -0.01349309, -0.44827583,  ..., -1.07796109,
            -0.67316341, -0.35832080],
           [ 0.25637197, -0.07346311, -0.65817088,  ..., -0.86806595,
            -0.64317840, -0.34332830],
           [ 0.31634200, -0.04347810, -0.29835078,  ..., -0.52323836,
            -0.58320838, -0.34332830]]],


         [[[-0.97301590, -1.03650784, -1.13174593,  ..., -0.84603173,
            -0.46507925, -0.29047608],
           [-0.97301590, -1.03650784, -1.14761901,  ..., -0.94126981,
            -0.41746020, -0.03650784],
           [-0.95714283, -1.02063489, -1.13174593,  ..., -1.06825387,
            -0.25873005,  0.09047628],
           ...,
           [-0.43333322,  0.15396833,  0.13809532,  ..., -1.63968253,
            -0.83015871, -0.09999990],
           [-0.16349196,  0.10634929, -0.13174593,  ..., -1.40158725,
            -0.79841268, -0.09999990],
           [-0.06825387,  0.05873025,  0.09047628,  ..., -1.00476182,
            -0.73492062, -0.09999990]],

          [[-1.49758446, -1.52979064, -1.54589367,  ..., -1.12721407,
            -0.88566822, -0.77294683],
           [-1.49758446, -1.52979064, -1.57809973,  ..., -1.20772946,
            -0.82125598, -0.53140092],
           [-1.48148143, -1.49758446, -1.54589367,  ..., -1.35265696,
            -0.64412236, -0.40257636],
           ...,
           [-1.11111104, -0.37037024, -0.48309177,  ..., -1.78743970,
            -0.90177131, -0.28985494],
           [-0.90177131, -0.43478248, -0.75684375,  ..., -1.64251208,
            -0.88566822, -0.27375188],
           [-0.83735907, -0.49919480, -0.51529789,  ..., -1.35265696,
            -0.83735907, -0.25764883]],

          [[-0.23838064, -0.38830581, -0.40329832,  ..., -1.00299859,
            -1.03298354, -1.03298354],
           [-0.25337315, -0.40329832, -0.43328333,  ..., -1.06296861,
            -0.95802099, -0.80809593],
           [-0.23838064, -0.37331331, -0.41829082,  ..., -1.22788620,
            -0.76311839, -0.68815589],
           ...,
           [ 0.07646193, -0.01349309, -0.44827583,  ..., -1.07796109,
            -0.67316341, -0.35832080],
           [ 0.25637197, -0.07346311, -0.65817088,  ..., -0.86806595,
            -0.64317840, -0.34332830],
           [ 0.31634200, -0.04347810, -0.29835078,  ..., -0.52323836,
            -0.58320838, -0.34332830]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0482 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 109, vnnlib ID: 109 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-87.74843597, -94.66576385, -92.34558868, -93.80957794, -94.00844574,
         -94.27013397, -94.55897522, -95.46112061, -93.25215912, -94.51072693]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1221]; unstable size 1221; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 436, 1, 1221] with unstable size 435 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 17, 1, 1221] with unstable size 16 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1221] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [435]; unstable size 435; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 17, 1, 435] with unstable size 16 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 435] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [16]; unstable size 16; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.70868492, 3.50896621, 4.77972317, 4.81729317, 5.17187119, 5.75915718,
         6.17690086, 4.56956005, 5.53662491]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0361 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 110, vnnlib ID: 110 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-43.68027878, -45.18020630, -39.57904434, -39.23016739, -39.01101685,
         -39.88261795, -36.17600250, -42.60152817, -45.94382477, -45.76081848]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1439]; unstable size 1439; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 79, 1, 1439] with unstable size 78 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 43, 1, 1439] with unstable size 42 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1439] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [725]; unstable size 725; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 43, 1, 725] with unstable size 42 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 725] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [42]; unstable size 42; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 42] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.30845594, 6.44371319, 2.23326993, 2.14850879, 1.68090177, 2.70550394,
         4.22551966, 7.24234533, 7.03888798]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0360 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 111, vnnlib ID: 111 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-38.00122833, -41.11088943, -34.90349960, -36.99591827, -34.10258865,
         -36.95210266, -36.36138916, -35.95611572, -40.24463272, -40.98361206]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1468]; unstable size 1468; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 68, 1, 1468] with unstable size 67 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 40, 1, 1468] with unstable size 39 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1468] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [576]; unstable size 576; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 40, 1, 576] with unstable size 39 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 576] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [39]; unstable size 39; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 39] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.39612818, 4.74185276, 0.19505599, 2.13249016, 2.07046032, 1.14083111,
         0.85708427, 4.37273407, 4.76628208]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0349 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 112, vnnlib ID: 112 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-41.10064316, -39.86020279, -41.28458786, -40.56890869, -42.61996460,
         -41.08871841, -41.97505569, -41.16056061, -39.51630783, -37.69972992]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1334]; unstable size 1334; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 494, 1, 1334] with unstable size 493 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 31, 1, 1334] with unstable size 30 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1334] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [493]; unstable size 493; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 31, 1, 493] with unstable size 30 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 493] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [30]; unstable size 30; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.01552272, 1.36120915, 1.76898909, 1.24654150, 3.04496098, 1.74727678,
         2.35995150, 1.76100302, 0.27769327]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0370 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 113, vnnlib ID: 113 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-45.78093338, -44.38280487, -42.55995941, -40.12811279, -42.69952774,
         -40.20749664, -43.49580383, -42.58388138, -46.78657913, -44.10601044]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1554]; unstable size 1554; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 85, 1, 1554] with unstable size 84 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 30, 1, 1554] with unstable size 29 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1554] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [572]; unstable size 572; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 30, 1, 572] with unstable size 29 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 572] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [29]; unstable size 29; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.95039272,  2.07834625,  1.29301310,  1.66923809, -0.06227976,
          2.21208072,  1.31477535,  4.64617634,  2.04582310]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-45.78093338, -44.38280487, -42.55995941, -40.12811279, -42.69952774,
         -40.20749664, -43.49580383, -42.58388138, -46.78657913, -44.10601044]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.30it/s]100%|██████████| 1/1 [00:00<00:00,  8.30it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-45.38922501, -44.00874710, -42.14824677, -39.62038040, -42.30329514,
          -39.63512039, -43.19920731, -42.04190063, -46.39810562, -43.60517883]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.01473999]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1233 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 19.667545318603516
alpha/beta optimization time: 1.4597153663635254
initial alpha-crown bounds: tensor([[ 4.01741791,  2.17162609,  1.34126568,  1.71406507, -0.05709559,
          2.25219035,  1.37498951,  4.72641611,  2.12667155]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.05709558725357056
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.37801265716553
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.37797474861145
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.37795114517212
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.37792944908142
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.37790966033936
Verifying property 4 with 1 instances.
##### Instance 113 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.05709559]], device='cuda:0') need to verify.
Model prediction is: tensor([-45.78093338, -44.38280487, -42.55995941, -40.12811279, -42.69952774,
        -40.20749664, -43.49580383, -42.58388138, -46.78657913, -44.10601044],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.05709559]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1554
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 568
Node /39 input 0: size torch.Size([250]) unstable 28
-----------------
# of unstable neurons: 2150
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00011181831359863281
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05708634853363037
10 lb beta sum: 0.0, worst -0.05708664655685425
Time: prepare 0.0002    bound 0.1233    transfer 0.0001    finalize 0.0002    func 0.1239    
Accumulated time: func 0.1239    prepare 0.0002    bound 0.1233    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 248] 
split level 1: [/input-16, 171] 
split level 2: [/input-12, 7315] 
split level 3: [/input-12, 7316] 
split level 4: [/input-16, 7] 
split level 5: [/input-16, 41] 
split level 6: [/input-16, 230] 
split level 7: [/input-16, 84] 
split level 8: [/input-16, 73] 
split level 9: [/input-16, 18] 
split level 10: [/input-16, 166] 
split level 11: [/input-12, 8003] 
split level 12: [/input-16, 104] 
split level 13: [/input-12, 3149] 
split level 14: [/input-16, 24] 
split level 15: [/input-12, 4891] 
split level 16: [/input-16, 13] 
split level 17: [/input-12, 5531] 
split level 18: [/input-12, 8002] 
split level 19: [/input-12, 3396] 
split level 20: [/input-12, 969] 
split level 21: [/input-12, 1756] 
split level 22: [/input-12, 4555] 
split level 23: [/input-12, 5386] 
split level 24: [/input-12, 3428] 
split level 25: [/input-12, 970] 
split level 26: [/input-12, 2330] 
split level 27: [/input-12, 2866] 
split level 28: [/input-12, 3168] 
split level 29: [/input-12, 2338] 
split level 30: [/input-12, 4756] 
split level 31: [/input-12, 5259] 
split level 32: [/input-12, 8004] 
split level 33: [/input-12, 3141] 
split level 34: [/input-12, 2266] 
split level 35: [/input-12, 1046] 
split level 36: [/input-12, 3397] 
split level 37: [/input-12, 3140] 
split level 38: [/input-12, 2005] 
split level 39: [/input-12, 1044] 
split level 40: [/input-12, 7626] 
split level 41: [/input-4, 5464] 
split level 42: [/input-12, 1037] 
split level 43: [/input-12, 3153] 
split level 44: [/input-12, 7333] 
split level 45: [/input-4, 6360] 
split level 46: [/input-12, 7458] 
split level 47: [/input-4, 6426] 
split level 48: [/input-12, 473] 
split level 49: [/input-12, 3427] 
split level 50: [/input-12, 8027] 
split level 51: [/input-12, 1545] 
split level 52: [/input-12, 2571] 
split level 53: [/input-12, 5939] 
split level 54: [/input-12, 453] 
split level 55: [/input-12, 7651] 
split level 56: [/input-4, 4710] 
split level 57: [/input-12, 8020] 
split level 58: [/input-12, 456] 
split level 59: [/input-12, 5388] 
split level 60: [/input-12, 1764] 
split level 61: [/input-12, 4365] 
split level 62: [/input-12, 1715] 
split level 63: [/input-12, 3484] 
split level 64: [/input-12, 4380] 
split level 65: [/input-12, 1731] 
split level 66: [/input-12, 461] 
split level 67: [/input-12, 2909] 
split level 68: [/input-12, 2453] 
split level 69: [/input-12, 842] 
split level 70: [/input-12, 2447] 
split level 71: [/input-12, 5377] 
split level 72: [/input-4, 1127] 
split level 73: [/input-4, 4839] 
split level 74: [/input-12, 2513] 
split level 75: [/input-4, 7719] 
split level 76: [/input-12, 3490] 
split level 77: [/input-12, 2585] 
split level 78: [/input-12, 7451] 
split level 79: [/input-16, 211] 
split level 80: [/input-4, 3175] 
split level 81: [/input-12, 1708] 
split level 82: [/input-12, 462] 
split level 83: [/input-12, 2867] 
split level 84: [/input-4, 4711] 
split level 85: [/input-4, 6680] 
split level 86: [/input-12, 1828] 
split level 87: [/input-12, 347] 
split level 88: [/input-4, 6679] 
split level 89: [/input-12, 2907] 
split level 90: [/input-12, 6864] 
split level 91: [/input-12, 7170] 
split level 92: [/input-4, 278] 
split level 93: [/input-12, 3174] 
split level 94: [/input-12, 7210] 
split level 95: [/input-4, 1109] 
split level 96: [/input-12, 5341] 
split level 97: [/input-4, 1096] 
split level 98: [/input-4, 3625] 
split level 99: [/input-12, 1818] 
split level 100: [/input-12, 2281] 
split level 101: [/input-4, 2903] 
split level 102: [/input-12, 3498] 
split level 103: [/input-4, 3926] 
split level 104: [/input-12, 7473] 
split level 105: [/input-4, 5684] 
split level 106: [/input-4, 4392] 
split level 107: [/input-12, 6812] 
split level 108: [/input-4, 4696] 
split level 109: [/input-12, 3499] 
split level 110: [/input-12, 1941] 
split level 111: [/input-4, 4391] 
split level 112: [/input-4, 2890] 
split level 113: [/input-4, 6506] 
split level 114: [/input-4, 5449] 
split level 115: [/input-12, 1837] 
split level 116: [/input-4, 5080] 
split level 117: [/input-12, 2299] 
split level 118: [/input-4, 6681] 
split level 119: [/input-4, 4376] 
split level 120: [/input-4, 6428] 
split level 121: [/input-4, 2855] 
split level 122: [/input-12, 625] 
split level 123: [/input-12, 1153] 
split level 124: [/input-4, 6425] 
split level 125: [/input-4, 6678] 
split level 126: [/input-4, 4933] 
split level 127: [/input-4, 2166] 
split level 128: [/input-12, 6236] 
split level 129: [/input-12, 4461] 
split level 130: [/input-4, 6263] 
split level 131: [/input-12, 1775] 
split level 132: [/input-12, 2540] 
split level 133: [/input-12, 1757] 
split level 134: [/input-12, 3122] 
split level 135: [/input-12, 5132] 
split level 136: [/input-4, 2856] 
split level 137: [/input-12, 5529] 
split level 138: [/input-4, 6698] 
split level 139: [/input-12, 2354] 
split level 140: [/input-12, 2455] 
split level 141: [/input-12, 2868] 
split level 142: [/input-4, 6682] 
split level 143: [/input-12, 2511] 
split level 144: [/input-12, 6242] 
split level 145: [/input-12, 7650] 
split level 146: [/input-12, 1242] 
split level 147: [/input-12, 3424] 
split level 148: [/input-4, 6245] 
split level 149: [/input-12, 825] 
split level 150: [/input-4, 3656] 
split level 151: [/input-12, 79] 
split level 152: [/input-12, 4382] 
split level 153: [/input-4, 3642] 
split level 154: [/input-4, 7720] 
split level 155: [/input-12, 5193] 
split level 156: [/input-12, 1002] 
split level 157: [/input-4, 6201] 
split level 158: [/input-4, 6294] 
split level 159: [/input-12, 470] 
split level 160: [/input-12, 366] 
split level 161: [/input-4, 37] 
split level 162: [/input-12, 1422] 
split level 163: [/input-4, 2133] 
split level 164: [/input-12, 4739] 
split level 165: [/input-12, 6760] 
split level 166: [/input-4, 38] 
split level 167: [/input-12, 5166] 
split level 168: [/input-4, 4457] 
split level 169: [/input-12, 2501] 
split level 170: [/input-4, 5417] 
split level 171: [/input-4, 5281] 
split level 172: [/input-4, 5702] 
split level 173: [/input-4, 2839] 
split level 174: [/input-4, 6279] 
split level 175: [/input-12, 6265] 
split level 176: [/input-12, 1154] 
split level 177: [/input-12, 7709] 
split level 178: [/input-4, 4011] 
split level 179: [/input-4, 2858] 
split level 180: [/input-4, 2151] 
split level 181: [/input-4, 4745] 
split level 182: [/input-4, 40] 
split level 183: [/input-12, 5167] 
split level 184: [/input-12, 5173] 
split level 185: [/input-4, 4969] 
split level 186: [/input-4, 6427] 
split level 187: [/input-4, 75] 
split level 188: [/input-4, 6443] 
split level 189: [/input-12, 2543] 
split level 190: [/input-4, 3799] 
split level 191: [/input-4, 4838] 
split level 192: [/input-4, 6326] 
split level 193: [/input-12, 2329] 
split level 194: [/input-4, 5434] 
split level 195: [/input-4, 6683] 
split level 196: [/input-4, 59] 
split level 197: [/input-4, 6710] 
split level 198: [/input-4, 6444] 
split level 199: [/input-12, 1433] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05708619952201843
10 lb beta sum: 0.0, worst -0.057086288928985596
Time: prepare 0.0117    bound 0.1340    transfer 0.0048    finalize 0.0102    func 0.1633    
Accumulated time: func 0.2872    prepare 0.0219    bound 0.2574    transfer 0.0049    finalize 0.0104    
all_split False
======================Cut inference begins======================
max lb tensor(0.00798362) min lb tensor(-0.05708614)
Number of Verified Splits: 1 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.010656118392944336 
BICCOS Cumulative time: 0.010656118392944336
Preprocessing time: 0.010008096694946289 Inference time: 7.677078247070312e-05 Add cuts time: 3.910064697265625e-05 Cut analysis time: 0.0005321502685546875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05560 (1), -0.05554 (1), -0.05552 (1), -0.05543 (1), -0.05542 (1), -0.05541 (1), -0.05536 (1), -0.05520 (1), -0.05515 (1), -0.05508 (1), -0.05493 (1), -0.05483 (1), -0.05476 (1), -0.05474 (1), -0.05467 (1), -0.05463 (1), -0.05455 (1), -0.05447 (1), -0.05445 (1), -0.05410 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7830    set_bounds 0.0092    solve 0.1634    add 0.0792    
Accumulated time: pickout 0.0003    decision 0.7830    set_bounds 0.0092    solve 0.1634    add 0.0792    
Current (lb-rhs): -0.05559656023979187
50 domains visited
Cumulative time: 1.1766760349273682

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 248] [/input-16, 171] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] 
split level 1: [/input-16, 171] [/input-16, 7] [/input-16, 171] [/input-16, 171] [/input-16, 171] [/input-16, 171] [/input-16, 171] [/input-16, 171] [/input-12, 7316] [/input-16, 171] 
split level 2: [/input-12, 7316] [/input-16, 18] [/input-12, 7316] [/input-12, 7316] [/input-12, 7316] [/input-12, 7316] [/input-12, 7316] [/input-12, 7316] [/input-16, 7] [/input-16, 7] 
split level 3: [/input-16, 7] [/input-16, 104] [/input-12, 473] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 18] [/input-16, 7] [/input-16, 18] [/input-16, 18] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05451607704162598
10 lb beta sum: 0.19138842821121216, worst -0.054444819688797
Time: prepare 0.0073    bound 0.1530    transfer 0.0016    finalize 0.0075    func 0.1719    
Accumulated time: func 0.4591    prepare 0.0294    bound 0.4103    transfer 0.0064    finalize 0.0179    
all_split False
======================Cut inference begins======================
max lb tensor(0.03520557) min lb tensor(-0.05438156)
Number of Verified Splits: 31 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.013490676879882812 
BICCOS Cumulative time: 0.02414679527282715
Preprocessing time: 0.011656999588012695 Inference time: 0.0012140274047851562 Add cuts time: 0.00037789344787597656 Cut analysis time: 0.00024175643920898438
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03803 (2), -0.03801 (2), -0.03790 (2), -0.03778 (2), -0.03775 (2), -0.03767 (2), -0.03745 (2), -0.03728 (2), -0.03654 (2), -0.03636 (2), -0.03627 (2), -0.03617 (2), -0.03606 (2), -0.03581 (2), -0.03562 (2), -0.03541 (2), -0.03511 (2), -0.03508 (2), -0.03447 (2), -0.03411 (2), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0252    set_bounds 0.0130    solve 0.1720    add 0.0872    
Accumulated time: pickout 0.0010    decision 0.8082    set_bounds 0.0222    solve 0.3354    add 0.1664    
Current (lb-rhs): -0.0380316823720932
100 domains visited
Cumulative time: 1.4884424209594727

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 171] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 171] 
split level 1: [/input-12, 7316] [/input-16, 171] [/input-12, 7316] [/input-16, 171] [/input-16, 171] [/input-12, 7316] [/input-16, 171] [/input-16, 171] [/input-16, 171] [/input-12, 7316] 
split level 2: [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-12, 7316] [/input-12, 7316] [/input-16, 7] [/input-16, 7] [/input-12, 7316] [/input-16, 7] [/input-16, 7] 
split level 3: [/input-12, 473] [/input-12, 473] [/input-12, 473] [/input-16, 18] [/input-16, 7] [/input-16, 18] [/input-12, 473] [/input-16, 7] [/input-16, 18] [/input-16, 18] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03666365146636963
10 lb beta sum: 0.4783201515674591, worst -0.046980902552604675
Time: prepare 0.0073    bound 0.1542    transfer 0.0016    finalize 0.0057    func 0.1715    
Accumulated time: func 0.6306    prepare 0.0369    bound 0.5645    transfer 0.0080    finalize 0.0236    
all_split False
======================Cut inference begins======================
max lb tensor(0.03426087) min lb tensor(-0.03528510)
Number of Verified Splits: 98 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 7
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.018552303314208984 
BICCOS Cumulative time: 0.04269909858703613
Preprocessing time: 0.011904239654541016 Inference time: 0.003988981246948242 Add cuts time: 0.0022554397583007812 Cut analysis time: 0.0004036426544189453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01403 (3), -0.01396 (3), -0.01389 (3), -0.01382 (3), -0.01378 (3), -0.01369 (3), -0.01363 (3), -0.01329 (3), -0.01286 (3), -0.01284 (3), -0.01281 (3), -0.01279 (3), -0.01279 (3), -0.01274 (3), -0.01273 (3), -0.01204 (3), -0.01188 (3), -0.01187 (3), -0.01176 (3), -0.01173 (3), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0254    set_bounds 0.0148    solve 0.1716    add 0.0990    
Accumulated time: pickout 0.0016    decision 0.8336    set_bounds 0.0371    solve 0.5069    add 0.2654    
Current (lb-rhs): -0.014031738042831421
150 domains visited
Cumulative time: 1.8187470436096191

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 171] [/input-16, 248] [/input-16, 248] 
split level 1: [/input-12, 7316] [/input-12, 7316] [/input-12, 7316] [/input-12, 7316] [/input-16, 171] [/input-16, 171] [/input-16, 171] [/input-12, 7316] [/input-16, 171] [/input-16, 7] 
split level 2: [/input-12, 6812] [/input-16, 7] [/input-16, 18] [/input-16, 7] [/input-12, 7316] [/input-12, 6812] [/input-12, 7316] [/input-16, 7] [/input-16, 7] [/input-16, 18] 
split level 3: [/input-12, 7709] [/input-16, 104] [/input-12, 7709] [/input-12, 7709] [/input-16, 104] [/input-12, 7709] [/input-12, 7709] [/input-16, 18] [/input-16, 104] [/input-16, 104] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.020655423402786255
10 lb beta sum: 0.6519737243652344, worst -0.0482063889503479
Time: prepare 0.0074    bound 0.1731    transfer 0.0016    finalize 0.0051    func 0.1898    
Accumulated time: func 0.8204    prepare 0.0446    bound 0.7376    transfer 0.0096    finalize 0.0287    
all_split False
======================Cut inference begins======================
max lb tensor(0.03304446) min lb tensor(-0.01403174)
Number of Verified Splits: 114 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 8
#cuts 4-6: 7
#cuts >= 20: 0
BICCOS time: 0.020172119140625 
BICCOS Cumulative time: 0.06287121772766113
Preprocessing time: 0.011647701263427734 Inference time: 0.0055294036865234375 Add cuts time: 0.0024275779724121094 Cut analysis time: 0.0005674362182617188
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00508 (4), -0.00508 (4), -0.00506 (4), -0.00505 (4), -0.00504 (4), -0.00504 (4), -0.00501 (4), -0.00501 (4), -0.00493 (4), -0.00487 (4), -0.00465 (4), -0.00458 (4), -0.00458 (4), -0.00440 (4), -0.00438 (4), -0.00436 (4), -0.00431 (4), -0.00426 (4), -0.00414 (4), -0.00413 (4), 
Length of domains: 50
Time: pickout 0.0007    decision 0.0272    set_bounds 0.0153    solve 0.1899    add 0.2411    
Accumulated time: pickout 0.0023    decision 0.8608    set_bounds 0.0523    solve 0.6968    add 0.5065    
Current (lb-rhs): -0.00507664680480957
200 domains visited
Cumulative time: 2.313377857208252

Shallow-BaB round 5
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] 
split level 1: [/input-16, 7] [/input-16, 171] [/input-12, 7316] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-12, 7316] [/input-16, 18] [/input-16, 18] [/input-16, 18] 
split level 2: [/input-16, 104] [/input-16, 104] [/input-16, 7] [/input-16, 104] [/input-16, 104] [/input-16, 104] [/input-16, 7] [/input-16, 104] [/input-16, 104] [/input-16, 104] 
split level 3: [/input-12, 7709] [/input-12, 7709] [/input-16, 104] [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 104] [/input-16, 13] [/input-16, 13] [/input-16, 13] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.012914001941680908
10 lb beta sum: 0.7215186953544617, worst -0.04664212465286255
Time: prepare 0.0075    bound 0.1729    transfer 0.0016    finalize 0.0051    func 0.1904    
Accumulated time: func 1.0108    prepare 0.0524    bound 0.9105    transfer 0.0112    finalize 0.0338    
all_split False
======================Cut inference begins======================
max lb tensor(0.03064856) min lb tensor(-0.00506234)
Number of Verified Splits: 200 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 8
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.02713298797607422 
BICCOS Cumulative time: 0.09000420570373535
Preprocessing time: 0.011768341064453125 Inference time: 0.01030278205871582 Add cuts time: 0.004197597503662109 Cut analysis time: 0.0008642673492431641
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00296 (5), -0.00294 (5), -0.00291 (5), -0.00287 (5), -0.00286 (5), -0.00281 (5), -0.00273 (5), -0.00273 (5), -0.00272 (5), -0.00258 (5), -0.00258 (5), -0.00253 (5), -0.00249 (5), -0.00249 (5), -0.00248 (5), -0.00248 (5), -0.00244 (5), -0.00239 (5), -0.00228 (5), -0.00225 (5), 
Length of domains: 50
Time: pickout 0.0007    decision 0.0257    set_bounds 0.0154    solve 0.1905    add 0.1116    
Accumulated time: pickout 0.0030    decision 0.8865    set_bounds 0.0677    solve 0.8873    add 0.6181    
Current (lb-rhs): -0.002959340810775757
250 domains visited
Cumulative time: 2.684638261795044

Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 41,   7, 248]), tensor([-1., -1., -1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  1.55558456e-02,  4.22191471e-02]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 41,   7, 248]), tensor([-1., -1.,  1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  1.55558456e-02,  8.66921432e-03]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 41,   7,  18, 104, 248]), tensor([-1.,  1., -1., -1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([-1.26703658e+34,  2.54704221e-03,  1.49907041e-02,  1.71844824e-03,
         3.38795036e-02]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 41,   7,  18, 104, 248]), tensor([-1.,  1., -1., -1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([-1.26703658e+34,  2.54704221e-03,  1.49907041e-02,  1.71844824e-03,
         1.19446381e-03]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 41,   7,  18, 104, 248]), tensor([-1.,  1., -1.,  1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([-1.26703658e+34,  2.54704221e-03,  1.49907041e-02,  1.90638169e-03,
         3.42959613e-02]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 41,   7,  18, 104, 248]), tensor([-1.,  1., -1.,  1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([-1.26703658e+34,  2.54704221e-03,  1.49907041e-02,  1.90638169e-03,
         9.99999997e-07]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 41,   7,  18, 248]), tensor([-1.,  1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([-1.26703658e+34,  2.54704221e-03,  8.92822631e-03,  3.50350887e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 41,   7,  18, 248]), tensor([-1.,  1.,  1.,  1.]), tensor([0, 0, 0, 0]), tensor([-1.26703658e+34,  2.54704221e-03,  8.92822631e-03,  9.31011280e-04]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([41]), tensor([1.]), tensor([0]), tensor([-1.26703856e+34]), tensor([0]))}
Shallow branching resets to n domains:  9
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05653342604637146
10 lb beta sum: 0.703838586807251, worst -0.06377038359642029
Time: prepare 0.0005    bound 0.1686    transfer 0.0002    finalize 0.0006    func 0.1700    
Accumulated time: func 1.1808    prepare 0.0528    bound 1.0791    transfer 0.0115    finalize 0.0344    
After pruning, left:  5

Back to Regular BaB

BaB round 1
batch: 5
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 171] [/input-16, 171] [/input-16, 171] [/input-16, 171] [/input-16, 248] 
split level 1: [/input-12, 7316] [/input-12, 7316] [/input-12, 7315] [/input-12, 7316] [/input-16, 171] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7380045056343079, worst -0.042581379413604736
10 lb beta sum: 0.7385460138320923, worst -0.0425562858581543
Time: prepare 0.0013    bound 0.1694    transfer 0.0004    finalize 0.0006    func 0.1719    
Accumulated time: func 1.3527    prepare 0.0544    bound 1.2486    transfer 0.0118    finalize 0.0349    
all_split False
======================Cut inference begins======================
max lb tensor(0.01330075) min lb tensor(-0.04254407)
Number of Verified Splits: 17 of 20
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.7162535786628723, worst -0.04164302349090576
10 lb beta sum: 0.8812417984008789, worst -0.05296635627746582
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 8
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.17926549911499023 
BICCOS Cumulative time: 0.2692697048187256
Preprocessing time: 0.0008890628814697266 Inference time: 0.17651867866516113 Add cuts time: 0.0010063648223876953 Cut analysis time: 0.0008513927459716797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04254 (2), -0.03821 (2), -0.00495 (2), 
Length of domains: 3
Time: pickout 0.0005    decision 0.0146    set_bounds 0.0018    solve 0.1719    add 0.0009    
Accumulated time: pickout 0.0035    decision 0.9011    set_bounds 0.0695    solve 1.0592    add 0.6190    
Current (lb-rhs): -0.04254406690597534
253 domains visited
Cumulative time: 3.246951103210449

BaB round 2
batch: 3
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7315] [/input-12, 7315] [/input-12, 7315] 
split level 1: [/input-12, 7316] [/input-16, 13] [/input-12, 7316] 
split level 2: [/input-16, 18] [/input-12, 7709] [/input-16, 18] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8612595796585083, worst -0.039576172828674316
10 lb beta sum: 0.8617861270904541, worst -0.03956031799316406
Time: prepare 0.0014    bound 0.1673    transfer 0.0005    finalize 0.0007    func 0.1701    
Accumulated time: func 1.5227    prepare 0.0559    bound 1.4159    transfer 0.0124    finalize 0.0356    
all_split False
======================Cut inference begins======================
max lb tensor(0.00523570) min lb tensor(-0.03955495)
Number of Verified Splits: 4 of 24
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.68516606092453, worst -0.03466606140136719

all verified at 9th iter
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 8
#cuts 4-6: 18
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.08719182014465332 
BICCOS Cumulative time: 0.3564615249633789
Preprocessing time: 0.0010154247283935547 Inference time: 0.08424663543701172 Add cuts time: 0.0009596347808837891 Cut analysis time: 0.0009701251983642578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03955 (5), -0.03514 (5), -0.03387 (5), -0.03073 (5), -0.02800 (5), -0.02702 (5), -0.02443 (5), -0.02178 (5), -0.02057 (5), -0.01882 (5), -0.01788 (5), -0.01572 (5), -0.01517 (5), -0.01092 (5), -0.01047 (5), -0.00753 (5), -0.00195 (5), -0.00181 (5), -0.00144 (5), -0.00071 (5), 
Length of domains: 20
Time: pickout 0.0004    decision 0.0136    set_bounds 0.0022    solve 0.1701    add 0.0019    
Accumulated time: pickout 0.0039    decision 0.9147    set_bounds 0.0717    solve 1.2293    add 0.6210    
Current (lb-rhs): -0.03955495357513428
273 domains visited
Cumulative time: 3.522592306137085

BaB round 3
batch: 20
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 104] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 166] [/input-16, 7] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.038457781076431274
10 lb beta sum: 0.5631462931632996, worst -0.03785640001296997
Time: prepare 0.0011    bound 0.1651    transfer 0.0003    finalize 0.0009    func 0.1677    
Accumulated time: func 1.6904    prepare 0.0572    bound 1.5809    transfer 0.0127    finalize 0.0365    
all_split False
======================Cut inference begins======================
max lb tensor(0.00620422) min lb tensor(-0.03785327)
Number of Verified Splits: 11 of 40
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04219698905944824
10 lb beta sum: 0.8068925738334656, worst -0.025690078735351562
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 8
#cuts 4-6: 18
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.17626523971557617 
BICCOS Cumulative time: 0.5327267646789551
Preprocessing time: 0.00150299072265625 Inference time: 0.17261075973510742 Add cuts time: 0.0011184215545654297 Cut analysis time: 0.0010330677032470703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03785 (6), -0.03332 (6), -0.03210 (6), -0.02908 (6), -0.02655 (6), -0.02541 (6), -0.02469 (6), -0.02317 (6), -0.02001 (6), -0.01971 (6), -0.01956 (6), -0.01819 (6), -0.01625 (6), -0.01562 (6), -0.01496 (6), -0.01441 (6), -0.01351 (6), -0.01281 (6), -0.01160 (6), -0.00895 (6), 
Length of domains: 29
Time: pickout 0.0008    decision 0.0143    set_bounds 0.0020    solve 0.1677    add 0.0015    
Accumulated time: pickout 0.0047    decision 0.9290    set_bounds 0.0736    solve 1.3970    add 0.6224    
Current (lb-rhs): -0.03785327076911926
302 domains visited
Cumulative time: 3.885352849960327

BaB round 4
batch: 29
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] [/input-16, 166] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03778746724128723
10 lb beta sum: 0.6421969532966614, worst -0.05054819583892822
Time: prepare 0.0015    bound 0.1717    transfer 0.0008    finalize 0.0012    func 0.1755    
Accumulated time: func 1.8659    prepare 0.0588    bound 1.7526    transfer 0.0135    finalize 0.0377    
all_split False
======================Cut inference begins======================
max lb tensor(0.02699809) min lb tensor(-0.03718734)
Number of Verified Splits: 24 of 58
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 7
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.005499839782714844 
BICCOS Cumulative time: 0.5382266044616699
Preprocessing time: 0.0019752979278564453 Inference time: 0.001979827880859375 Add cuts time: 0.0009980201721191406 Cut analysis time: 0.0005466938018798828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03719 (7), -0.03265 (7), -0.03153 (7), -0.02840 (7), -0.02582 (7), -0.02463 (7), -0.02449 (7), -0.02257 (7), -0.02001 (7), -0.01905 (7), -0.01861 (7), -0.01807 (7), -0.01784 (7), -0.01528 (7), -0.01475 (7), -0.01441 (7), -0.01366 (7), -0.01200 (7), -0.01184 (7), -0.01108 (7), 
Length of domains: 34
Time: pickout 0.0005    decision 0.0146    set_bounds 0.0027    solve 0.1755    add 0.0016    
Accumulated time: pickout 0.0052    decision 0.9436    set_bounds 0.0763    solve 1.5725    add 0.6241    
Current (lb-rhs): -0.03718733787536621
336 domains visited
Cumulative time: 4.08601975440979

BaB round 5
batch: 34
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 104] [/input-16, 104] [/input-16, 104] [/input-16, 104] [/input-16, 104] [/input-16, 104] [/input-16, 104] [/input-16, 104] [/input-16, 104] [/input-16, 104] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03601357340812683
10 lb beta sum: 0.575747013092041, worst -0.035415321588516235
Time: prepare 0.0016    bound 0.1687    transfer 0.0004    finalize 0.0014    func 0.1727    
Accumulated time: func 2.0385    prepare 0.0606    bound 1.9213    transfer 0.0139    finalize 0.0391    
all_split False
======================Cut inference begins======================
max lb tensor(0.00241056) min lb tensor(-0.03541416)
Number of Verified Splits: 7 of 68
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 7
#cuts 4-6: 9
#cuts >= 20: 0
BICCOS time: 0.0038988590240478516 
BICCOS Cumulative time: 0.5421254634857178
Preprocessing time: 0.0022687911987304688 Inference time: 0.0006427764892578125 Add cuts time: 0.0004284381866455078 Cut analysis time: 0.0005588531494140625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03541 (8), -0.03490 (8), -0.03086 (8), -0.03029 (8), -0.02957 (8), -0.02903 (8), -0.02665 (8), -0.02602 (8), -0.02416 (8), -0.02337 (8), -0.02286 (8), -0.02263 (8), -0.02214 (8), -0.02210 (8), -0.02082 (8), -0.02038 (8), -0.01820 (8), -0.01729 (8), -0.01718 (8), -0.01717 (8), 
Length of domains: 61
Time: pickout 0.0006    decision 0.0148    set_bounds 0.0031    solve 0.1727    add 0.0020    
Accumulated time: pickout 0.0058    decision 0.9584    set_bounds 0.0794    solve 1.7452    add 0.6261    
Current (lb-rhs): -0.035414159297943115
397 domains visited
Cumulative time: 4.2834248542785645

BaB round 6
batch: 61
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 13] [/input-16, 24] [/input-16, 13] [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 13] [/input-16, 24] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03533777594566345
10 lb beta sum: 0.5784053802490234, worst -0.04272329807281494
Time: prepare 0.0027    bound 0.1725    transfer 0.0010    finalize 0.0032    func 0.1804    
Accumulated time: func 2.2189    prepare 0.0635    bound 2.0938    transfer 0.0150    finalize 0.0423    
all_split False
======================Cut inference begins======================
max lb tensor(0.01153630) min lb tensor(-0.03474018)
Number of Verified Splits: 25 of 122
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 8
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.007866621017456055 
BICCOS Cumulative time: 0.5499920845031738
Preprocessing time: 0.003930330276489258 Inference time: 0.0023391246795654297 Add cuts time: 0.0009579658508300781 Cut analysis time: 0.0006392002105712891
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03474 (9), -0.03423 (9), -0.03019 (9), -0.02962 (9), -0.02901 (9), -0.02868 (9), -0.02594 (9), -0.02526 (9), -0.02425 (9), -0.02354 (9), -0.02309 (9), -0.02281 (9), -0.02216 (9), -0.02194 (9), -0.02173 (9), -0.02145 (9), -0.02023 (9), -0.01938 (9), -0.01913 (9), -0.01846 (9), 
Length of domains: 97
Time: pickout 0.0011    decision 0.0191    set_bounds 0.0056    solve 0.1805    add 0.0028    
Accumulated time: pickout 0.0069    decision 0.9775    set_bounds 0.0850    solve 1.9256    add 0.6288    
Current (lb-rhs): -0.034740179777145386
494 domains visited
Cumulative time: 4.500902414321899

BaB round 7
batch: 97
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 24] [/input-12, 5259] [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 24] [/input-16, 13] [/input-16, 13] [/input-16, 13] [/input-16, 13] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03473815321922302
10 lb beta sum: 0.5533731579780579, worst -0.03414046764373779
Time: prepare 0.0040    bound 0.1728    transfer 0.0011    finalize 0.0036    func 0.1828    
Accumulated time: func 2.4017    prepare 0.0677    bound 2.2666    transfer 0.0160    finalize 0.0459    
all_split False
======================Cut inference begins======================
max lb tensor(0.01061359) min lb tensor(-0.03413981)
Number of Verified Splits: 40 of 194
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 9
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.012272357940673828 
BICCOS Cumulative time: 0.5622644424438477
Preprocessing time: 0.005910634994506836 Inference time: 0.003820657730102539 Add cuts time: 0.0016455650329589844 Cut analysis time: 0.0008955001831054688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03414 (10), -0.03365 (10), -0.03052 (10), -0.03000 (10), -0.02868 (10), -0.02857 (10), -0.02836 (10), -0.02807 (10), -0.02800 (10), -0.02789 (10), -0.02542 (10), -0.02483 (10), -0.02477 (10), -0.02420 (10), -0.02247 (10), -0.02239 (10), -0.02201 (10), -0.02196 (10), -0.02180 (10), -0.02170 (10), 
Length of domains: 154
Time: pickout 0.0012    decision 0.0205    set_bounds 0.0084    solve 0.1828    add 0.0066    
Accumulated time: pickout 0.0081    decision 0.9979    set_bounds 0.0934    solve 2.1085    add 0.6354    
Current (lb-rhs): -0.034139811992645264
648 domains visited
Cumulative time: 4.7331862449646

BaB round 8
batch: 154
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 24] [/input-12, 5386] [/input-12, 5386] [/input-12, 5386] [/input-12, 5386] [/input-12, 5386] [/input-12, 5386] [/input-12, 5386] [/input-12, 5386] [/input-12, 5386] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03319138288497925
10 lb beta sum: 0.5927589535713196, worst -0.03418877720832825
Time: prepare 0.0062    bound 0.1750    transfer 0.0035    finalize 0.0110    func 0.1977    
Accumulated time: func 2.5995    prepare 0.0741    bound 2.4415    transfer 0.0195    finalize 0.0570    
all_split False
======================Cut inference begins======================
max lb tensor(0.15512037) min lb tensor(-0.03259259)
Number of Verified Splits: 24 of 308
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 9
#cuts 4-6: 27
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.015015363693237305 
BICCOS Cumulative time: 0.577279806137085
Preprocessing time: 0.009182929992675781 Inference time: 0.002458333969116211 Add cuts time: 0.002002239227294922 Cut analysis time: 0.0013718605041503906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03259 (11), -0.03257 (11), -0.03209 (11), -0.03209 (11), -0.02898 (11), -0.02891 (11), -0.02850 (11), -0.02841 (11), -0.02812 (11), -0.02802 (11), -0.02734 (11), -0.02722 (11), -0.02707 (11), -0.02699 (11), -0.02674 (11), -0.02672 (11), -0.02651 (11), -0.02638 (11), -0.02492 (11), -0.02469 (11), 
Length of domains: 284
Time: pickout 0.0010    decision 0.0254    set_bounds 0.0131    solve 0.1978    add 0.0058    
Accumulated time: pickout 0.0091    decision 1.0233    set_bounds 0.1065    solve 2.3063    add 0.6412    
Current (lb-rhs): -0.032592594623565674
932 domains visited
Cumulative time: 4.991825103759766

BaB round 9
batch: 256
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3168] [/input-12, 3141] [/input-12, 3168] [/input-12, 3141] [/input-12, 970] [/input-12, 970] [/input-12, 7333] [/input-12, 3141] [/input-12, 3141] [/input-16, 24] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03240859508514404
10 lb beta sum: 0.5857821702957153, worst -0.03334006667137146
Time: prepare 0.0111    bound 0.1759    transfer 0.0028    finalize 0.0092    func 0.2030    
Accumulated time: func 2.8025    prepare 0.0853    bound 2.6174    transfer 0.0223    finalize 0.0662    
all_split False
======================Cut inference begins======================
max lb tensor(0.25127187) min lb tensor(-0.03179765)
Number of Verified Splits: 55 of 512
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 11
#cuts 4-6: 17
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.02435302734375 
BICCOS Cumulative time: 0.601632833480835
Preprocessing time: 0.014600276947021484 Inference time: 0.005745649337768555 Add cuts time: 0.0029201507568359375 Cut analysis time: 0.0010869503021240234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03257 (11), -0.03180 (12), -0.03155 (12), -0.03133 (12), -0.03130 (12), -0.03107 (12), -0.03104 (12), -0.02820 (12), -0.02813 (12), -0.02802 (11), -0.02789 (12), -0.02781 (12), -0.02777 (12), -0.02771 (12), -0.02746 (12), -0.02741 (12), -0.02734 (12), -0.02710 (12), -0.02674 (12), -0.02672 (11), 
Length of domains: 485
Time: pickout 0.0019    decision 0.0318    set_bounds 0.0231    solve 0.2032    add 0.0105    
Accumulated time: pickout 0.0110    decision 1.0551    set_bounds 0.1296    solve 2.5095    add 0.6517    
Current (lb-rhs): -0.03257244825363159
1389 domains visited
current_vram/total_varm: 2.2GB/99.9GB, batch_size increase to 512
Cumulative time: 5.287912130355835

BaB round 10
batch: 485
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 373] [/input-12, 6812] [/input-12, 4891] [/input-12, 4555] [/input-12, 5259] [/input-12, 3168] [/input-12, 3168] [/input-12, 3141] [/input-12, 3168] [/input-12, 5259] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.032375842332839966
10 lb beta sum: 0.5878934264183044, worst -0.03176817297935486
Time: prepare 0.0195    bound 0.2266    transfer 0.0079    finalize 0.0205    func 0.2808    
Accumulated time: func 3.0833    prepare 0.1050    bound 2.8440    transfer 0.0302    finalize 0.0867    
all_split False
======================Cut inference begins======================
max lb tensor(0.00681314) min lb tensor(-0.03176403)
Number of Verified Splits: 79 of 970
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 43.
#cuts 1-3: 12
#cuts 4-6: 23
#cuts 7-9: 8
#cuts >= 20: 0
BICCOS time: 0.04312944412231445 
BICCOS Cumulative time: 0.6447622776031494
Preprocessing time: 0.029606103897094727 Inference time: 0.008626222610473633 Add cuts time: 0.003212451934814453 Cut analysis time: 0.0016846656799316406
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03176 (12), -0.03151 (12), -0.03139 (13), -0.03108 (13), -0.03088 (13), -0.03088 (13), -0.03057 (13), -0.03056 (13), -0.02955 (13), -0.02937 (13), -0.02911 (13), -0.02902 (13), -0.02888 (13), -0.02887 (13), -0.02779 (13), -0.02770 (13), -0.02740 (13), -0.02733 (13), -0.02726 (13), -0.02725 (13), 
Length of domains: 891
Time: pickout 0.0157    decision 0.0491    set_bounds 0.0421    solve 0.2818    add 0.0221    
Accumulated time: pickout 0.0267    decision 1.1042    set_bounds 0.1717    solve 2.7913    add 0.6738    
Current (lb-rhs): -0.03176403045654297
2280 domains visited
Cumulative time: 5.74363899230957

BaB round 11
batch: 512
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 970] [/input-12, 3168] [/input-12, 3141] [/input-12, 4555] [/input-12, 3141] [/input-12, 5386] [/input-12, 5386] [/input-12, 5386] [/input-4, 3926] [/input-12, 5259] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03196299076080322
10 lb beta sum: 0.5846432447433472, worst -0.03135824203491211
Time: prepare 0.0208    bound 0.2753    transfer 0.0041    finalize 0.0224    func 0.3294    
Accumulated time: func 3.4127    prepare 0.1260    bound 3.1193    transfer 0.0343    finalize 0.1090    
all_split False
======================Cut inference begins======================
max lb tensor(0.01138124) min lb tensor(-0.03135374)
Number of Verified Splits: 101 of 1024
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 62.
#cuts 1-3: 12
#cuts 4-6: 38
#cuts 7-9: 12
#cuts >= 20: 0
BICCOS time: 0.053815603256225586 
BICCOS Cumulative time: 0.698577880859375
Preprocessing time: 0.0323793888092041 Inference time: 0.013195037841796875 Add cuts time: 0.005797624588012695 Cut analysis time: 0.002443552017211914
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03135 (13), -0.03104 (13), -0.03091 (14), -0.03062 (14), -0.03041 (14), -0.03041 (14), -0.03012 (14), -0.03010 (14), -0.02955 (13), -0.02951 (13), -0.02937 (13), -0.02933 (13), -0.02923 (14), -0.02911 (13), -0.02902 (13), -0.02888 (13), -0.02887 (13), -0.02879 (14), -0.02876 (14), -0.02866 (14), 
Length of domains: 1302
Time: pickout 0.0026    decision 0.0491    set_bounds 0.0446    solve 0.3296    add 0.0206    
Accumulated time: pickout 0.0293    decision 1.1533    set_bounds 0.2163    solve 3.1209    add 0.6944    
Current (lb-rhs): -0.03135374188423157
3203 domains visited
current_vram/total_varm: 4.5GB/99.9GB, batch_size increase to 1024
Cumulative time: 6.247047424316406

BaB round 12
batch: 1024
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4555] [/input-12, 3141] [/input-12, 4555] [/input-12, 5259] [/input-12, 5386] [/input-12, 5386] [/input-12, 3141] [/input-12, 3168] [/input-12, 3168] [/input-12, 5259] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.031478285789489746
10 lb beta sum: 0.587236762046814, worst -0.03087964653968811
Time: prepare 0.0432    bound 0.4727    transfer 0.0177    finalize 0.0649    func 0.6119    
Accumulated time: func 4.0246    prepare 0.1695    bound 3.5920    transfer 0.0520    finalize 0.1739    
all_split False
======================Cut inference begins======================
max lb tensor(0.01148161) min lb tensor(-0.03087807)
Number of Verified Splits: 210 of 2048
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 89.
#cuts 1-3: 13
#cuts 4-6: 50
#cuts 7-9: 26
#cuts >= 20: 0
BICCOS time: 0.10391712188720703 
BICCOS Cumulative time: 0.802495002746582
Preprocessing time: 0.06261682510375977 Inference time: 0.02646350860595703 Add cuts time: 0.01105046272277832 Cut analysis time: 0.003786325454711914
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03088 (14), -0.03062 (14), -0.03058 (14), -0.03041 (14), -0.03024 (15), -0.03012 (14), -0.03010 (14), -0.02997 (15), -0.02983 (15), -0.02951 (13), -0.02929 (15), -0.02920 (14), -0.02905 (14), -0.02882 (14), -0.02878 (14), -0.02872 (15), -0.02862 (14), -0.02859 (14), -0.02851 (14), -0.02834 (14), 
Length of domains: 2116
Time: pickout 0.0041    decision 0.2244    set_bounds 0.0872    solve 0.6127    add 0.0356    
Accumulated time: pickout 0.0334    decision 1.3777    set_bounds 0.3035    solve 3.7336    add 0.7301    
Current (lb-rhs): -0.030878067016601562
5041 domains visited
current_vram/total_varm: 8.2GB/99.9GB, batch_size increase to 2048
Cumulative time: 7.321373462677002

BaB round 13
batch: 2048
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7333] [/input-12, 4891] [/input-12, 7717] [/input-12, 4891] [/input-12, 8020] [/input-12, 3140] [/input-12, 3141] [/input-12, 3141] [/input-12, 8003] [/input-12, 3141] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.030906885862350464
10 lb beta sum: 0.5999687910079956, worst -0.03836122155189514
Time: prepare 0.0853    bound 0.8714    transfer 0.0537    finalize 0.1281    func 1.3471    
Accumulated time: func 5.3717    prepare 0.2550    bound 4.4634    transfer 0.1057    finalize 0.3020    
all_split False
======================Cut inference begins======================
max lb tensor(0.31896880) min lb tensor(-0.03030801)
Number of Verified Splits: 428 of 4096
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 65.
#cuts 1-3: 15
#cuts 4-6: 29
#cuts 7-9: 21
#cuts >= 20: 0
BICCOS time: 0.20202040672302246 
BICCOS Cumulative time: 1.0045154094696045
Preprocessing time: 0.12841272354125977 Inference time: 0.056304216384887695 Add cuts time: 0.01440286636352539 Cut analysis time: 0.0029006004333496094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03031 (15), -0.03024 (15), -0.03001 (15), -0.02995 (15), -0.02982 (15), -0.02979 (15), -0.02968 (15), -0.02955 (15), -0.02952 (15), -0.02951 (15), -0.02940 (16), -0.02929 (15), -0.02916 (16), -0.02901 (14), -0.02901 (15), -0.02898 (16), -0.02898 (15), -0.02889 (16), -0.02868 (15), -0.02860 (16), 
Length of domains: 3736
Time: pickout 0.0078    decision 0.1670    set_bounds 0.1713    solve 1.3479    add 0.0826    
Accumulated time: pickout 0.0412    decision 1.5448    set_bounds 0.4747    solve 5.0815    add 0.8127    
Current (lb-rhs): -0.030308008193969727
8709 domains visited
current_vram/total_varm: 15.5GB/99.9GB, batch_size increase to 4096
Cumulative time: 9.312457084655762

BaB round 14
batch: 3736
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5259] [/input-4, 2870] [/input-4, 3926] [/input-12, 373] [/input-12, 5259] [/input-12, 3141] [/input-12, 5259] [/input-12, 970] [/input-12, 3141] [/input-12, 8004] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0302695631980896
10 lb beta sum: 0.7283419370651245, worst -0.04206457734107971
Time: prepare 0.1653    bound 1.5084    transfer 0.1013    finalize 0.2569    func 2.0817    
Accumulated time: func 7.4535    prepare 0.4206    bound 5.9718    transfer 0.2069    finalize 0.5589    
all_split False
======================Cut inference begins======================
max lb tensor(0.44273016) min lb tensor(-0.02967072)
Number of Verified Splits: 3683 of 7472
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.8043022155761719 
BICCOS Cumulative time: 1.8088176250457764
Preprocessing time: 0.23819541931152344 Inference time: 0.4969170093536377 Add cuts time: 0.06881475448608398 Cut analysis time: 0.0003750324249267578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02967 (16), -0.02964 (16), -0.02940 (17), -0.02939 (16), -0.02937 (16), -0.02935 (16), -0.02916 (16), -0.02915 (17), -0.02914 (16), -0.02913 (16), -0.02912 (16), -0.02907 (16), -0.02892 (16), -0.02891 (16), -0.02890 (17), -0.02889 (17), -0.02888 (16), -0.02885 (16), -0.02885 (16), -0.02884 (16), 
Length of domains: 3789
Time: pickout 0.1366    decision 0.2860    set_bounds 0.4874    solve 2.0835    add 0.0916    
Accumulated time: pickout 0.1778    decision 1.8308    set_bounds 0.9621    solve 7.1649    add 0.9043    
Current (lb-rhs): -0.02967071533203125
12498 domains visited
Cumulative time: 13.246493577957153

BaB round 15
batch: 3789
splitting decisions: 
split level 0: [/input-16, 73] [/input-16, 73] [/input-12, 4555] [/input-12, 1756] [/input-12, 1756] [/input-12, 3140] [/input-12, 4555] [/input-12, 5259] [/input-12, 4891] [/input-12, 1731] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.029961228370666504
10 lb beta sum: 0.2714400589466095, worst -0.05313727259635925
Time: prepare 0.1694    bound 0.8139    transfer 0.1053    finalize 0.2549    func 1.3938    
Accumulated time: func 8.8472    prepare 0.5903    bound 6.7857    transfer 0.3123    finalize 0.8138    
all_split False
======================Cut inference begins======================
max lb tensor(0.44349903) min lb tensor(4.52995300e-06)
Number of Verified Splits: 7578 of 7578
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.43351221084594727 
BICCOS Cumulative time: 2.2423298358917236
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.1494    decision 0.4681    set_bounds 0.3319    solve 1.3961    add 0.0013    
Accumulated time: pickout 0.3272    decision 2.2989    set_bounds 1.2940    solve 8.5611    add 0.9056    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
12498 domains visited
Cumulative time: 16.087049961090088


Properties batch 5, size 1
Remaining timeout: 182.11052179336548
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 182.11038851737976
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 182.11036133766174
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 182.11033987998962
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 17.8897 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 114, vnnlib ID: 114 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-70.83162689, -76.93819427, -73.68337250, -76.14049530, -74.26879883,
         -76.42556000, -75.74203491, -76.35359192, -73.29805756, -77.72911072]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1548]; unstable size 1548; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 76, 1, 1548] with unstable size 75 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 26, 1, 1548] with unstable size 25 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1548] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [549]; unstable size 549; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 26, 1, 549] with unstable size 25 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 549] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [25]; unstable size 25; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.30340767, 1.95976615, 3.95606804, 2.26435661, 4.19178200, 3.59406424,
         4.03852892, 1.17980456, 5.40890503]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0394 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 115, vnnlib ID: 115 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-43.61990738, -46.65063858, -41.37057114, -42.09987640, -39.45455551,
         -42.41775513, -41.67811966, -41.35115433, -45.06528091, -46.46974945]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1680]; unstable size 1680; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 83, 1, 1680] with unstable size 82 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 37, 1, 1680] with unstable size 36 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1680] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [636]; unstable size 636; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 37, 1, 636] with unstable size 36 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 636] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [36]; unstable size 36; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 36] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.34420729, 5.08242226, 1.04088485, 1.73188889, 2.06629658, 0.93112516,
         0.84931684, 3.67206955, 4.72944927]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0365 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 116, vnnlib ID: 116 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-46.70237350, -47.20464325, -44.03733063, -42.75200272, -45.13936996,
         -42.32374573, -44.50869370, -43.19867706, -44.81579208, -45.18840790]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1381]; unstable size 1381; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 83, 1, 1381] with unstable size 82 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 16, 1, 1381] with unstable size 15 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1381] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [571]; unstable size 571; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 16, 1, 571] with unstable size 15 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 571] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [15]; unstable size 15; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.28046393, 3.31771088, 1.05668557, 0.28652912, 1.95630288, 1.33791971,
         0.04709113, 0.95326257, 1.25189972]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0362 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 117, vnnlib ID: 117 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-35.04540634, -38.07710266, -37.76271439, -38.26639557, -37.43863297,
         -39.08007431, -37.70521927, -40.66503143, -31.73573875, -37.75988770]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1150]; unstable size 1150; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 415, 1, 1150] with unstable size 414 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 28, 1, 1150] with unstable size 27 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1150] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [414]; unstable size 414; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 28, 1, 414] with unstable size 27 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 414] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [27]; unstable size 27; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.49201584, 5.09875107, 4.75520563, 5.37839317, 4.36007071, 6.16897488,
         4.61730289, 7.25422478, 4.89656687]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0371 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 118, vnnlib ID: 118 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-64.35199738, -58.96617508, -64.16380310, -64.47669983, -65.43815613,
         -63.71684647, -65.91303253, -63.10081863, -63.55047226, -61.97349548]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [990]; unstable size 990; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 427, 1, 990] with unstable size 426 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 25, 1, 990] with unstable size 24 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 990] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [426]; unstable size 426; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 25, 1, 426] with unstable size 24 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 426] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [24]; unstable size 24; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.42883110, 3.14699411, 3.73611140, 4.32171154, 2.85588193, 5.12244225,
         2.05335140, 2.79691267, 2.11020184]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0380 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 119, vnnlib ID: 119 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-42.71185684, -44.89601135, -40.48698044, -40.09116745, -40.05162811,
         -40.16988373, -40.36594772, -40.80567169, -43.05126572, -43.75779724]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1517]; unstable size 1517; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 83, 1, 1517] with unstable size 82 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 40, 1, 1517] with unstable size 39 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1517] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [671]; unstable size 671; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 40, 1, 671] with unstable size 39 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 671] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [39]; unstable size 39; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 39] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.73804855,  2.13353181, -1.02302933, -1.11835814, -0.13934642,
         -0.81029344, -0.46975788,  0.73874617,  1.32505965]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-42.71185684, -44.89601135, -40.48698044, -40.09116745, -40.05162811,
         -40.16988373, -40.36594772, -40.80567169, -43.05126572, -43.75779724]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-42.71186066, -44.89601898, -40.48698044, -40.09116364, -40.05162811,
          -40.16988373, -40.36594772, -40.80567169, -43.05126572, -43.75780487],
         [-42.71186066, -44.89601898, -40.48698044, -40.09116364, -40.05162811,
          -40.16988373, -40.36594772, -40.80567169, -43.05126572, -43.75780487]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.39581680, -0.03953552,  0.07872009,  0.27478409,  0.71450806]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.11587298, -1.08412695, -0.89365077,  ..., -1.14761901,
            -1.21111107, -1.29047608],
           [-1.05238092, -1.00476182, -0.84603173,  ..., -0.51269841,
            -0.56031746, -0.63968253],
           [-0.41746020, -0.33809513, -0.29047608,  ...,  0.01111121,
            -0.06825387, -0.19523799],
           ...,
           [-0.48095238, -0.49682540, -0.49682540,  ..., -0.68730158,
            -0.71904761, -0.78253967],
           [-0.46507925, -0.48095238, -0.46507925,  ..., -0.60793650,
            -0.63968253, -0.71904761],
           [-0.38571417, -0.36984116, -0.35396814,  ..., -0.46507925,
            -0.49682540, -0.56031746]],

          [[-0.90177131, -0.93397743, -0.72463763,  ..., -1.17552328,
            -1.25603855, -1.36875999],
           [-0.88566822, -0.88566822, -0.67632848,  ..., -0.57971013,
            -0.64412236, -0.75684375],
           [-0.37037024, -0.28985494, -0.17713353,  ..., -0.09661824,
            -0.19323659, -0.35426718],
           ...,
           [-0.59581316, -0.61191624, -0.61191624,  ..., -0.98228657,
            -0.98228657, -0.98228657],
           [-0.59581316, -0.61191624, -0.59581316,  ..., -0.99838966,
            -0.95008045, -1.03059578],
           [-0.59581316, -0.57971013, -0.54750401,  ..., -0.70853460,
            -0.67632848, -0.75684375]],

          [[-0.49325335, -0.52323836, -0.28335828,  ..., -0.86806595,
            -0.95802099, -1.07796109],
           [-0.53823084, -0.52323836, -0.28335828,  ..., -0.34332830,
            -0.43328333, -0.55322337],
           [-0.14842562, -0.05847061,  0.10644694,  ...,  0.04647692,
            -0.05847061, -0.20839565],
           ...,
           [-0.55322337, -0.56821585, -0.56821585,  ..., -0.92803597,
            -0.91304344, -0.91304344],
           [-0.55322337, -0.56821585, -0.55322337,  ..., -0.86806595,
            -0.85307342, -0.92803597],
           [-0.53823084, -0.50824583, -0.49325335,  ..., -0.58320838,
            -0.58320838, -0.67316341]]],


         [[[-1.11587298, -1.08412695, -0.89365077,  ..., -1.14761901,
            -1.21111107, -1.29047608],
           [-1.05238092, -1.00476182, -0.84603173,  ..., -0.51269841,
            -0.56031746, -0.63968253],
           [-0.41746020, -0.33809513, -0.29047608,  ...,  0.01111121,
            -0.06825387, -0.19523799],
           ...,
           [-0.48095238, -0.49682540, -0.49682540,  ..., -0.68730158,
            -0.71904761, -0.78253967],
           [-0.46507925, -0.48095238, -0.46507925,  ..., -0.60793650,
            -0.63968253, -0.71904761],
           [-0.38571417, -0.36984116, -0.35396814,  ..., -0.46507925,
            -0.49682540, -0.56031746]],

          [[-0.90177131, -0.93397743, -0.72463763,  ..., -1.17552328,
            -1.25603855, -1.36875999],
           [-0.88566822, -0.88566822, -0.67632848,  ..., -0.57971013,
            -0.64412236, -0.75684375],
           [-0.37037024, -0.28985494, -0.17713353,  ..., -0.09661824,
            -0.19323659, -0.35426718],
           ...,
           [-0.59581316, -0.61191624, -0.61191624,  ..., -0.98228657,
            -0.98228657, -0.98228657],
           [-0.59581316, -0.61191624, -0.59581316,  ..., -0.99838966,
            -0.95008045, -1.03059578],
           [-0.59581316, -0.57971013, -0.54750401,  ..., -0.70853460,
            -0.67632848, -0.75684375]],

          [[-0.49325335, -0.52323836, -0.28335828,  ..., -0.86806595,
            -0.95802099, -1.07796109],
           [-0.53823084, -0.52323836, -0.28335828,  ..., -0.34332830,
            -0.43328333, -0.55322337],
           [-0.14842562, -0.05847061,  0.10644694,  ...,  0.04647692,
            -0.05847061, -0.20839565],
           ...,
           [-0.55322337, -0.56821585, -0.56821585,  ..., -0.92803597,
            -0.91304344, -0.91304344],
           [-0.55322337, -0.56821585, -0.55322337,  ..., -0.86806595,
            -0.85307342, -0.92803597],
           [-0.53823084, -0.50824583, -0.49325335,  ..., -0.58320838,
            -0.58320838, -0.67316341]]],


         [[[-1.11587298, -1.08412695, -0.89365077,  ..., -1.14761901,
            -1.21111107, -1.29047608],
           [-1.05238092, -1.00476182, -0.84603173,  ..., -0.51269841,
            -0.56031746, -0.63968253],
           [-0.41746020, -0.33809513, -0.29047608,  ...,  0.01111121,
            -0.06825387, -0.19523799],
           ...,
           [-0.48095238, -0.49682540, -0.49682540,  ..., -0.68730158,
            -0.71904761, -0.78253967],
           [-0.46507925, -0.48095238, -0.46507925,  ..., -0.60793650,
            -0.63968253, -0.71904761],
           [-0.38571417, -0.36984116, -0.35396814,  ..., -0.46507925,
            -0.49682540, -0.56031746]],

          [[-0.90177131, -0.93397743, -0.72463763,  ..., -1.17552328,
            -1.25603855, -1.36875999],
           [-0.88566822, -0.88566822, -0.67632848,  ..., -0.57971013,
            -0.64412236, -0.75684375],
           [-0.37037024, -0.28985494, -0.17713353,  ..., -0.09661824,
            -0.19323659, -0.35426718],
           ...,
           [-0.59581316, -0.61191624, -0.61191624,  ..., -0.98228657,
            -0.98228657, -0.98228657],
           [-0.59581316, -0.61191624, -0.59581316,  ..., -0.99838966,
            -0.95008045, -1.03059578],
           [-0.59581316, -0.57971013, -0.54750401,  ..., -0.70853460,
            -0.67632848, -0.75684375]],

          [[-0.49325335, -0.52323836, -0.28335828,  ..., -0.86806595,
            -0.95802099, -1.07796109],
           [-0.53823084, -0.52323836, -0.28335828,  ..., -0.34332830,
            -0.43328333, -0.55322337],
           [-0.14842562, -0.05847061,  0.10644694,  ...,  0.04647692,
            -0.05847061, -0.20839565],
           ...,
           [-0.55322337, -0.56821585, -0.56821585,  ..., -0.92803597,
            -0.91304344, -0.91304344],
           [-0.55322337, -0.56821585, -0.55322337,  ..., -0.86806595,
            -0.85307342, -0.92803597],
           [-0.53823084, -0.50824583, -0.49325335,  ..., -0.58320838,
            -0.58320838, -0.67316341]]],


         [[[-1.11587298, -1.08412695, -0.89365077,  ..., -1.14761901,
            -1.21111107, -1.29047608],
           [-1.05238092, -1.00476182, -0.84603173,  ..., -0.51269841,
            -0.56031746, -0.63968253],
           [-0.41746020, -0.33809513, -0.29047608,  ...,  0.01111121,
            -0.06825387, -0.19523799],
           ...,
           [-0.48095238, -0.49682540, -0.49682540,  ..., -0.68730158,
            -0.71904761, -0.78253967],
           [-0.46507925, -0.48095238, -0.46507925,  ..., -0.60793650,
            -0.63968253, -0.71904761],
           [-0.38571417, -0.36984116, -0.35396814,  ..., -0.46507925,
            -0.49682540, -0.56031746]],

          [[-0.90177131, -0.93397743, -0.72463763,  ..., -1.17552328,
            -1.25603855, -1.36875999],
           [-0.88566822, -0.88566822, -0.67632848,  ..., -0.57971013,
            -0.64412236, -0.75684375],
           [-0.37037024, -0.28985494, -0.17713353,  ..., -0.09661824,
            -0.19323659, -0.35426718],
           ...,
           [-0.59581316, -0.61191624, -0.61191624,  ..., -0.98228657,
            -0.98228657, -0.98228657],
           [-0.59581316, -0.61191624, -0.59581316,  ..., -0.99838966,
            -0.95008045, -1.03059578],
           [-0.59581316, -0.57971013, -0.54750401,  ..., -0.70853460,
            -0.67632848, -0.75684375]],

          [[-0.49325335, -0.52323836, -0.28335828,  ..., -0.86806595,
            -0.95802099, -1.07796109],
           [-0.53823084, -0.52323836, -0.28335828,  ..., -0.34332830,
            -0.43328333, -0.55322337],
           [-0.14842562, -0.05847061,  0.10644694,  ...,  0.04647692,
            -0.05847061, -0.20839565],
           ...,
           [-0.55322337, -0.56821585, -0.56821585,  ..., -0.92803597,
            -0.91304344, -0.91304344],
           [-0.55322337, -0.56821585, -0.55322337,  ..., -0.86806595,
            -0.85307342, -0.92803597],
           [-0.53823084, -0.50824583, -0.49325335,  ..., -0.58320838,
            -0.58320838, -0.67316341]]],


         [[[-1.11587298, -1.08412695, -0.89365077,  ..., -1.14761901,
            -1.21111107, -1.29047608],
           [-1.05238092, -1.00476182, -0.84603173,  ..., -0.51269841,
            -0.56031746, -0.63968253],
           [-0.41746020, -0.33809513, -0.29047608,  ...,  0.01111121,
            -0.06825387, -0.19523799],
           ...,
           [-0.48095238, -0.49682540, -0.49682540,  ..., -0.68730158,
            -0.71904761, -0.78253967],
           [-0.46507925, -0.48095238, -0.46507925,  ..., -0.60793650,
            -0.63968253, -0.71904761],
           [-0.38571417, -0.36984116, -0.35396814,  ..., -0.46507925,
            -0.49682540, -0.56031746]],

          [[-0.90177131, -0.93397743, -0.72463763,  ..., -1.17552328,
            -1.25603855, -1.36875999],
           [-0.88566822, -0.88566822, -0.67632848,  ..., -0.57971013,
            -0.64412236, -0.75684375],
           [-0.37037024, -0.28985494, -0.17713353,  ..., -0.09661824,
            -0.19323659, -0.35426718],
           ...,
           [-0.59581316, -0.61191624, -0.61191624,  ..., -0.98228657,
            -0.98228657, -0.98228657],
           [-0.59581316, -0.61191624, -0.59581316,  ..., -0.99838966,
            -0.95008045, -1.03059578],
           [-0.59581316, -0.57971013, -0.54750401,  ..., -0.70853460,
            -0.67632848, -0.75684375]],

          [[-0.49325335, -0.52323836, -0.28335828,  ..., -0.86806595,
            -0.95802099, -1.07796109],
           [-0.53823084, -0.52323836, -0.28335828,  ..., -0.34332830,
            -0.43328333, -0.55322337],
           [-0.14842562, -0.05847061,  0.10644694,  ...,  0.04647692,
            -0.05847061, -0.20839565],
           ...,
           [-0.55322337, -0.56821585, -0.56821585,  ..., -0.92803597,
            -0.91304344, -0.91304344],
           [-0.55322337, -0.56821585, -0.55322337,  ..., -0.86806595,
            -0.85307342, -0.92803597],
           [-0.53823084, -0.50824583, -0.49325335,  ..., -0.58320838,
            -0.58320838, -0.67316341]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0498 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 120, vnnlib ID: 120 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-48.79386520, -57.29564667, -50.70870590, -50.63510513, -53.68456650,
         -51.02038574, -54.07991409, -53.27741241, -55.28627777, -56.85300446]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1523]; unstable size 1523; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 277, 1, 1523] with unstable size 276 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 8, 1, 1523] with unstable size 7 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1523] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [276]; unstable size 276; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 8, 1, 276] with unstable size 7 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 276] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [7]; unstable size 7; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[7.89918137, 1.45017505, 1.21860635, 4.19878578, 1.58749521, 4.64466810,
         3.58517194, 5.92165041, 7.36826086]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0383 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 121, vnnlib ID: 121 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-82.92325592, -76.30847931, -84.20214081, -84.50059509, -83.72540283,
         -84.54558563, -85.22838593, -84.18591309, -84.37667084, -79.99353790]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1437]; unstable size 1437; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 82, 1, 1437] with unstable size 81 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 29, 1, 1437] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1437] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [585]; unstable size 585; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 29, 1, 585] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 585] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [28]; unstable size 28; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.10124683, 5.03464031, 5.54865360, 4.67412090, 5.55884361, 6.15765953,
         5.13230467, 5.79715729, 2.57305431]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0381 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 122, vnnlib ID: 122 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-49.16300201, -45.97325897, -50.33464813, -50.65789413, -50.12574768,
         -50.72671127, -52.13203812, -50.07955170, -47.10290527, -48.94456482]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1258]; unstable size 1258; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 83, 1, 1258] with unstable size 82 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 33, 1, 1258] with unstable size 32 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1258] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [546]; unstable size 546; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 33, 1, 546] with unstable size 32 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 546] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [32]; unstable size 32; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 32] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.35244799,  2.20056629,  2.89099312,  2.10505295,  2.92363405,
          4.06880808,  2.17895126, -0.43885708,  1.90159762]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-49.16300201, -45.97325897, -50.33464813, -50.65789413, -50.12574768,
         -50.72671127, -52.13203812, -50.07955170, -47.10290527, -48.94456482]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.34it/s]100%|██████████| 1/1 [00:00<00:00,  8.33it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-46.55006027, -43.87250137, -47.73682022, -48.03963852, -47.57175446,
          -48.12023544, -49.50029755, -47.55226517, -44.36444473, -46.66107941]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.49194336]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1228 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 20.091819763183594
alpha/beta optimization time: 1.4600179195404053
initial alpha-crown bounds: tensor([[ 1.45368242,  2.31165028,  2.98505425,  2.25773144,  3.01767898,
          4.15789366,  2.29719543, -0.34155726,  1.95249057]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.34155726432800293
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.37604975700378
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.3760118484497
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.37598729133606
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.37596583366394
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.37594556808472
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.3759253025055
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 198.37590527534485
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 198.3758840560913
Verifying property 7 with 1 instances.
##### Instance 122 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.34155726]], device='cuda:0') need to verify.
Model prediction is: tensor([-49.16300201, -45.97325897, -50.33464813, -50.65789413, -50.12574768,
        -50.72671127, -52.13203812, -50.07955170, -47.10290527, -48.94456482],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.34155726]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1258
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 538
Node /39 input 0: size torch.Size([250]) unstable 32
-----------------
# of unstable neurons: 1828
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.0001163482666015625
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.34148406982421875
10 lb beta sum: 0.0, worst -0.34148645401000977
Time: prepare 0.0002    bound 0.1231    transfer 0.0001    finalize 0.0002    func 0.1237    
Accumulated time: func 0.1237    prepare 0.0002    bound 0.1231    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 5] 
split level 1: [/input-16, 43] 
split level 2: [/input-16, 18] 
split level 3: [/input-16, 165] 
split level 4: [/input-16, 126] 
split level 5: [/input-16, 134] 
split level 6: [/input-16, 35] 
split level 7: [/input-16, 129] 
split level 8: [/input-16, 166] 
split level 9: [/input-16, 170] 
split level 10: [/input-16, 95] 
split level 11: [/input-16, 138] 
split level 12: [/input-12, 5555] 
split level 13: [/input-16, 72] 
split level 14: [/input-12, 3626] 
split level 15: [/input-12, 756] 
split level 16: [/input-16, 7] 
split level 17: [/input-12, 4187] 
split level 18: [/input-12, 3874] 
split level 19: [/input-12, 6242] 
split level 20: [/input-12, 4778] 
split level 21: [/input-12, 4444] 
split level 22: [/input-12, 4453] 
split level 23: [/input-4, 1426] 
split level 24: [/input-12, 7593] 
split level 25: [/input-12, 494] 
split level 26: [/input-12, 6243] 
split level 27: [/input-12, 7521] 
split level 28: [/input-12, 7116] 
split level 29: [/input-4, 6563] 
split level 30: [/input-12, 7709] 
split level 31: [/input-12, 6234] 
split level 32: [/input-12, 806] 
split level 33: [/input-12, 7597] 
split level 34: [/input-12, 6244] 
split level 35: [/input-12, 407] 
split level 36: [/input-12, 7010] 
split level 37: [/input-12, 380] 
split level 38: [/input-4, 4728] 
split level 39: [/input-12, 1554] 
split level 40: [/input-4, 3491] 
split level 41: [/input-12, 5923] 
split level 42: [/input-4, 7842] 
split level 43: [/input-12, 2428] 
split level 44: [/input-12, 5563] 
split level 45: [/input-16, 84] 
split level 46: [/input-12, 2610] 
split level 47: [/input-12, 421] 
split level 48: [/input-12, 2548] 
split level 49: [/input-12, 6233] 
split level 50: [/input-12, 5425] 
split level 51: [/input-12, 1268] 
split level 52: [/input-12, 5341] 
split level 53: [/input-12, 7944] 
split level 54: [/input-4, 7818] 
split level 55: [/input-12, 2603] 
split level 56: [/input-12, 809] 
split level 57: [/input-12, 3473] 
split level 58: [/input-16, 82] 
split level 59: [/input-12, 7956] 
split level 60: [/input-12, 3878] 
split level 61: [/input-12, 1177] 
split level 62: [/input-4, 1241] 
split level 63: [/input-4, 2693] 
split level 64: [/input-4, 4259] 
split level 65: [/input-12, 7971] 
split level 66: [/input-12, 1686] 
split level 67: [/input-12, 7841] 
split level 68: [/input-12, 412] 
split level 69: [/input-12, 7018] 
split level 70: [/input-12, 1770] 
split level 71: [/input-12, 627] 
split level 72: [/input-12, 4190] 
split level 73: [/input-12, 2045] 
split level 74: [/input-12, 6245] 
split level 75: [/input-4, 3507] 
split level 76: [/input-4, 7816] 
split level 77: [/input-12, 1252] 
split level 78: [/input-12, 6260] 
split level 79: [/input-12, 7134] 
split level 80: [/input-12, 3437] 
split level 81: [/input-12, 2611] 
split level 82: [/input-12, 7953] 
split level 83: [/input-4, 2729] 
split level 84: [/input-12, 6226] 
split level 85: [/input-12, 1259] 
split level 86: [/input-12, 7957] 
split level 87: [/input-4, 1140] 
split level 88: [/input-12, 3438] 
split level 89: [/input-12, 6257] 
split level 90: [/input-12, 2601] 
split level 91: [/input-4, 2695] 
split level 92: [/input-12, 2929] 
split level 93: [/input-12, 6227] 
split level 94: [/input-12, 462] 
split level 95: [/input-12, 6225] 
split level 96: [/input-12, 3885] 
split level 97: [/input-12, 5426] 
split level 98: [/input-12, 4371] 
split level 99: [/input-12, 1731] 
split level 100: [/input-12, 3966] 
split level 101: [/input-4, 4723] 
split level 102: [/input-12, 7516] 
split level 103: [/input-12, 971] 
split level 104: [/input-4, 6818] 
split level 105: [/input-4, 6259] 
split level 106: [/input-12, 3380] 
split level 107: [/input-12, 7952] 
split level 108: [/input-12, 6238] 
split level 109: [/input-4, 420] 
split level 110: [/input-12, 7130] 
split level 111: [/input-4, 3192] 
split level 112: [/input-4, 7834] 
split level 113: [/input-12, 2602] 
split level 114: [/input-12, 1732] 
split level 115: [/input-12, 1739] 
split level 116: [/input-12, 605] 
split level 117: [/input-12, 3965] 
split level 118: [/input-12, 7948] 
split level 119: [/input-12, 1078] 
split level 120: [/input-12, 1238] 
split level 121: [/input-12, 1161] 
split level 122: [/input-4, 5787] 
split level 123: [/input-12, 1260] 
split level 124: [/input-12, 7955] 
split level 125: [/input-12, 1169] 
split level 126: [/input-4, 7767] 
split level 127: [/input-4, 5491] 
split level 128: [/input-12, 2238] 
split level 129: [/input-4, 4733] 
split level 130: [/input-4, 1654] 
split level 131: [/input-4, 2645] 
split level 132: [/input-12, 7951] 
split level 133: [/input-12, 2891] 
split level 134: [/input-12, 5946] 
split level 135: [/input-4, 2700] 
split level 136: [/input-4, 4801] 
split level 137: [/input-12, 2033] 
split level 138: [/input-12, 7692] 
split level 139: [/input-4, 2930] 
split level 140: [/input-12, 1844] 
split level 141: [/input-12, 6802] 
split level 142: [/input-12, 1178] 
split level 143: [/input-4, 7815] 
split level 144: [/input-12, 7592] 
split level 145: [/input-4, 7820] 
split level 146: [/input-12, 361] 
split level 147: [/input-12, 4393] 
split level 148: [/input-4, 1655] 
split level 149: [/input-12, 1730] 
split level 150: [/input-12, 7947] 
split level 151: [/input-12, 6240] 
split level 152: [/input-12, 3433] 
split level 153: [/input-4, 4731] 
split level 154: [/input-4, 2682] 
split level 155: [/input-12, 399] 
split level 156: [/input-12, 5508] 
split level 157: [/input-12, 3811] 
split level 158: [/input-4, 1365] 
split level 159: [/input-12, 379] 
split level 160: [/input-12, 3562] 
split level 161: [/input-4, 6280] 
split level 162: [/input-4, 1659] 
split level 163: [/input-4, 5771] 
split level 164: [/input-12, 5512] 
split level 165: [/input-4, 6931] 
split level 166: [/input-12, 2645] 
split level 167: [/input-4, 3159] 
split level 168: [/input-12, 7548] 
split level 169: [/input-4, 2935] 
split level 170: [/input-12, 1181] 
split level 171: [/input-12, 7899] 
split level 172: [/input-12, 3294] 
split level 173: [/input-4, 7836] 
split level 174: [/input-4, 5772] 
split level 175: [/input-12, 5520] 
split level 176: [/input-4, 6337] 
split level 177: [/input-4, 1242] 
split level 178: [/input-12, 2658] 
split level 179: [/input-4, 4819] 
split level 180: [/input-4, 1258] 
split level 181: [/input-4, 1227] 
split level 182: [/input-4, 4739] 
split level 183: [/input-12, 6451] 
split level 184: [/input-12, 7554] 
split level 185: [/input-4, 4806] 
split level 186: [/input-4, 4825] 
split level 187: [/input-4, 2686] 
split level 188: [/input-4, 1885] 
split level 189: [/input-4, 5782] 
split level 190: [/input-12, 4156] 
split level 191: [/input-4, 1403] 
split level 192: [/input-4, 4805] 
split level 193: [/input-4, 414] 
split level 194: [/input-4, 4547] 
split level 195: [/input-12, 7921] 
split level 196: [/input-4, 6356] 
split level 197: [/input-12, 7317] 
split level 198: [/input-4, 2790] 
split level 199: [/input-4, 4709] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.34121155738830566
10 lb beta sum: 0.0, worst -0.3412165641784668
Time: prepare 0.0113    bound 0.1309    transfer 0.0026    finalize 0.0084    func 0.1558    
Accumulated time: func 0.2794    prepare 0.0214    bound 0.2540    transfer 0.0027    finalize 0.0086    
all_split False
======================Cut inference begins======================
max lb tensor(0.27399445) min lb tensor(-0.34120893)
Number of Verified Splits: 5 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.010854482650756836 
BICCOS Cumulative time: 0.010854482650756836
Preprocessing time: 0.009936332702636719 Inference time: 0.0002269744873046875 Add cuts time: 9.655952453613281e-05 Cut analysis time: 0.0005946159362792969
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.32700 (1), -0.32690 (1), -0.32674 (1), -0.32641 (1), -0.32630 (1), -0.32588 (1), -0.32537 (1), -0.32442 (1), -0.32441 (1), -0.32415 (1), -0.32346 (1), -0.32334 (1), -0.32281 (1), -0.32275 (1), -0.32119 (1), -0.32098 (1), -0.32038 (1), -0.32021 (1), -0.31954 (1), -0.31856 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7803    set_bounds 0.0085    solve 0.1558    add 0.0765    
Accumulated time: pickout 0.0003    decision 0.7803    set_bounds 0.0085    solve 0.1558    add 0.0765    
Current (lb-rhs): -0.3269987106323242
50 domains visited
Cumulative time: 1.1632282733917236

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] 
split level 1: [/input-16, 165] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 43] [/input-16, 18] [/input-16, 18] [/input-16, 18] 
split level 2: [/input-16, 170] [/input-16, 165] [/input-16, 165] [/input-16, 170] [/input-16, 166] [/input-16, 165] [/input-16, 166] [/input-16, 165] [/input-16, 165] [/input-16, 165] 
split level 3: [/input-16, 166] [/input-16, 170] [/input-16, 170] [/input-16, 166] [/input-16, 170] [/input-16, 170] [/input-16, 170] [/input-16, 170] [/input-16, 170] [/input-16, 170] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3179657459259033
10 lb beta sum: 0.9253728985786438, worst -0.3024267256259918
Time: prepare 0.0072    bound 0.1572    transfer 0.0015    finalize 0.0053    func 0.1738    
Accumulated time: func 0.4532    prepare 0.0288    bound 0.4112    transfer 0.0042    finalize 0.0139    
all_split False
======================Cut inference begins======================
max lb tensor(0.59389538) min lb tensor(-0.30241519)
Number of Verified Splits: 64 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.016100168228149414 
BICCOS Cumulative time: 0.02695465087890625
Preprocessing time: 0.011835098266601562 Inference time: 0.0023658275604248047 Add cuts time: 0.001611471176147461 Cut analysis time: 0.00028777122497558594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12346 (2), -0.12325 (2), -0.12317 (2), -0.12188 (2), -0.12160 (2), -0.12160 (2), -0.12121 (2), -0.12119 (2), -0.11858 (2), -0.11777 (2), -0.11581 (2), -0.11469 (2), -0.11446 (2), -0.11320 (2), -0.11309 (2), -0.11308 (2), -0.11304 (2), -0.11297 (2), -0.11272 (2), -0.11111 (2), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0250    set_bounds 0.0128    solve 0.1738    add 0.0978    
Accumulated time: pickout 0.0009    decision 0.8054    set_bounds 0.0214    solve 0.3297    add 0.1743    
Current (lb-rhs): -0.12346439063549042
100 domains visited
Cumulative time: 1.4896965026855469

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] 
split level 1: [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 166] [/input-16, 18] [/input-16, 18] [/input-16, 43] 
split level 2: [/input-16, 166] [/input-16, 166] [/input-16, 170] [/input-16, 166] [/input-16, 166] [/input-16, 170] [/input-16, 170] [/input-16, 166] [/input-16, 170] [/input-16, 170] 
split level 3: [/input-16, 170] [/input-16, 170] [/input-16, 166] [/input-16, 170] [/input-16, 170] [/input-16, 166] [/input-16, 95] [/input-16, 170] [/input-16, 166] [/input-16, 95] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15392541885375977
10 lb beta sum: 1.1920887231826782, worst -0.09409531950950623
Time: prepare 0.0074    bound 0.1534    transfer 0.0015    finalize 0.0062    func 0.1714    
Accumulated time: func 0.6246    prepare 0.0365    bound 0.5646    transfer 0.0057    finalize 0.0201    
all_split False
======================Cut inference begins======================
max lb tensor(0.19954395) min lb tensor(-0.08575594)
Number of Verified Splits: 255 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 40.
#cuts 1-3: 32
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.03279757499694824 
BICCOS Cumulative time: 0.05975222587585449
Preprocessing time: 0.012341737747192383 Inference time: 0.010781526565551758 Add cuts time: 0.008773088455200195 Cut analysis time: 0.0009012222290039062
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01287 (3), -0.01266 (3), -0.01260 (3), -0.01251 (3), -0.01248 (3), -0.01239 (3), -0.01128 (3), -0.01074 (3), -0.01069 (3), -0.01056 (3), -0.01046 (3), -0.00853 (3), -0.00816 (3), -0.00798 (3), -0.00766 (3), -0.00701 (3), -0.00701 (3), -0.00629 (3), -0.00620 (3), -0.00536 (3), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0252    set_bounds 0.0157    solve 0.1715    add 0.1112    
Accumulated time: pickout 0.0016    decision 0.8305    set_bounds 0.0370    solve 0.5012    add 0.2856    
Current (lb-rhs): -0.012868046760559082
150 domains visited
Cumulative time: 1.8469657897949219

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] 
split level 1: [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 18] 
split level 2: [/input-16, 170] [/input-16, 166] [/input-16, 170] [/input-16, 129] [/input-16, 166] [/input-16, 170] [/input-16, 170] [/input-16, 166] [/input-16, 170] [/input-16, 129] 
split level 3: [/input-16, 95] [/input-16, 95] [/input-16, 129] [/input-16, 170] [/input-16, 95] [/input-16, 129] [/input-16, 129] [/input-16, 95] [/input-16, 95] [/input-16, 95] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13257694244384766

all verified at 4th iter
Time: prepare 0.0072    bound 0.0485    transfer 0.0015    finalize 0.0057    func 0.0655    
Accumulated time: func 0.6901    prepare 0.0440    bound 0.6131    transfer 0.0073    finalize 0.0258    
all_split False
======================Cut inference begins======================
max lb tensor(0.14342976) min lb tensor(0.01006460)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 34
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.047461509704589844 
BICCOS Cumulative time: 0.10721373558044434
Preprocessing time: 0.011384010314941406 Inference time: 0.01881241798400879 Add cuts time: 0.016474485397338867 Cut analysis time: 0.0007905960083007812
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0006    decision 0.0255    set_bounds 0.0156    solve 0.0656    add 0.0260    
Accumulated time: pickout 0.0022    decision 0.8560    set_bounds 0.0527    solve 0.5668    add 0.3115    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([165, 170,  95,   5]), tensor([-1., -1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([-1.26703658e+34,  7.31446445e-02,  1.10750437e-01,  2.71212328e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([165, 170,  95,   5]), tensor([-1., -1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([-1.26703658e+34,  7.31446445e-02,  1.10750437e-01,  1.34551451e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([165, 170,  95,   5]), tensor([-1., -1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([-1.26703658e+34,  7.31446445e-02,  1.11547649e-01,  2.86999810e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([165, 170,  95,   5]), tensor([-1., -1.,  1.,  1.]), tensor([0, 0, 0, 0]), tensor([-1.26703658e+34,  7.31446445e-02,  1.11547649e-01,  1.34939179e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([165, 170]), tensor([-1.,  1.]), tensor([0, 0]), tensor([-1.26703658e+34,  5.89020103e-02]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([165, 166, 170,   5]), tensor([ 1., -1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([-1.26703658e+34,  7.64505714e-02,  1.13466844e-01,  3.39270085e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([165, 166, 170,   5]), tensor([ 1., -1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([-1.26703658e+34,  7.64505714e-02,  1.13466844e-01,  1.29838750e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([165, 166, 170,   5]), tensor([ 1., -1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([-1.26703658e+34,  7.64505714e-02,  1.09124079e-01,  3.55247408e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([165, 166, 170,   5]), tensor([ 1., -1.,  1.,  1.]), tensor([0, 0, 0, 0]), tensor([-1.26703658e+34,  7.64505714e-02,  1.09124079e-01,  1.36631981e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([165, 166]), tensor([1., 1.]), tensor([0, 0]), tensor([-1.26703658e+34,  6.15520626e-02]), tensor([0, 1]))}
Shallow branching resets to n domains:  10
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17130470275878906

all verified at 3th iter
Time: prepare 0.0004    bound 0.0387    transfer 0.0003    finalize 0.0004    func 0.0399    
Accumulated time: func 0.7300    prepare 0.0444    bound 0.6518    transfer 0.0075    finalize 0.0262    
After pruning, left:  0

Back to Regular BaB


Properties batch 8, size 1
Remaining timeout: 196.08069109916687
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 3.9194 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 123, vnnlib ID: 123 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-68.86014557, -73.53508759, -70.51572418, -73.57755280, -73.19271088,
         -73.73681641, -71.75067139, -74.49285889, -68.87904358, -75.08942413]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1260]; unstable size 1260; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 79, 1, 1260] with unstable size 78 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 29, 1, 1260] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1260] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [622]; unstable size 622; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 29, 1, 622] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 622] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [28]; unstable size 28; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.38834429,  2.61767530, -0.18003941,  2.23624802,  1.99871826,
          2.28105927,  0.62265301,  3.03557324,  4.26313400]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-68.86014557, -73.53508759, -70.51572418, -73.57755280, -73.19271088,
         -73.73681641, -71.75067139, -74.49285889, -68.87904358, -75.08942413]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-68.86014557, -73.53507996, -70.51573181, -73.57756042, -73.19271088,
          -73.73681641, -71.75067902, -74.49285889, -68.87905121, -75.08942413],
         [-68.86014557, -73.53507996, -70.51573181, -73.57756042, -73.19271088,
          -73.73681641, -71.75067902, -74.49285889, -68.87905121, -75.08942413]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.01890564,  1.63668060]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-3.53968143e-01, -6.82538673e-02, -3.65078375e-02,  ...,
             1.11112073e-02, -2.11111009e-01, -5.23808524e-02],
           [-1.15872920e-01, -1.47618949e-01, -1.63491964e-01,  ...,
            -5.23808524e-02, -3.69841158e-01, -1.63491964e-01],
           [-2.42857039e-01, -1.15872920e-01, -2.26984024e-01,  ...,
             1.22222304e-01,  2.49206424e-01, -2.42857039e-01],
           ...,
           [ 1.22222304e-01,  4.28572372e-02,  2.65079439e-01,  ...,
            -7.03174591e-01, -2.11111009e-01, -2.26984024e-01],
           [ 1.53968334e-01,  3.76190543e-01, -2.26984024e-01,  ...,
            -4.17460203e-01, -4.80952382e-01, -2.26984024e-01],
           [ 3.44444513e-01,  5.19047678e-01,  3.92063558e-01,  ...,
            -3.65078375e-02, -2.74603069e-01, -2.11111009e-01]],

          [[ 1.61031820e-02,  2.25442946e-01,  2.73752123e-01,  ...,
             4.02576596e-01,  8.05154145e-02,  2.89855182e-01],
           [ 2.41546005e-01,  1.77133769e-01,  1.93236828e-01,  ...,
             3.86473536e-01, -3.22059989e-02,  1.44927651e-01],
           [ 1.12721533e-01,  2.57649064e-01,  1.61030710e-01,  ...,
             4.99194920e-01,  8.21256101e-01,  1.77133769e-01],
           ...,
           [ 7.56843865e-01,  5.79710245e-01,  6.92431629e-01,  ...,
            -3.86473298e-01,  1.61030710e-01,  2.25442946e-01],
           [ 5.95813274e-01,  7.72946954e-01,  2.09339887e-01,  ...,
             8.05154145e-02, -1.77133530e-01,  1.44927651e-01],
           [ 6.28019392e-01,  8.21256101e-01,  8.37359190e-01,  ...,
             5.31401038e-01,  1.22934580e-07,  9.66184735e-02]],

          [[ 4.51274544e-01,  7.36132085e-01,  7.36132085e-01,  ...,
             8.56072128e-01,  5.56222081e-01,  7.51124620e-01],
           [ 7.21139610e-01,  7.21139610e-01,  6.31184578e-01,  ...,
             7.96102107e-01,  3.46327007e-01,  6.01199567e-01],
           [ 5.26237071e-01,  6.76162124e-01,  6.61169589e-01,  ...,
             9.16042149e-01,  9.76012170e-01,  5.71214557e-01],
           ...,
           [ 1.05097473e+00,  8.86057138e-01,  1.09595215e+00,  ...,
             1.66416958e-01,  5.86207092e-01,  6.16192102e-01],
           [ 1.03598225e+00,  1.08095968e+00,  5.86207092e-01,  ...,
             4.96252000e-01,  3.46327007e-01,  6.31184578e-01],
           [ 1.08095968e+00,  1.15592217e+00,  1.09595215e+00,  ...,
             8.26087117e-01,  5.26237071e-01,  6.61169589e-01]]],


         [[[-3.53968143e-01, -6.82538673e-02, -3.65078375e-02,  ...,
             1.11112073e-02, -2.11111009e-01, -5.23808524e-02],
           [-1.15872920e-01, -1.47618949e-01, -1.63491964e-01,  ...,
            -5.23808524e-02, -3.69841158e-01, -1.63491964e-01],
           [-2.42857039e-01, -1.15872920e-01, -2.26984024e-01,  ...,
             1.22222304e-01,  2.49206424e-01, -2.42857039e-01],
           ...,
           [ 1.22222304e-01,  4.28572372e-02,  2.65079439e-01,  ...,
            -7.03174591e-01, -2.11111009e-01, -2.26984024e-01],
           [ 1.53968334e-01,  3.76190543e-01, -2.26984024e-01,  ...,
            -4.17460203e-01, -4.80952382e-01, -2.26984024e-01],
           [ 3.44444513e-01,  5.19047678e-01,  3.92063558e-01,  ...,
            -3.65078375e-02, -2.74603069e-01, -2.11111009e-01]],

          [[ 1.61031820e-02,  2.25442946e-01,  2.73752123e-01,  ...,
             4.02576596e-01,  8.05154145e-02,  2.89855182e-01],
           [ 2.41546005e-01,  1.77133769e-01,  1.93236828e-01,  ...,
             3.86473536e-01, -3.22059989e-02,  1.44927651e-01],
           [ 1.12721533e-01,  2.57649064e-01,  1.61030710e-01,  ...,
             4.99194920e-01,  8.21256101e-01,  1.77133769e-01],
           ...,
           [ 7.56843865e-01,  5.79710245e-01,  6.92431629e-01,  ...,
            -3.86473298e-01,  1.61030710e-01,  2.25442946e-01],
           [ 5.95813274e-01,  7.72946954e-01,  2.09339887e-01,  ...,
             8.05154145e-02, -1.77133530e-01,  1.44927651e-01],
           [ 6.28019392e-01,  8.21256101e-01,  8.37359190e-01,  ...,
             5.31401038e-01,  1.22934580e-07,  9.66184735e-02]],

          [[ 4.51274544e-01,  7.36132085e-01,  7.36132085e-01,  ...,
             8.56072128e-01,  5.56222081e-01,  7.51124620e-01],
           [ 7.21139610e-01,  7.21139610e-01,  6.31184578e-01,  ...,
             7.96102107e-01,  3.46327007e-01,  6.01199567e-01],
           [ 5.26237071e-01,  6.76162124e-01,  6.61169589e-01,  ...,
             9.16042149e-01,  9.76012170e-01,  5.71214557e-01],
           ...,
           [ 1.05097473e+00,  8.86057138e-01,  1.09595215e+00,  ...,
             1.66416958e-01,  5.86207092e-01,  6.16192102e-01],
           [ 1.03598225e+00,  1.08095968e+00,  5.86207092e-01,  ...,
             4.96252000e-01,  3.46327007e-01,  6.31184578e-01],
           [ 1.08095968e+00,  1.15592217e+00,  1.09595215e+00,  ...,
             8.26087117e-01,  5.26237071e-01,  6.61169589e-01]]]]],
       device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0490 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 124, vnnlib ID: 124 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-34.59972763, -34.53519440, -34.14106369, -34.35319901, -33.67615509,
         -34.70440292, -34.23949432, -33.75057220, -34.31835556, -34.29727173]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1404]; unstable size 1404; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 81, 1, 1404] with unstable size 80 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 29, 1, 1404] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1404] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [591]; unstable size 591; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 29, 1, 591] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 591] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [28]; unstable size 28; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.05910563, -0.77938378, -1.78872633, -1.65687847, -2.35277414,
         -1.31370735, -2.22220325, -2.45027637, -1.25590754]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-34.59972763, -34.53519440, -34.14106369, -34.35319901, -33.67615509,
         -34.70440292, -34.23949432, -33.75057220, -34.31835556, -34.29727173]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-34.59973145, -34.53519440, -34.14106750, -34.35320282, -33.67615509,
          -34.70440292, -34.23949814, -33.75057602, -34.31835556, -34.29727173],
         [-34.59973145, -34.53519440, -34.14106750, -34.35320282, -33.67615509,
          -34.70440292, -34.23949814, -33.75057602, -34.31835556, -34.29727173]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.30245972,  0.23792267, -0.15620422,  0.05593109, -0.62111664,
           0.40713120, -0.05777359, -0.54669571,  0.02108383]]],
       device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         ...,


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]]]], device='cuda:0') torch.Size([1, 9, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0523 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 125, vnnlib ID: 125 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-58.29714584, -57.90118027, -60.18743896, -59.44192886, -60.42624283,
         -59.59936523, -61.46879196, -60.85469055, -57.30718613, -57.58869934]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1362]; unstable size 1362; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 84, 1, 1362] with unstable size 83 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 35, 1, 1362] with unstable size 34 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1362] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [542]; unstable size 542; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 35, 1, 542] with unstable size 34 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 542] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [34]; unstable size 34; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 34] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.94109631, -0.99441969,  0.49997044,  0.26839161,  0.82512760,
          0.36659479,  2.06905603,  1.23585033, -2.24479532]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-58.29714584, -57.90118027, -60.18743896, -59.44192886, -60.42624283,
         -59.59936523, -61.46879196, -60.85469055, -57.30718613, -57.58869934]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-58.29714584, -57.90118027, -60.18744278, -59.44193649, -60.42624283,
          -59.59936905, -61.46878815, -60.85469055, -57.30718613, -57.58869934],
         [-58.29714584, -57.90118027, -60.18744278, -59.44193649, -60.42624283,
          -59.59936905, -61.46878815, -60.85469055, -57.30718613, -57.58869934]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.70844650,  0.31248093, -0.28151321]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0448 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 126, vnnlib ID: 126 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-25.94276047, -27.36098480, -22.26013184, -23.08490372, -22.52076149,
         -22.89262199, -23.31500244, -22.28990364, -27.62643242, -25.76537895]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1333]; unstable size 1333; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 85, 1, 1333] with unstable size 84 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 45, 1, 1333] with unstable size 44 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1333] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [537]; unstable size 537; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 45, 1, 537] with unstable size 44 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 537] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [44]; unstable size 44; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 44] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.91078377,  2.89122653, -1.09127843, -0.43792927, -0.63686347,
         -0.53382826, -0.96343756,  3.30262136,  1.13331985]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-25.94276047, -27.36098480, -22.26013184, -23.08490372, -22.52076149,
         -22.89262199, -23.31500244, -22.28990364, -27.62643242, -25.76537895]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-25.94275665, -27.36098289, -22.26013184, -23.08490181, -22.52075577,
          -22.89262009, -23.31500053, -22.28990173, -27.62643051, -25.76537323],
         [-25.94275665, -27.36098289, -22.26013184, -23.08490181, -22.52075577,
          -22.89262009, -23.31500053, -22.28990173, -27.62643051, -25.76537323]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.26062393,  0.56414604,  0.37186432,  0.79424477, -0.23085403]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-1.15872920e-01, -8.41268823e-02, -1.15872920e-01,  ...,
             4.71428633e-01, -5.44444442e-01, -7.82539666e-01],
           [ 5.03174663e-01,  2.01587379e-01,  5.87302521e-02,  ...,
             7.09523857e-01, -5.12698412e-01, -8.30158710e-01],
           [ 8.20634961e-01,  5.03174663e-01,  2.96825469e-01,  ...,
             7.57142901e-01, -6.39682531e-01, -8.46031725e-01],
           ...,
           [-4.96825397e-01, -4.96825397e-01, -5.44444442e-01,  ...,
            -9.73015904e-01, -9.57142830e-01, -8.93650770e-01],
           [-5.76190472e-01, -6.23809516e-01, -6.07936502e-01,  ...,
            -7.66666651e-01, -9.25396800e-01, -9.57142830e-01],
           [-4.17460203e-01, -7.19047606e-01, -6.71428561e-01,  ...,
            -8.46031725e-01, -9.41269815e-01, -9.25396800e-01]],

          [[ 6.44122481e-01,  4.66988832e-01,  1.44927651e-01,  ...,
             9.82286692e-01, -5.79710126e-01, -8.69565189e-01],
           [ 1.14331758e+00,  8.69565308e-01,  4.34782714e-01,  ...,
             1.03059590e+00, -5.47504008e-01, -9.33977425e-01],
           [ 1.35265732e+00,  1.01449287e+00,  4.34782714e-01,  ...,
             7.72946954e-01, -6.92431509e-01, -9.50080454e-01],
           ...,
           [-9.66182351e-02,  1.22934580e-07,  1.22934580e-07,  ...,
            -1.51368749e+00, -1.35265696e+00, -1.09500802e+00],
           [-3.38164121e-01, -3.38164121e-01, -2.41545767e-01,  ...,
            -1.04669881e+00, -1.14331722e+00, -1.17552328e+00],
           [-3.22061062e-01, -4.83091772e-01, -3.22061062e-01,  ...,
            -9.33977425e-01, -1.06280184e+00, -1.07890499e+00]],

          [[-5.98200858e-01, -7.78110921e-01, -9.73013461e-01,  ...,
            -5.83208382e-01, -1.21289361e+00, -1.34782624e+00],
           [-2.38380641e-01, -4.78260815e-01, -5.53223372e-01,  ...,
            -4.33283329e-01, -1.27286363e+00, -1.28785622e+00],
           [-1.63418129e-01, -3.58320802e-01, -4.63268340e-01,  ...,
             1.51424453e-01, -1.42278874e+00, -1.34782624e+00],
           ...,
           [-8.08095932e-01, -7.03148425e-01, -9.88005996e-01,  ...,
            -1.49775124e+00, -1.43778121e+00, -1.40779614e+00],
           [-8.08095932e-01, -4.78260815e-01, -5.53223372e-01,  ...,
            -1.22788620e+00, -1.34782624e+00, -1.40779614e+00],
           [-7.48125911e-01, -8.83058429e-01, -1.04797614e+00,  ...,
            -1.24287868e+00, -1.30284870e+00, -1.24287868e+00]]],


         [[[-1.15872920e-01, -8.41268823e-02, -1.15872920e-01,  ...,
             4.71428633e-01, -5.44444442e-01, -7.82539666e-01],
           [ 5.03174663e-01,  2.01587379e-01,  5.87302521e-02,  ...,
             7.09523857e-01, -5.12698412e-01, -8.30158710e-01],
           [ 8.20634961e-01,  5.03174663e-01,  2.96825469e-01,  ...,
             7.57142901e-01, -6.39682531e-01, -8.46031725e-01],
           ...,
           [-4.96825397e-01, -4.96825397e-01, -5.44444442e-01,  ...,
            -9.73015904e-01, -9.57142830e-01, -8.93650770e-01],
           [-5.76190472e-01, -6.23809516e-01, -6.07936502e-01,  ...,
            -7.66666651e-01, -9.25396800e-01, -9.57142830e-01],
           [-4.17460203e-01, -7.19047606e-01, -6.71428561e-01,  ...,
            -8.46031725e-01, -9.41269815e-01, -9.25396800e-01]],

          [[ 6.44122481e-01,  4.66988832e-01,  1.44927651e-01,  ...,
             9.82286692e-01, -5.79710126e-01, -8.69565189e-01],
           [ 1.14331758e+00,  8.69565308e-01,  4.34782714e-01,  ...,
             1.03059590e+00, -5.47504008e-01, -9.33977425e-01],
           [ 1.35265732e+00,  1.01449287e+00,  4.34782714e-01,  ...,
             7.72946954e-01, -6.92431509e-01, -9.50080454e-01],
           ...,
           [-9.66182351e-02,  1.22934580e-07,  1.22934580e-07,  ...,
            -1.51368749e+00, -1.35265696e+00, -1.09500802e+00],
           [-3.38164121e-01, -3.38164121e-01, -2.41545767e-01,  ...,
            -1.04669881e+00, -1.14331722e+00, -1.17552328e+00],
           [-3.22061062e-01, -4.83091772e-01, -3.22061062e-01,  ...,
            -9.33977425e-01, -1.06280184e+00, -1.07890499e+00]],

          [[-5.98200858e-01, -7.78110921e-01, -9.73013461e-01,  ...,
            -5.83208382e-01, -1.21289361e+00, -1.34782624e+00],
           [-2.38380641e-01, -4.78260815e-01, -5.53223372e-01,  ...,
            -4.33283329e-01, -1.27286363e+00, -1.28785622e+00],
           [-1.63418129e-01, -3.58320802e-01, -4.63268340e-01,  ...,
             1.51424453e-01, -1.42278874e+00, -1.34782624e+00],
           ...,
           [-8.08095932e-01, -7.03148425e-01, -9.88005996e-01,  ...,
            -1.49775124e+00, -1.43778121e+00, -1.40779614e+00],
           [-8.08095932e-01, -4.78260815e-01, -5.53223372e-01,  ...,
            -1.22788620e+00, -1.34782624e+00, -1.40779614e+00],
           [-7.48125911e-01, -8.83058429e-01, -1.04797614e+00,  ...,
            -1.24287868e+00, -1.30284870e+00, -1.24287868e+00]]],


         [[[-1.15872920e-01, -8.41268823e-02, -1.15872920e-01,  ...,
             4.71428633e-01, -5.44444442e-01, -7.82539666e-01],
           [ 5.03174663e-01,  2.01587379e-01,  5.87302521e-02,  ...,
             7.09523857e-01, -5.12698412e-01, -8.30158710e-01],
           [ 8.20634961e-01,  5.03174663e-01,  2.96825469e-01,  ...,
             7.57142901e-01, -6.39682531e-01, -8.46031725e-01],
           ...,
           [-4.96825397e-01, -4.96825397e-01, -5.44444442e-01,  ...,
            -9.73015904e-01, -9.57142830e-01, -8.93650770e-01],
           [-5.76190472e-01, -6.23809516e-01, -6.07936502e-01,  ...,
            -7.66666651e-01, -9.25396800e-01, -9.57142830e-01],
           [-4.17460203e-01, -7.19047606e-01, -6.71428561e-01,  ...,
            -8.46031725e-01, -9.41269815e-01, -9.25396800e-01]],

          [[ 6.44122481e-01,  4.66988832e-01,  1.44927651e-01,  ...,
             9.82286692e-01, -5.79710126e-01, -8.69565189e-01],
           [ 1.14331758e+00,  8.69565308e-01,  4.34782714e-01,  ...,
             1.03059590e+00, -5.47504008e-01, -9.33977425e-01],
           [ 1.35265732e+00,  1.01449287e+00,  4.34782714e-01,  ...,
             7.72946954e-01, -6.92431509e-01, -9.50080454e-01],
           ...,
           [-9.66182351e-02,  1.22934580e-07,  1.22934580e-07,  ...,
            -1.51368749e+00, -1.35265696e+00, -1.09500802e+00],
           [-3.38164121e-01, -3.38164121e-01, -2.41545767e-01,  ...,
            -1.04669881e+00, -1.14331722e+00, -1.17552328e+00],
           [-3.22061062e-01, -4.83091772e-01, -3.22061062e-01,  ...,
            -9.33977425e-01, -1.06280184e+00, -1.07890499e+00]],

          [[-5.98200858e-01, -7.78110921e-01, -9.73013461e-01,  ...,
            -5.83208382e-01, -1.21289361e+00, -1.34782624e+00],
           [-2.38380641e-01, -4.78260815e-01, -5.53223372e-01,  ...,
            -4.33283329e-01, -1.27286363e+00, -1.28785622e+00],
           [-1.63418129e-01, -3.58320802e-01, -4.63268340e-01,  ...,
             1.51424453e-01, -1.42278874e+00, -1.34782624e+00],
           ...,
           [-8.08095932e-01, -7.03148425e-01, -9.88005996e-01,  ...,
            -1.49775124e+00, -1.43778121e+00, -1.40779614e+00],
           [-8.08095932e-01, -4.78260815e-01, -5.53223372e-01,  ...,
            -1.22788620e+00, -1.34782624e+00, -1.40779614e+00],
           [-7.48125911e-01, -8.83058429e-01, -1.04797614e+00,  ...,
            -1.24287868e+00, -1.30284870e+00, -1.24287868e+00]]],


         [[[-1.15872920e-01, -8.41268823e-02, -1.15872920e-01,  ...,
             4.71428633e-01, -5.44444442e-01, -7.82539666e-01],
           [ 5.03174663e-01,  2.01587379e-01,  5.87302521e-02,  ...,
             7.09523857e-01, -5.12698412e-01, -8.30158710e-01],
           [ 8.20634961e-01,  5.03174663e-01,  2.96825469e-01,  ...,
             7.57142901e-01, -6.39682531e-01, -8.46031725e-01],
           ...,
           [-4.96825397e-01, -4.96825397e-01, -5.44444442e-01,  ...,
            -9.73015904e-01, -9.57142830e-01, -8.93650770e-01],
           [-5.76190472e-01, -6.23809516e-01, -6.07936502e-01,  ...,
            -7.66666651e-01, -9.25396800e-01, -9.57142830e-01],
           [-4.17460203e-01, -7.19047606e-01, -6.71428561e-01,  ...,
            -8.46031725e-01, -9.41269815e-01, -9.25396800e-01]],

          [[ 6.44122481e-01,  4.66988832e-01,  1.44927651e-01,  ...,
             9.82286692e-01, -5.79710126e-01, -8.69565189e-01],
           [ 1.14331758e+00,  8.69565308e-01,  4.34782714e-01,  ...,
             1.03059590e+00, -5.47504008e-01, -9.33977425e-01],
           [ 1.35265732e+00,  1.01449287e+00,  4.34782714e-01,  ...,
             7.72946954e-01, -6.92431509e-01, -9.50080454e-01],
           ...,
           [-9.66182351e-02,  1.22934580e-07,  1.22934580e-07,  ...,
            -1.51368749e+00, -1.35265696e+00, -1.09500802e+00],
           [-3.38164121e-01, -3.38164121e-01, -2.41545767e-01,  ...,
            -1.04669881e+00, -1.14331722e+00, -1.17552328e+00],
           [-3.22061062e-01, -4.83091772e-01, -3.22061062e-01,  ...,
            -9.33977425e-01, -1.06280184e+00, -1.07890499e+00]],

          [[-5.98200858e-01, -7.78110921e-01, -9.73013461e-01,  ...,
            -5.83208382e-01, -1.21289361e+00, -1.34782624e+00],
           [-2.38380641e-01, -4.78260815e-01, -5.53223372e-01,  ...,
            -4.33283329e-01, -1.27286363e+00, -1.28785622e+00],
           [-1.63418129e-01, -3.58320802e-01, -4.63268340e-01,  ...,
             1.51424453e-01, -1.42278874e+00, -1.34782624e+00],
           ...,
           [-8.08095932e-01, -7.03148425e-01, -9.88005996e-01,  ...,
            -1.49775124e+00, -1.43778121e+00, -1.40779614e+00],
           [-8.08095932e-01, -4.78260815e-01, -5.53223372e-01,  ...,
            -1.22788620e+00, -1.34782624e+00, -1.40779614e+00],
           [-7.48125911e-01, -8.83058429e-01, -1.04797614e+00,  ...,
            -1.24287868e+00, -1.30284870e+00, -1.24287868e+00]]],


         [[[-1.15872920e-01, -8.41268823e-02, -1.15872920e-01,  ...,
             4.71428633e-01, -5.44444442e-01, -7.82539666e-01],
           [ 5.03174663e-01,  2.01587379e-01,  5.87302521e-02,  ...,
             7.09523857e-01, -5.12698412e-01, -8.30158710e-01],
           [ 8.20634961e-01,  5.03174663e-01,  2.96825469e-01,  ...,
             7.57142901e-01, -6.39682531e-01, -8.46031725e-01],
           ...,
           [-4.96825397e-01, -4.96825397e-01, -5.44444442e-01,  ...,
            -9.73015904e-01, -9.57142830e-01, -8.93650770e-01],
           [-5.76190472e-01, -6.23809516e-01, -6.07936502e-01,  ...,
            -7.66666651e-01, -9.25396800e-01, -9.57142830e-01],
           [-4.17460203e-01, -7.19047606e-01, -6.71428561e-01,  ...,
            -8.46031725e-01, -9.41269815e-01, -9.25396800e-01]],

          [[ 6.44122481e-01,  4.66988832e-01,  1.44927651e-01,  ...,
             9.82286692e-01, -5.79710126e-01, -8.69565189e-01],
           [ 1.14331758e+00,  8.69565308e-01,  4.34782714e-01,  ...,
             1.03059590e+00, -5.47504008e-01, -9.33977425e-01],
           [ 1.35265732e+00,  1.01449287e+00,  4.34782714e-01,  ...,
             7.72946954e-01, -6.92431509e-01, -9.50080454e-01],
           ...,
           [-9.66182351e-02,  1.22934580e-07,  1.22934580e-07,  ...,
            -1.51368749e+00, -1.35265696e+00, -1.09500802e+00],
           [-3.38164121e-01, -3.38164121e-01, -2.41545767e-01,  ...,
            -1.04669881e+00, -1.14331722e+00, -1.17552328e+00],
           [-3.22061062e-01, -4.83091772e-01, -3.22061062e-01,  ...,
            -9.33977425e-01, -1.06280184e+00, -1.07890499e+00]],

          [[-5.98200858e-01, -7.78110921e-01, -9.73013461e-01,  ...,
            -5.83208382e-01, -1.21289361e+00, -1.34782624e+00],
           [-2.38380641e-01, -4.78260815e-01, -5.53223372e-01,  ...,
            -4.33283329e-01, -1.27286363e+00, -1.28785622e+00],
           [-1.63418129e-01, -3.58320802e-01, -4.63268340e-01,  ...,
             1.51424453e-01, -1.42278874e+00, -1.34782624e+00],
           ...,
           [-8.08095932e-01, -7.03148425e-01, -9.88005996e-01,  ...,
            -1.49775124e+00, -1.43778121e+00, -1.40779614e+00],
           [-8.08095932e-01, -4.78260815e-01, -5.53223372e-01,  ...,
            -1.22788620e+00, -1.34782624e+00, -1.40779614e+00],
           [-7.48125911e-01, -8.83058429e-01, -1.04797614e+00,  ...,
            -1.24287868e+00, -1.30284870e+00, -1.24287868e+00]]]]],
       device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0499 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 127, vnnlib ID: 127 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-61.91124344, -63.86796188, -63.07596207, -62.61431122, -62.60458755,
         -63.15557480, -64.63631439, -64.06715393, -60.79254150, -63.35760498]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1681]; unstable size 1681; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 85, 1, 1681] with unstable size 84 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 34, 1, 1681] with unstable size 33 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1681] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [557]; unstable size 557; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 34, 1, 557] with unstable size 33 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 557] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [33]; unstable size 33; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.29362869,  1.45793128,  0.22647452,  0.03074175, -0.43964338,
          0.48999155,  1.66736412,  0.96717024,  1.08905435]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-61.91124344, -63.86796188, -63.07596207, -62.61431122, -62.60458755,
         -63.15557480, -64.63631439, -64.06715393, -60.79254150, -63.35760498]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.01it/s]100%|██████████| 1/1 [00:00<00:00,  8.01it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-60.31430054, -62.59743118, -61.43879318, -61.08184433, -60.94345093,
          -61.60589600, -63.06167221, -62.38100052, -59.70325470, -62.08895874],
         [-60.31430054, -62.59743118, -61.43879318, -61.08184433, -60.94345093,
          -61.60589600, -63.06167221, -62.38100052, -59.70325470, -62.08895874]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.61104584, 1.24019623]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1278 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 5.807002067565918
alpha/beta optimization time: 1.4577951431274414
initial alpha-crown bounds: tensor([[-0.24785471,  1.52749789,  0.30941606,  0.09384537, -0.35653591,
          0.55615234,  1.73864508,  1.04641342,  1.13942218]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.3565359115600586
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.37543439865112
Verifying property 0 with 1 instances.
##### Instance 127 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.24785471]], device='cuda:0') need to verify.
Model prediction is: tensor([-61.91124344, -63.86796188, -63.07596207, -62.61431122, -62.60458755,
        -63.15557480, -64.63631439, -64.06715393, -60.79254150, -63.35760498],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.24785471]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1681
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 542
Node /39 input 0: size torch.Size([250]) unstable 33
-----------------
# of unstable neurons: 2256
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 9.608268737792969e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.24780797958374023
10 lb beta sum: 0.0, worst -0.2478083372116089
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0745    transfer 0.0001    finalize 0.0002    func 0.0751    
Accumulated time: func 0.0751    prepare 0.0002    bound 0.0745    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 41] 
split level 1: [/input-16, 134] 
split level 2: [/input-16, 95] 
split level 3: [/input-16, 182] 
split level 4: [/input-16, 115] 
split level 5: [/input-12, 3635] 
split level 6: [/input-16, 10] 
split level 7: [/input-12, 3617] 
split level 8: [/input-16, 89] 
split level 9: [/input-12, 5286] 
split level 10: [/input-12, 5285] 
split level 11: [/input-12, 5284] 
split level 12: [/input-16, 51] 
split level 13: [/input-16, 171] 
split level 14: [/input-16, 215] 
split level 15: [/input-16, 190] 
split level 16: [/input-12, 2804] 
split level 17: [/input-12, 2346] 
split level 18: [/input-12, 818] 
split level 19: [/input-12, 811] 
split level 20: [/input-12, 2484] 
split level 21: [/input-12, 7787] 
split level 22: [/input-16, 23] 
split level 23: [/input-12, 2013] 
split level 24: [/input-12, 7971] 
split level 25: [/input-12, 2449] 
split level 26: [/input-12, 291] 
split level 27: [/input-12, 4117] 
split level 28: [/input-12, 3186] 
split level 29: [/input-12, 5292] 
split level 30: [/input-12, 3594] 
split level 31: [/input-12, 825] 
split level 32: [/input-16, 73] 
split level 33: [/input-12, 6827] 
split level 34: [/input-12, 2442] 
split level 35: [/input-12, 7994] 
split level 36: [/input-12, 401] 
split level 37: [/input-12, 3189] 
split level 38: [/input-12, 2457] 
split level 39: [/input-12, 5362] 
split level 40: [/input-12, 2513] 
split level 41: [/input-12, 862] 
split level 42: [/input-12, 5677] 
split level 43: [/input-4, 1718] 
split level 44: [/input-12, 2459] 
split level 45: [/input-4, 168] 
split level 46: [/input-12, 2473] 
split level 47: [/input-12, 2026] 
split level 48: [/input-12, 7916] 
split level 49: [/input-12, 6829] 
split level 50: [/input-12, 410] 
split level 51: [/input-12, 2363] 
split level 52: [/input-16, 104] 
split level 53: [/input-12, 2550] 
split level 54: [/input-12, 3798] 
split level 55: [/input-12, 1362] 
split level 56: [/input-12, 2475] 
split level 57: [/input-12, 6487] 
split level 58: [/input-16, 225] 
split level 59: [/input-12, 2004] 
split level 60: [/input-4, 136] 
split level 61: [/input-12, 2357] 
split level 62: [/input-4, 5061] 
split level 63: [/input-12, 793] 
split level 64: [/input-12, 2321] 
split level 65: [/input-12, 5262] 
split level 66: [/input-4, 6311] 
split level 67: [/input-12, 3188] 
split level 68: [/input-12, 787] 
split level 69: [/input-12, 2349] 
split level 70: [/input-4, 4791] 
split level 71: [/input-4, 4535] 
split level 72: [/input-12, 7441] 
split level 73: [/input-16, 7] 
split level 74: [/input-12, 2915] 
split level 75: [/input-12, 83] 
split level 76: [/input-4, 1719] 
split level 77: [/input-12, 421] 
split level 78: [/input-12, 1771] 
split level 79: [/input-4, 5528] 
split level 80: [/input-12, 5306] 
split level 81: [/input-4, 3185] 
split level 82: [/input-4, 1703] 
split level 83: [/input-12, 5307] 
split level 84: [/input-12, 3934] 
split level 85: [/input-4, 1688] 
split level 86: [/input-4, 2967] 
split level 87: [/input-12, 2441] 
split level 88: [/input-12, 2353] 
split level 89: [/input-12, 2358] 
split level 90: [/input-4, 1237] 
split level 91: [/input-12, 739] 
split level 92: [/input-4, 135] 
split level 93: [/input-4, 121] 
split level 94: [/input-4, 2968] 
split level 95: [/input-12, 6994] 
split level 96: [/input-4, 102] 
split level 97: [/input-12, 5353] 
split level 98: [/input-4, 4505] 
split level 99: [/input-4, 2998] 
split level 100: [/input-4, 4504] 
split level 101: [/input-12, 7130] 
split level 102: [/input-12, 3190] 
split level 103: [/input-12, 3090] 
split level 104: [/input-12, 2920] 
split level 105: [/input-12, 3347] 
split level 106: [/input-12, 1241] 
split level 107: [/input-12, 6903] 
split level 108: [/input-12, 3385] 
split level 109: [/input-12, 8163] 
split level 110: [/input-12, 5261] 
split level 111: [/input-12, 4594] 
split level 112: [/input-12, 422] 
split level 113: [/input-4, 3751] 
split level 114: [/input-12, 7986] 
split level 115: [/input-4, 1116] 
split level 116: [/input-4, 1751] 
split level 117: [/input-12, 2481] 
split level 118: [/input-12, 3933] 
split level 119: [/input-12, 2350] 
split level 120: [/input-12, 3831] 
split level 121: [/input-4, 184] 
split level 122: [/input-4, 3767] 
split level 123: [/input-12, 3466] 
split level 124: [/input-4, 4506] 
split level 125: [/input-12, 1994] 
split level 126: [/input-4, 122] 
split level 127: [/input-12, 7450] 
split level 128: [/input-4, 4471] 
split level 129: [/input-4, 3031] 
split level 130: [/input-12, 3097] 
split level 131: [/input-4, 119] 
split level 132: [/input-12, 2096] 
split level 133: [/input-12, 5678] 
split level 134: [/input-4, 4457] 
split level 135: [/input-12, 785] 
split level 136: [/input-4, 6343] 
split level 137: [/input-4, 4456] 
split level 138: [/input-4, 6518] 
split level 139: [/input-4, 137] 
split level 140: [/input-4, 3735] 
split level 141: [/input-4, 4455] 
split level 142: [/input-12, 2506] 
split level 143: [/input-4, 230] 
split level 144: [/input-4, 1672] 
split level 145: [/input-4, 2912] 
split level 146: [/input-12, 5556] 
split level 147: [/input-4, 3697] 
split level 148: [/input-4, 4536] 
split level 149: [/input-4, 4474] 
split level 150: [/input-4, 3766] 
split level 151: [/input-4, 181] 
split level 152: [/input-4, 1670] 
split level 153: [/input-12, 2464] 
split level 154: [/input-12, 880] 
split level 155: [/input-4, 3528] 
split level 156: [/input-4, 2950] 
split level 157: [/input-4, 3223] 
split level 158: [/input-12, 4362] 
split level 159: [/input-4, 4507] 
split level 160: [/input-4, 3906] 
split level 161: [/input-12, 5555] 
split level 162: [/input-4, 153] 
split level 163: [/input-12, 5289] 
split level 164: [/input-4, 4508] 
split level 165: [/input-12, 8154] 
split level 166: [/input-12, 2434] 
split level 167: [/input-4, 6341] 
split level 168: [/input-12, 4354] 
split level 169: [/input-4, 2945] 
split level 170: [/input-12, 1739] 
split level 171: [/input-4, 155] 
split level 172: [/input-12, 1428] 
split level 173: [/input-4, 2997] 
split level 174: [/input-4, 2164] 
split level 175: [/input-4, 5529] 
split level 176: [/input-4, 2949] 
split level 177: [/input-4, 2231] 
split level 178: [/input-12, 5822] 
split level 179: [/input-4, 4551] 
split level 180: [/input-4, 4823] 
split level 181: [/input-4, 4537] 
split level 182: [/input-4, 3029] 
split level 183: [/input-12, 6491] 
split level 184: [/input-4, 123] 
split level 185: [/input-12, 1417] 
split level 186: [/input-4, 1640] 
split level 187: [/input-4, 4776] 
split level 188: [/input-4, 8056] 
split level 189: [/input-12, 2352] 
split level 190: [/input-4, 2982] 
split level 191: [/input-4, 4517] 
split level 192: [/input-12, 8074] 
split level 193: [/input-4, 6517] 
split level 194: [/input-4, 1117] 
split level 195: [/input-4, 3238] 
split level 196: [/input-12, 5526] 
split level 197: [/input-4, 124] 
split level 198: [/input-12, 2433] 
split level 199: [/input-4, 1657] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.24761927127838135
10 lb beta sum: 0.0, worst -0.24762064218521118
Time: prepare 0.0117    bound 0.1336    transfer 0.0029    finalize 0.0111    func 0.1618    
Accumulated time: func 0.2369    prepare 0.0218    bound 0.2081    transfer 0.0030    finalize 0.0113    
all_split False
======================Cut inference begins======================
max lb tensor(0.31028512) min lb tensor(-0.24761915)
Number of Verified Splits: 3 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.010493040084838867 
BICCOS Cumulative time: 0.010493040084838867
Preprocessing time: 0.010034561157226562 Inference time: 0.00015735626220703125 Add cuts time: 7.605552673339844e-05 Cut analysis time: 0.000225067138671875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23586 (1), -0.23552 (1), -0.23550 (1), -0.23543 (1), -0.23535 (1), -0.23500 (1), -0.23497 (1), -0.23482 (1), -0.23454 (1), -0.23433 (1), -0.23295 (1), -0.23208 (1), -0.23113 (1), -0.23082 (1), -0.23069 (1), -0.23063 (1), -0.23038 (1), -0.22895 (1), -0.22862 (1), -0.22825 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7813    set_bounds 0.0085    solve 0.1619    add 0.0763    
Accumulated time: pickout 0.0003    decision 0.7813    set_bounds 0.0085    solve 0.1619    add 0.0763    
Current (lb-rhs): -0.23586022853851318
50 domains visited
Cumulative time: 1.1244277954101562

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 41] [/input-16, 134] [/input-16, 41] [/input-16, 134] [/input-16, 41] [/input-16, 41] [/input-16, 41] [/input-16, 41] [/input-16, 41] [/input-16, 41] 
split level 1: [/input-16, 134] [/input-16, 95] [/input-16, 134] [/input-16, 95] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] 
split level 2: [/input-16, 95] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 182] [/input-16, 95] 
split level 3: [/input-16, 182] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 10] [/input-16, 182] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20381033420562744
10 lb beta sum: 0.5649589896202087, worst -0.18616288900375366
Time: prepare 0.0071    bound 0.1543    transfer 0.0016    finalize 0.0053    func 0.1709    
Accumulated time: func 0.4078    prepare 0.0292    bound 0.3624    transfer 0.0045    finalize 0.0165    
all_split False
======================Cut inference begins======================
max lb tensor(0.19569403) min lb tensor(-0.18605298)
Number of Verified Splits: 145 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 11
#cuts >= 20: 0
BICCOS time: 0.019904375076293945 
BICCOS Cumulative time: 0.030397415161132812
Preprocessing time: 0.011816263198852539 Inference time: 0.0060346126556396484 Add cuts time: 0.0017359256744384766 Cut analysis time: 0.00031757354736328125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09214 (2), -0.08908 (2), -0.08828 (2), -0.07341 (2), -0.06782 (2), -0.06759 (2), -0.05695 (2), -0.05681 (2), -0.05564 (2), -0.05424 (2), -0.05419 (2), -0.05338 (2), -0.05207 (2), -0.05200 (2), -0.05182 (2), -0.05151 (2), -0.05089 (2), -0.05079 (2), -0.05051 (2), -0.05025 (2), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0252    set_bounds 0.0128    solve 0.1710    add 0.0953    
Accumulated time: pickout 0.0010    decision 0.8065    set_bounds 0.0213    solve 0.3329    add 0.1715    
Current (lb-rhs): -0.09213757514953613
100 domains visited
Cumulative time: 1.449493169784546

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-16, 134] 
split level 1: [/input-16, 95] [/input-16, 182] [/input-16, 182] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] 
split level 2: [/input-16, 182] [/input-16, 10] [/input-16, 10] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] [/input-16, 182] 
split level 3: [/input-16, 10] [/input-12, 3617] [/input-12, 3617] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12389791011810303

all verified at 9th iter
Time: prepare 0.0075    bound 0.0775    transfer 0.0029    finalize 0.0053    func 0.0957    
Accumulated time: func 0.5036    prepare 0.0369    bound 0.4399    transfer 0.0075    finalize 0.0218    
all_split False
======================Cut inference begins======================
max lb tensor(0.17133665) min lb tensor(0.00138217)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.037174224853515625 
BICCOS Cumulative time: 0.06757164001464844
Preprocessing time: 0.01165628433227539 Inference time: 0.016383886337280273 Add cuts time: 0.008950471878051758 Cut analysis time: 0.00018358230590820312
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0007    decision 0.0256    set_bounds 0.0162    solve 0.0958    add 0.0189    
Accumulated time: pickout 0.0017    decision 0.8322    set_bounds 0.0375    solve 0.4287    add 0.1905    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 41, 134]), tensor([-1., -1.]), tensor([0, 0]), tensor([1.41763195e+17, 1.80538461e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 41, 134]), tensor([-1.,  1.]), tensor([0, 0]), tensor([1.41763195e+17, 4.78886813e-02]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 41,  10, 134]), tensor([ 1., -1., -1.]), tensor([0, 0, 0]), tensor([1.41763195e+17, 7.92407840e-02, 1.21939406e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 41,  10, 134]), tensor([ 1., -1.,  1.]), tensor([0, 0, 0]), tensor([1.41763195e+17, 7.92407840e-02, 1.09136924e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 41,  10, 134]), tensor([ 1.,  1., -1.]), tensor([0, 0, 0]), tensor([1.41763195e+17, 6.78846687e-02, 1.27972946e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 41,  10, 134]), tensor([1., 1., 1.]), tensor([0, 0, 0]), tensor([1.41763195e+17, 6.78846687e-02, 1.10027298e-01]), tensor([0, 1, 2]))}
Shallow branching resets to n domains:  6
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05283617973327637

all verified at 2th iter
Time: prepare 0.0004    bound 0.0201    transfer 0.0001    finalize 0.0003    func 0.0210    
Accumulated time: func 0.5245    prepare 0.0373    bound 0.4600    transfer 0.0076    finalize 0.0221    
After pruning, left:  0

Back to Regular BaB


Properties batch 1, size 1
Remaining timeout: 196.5292146205902
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 196.52914214134216
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 196.52845001220703
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 196.52842712402344
Verifying property 4 with 1 instances.
##### Instance 127 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.35653591]], device='cuda:0') need to verify.
Model prediction is: tensor([-61.91124344, -63.86796188, -63.07596207, -62.61431122, -62.60458755,
        -63.15557480, -64.63631439, -64.06715393, -60.79254150, -63.35760498],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.35653591]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1681
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 542
Node /39 input 0: size torch.Size([250]) unstable 33
-----------------
# of unstable neurons: 2256
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 9.202957153320312e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.35646867752075195
10 lb beta sum: 0.0, worst -0.35647010803222656
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0736    transfer 0.0001    finalize 0.0002    func 0.0741    
Accumulated time: func 0.0741    prepare 0.0002    bound 0.0736    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 115] 
split level 1: [/input-16, 89] 
split level 2: [/input-16, 10] 
split level 3: [/input-16, 64] 
split level 4: [/input-16, 225] 
split level 5: [/input-16, 95] 
split level 6: [/input-16, 23] 
split level 7: [/input-16, 154] 
split level 8: [/input-16, 13] 
split level 9: [/input-16, 7] 
split level 10: [/input-16, 99] 
split level 11: [/input-16, 182] 
split level 12: [/input-16, 104] 
split level 13: [/input-16, 160] 
split level 14: [/input-16, 190] 
split level 15: [/input-16, 72] 
split level 16: [/input-16, 41] 
split level 17: [/input-12, 7971] 
split level 18: [/input-12, 3617] 
split level 19: [/input-16, 171] 
split level 20: [/input-12, 3635] 
split level 21: [/input-16, 235] 
split level 22: [/input-16, 73] 
split level 23: [/input-12, 811] 
split level 24: [/input-12, 818] 
split level 25: [/input-12, 2449] 
split level 26: [/input-12, 2004] 
split level 27: [/input-12, 2804] 
split level 28: [/input-12, 2467] 
split level 29: [/input-12, 5284] 
split level 30: [/input-12, 2484] 
split level 31: [/input-4, 6311] 
split level 32: [/input-4, 4791] 
split level 33: [/input-12, 5642] 
split level 34: [/input-12, 2475] 
split level 35: [/input-12, 4465] 
split level 36: [/input-12, 787] 
split level 37: [/input-12, 2457] 
split level 38: [/input-12, 401] 
split level 39: [/input-12, 3189] 
split level 40: [/input-12, 5362] 
split level 41: [/input-12, 2013] 
split level 42: [/input-12, 5555] 
split level 43: [/input-12, 83] 
split level 44: [/input-12, 2915] 
split level 45: [/input-12, 2473] 
split level 46: [/input-12, 1467] 
split level 47: [/input-12, 5261] 
split level 48: [/input-12, 7508] 
split level 49: [/input-4, 3767] 
split level 50: [/input-4, 1719] 
split level 51: [/input-12, 793] 
split level 52: [/input-12, 7916] 
split level 53: [/input-4, 168] 
split level 54: [/input-12, 2834] 
split level 55: [/input-12, 2442] 
split level 56: [/input-4, 83] 
split level 57: [/input-12, 3169] 
split level 58: [/input-12, 1994] 
split level 59: [/input-12, 4117] 
split level 60: [/input-12, 825] 
split level 61: [/input-4, 1703] 
split level 62: [/input-4, 3751] 
split level 63: [/input-4, 1718] 
split level 64: [/input-4, 5528] 
split level 65: [/input-12, 2929] 
split level 66: [/input-12, 2513] 
split level 67: [/input-4, 5473] 
split level 68: [/input-4, 136] 
split level 69: [/input-12, 3190] 
split level 70: [/input-4, 4535] 
split level 71: [/input-12, 2441] 
split level 72: [/input-12, 4466] 
split level 73: [/input-12, 2346] 
split level 74: [/input-12, 4877] 
split level 75: [/input-12, 785] 
split level 76: [/input-4, 6315] 
split level 77: [/input-12, 7913] 
split level 78: [/input-12, 3800] 
split level 79: [/input-12, 410] 
split level 80: [/input-12, 2026] 
split level 81: [/input-12, 4594] 
split level 82: [/input-4, 1196] 
split level 83: [/input-4, 1720] 
split level 84: [/input-12, 2506] 
split level 85: [/input-12, 5677] 
split level 86: [/input-12, 6487] 
split level 87: [/input-4, 5529] 
split level 88: [/input-4, 119] 
split level 89: [/input-4, 5334] 
split level 90: [/input-4, 3735] 
split level 91: [/input-12, 3188] 
split level 92: [/input-12, 3186] 
split level 93: [/input-4, 102] 
split level 94: [/input-12, 5292] 
split level 95: [/input-12, 2516] 
split level 96: [/input-12, 2550] 
split level 97: [/input-4, 135] 
split level 98: [/input-4, 3528] 
split level 99: [/input-4, 3766] 
split level 100: [/input-4, 4792] 
split level 101: [/input-4, 4778] 
split level 102: [/input-4, 2998] 
split level 103: [/input-12, 6756] 
split level 104: [/input-12, 2459] 
split level 105: [/input-4, 2967] 
split level 106: [/input-4, 3750] 
split level 107: [/input-12, 2481] 
split level 108: [/input-4, 5061] 
split level 109: [/input-4, 3238] 
split level 110: [/input-12, 2434] 
split level 111: [/input-12, 5556] 
split level 112: [/input-4, 2883] 
split level 113: [/input-4, 4504] 
split level 114: [/input-4, 1260] 
split level 115: [/input-4, 4781] 
split level 116: [/input-12, 6827] 
split level 117: [/input-4, 1261] 
split level 118: [/input-4, 184] 
split level 119: [/input-4, 4779] 
split level 120: [/input-12, 6829] 
split level 121: [/input-12, 3908] 
split level 122: [/input-4, 1688] 
split level 123: [/input-4, 4536] 
split level 124: [/input-4, 6316] 
split level 125: [/input-4, 6343] 
split level 126: [/input-4, 1351] 
split level 127: [/input-12, 5353] 
split level 128: [/input-4, 238] 
split level 129: [/input-4, 6325] 
split level 130: [/input-4, 3091] 
split level 131: [/input-12, 5285] 
split level 132: [/input-12, 4211] 
split level 133: [/input-12, 2096] 
split level 134: [/input-4, 4776] 
split level 135: [/input-12, 2032] 
split level 136: [/input-4, 204] 
split level 137: [/input-4, 1228] 
split level 138: [/input-4, 1462] 
split level 139: [/input-4, 4505] 
split level 140: [/input-4, 3122] 
split level 141: [/input-4, 6313] 
split level 142: [/input-4, 3223] 
split level 143: [/input-4, 2866] 
split level 144: [/input-4, 2982] 
split level 145: [/input-4, 4537] 
split level 146: [/input-12, 1674] 
split level 147: [/input-4, 1244] 
split level 148: [/input-4, 1588] 
split level 149: [/input-4, 2950] 
split level 150: [/input-4, 137] 
split level 151: [/input-4, 6341] 
split level 152: [/input-4, 4555] 
split level 153: [/input-12, 6424] 
split level 154: [/input-4, 3185] 
split level 155: [/input-4, 2867] 
split level 156: [/input-12, 6760] 
split level 157: [/input-12, 7509] 
split level 158: [/input-4, 3530] 
split level 159: [/input-12, 3934] 
split level 160: [/input-4, 237] 
split level 161: [/input-4, 2834] 
split level 162: [/input-4, 1245] 
split level 163: [/input-12, 784] 
split level 164: [/input-4, 70] 
split level 165: [/input-4, 50] 
split level 166: [/input-12, 880] 
split level 167: [/input-12, 6763] 
split level 168: [/input-4, 1226] 
split level 169: [/input-4, 1230] 
split level 170: [/input-4, 5684] 
split level 171: [/input-4, 1262] 
split level 172: [/input-4, 1243] 
split level 173: [/input-4, 1214] 
split level 174: [/input-4, 4245] 
split level 175: [/input-4, 4506] 
split level 176: [/input-12, 2610] 
split level 177: [/input-4, 7883] 
split level 178: [/input-4, 2747] 
split level 179: [/input-4, 4212] 
split level 180: [/input-4, 6360] 
split level 181: [/input-4, 3155] 
split level 182: [/input-4, 8120] 
split level 183: [/input-4, 2997] 
split level 184: [/input-12, 2543] 
split level 185: [/input-4, 2231] 
split level 186: [/input-4, 6344] 
split level 187: [/input-4, 4759] 
split level 188: [/input-4, 3734] 
split level 189: [/input-4, 1754] 
split level 190: [/input-4, 203] 
split level 191: [/input-4, 38] 
split level 192: [/input-4, 4823] 
split level 193: [/input-4, 4419] 
split level 194: [/input-4, 4551] 
split level 195: [/input-4, 2885] 
split level 196: [/input-12, 3933] 
split level 197: [/input-4, 6626] 
split level 198: [/input-4, 53] 
split level 199: [/input-4, 6625] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3560147285461426
10 lb beta sum: 0.0, worst -0.3560047149658203
Time: prepare 0.0113    bound 0.1346    transfer 0.0015    finalize 0.0057    func 0.1558    
Accumulated time: func 0.2299    prepare 0.0213    bound 0.2082    transfer 0.0016    finalize 0.0059    
all_split False
======================Cut inference begins======================
max lb tensor(0.48105288) min lb tensor(-0.35600185)
Number of Verified Splits: 4 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.010467290878295898 
BICCOS Cumulative time: 0.010467290878295898
Preprocessing time: 0.00996255874633789 Inference time: 0.00018835067749023438 Add cuts time: 7.82012939453125e-05 Cut analysis time: 0.00023818016052246094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33603 (1), -0.33580 (1), -0.33560 (1), -0.33530 (1), -0.33419 (1), -0.33310 (1), -0.33275 (1), -0.33200 (1), -0.33180 (1), -0.32977 (1), -0.32932 (1), -0.32898 (1), -0.32872 (1), -0.32834 (1), -0.32816 (1), -0.32752 (1), -0.32744 (1), -0.32683 (1), -0.32496 (1), -0.32466 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.7772    set_bounds 0.0095    solve 0.1559    add 0.0745    
Accumulated time: pickout 0.0004    decision 0.7772    set_bounds 0.0095    solve 0.1559    add 0.0745    
Current (lb-rhs): -0.336031436920166
50 domains visited
Cumulative time: 1.10960054397583

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 10] [/input-16, 89] [/input-16, 89] [/input-16, 89] [/input-16, 89] [/input-16, 89] [/input-16, 89] [/input-16, 89] [/input-16, 89] [/input-16, 89] 
split level 1: [/input-16, 64] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 64] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] 
split level 2: [/input-16, 225] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 225] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 225] 
split level 3: [/input-16, 95] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 95] [/input-16, 225] [/input-16, 225] [/input-16, 95] [/input-16, 225] [/input-16, 95] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.28223514556884766
10 lb beta sum: 0.7458229660987854, worst -0.2692407965660095
Time: prepare 0.0069    bound 0.1544    transfer 0.0015    finalize 0.0053    func 0.1707    
Accumulated time: func 0.4006    prepare 0.0285    bound 0.3626    transfer 0.0032    finalize 0.0112    
all_split False
======================Cut inference begins======================
max lb tensor(0.14345932) min lb tensor(-0.26919514)
Number of Verified Splits: 68 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.01615118980407715 
BICCOS Cumulative time: 0.026618480682373047
Preprocessing time: 0.011878013610839844 Inference time: 0.002634286880493164 Add cuts time: 0.001325845718383789 Cut analysis time: 0.00031304359436035156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10898 (2), -0.10730 (2), -0.10668 (2), -0.10039 (2), -0.10038 (2), -0.09883 (2), -0.09881 (2), -0.09851 (2), -0.09827 (2), -0.09769 (2), -0.09746 (2), -0.09683 (2), -0.09563 (2), -0.09167 (2), -0.09107 (2), -0.08813 (2), -0.08783 (2), -0.08384 (2), -0.08260 (2), -0.08171 (2), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0252    set_bounds 0.0134    solve 0.1708    add 0.0871    
Accumulated time: pickout 0.0010    decision 0.8024    set_bounds 0.0230    solve 0.3267    add 0.1617    
Current (lb-rhs): -0.10898071527481079
100 domains visited
Cumulative time: 1.423166036605835

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 89] [/input-16, 89] [/input-16, 89] [/input-16, 89] [/input-16, 89] [/input-16, 89] [/input-16, 89] [/input-16, 89] [/input-16, 89] [/input-16, 89] 
split level 1: [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 64] [/input-16, 64] [/input-16, 64] 
split level 2: [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 64] [/input-16, 225] [/input-16, 64] [/input-16, 225] [/input-16, 225] [/input-16, 95] [/input-16, 95] 
split level 3: [/input-16, 23] [/input-16, 23] [/input-16, 95] [/input-16, 23] [/input-16, 95] [/input-16, 23] [/input-16, 95] [/input-16, 95] [/input-16, 23] [/input-16, 23] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0914449691772461
10 lb beta sum: 0.5685640573501587, worst -0.012994229793548584
Time: prepare 0.0061    bound 0.1531    transfer 0.0015    finalize 0.0053    func 0.1686    
Accumulated time: func 0.5692    prepare 0.0348    bound 0.5157    transfer 0.0047    finalize 0.0165    
all_split False
======================Cut inference begins======================
max lb tensor(0.24080801) min lb tensor(-0.01049387)
Number of Verified Splits: 388 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 15
#cuts >= 20: 0
BICCOS time: 0.03660011291503906 
BICCOS Cumulative time: 0.06321859359741211
Preprocessing time: 0.011576414108276367 Inference time: 0.017963171005249023 Add cuts time: 0.006697177886962891 Cut analysis time: 0.00036334991455078125
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0006    decision 0.0253    set_bounds 0.0158    solve 0.1687    add 0.0195    
Accumulated time: pickout 0.0016    decision 0.8277    set_bounds 0.0388    solve 0.4953    add 0.1811    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([10, 64, 89]), tensor([-1., -1., -1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  1.23323917e-01,  1.83163017e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([10, 64, 89]), tensor([-1., -1.,  1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  1.23323917e-01,  1.06676906e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([10, 64, 89]), tensor([-1.,  1., -1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  1.33306041e-01,  1.68894365e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([10, 64, 89]), tensor([-1.,  1.,  1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  1.33306041e-01,  1.09691277e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([10, 64]), tensor([ 1., -1.]), tensor([0, 0]), tensor([-1.26703658e+34,  1.19989380e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([10, 64, 89]), tensor([ 1.,  1., -1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  1.37258992e-01,  1.70014486e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([10, 64, 89]), tensor([1., 1., 1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  1.37258992e-01,  9.01814550e-02]), tensor([0, 1, 2]))}
Shallow branching resets to n domains:  7
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13135814666748047

all verified at 1th iter
Time: prepare 0.0004    bound 0.0145    transfer 0.0001    finalize 0.0004    func 0.0156    
Accumulated time: func 0.5848    prepare 0.0353    bound 0.5302    transfer 0.0048    finalize 0.0169    
After pruning, left:  0

Back to Regular BaB


Properties batch 5, size 1
Remaining timeout: 194.62853240966797
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 194.62845849990845
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 194.62843441963196
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 194.6277244091034
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 5.3723 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 128, vnnlib ID: 128 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-32.12008667, -35.09343719, -30.75292397, -31.46902847, -30.26540756,
         -31.65769768, -30.27017784, -31.72326851, -34.07661057, -33.55573273]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1316]; unstable size 1316; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 85, 1, 1316] with unstable size 84 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 45, 1, 1316] with unstable size 44 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1316] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [630]; unstable size 630; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 45, 1, 630] with unstable size 44 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 630] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [44]; unstable size 44; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 44] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.13592887,  2.21363115, -0.73349428,  0.16164237, -1.07287335,
          0.26225019, -0.28342724,  1.56192923,  0.69428492]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-32.12008667, -35.09343719, -30.75292397, -31.46902847, -30.26540756,
         -31.65769768, -30.27017784, -31.72326851, -34.07661057, -33.55573273]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-32.12009048, -35.09343338, -30.75292397, -31.46902466, -30.26540565,
          -31.65769386, -30.27017784, -31.72327042, -34.07661057, -33.55573273],
         [-32.12009048, -35.09343338, -30.75292397, -31.46902466, -30.26540565,
          -31.65769386, -30.27017784, -31.72327042, -34.07661057, -33.55573273]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.84991264,  0.48274612, -0.00477219,  1.45309258]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 4.28572372e-02,  5.87302521e-02, -4.76180762e-03,  ...,
            -1.15872920e-01, -4.76180762e-03,  2.01587379e-01],
           [ 2.17460394e-01,  1.53968334e-01,  1.85714364e-01,  ...,
            -1.95237994e-01, -8.41268823e-02,  4.28572372e-02],
           [ 1.11112073e-02,  1.69841349e-01,  5.34920692e-01,  ...,
            -2.90476084e-01, -8.41268823e-02, -1.15872920e-01],
           ...,
           [ 5.34920692e-01, -1.16349196e+00, -1.95714283e+00,  ...,
            -4.49206233e-01, -5.28571427e-01, -3.85714173e-01],
           [ 1.69841349e-01, -1.05238092e+00, -1.63968253e+00,  ...,
            -2.74603069e-01, -6.07936502e-01, -4.80952382e-01],
           [ 7.46032670e-02, -5.28571427e-01, -9.73015904e-01,  ...,
            -2.74603069e-01, -3.85714173e-01, -3.69841158e-01]],

          [[ 1.93236828e-01,  1.61030710e-01,  4.83092964e-02,  ...,
            -1.28824353e-01, -1.61029361e-02,  1.61030710e-01],
           [ 3.05958241e-01,  2.09339887e-01,  2.41546005e-01,  ...,
            -1.28824353e-01, -3.22059989e-02,  6.44123554e-02],
           [ 4.83092964e-02,  1.77133769e-01,  6.11916363e-01,  ...,
            -1.77133530e-01,  3.22062373e-02, -4.83090580e-02],
           ...,
           [ 4.66988832e-01, -1.22383249e+00, -1.95652175e+00,  ...,
            -5.79710126e-01, -7.08534598e-01, -5.79710126e-01],
           [ 1.12721533e-01, -1.11111104e+00, -1.65861523e+00,  ...,
            -4.02576357e-01, -7.89049864e-01, -6.60225391e-01],
           [ 3.22062373e-02, -5.95813155e-01, -1.03059578e+00,  ...,
            -4.34782475e-01, -5.63607037e-01, -4.99194801e-01]],

          [[ 2.86356986e-01,  1.81409463e-01,  9.14544314e-02,  ...,
             1.49940979e-03, -4.34781015e-02,  4.64769229e-02],
           [ 2.86356986e-01,  1.36431947e-01,  2.56371975e-01,  ...,
             3.14844176e-02, -1.34930937e-02,  3.14844176e-02],
           [-2.98350781e-01, -1.93403140e-01,  3.91304523e-01,  ...,
            -1.34930937e-02,  6.14694245e-02, -2.84855980e-02],
           ...,
           [ 1.96401969e-01, -1.12293863e+00, -1.69265378e+00,  ...,
            -9.43028450e-01, -9.13043439e-01, -8.68065953e-01],
           [-1.33433133e-01, -1.06296861e+00, -1.52773619e+00,  ...,
            -7.48125911e-01, -1.01799107e+00, -9.88005996e-01],
           [-1.93403140e-01, -6.43178403e-01, -1.07796109e+00,  ...,
            -7.33133376e-01, -9.28035975e-01, -8.68065953e-01]]],


         [[[ 4.28572372e-02,  5.87302521e-02, -4.76180762e-03,  ...,
            -1.15872920e-01, -4.76180762e-03,  2.01587379e-01],
           [ 2.17460394e-01,  1.53968334e-01,  1.85714364e-01,  ...,
            -1.95237994e-01, -8.41268823e-02,  4.28572372e-02],
           [ 1.11112073e-02,  1.69841349e-01,  5.34920692e-01,  ...,
            -2.90476084e-01, -8.41268823e-02, -1.15872920e-01],
           ...,
           [ 5.34920692e-01, -1.16349196e+00, -1.95714283e+00,  ...,
            -4.49206233e-01, -5.28571427e-01, -3.85714173e-01],
           [ 1.69841349e-01, -1.05238092e+00, -1.63968253e+00,  ...,
            -2.74603069e-01, -6.07936502e-01, -4.80952382e-01],
           [ 7.46032670e-02, -5.28571427e-01, -9.73015904e-01,  ...,
            -2.74603069e-01, -3.85714173e-01, -3.69841158e-01]],

          [[ 1.93236828e-01,  1.61030710e-01,  4.83092964e-02,  ...,
            -1.28824353e-01, -1.61029361e-02,  1.61030710e-01],
           [ 3.05958241e-01,  2.09339887e-01,  2.41546005e-01,  ...,
            -1.28824353e-01, -3.22059989e-02,  6.44123554e-02],
           [ 4.83092964e-02,  1.77133769e-01,  6.11916363e-01,  ...,
            -1.77133530e-01,  3.22062373e-02, -4.83090580e-02],
           ...,
           [ 4.66988832e-01, -1.22383249e+00, -1.95652175e+00,  ...,
            -5.79710126e-01, -7.08534598e-01, -5.79710126e-01],
           [ 1.12721533e-01, -1.11111104e+00, -1.65861523e+00,  ...,
            -4.02576357e-01, -7.89049864e-01, -6.60225391e-01],
           [ 3.22062373e-02, -5.95813155e-01, -1.03059578e+00,  ...,
            -4.34782475e-01, -5.63607037e-01, -4.99194801e-01]],

          [[ 2.86356986e-01,  1.81409463e-01,  9.14544314e-02,  ...,
             1.49940979e-03, -4.34781015e-02,  4.64769229e-02],
           [ 2.86356986e-01,  1.36431947e-01,  2.56371975e-01,  ...,
             3.14844176e-02, -1.34930937e-02,  3.14844176e-02],
           [-2.98350781e-01, -1.93403140e-01,  3.91304523e-01,  ...,
            -1.34930937e-02,  6.14694245e-02, -2.84855980e-02],
           ...,
           [ 1.96401969e-01, -1.12293863e+00, -1.69265378e+00,  ...,
            -9.43028450e-01, -9.13043439e-01, -8.68065953e-01],
           [-1.33433133e-01, -1.06296861e+00, -1.52773619e+00,  ...,
            -7.48125911e-01, -1.01799107e+00, -9.88005996e-01],
           [-1.93403140e-01, -6.43178403e-01, -1.07796109e+00,  ...,
            -7.33133376e-01, -9.28035975e-01, -8.68065953e-01]]],


         [[[ 4.28572372e-02,  5.87302521e-02, -4.76180762e-03,  ...,
            -1.15872920e-01, -4.76180762e-03,  2.01587379e-01],
           [ 2.17460394e-01,  1.53968334e-01,  1.85714364e-01,  ...,
            -1.95237994e-01, -8.41268823e-02,  4.28572372e-02],
           [ 1.11112073e-02,  1.69841349e-01,  5.34920692e-01,  ...,
            -2.90476084e-01, -8.41268823e-02, -1.15872920e-01],
           ...,
           [ 5.34920692e-01, -1.16349196e+00, -1.95714283e+00,  ...,
            -4.49206233e-01, -5.28571427e-01, -3.85714173e-01],
           [ 1.69841349e-01, -1.05238092e+00, -1.63968253e+00,  ...,
            -2.74603069e-01, -6.07936502e-01, -4.80952382e-01],
           [ 7.46032670e-02, -5.28571427e-01, -9.73015904e-01,  ...,
            -2.74603069e-01, -3.85714173e-01, -3.69841158e-01]],

          [[ 1.93236828e-01,  1.61030710e-01,  4.83092964e-02,  ...,
            -1.28824353e-01, -1.61029361e-02,  1.61030710e-01],
           [ 3.05958241e-01,  2.09339887e-01,  2.41546005e-01,  ...,
            -1.28824353e-01, -3.22059989e-02,  6.44123554e-02],
           [ 4.83092964e-02,  1.77133769e-01,  6.11916363e-01,  ...,
            -1.77133530e-01,  3.22062373e-02, -4.83090580e-02],
           ...,
           [ 4.66988832e-01, -1.22383249e+00, -1.95652175e+00,  ...,
            -5.79710126e-01, -7.08534598e-01, -5.79710126e-01],
           [ 1.12721533e-01, -1.11111104e+00, -1.65861523e+00,  ...,
            -4.02576357e-01, -7.89049864e-01, -6.60225391e-01],
           [ 3.22062373e-02, -5.95813155e-01, -1.03059578e+00,  ...,
            -4.34782475e-01, -5.63607037e-01, -4.99194801e-01]],

          [[ 2.86356986e-01,  1.81409463e-01,  9.14544314e-02,  ...,
             1.49940979e-03, -4.34781015e-02,  4.64769229e-02],
           [ 2.86356986e-01,  1.36431947e-01,  2.56371975e-01,  ...,
             3.14844176e-02, -1.34930937e-02,  3.14844176e-02],
           [-2.98350781e-01, -1.93403140e-01,  3.91304523e-01,  ...,
            -1.34930937e-02,  6.14694245e-02, -2.84855980e-02],
           ...,
           [ 1.96401969e-01, -1.12293863e+00, -1.69265378e+00,  ...,
            -9.43028450e-01, -9.13043439e-01, -8.68065953e-01],
           [-1.33433133e-01, -1.06296861e+00, -1.52773619e+00,  ...,
            -7.48125911e-01, -1.01799107e+00, -9.88005996e-01],
           [-1.93403140e-01, -6.43178403e-01, -1.07796109e+00,  ...,
            -7.33133376e-01, -9.28035975e-01, -8.68065953e-01]]],


         [[[ 4.28572372e-02,  5.87302521e-02, -4.76180762e-03,  ...,
            -1.15872920e-01, -4.76180762e-03,  2.01587379e-01],
           [ 2.17460394e-01,  1.53968334e-01,  1.85714364e-01,  ...,
            -1.95237994e-01, -8.41268823e-02,  4.28572372e-02],
           [ 1.11112073e-02,  1.69841349e-01,  5.34920692e-01,  ...,
            -2.90476084e-01, -8.41268823e-02, -1.15872920e-01],
           ...,
           [ 5.34920692e-01, -1.16349196e+00, -1.95714283e+00,  ...,
            -4.49206233e-01, -5.28571427e-01, -3.85714173e-01],
           [ 1.69841349e-01, -1.05238092e+00, -1.63968253e+00,  ...,
            -2.74603069e-01, -6.07936502e-01, -4.80952382e-01],
           [ 7.46032670e-02, -5.28571427e-01, -9.73015904e-01,  ...,
            -2.74603069e-01, -3.85714173e-01, -3.69841158e-01]],

          [[ 1.93236828e-01,  1.61030710e-01,  4.83092964e-02,  ...,
            -1.28824353e-01, -1.61029361e-02,  1.61030710e-01],
           [ 3.05958241e-01,  2.09339887e-01,  2.41546005e-01,  ...,
            -1.28824353e-01, -3.22059989e-02,  6.44123554e-02],
           [ 4.83092964e-02,  1.77133769e-01,  6.11916363e-01,  ...,
            -1.77133530e-01,  3.22062373e-02, -4.83090580e-02],
           ...,
           [ 4.66988832e-01, -1.22383249e+00, -1.95652175e+00,  ...,
            -5.79710126e-01, -7.08534598e-01, -5.79710126e-01],
           [ 1.12721533e-01, -1.11111104e+00, -1.65861523e+00,  ...,
            -4.02576357e-01, -7.89049864e-01, -6.60225391e-01],
           [ 3.22062373e-02, -5.95813155e-01, -1.03059578e+00,  ...,
            -4.34782475e-01, -5.63607037e-01, -4.99194801e-01]],

          [[ 2.86356986e-01,  1.81409463e-01,  9.14544314e-02,  ...,
             1.49940979e-03, -4.34781015e-02,  4.64769229e-02],
           [ 2.86356986e-01,  1.36431947e-01,  2.56371975e-01,  ...,
             3.14844176e-02, -1.34930937e-02,  3.14844176e-02],
           [-2.98350781e-01, -1.93403140e-01,  3.91304523e-01,  ...,
            -1.34930937e-02,  6.14694245e-02, -2.84855980e-02],
           ...,
           [ 1.96401969e-01, -1.12293863e+00, -1.69265378e+00,  ...,
            -9.43028450e-01, -9.13043439e-01, -8.68065953e-01],
           [-1.33433133e-01, -1.06296861e+00, -1.52773619e+00,  ...,
            -7.48125911e-01, -1.01799107e+00, -9.88005996e-01],
           [-1.93403140e-01, -6.43178403e-01, -1.07796109e+00,  ...,
            -7.33133376e-01, -9.28035975e-01, -8.68065953e-01]]]]],
       device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0502 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 129, vnnlib ID: 129 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-58.96409225, -63.67180634, -58.37410355, -58.46662903, -58.03748703,
         -58.40044403, -59.34649277, -59.85384750, -59.39823151, -62.90203857]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1328]; unstable size 1328; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 80, 1, 1328] with unstable size 79 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 31, 1, 1328] with unstable size 30 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1328] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [642]; unstable size 642; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 31, 1, 642] with unstable size 30 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 642] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [30]; unstable size 30; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.91984689,  3.12032175, -1.04570127, -0.08434653, -1.26405060,
          0.04140961,  0.04349828, -0.74095440,  2.25613928]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-58.96409225, -63.67180634, -58.37410355, -58.46662903, -58.03748703,
         -58.40044403, -59.34649277, -59.85384750, -59.39823151, -62.90203857]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-58.96408844, -63.67180634, -58.37410355, -58.46662521, -58.03749084,
          -58.40044785, -59.34648895, -59.85384750, -59.39823532, -62.90203857],
         [-58.96408844, -63.67180634, -58.37410355, -58.46662521, -58.03749084,
          -58.40044785, -59.34648895, -59.85384750, -59.39823532, -62.90203857]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.56364059, -0.02634430,  0.06617737, -0.36295700,  0.99778748]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-1.16349196, -0.29047608,  0.40793657,  ...,  0.47142863,
             0.53492069,  0.82063496],
           [-1.16349196, -0.24285704,  0.37619054,  ...,  1.20158756,
             1.13809550,  1.26507962],
           [-0.92539680,  0.07460327,  0.24920642,  ...,  1.36031771,
             1.34444475,  1.18571460],
           ...,
           [-0.29047608, -0.35396814, -0.33809513,  ...,  0.37619054,
             0.42380959,  0.12222230],
           [-0.56031746, -0.60793650, -0.46507925,  ...,  0.04285724,
            -0.09999990, -0.05238085],
           [-0.68730158, -0.67142856, -0.43333322,  ..., -0.24285704,
            -0.36984116, -0.32222211]],

          [[-1.27214170, -0.33816412,  0.33816436,  ...,  0.35426742,
             0.45088577,  0.78904998],
           [-1.27214170, -0.28985494,  0.32206130,  ...,  1.07890511,
             0.99838978,  1.19162667],
           [-1.03059578,  0.03220624,  0.20933989,  ...,  1.23993587,
             1.15942061,  1.06280196],
           ...,
           [-0.30595800, -0.38647330, -0.37037024,  ...,  0.45088577,
             0.53140104,  0.24154601],
           [-0.57971013, -0.62801927, -0.48309177,  ...,  0.12882459,
             0.01610318,  0.06441236],
           [-0.70853460, -0.69243151, -0.45088565,  ..., -0.19323659,
            -0.30595800, -0.22544271]],

          [[-1.19790113, -0.07346311,  0.88605714,  ...,  0.52623707,
             0.63118458,  0.97601217],
           [-1.06296861,  0.07646193,  0.87106466,  ...,  1.23088503,
             1.15592217,  1.33583248],
           [-0.71814090,  0.49625200,  0.72113961,  ...,  1.41079497,
             1.33583248,  1.23088503],
           ...,
           [ 0.10644694,  0.03148442,  0.04647692,  ...,  0.93103468,
             0.99100471,  0.69115460],
           [-0.14842562, -0.19340314, -0.05847061,  ...,  0.66116959,
             0.55622208,  0.60119957],
           [-0.28335828, -0.26836565, -0.04347810,  ...,  0.28635699,
             0.18140946,  0.25637197]]],


         [[[-1.16349196, -0.29047608,  0.40793657,  ...,  0.47142863,
             0.53492069,  0.82063496],
           [-1.16349196, -0.24285704,  0.37619054,  ...,  1.20158756,
             1.13809550,  1.26507962],
           [-0.92539680,  0.07460327,  0.24920642,  ...,  1.36031771,
             1.34444475,  1.18571460],
           ...,
           [-0.29047608, -0.35396814, -0.33809513,  ...,  0.37619054,
             0.42380959,  0.12222230],
           [-0.56031746, -0.60793650, -0.46507925,  ...,  0.04285724,
            -0.09999990, -0.05238085],
           [-0.68730158, -0.67142856, -0.43333322,  ..., -0.24285704,
            -0.36984116, -0.32222211]],

          [[-1.27214170, -0.33816412,  0.33816436,  ...,  0.35426742,
             0.45088577,  0.78904998],
           [-1.27214170, -0.28985494,  0.32206130,  ...,  1.07890511,
             0.99838978,  1.19162667],
           [-1.03059578,  0.03220624,  0.20933989,  ...,  1.23993587,
             1.15942061,  1.06280196],
           ...,
           [-0.30595800, -0.38647330, -0.37037024,  ...,  0.45088577,
             0.53140104,  0.24154601],
           [-0.57971013, -0.62801927, -0.48309177,  ...,  0.12882459,
             0.01610318,  0.06441236],
           [-0.70853460, -0.69243151, -0.45088565,  ..., -0.19323659,
            -0.30595800, -0.22544271]],

          [[-1.19790113, -0.07346311,  0.88605714,  ...,  0.52623707,
             0.63118458,  0.97601217],
           [-1.06296861,  0.07646193,  0.87106466,  ...,  1.23088503,
             1.15592217,  1.33583248],
           [-0.71814090,  0.49625200,  0.72113961,  ...,  1.41079497,
             1.33583248,  1.23088503],
           ...,
           [ 0.10644694,  0.03148442,  0.04647692,  ...,  0.93103468,
             0.99100471,  0.69115460],
           [-0.14842562, -0.19340314, -0.05847061,  ...,  0.66116959,
             0.55622208,  0.60119957],
           [-0.28335828, -0.26836565, -0.04347810,  ...,  0.28635699,
             0.18140946,  0.25637197]]],


         [[[-1.16349196, -0.29047608,  0.40793657,  ...,  0.47142863,
             0.53492069,  0.82063496],
           [-1.16349196, -0.24285704,  0.37619054,  ...,  1.20158756,
             1.13809550,  1.26507962],
           [-0.92539680,  0.07460327,  0.24920642,  ...,  1.36031771,
             1.34444475,  1.18571460],
           ...,
           [-0.29047608, -0.35396814, -0.33809513,  ...,  0.37619054,
             0.42380959,  0.12222230],
           [-0.56031746, -0.60793650, -0.46507925,  ...,  0.04285724,
            -0.09999990, -0.05238085],
           [-0.68730158, -0.67142856, -0.43333322,  ..., -0.24285704,
            -0.36984116, -0.32222211]],

          [[-1.27214170, -0.33816412,  0.33816436,  ...,  0.35426742,
             0.45088577,  0.78904998],
           [-1.27214170, -0.28985494,  0.32206130,  ...,  1.07890511,
             0.99838978,  1.19162667],
           [-1.03059578,  0.03220624,  0.20933989,  ...,  1.23993587,
             1.15942061,  1.06280196],
           ...,
           [-0.30595800, -0.38647330, -0.37037024,  ...,  0.45088577,
             0.53140104,  0.24154601],
           [-0.57971013, -0.62801927, -0.48309177,  ...,  0.12882459,
             0.01610318,  0.06441236],
           [-0.70853460, -0.69243151, -0.45088565,  ..., -0.19323659,
            -0.30595800, -0.22544271]],

          [[-1.19790113, -0.07346311,  0.88605714,  ...,  0.52623707,
             0.63118458,  0.97601217],
           [-1.06296861,  0.07646193,  0.87106466,  ...,  1.23088503,
             1.15592217,  1.33583248],
           [-0.71814090,  0.49625200,  0.72113961,  ...,  1.41079497,
             1.33583248,  1.23088503],
           ...,
           [ 0.10644694,  0.03148442,  0.04647692,  ...,  0.93103468,
             0.99100471,  0.69115460],
           [-0.14842562, -0.19340314, -0.05847061,  ...,  0.66116959,
             0.55622208,  0.60119957],
           [-0.28335828, -0.26836565, -0.04347810,  ...,  0.28635699,
             0.18140946,  0.25637197]]],


         [[[-1.16349196, -0.29047608,  0.40793657,  ...,  0.47142863,
             0.53492069,  0.82063496],
           [-1.16349196, -0.24285704,  0.37619054,  ...,  1.20158756,
             1.13809550,  1.26507962],
           [-0.92539680,  0.07460327,  0.24920642,  ...,  1.36031771,
             1.34444475,  1.18571460],
           ...,
           [-0.29047608, -0.35396814, -0.33809513,  ...,  0.37619054,
             0.42380959,  0.12222230],
           [-0.56031746, -0.60793650, -0.46507925,  ...,  0.04285724,
            -0.09999990, -0.05238085],
           [-0.68730158, -0.67142856, -0.43333322,  ..., -0.24285704,
            -0.36984116, -0.32222211]],

          [[-1.27214170, -0.33816412,  0.33816436,  ...,  0.35426742,
             0.45088577,  0.78904998],
           [-1.27214170, -0.28985494,  0.32206130,  ...,  1.07890511,
             0.99838978,  1.19162667],
           [-1.03059578,  0.03220624,  0.20933989,  ...,  1.23993587,
             1.15942061,  1.06280196],
           ...,
           [-0.30595800, -0.38647330, -0.37037024,  ...,  0.45088577,
             0.53140104,  0.24154601],
           [-0.57971013, -0.62801927, -0.48309177,  ...,  0.12882459,
             0.01610318,  0.06441236],
           [-0.70853460, -0.69243151, -0.45088565,  ..., -0.19323659,
            -0.30595800, -0.22544271]],

          [[-1.19790113, -0.07346311,  0.88605714,  ...,  0.52623707,
             0.63118458,  0.97601217],
           [-1.06296861,  0.07646193,  0.87106466,  ...,  1.23088503,
             1.15592217,  1.33583248],
           [-0.71814090,  0.49625200,  0.72113961,  ...,  1.41079497,
             1.33583248,  1.23088503],
           ...,
           [ 0.10644694,  0.03148442,  0.04647692,  ...,  0.93103468,
             0.99100471,  0.69115460],
           [-0.14842562, -0.19340314, -0.05847061,  ...,  0.66116959,
             0.55622208,  0.60119957],
           [-0.28335828, -0.26836565, -0.04347810,  ...,  0.28635699,
             0.18140946,  0.25637197]]],


         [[[-1.16349196, -0.29047608,  0.40793657,  ...,  0.47142863,
             0.53492069,  0.82063496],
           [-1.16349196, -0.24285704,  0.37619054,  ...,  1.20158756,
             1.13809550,  1.26507962],
           [-0.92539680,  0.07460327,  0.24920642,  ...,  1.36031771,
             1.34444475,  1.18571460],
           ...,
           [-0.29047608, -0.35396814, -0.33809513,  ...,  0.37619054,
             0.42380959,  0.12222230],
           [-0.56031746, -0.60793650, -0.46507925,  ...,  0.04285724,
            -0.09999990, -0.05238085],
           [-0.68730158, -0.67142856, -0.43333322,  ..., -0.24285704,
            -0.36984116, -0.32222211]],

          [[-1.27214170, -0.33816412,  0.33816436,  ...,  0.35426742,
             0.45088577,  0.78904998],
           [-1.27214170, -0.28985494,  0.32206130,  ...,  1.07890511,
             0.99838978,  1.19162667],
           [-1.03059578,  0.03220624,  0.20933989,  ...,  1.23993587,
             1.15942061,  1.06280196],
           ...,
           [-0.30595800, -0.38647330, -0.37037024,  ...,  0.45088577,
             0.53140104,  0.24154601],
           [-0.57971013, -0.62801927, -0.48309177,  ...,  0.12882459,
             0.01610318,  0.06441236],
           [-0.70853460, -0.69243151, -0.45088565,  ..., -0.19323659,
            -0.30595800, -0.22544271]],

          [[-1.19790113, -0.07346311,  0.88605714,  ...,  0.52623707,
             0.63118458,  0.97601217],
           [-1.06296861,  0.07646193,  0.87106466,  ...,  1.23088503,
             1.15592217,  1.33583248],
           [-0.71814090,  0.49625200,  0.72113961,  ...,  1.41079497,
             1.33583248,  1.23088503],
           ...,
           [ 0.10644694,  0.03148442,  0.04647692,  ...,  0.93103468,
             0.99100471,  0.69115460],
           [-0.14842562, -0.19340314, -0.05847061,  ...,  0.66116959,
             0.55622208,  0.60119957],
           [-0.28335828, -0.26836565, -0.04347810,  ...,  0.28635699,
             0.18140946,  0.25637197]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0499 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 130, vnnlib ID: 130 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-75.78318024, -77.76911163, -71.69072723, -73.19558716, -70.98244476,
         -72.88028717, -73.36537170, -71.02637482, -79.08486938, -77.64447784]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1143]; unstable size 1143; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 511, 1, 1143] with unstable size 510 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 24, 1, 1143] with unstable size 23 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1143] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [510]; unstable size 510; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 24, 1, 510] with unstable size 23 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 510] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [23]; unstable size 23; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.62997746,  3.12671638, -2.15886378,  0.13792139, -2.82831001,
         -0.80158687, -2.98983097,  4.70001936,  2.95326519]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-75.78318024, -77.76911163, -71.69072723, -73.19558716, -70.98244476,
         -72.88028717, -73.36537170, -71.02637482, -79.08486938, -77.64447784]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-75.78317261, -77.76909637, -71.69071960, -73.19557953, -70.98244476,
          -72.88027954, -73.36537933, -71.02636719, -79.08486176, -77.64447021],
         [-75.78317261, -77.76909637, -71.69071960, -73.19557953, -70.98244476,
          -72.88027954, -73.36537933, -71.02636719, -79.08486176, -77.64447021]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-1.18955994, -1.89783478,  0.48509979, -1.85391235]]],
       device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]],


         [[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]],


         [[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]],


         [[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0476 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 131, vnnlib ID: 131 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-52.83269882, -57.38186646, -54.58954620, -56.02299500, -55.60212708,
         -56.21121216, -57.73949051, -57.01544571, -51.05909729, -57.26116180]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1308]; unstable size 1308; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 80, 1, 1308] with unstable size 79 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 29, 1, 1308] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1308] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [518]; unstable size 518; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 29, 1, 518] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 518] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [28]; unstable size 28; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.45830631, 4.60261822, 1.70147491, 3.20880556, 2.44473267, 3.32239699,
         4.96005058, 3.65965414, 4.68757629]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0360 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 132, vnnlib ID: 132 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-86.04985046, -81.53328705, -90.02968597, -91.52378845, -90.42625427,
         -92.31969452, -91.44999695, -91.31332397, -86.37458038, -84.02484894]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1278]; unstable size 1278; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 483, 1, 1278] with unstable size 482 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 23, 1, 1278] with unstable size 22 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1278] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [482]; unstable size 482; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 23, 1, 482] with unstable size 22 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 482] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [22]; unstable size 22; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.60055542, 6.23165655, 7.88583517, 6.29991817, 8.64270782, 7.68479538,
         7.21953535, 2.78700066, 1.12342477]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0362 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 133, vnnlib ID: 133 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-108.11080170, -116.68671417, -103.87522888, -108.18957520,
         -112.56589508, -108.55206299, -110.21043396, -110.20816040,
         -113.80245209, -115.28684998]], device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1066]; unstable size 1066; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 201, 1, 1066] with unstable size 200 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 5, 1, 1066] with unstable size 4 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1066] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [200]; unstable size 200; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 5, 1, 200] with unstable size 4 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 200] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [4]; unstable size 4; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.72905278, 12.10995483,  3.72460294,  8.13476849,  4.07072210,
          5.74536133,  5.69016266,  9.30175400, 10.58859730]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0365 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 134, vnnlib ID: 134 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-62.38203812, -65.33102417, -64.43460846, -66.85899353, -65.84159851,
         -67.43624878, -65.13454437, -68.53776550, -62.80162048, -65.57390594]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1478]; unstable size 1478; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 83, 1, 1478] with unstable size 82 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 33, 1, 1478] with unstable size 32 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1478] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [572]; unstable size 572; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 33, 1, 572] with unstable size 32 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 572] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [32]; unstable size 32; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 32] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.66250896,  0.62244463,  2.94077277,  1.89936805,  3.45936871,
          1.03093863,  4.18279791, -0.69991159,  1.90713906]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-62.38203812, -65.33102417, -64.43460846, -66.85899353, -65.84159851,
         -67.43624878, -65.13454437, -68.53776550, -62.80162048, -65.57390594]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.30it/s]100%|██████████| 1/1 [00:00<00:00,  8.29it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-62.52477264, -65.31760406, -64.44425201, -66.80108643, -65.88756561,
          -67.37248230, -65.08428955, -68.63014984, -62.54954910, -65.57930756]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.02477646]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1233 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 17.6103515625
alpha/beta optimization time: 1.4631693363189697
initial alpha-crown bounds: tensor([[ 1.74059343,  0.70267129,  2.99301147,  1.95434475,  3.51365995,
          1.10344315,  4.25490093, -0.62738550,  1.97511268]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.6273854970932007
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.37401866912842
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.3739788532257
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.37395453453064
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.37393260002136
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.37391209602356
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.3738923072815
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 198.37387228012085
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 198.37384557724
Verifying property 7 with 1 instances.
##### Instance 134 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.62738550]], device='cuda:0') need to verify.
Model prediction is: tensor([-62.38203812, -65.33102417, -64.43460846, -66.85899353, -65.84159851,
        -67.43624878, -65.13454437, -68.53776550, -62.80162048, -65.57390594],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.62738550]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1478
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 561
Node /39 input 0: size torch.Size([250]) unstable 32
-----------------
# of unstable neurons: 2071
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00010371208190917969
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6273676753044128
10 lb beta sum: 0.0, worst -0.6273707747459412
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0738    transfer 0.0001    finalize 0.0002    func 0.0743    
Accumulated time: func 0.0743    prepare 0.0002    bound 0.0738    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 5] 
split level 1: [/input-16, 185] 
split level 2: [/input-16, 213] 
split level 3: [/input-16, 18] 
split level 4: [/input-16, 25] 
split level 5: [/input-16, 97] 
split level 6: [/input-16, 180] 
split level 7: [/input-16, 218] 
split level 8: [/input-16, 160] 
split level 9: [/input-16, 195] 
split level 10: [/input-12, 492] 
split level 11: [/input-16, 239] 
split level 12: [/input-12, 7018] 
split level 13: [/input-12, 4137] 
split level 14: [/input-16, 132] 
split level 15: [/input-16, 236] 
split level 16: [/input-12, 7019] 
split level 17: [/input-12, 1077] 
split level 18: [/input-12, 5428] 
split level 19: [/input-12, 5904] 
split level 20: [/input-12, 98] 
split level 21: [/input-12, 2912] 
split level 22: [/input-12, 124] 
split level 23: [/input-12, 1569] 
split level 24: [/input-12, 3499] 
split level 25: [/input-12, 558] 
split level 26: [/input-12, 3955] 
split level 27: [/input-12, 2507] 
split level 28: [/input-12, 4202] 
split level 29: [/input-12, 2418] 
split level 30: [/input-12, 2004] 
split level 31: [/input-12, 5427] 
split level 32: [/input-12, 5421] 
split level 33: [/input-12, 3374] 
split level 34: [/input-12, 4449] 
split level 35: [/input-12, 3884] 
split level 36: [/input-12, 6831] 
split level 37: [/input-12, 429] 
split level 38: [/input-12, 2804] 
split level 39: [/input-12, 532] 
split level 40: [/input-12, 1075] 
split level 41: [/input-12, 7346] 
split level 42: [/input-12, 2506] 
split level 43: [/input-12, 1825] 
split level 44: [/input-12, 548] 
split level 45: [/input-12, 2801] 
split level 46: [/input-12, 3563] 
split level 47: [/input-12, 1824] 
split level 48: [/input-12, 4907] 
split level 49: [/input-12, 2802] 
split level 50: [/input-12, 5332] 
split level 51: [/input-12, 5331] 
split level 52: [/input-12, 2803] 
split level 53: [/input-12, 3429] 
split level 54: [/input-12, 2003] 
split level 55: [/input-12, 2545] 
split level 56: [/input-12, 2416] 
split level 57: [/input-12, 3500] 
split level 58: [/input-12, 1546] 
split level 59: [/input-4, 5022] 
split level 60: [/input-12, 4889] 
split level 61: [/input-12, 4203] 
split level 62: [/input-12, 1996] 
split level 63: [/input-12, 3484] 
split level 64: [/input-12, 4140] 
split level 65: [/input-12, 7152] 
split level 66: [/input-12, 4750] 
split level 67: [/input-12, 873] 
split level 68: [/input-12, 2546] 
split level 69: [/input-12, 477] 
split level 70: [/input-12, 2353] 
split level 71: [/input-12, 4152] 
split level 72: [/input-12, 4146] 
split level 73: [/input-4, 3179] 
split level 74: [/input-12, 3485] 
split level 75: [/input-12, 3562] 
split level 76: [/input-16, 84] 
split level 77: [/input-12, 421] 
split level 78: [/input-12, 122] 
split level 79: [/input-12, 7554] 
split level 80: [/input-12, 4893] 
split level 81: [/input-4, 4700] 
split level 82: [/input-12, 102] 
split level 83: [/input-12, 4148] 
split level 84: [/input-12, 866] 
split level 85: [/input-12, 4145] 
split level 86: [/input-12, 2424] 
split level 87: [/input-12, 7016] 
split level 88: [/input-4, 1203] 
split level 89: [/input-12, 1456] 
split level 90: [/input-12, 2516] 
split level 91: [/input-12, 3445] 
split level 92: [/input-4, 7042] 
split level 93: [/input-12, 4128] 
split level 94: [/input-4, 1187] 
split level 95: [/input-4, 1222] 
split level 96: [/input-4, 4716] 
split level 97: [/input-4, 1186] 
split level 98: [/input-16, 35] 
split level 99: [/input-12, 1065] 
split level 100: [/input-4, 4008] 
split level 101: [/input-12, 2417] 
split level 102: [/input-12, 3885] 
split level 103: [/input-12, 3800] 
split level 104: [/input-12, 476] 
split level 105: [/input-12, 8050] 
split level 106: [/input-12, 7345] 
split level 107: [/input-12, 1545] 
split level 108: [/input-12, 4888] 
split level 109: [/input-4, 1226] 
split level 110: [/input-4, 1250] 
split level 111: [/input-4, 6569] 
split level 112: [/input-12, 5897] 
split level 113: [/input-4, 1223] 
split level 114: [/input-12, 4187] 
split level 115: [/input-12, 3883] 
split level 116: [/input-4, 3195] 
split level 117: [/input-12, 3818] 
split level 118: [/input-12, 3501] 
split level 119: [/input-12, 5650] 
split level 120: [/input-12, 498] 
split level 121: [/input-4, 4010] 
split level 122: [/input-4, 3968] 
split level 123: [/input-12, 500] 
split level 124: [/input-12, 7640] 
split level 125: [/input-12, 6765] 
split level 126: [/input-12, 3916] 
split level 127: [/input-12, 5528] 
split level 128: [/input-4, 85] 
split level 129: [/input-4, 1205] 
split level 130: [/input-4, 7746] 
split level 131: [/input-12, 3309] 
split level 132: [/input-4, 1235] 
split level 133: [/input-12, 5324] 
split level 134: [/input-12, 7553] 
split level 135: [/input-12, 966] 
split level 136: [/input-4, 4692] 
split level 137: [/input-12, 4447] 
split level 138: [/input-12, 965] 
split level 139: [/input-4, 1351] 
split level 140: [/input-12, 6046] 
split level 141: [/input-4, 5277] 
split level 142: [/input-4, 3142] 
split level 143: [/input-4, 1628] 
split level 144: [/input-4, 1168] 
split level 145: [/input-4, 5554] 
split level 146: [/input-12, 5334] 
split level 147: [/input-4, 3986] 
split level 148: [/input-12, 7575] 
split level 149: [/input-4, 4693] 
split level 150: [/input-4, 1365] 
split level 151: [/input-12, 3893] 
split level 152: [/input-12, 3383] 
split level 153: [/input-12, 3554] 
split level 154: [/input-4, 204] 
split level 155: [/input-4, 8010] 
split level 156: [/input-12, 5333] 
split level 157: [/input-4, 1710] 
split level 158: [/input-4, 6306] 
split level 159: [/input-4, 2924] 
split level 160: [/input-12, 1451] 
split level 161: [/input-4, 1464] 
split level 162: [/input-4, 4983] 
split level 163: [/input-12, 2344] 
split level 164: [/input-4, 5560] 
split level 165: [/input-4, 395] 
split level 166: [/input-4, 2189] 
split level 167: [/input-12, 1461] 
split level 168: [/input-4, 5754] 
split level 169: [/input-4, 337] 
split level 170: [/input-4, 3266] 
split level 171: [/input-12, 1740] 
split level 172: [/input-4, 1236] 
split level 173: [/input-12, 5524] 
split level 174: [/input-12, 3813] 
split level 175: [/input-4, 2117] 
split level 176: [/input-12, 1460] 
split level 177: [/input-4, 7046] 
split level 178: [/input-4, 1714] 
split level 179: [/input-4, 6453] 
split level 180: [/input-12, 3894] 
split level 181: [/input-4, 7143] 
split level 182: [/input-4, 6781] 
split level 183: [/input-4, 2119] 
split level 184: [/input-4, 5739] 
split level 185: [/input-4, 3010] 
split level 186: [/input-4, 279] 
split level 187: [/input-4, 6229] 
split level 188: [/input-4, 142] 
split level 189: [/input-12, 6042] 
split level 190: [/input-12, 2317] 
split level 191: [/input-4, 205] 
split level 192: [/input-4, 5082] 
split level 193: [/input-4, 7138] 
split level 194: [/input-4, 6826] 
split level 195: [/input-4, 2177] 
split level 196: [/input-4, 2979] 
split level 197: [/input-12, 5516] 
split level 198: [/input-12, 2386] 
split level 199: [/input-4, 2626] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6272978782653809
10 lb beta sum: 0.0, worst -0.6273009181022644
Time: prepare 0.0117    bound 0.1342    transfer 0.0029    finalize 0.0092    func 0.1605    
Accumulated time: func 0.2348    prepare 0.0217    bound 0.2079    transfer 0.0030    finalize 0.0094    
all_split False
======================Cut inference begins======================
max lb tensor(-0.19883370) min lb tensor(-0.62729788)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.009989261627197266 
BICCOS Cumulative time: 0.009989261627197266
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.61607 (1), -0.61576 (1), -0.61559 (1), -0.61547 (1), -0.61371 (1), -0.61332 (1), -0.61266 (1), -0.61263 (1), -0.61208 (1), -0.61134 (1), -0.61101 (1), -0.61085 (1), -0.61065 (1), -0.61062 (1), -0.61012 (1), -0.60880 (1), -0.60877 (1), -0.60818 (1), -0.60794 (1), -0.60687 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7768    set_bounds 0.0091    solve 0.1606    add 0.0756    
Accumulated time: pickout 0.0003    decision 0.7768    set_bounds 0.0091    solve 0.1606    add 0.0756    
Current (lb-rhs): -0.6160672903060913
50 domains visited
Cumulative time: 1.1143417358398438

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 185] [/input-16, 185] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 185] [/input-16, 5] [/input-16, 5] 
split level 1: [/input-16, 97] [/input-16, 97] [/input-16, 25] [/input-16, 25] [/input-16, 25] [/input-16, 25] [/input-16, 25] [/input-16, 5] [/input-16, 185] [/input-16, 185] 
split level 2: [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 218] [/input-16, 180] [/input-16, 25] [/input-16, 25] 
split level 3: [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 180] [/input-16, 218] [/input-16, 180] [/input-16, 218] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6043093204498291
10 lb beta sum: 0.0, worst -0.6037153005599976
Time: prepare 0.0122    bound 0.1317    transfer 0.0031    finalize 0.0050    func 0.1546    
Accumulated time: func 0.3895    prepare 0.0342    bound 0.3396    transfer 0.0062    finalize 0.0144    
all_split False
======================Cut inference begins======================
max lb tensor(0.34140468) min lb tensor(-0.60355151)
Number of Verified Splits: 15 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 13
#cuts >= 20: 0
BICCOS time: 0.013095855712890625 
BICCOS Cumulative time: 0.02308511734008789
Preprocessing time: 0.011723756790161133 Inference time: 0.0006699562072753906 Add cuts time: 0.00025725364685058594 Cut analysis time: 0.0004448890686035156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20273 (2), -0.20161 (2), -0.20151 (2), -0.19875 (2), -0.19856 (2), -0.19717 (2), -0.19717 (2), -0.19558 (2), -0.19000 (2), -0.18713 (2), -0.18608 (2), -0.18573 (2), -0.18447 (2), -0.18443 (2), -0.18351 (2), -0.18196 (2), -0.18120 (2), -0.18004 (2), -0.17838 (2), -0.17387 (2), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0254    set_bounds 0.0131    solve 0.1547    add 0.0856    
Accumulated time: pickout 0.0010    decision 0.8023    set_bounds 0.0222    solve 0.3153    add 0.1612    
Current (lb-rhs): -0.20273327827453613
100 domains visited
Cumulative time: 1.4072442054748535

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 185] [/input-16, 5] [/input-16, 5] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 5] [/input-16, 185] [/input-16, 5] [/input-16, 185] 
split level 1: [/input-16, 25] [/input-16, 97] [/input-16, 97] [/input-16, 97] [/input-16, 97] [/input-16, 97] [/input-16, 25] [/input-16, 97] [/input-16, 97] [/input-16, 5] 
split level 2: [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 97] [/input-16, 25] [/input-16, 25] [/input-16, 25] 
split level 3: [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 180] [/input-16, 180] [/input-16, 218] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16952618956565857
10 lb beta sum: 0.9158097505569458, worst -0.1642765998840332
Time: prepare 0.0065    bound 0.1548    transfer 0.0016    finalize 0.0051    func 0.1711    
Accumulated time: func 0.5606    prepare 0.0410    bound 0.4944    transfer 0.0077    finalize 0.0195    
all_split False
======================Cut inference begins======================
max lb tensor(0.45422626) min lb tensor(-0.16186047)
Number of Verified Splits: 349 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 13
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.03601837158203125 
BICCOS Cumulative time: 0.05910348892211914
Preprocessing time: 0.011842489242553711 Inference time: 0.015405893325805664 Add cuts time: 0.008204221725463867 Cut analysis time: 0.0005657672882080078
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16186 (3), -0.14459 (3), -0.13813 (3), -0.12701 (3), -0.12574 (3), -0.11306 (3), -0.10767 (3), -0.10744 (3), -0.10592 (3), -0.10545 (3), -0.10421 (3), -0.10272 (3), -0.10235 (3), -0.09906 (3), -0.09200 (3), -0.09165 (3), -0.08041 (3), -0.08034 (3), -0.07933 (3), -0.07654 (3), 
Length of domains: 43
Time: pickout 0.0006    decision 0.0256    set_bounds 0.0156    solve 0.1712    add 0.1183    
Accumulated time: pickout 0.0016    decision 0.8278    set_bounds 0.0378    solve 0.4865    add 0.2796    
Current (lb-rhs): -0.16186046600341797
143 domains visited
Cumulative time: 1.77482271194458

Shallow-BaB round 4
batch: 43
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 5] [/input-16, 185] [/input-16, 185] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] 
split level 1: [/input-16, 213] [/input-16, 5] [/input-16, 5] [/input-16, 213] [/input-16, 213] [/input-16, 25] [/input-16, 213] [/input-16, 213] [/input-16, 97] [/input-16, 97] 
split level 2: [/input-16, 25] [/input-16, 25] [/input-16, 25] [/input-16, 97] [/input-16, 97] [/input-16, 180] [/input-16, 97] [/input-16, 97] [/input-16, 25] [/input-16, 25] 
split level 3: [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 25] [/input-16, 25] [/input-16, 218] [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 180] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.126312255859375
10 lb beta sum: 0.09153146296739578, worst -0.12053981423377991
Time: prepare 0.0048    bound 0.1598    transfer 0.0029    finalize 0.0097    func 0.1795    
Accumulated time: func 0.7401    prepare 0.0460    bound 0.6543    transfer 0.0106    finalize 0.0291    
all_split False
======================Cut inference begins======================
max lb tensor(0.21974623) min lb tensor(-0.10455048)
Number of Verified Splits: 258 of 344
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 13
#cuts 4-6: 10
#cuts >= 20: 0
BICCOS time: 0.030219078063964844 
BICCOS Cumulative time: 0.08932256698608398
Preprocessing time: 0.010146856307983398 Inference time: 0.013618230819702148 Add cuts time: 0.005738735198974609 Cut analysis time: 0.0007152557373046875
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0006    decision 0.0244    set_bounds 0.0135    solve 0.1796    add 0.0209    
Accumulated time: pickout 0.0022    decision 0.8522    set_bounds 0.0512    solve 0.6661    add 0.3004    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
143 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([213,  97, 185]), tensor([-1., -1., -1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  1.95664927e-01,  5.80275506e-02]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([213,  97, 185]), tensor([-1., -1.,  1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  1.95664927e-01,  2.55477250e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([213,  97, 185,   5]), tensor([-1.,  1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([-1.26703658e+34,  9.18307751e-02,  7.83826709e-02,  2.24059168e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([213,  97, 185,   5]), tensor([-1.,  1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([-1.26703658e+34,  9.18307751e-02,  7.83826709e-02,  1.66003853e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([213,  97, 185]), tensor([-1.,  1.,  1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  9.18307751e-02,  2.54568040e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([213,   5]), tensor([ 1., -1.]), tensor([0, 0]), tensor([-1.26703658e+34,  1.18971337e-02]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([213,   5, 185]), tensor([ 1.,  1., -1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  4.15491641e-01,  2.44727179e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([213,   5, 185]), tensor([1., 1., 1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  4.15491641e-01,  2.46332213e-01]), tensor([0, 1, 2]))}
Shallow branching resets to n domains:  8
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6008959412574768
10 lb beta sum: 0.7384597659111023, worst -0.5900698900222778
Time: prepare 0.0005    bound 0.1506    transfer 0.0002    finalize 0.0004    func 0.1517    
Accumulated time: func 0.8917    prepare 0.0465    bound 0.8048    transfer 0.0108    finalize 0.0295    
After pruning, left:  2

Back to Regular BaB

BaB round 1
batch: 2
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 25] [/input-16, 185] 
split level 1: [/input-16, 180] [/input-16, 25] 
split level 2: [/input-16, 218] [/input-16, 180] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4780959188938141, worst -0.41605061292648315
10 lb beta sum: 0.6933732032775879, worst -0.4147358536720276
Time: prepare 0.0009    bound 0.1483    transfer 0.0002    finalize 0.0007    func 0.1502    
Accumulated time: func 1.0420    prepare 0.0476    bound 0.9531    transfer 0.0110    finalize 0.0302    
all_split False
======================Cut inference begins======================
max lb tensor(0.43200076) min lb tensor(-0.41445583)
Number of Verified Splits: 10 of 16
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.6228534579277039, worst -0.3049173951148987

all verified at 3th iter
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 13
#cuts 4-6: 10
#cuts >= 20: 0
BICCOS time: 0.03772783279418945 
BICCOS Cumulative time: 0.12705039978027344
Preprocessing time: 0.0007319450378417969 Inference time: 0.03552889823913574 Add cuts time: 0.0007762908935546875 Cut analysis time: 0.0006906986236572266
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.41446 (3), -0.39686 (3), -0.25295 (3), -0.24567 (3), -0.23256 (3), -0.15317 (3), 
Length of domains: 6
Time: pickout 0.0005    decision 0.0130    set_bounds 0.0012    solve 0.1503    add 0.0009    
Accumulated time: pickout 0.0027    decision 0.8652    set_bounds 0.0524    solve 0.8164    add 0.3014    
Current (lb-rhs): -0.4144558310508728
149 domains visited
Cumulative time: 2.553576946258545

BaB round 2
batch: 6
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 18] 
split level 1: [/input-16, 97] [/input-16, 97] [/input-16, 97] [/input-16, 97] [/input-16, 97] [/input-16, 97] 
cut re-enabled after branching node selection
0 lb beta sum: 0.47222185134887695, worst -0.33974701166152954
10 lb beta sum: 0.49123430252075195, worst -0.3393194079399109
Time: prepare 0.0012    bound 0.1490    transfer 0.0004    finalize 0.0006    func 0.1514    
Accumulated time: func 1.1933    prepare 0.0490    bound 1.1021    transfer 0.0114    finalize 0.0308    
all_split False
======================Cut inference begins======================
max lb tensor(0.22177951) min lb tensor(-0.33898669)
Number of Verified Splits: 13 of 24
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.5057902336120605, worst -0.33216434717178345
10 lb beta sum: 1.021195411682129, worst -0.09158635139465332
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 13
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.15846681594848633 
BICCOS Cumulative time: 0.28551721572875977
Preprocessing time: 0.001001119613647461 Inference time: 0.1559152603149414 Add cuts time: 0.0008113384246826172 Cut analysis time: 0.0007390975952148438
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33899 (5), -0.31571 (5), -0.24712 (5), -0.24214 (5), -0.16426 (5), -0.16140 (5), -0.14585 (5), -0.09956 (5), -0.08739 (5), -0.05252 (5), -0.04570 (5), 
Length of domains: 11
Time: pickout 0.0004    decision 0.0138    set_bounds 0.0015    solve 0.1514    add 0.0014    
Accumulated time: pickout 0.0031    decision 0.8790    set_bounds 0.0539    solve 0.9678    add 0.3028    
Current (lb-rhs): -0.33898669481277466
160 domains visited
Cumulative time: 2.880772829055786

BaB round 3
batch: 11
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.26838648319244385
10 lb beta sum: 0.14333972334861755, worst -0.2680325508117676
Time: prepare 0.0006    bound 0.1482    transfer 0.0003    finalize 0.0007    func 0.1500    
Accumulated time: func 1.3434    prepare 0.0497    bound 1.2503    transfer 0.0117    finalize 0.0315    
all_split False
======================Cut inference begins======================
max lb tensor(0.03748405) min lb tensor(-0.26789832)
Number of Verified Splits: 6 of 22
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.27041399478912354
10 lb beta sum: 1.0908888578414917, worst -0.23443853855133057
Total number of valid cuts: 24.
#cuts 1-3: 13
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.1525590419769287 
BICCOS Cumulative time: 0.4380762577056885
Preprocessing time: 0.0009367465972900391 Inference time: 0.1512300968170166 Add cuts time: 0.0003726482391357422 Cut analysis time: 1.9550323486328125e-05
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.26790 (6), -0.25802 (6), -0.24714 (6), -0.23041 (6), -0.18253 (6), -0.17739 (6), -0.15369 (6), -0.14253 (6), -0.10122 (6), -0.10027 (6), -0.06937 (6), -0.06097 (6), -0.05998 (6), -0.05783 (6), -0.03897 (6), -0.02690 (6), 
Length of domains: 16
Time: pickout 0.0005    decision 0.0138    set_bounds 0.0012    solve 0.1501    add 0.0013    
Accumulated time: pickout 0.0036    decision 0.8928    set_bounds 0.0552    solve 1.1178    add 0.3040    
Current (lb-rhs): -0.2678983211517334
176 domains visited
Cumulative time: 3.200352907180786

BaB round 4
batch: 16
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-12, 492] [/input-16, 160] [/input-16, 160] [/input-16, 160] 
cut re-enabled after branching node selection
0 lb beta sum: 0.20675405859947205, worst -0.2614121437072754
10 lb beta sum: 0.20675405859947205, worst -0.2612823247909546
Time: prepare 0.0016    bound 0.1504    transfer 0.0006    finalize 0.0009    func 0.1537    
Accumulated time: func 1.4971    prepare 0.0515    bound 1.4007    transfer 0.0123    finalize 0.0325    
all_split False
======================Cut inference begins======================
max lb tensor(0.04048800) min lb tensor(-0.26121032)
Number of Verified Splits: 4 of 32
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.1377401053905487, worst -0.26298320293426514
10 lb beta sum: 0.814260721206665, worst -0.1336216926574707
Total number of valid cuts: 24.
#cuts 1-3: 13
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.1519606113433838 
BICCOS Cumulative time: 0.5900368690490723
Preprocessing time: 0.001224517822265625 Inference time: 0.1502974033355713 Add cuts time: 0.0004191398620605469 Cut analysis time: 1.9550323486328125e-05
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.26121 (7), -0.25110 (7), -0.24045 (7), -0.22349 (7), -0.17532 (7), -0.16970 (7), -0.14661 (7), -0.14171 (7), -0.13469 (7), -0.12672 (7), -0.11795 (7), -0.09339 (7), -0.09270 (7), -0.09151 (7), -0.06795 (7), -0.06203 (7), -0.06073 (7), -0.05188 (7), -0.04981 (7), -0.04810 (7), 
Length of domains: 28
Time: pickout 0.0004    decision 0.0138    set_bounds 0.0016    solve 0.1537    add 0.0015    
Accumulated time: pickout 0.0040    decision 0.9066    set_bounds 0.0568    solve 1.2715    add 0.3055    
Current (lb-rhs): -0.2612103223800659
204 domains visited
Cumulative time: 3.523571014404297

BaB round 5
batch: 28
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 492] [/input-12, 492] [/input-12, 492] [/input-12, 492] [/input-16, 160] [/input-12, 492] [/input-12, 492] [/input-16, 239] [/input-16, 239] [/input-16, 239] 
cut re-enabled after branching node selection
0 lb beta sum: 0.21661321818828583, worst -0.25755631923675537
10 lb beta sum: 0.21661321818828583, worst -0.25741147994995117
Time: prepare 0.0027    bound 0.1498    transfer 0.0005    finalize 0.0012    func 0.1547    
Accumulated time: func 1.6517    prepare 0.0544    bound 1.5505    transfer 0.0128    finalize 0.0337    
all_split False
======================Cut inference begins======================
max lb tensor(0.08729863) min lb tensor(-0.25733554)
Number of Verified Splits: 15 of 56
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.35211411118507385, worst -0.2983591556549072
10 lb beta sum: 1.005557894706726, worst -0.19849662482738495
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 13
#cuts 4-6: 12
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.16501617431640625 
BICCOS Cumulative time: 0.7550530433654785
Preprocessing time: 0.0018918514251708984 Inference time: 0.16157770156860352 Add cuts time: 0.0006070137023925781 Cut analysis time: 0.0009396076202392578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25734 (8), -0.24682 (8), -0.23592 (8), -0.23539 (8), -0.22407 (8), -0.21983 (8), -0.21870 (8), -0.20181 (8), -0.17198 (8), -0.16556 (8), -0.14354 (8), -0.14289 (8), -0.14071 (8), -0.13317 (8), -0.13057 (8), -0.11855 (8), -0.11066 (8), -0.11035 (8), -0.10596 (8), -0.09285 (8), 
Length of domains: 41
Time: pickout 0.0005    decision 0.0146    set_bounds 0.0023    solve 0.1547    add 0.0018    
Accumulated time: pickout 0.0046    decision 0.9212    set_bounds 0.0591    solve 1.4262    add 0.3073    
Current (lb-rhs): -0.2573355436325073
245 domains visited
Cumulative time: 3.862725019454956

BaB round 6
batch: 41
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 239] [/input-16, 239] [/input-16, 239] [/input-16, 239] [/input-16, 239] [/input-16, 239] [/input-12, 492] [/input-12, 492] [/input-16, 195] [/input-16, 195] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2513793706893921
10 lb beta sum: 0.15760336816310883, worst -0.2512853145599365
Time: prepare 0.0019    bound 0.1663    transfer 0.0006    finalize 0.0015    func 0.1709    
Accumulated time: func 1.8227    prepare 0.0565    bound 1.7168    transfer 0.0134    finalize 0.0352    
all_split False
======================Cut inference begins======================
max lb tensor(0.35514152) min lb tensor(-0.25125301)
Number of Verified Splits: 19 of 82
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 34.
#cuts 1-3: 15
#cuts 4-6: 17
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.007391929626464844 
BICCOS Cumulative time: 0.7624449729919434
Preprocessing time: 0.002802610397338867 Inference time: 0.001865386962890625 Add cuts time: 0.0015497207641601562 Cut analysis time: 0.0011742115020751953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25125 (9), -0.24062 (9), -0.22990 (9), -0.22821 (9), -0.21722 (9), -0.21507 (9), -0.21294 (9), -0.21249 (9), -0.19826 (9), -0.19521 (9), -0.19272 (9), -0.17747 (9), -0.17247 (9), -0.16873 (9), -0.16286 (9), -0.16207 (9), -0.16134 (9), -0.14297 (9), -0.14007 (9), -0.13809 (9), 
Length of domains: 63
Time: pickout 0.0006    decision 0.0152    set_bounds 0.0034    solve 0.1710    add 0.0023    
Accumulated time: pickout 0.0051    decision 0.9364    set_bounds 0.0625    solve 1.5973    add 0.3096    
Current (lb-rhs): -0.25125300884246826
308 domains visited
Cumulative time: 4.062999248504639

BaB round 7
batch: 63
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7019] [/input-16, 195] [/input-12, 1077] [/input-12, 7019] [/input-12, 7019] [/input-12, 7019] [/input-12, 7019] [/input-12, 7019] [/input-16, 195] [/input-12, 7019] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.24607062339782715
10 lb beta sum: 0.28389179706573486, worst -0.24302518367767334
Time: prepare 0.0029    bound 0.1721    transfer 0.0011    finalize 0.0035    func 0.1805    
Accumulated time: func 2.0032    prepare 0.0596    bound 1.8889    transfer 0.0144    finalize 0.0386    
all_split False
======================Cut inference begins======================
max lb tensor(0.40283215) min lb tensor(-0.24300122)
Number of Verified Splits: 30 of 126
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 35.
#cuts 1-3: 17
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.009784698486328125 
BICCOS Cumulative time: 0.7722296714782715
Preprocessing time: 0.004075765609741211 Inference time: 0.002830028533935547 Add cuts time: 0.001802206039428711 Cut analysis time: 0.0010766983032226562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.24300 (10), -0.23941 (10), -0.23744 (10), -0.22085 (10), -0.21883 (10), -0.21849 (10), -0.21666 (10), -0.21353 (10), -0.20944 (10), -0.20717 (10), -0.20319 (10), -0.20101 (10), -0.20008 (10), -0.19437 (10), -0.19183 (10), -0.18409 (10), -0.17880 (10), -0.17209 (10), -0.16570 (10), -0.16239 (10), 
Length of domains: 96
Time: pickout 0.0006    decision 0.0189    set_bounds 0.0057    solve 0.1806    add 0.0024    
Accumulated time: pickout 0.0058    decision 0.9553    set_bounds 0.0682    solve 1.7779    add 0.3120    
Current (lb-rhs): -0.24300122261047363
404 domains visited
Cumulative time: 4.2812604904174805

BaB round 8
batch: 96
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7019] [/input-12, 1077] [/input-12, 2418] [/input-12, 5904] [/input-12, 1569] [/input-12, 2418] [/input-12, 3485] [/input-12, 4146] [/input-16, 195] [/input-16, 195] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.24300122261047363
10 lb beta sum: 0.2678844630718231, worst -0.24299025535583496
Time: prepare 0.0040    bound 0.1702    transfer 0.0011    finalize 0.0046    func 0.1812    
Accumulated time: func 2.1844    prepare 0.0638    bound 2.0590    transfer 0.0155    finalize 0.0432    
all_split False
======================Cut inference begins======================
max lb tensor(0.43871105) min lb tensor(-0.24298513)
Number of Verified Splits: 41 of 192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 41.
#cuts 1-3: 18
#cuts 4-6: 23
#cuts >= 20: 0
BICCOS time: 0.013582944869995117 
BICCOS Cumulative time: 0.7858126163482666
Preprocessing time: 0.006018638610839844 Inference time: 0.00407862663269043 Add cuts time: 0.002249002456665039 Cut analysis time: 0.0012366771697998047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.24299 (11), -0.23933 (11), -0.23449 (11), -0.22123 (11), -0.22077 (11), -0.21846 (11), -0.21842 (11), -0.21612 (11), -0.21095 (11), -0.20660 (11), -0.20615 (11), -0.20279 (11), -0.20066 (11), -0.19990 (11), -0.19116 (11), -0.19043 (11), -0.18979 (11), -0.18937 (11), -0.18332 (11), -0.18235 (11), 
Length of domains: 151
Time: pickout 0.0009    decision 0.0211    set_bounds 0.0083    solve 0.1813    add 0.0058    
Accumulated time: pickout 0.0067    decision 0.9763    set_bounds 0.0765    solve 1.9591    add 0.3178    
Current (lb-rhs): -0.24298512935638428
555 domains visited
Cumulative time: 4.512708902359009

BaB round 9
batch: 151
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 195] [/input-12, 1569] [/input-16, 195] [/input-16, 195] [/input-12, 1077] [/input-12, 1077] [/input-12, 5427] [/input-16, 195] [/input-12, 1569] [/input-12, 1077] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.24018001556396484
10 lb beta sum: 0.2760944664478302, worst -0.24016499519348145
Time: prepare 0.0064    bound 0.1753    transfer 0.0020    finalize 0.0054    func 0.1911    
Accumulated time: func 2.3754    prepare 0.0704    bound 2.2343    transfer 0.0175    finalize 0.0486    
all_split False
======================Cut inference begins======================
max lb tensor(0.57770020) min lb tensor(-0.24015772)
Number of Verified Splits: 36 of 302
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 43.
#cuts 1-3: 20
#cuts 4-6: 23
#cuts >= 20: 0
BICCOS time: 0.016982316970825195 
BICCOS Cumulative time: 0.8027949333190918
Preprocessing time: 0.00907444953918457 Inference time: 0.003946065902709961 Add cuts time: 0.0026695728302001953 Cut analysis time: 0.0012922286987304688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.24016 (12), -0.23657 (12), -0.22941 (12), -0.22895 (12), -0.22572 (12), -0.22514 (12), -0.21803 (12), -0.21605 (12), -0.21593 (12), -0.21584 (12), -0.21350 (12), -0.21185 (12), -0.20542 (12), -0.20538 (12), -0.20310 (12), -0.20218 (12), -0.20203 (12), -0.20032 (12), -0.20027 (12), -0.19811 (12), 
Length of domains: 266
Time: pickout 0.0018    decision 0.0260    set_bounds 0.0131    solve 0.1912    add 0.0048    
Accumulated time: pickout 0.0085    decision 1.0023    set_bounds 0.0896    solve 2.1503    add 0.3226    
Current (lb-rhs): -0.24015772342681885
821 domains visited
Cumulative time: 4.767131567001343

BaB round 10
batch: 256
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 195] [/input-12, 2418] [/input-12, 1569] [/input-16, 195] [/input-16, 195] [/input-12, 5427] [/input-4, 7052] [/input-12, 1569] [/input-12, 7346] [/input-12, 2418] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.23627233505249023
10 lb beta sum: 0.3299867808818817, worst -0.23624181747436523
Time: prepare 0.0105    bound 0.1760    transfer 0.0022    finalize 0.0114    func 0.2035    
Accumulated time: func 2.5789    prepare 0.0810    bound 2.4103    transfer 0.0198    finalize 0.0600    
all_split False
======================Cut inference begins======================
max lb tensor(0.53007394) min lb tensor(-0.23623109)
Number of Verified Splits: 63 of 512
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 53.
#cuts 1-3: 21
#cuts 4-6: 31
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.02778315544128418 
BICCOS Cumulative time: 0.830578088760376
Preprocessing time: 0.014913558959960938 Inference time: 0.0070531368255615234 Add cuts time: 0.004134178161621094 Cut analysis time: 0.001682281494140625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23623 (13), -0.23281 (13), -0.23235 (13), -0.22840 (13), -0.22556 (13), -0.22410 (13), -0.22267 (13), -0.22163 (13), -0.21898 (13), -0.21827 (13), -0.21757 (13), -0.21722 (13), -0.21396 (13), -0.21194 (13), -0.21191 (13), -0.21099 (13), -0.21038 (13), -0.20938 (13), -0.20842 (13), -0.20802 (13), 
Length of domains: 459
Time: pickout 0.0021    decision 0.0302    set_bounds 0.0223    solve 0.2037    add 0.0100    
Accumulated time: pickout 0.0106    decision 1.0325    set_bounds 0.1119    solve 2.3540    add 0.3326    
Current (lb-rhs): -0.23623108863830566
1270 domains visited
current_vram/total_varm: 1.9GB/99.9GB, batch_size increase to 512
Cumulative time: 5.064538478851318

BaB round 11
batch: 459
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5427] [/input-12, 2418] [/input-12, 5428] [/input-12, 346] [/input-12, 1077] [/input-12, 548] [/input-12, 4203] [/input-12, 4449] [/input-12, 5427] [/input-12, 1077] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2340843677520752
10 lb beta sum: 0.2745068073272705, worst -0.23404836654663086
Time: prepare 0.0187    bound 0.2565    transfer 0.0102    finalize 0.0172    func 0.3094    
Accumulated time: func 2.8883    prepare 0.1000    bound 2.6668    transfer 0.0300    finalize 0.0772    
all_split False
======================Cut inference begins======================
max lb tensor(0.54496348) min lb tensor(-0.23403144)
Number of Verified Splits: 180 of 918
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 45.
#cuts 1-3: 16
#cuts 4-6: 24
#cuts 7-9: 5
#cuts >= 20: 0
BICCOS time: 0.05584979057312012 
BICCOS Cumulative time: 0.8864278793334961
Preprocessing time: 0.02774333953857422 Inference time: 0.02150893211364746 Add cuts time: 0.0050737857818603516 Cut analysis time: 0.001523733139038086
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23403 (14), -0.23065 (14), -0.22884 (14), -0.22614 (14), -0.22323 (14), -0.22121 (14), -0.22105 (14), -0.21978 (14), -0.21916 (14), -0.21799 (14), -0.21777 (14), -0.21571 (14), -0.21550 (14), -0.21509 (14), -0.21382 (14), -0.21336 (14), -0.21330 (14), -0.21268 (14), -0.21169 (14), -0.21096 (14), 
Length of domains: 738
Time: pickout 0.0150    decision 0.0450    set_bounds 0.0394    solve 0.3096    add 0.0108    
Accumulated time: pickout 0.0256    decision 1.0775    set_bounds 0.1514    solve 2.6636    add 0.3434    
Current (lb-rhs): -0.23403143882751465
2008 domains visited
Cumulative time: 5.542491912841797

BaB round 12
batch: 512
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2418] [/input-12, 5428] [/input-12, 2418] [/input-12, 7152] [/input-12, 5427] [/input-12, 2804] [/input-12, 4449] [/input-12, 4203] [/input-12, 1077] [/input-12, 1075] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2302558422088623
10 lb beta sum: 0.43536823987960815, worst -0.2241356372833252
Time: prepare 0.0209    bound 0.2753    transfer 0.0056    finalize 0.0152    func 0.3245    
Accumulated time: func 3.2128    prepare 0.1211    bound 2.9421    transfer 0.0356    finalize 0.0924    
all_split False
======================Cut inference begins======================
max lb tensor(0.63943279) min lb tensor(-0.22411811)
Number of Verified Splits: 318 of 1024
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 33.
#cuts 1-3: 23
#cuts 4-6: 10
#cuts >= 20: 0
BICCOS time: 0.07621312141418457 
BICCOS Cumulative time: 0.9626410007476807
Preprocessing time: 0.03056049346923828 Inference time: 0.038132667541503906 Add cuts time: 0.006689786911010742 Cut analysis time: 0.0008301734924316406
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22884 (14), -0.22412 (15), -0.22057 (15), -0.22024 (15), -0.21978 (14), -0.21777 (14), -0.21747 (15), -0.21695 (15), -0.21533 (15), -0.21509 (14), -0.21423 (15), -0.21382 (14), -0.21333 (15), -0.21255 (15), -0.21092 (14), -0.21018 (15), -0.20871 (15), -0.20789 (15), -0.20713 (15), -0.20666 (15), 
Length of domains: 932
Time: pickout 0.0036    decision 0.0492    set_bounds 0.0451    solve 0.3247    add 0.0110    
Accumulated time: pickout 0.0292    decision 1.1267    set_bounds 0.1965    solve 2.9883    add 0.3543    
Current (lb-rhs): -0.22883784770965576
2714 domains visited
current_vram/total_varm: 4.9GB/99.9GB, batch_size increase to 1024
Cumulative time: 6.056731462478638

BaB round 13
batch: 932
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2804] [/input-4, 7052] [/input-12, 2804] [/input-12, 4145] [/input-12, 2476] [/input-12, 1075] [/input-12, 5428] [/input-12, 5428] [/input-12, 5428] [/input-12, 5904] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22880423069000244
10 lb beta sum: 1.694458246231079, worst -0.21885880827903748
Time: prepare 0.0376    bound 0.4405    transfer 0.0077    finalize 0.0459    func 0.5441    
Accumulated time: func 3.7569    prepare 0.1590    bound 3.3826    transfer 0.0432    finalize 0.1383    
all_split False
======================Cut inference begins======================
max lb tensor(1.25699687) min lb tensor(-0.21840116)
Number of Verified Splits: 1568 of 1864
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.4497227668762207 
BICCOS Cumulative time: 1.4123637676239014
Preprocessing time: 0.05755138397216797 Inference time: 0.3663303852081299 Add cuts time: 0.0255429744720459 Cut analysis time: 0.0002980232238769531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21840 (16), -0.21665 (15), -0.20760 (16), -0.20591 (15), -0.20338 (15), -0.20255 (16), -0.19679 (16), -0.19494 (16), -0.19404 (16), -0.19316 (16), -0.19305 (15), -0.19192 (16), -0.18960 (16), -0.18546 (16), -0.18525 (16), -0.18477 (16), -0.18400 (16), -0.18311 (15), -0.18257 (16), -0.18230 (15), 
Length of domains: 296
Time: pickout 0.0273    decision 0.0816    set_bounds 0.0790    solve 0.5444    add 0.0077    
Accumulated time: pickout 0.0565    decision 1.2084    set_bounds 0.2755    solve 3.5328    add 0.3620    
Current (lb-rhs): -0.21840116381645203
3010 domains visited
Cumulative time: 7.2589216232299805

BaB round 14
batch: 296
splitting decisions: 
split level 0: [/input-12, 7346] [/input-12, 7346] [/input-12, 4137] [/input-12, 5427] [/input-12, 7346] [/input-12, 7152] [/input-12, 5427] [/input-12, 4449] [/input-12, 2418] [/input-12, 4137] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22519361972808838

all verified at 6th iter
Time: prepare 0.0122    bound 0.0541    transfer 0.0043    finalize 0.0077    func 0.0820    
Accumulated time: func 3.8389    prepare 0.1713    bound 3.4367    transfer 0.0476    finalize 0.1460    
all_split False
======================Cut inference begins======================
max lb tensor(0.19753873) min lb tensor(0.02078238)
Number of Verified Splits: 592 of 592
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.017290353775024414 
BICCOS Cumulative time: 1.4296541213989258
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0039    decision 0.0344    set_bounds 0.0256    solve 0.0821    add 0.0009    
Accumulated time: pickout 0.0604    decision 1.2428    set_bounds 0.3011    solve 3.6149    add 0.3629    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
3010 domains visited
Cumulative time: 7.425612688064575


Properties batch 8, size 1
Remaining timeout: 190.77424025535583
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 9.2259 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 135, vnnlib ID: 135 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-52.80060577, -46.50882721, -54.37007523, -53.11327362, -52.70186615,
         -53.46226120, -55.15716171, -53.36198807, -50.74425125, -48.13221741]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1137]; unstable size 1137; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 86, 1, 1137] with unstable size 85 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 27, 1, 1137] with unstable size 26 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1137] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [562]; unstable size 562; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 27, 1, 562] with unstable size 26 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 562] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [26]; unstable size 26; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.14396000, 5.31364250, 4.24472904, 3.70505333, 4.52983570, 6.21954918,
         4.09851313, 2.56942034, 0.45031929]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0392 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 136, vnnlib ID: 136 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-52.89542770, -57.97696686, -54.85807419, -55.10911179, -54.69681931,
         -55.42931366, -55.59994888, -56.47065735, -54.75067902, -57.46702576]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1343]; unstable size 1343; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 479, 1, 1343] with unstable size 478 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 26, 1, 1343] with unstable size 25 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1343] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [478]; unstable size 478; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 26, 1, 478] with unstable size 25 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 478] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [25]; unstable size 25; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.87730217, 1.07993436, 1.22362113, 0.83136475, 1.49625969, 1.69193745,
         2.28153849, 0.85961366, 3.63969851]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0363 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 137, vnnlib ID: 137 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-38.32809830, -40.10593414, -34.48623276, -35.05632401, -34.80789566,
         -35.26407623, -34.09202194, -36.85469818, -39.08262253, -38.76968384]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1124]; unstable size 1124; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 86, 1, 1124] with unstable size 85 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 33, 1, 1124] with unstable size 32 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1124] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [703]; unstable size 703; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 33, 1, 703] with unstable size 32 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 703] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [32]; unstable size 32; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 32] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.40948367,  3.71464181, -0.75834060,  0.19566691, -0.35825458,
          0.30662954,  1.28566730,  2.84622455,  2.47571254]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-38.32809830, -40.10593414, -34.48623276, -35.05632401, -34.80789566,
         -35.26407623, -34.09202194, -36.85469818, -39.08262253, -38.76968384]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-37.18811035, -39.12821579, -33.41512299, -34.27476883, -33.85449982,
          -34.45209885, -33.50851822, -35.80139542, -38.02495575, -37.88516235],
         [-37.18811035, -39.12821579, -33.41512299, -34.27476883, -33.85449982,
          -34.45209885, -33.50851822, -35.80139542, -38.02495575, -37.88516235]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.09339523,  0.34598160]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0064 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0454 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 138, vnnlib ID: 138 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-25.03417206, -27.11355591, -25.78958702, -25.20498466, -25.83776855,
         -25.71761894, -26.15229988, -26.48285484, -26.47426605, -25.20297813]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1198]; unstable size 1198; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 479, 1, 1198] with unstable size 478 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 39, 1, 1198] with unstable size 38 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1198] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [478]; unstable size 478; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 39, 1, 478] with unstable size 38 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 478] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [38]; unstable size 38; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 38] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.42282969, -0.49957883, -1.18148613, -0.78906178, -0.71976590,
         -0.39888644, -0.11288345,  0.04809430, -1.36831307]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-25.03417206, -27.11355591, -25.78958702, -25.20498466, -25.83776855,
         -25.71761894, -26.15229988, -26.48285484, -26.47426605, -25.20297813]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-24.10841751, -25.89104462, -24.50661469, -23.69846535, -24.40919876,
          -24.20644188, -24.71250153, -24.95234871, -25.36886978, -23.91349030],
         [-24.10841751, -25.89104462, -24.50661469, -23.69846535, -24.40919876,
          -24.20644188, -24.71250153, -24.95234871, -25.36886978, -23.91349030]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.39819717, -0.40995216,  0.30078125,  0.09802437,  0.60408401,
           0.84393120, -0.19492722]]], device='cuda:0')
number of violation:  2
Attack finished in 0.0124 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0491 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 139, vnnlib ID: 139 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-28.41685104, -30.56024170, -24.36895370, -26.33578682, -24.20423126,
         -26.67568398, -23.29224777, -26.99255371, -30.03259850, -29.82856178]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1244]; unstable size 1244; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 81, 1, 1244] with unstable size 80 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 44, 1, 1244] with unstable size 43 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1244] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [676]; unstable size 676; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 44, 1, 676] with unstable size 43 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 676] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [43]; unstable size 43; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 43] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.10503197,  4.69579315,  0.00697899,  2.08400011, -0.05591273,
          2.31325316,  1.81587029,  4.94102669,  4.15414143]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-28.41685104, -30.56024170, -24.36895370, -26.33578682, -24.20423126,
         -26.67568398, -23.29224777, -26.99255371, -30.03259850, -29.82856178]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.37it/s]100%|██████████| 1/1 [00:00<00:00,  8.37it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-27.72519684, -30.09082794, -23.63844109, -25.66028976, -23.40969658,
          -25.95825005, -22.81966782, -26.19297218, -29.40475655, -29.34490585]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.59002876]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1221 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 23.938377380371094
alpha/beta optimization time: 1.4577040672302246
initial alpha-crown bounds: tensor([[ 3.21058989e+00,  4.85742521e+00,  7.25905895e-02,  2.14931798e+00,
         -5.37157059e-04,  2.38495994e+00,  1.91194725e+00,  5.04152346e+00,
          4.31055927e+00]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.0005371570587158203
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.38208866119385
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.38205075263977
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.3820240497589
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.38200283050537
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.381982088089
Verifying property 4 with 1 instances.
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00053716]], device='cuda:0') need to verify.
Model prediction is: tensor([-28.41685104, -30.56024170, -24.36895370, -26.33578682, -24.20423126,
        -26.67568398, -23.29224777, -26.99255371, -30.03259850, -29.82856178],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00053716]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1244
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 668
Node /39 input 0: size torch.Size([250]) unstable 41
-----------------
# of unstable neurons: 1953
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00010156631469726562
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0005011558532714844
10 lb beta sum: 0.0, worst -0.0005068778991699219
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0740    transfer 0.0001    finalize 0.0002    func 0.0745    
Accumulated time: func 0.0745    prepare 0.0002    bound 0.0740    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 64] 
split level 1: [/input-16, 230] 
split level 2: [/input-16, 95] 
split level 3: [/input-16, 145] 
split level 4: [/input-16, 225] 
split level 5: [/input-16, 154] 
split level 6: [/input-16, 166] 
split level 7: [/input-16, 5] 
split level 8: [/input-16, 104] 
split level 9: [/input-16, 84] 
split level 10: [/input-16, 31] 
split level 11: [/input-16, 72] 
split level 12: [/input-16, 7] 
split level 13: [/input-16, 60] 
split level 14: [/input-16, 16] 
split level 15: [/input-16, 188] 
split level 16: [/input-16, 180] 
split level 17: [/input-16, 171] 
split level 18: [/input-12, 3499] 
split level 19: [/input-16, 65] 
split level 20: [/input-16, 146] 
split level 21: [/input-12, 7130] 
split level 22: [/input-12, 1435] 
split level 23: [/input-12, 7131] 
split level 24: [/input-12, 5243] 
split level 25: [/input-12, 3490] 
split level 26: [/input-12, 2403] 
split level 27: [/input-12, 3427] 
split level 28: [/input-12, 4211] 
split level 29: [/input-12, 3419] 
split level 30: [/input-12, 1747] 
split level 31: [/input-12, 4769] 
split level 32: [/input-12, 1818] 
split level 33: [/input-12, 1584] 
split level 34: [/input-12, 3426] 
split level 35: [/input-12, 1819] 
split level 36: [/input-12, 1436] 
split level 37: [/input-12, 3409] 
split level 38: [/input-12, 4107] 
split level 39: [/input-12, 3411] 
split level 40: [/input-12, 7000] 
split level 41: [/input-12, 5522] 
split level 42: [/input-12, 7136] 
split level 43: [/input-12, 6149] 
split level 44: [/input-12, 7954] 
split level 45: [/input-12, 2573] 
split level 46: [/input-12, 2602] 
split level 47: [/input-12, 1212] 
split level 48: [/input-12, 5324] 
split level 49: [/input-12, 3956] 
split level 50: [/input-12, 1362] 
split level 51: [/input-12, 753] 
split level 52: [/input-12, 5521] 
split level 53: [/input-12, 1746] 
split level 54: [/input-12, 5161] 
split level 55: [/input-12, 5782] 
split level 56: [/input-16, 77] 
split level 57: [/input-12, 3443] 
split level 58: [/input-4, 1417] 
split level 59: [/input-12, 1825] 
split level 60: [/input-12, 1452] 
split level 61: [/input-4, 1418] 
split level 62: [/input-4, 1382] 
split level 63: [/input-12, 428] 
split level 64: [/input-12, 1443] 
split level 65: [/input-12, 3825] 
split level 66: [/input-12, 2584] 
split level 67: [/input-12, 2592] 
split level 68: [/input-4, 1384] 
split level 69: [/input-12, 2419] 
split level 70: [/input-12, 3507] 
split level 71: [/input-12, 6822] 
split level 72: [/input-12, 780] 
split level 73: [/input-12, 3544] 
split level 74: [/input-12, 7121] 
split level 75: [/input-4, 1433] 
split level 76: [/input-12, 1442] 
split level 77: [/input-12, 5395] 
split level 78: [/input-12, 3498] 
split level 79: [/input-12, 6830] 
split level 80: [/input-12, 5529] 
split level 81: [/input-12, 3500] 
split level 82: [/input-12, 5347] 
split level 83: [/input-12, 4108] 
split level 84: [/input-12, 2768] 
split level 85: [/input-12, 2343] 
split level 86: [/input-12, 1198] 
split level 87: [/input-12, 5525] 
split level 88: [/input-12, 5918] 
split level 89: [/input-12, 6237] 
split level 90: [/input-4, 2150] 
split level 91: [/input-12, 6780] 
split level 92: [/input-12, 5356] 
split level 93: [/input-12, 2321] 
split level 94: [/input-12, 5538] 
split level 95: [/input-12, 1358] 
split level 96: [/input-12, 378] 
split level 97: [/input-12, 4910] 
split level 98: [/input-12, 3890] 
split level 99: [/input-12, 5242] 
split level 100: [/input-12, 7557] 
split level 101: [/input-12, 5537] 
split level 102: [/input-4, 1173] 
split level 103: [/input-12, 3428] 
split level 104: [/input-12, 8035] 
split level 105: [/input-4, 7048] 
split level 106: [/input-12, 7195] 
split level 107: [/input-12, 1380] 
split level 108: [/input-12, 2572] 
split level 109: [/input-12, 5536] 
split level 110: [/input-12, 5144] 
split level 111: [/input-12, 6150] 
split level 112: [/input-12, 6469] 
split level 113: [/input-12, 1210] 
split level 114: [/input-12, 6242] 
split level 115: [/input-4, 2168] 
split level 116: [/input-12, 4418] 
split level 117: [/input-12, 3883] 
split level 118: [/input-4, 1415] 
split level 119: [/input-12, 5339] 
split level 120: [/input-12, 6229] 
split level 121: [/input-12, 3537] 
split level 122: [/input-4, 2101] 
split level 123: [/input-12, 1433] 
split level 124: [/input-12, 5290] 
split level 125: [/input-12, 1441] 
split level 126: [/input-12, 4137] 
split level 127: [/input-4, 2186] 
split level 128: [/input-12, 3565] 
split level 129: [/input-12, 5241] 
split level 130: [/input-12, 1213] 
split level 131: [/input-12, 116] 
split level 132: [/input-12, 3178] 
split level 133: [/input-12, 1174] 
split level 134: [/input-12, 5513] 
split level 135: [/input-12, 7585] 
split level 136: [/input-12, 1189] 
split level 137: [/input-12, 2609] 
split level 138: [/input-12, 2600] 
split level 139: [/input-12, 4116] 
split level 140: [/input-12, 1775] 
split level 141: [/input-12, 6236] 
split level 142: [/input-12, 5316] 
split level 143: [/input-4, 1434] 
split level 144: [/input-12, 3833] 
split level 145: [/input-12, 992] 
split level 146: [/input-4, 2102] 
split level 147: [/input-12, 5027] 
split level 148: [/input-12, 1748] 
split level 149: [/input-4, 3701] 
split level 150: [/input-4, 1385] 
split level 151: [/input-12, 7193] 
split level 152: [/input-12, 3478] 
split level 153: [/input-12, 3922] 
split level 154: [/input-12, 4130] 
split level 155: [/input-12, 1190] 
split level 156: [/input-12, 6762] 
split level 157: [/input-12, 4140] 
split level 158: [/input-12, 8040] 
split level 159: [/input-12, 4768] 
split level 160: [/input-12, 7204] 
split level 161: [/input-12, 5169] 
split level 162: [/input-4, 5859] 
split level 163: [/input-4, 8129] 
split level 164: [/input-12, 2351] 
split level 165: [/input-12, 3300] 
split level 166: [/input-4, 5226] 
split level 167: [/input-12, 2550] 
split level 168: [/input-12, 8016] 
split level 169: [/input-12, 2309] 
split level 170: [/input-4, 1403] 
split level 171: [/input-12, 2247] 
split level 172: [/input-4, 6477] 
split level 173: [/input-12, 1440] 
split level 174: [/input-4, 2165] 
split level 175: [/input-12, 7857] 
split level 176: [/input-12, 3566] 
split level 177: [/input-12, 2577] 
split level 178: [/input-12, 6241] 
split level 179: [/input-12, 5134] 
split level 180: [/input-12, 2571] 
split level 181: [/input-4, 1369] 
split level 182: [/input-12, 5145] 
split level 183: [/input-12, 6221] 
split level 184: [/input-12, 1738] 
split level 185: [/input-4, 3702] 
split level 186: [/input-12, 3909] 
split level 187: [/input-12, 7635] 
split level 188: [/input-4, 1414] 
split level 189: [/input-12, 591] 
split level 190: [/input-12, 2308] 
split level 191: [/input-12, 4458] 
split level 192: [/input-4, 8011] 
split level 193: [/input-12, 3861] 
split level 194: [/input-12, 3504] 
split level 195: [/input-12, 796] 
split level 196: [/input-12, 3402] 
split level 197: [/input-12, 5394] 
split level 198: [/input-4, 3705] 
split level 199: [/input-12, 789] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0003685951232910156
10 lb beta sum: 0.0, worst -0.0003666877746582031
Time: prepare 0.0117    bound 0.1338    transfer 0.0033    finalize 0.0083    func 0.1596    
Accumulated time: func 0.2341    prepare 0.0218    bound 0.2077    transfer 0.0034    finalize 0.0085    
all_split False
======================Cut inference begins======================
max lb tensor(0.16789055) min lb tensor(-0.00036502)
Number of Verified Splits: 337 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.026708364486694336 
BICCOS Cumulative time: 0.026708364486694336
Preprocessing time: 0.009920835494995117 Inference time: 0.013022899627685547 Add cuts time: 0.0035905838012695312 Cut analysis time: 0.00017404556274414062
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.7781    set_bounds 0.0094    solve 0.1597    add 0.0122    
Accumulated time: pickout 0.0003    decision 0.7781    set_bounds 0.0094    solve 0.1597    add 0.0122    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([64]), tensor([-1.]), tensor([0]), tensor([0.04102868]), tensor([0]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([64]), tensor([1.]), tensor([0]), tensor([0.04102868]), tensor([0]))}
Shallow branching resets to n domains:  2
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.027899980545043945

all verified at 0th iter
Time: prepare 0.0003    bound 0.0057    transfer 0.0001    finalize 0.0003    func 0.0064    
Accumulated time: func 0.2405    prepare 0.0221    bound 0.2134    transfer 0.0035    finalize 0.0088    
After pruning, left:  0

Back to Regular BaB


Properties batch 5, size 1
Remaining timeout: 197.12523484230042
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.125168800354
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.12513899803162
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.12511706352234
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.8749 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 140, vnnlib ID: 140 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-70.88808441, -67.27890015, -72.35863495, -71.16451263, -72.60052490,
         -71.76134491, -71.33089447, -71.27880859, -71.86730194, -63.39111328]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1079]; unstable size 1079; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 495, 1, 1079] with unstable size 494 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 20, 1, 1079] with unstable size 19 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1079] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [494]; unstable size 494; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 20, 1, 494] with unstable size 19 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 494] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [19]; unstable size 19; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.09005356, 2.96960473, 7.15222740, 6.05106926, 7.48325109, 6.61487532,
         6.19906235, 6.01629019, 6.71882296]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0378 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 141, vnnlib ID: 141 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-41.89290237, -40.28856659, -43.41503906, -43.04089737, -43.35220337,
         -43.63275146, -43.18313217, -43.25023651, -41.86765671, -40.40674591]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1376]; unstable size 1376; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 490, 1, 1376] with unstable size 489 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 38, 1, 1376] with unstable size 37 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1376] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [489]; unstable size 489; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 38, 1, 489] with unstable size 37 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 489] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [37]; unstable size 37; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 37] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.16706800,  1.00543928,  0.87183309,  0.98538589,  1.42795610,
          0.90594625,  0.74093676,  0.08303213, -0.94522858]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-41.89290237, -40.28856659, -43.41503906, -43.04089737, -43.35220337,
         -43.63275146, -43.18313217, -43.25023651, -41.86765671, -40.40674591]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-40.34314346, -38.96287918, -41.75049210, -41.35071182, -41.67258072,
          -41.92888641, -41.53803253, -41.56602478, -40.32832718, -38.65751648]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.30536270]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0062 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0434 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 142, vnnlib ID: 142 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-39.90105438, -41.04039764, -36.57715225, -37.56190491, -37.39190292,
         -38.10691833, -34.70628357, -40.33464813, -40.13504028, -41.02849579]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1302]; unstable size 1302; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 81, 1, 1302] with unstable size 80 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 38, 1, 1302] with unstable size 37 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1302] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [704]; unstable size 704; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 38, 1, 704] with unstable size 37 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 704] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [37]; unstable size 37; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 37] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.98755860, 3.93531680, 0.73973978, 1.75956416, 1.48634219, 2.18524504,
         3.39670634, 3.04109693, 3.49888921]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0364 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 143, vnnlib ID: 143 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-40.55546951, -45.45491028, -37.45764542, -39.39349365, -37.45364380,
         -39.35584259, -39.24734879, -39.47206879, -44.42040634, -44.51711273]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1366]; unstable size 1366; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 512, 1, 1366] with unstable size 511 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 39, 1, 1366] with unstable size 38 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1366] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [511]; unstable size 511; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 39, 1, 511] with unstable size 38 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 511] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [38]; unstable size 38; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 38] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.82917833,  5.67270756, -0.69673437,  0.97081888,  0.93293595,
          0.29473859,  0.85089159,  5.54077387,  5.14498091]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-40.55546951, -45.45491028, -37.45764542, -39.39349365, -37.45364380,
         -39.35584259, -39.24734879, -39.47206879, -44.42040634, -44.51711273]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-40.47071457, -45.36802673, -37.37282181, -39.31337738, -37.37327576,
          -39.27462006, -39.16671371, -39.38807297, -44.33922195, -44.43047333]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.00045395]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0045 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0415 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 144, vnnlib ID: 144 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-43.65111160, -43.99967194, -40.79418182, -39.50147247, -40.14878464,
         -39.23765945, -40.82662201, -40.30278397, -43.00875854, -42.27614594]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1252]; unstable size 1252; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 84, 1, 1252] with unstable size 83 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 29, 1, 1252] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1252] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [524]; unstable size 524; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 29, 1, 524] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 524] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [28]; unstable size 28; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.04009628,  2.55042124,  0.56333601,  0.11240518, -0.09342396,
          0.39264584,  0.03791928,  1.91572809,  1.11065221]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-43.65111160, -43.99967194, -40.79418182, -39.50147247, -40.14878464,
         -39.23765945, -40.82662201, -40.30278397, -43.00875854, -42.27614594]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.30it/s]100%|██████████| 1/1 [00:00<00:00,  8.29it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-44.99961472, -45.24042892, -41.92008209, -40.94048691, -41.13512802,
          -40.69639587, -42.02267838, -41.52115250, -44.35447311, -43.61542511]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.43873215]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1232 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 10.218801498413086
alpha/beta optimization time: 1.4635024070739746
initial alpha-crown bounds: tensor([[ 3.12228036,  2.68077564,  0.61190677,  0.11699319, -0.05793655,
          0.43158007,  0.08730161,  2.00396442,  1.22193623]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.05793654918670654
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.37528729438782
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.37524318695068
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.37521839141846
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.3751950263977
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.37517476081848
Verifying property 4 with 1 instances.
##### Instance 144 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.05793655]], device='cuda:0') need to verify.
Model prediction is: tensor([-43.65111160, -43.99967194, -40.79418182, -39.50147247, -40.14878464,
        -39.23765945, -40.82662201, -40.30278397, -43.00875854, -42.27614594],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.05793655]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1252
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 518
Node /39 input 0: size torch.Size([250]) unstable 25
-----------------
# of unstable neurons: 1795
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00010275840759277344
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.057924866676330566
10 lb beta sum: 0.0, worst -0.05792510509490967
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0738    transfer 0.0001    finalize 0.0002    func 0.0743    
Accumulated time: func 0.0743    prepare 0.0002    bound 0.0738    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 230] 
split level 1: [/input-16, 95] 
split level 2: [/input-16, 110] 
split level 3: [/input-16, 8] 
split level 4: [/input-16, 180] 
split level 5: [/input-16, 16] 
split level 6: [/input-16, 247] 
split level 7: [/input-12, 5162] 
split level 8: [/input-12, 5171] 
split level 9: [/input-12, 6252] 
split level 10: [/input-16, 84] 
split level 11: [/input-12, 788] 
split level 12: [/input-12, 2451] 
split level 13: [/input-12, 6986] 
split level 14: [/input-12, 553] 
split level 15: [/input-12, 789] 
split level 16: [/input-12, 5132] 
split level 17: [/input-12, 1683] 
split level 18: [/input-12, 2458] 
split level 19: [/input-12, 7827] 
split level 20: [/input-12, 5314] 
split level 21: [/input-12, 2593] 
split level 22: [/input-12, 3353] 
split level 23: [/input-12, 2459] 
split level 24: [/input-12, 5665] 
split level 25: [/input-12, 2580] 
split level 26: [/input-12, 796] 
split level 27: [/input-12, 5669] 
split level 28: [/input-12, 2443] 
split level 29: [/input-12, 7008] 
split level 30: [/input-16, 77] 
split level 31: [/input-12, 2514] 
split level 32: [/input-12, 6420] 
split level 33: [/input-12, 7123] 
split level 34: [/input-12, 7500] 
split level 35: [/input-12, 2594] 
split level 36: [/input-12, 3603] 
split level 37: [/input-12, 7893] 
split level 38: [/input-12, 5555] 
split level 39: [/input-12, 2441] 
split level 40: [/input-12, 3593] 
split level 41: [/input-12, 5141] 
split level 42: [/input-12, 787] 
split level 43: [/input-12, 3084] 
split level 44: [/input-12, 5177] 
split level 45: [/input-12, 7892] 
split level 46: [/input-12, 5159] 
split level 47: [/input-16, 213] 
split level 48: [/input-12, 2581] 
split level 49: [/input-4, 3209] 
split level 50: [/input-12, 2515] 
split level 51: [/input-12, 790] 
split level 52: [/input-12, 802] 
split level 53: [/input-4, 2698] 
split level 54: [/input-12, 780] 
split level 55: [/input-12, 5523] 
split level 56: [/input-4, 1558] 
split level 57: [/input-12, 5163] 
split level 58: [/input-12, 794] 
split level 59: [/input-12, 5154] 
split level 60: [/input-12, 5632] 
split level 61: [/input-12, 6228] 
split level 62: [/input-12, 5664] 
split level 63: [/input-12, 6253] 
split level 64: [/input-4, 1465] 
split level 65: [/input-12, 2005] 
split level 66: [/input-4, 4154] 
split level 67: [/input-12, 716] 
split level 68: [/input-12, 1396] 
split level 69: [/input-12, 2435] 
split level 70: [/input-12, 7890] 
split level 71: [/input-12, 81] 
split level 72: [/input-4, 3105] 
split level 73: [/input-12, 2585] 
split level 74: [/input-12, 747] 
split level 75: [/input-4, 6501] 
split level 76: [/input-4, 3259] 
split level 77: [/input-4, 3122] 
split level 78: [/input-12, 5158] 
split level 79: [/input-12, 2433] 
split level 80: [/input-4, 377] 
split level 81: [/input-12, 5782] 
split level 82: [/input-4, 6167] 
split level 83: [/input-12, 5814] 
split level 84: [/input-4, 4626] 
split level 85: [/input-4, 2218] 
split level 86: [/input-4, 3291] 
split level 87: [/input-4, 3243] 
split level 88: [/input-4, 4360] 
split level 89: [/input-12, 2457] 
split level 90: [/input-4, 4969] 
split level 91: [/input-12, 1433] 
split level 92: [/input-4, 7815] 
split level 93: [/input-4, 1544] 
split level 94: [/input-4, 6488] 
split level 95: [/input-4, 4442] 
split level 96: [/input-12, 5019] 
split level 97: [/input-4, 3245] 
split level 98: [/input-4, 1482] 
split level 99: [/input-4, 5219] 
split level 100: [/input-4, 2696] 
split level 101: [/input-12, 7820] 
split level 102: [/input-12, 1719] 
split level 103: [/input-4, 1467] 
split level 104: [/input-12, 238] 
split level 105: [/input-12, 3118] 
split level 106: [/input-4, 3228] 
split level 107: [/input-12, 1388] 
split level 108: [/input-4, 2679] 
split level 109: [/input-12, 1425] 
split level 110: [/input-4, 6162] 
split level 111: [/input-4, 2235] 
split level 112: [/input-4, 3261] 
split level 113: [/input-12, 3177] 
split level 114: [/input-4, 2868] 
split level 115: [/input-4, 4629] 
split level 116: [/input-4, 5694] 
split level 117: [/input-4, 2185] 
split level 118: [/input-12, 5685] 
split level 119: [/input-12, 1389] 
split level 120: [/input-4, 4457] 
split level 121: [/input-12, 2340] 
split level 122: [/input-4, 6149] 
split level 123: [/input-4, 1644] 
split level 124: [/input-12, 5206] 
split level 125: [/input-4, 1433] 
split level 126: [/input-4, 2234] 
split level 127: [/input-4, 6151] 
split level 128: [/input-4, 2955] 
split level 129: [/input-4, 2849] 
split level 130: [/input-12, 739] 
split level 131: [/input-4, 3260] 
split level 132: [/input-12, 1557] 
split level 133: [/input-12, 5774] 
split level 134: [/input-12, 1372] 
split level 135: [/input-12, 2448] 
split level 136: [/input-4, 6195] 
split level 137: [/input-4, 4474] 
split level 138: [/input-4, 4374] 
split level 139: [/input-12, 5349] 
split level 140: [/input-4, 6809] 
split level 141: [/input-4, 1705] 
split level 142: [/input-4, 4441] 
split level 143: [/input-4, 425] 
split level 144: [/input-4, 1574] 
split level 145: [/input-4, 2568] 
split level 146: [/input-12, 5681] 
split level 147: [/input-12, 2440] 
split level 148: [/input-4, 7816] 
split level 149: [/input-12, 5694] 
split level 150: [/input-4, 4741] 
split level 151: [/input-12, 7829] 
split level 152: [/input-4, 2204] 
split level 153: [/input-4, 6278] 
split level 154: [/input-4, 6165] 
split level 155: [/input-12, 5563] 
split level 156: [/input-4, 5656] 
split level 157: [/input-12, 1176] 
split level 158: [/input-12, 6434] 
split level 159: [/input-4, 7758] 
split level 160: [/input-4, 7848] 
split level 161: [/input-4, 2132] 
split level 162: [/input-12, 1690] 
split level 163: [/input-4, 2067] 
split level 164: [/input-4, 2921] 
split level 165: [/input-4, 2850] 
split level 166: [/input-12, 336] 
split level 167: [/input-12, 8036] 
split level 168: [/input-4, 4477] 
split level 169: [/input-4, 4697] 
split level 170: [/input-4, 2390] 
split level 171: [/input-4, 4459] 
split level 172: [/input-4, 4475] 
split level 173: [/input-4, 2712] 
split level 174: [/input-4, 1629] 
split level 175: [/input-12, 5679] 
split level 176: [/input-4, 7832] 
split level 177: [/input-4, 2949] 
split level 178: [/input-4, 4414] 
split level 179: [/input-12, 3601] 
split level 180: [/input-4, 4152] 
split level 181: [/input-4, 2957] 
split level 182: [/input-4, 4430] 
split level 183: [/input-4, 4642] 
split level 184: [/input-4, 3004] 
split level 185: [/input-12, 2539] 
split level 186: [/input-4, 1575] 
split level 187: [/input-4, 4163] 
split level 188: [/input-4, 2916] 
split level 189: [/input-4, 6170] 
split level 190: [/input-4, 2637] 
split level 191: [/input-4, 4136] 
split level 192: [/input-4, 4171] 
split level 193: [/input-12, 1444] 
split level 194: [/input-4, 2422] 
split level 195: [/input-4, 3021] 
split level 196: [/input-4, 3206] 
split level 197: [/input-4, 4842] 
split level 198: [/input-4, 396] 
split level 199: [/input-4, 7847] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05782759189605713
10 lb beta sum: 0.0, worst -0.05782723426818848
Time: prepare 0.0116    bound 0.1342    transfer 0.0032    finalize 0.0088    func 0.1604    
Accumulated time: func 0.2347    prepare 0.0217    bound 0.2079    transfer 0.0033    finalize 0.0091    
all_split False
======================Cut inference begins======================
max lb tensor(0.30654383) min lb tensor(-0.05782509)
Number of Verified Splits: 7 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.010857582092285156 
BICCOS Cumulative time: 0.010857582092285156
Preprocessing time: 0.009977579116821289 Inference time: 0.0002818107604980469 Add cuts time: 0.00010633468627929688 Cut analysis time: 0.0004918575286865234
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.7739    set_bounds 0.0092    solve 0.1605    add 0.0103    
Accumulated time: pickout 0.0003    decision 0.7739    set_bounds 0.0092    solve 0.1605    add 0.0103    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([230]), tensor([-1.]), tensor([0]), tensor([267.25683594]), tensor([0]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([230]), tensor([1.]), tensor([0]), tensor([0.00034806]), tensor([0]))}
Shallow branching resets to n domains:  2
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.03401064872741699

all verified at 0th iter
Time: prepare 0.0003    bound 0.0057    transfer 0.0001    finalize 0.0003    func 0.0064    
Accumulated time: func 0.2411    prepare 0.0220    bound 0.2136    transfer 0.0034    finalize 0.0093    
After pruning, left:  0

Back to Regular BaB


Properties batch 5, size 1
Remaining timeout: 197.16061162948608
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.1605532169342
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.1605303287506
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.16049671173096
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.8396 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 145, vnnlib ID: 145 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-28.09619141, -31.61270332, -26.52043915, -25.29383469, -27.13373184,
         -25.51041222, -28.40758896, -28.53708076, -31.06715584, -31.28561401]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1701]; unstable size 1701; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 79, 1, 1701] with unstable size 78 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 34, 1, 1701] with unstable size 33 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1701] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [570]; unstable size 570; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 34, 1, 570] with unstable size 33 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 570] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [33]; unstable size 33; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.03297901,  4.45583773, -0.28305221, -0.33473042,  0.38958216,
          1.70400620,  1.35973120,  4.10550785,  4.07272434]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-28.09619141, -31.61270332, -26.52043915, -25.29383469, -27.13373184,
         -25.51041222, -28.40758896, -28.53708076, -31.06715584, -31.28561401]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-28.09619713, -31.61270714, -26.52044106, -25.29383469, -27.13373184,
          -25.51041603, -28.40759468, -28.53708267, -31.06715965, -31.28561592],
         [-28.09619713, -31.61270714, -26.52044106, -25.29383469, -27.13373184,
          -25.51041603, -28.40759468, -28.53708267, -31.06715965, -31.28561592]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.01002502, -0.21658134]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-6.55555546e-01, -5.28571427e-01, -5.60317457e-01,  ...,
            -3.69841158e-01, -4.80952382e-01, -5.28571427e-01],
           [-6.55555546e-01, -5.44444442e-01, -5.28571427e-01,  ...,
            -1.47618949e-01, -3.85714173e-01, -4.65079248e-01],
           [-6.55555546e-01, -5.12698412e-01, -4.17460203e-01,  ...,
            -5.23808524e-02, -3.06349099e-01, -4.49206233e-01],
           ...,
           [-3.85714173e-01, -1.95237994e-01,  2.69842222e-02,  ...,
             7.41269886e-01,  5.82539737e-01,  4.23809588e-01],
           [-4.33333218e-01, -3.22222114e-01, -1.47618949e-01,  ...,
             6.14285767e-01,  5.50793707e-01,  4.07936573e-01],
           [-4.01587188e-01, -1.95237994e-01, -1.79364979e-01,  ...,
             6.93650842e-01,  6.14285767e-01,  5.03174663e-01]],

          [[-4.99194801e-01, -3.70370239e-01, -4.02576357e-01,  ...,
            -2.09339648e-01, -3.05958003e-01, -3.05958003e-01],
           [-4.50885653e-01, -3.54267180e-01, -3.38164121e-01,  ...,
             1.22934580e-07, -2.25442708e-01, -2.41545767e-01],
           [-4.18679416e-01, -2.73751885e-01, -1.77133530e-01,  ...,
             1.12721533e-01, -1.44927412e-01, -2.25442708e-01],
           ...,
           [-1.44927412e-01,  6.44123554e-02,  3.54267418e-01,  ...,
             1.19162667e+00,  1.12721443e+00,  1.01449287e+00],
           [-1.44927412e-01,  1.22934580e-07,  2.09339887e-01,  ...,
             1.17552364e+00,  1.22383285e+00,  1.11111140e+00],
           [-1.77133530e-01,  8.05154145e-02,  1.44927651e-01,  ...,
             1.14331758e+00,  1.15942061e+00,  1.11111140e+00]],

          [[-4.03298318e-01, -2.68365651e-01, -3.13343287e-01,  ...,
            -2.23388135e-01, -3.43328297e-01, -3.13343287e-01],
           [-3.73313308e-01, -2.83358276e-01, -2.53373146e-01,  ...,
            -2.84855980e-02, -2.53373146e-01, -2.38380641e-01],
           [-3.58320802e-01, -2.23388135e-01, -1.33433133e-01,  ...,
             6.14694245e-02, -1.93403140e-01, -2.38380641e-01],
           ...,
           [-5.84706068e-02,  1.21439442e-01,  3.91304523e-01,  ...,
             1.27586246e+00,  1.20089996e+00,  1.15592217e+00],
           [-8.84556174e-02,  4.64769229e-02,  2.41379470e-01,  ...,
             1.26086998e+00,  1.30584753e+00,  1.24587750e+00],
           [-8.84556174e-02,  1.36431947e-01,  1.81409463e-01,  ...,
             1.23088503e+00,  1.24587750e+00,  1.23088503e+00]]],


         [[[-6.55555546e-01, -5.28571427e-01, -5.60317457e-01,  ...,
            -3.69841158e-01, -4.80952382e-01, -5.28571427e-01],
           [-6.55555546e-01, -5.44444442e-01, -5.28571427e-01,  ...,
            -1.47618949e-01, -3.85714173e-01, -4.65079248e-01],
           [-6.55555546e-01, -5.12698412e-01, -4.17460203e-01,  ...,
            -5.23808524e-02, -3.06349099e-01, -4.49206233e-01],
           ...,
           [-3.85714173e-01, -1.95237994e-01,  2.69842222e-02,  ...,
             7.41269886e-01,  5.82539737e-01,  4.23809588e-01],
           [-4.33333218e-01, -3.22222114e-01, -1.47618949e-01,  ...,
             6.14285767e-01,  5.50793707e-01,  4.07936573e-01],
           [-4.01587188e-01, -1.95237994e-01, -1.79364979e-01,  ...,
             6.93650842e-01,  6.14285767e-01,  5.03174663e-01]],

          [[-4.99194801e-01, -3.70370239e-01, -4.02576357e-01,  ...,
            -2.09339648e-01, -3.05958003e-01, -3.05958003e-01],
           [-4.50885653e-01, -3.54267180e-01, -3.38164121e-01,  ...,
             1.22934580e-07, -2.25442708e-01, -2.41545767e-01],
           [-4.18679416e-01, -2.73751885e-01, -1.77133530e-01,  ...,
             1.12721533e-01, -1.44927412e-01, -2.25442708e-01],
           ...,
           [-1.44927412e-01,  6.44123554e-02,  3.54267418e-01,  ...,
             1.19162667e+00,  1.12721443e+00,  1.01449287e+00],
           [-1.44927412e-01,  1.22934580e-07,  2.09339887e-01,  ...,
             1.17552364e+00,  1.22383285e+00,  1.11111140e+00],
           [-1.77133530e-01,  8.05154145e-02,  1.44927651e-01,  ...,
             1.14331758e+00,  1.15942061e+00,  1.11111140e+00]],

          [[-4.03298318e-01, -2.68365651e-01, -3.13343287e-01,  ...,
            -2.23388135e-01, -3.43328297e-01, -3.13343287e-01],
           [-3.73313308e-01, -2.83358276e-01, -2.53373146e-01,  ...,
            -2.84855980e-02, -2.53373146e-01, -2.38380641e-01],
           [-3.58320802e-01, -2.23388135e-01, -1.33433133e-01,  ...,
             6.14694245e-02, -1.93403140e-01, -2.38380641e-01],
           ...,
           [-5.84706068e-02,  1.21439442e-01,  3.91304523e-01,  ...,
             1.27586246e+00,  1.20089996e+00,  1.15592217e+00],
           [-8.84556174e-02,  4.64769229e-02,  2.41379470e-01,  ...,
             1.26086998e+00,  1.30584753e+00,  1.24587750e+00],
           [-8.84556174e-02,  1.36431947e-01,  1.81409463e-01,  ...,
             1.23088503e+00,  1.24587750e+00,  1.23088503e+00]]]]],
       device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0447 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 146, vnnlib ID: 146 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-75.09549713, -76.30543518, -78.52840424, -78.00511169, -79.13686371,
         -78.81855774, -78.01085663, -79.74443817, -70.90943909, -77.19931793]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1149]; unstable size 1149; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 87, 1, 1149] with unstable size 86 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 25, 1, 1149] with unstable size 24 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1149] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [529]; unstable size 529; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 25, 1, 529] with unstable size 24 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 529] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [24]; unstable size 24; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.81836271, 3.93620849, 5.98015356, 5.58316326, 6.20737267, 6.35360909,
         5.45885706, 6.49708748, 4.78860950]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0388 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 147, vnnlib ID: 147 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-74.74298859, -78.12914276, -73.58407593, -76.75141144, -77.02214050,
         -76.72229767, -75.26336670, -76.68768311, -76.89849091, -79.03029633]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1534]; unstable size 1534; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 83, 1, 1534] with unstable size 82 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 26, 1, 1534] with unstable size 25 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1534] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [534]; unstable size 534; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 26, 1, 534] with unstable size 25 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 534] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [25]; unstable size 25; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.01744056,  3.09584570,  2.38317966,  2.45665216,  2.30203462,
          0.72801948,  1.68965840,  1.75551832,  4.18966341]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-74.74298859, -78.12914276, -73.58407593, -76.75141144, -77.02214050,
         -76.72229767, -75.26336670, -76.68768311, -76.89849091, -79.03029633]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.33it/s]100%|██████████| 1/1 [00:00<00:00,  8.33it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-74.86319733, -78.60845947, -74.25710297, -77.37802124, -77.73869324,
          -77.35115051, -76.01936340, -77.28346252, -77.22789764, -79.47423553]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.60609436]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1227 seconds.
PGD attack failed
verified_status unknown
verified_success False

all verified at 3th iter
best_l after optimization: 18.776817321777344
alpha/beta optimization time: 0.055100440979003906
initial alpha-crown bounds: tensor([[0.00446182, 3.12583208, 2.39620733, 2.47524762, 2.31538486, 0.74562991,
         1.71589959, 1.78631639, 4.21183825]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 0 ; Worst class: (+ rhs) 0.004461824893951416
verified with init bound!
Result: safe-incomplete in 0.2163 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 148, vnnlib ID: 148 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-35.61274338, -35.51696777, -33.26476669, -32.70972824, -34.27018738,
         -32.18314743, -34.29525375, -30.97902489, -36.17576981, -33.77673340]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1352]; unstable size 1352; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 87, 1, 1352] with unstable size 86 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 33, 1, 1352] with unstable size 32 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1352] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [525]; unstable size 525; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 33, 1, 525] with unstable size 32 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 525] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [32]; unstable size 32; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 32] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.21133423, 2.18450665, 1.26373625, 0.94747102, 2.41994762, 0.43122551,
         2.51288009, 3.36777520, 0.81463456]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0363 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 149, vnnlib ID: 149 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-38.47811890, -41.15504456, -35.17258835, -37.59195328, -35.94417953,
         -37.74038315, -35.72637939, -39.20100784, -40.81992722, -40.00645447]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1375]; unstable size 1375; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 83, 1, 1375] with unstable size 82 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 36, 1, 1375] with unstable size 35 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1375] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [696]; unstable size 696; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 36, 1, 696] with unstable size 35 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 696] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [35]; unstable size 35; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 35] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.90393126,  3.74037600,  1.12884760, -0.54622102,  1.22285295,
         -0.59468615,  1.85852146,  3.64914656,  2.62501955]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-38.47811890, -41.15504456, -35.17258835, -37.59195328, -35.94417953,
         -37.74038315, -35.72637939, -39.20100784, -40.81992722, -40.00645447]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.06it/s]100%|██████████| 1/1 [00:00<00:00,  8.06it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-38.10655594, -40.42593384, -34.70445251, -36.83950043, -35.18993759,
          -37.01552200, -34.80150223, -38.46211243, -40.35933304, -39.25265503],
         [-38.10655594, -40.42593384, -34.70445251, -36.83950043, -35.18993759,
          -37.01552200, -34.80150223, -38.46211243, -40.35933304, -39.25265503]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.48548508, 0.09704971]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1270 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 16.54989242553711
alpha/beta optimization time: 1.4624254703521729
initial alpha-crown bounds: tensor([[ 1.96761286,  3.87153721,  1.28700686, -0.15935612,  1.38276720,
         -0.46514022,  2.12900138,  3.76160598,  2.77485895]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.4651402235031128
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.37031030654907
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.37027144432068
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.37024354934692
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.37022185325623
Verifying property 3 with 1 instances.
##### Instance 149 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.15935612]], device='cuda:0') need to verify.
Model prediction is: tensor([-38.47811890, -41.15504456, -35.17258835, -37.59195328, -35.94417953,
        -37.74038315, -35.72637939, -39.20100784, -40.81992722, -40.00645447],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.15935612]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1375
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 676
Node /39 input 0: size torch.Size([250]) unstable 34
-----------------
# of unstable neurons: 2085
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00010228157043457031
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15934354066848755
10 lb beta sum: 0.0, worst -0.15934348106384277
Time: prepare 0.0002    bound 0.1232    transfer 0.0001    finalize 0.0002    func 0.1238    
Accumulated time: func 0.1238    prepare 0.0002    bound 0.1232    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 230] 
split level 1: [/input-16, 64] 
split level 2: [/input-16, 126] 
split level 3: [/input-16, 225] 
split level 4: [/input-16, 145] 
split level 5: [/input-16, 73] 
split level 6: [/input-16, 7] 
split level 7: [/input-16, 31] 
split level 8: [/input-16, 248] 
split level 9: [/input-16, 77] 
split level 10: [/input-16, 180] 
split level 11: [/input-16, 60] 
split level 12: [/input-16, 84] 
split level 13: [/input-16, 97] 
split level 14: [/input-12, 2573] 
split level 15: [/input-16, 218] 
split level 16: [/input-12, 1843] 
split level 17: [/input-12, 6243] 
split level 18: [/input-12, 7334] 
split level 19: [/input-12, 7908] 
split level 20: [/input-12, 1829] 
split level 21: [/input-16, 82] 
split level 22: [/input-12, 6253] 
split level 23: [/input-12, 7890] 
split level 24: [/input-12, 1838] 
split level 25: [/input-12, 1834] 
split level 26: [/input-12, 7634] 
split level 27: [/input-12, 854] 
split level 28: [/input-12, 2592] 
split level 29: [/input-12, 1819] 
split level 30: [/input-12, 2842] 
split level 31: [/input-12, 7906] 
split level 32: [/input-12, 7917] 
split level 33: [/input-12, 1355] 
split level 34: [/input-4, 3208] 
split level 35: [/input-12, 2577] 
split level 36: [/input-12, 4574] 
split level 37: [/input-12, 7590] 
split level 38: [/input-12, 2925] 
split level 39: [/input-12, 2930] 
split level 40: [/input-12, 7475] 
split level 41: [/input-12, 556] 
split level 42: [/input-12, 2605] 
split level 43: [/input-12, 5790] 
split level 44: [/input-12, 1382] 
split level 45: [/input-12, 2584] 
split level 46: [/input-12, 2595] 
split level 47: [/input-12, 2585] 
split level 48: [/input-12, 5206] 
split level 49: [/input-12, 4780] 
split level 50: [/input-12, 1347] 
split level 51: [/input-12, 2596] 
split level 52: [/input-12, 7902] 
split level 53: [/input-12, 746] 
split level 54: [/input-12, 7887] 
split level 55: [/input-12, 5230] 
split level 56: [/input-12, 4569] 
split level 57: [/input-12, 4677] 
split level 58: [/input-4, 1401] 
split level 59: [/input-4, 5051] 
split level 60: [/input-12, 4581] 
split level 61: [/input-12, 7337] 
split level 62: [/input-12, 2442] 
split level 63: [/input-12, 5813] 
split level 64: [/input-12, 6250] 
split level 65: [/input-12, 5778] 
split level 66: [/input-12, 2262] 
split level 67: [/input-12, 2353] 
split level 68: [/input-12, 4892] 
split level 69: [/input-12, 8029] 
split level 70: [/input-12, 204] 
split level 71: [/input-12, 3854] 
split level 72: [/input-4, 1415] 
split level 73: [/input-12, 1378] 
split level 74: [/input-12, 6762] 
split level 75: [/input-4, 4759] 
split level 76: [/input-4, 4743] 
split level 77: [/input-12, 2843] 
split level 78: [/input-12, 1830] 
split level 79: [/input-12, 7204] 
split level 80: [/input-12, 5548] 
split level 81: [/input-12, 4901] 
split level 82: [/input-12, 6236] 
split level 83: [/input-4, 1414] 
split level 84: [/input-12, 1190] 
split level 85: [/input-12, 2270] 
split level 86: [/input-12, 2345] 
split level 87: [/input-12, 5507] 
split level 88: [/input-4, 4758] 
split level 89: [/input-12, 5791] 
split level 90: [/input-12, 6518] 
split level 91: [/input-4, 2151] 
split level 92: [/input-12, 2531] 
split level 93: [/input-12, 3165] 
split level 94: [/input-12, 788] 
split level 95: [/input-12, 7850] 
split level 96: [/input-4, 5018] 
split level 97: [/input-4, 4742] 
split level 98: [/input-4, 7784] 
split level 99: [/input-12, 2523] 
split level 100: [/input-4, 1459] 
split level 101: [/input-12, 2421] 
split level 102: [/input-4, 4020] 
split level 103: [/input-12, 879] 
split level 104: [/input-12, 5774] 
split level 105: [/input-4, 6521] 
split level 106: [/input-12, 2504] 
split level 107: [/input-12, 6237] 
split level 108: [/input-12, 2505] 
split level 109: [/input-4, 4708] 
split level 110: [/input-12, 3302] 
split level 111: [/input-12, 3285] 
split level 112: [/input-12, 2922] 
split level 113: [/input-12, 6881] 
split level 114: [/input-12, 3166] 
split level 115: [/input-12, 7465] 
split level 116: [/input-12, 6771] 
split level 117: [/input-12, 6222] 
split level 118: [/input-12, 5212] 
split level 119: [/input-12, 5818] 
split level 120: [/input-4, 2182] 
split level 121: [/input-4, 3239] 
split level 122: [/input-4, 2153] 
split level 123: [/input-12, 7912] 
split level 124: [/input-4, 2921] 
split level 125: [/input-4, 5545] 
split level 126: [/input-4, 4695] 
split level 127: [/input-12, 5349] 
split level 128: [/input-12, 2418] 
split level 129: [/input-4, 2136] 
split level 130: [/input-12, 2608] 
split level 131: [/input-12, 5814] 
split level 132: [/input-12, 3349] 
split level 133: [/input-12, 7918] 
split level 134: [/input-12, 4894] 
split level 135: [/input-12, 86] 
split level 136: [/input-4, 1498] 
split level 137: [/input-12, 5547] 
split level 138: [/input-12, 2007] 
split level 139: [/input-12, 454] 
split level 140: [/input-12, 5225] 
split level 141: [/input-4, 3194] 
split level 142: [/input-4, 1438] 
split level 143: [/input-4, 2903] 
split level 144: [/input-12, 4881] 
split level 145: [/input-4, 1419] 
split level 146: [/input-12, 5792] 
split level 147: [/input-12, 5796] 
split level 148: [/input-12, 8022] 
split level 149: [/input-4, 1422] 
split level 150: [/input-12, 5213] 
split level 151: [/input-4, 4761] 
split level 152: [/input-12, 5812] 
split level 153: [/input-4, 6197] 
split level 154: [/input-12, 6506] 
split level 155: [/input-4, 3213] 
split level 156: [/input-4, 2918] 
split level 157: [/input-12, 984] 
split level 158: [/input-12, 5800] 
split level 159: [/input-4, 2957] 
split level 160: [/input-4, 2133] 
split level 161: [/input-4, 6311] 
split level 162: [/input-4, 3268] 
split level 163: [/input-12, 5233] 
split level 164: [/input-4, 7786] 
split level 165: [/input-12, 6780] 
split level 166: [/input-12, 5793] 
split level 167: [/input-12, 1206] 
split level 168: [/input-12, 1262] 
split level 169: [/input-4, 3188] 
split level 170: [/input-12, 6259] 
split level 171: [/input-12, 5187] 
split level 172: [/input-4, 2917] 
split level 173: [/input-12, 5314] 
split level 174: [/input-12, 6219] 
split level 175: [/input-4, 2629] 
split level 176: [/input-4, 2157] 
split level 177: [/input-4, 2266] 
split level 178: [/input-4, 3740] 
split level 179: [/input-4, 6312] 
split level 180: [/input-4, 2665] 
split level 181: [/input-4, 2117] 
split level 182: [/input-12, 1377] 
split level 183: [/input-4, 2600] 
split level 184: [/input-4, 3196] 
split level 185: [/input-4, 2693] 
split level 186: [/input-4, 2102] 
split level 187: [/input-4, 3127] 
split level 188: [/input-12, 5234] 
split level 189: [/input-12, 5209] 
split level 190: [/input-12, 3580] 
split level 191: [/input-4, 4052] 
split level 192: [/input-12, 6796] 
split level 193: [/input-4, 2259] 
split level 194: [/input-12, 2511] 
split level 195: [/input-4, 4036] 
split level 196: [/input-4, 3739] 
split level 197: [/input-4, 3253] 
split level 198: [/input-4, 4733] 
split level 199: [/input-4, 4789] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15916597843170166
10 lb beta sum: 0.0, worst -0.15916699171066284
Time: prepare 0.0116    bound 0.1361    transfer 0.0016    finalize 0.0059    func 0.1578    
Accumulated time: func 0.2816    prepare 0.0217    bound 0.2594    transfer 0.0017    finalize 0.0061    
all_split False
======================Cut inference begins======================
max lb tensor(0.06648576) min lb tensor(-0.15916300)
Number of Verified Splits: 2 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.010427713394165039 
BICCOS Cumulative time: 0.010427713394165039
Preprocessing time: 0.010062932968139648 Inference time: 0.00011229515075683594 Add cuts time: 4.649162292480469e-05 Cut analysis time: 0.00020599365234375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15212 (1), -0.15189 (1), -0.15174 (1), -0.15166 (1), -0.15121 (1), -0.15109 (1), -0.15073 (1), -0.15049 (1), -0.15046 (1), -0.15026 (1), -0.15002 (1), -0.14999 (1), -0.14969 (1), -0.14950 (1), -0.14915 (1), -0.14895 (1), -0.14833 (1), -0.14808 (1), -0.14782 (1), -0.14753 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.7784    set_bounds 0.0091    solve 0.1579    add 0.1915    
Accumulated time: pickout 0.0004    decision 0.7784    set_bounds 0.0091    solve 0.1579    add 0.1915    
Current (lb-rhs): -0.15211868286132812
50 domains visited
Cumulative time: 1.3596949577331543

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 230] [/input-16, 64] [/input-16, 64] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 230] 
split level 1: [/input-16, 64] [/input-16, 126] [/input-16, 126] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 126] [/input-16, 64] [/input-16, 64] 
split level 2: [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 126] [/input-16, 126] 
split level 3: [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 225] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13753652572631836
10 lb beta sum: 0.37261733412742615, worst -0.08725857734680176
Time: prepare 0.0070    bound 0.1553    transfer 0.0028    finalize 0.0054    func 0.1732    
Accumulated time: func 0.4548    prepare 0.0289    bound 0.4147    transfer 0.0045    finalize 0.0116    
all_split False
======================Cut inference begins======================
max lb tensor(0.18844062) min lb tensor(-0.08710253)
Number of Verified Splits: 152 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.02077341079711914 
BICCOS Cumulative time: 0.03120112419128418
Preprocessing time: 0.012017965316772461 Inference time: 0.006609678268432617 Add cuts time: 0.001977205276489258 Cut analysis time: 0.0001685619354248047
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0013    decision 0.0254    set_bounds 0.0133    solve 0.1733    add 0.0153    
Accumulated time: pickout 0.0017    decision 0.8037    set_bounds 0.0224    solve 0.3312    add 0.2069    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([126, 230]), tensor([-1., -1.]), tensor([0, 0]), tensor([5.33294592e+08, 2.21095607e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([126, 230]), tensor([-1.,  1.]), tensor([0, 0]), tensor([5.33294592e+08, 6.17140085e-02]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([126, 230]), tensor([ 1., -1.]), tensor([0, 0]), tensor([0.13257527, 0.22451316]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([126, 230]), tensor([1., 1.]), tensor([0, 0]), tensor([0.13257527, 0.07259391]), tensor([0, 1]))}
Shallow branching resets to n domains:  4
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10575306415557861

all verified at 4th iter
Time: prepare 0.0003    bound 0.0329    transfer 0.0002    finalize 0.0003    func 0.0338    
Accumulated time: func 0.4886    prepare 0.0292    bound 0.4476    transfer 0.0047    finalize 0.0118    
After pruning, left:  0

Back to Regular BaB


Properties batch 4, size 1
Remaining timeout: 196.48789501190186
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 196.48782467842102
Verifying property 5 with 1 instances.
##### Instance 149 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.46514022]], device='cuda:0') need to verify.
Model prediction is: tensor([-38.47811890, -41.15504456, -35.17258835, -37.59195328, -35.94417953,
        -37.74038315, -35.72637939, -39.20100784, -40.81992722, -40.00645447],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.46514022]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1375
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 676
Node /39 input 0: size torch.Size([250]) unstable 34
-----------------
# of unstable neurons: 2085
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 9.679794311523438e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4651212990283966
10 lb beta sum: 0.0, worst -0.4651181101799011
Time: prepare 0.0002    bound 0.1241    transfer 0.0001    finalize 0.0002    func 0.1247    
Accumulated time: func 0.1247    prepare 0.0002    bound 0.1241    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 103] 
split level 1: [/input-16, 23] 
split level 2: [/input-16, 82] 
split level 3: [/input-16, 218] 
split level 4: [/input-16, 248] 
split level 5: [/input-16, 97] 
split level 6: [/input-16, 195] 
split level 7: [/input-16, 64] 
split level 8: [/input-16, 225] 
split level 9: [/input-16, 235] 
split level 10: [/input-16, 77] 
split level 11: [/input-16, 160] 
split level 12: [/input-16, 7] 
split level 13: [/input-16, 247] 
split level 14: [/input-16, 145] 
split level 15: [/input-16, 180] 
split level 16: [/input-12, 2345] 
split level 17: [/input-12, 4874] 
split level 18: [/input-12, 2573] 
split level 19: [/input-12, 3339] 
split level 20: [/input-12, 1829] 
split level 21: [/input-16, 60] 
split level 22: [/input-12, 6881] 
split level 23: [/input-12, 426] 
split level 24: [/input-12, 5658] 
split level 25: [/input-12, 5548] 
split level 26: [/input-12, 1843] 
split level 27: [/input-12, 370] 
split level 28: [/input-12, 2385] 
split level 29: [/input-12, 4569] 
split level 30: [/input-16, 132] 
split level 31: [/input-12, 362] 
split level 32: [/input-12, 2001] 
split level 33: [/input-12, 7017] 
split level 34: [/input-12, 1838] 
split level 35: [/input-12, 7908] 
split level 36: [/input-12, 790] 
split level 37: [/input-12, 1703] 
split level 38: [/input-12, 4574] 
split level 39: [/input-12, 2353] 
split level 40: [/input-12, 7009] 
split level 41: [/input-12, 2577] 
split level 42: [/input-12, 4881] 
split level 43: [/input-12, 5278] 
split level 44: [/input-12, 2014] 
split level 45: [/input-12, 7850] 
split level 46: [/input-4, 3208] 
split level 47: [/input-12, 5301] 
split level 48: [/input-12, 1378] 
split level 49: [/input-12, 3414] 
split level 50: [/input-12, 5406] 
split level 51: [/input-12, 2262] 
split level 52: [/input-12, 7887] 
split level 53: [/input-4, 2663] 
split level 54: [/input-12, 2039] 
split level 55: [/input-12, 2585] 
split level 56: [/input-12, 2482] 
split level 57: [/input-12, 4713] 
split level 58: [/input-12, 3349] 
split level 59: [/input-12, 3332] 
split level 60: [/input-12, 4705] 
split level 61: [/input-12, 3934] 
split level 62: [/input-12, 3285] 
split level 63: [/input-12, 2481] 
split level 64: [/input-12, 2538] 
split level 65: [/input-12, 2518] 
split level 66: [/input-12, 4717] 
split level 67: [/input-12, 454] 
split level 68: [/input-12, 2531] 
split level 69: [/input-12, 1830] 
split level 70: [/input-12, 7634] 
split level 71: [/input-12, 1347] 
split level 72: [/input-4, 7786] 
split level 73: [/input-12, 4581] 
split level 74: [/input-4, 5018] 
split level 75: [/input-12, 1743] 
split level 76: [/input-12, 6762] 
split level 77: [/input-12, 3340] 
split level 78: [/input-12, 3359] 
split level 79: [/input-4, 1690] 
split level 80: [/input-4, 1474] 
split level 81: [/input-12, 2930] 
split level 82: [/input-12, 5206] 
split level 83: [/input-12, 2517] 
split level 84: [/input-12, 3276] 
split level 85: [/input-12, 1742] 
split level 86: [/input-12, 4894] 
split level 87: [/input-12, 2523] 
split level 88: [/input-4, 7784] 
split level 89: [/input-12, 2270] 
split level 90: [/input-12, 2584] 
split level 91: [/input-4, 1645] 
split level 92: [/input-4, 2903] 
split level 93: [/input-12, 7917] 
split level 94: [/input-4, 1415] 
split level 95: [/input-4, 4490] 
split level 96: [/input-12, 2007] 
split level 97: [/input-4, 2257] 
split level 98: [/input-12, 86] 
split level 99: [/input-4, 4758] 
split level 100: [/input-4, 4708] 
split level 101: [/input-4, 2665] 
split level 102: [/input-12, 6771] 
split level 103: [/input-4, 2716] 
split level 104: [/input-12, 2505] 
split level 105: [/input-4, 4460] 
split level 106: [/input-4, 4462] 
split level 107: [/input-4, 396] 
split level 108: [/input-12, 5778] 
split level 109: [/input-4, 4458] 
split level 110: [/input-12, 4880] 
split level 111: [/input-12, 2486] 
split level 112: [/input-12, 3275] 
split level 113: [/input-12, 1819] 
split level 114: [/input-12, 5230] 
split level 115: [/input-4, 4036] 
split level 116: [/input-4, 4743] 
split level 117: [/input-4, 4759] 
split level 118: [/input-4, 2182] 
split level 119: [/input-4, 3239] 
split level 120: [/input-4, 2921] 
split level 121: [/input-12, 2280] 
split level 122: [/input-4, 3298] 
split level 123: [/input-4, 4522] 
split level 124: [/input-12, 7337] 
split level 125: [/input-4, 4742] 
split level 126: [/input-12, 3286] 
split level 127: [/input-4, 4425] 
split level 128: [/input-4, 4020] 
split level 129: [/input-12, 1355] 
split level 130: [/input-4, 6293] 
split level 131: [/input-12, 5547] 
split level 132: [/input-4, 4695] 
split level 133: [/input-4, 108] 
split level 134: [/input-12, 2511] 
split level 135: [/input-12, 6736] 
split level 136: [/input-12, 556] 
split level 137: [/input-4, 2259] 
split level 138: [/input-4, 1459] 
split level 139: [/input-4, 4165] 
split level 140: [/input-4, 3127] 
split level 141: [/input-12, 3424] 
split level 142: [/input-4, 3188] 
split level 143: [/input-12, 5187] 
split level 144: [/input-12, 5774] 
split level 145: [/input-4, 2950] 
split level 146: [/input-4, 2629] 
split level 147: [/input-12, 791] 
split level 148: [/input-4, 4457] 
split level 149: [/input-12, 5213] 
split level 150: [/input-12, 782] 
split level 151: [/input-4, 437] 
split level 152: [/input-12, 822] 
split level 153: [/input-4, 1619] 
split level 154: [/input-12, 1430] 
split level 155: [/input-4, 1414] 
split level 156: [/input-12, 798] 
split level 157: [/input-4, 3268] 
split level 158: [/input-4, 4459] 
split level 159: [/input-4, 2133] 
split level 160: [/input-4, 2153] 
split level 161: [/input-4, 2887] 
split level 162: [/input-4, 4761] 
split level 163: [/input-4, 3238] 
split level 164: [/input-4, 2917] 
split level 165: [/input-4, 1660] 
split level 166: [/input-4, 3740] 
split level 167: [/input-4, 2229] 
split level 168: [/input-12, 6754] 
split level 169: [/input-4, 3253] 
split level 170: [/input-4, 1689] 
split level 171: [/input-4, 4523] 
split level 172: [/input-4, 2918] 
split level 173: [/input-12, 7906] 
split level 174: [/input-4, 1692] 
split level 175: [/input-4, 2924] 
split level 176: [/input-4, 2600] 
split level 177: [/input-4, 138] 
split level 178: [/input-12, 5212] 
split level 179: [/input-4, 866] 
split level 180: [/input-4, 4509] 
split level 181: [/input-4, 2931] 
split level 182: [/input-4, 4424] 
split level 183: [/input-4, 3266] 
split level 184: [/input-4, 7863] 
split level 185: [/input-4, 4444] 
split level 186: [/input-4, 2937] 
split level 187: [/input-4, 6312] 
split level 188: [/input-4, 3739] 
split level 189: [/input-4, 4538] 
split level 190: [/input-12, 2843] 
split level 191: [/input-4, 3738] 
split level 192: [/input-4, 7849] 
split level 193: [/input-4, 2197] 
split level 194: [/input-4, 4435] 
split level 195: [/input-4, 2999] 
split level 196: [/input-4, 1604] 
split level 197: [/input-4, 2214] 
split level 198: [/input-12, 1764] 
split level 199: [/input-4, 2935] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.46489039063453674
10 lb beta sum: 0.0, worst -0.4648917317390442
Time: prepare 0.0116    bound 0.1344    transfer 0.0018    finalize 0.0066    func 0.1570    
Accumulated time: func 0.2817    prepare 0.0217    bound 0.2585    transfer 0.0020    finalize 0.0068    
all_split False
======================Cut inference begins======================
max lb tensor(-0.18728283) min lb tensor(-0.46488896)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.009858846664428711 
BICCOS Cumulative time: 0.009858846664428711
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.45532 (1), -0.45510 (1), -0.45499 (1), -0.45497 (1), -0.45488 (1), -0.45486 (1), -0.45460 (1), -0.45459 (1), -0.45435 (1), -0.45413 (1), -0.45404 (1), -0.45364 (1), -0.45339 (1), -0.45235 (1), -0.45226 (1), -0.45203 (1), -0.45175 (1), -0.45139 (1), -0.45120 (1), -0.45071 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7798    set_bounds 0.0091    solve 0.1571    add 0.0790    
Accumulated time: pickout 0.0003    decision 0.7798    set_bounds 0.0091    solve 0.1571    add 0.0790    
Current (lb-rhs): -0.4553224444389343
50 domains visited
Cumulative time: 1.166982650756836

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 103] [/input-16, 23] [/input-16, 23] [/input-16, 23] [/input-16, 103] [/input-16, 23] [/input-16, 23] [/input-16, 23] [/input-16, 103] [/input-16, 23] 
split level 1: [/input-16, 218] [/input-16, 82] [/input-16, 103] [/input-16, 103] [/input-16, 23] [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 23] [/input-16, 82] 
split level 2: [/input-16, 82] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] 
split level 3: [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.43612658977508545
10 lb beta sum: 0.0, worst -0.43606847524642944
Time: prepare 0.0120    bound 0.1315    transfer 0.0018    finalize 0.0051    func 0.1530    
Accumulated time: func 0.4346    prepare 0.0340    bound 0.3899    transfer 0.0037    finalize 0.0119    
all_split False
======================Cut inference begins======================
max lb tensor(0.06369066) min lb tensor(-0.43577957)
Number of Verified Splits: 4 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.012342691421508789 
BICCOS Cumulative time: 0.0222015380859375
Preprocessing time: 0.011804342269897461 Inference time: 0.00021767616271972656 Add cuts time: 7.462501525878906e-05 Cut analysis time: 0.0002460479736328125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17635 (2), -0.17625 (2), -0.17605 (2), -0.17602 (2), -0.17535 (2), -0.17496 (2), -0.17443 (2), -0.17432 (2), -0.17421 (2), -0.17339 (2), -0.17305 (2), -0.17152 (2), -0.17132 (2), -0.17107 (2), -0.16963 (2), -0.16845 (2), -0.16840 (2), -0.16839 (2), -0.16732 (2), -0.16719 (2), 
Length of domains: 50
Time: pickout 0.0007    decision 0.0252    set_bounds 0.0133    solve 0.1531    add 0.0877    
Accumulated time: pickout 0.0010    decision 0.8050    set_bounds 0.0224    solve 0.3101    add 0.1667    
Current (lb-rhs): -0.1763501763343811
100 domains visited
Cumulative time: 1.4595141410827637

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 103] [/input-16, 23] [/input-16, 103] [/input-16, 23] [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 103] 
split level 1: [/input-16, 218] [/input-16, 82] [/input-16, 218] [/input-16, 82] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] 
split level 2: [/input-16, 82] [/input-16, 218] [/input-16, 82] [/input-16, 218] [/input-16, 82] [/input-16, 82] [/input-16, 82] [/input-16, 248] [/input-16, 248] [/input-16, 82] 
split level 3: [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16414204239845276
10 lb beta sum: 0.07461782544851303, worst -0.2316301017999649
Time: prepare 0.0066    bound 0.1537    transfer 0.0018    finalize 0.0070    func 0.1723    
Accumulated time: func 0.6069    prepare 0.0408    bound 0.5436    transfer 0.0055    finalize 0.0190    
all_split False
======================Cut inference begins======================
max lb tensor(0.19817710) min lb tensor(-0.12890589)
Number of Verified Splits: 102 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 11
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.019037723541259766 
BICCOS Cumulative time: 0.041239261627197266
Preprocessing time: 0.011633872985839844 Inference time: 0.004792690277099609 Add cuts time: 0.002140522003173828 Cut analysis time: 0.0004706382751464844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07528 (3), -0.07490 (3), -0.07485 (3), -0.07453 (3), -0.07442 (3), -0.07398 (3), -0.07251 (3), -0.07055 (3), -0.07034 (3), -0.07017 (3), -0.06777 (3), -0.06646 (3), -0.06625 (3), -0.06597 (3), -0.06361 (3), -0.06341 (3), -0.06273 (3), -0.06242 (3), -0.06160 (3), -0.06098 (3), 
Length of domains: 50
Time: pickout 0.0009    decision 0.0254    set_bounds 0.0155    solve 0.1724    add 0.0957    
Accumulated time: pickout 0.0019    decision 0.8303    set_bounds 0.0379    solve 0.4825    add 0.2624    
Current (lb-rhs): -0.07528384029865265
150 domains visited
Cumulative time: 1.788682460784912

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 218] 
split level 1: [/input-16, 82] [/input-16, 82] [/input-16, 82] [/input-16, 82] [/input-16, 82] [/input-16, 82] [/input-16, 82] [/input-16, 82] [/input-16, 82] [/input-16, 82] 
split level 2: [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 97] [/input-16, 248] 
split level 3: [/input-12, 3349] [/input-12, 3349] [/input-12, 3349] [/input-12, 3349] [/input-12, 3349] [/input-12, 3349] [/input-12, 3349] [/input-12, 3349] [/input-16, 225] [/input-16, 225] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10466176271438599
10 lb beta sum: 0.08852628618478775, worst -0.2921648919582367
Time: prepare 0.0064    bound 0.1548    transfer 0.0016    finalize 0.0050    func 0.1704    
Accumulated time: func 0.7773    prepare 0.0475    bound 0.6984    transfer 0.0071    finalize 0.0240    
all_split False
======================Cut inference begins======================
max lb tensor(0.36074907) min lb tensor(-0.06174932)
Number of Verified Splits: 205 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 13
#cuts 4-6: 9
#cuts >= 20: 0
BICCOS time: 0.027445077896118164 
BICCOS Cumulative time: 0.06868433952331543
Preprocessing time: 0.011518239974975586 Inference time: 0.010754108428955078 Add cuts time: 0.004437923431396484 Cut analysis time: 0.0007348060607910156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02479 (4), -0.02403 (4), -0.02390 (4), -0.02386 (4), -0.02325 (4), -0.02320 (4), -0.02288 (4), -0.02280 (4), -0.02197 (4), -0.02179 (4), -0.02115 (4), -0.02113 (4), -0.02051 (4), -0.01879 (4), -0.01729 (4), -0.01713 (4), -0.01693 (4), -0.01653 (4), -0.01652 (4), -0.01649 (4), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0253    set_bounds 0.0160    solve 0.1705    add 0.2427    
Accumulated time: pickout 0.0025    decision 0.8557    set_bounds 0.0539    solve 0.6530    add 0.5052    
Current (lb-rhs): -0.024792281910777092
200 domains visited
Cumulative time: 2.271693468093872

Shallow-BaB round 5
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 82] [/input-16, 82] [/input-16, 82] [/input-16, 82] [/input-16, 82] [/input-16, 82] [/input-16, 82] [/input-16, 82] [/input-16, 82] [/input-16, 82] 
split level 1: [/input-16, 97] [/input-16, 97] [/input-16, 97] [/input-16, 97] [/input-16, 218] [/input-16, 97] [/input-16, 218] [/input-16, 97] [/input-16, 97] [/input-16, 97] 
split level 2: [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 97] [/input-16, 248] [/input-16, 97] [/input-16, 248] [/input-16, 248] [/input-16, 248] 
split level 3: [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 248] [/input-16, 225] [/input-16, 248] [/input-16, 225] [/input-16, 225] [/input-16, 64] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05090838670730591
10 lb beta sum: 0.09331045299768448, worst -0.1269274801015854
Time: prepare 0.0065    bound 0.1749    transfer 0.0016    finalize 0.0051    func 0.1907    
Accumulated time: func 0.9680    prepare 0.0543    bound 0.8733    transfer 0.0087    finalize 0.0291    
all_split False
======================Cut inference begins======================
max lb tensor(0.25485492) min lb tensor(-0.01459944)
Number of Verified Splits: 338 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 3
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.039017438888549805 
BICCOS Cumulative time: 0.10770177841186523
Preprocessing time: 0.011678457260131836 Inference time: 0.01886153221130371 Add cuts time: 0.008099555969238281 Cut analysis time: 0.00037789344787597656
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0007    decision 0.0255    set_bounds 0.0158    solve 0.1908    add 0.0254    
Accumulated time: pickout 0.0032    decision 0.8812    set_bounds 0.0697    solve 0.8438    add 0.5305    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
200 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 23, 103]), tensor([-1., -1.]), tensor([0, 0]), tensor([0.13009095, 0.20474322]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 23, 103, 218, 225,  82]), tensor([-1.,  1., -1., -1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([0.13009095, 0.07965483, 0.04839958, 0.04270825, 0.06375745]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 23, 103, 218, 225,  82]), tensor([-1.,  1., -1., -1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([0.13009095, 0.07965483, 0.04839958, 0.04270825, 0.02302787]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 23, 103, 218, 225,  82]), tensor([-1.,  1., -1.,  1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([0.13009095, 0.07965483, 0.04839958, 0.04472017, 0.06254464]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 23, 103, 218, 225,  82]), tensor([-1.,  1., -1.,  1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([0.13009095, 0.07965483, 0.04839958, 0.04472017, 0.01694026]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 23, 103, 218, 225,  82]), tensor([-1.,  1.,  1., -1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([0.13009095, 0.07965483, 0.05136149, 0.04573945, 0.05973017]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 23, 103, 218, 225,  82]), tensor([-1.,  1.,  1., -1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([0.13009095, 0.07965483, 0.05136149, 0.04573945, 0.01590172]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 23, 103, 218, 225,  82]), tensor([-1.,  1.,  1.,  1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([0.13009095, 0.07965483, 0.05136149, 0.04495208, 0.06349483]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 23, 103, 218, 225,  82]), tensor([-1.,  1.,  1.,  1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([0.13009095, 0.07965483, 0.05136149, 0.04495208, 0.01881377]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 23, 103]), tensor([ 1., -1.]), tensor([0, 0]), tensor([-1.26703658e+34,  2.03684792e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 23, 103]), tensor([1., 1.]), tensor([0, 0]), tensor([-1.26703658e+34,  7.41383880e-02]), tensor([0, 1]))}
Shallow branching resets to n domains:  11
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.35559189319610596
10 lb beta sum: 0.2063724845647812, worst -0.3549354076385498
Time: prepare 0.0005    bound 0.1496    transfer 0.0002    finalize 0.0006    func 0.1510    
Accumulated time: func 1.1190    prepare 0.0548    bound 1.0229    transfer 0.0090    finalize 0.0296    
After pruning, left:  2

Back to Regular BaB

BaB round 1
batch: 2
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 82] [/input-16, 82] 
split level 1: [/input-16, 218] [/input-16, 218] 
split level 2: [/input-16, 225] [/input-16, 225] 
cut re-enabled after branching node selection
0 lb beta sum: 0.02522939443588257, worst -0.29137152433395386
10 lb beta sum: 0.03444492444396019, worst -0.29101139307022095
Time: prepare 0.0009    bound 0.1507    transfer 0.0002    finalize 0.0007    func 0.1527    
Accumulated time: func 1.2717    prepare 0.0558    bound 1.1736    transfer 0.0092    finalize 0.0303    
all_split False
======================Cut inference begins======================
max lb tensor(-0.02895951) min lb tensor(-0.29088527)
Number of Verified Splits: 0 of 16
No cut inferred: All or none verified.
Total number of valid cuts: 7.
#cuts 1-3: 3
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.0008196830749511719 
BICCOS Cumulative time: 0.1085214614868164
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.29089 (3), -0.28967 (3), -0.28600 (3), -0.28559 (3), -0.15905 (3), -0.15502 (3), -0.15333 (3), -0.15079 (3), -0.14676 (3), -0.14532 (3), -0.13938 (3), -0.13915 (3), -0.04003 (3), -0.03364 (3), -0.02999 (3), -0.02896 (3), 
Length of domains: 16
Time: pickout 0.0004    decision 0.0132    set_bounds 0.0012    solve 0.1527    add 0.0013    
Accumulated time: pickout 0.0036    decision 0.8943    set_bounds 0.0709    solve 0.9965    add 0.5319    
Current (lb-rhs): -0.2908852696418762
216 domains visited
Cumulative time: 2.919109582901001

BaB round 2
batch: 16
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] [/input-16, 248] 
cut re-enabled after branching node selection
0 lb beta sum: 0.037422843277454376, worst -0.28017300367355347
10 lb beta sum: 0.033278800547122955, worst -0.28008556365966797
Time: prepare 0.0016    bound 0.1502    transfer 0.0006    finalize 0.0009    func 0.1535    
Accumulated time: func 1.4252    prepare 0.0576    bound 1.3238    transfer 0.0098    finalize 0.0312    
all_split False
======================Cut inference begins======================
max lb tensor(0.03311019) min lb tensor(-0.28004086)
Number of Verified Splits: 4 of 32
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.09923258423805237, worst -0.173732191324234
10 lb beta sum: 0.41314831376075745, worst -0.08938977122306824
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 3
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.15291309356689453 
BICCOS Cumulative time: 0.26143455505371094
Preprocessing time: 0.0012199878692626953 Inference time: 0.1511063575744629 Add cuts time: 0.0002372264862060547 Cut analysis time: 0.0003495216369628906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.28004 (4), -0.27892 (4), -0.27507 (4), -0.27492 (4), -0.22073 (4), -0.21711 (4), -0.21386 (4), -0.21144 (4), -0.14740 (4), -0.14342 (4), -0.14162 (4), -0.13931 (4), -0.13387 (4), -0.13238 (4), -0.12581 (4), -0.12569 (4), -0.08875 (4), -0.08408 (4), -0.07527 (4), -0.07506 (4), 
Length of domains: 28
Time: pickout 0.0005    decision 0.0140    set_bounds 0.0017    solve 0.1535    add 0.0017    
Accumulated time: pickout 0.0041    decision 0.9083    set_bounds 0.0726    solve 1.1500    add 0.5336    
Current (lb-rhs): -0.2800408601760864
244 domains visited
Cumulative time: 3.2436609268188477

BaB round 3
batch: 28
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 195] [/input-16, 97] [/input-16, 195] [/input-16, 97] [/input-16, 195] [/input-16, 97] [/input-16, 195] [/input-16, 97] [/input-16, 195] [/input-16, 97] 
cut re-enabled after branching node selection
0 lb beta sum: 0.028211181983351707, worst -0.27106189727783203
10 lb beta sum: 0.027862967923283577, worst -0.27100080251693726
Time: prepare 0.0025    bound 0.1499    transfer 0.0005    finalize 0.0012    func 0.1546    
Accumulated time: func 1.5798    prepare 0.0602    bound 1.4737    transfer 0.0104    finalize 0.0324    
all_split False
======================Cut inference begins======================
max lb tensor(0.10492969) min lb tensor(-0.27097881)
Number of Verified Splits: 16 of 56
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.03675486892461777, worst -0.34365081787109375
10 lb beta sum: 0.33921581506729126, worst -0.11263933777809143
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 3
#cuts 4-6: 10
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.1610279083251953 
BICCOS Cumulative time: 0.42246246337890625
Preprocessing time: 0.001916646957397461 Inference time: 0.1577756404876709 Add cuts time: 0.0006606578826904297 Cut analysis time: 0.0006749629974365234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.27098 (5), -0.26980 (5), -0.26583 (5), -0.26564 (5), -0.21070 (5), -0.20767 (5), -0.20352 (5), -0.20231 (5), -0.19838 (5), -0.19544 (5), -0.19480 (5), -0.19197 (5), -0.13879 (5), -0.13500 (5), -0.13289 (5), -0.13086 (5), -0.12421 (5), -0.12299 (5), -0.11695 (5), -0.11667 (5), 
Length of domains: 40
Time: pickout 0.0007    decision 0.0146    set_bounds 0.0027    solve 0.1546    add 0.0016    
Accumulated time: pickout 0.0048    decision 0.9229    set_bounds 0.0753    solve 1.3047    add 0.5352    
Current (lb-rhs): -0.27097880840301514
284 domains visited
Cumulative time: 3.579204797744751

BaB round 4
batch: 40
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 97] [/input-16, 195] [/input-16, 97] [/input-16, 195] [/input-16, 97] [/input-16, 195] [/input-16, 97] [/input-16, 195] [/input-16, 195] [/input-16, 195] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2629302740097046
10 lb beta sum: 0.04356367513537407, worst -0.26288026571273804
Time: prepare 0.0014    bound 0.1544    transfer 0.0010    finalize 0.0014    func 0.1588    
Accumulated time: func 1.7386    prepare 0.0618    bound 1.6281    transfer 0.0114    finalize 0.0338    
all_split False
======================Cut inference begins======================
max lb tensor(0.08865196) min lb tensor(-0.26286745)
Number of Verified Splits: 17 of 80
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3442779779434204
10 lb beta sum: 0.3671277165412903, worst -0.16159731149673462
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 3
#cuts 4-6: 11
#cuts 7-9: 4
#cuts >= 20: 0
BICCOS time: 0.16296839714050293 
BICCOS Cumulative time: 0.5854308605194092
Preprocessing time: 0.002599477767944336 Inference time: 0.15870165824890137 Add cuts time: 0.0008375644683837891 Cut analysis time: 0.0008296966552734375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.26287 (6), -0.26160 (6), -0.25757 (6), -0.25730 (6), -0.20232 (6), -0.19941 (6), -0.19524 (6), -0.19385 (6), -0.18772 (6), -0.18503 (6), -0.18393 (6), -0.18068 (6), -0.18035 (6), -0.17903 (6), -0.17713 (6), -0.17569 (6), -0.12846 (6), -0.12471 (6), -0.12279 (6), -0.12063 (6), 
Length of domains: 63
Time: pickout 0.0006    decision 0.0153    set_bounds 0.0037    solve 0.1590    add 0.0020    
Accumulated time: pickout 0.0054    decision 0.9382    set_bounds 0.0790    solve 1.4636    add 0.5372    
Current (lb-rhs): -0.26286745071411133
347 domains visited
Cumulative time: 3.9231297969818115

BaB round 5
batch: 63
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2557706832885742
10 lb beta sum: 0.03576435521245003, worst -0.2557152509689331
Time: prepare 0.0020    bound 0.1514    transfer 0.0011    finalize 0.0032    func 0.1587    
Accumulated time: func 1.8973    prepare 0.0640    bound 1.7796    transfer 0.0125    finalize 0.0371    
all_split False
======================Cut inference begins======================
max lb tensor(0.08786833) min lb tensor(-0.25569582)
Number of Verified Splits: 41 of 126
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3114663362503052
10 lb beta sum: 0.3561747372150421, worst -0.11095699667930603
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 35.
#cuts 1-3: 3
#cuts 4-6: 24
#cuts 7-9: 8
#cuts >= 20: 0
BICCOS time: 0.18015599250793457 
BICCOS Cumulative time: 0.7655868530273438
Preprocessing time: 0.0039560794830322266 Inference time: 0.17135858535766602 Add cuts time: 0.0032339096069335938 Cut analysis time: 0.0016074180603027344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25570 (7), -0.25462 (7), -0.25034 (7), -0.25032 (7), -0.19382 (7), -0.19088 (7), -0.18692 (7), -0.18593 (7), -0.17841 (7), -0.17497 (7), -0.17487 (7), -0.17147 (7), -0.17105 (7), -0.16945 (7), -0.16786 (7), -0.16637 (7), -0.16415 (7), -0.16047 (7), -0.14754 (7), -0.14539 (7), 
Length of domains: 85
Time: pickout 0.0006    decision 0.0162    set_bounds 0.0054    solve 0.1588    add 0.0024    
Accumulated time: pickout 0.0060    decision 0.9545    set_bounds 0.0845    solve 1.6224    add 0.5396    
Current (lb-rhs): -0.25569581985473633
432 domains visited
Cumulative time: 4.287234306335449

BaB round 6
batch: 85
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 77] [/input-16, 77] [/input-16, 77] [/input-16, 77] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.24904632568359375
10 lb beta sum: 0.033680252730846405, worst -0.24901336431503296
Time: prepare 0.0032    bound 0.1581    transfer 0.0015    finalize 0.0028    func 0.1667    
Accumulated time: func 2.0640    prepare 0.0675    bound 1.9376    transfer 0.0139    finalize 0.0399    
all_split False
======================Cut inference begins======================
max lb tensor(0.02223730) min lb tensor(-0.24900711)
Number of Verified Splits: 25 of 170
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3070297837257385
10 lb beta sum: 0.41554495692253113, worst -0.07894021272659302
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 43.
#cuts 1-3: 3
#cuts 4-6: 27
#cuts 7-9: 13
#cuts >= 20: 0
BICCOS time: 0.17307758331298828 
BICCOS Cumulative time: 0.938664436340332
Preprocessing time: 0.00524592399597168 Inference time: 0.16431713104248047 Add cuts time: 0.0014624595642089844 Cut analysis time: 0.0020520687103271484
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.24901 (8), -0.24782 (8), -0.24363 (8), -0.24353 (8), -0.21848 (8), -0.21754 (8), -0.21212 (8), -0.21204 (8), -0.18698 (8), -0.18402 (8), -0.17980 (8), -0.17911 (8), -0.17015 (8), -0.16672 (8), -0.16608 (8), -0.16281 (8), -0.16260 (8), -0.16091 (8), -0.15900 (8), -0.15806 (8), 
Length of domains: 145
Time: pickout 0.0007    decision 0.0175    set_bounds 0.0073    solve 0.1668    add 0.0044    
Accumulated time: pickout 0.0068    decision 0.9720    set_bounds 0.0918    solve 1.7892    add 0.5440    
Current (lb-rhs): -0.24900710582733154
577 domains visited
Cumulative time: 4.6575400829315186

BaB round 7
batch: 145
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 77] [/input-16, 77] [/input-16, 77] [/input-16, 77] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2401091456413269
10 lb beta sum: 0.028686033561825752, worst -0.24008393287658691
Time: prepare 0.0043    bound 0.1577    transfer 0.0014    finalize 0.0046    func 0.1698    
Accumulated time: func 2.2339    prepare 0.0720    bound 2.0953    transfer 0.0154    finalize 0.0444    
all_split False
======================Cut inference begins======================
max lb tensor(0.06191694) min lb tensor(-0.24008030)
Number of Verified Splits: 37 of 290
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 41.
#cuts 1-3: 4
#cuts 4-6: 28
#cuts 7-9: 9
#cuts >= 20: 0
BICCOS time: 0.017554283142089844 
BICCOS Cumulative time: 0.9562187194824219
Preprocessing time: 0.008598089218139648 Inference time: 0.003754854202270508 Add cuts time: 0.0034236907958984375 Cut analysis time: 0.00177764892578125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.24008 (9), -0.23893 (9), -0.23455 (9), -0.23455 (9), -0.23100 (9), -0.22907 (9), -0.22724 (9), -0.22609 (9), -0.20757 (9), -0.20685 (9), -0.20410 (9), -0.20219 (9), -0.20152 (9), -0.20105 (9), -0.19854 (9), -0.19725 (9), -0.17746 (9), -0.17446 (9), -0.17219 (9), -0.17043 (9), 
Length of domains: 253
Time: pickout 0.0018    decision 0.0248    set_bounds 0.0125    solve 0.1705    add 0.0051    
Accumulated time: pickout 0.0085    decision 0.9967    set_bounds 0.1042    solve 1.9597    add 0.5491    
Current (lb-rhs): -0.24008029699325562
830 domains visited
Cumulative time: 4.8903234004974365

BaB round 8
batch: 253
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 7] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2314293384552002
10 lb beta sum: 0.02353608049452305, worst -0.23141264915466309
Time: prepare 0.0074    bound 0.1585    transfer 0.0019    finalize 0.0164    func 0.1877    
Accumulated time: func 2.4216    prepare 0.0796    bound 2.2538    transfer 0.0173    finalize 0.0609    
all_split False
======================Cut inference begins======================
max lb tensor(0.00839847) min lb tensor(-0.23140782)
Number of Verified Splits: 52 of 506
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 34.
#cuts 1-3: 6
#cuts 4-6: 24
#cuts 7-9: 4
#cuts >= 20: 0
BICCOS time: 0.024974346160888672 
BICCOS Cumulative time: 0.9811930656433105
Preprocessing time: 0.014780044555664062 Inference time: 0.005505561828613281 Add cuts time: 0.0032668113708496094 Cut analysis time: 0.0014219284057617188
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23141 (10), -0.23027 (10), -0.22674 (10), -0.22595 (10), -0.22588 (10), -0.22519 (10), -0.22249 (10), -0.22092 (10), -0.22075 (10), -0.22043 (10), -0.21873 (10), -0.21759 (10), -0.21675 (10), -0.21522 (10), -0.21200 (10), -0.21117 (10), -0.19746 (10), -0.19683 (10), -0.19597 (10), -0.19506 (10), 
Length of domains: 454
Time: pickout 0.0013    decision 0.0323    set_bounds 0.0218    solve 0.1879    add 0.0087    
Accumulated time: pickout 0.0098    decision 1.0291    set_bounds 0.1260    solve 2.1475    add 0.5579    
Current (lb-rhs): -0.23140782117843628
1284 domains visited
Cumulative time: 5.1684112548828125

BaB round 9
batch: 256
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4713] [/input-12, 4713] [/input-16, 180] [/input-12, 4713] [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 145] [/input-16, 180] [/input-16, 180] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22026801109313965
10 lb beta sum: 0.02140738070011139, worst -0.2212693691253662
Time: prepare 0.0082    bound 0.1550    transfer 0.0020    finalize 0.0064    func 0.1750    
Accumulated time: func 2.5966    prepare 0.0881    bound 2.4087    transfer 0.0192    finalize 0.0673    
all_split False
======================Cut inference begins======================
max lb tensor(0.01642418) min lb tensor(-0.22020912)
Number of Verified Splits: 47 of 512
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 39.
#cuts 1-3: 6
#cuts 4-6: 30
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.024871826171875 
BICCOS Cumulative time: 1.0060648918151855
Preprocessing time: 0.01470804214477539 Inference time: 0.005280256271362305 Add cuts time: 0.003284454345703125 Cut analysis time: 0.0015990734100341797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23141 (10), -0.23027 (10), -0.22595 (10), -0.22588 (10), -0.22249 (10), -0.22043 (10), -0.22021 (11), -0.21877 (11), -0.21873 (10), -0.21759 (10), -0.21652 (11), -0.21447 (11), -0.21446 (11), -0.21432 (11), -0.21017 (11), -0.20952 (11), -0.20893 (11), -0.20838 (11), -0.20607 (11), -0.20556 (11), 
Length of domains: 663
Time: pickout 0.0104    decision 0.0304    set_bounds 0.0209    solve 0.1751    add 0.0073    
Accumulated time: pickout 0.0202    decision 1.0595    set_bounds 0.1469    solve 2.3227    add 0.5652    
Current (lb-rhs): -0.23140782117843628
1749 domains visited
current_vram/total_varm: 2.1GB/99.9GB, batch_size increase to 512
Cumulative time: 5.438626766204834

BaB round 10
batch: 512
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 145] [/input-16, 247] [/input-16, 180] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 145] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2249993085861206
10 lb beta sum: 0.019449910148978233, worst -0.22497761249542236
Time: prepare 0.0158    bound 0.2248    transfer 0.0048    finalize 0.0157    func 0.2677    
Accumulated time: func 2.8643    prepare 0.1040    bound 2.6335    transfer 0.0240    finalize 0.0830    
all_split False
======================Cut inference begins======================
max lb tensor(0.04943740) min lb tensor(-0.22497225)
Number of Verified Splits: 120 of 1024
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 58.
#cuts 1-3: 6
#cuts 4-6: 43
#cuts 7-9: 9
#cuts >= 20: 0
BICCOS time: 0.05478215217590332 
BICCOS Cumulative time: 1.0608470439910889
Preprocessing time: 0.0303347110748291 Inference time: 0.016046762466430664 Add cuts time: 0.005940914154052734 Cut analysis time: 0.0024597644805908203
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22497 (11), -0.22390 (11), -0.22106 (11), -0.21950 (11), -0.21947 (11), -0.21941 (11), -0.21696 (12), -0.21610 (11), -0.21557 (12), -0.21508 (11), -0.21435 (11), -0.21394 (11), -0.21340 (12), -0.21233 (11), -0.21229 (11), -0.21142 (12), -0.21119 (12), -0.21114 (11), -0.21090 (12), -0.21017 (11), 
Length of domains: 1055
Time: pickout 0.0027    decision 0.0488    set_bounds 0.0435    solve 0.2679    add 0.0319    
Accumulated time: pickout 0.0229    decision 1.1083    set_bounds 0.1904    solve 2.5906    add 0.5971    
Current (lb-rhs): -0.22497224807739258
2653 domains visited
current_vram/total_varm: 3.3GB/99.9GB, batch_size increase to 1024
Cumulative time: 5.891402721405029

BaB round 11
batch: 1024
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 180] [/input-16, 145] [/input-16, 180] [/input-16, 180] [/input-16, 180] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-12, 2353] [/input-16, 180] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2218356728553772
10 lb beta sum: 0.018786635249853134, worst -0.22183525562286377
Time: prepare 0.0357    bound 0.3770    transfer 0.0086    finalize 0.0653    func 0.5008    
Accumulated time: func 3.3651    prepare 0.1400    bound 3.0106    transfer 0.0326    finalize 0.1482    
all_split False
======================Cut inference begins======================
max lb tensor(0.33405626) min lb tensor(-0.22182906)
Number of Verified Splits: 311 of 2048
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 83.
#cuts 1-3: 8
#cuts 4-6: 66
#cuts 7-9: 9
#cuts >= 20: 0
BICCOS time: 0.11983394622802734 
BICCOS Cumulative time: 1.1806809902191162
Preprocessing time: 0.06183958053588867 Inference time: 0.03910183906555176 Add cuts time: 0.013559341430664062 Cut analysis time: 0.0053331851959228516
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22183 (12), -0.22075 (12), -0.21778 (12), -0.21696 (12), -0.21639 (12), -0.21636 (12), -0.21614 (12), -0.21557 (12), -0.21300 (12), -0.21173 (12), -0.21142 (12), -0.21119 (12), -0.21110 (12), -0.21101 (13), -0.21091 (12), -0.20925 (12), -0.20898 (12), -0.20841 (13), -0.20810 (12), -0.20718 (12), 
Length of domains: 1768
Time: pickout 0.0047    decision 0.0876    set_bounds 0.2407    solve 0.5012    add 0.0401    
Accumulated time: pickout 0.0276    decision 1.1959    set_bounds 0.4312    solve 3.0918    add 0.6372    
Current (lb-rhs): -0.22182905673980713
4390 domains visited
current_vram/total_varm: 5.8GB/99.9GB, batch_size increase to 2048
Cumulative time: 6.893150568008423

BaB round 12
batch: 1768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 247] [/input-12, 2353] [/input-16, 247] [/input-12, 2353] [/input-16, 247] [/input-12, 2353] [/input-16, 247] [/input-12, 2353] [/input-16, 145] [/input-16, 180] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.21943128108978271
10 lb beta sum: 0.1804686337709427, worst -0.21942734718322754
Time: prepare 0.0694    bound 0.6045    transfer 0.0504    finalize 0.1171    func 1.0430    
Accumulated time: func 4.4080    prepare 0.2096    bound 3.6151    transfer 0.0830    finalize 0.2654    
all_split False
======================Cut inference begins======================
max lb tensor(0.51687187) min lb tensor(-0.21942520)
Number of Verified Splits: 711 of 3536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 108.
#cuts 1-3: 12
#cuts 4-6: 71
#cuts 7-9: 25
#cuts >= 20: 0
BICCOS time: 0.23585104942321777 
BICCOS Cumulative time: 1.416532039642334
Preprocessing time: 0.10917353630065918 Inference time: 0.09326863288879395 Add cuts time: 0.02896904945373535 Cut analysis time: 0.004439830780029297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21943 (13), -0.21835 (13), -0.21541 (13), -0.21455 (13), -0.21393 (13), -0.21370 (13), -0.21310 (13), -0.20933 (13), -0.20899 (13), -0.20876 (13), -0.20697 (13), -0.20615 (13), -0.20532 (13), -0.20412 (13), -0.20396 (14), -0.20387 (13), -0.20233 (14), -0.20220 (13), -0.20207 (13), -0.20202 (13), 
Length of domains: 2825
Time: pickout 0.0612    decision 0.1400    set_bounds 0.1268    solve 1.0436    add 0.0551    
Accumulated time: pickout 0.0888    decision 1.3360    set_bounds 0.5580    solve 4.1354    add 0.6924    
Current (lb-rhs): -0.21942520141601562
7215 domains visited
Cumulative time: 8.567930459976196

BaB round 13
batch: 2048
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4713] [/input-12, 4713] [/input-12, 4713] [/input-12, 4713] [/input-12, 1703] [/input-12, 5548] [/input-12, 7009] [/input-12, 7009] [/input-16, 235] [/input-16, 235] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20765507221221924
10 lb beta sum: 0.45635533332824707, worst -0.2076345682144165
Time: prepare 0.0846    bound 0.6855    transfer 0.0545    finalize 0.1338    func 0.9860    
Accumulated time: func 5.3941    prepare 0.2945    bound 4.3006    transfer 0.1375    finalize 0.3992    
all_split False
======================Cut inference begins======================
max lb tensor(0.62573099) min lb tensor(-0.20664644)
Number of Verified Splits: 1155 of 4096
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 16
#cuts 4-6: 9
#cuts >= 20: 0
BICCOS time: 0.4765033721923828 
BICCOS Cumulative time: 1.8930354118347168
Preprocessing time: 0.12948012351989746 Inference time: 0.31441712379455566 Add cuts time: 0.031702518463134766 Cut analysis time: 0.0009036064147949219
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21943 (13), -0.21835 (13), -0.21541 (13), -0.21393 (13), -0.21370 (13), -0.20933 (13), -0.20665 (14), -0.20584 (14), -0.20532 (13), -0.20521 (14), -0.20436 (14), -0.20412 (13), -0.20320 (14), -0.20257 (14), -0.20233 (14), -0.20207 (13), -0.20120 (14), -0.20079 (14), -0.20059 (13), -0.20053 (14), 
Length of domains: 3718
Time: pickout 0.0095    decision 0.1640    set_bounds 0.1750    solve 0.9874    add 0.0651    
Accumulated time: pickout 0.0983    decision 1.5000    set_bounds 0.7330    solve 5.1228    add 0.7574    
Current (lb-rhs): -0.21942520141601562
10156 domains visited
current_vram/total_varm: 14.1GB/99.9GB, batch_size increase to 4096
Cumulative time: 10.465827226638794

BaB round 14
batch: 3718
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1703] [/input-12, 5548] [/input-12, 4713] [/input-12, 5308] [/input-12, 4713] [/input-12, 5301] [/input-12, 5278] [/input-12, 4581] [/input-12, 7009] [/input-12, 1703] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.21241068840026855
10 lb beta sum: 1.4449760913848877, worst -0.20864272117614746
Time: prepare 0.1596    bound 1.1482    transfer 0.1057    finalize 0.4329    func 1.8962    
Accumulated time: func 7.2903    prepare 0.4543    bound 5.4488    transfer 0.2432    finalize 0.8321    
all_split False
======================Cut inference begins======================
max lb tensor(1.22204149) min lb tensor(-0.20863298)
Number of Verified Splits: 6144 of 7436
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 1.1485543251037598 
BICCOS Cumulative time: 3.0415897369384766
Preprocessing time: 0.236891508102417 Inference time: 0.8140237331390381 Add cuts time: 0.09714770317077637 Cut analysis time: 0.0004913806915283203
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20863 (14), -0.20778 (14), -0.20615 (14), -0.20536 (14), -0.20305 (14), -0.20143 (14), -0.20095 (14), -0.19805 (15), -0.19772 (15), -0.19770 (15), -0.19753 (15), -0.19691 (14), -0.19641 (15), -0.19634 (15), -0.19566 (14), -0.19527 (15), -0.19517 (15), -0.19422 (15), -0.19417 (15), -0.19396 (15), 
Length of domains: 1292
Time: pickout 0.1386    decision 0.2844    set_bounds 0.3268    solve 1.8981    add 0.1970    
Accumulated time: pickout 0.2368    decision 1.7844    set_bounds 1.0598    solve 7.0209    add 0.9544    
Current (lb-rhs): -0.20863297581672668
11448 domains visited
Cumulative time: 14.53518271446228

BaB round 15
batch: 1292
splitting decisions: 
split level 0: [/input-12, 1843] [/input-12, 1829] [/input-12, 1843] [/input-12, 5278] [/input-12, 2353] [/input-12, 5301] [/input-12, 5658] [/input-12, 3349] [/input-12, 3349] [/input-16, 247] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20720386505126953
10 lb beta sum: 0.2991633415222168, worst -0.02258118987083435
Time: prepare 0.0534    bound 0.3230    transfer 0.0171    finalize 0.0876    func 0.4980    
Accumulated time: func 7.7882    prepare 0.5080    bound 5.7718    transfer 0.2603    finalize 0.9198    
all_split False
======================Cut inference begins======================
max lb tensor(0.52400404) min lb tensor(0.00022277)
Number of Verified Splits: 2584 of 2584
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.0805366039276123 
BICCOS Cumulative time: 3.122126340866089
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0066    decision 0.1069    set_bounds 0.2783    solve 0.4988    add 0.0008    
Accumulated time: pickout 0.2435    decision 1.8913    set_bounds 1.3381    solve 7.5197    add 0.9552    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
11448 domains visited
Cumulative time: 15.522592067718506


Properties batch 6, size 1
Remaining timeout: 180.81073212623596
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 180.81060814857483
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 180.81057929992676
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 19.1895 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 150, vnnlib ID: 150 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-69.54271698, -69.16526794, -74.68163300, -75.76488495, -73.74086761,
         -76.35335541, -76.51389313, -73.86369324, -70.73500061, -69.58501434]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1496]; unstable size 1496; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 80, 1, 1496] with unstable size 79 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 35, 1, 1496] with unstable size 34 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1496] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [575]; unstable size 575; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 35, 1, 575] with unstable size 34 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 575] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [34]; unstable size 34; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 34] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.32674837,  3.00765514,  4.58201075,  2.19055986,  5.12620687,
          4.83072281,  2.13223124, -0.27648830, -0.50294250]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-69.54271698, -69.16526794, -74.68163300, -75.76488495, -73.74086761,
         -76.35335541, -76.51389313, -73.86369324, -70.73500061, -69.58501434]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-68.24781799, -68.55586243, -73.30901337, -74.63065338, -72.37744141,
          -75.22265625, -75.36460114, -72.53440094, -69.62193298, -68.72361755],
         [-68.24781799, -68.55586243, -73.30901337, -74.63065338, -72.37744141,
          -75.22265625, -75.36460114, -72.53440094, -69.62193298, -68.72361755]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.30804443,  1.06607056,  0.16775513]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0072 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0476 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 151, vnnlib ID: 151 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-37.79272079, -40.11343765, -34.00991440, -33.06227875, -33.85268784,
         -33.43616486, -36.05794144, -34.11811829, -39.83304214, -39.12002563]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1392]; unstable size 1392; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 511, 1, 1392] with unstable size 510 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 22, 1, 1392] with unstable size 21 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1392] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [510]; unstable size 510; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 22, 1, 510] with unstable size 21 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 510] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [21]; unstable size 21; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.30293059,  4.82427406, -0.24021077, -0.49529630, -0.34215406,
          1.61754608, -0.29799175,  4.85107899,  3.94875741]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-37.79272079, -40.11343765, -34.00991440, -33.06227875, -33.85268784,
         -33.43616486, -36.05794144, -34.11811829, -39.83304214, -39.12002563]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-37.79272461, -40.11343765, -34.00992203, -33.06228256, -33.85268784,
          -33.43616486, -36.05794525, -34.11812210, -39.83304977, -39.12003326],
         [-37.79272461, -40.11343765, -34.00992203, -33.06228256, -33.85268784,
          -33.43616486, -36.05794525, -34.11812210, -39.83304977, -39.12003326]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.57375717, -0.37388229,  0.41652298,  0.68195724]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.95714283, -0.79841268, -0.98888886,  ...,  1.94761932,
             2.01111126,  1.96349227],
           [-0.78253967, -0.67142856, -0.83015871,  ...,  1.96349227,
             1.93174624,  1.82063520],
           [-0.89365077, -0.89365077, -0.97301590,  ...,  1.97936535,
             2.01111126,  1.97936535],
           ...,
           [-1.05238092, -1.02063489, -1.02063489,  ..., -0.22698402,
             0.15396833, -0.49682540],
           [-1.16349196, -1.13174593, -1.06825387,  ...,  0.09047628,
            -0.71904761, -0.75079364],
           [-1.22698402, -1.22698402, -1.19523799,  ...,  1.21746063,
             0.01111121, -0.65555555]],

          [[-1.04669881, -0.91787434, -0.98228657,  ...,  1.64251232,
             1.69082153,  1.57810009],
           [-0.83735907, -0.78904986, -0.82125598,  ...,  1.65861547,
             1.61030626,  1.54589403],
           [-0.88566822, -0.88566822, -0.91787434,  ...,  1.83574903,
             1.85185218,  1.81964600],
           ...,
           [-1.48148143, -1.46537840, -1.46537840,  ..., -0.51529789,
            -0.01610294, -0.72463763],
           [-1.54589367, -1.52979064, -1.49758446,  ..., -0.08051517,
            -0.93397743, -0.96618354],
           [-1.59420288, -1.57809973, -1.56199670,  ...,  1.30434811,
            -0.09661824, -0.95008045]],

          [[-1.16791618, -1.18290865, -1.10794616,  ...,  1.32084000,
             1.35082495,  1.24587750],
           [-1.01799107, -1.06296861, -0.98800600,  ...,  1.32084000,
             1.29085493,  1.24587750],
           [-0.98800600, -0.98800600, -1.00299859,  ...,  1.56072009,
             1.54572761,  1.53073502],
           ...,
           [-1.52773619, -1.54272878, -1.54272878,  ..., -0.59820086,
            -0.02848560, -0.70314842],
           [-1.57271373, -1.54272878, -1.52773619,  ..., -0.07346311,
            -0.91304344, -0.98800600],
           [-1.57271373, -1.55772126, -1.55772126,  ...,  1.33583248,
            -0.02848560, -0.95802099]]],


         [[[-0.95714283, -0.79841268, -0.98888886,  ...,  1.94761932,
             2.01111126,  1.96349227],
           [-0.78253967, -0.67142856, -0.83015871,  ...,  1.96349227,
             1.93174624,  1.82063520],
           [-0.89365077, -0.89365077, -0.97301590,  ...,  1.97936535,
             2.01111126,  1.97936535],
           ...,
           [-1.05238092, -1.02063489, -1.02063489,  ..., -0.22698402,
             0.15396833, -0.49682540],
           [-1.16349196, -1.13174593, -1.06825387,  ...,  0.09047628,
            -0.71904761, -0.75079364],
           [-1.22698402, -1.22698402, -1.19523799,  ...,  1.21746063,
             0.01111121, -0.65555555]],

          [[-1.04669881, -0.91787434, -0.98228657,  ...,  1.64251232,
             1.69082153,  1.57810009],
           [-0.83735907, -0.78904986, -0.82125598,  ...,  1.65861547,
             1.61030626,  1.54589403],
           [-0.88566822, -0.88566822, -0.91787434,  ...,  1.83574903,
             1.85185218,  1.81964600],
           ...,
           [-1.48148143, -1.46537840, -1.46537840,  ..., -0.51529789,
            -0.01610294, -0.72463763],
           [-1.54589367, -1.52979064, -1.49758446,  ..., -0.08051517,
            -0.93397743, -0.96618354],
           [-1.59420288, -1.57809973, -1.56199670,  ...,  1.30434811,
            -0.09661824, -0.95008045]],

          [[-1.16791618, -1.18290865, -1.10794616,  ...,  1.32084000,
             1.35082495,  1.24587750],
           [-1.01799107, -1.06296861, -0.98800600,  ...,  1.32084000,
             1.29085493,  1.24587750],
           [-0.98800600, -0.98800600, -1.00299859,  ...,  1.56072009,
             1.54572761,  1.53073502],
           ...,
           [-1.52773619, -1.54272878, -1.54272878,  ..., -0.59820086,
            -0.02848560, -0.70314842],
           [-1.57271373, -1.54272878, -1.52773619,  ..., -0.07346311,
            -0.91304344, -0.98800600],
           [-1.57271373, -1.55772126, -1.55772126,  ...,  1.33583248,
            -0.02848560, -0.95802099]]],


         [[[-0.95714283, -0.79841268, -0.98888886,  ...,  1.94761932,
             2.01111126,  1.96349227],
           [-0.78253967, -0.67142856, -0.83015871,  ...,  1.96349227,
             1.93174624,  1.82063520],
           [-0.89365077, -0.89365077, -0.97301590,  ...,  1.97936535,
             2.01111126,  1.97936535],
           ...,
           [-1.05238092, -1.02063489, -1.02063489,  ..., -0.22698402,
             0.15396833, -0.49682540],
           [-1.16349196, -1.13174593, -1.06825387,  ...,  0.09047628,
            -0.71904761, -0.75079364],
           [-1.22698402, -1.22698402, -1.19523799,  ...,  1.21746063,
             0.01111121, -0.65555555]],

          [[-1.04669881, -0.91787434, -0.98228657,  ...,  1.64251232,
             1.69082153,  1.57810009],
           [-0.83735907, -0.78904986, -0.82125598,  ...,  1.65861547,
             1.61030626,  1.54589403],
           [-0.88566822, -0.88566822, -0.91787434,  ...,  1.83574903,
             1.85185218,  1.81964600],
           ...,
           [-1.48148143, -1.46537840, -1.46537840,  ..., -0.51529789,
            -0.01610294, -0.72463763],
           [-1.54589367, -1.52979064, -1.49758446,  ..., -0.08051517,
            -0.93397743, -0.96618354],
           [-1.59420288, -1.57809973, -1.56199670,  ...,  1.30434811,
            -0.09661824, -0.95008045]],

          [[-1.16791618, -1.18290865, -1.10794616,  ...,  1.32084000,
             1.35082495,  1.24587750],
           [-1.01799107, -1.06296861, -0.98800600,  ...,  1.32084000,
             1.29085493,  1.24587750],
           [-0.98800600, -0.98800600, -1.00299859,  ...,  1.56072009,
             1.54572761,  1.53073502],
           ...,
           [-1.52773619, -1.54272878, -1.54272878,  ..., -0.59820086,
            -0.02848560, -0.70314842],
           [-1.57271373, -1.54272878, -1.52773619,  ..., -0.07346311,
            -0.91304344, -0.98800600],
           [-1.57271373, -1.55772126, -1.55772126,  ...,  1.33583248,
            -0.02848560, -0.95802099]]],


         [[[-0.95714283, -0.79841268, -0.98888886,  ...,  1.94761932,
             2.01111126,  1.96349227],
           [-0.78253967, -0.67142856, -0.83015871,  ...,  1.96349227,
             1.93174624,  1.82063520],
           [-0.89365077, -0.89365077, -0.97301590,  ...,  1.97936535,
             2.01111126,  1.97936535],
           ...,
           [-1.05238092, -1.02063489, -1.02063489,  ..., -0.22698402,
             0.15396833, -0.49682540],
           [-1.16349196, -1.13174593, -1.06825387,  ...,  0.09047628,
            -0.71904761, -0.75079364],
           [-1.22698402, -1.22698402, -1.19523799,  ...,  1.21746063,
             0.01111121, -0.65555555]],

          [[-1.04669881, -0.91787434, -0.98228657,  ...,  1.64251232,
             1.69082153,  1.57810009],
           [-0.83735907, -0.78904986, -0.82125598,  ...,  1.65861547,
             1.61030626,  1.54589403],
           [-0.88566822, -0.88566822, -0.91787434,  ...,  1.83574903,
             1.85185218,  1.81964600],
           ...,
           [-1.48148143, -1.46537840, -1.46537840,  ..., -0.51529789,
            -0.01610294, -0.72463763],
           [-1.54589367, -1.52979064, -1.49758446,  ..., -0.08051517,
            -0.93397743, -0.96618354],
           [-1.59420288, -1.57809973, -1.56199670,  ...,  1.30434811,
            -0.09661824, -0.95008045]],

          [[-1.16791618, -1.18290865, -1.10794616,  ...,  1.32084000,
             1.35082495,  1.24587750],
           [-1.01799107, -1.06296861, -0.98800600,  ...,  1.32084000,
             1.29085493,  1.24587750],
           [-0.98800600, -0.98800600, -1.00299859,  ...,  1.56072009,
             1.54572761,  1.53073502],
           ...,
           [-1.52773619, -1.54272878, -1.54272878,  ..., -0.59820086,
            -0.02848560, -0.70314842],
           [-1.57271373, -1.54272878, -1.52773619,  ..., -0.07346311,
            -0.91304344, -0.98800600],
           [-1.57271373, -1.55772126, -1.55772126,  ...,  1.33583248,
            -0.02848560, -0.95802099]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0496 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 152, vnnlib ID: 152 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-52.39515305, -55.64991379, -49.70893860, -52.67049408, -50.71098328,
         -52.80456161, -51.03196335, -53.00100708, -55.23103333, -55.54550934]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1085]; unstable size 1085; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 76, 1, 1085] with unstable size 75 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 31, 1, 1085] with unstable size 30 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1085] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [520]; unstable size 520; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 31, 1, 520] with unstable size 30 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 520] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [30]; unstable size 30; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.42119718, 3.86422014, 1.93685305, 0.25271678, 2.05206776, 0.12050724,
         1.77808928, 3.74849415, 3.85003996]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0363 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 153, vnnlib ID: 153 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-84.64945221, -81.50909424, -86.47003174, -86.24376678, -86.82257080,
         -86.87024689, -87.49994659, -87.51092529, -82.83763123, -78.89424133]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1427]; unstable size 1427; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 85, 1, 1427] with unstable size 84 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 31, 1, 1427] with unstable size 30 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1427] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [515]; unstable size 515; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 31, 1, 515] with unstable size 30 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 515] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [30]; unstable size 30; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.89562511, 1.25892687, 5.50380087, 5.64184046, 5.73307562, 6.21446419,
         6.45775032, 6.19197845, 1.99986315]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0363 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 154, vnnlib ID: 154 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-63.60768127, -64.66286469, -58.92227554, -58.48085403, -59.13320541,
         -58.32246399, -59.21612549, -60.42456055, -61.74317932, -65.24517059]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1622]; unstable size 1622; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 501, 1, 1622] with unstable size 500 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 23, 1, 1622] with unstable size 22 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1622] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [500]; unstable size 500; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 23, 1, 500] with unstable size 22 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 500] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [22]; unstable size 22; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.06112576,  4.56827688, -0.01906538,  0.03293431,  0.07693577,
          0.15798569,  1.24524903,  1.73409581,  5.25257206]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-63.60768127, -64.66286469, -58.92227554, -58.48085403, -59.13320541,
         -58.32246399, -59.21612549, -60.42456055, -61.74317932, -65.24517059]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.25it/s]100%|██████████| 1/1 [00:00<00:00,  8.24it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-63.19888306, -64.32211304, -58.41200256, -58.26782608, -58.79447174,
          -58.11347961, -58.84647369, -60.16131210, -61.48814774, -64.93315125]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.29852295]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1240 seconds.
PGD attack failed
verified_status unknown
verified_success False

all verified at 3th iter
best_l after optimization: 17.41040802001953
alpha/beta optimization time: 0.05737471580505371
initial alpha-crown bounds: tensor([[4.09403849e+00, 4.61596155e+00, 1.57546997e-03, 3.78864408e-02,
         1.08016253e-01, 1.83325768e-01, 1.26834726e+00, 1.79763031e+00,
         5.30362654e+00]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 0 ; Worst class: (+ rhs) 0.001575469970703125
verified with init bound!
Result: safe-incomplete in 0.2197 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 155, vnnlib ID: 155 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-29.68953896, -31.58896255, -29.40201569, -29.03643799, -29.31468773,
         -29.08647728, -28.83526802, -30.31551170, -28.48217392, -30.25750160]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1187]; unstable size 1187; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 84, 1, 1187] with unstable size 83 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 44, 1, 1187] with unstable size 43 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1187] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [694]; unstable size 694; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 44, 1, 694] with unstable size 43 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 694] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [43]; unstable size 43; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 43] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.15151143, -0.26553202, -0.90587878, -0.86818689, -0.63448715,
         -0.88920999, -0.19143164, -2.68521857, -0.99400043]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-29.68953896, -31.58896255, -29.40201569, -29.03643799, -29.31468773,
         -29.08647728, -28.83526802, -30.31551170, -28.48217392, -30.25750160]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-29.68953896, -31.58896446, -29.40201187, -29.03643990, -29.31468773,
          -29.08647728, -28.83526611, -30.31551361, -28.48217583, -30.25750160],
         [-29.68953896, -31.58896446, -29.40201187, -29.03643990, -29.31468773,
          -29.08647728, -28.83526611, -30.31551361, -28.48217583, -30.25750160]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.85427284,  2.75369835,  0.56674576,  0.20117378,  0.47942162,
           0.25121117,  1.48024750, -0.35309029,  1.42223549]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.55079389,  1.82063520,  1.80476213,  ...,  0.63015878,
             0.53492069,  0.29682547],
           [ 1.47142887,  1.69365108,  1.67777801,  ...,  0.74126989,
             0.80476195,  0.48730165],
           [ 1.24920666,  1.40793681,  1.20158756,  ...,  0.63015878,
             0.51904768,  0.21746039],
           ...,
           [-1.13174593, -1.19523799, -1.48095226,  ...,  1.04285717,
             0.23333341, -0.08412688],
           [-1.30634916, -1.38571417, -1.54444432,  ...,  1.37619078,
             0.56666672,  0.18571436],
           [-0.97301590, -1.24285710, -1.49682534,  ...,  0.86825401,
             0.18571436, -0.09999990]],

          [[ 1.48148179,  1.61030626,  1.52979100,  ...,  0.41867965,
             0.17713377, -0.11272129],
           [ 1.52979100,  1.62640929,  1.61030626,  ...,  0.37037048,
             0.46698883,  0.25764906],
           [ 1.32045114,  1.38486338,  1.19162667,  ...,  0.40257660,
             0.32206130, -0.01610294],
           ...,
           [-1.03059578, -1.07890499, -1.35265696,  ...,  0.74074084,
             1.07890511,  0.99838978],
           [-1.12721407, -1.23993552, -1.43317223,  ...,  0.75684386,
             1.17552364,  1.15942061],
           [-0.82125598, -1.09500802, -1.38486302,  ...,  0.48309189,
             0.93397754,  0.83735919]],

          [[ 1.36581755,  1.57571256,  1.65067506,  ...,  0.78110963,
             0.55622208,  0.27136448],
           [ 1.66566753,  1.87556267,  1.89055514,  ...,  0.66116959,
             0.79610211,  0.63118458],
           [ 1.60569763,  1.80060017,  1.68066013,  ...,  0.76611710,
             0.69115460,  0.37631202],
           ...,
           [-0.62818587, -0.73313338, -1.06296861,  ...,  0.39130452,
             0.52623707,  0.51124454],
           [-0.56821585, -0.67316341, -0.98800600,  ...,  0.39130452,
             0.70614707,  0.70614707],
           [-0.25337315, -0.58320838, -0.94302845,  ...,  0.24137947,
             0.57121456,  0.48125952]]],


         [[[ 1.55079389,  1.82063520,  1.80476213,  ...,  0.63015878,
             0.53492069,  0.29682547],
           [ 1.47142887,  1.69365108,  1.67777801,  ...,  0.74126989,
             0.80476195,  0.48730165],
           [ 1.24920666,  1.40793681,  1.20158756,  ...,  0.63015878,
             0.51904768,  0.21746039],
           ...,
           [-1.13174593, -1.19523799, -1.48095226,  ...,  1.04285717,
             0.23333341, -0.08412688],
           [-1.30634916, -1.38571417, -1.54444432,  ...,  1.37619078,
             0.56666672,  0.18571436],
           [-0.97301590, -1.24285710, -1.49682534,  ...,  0.86825401,
             0.18571436, -0.09999990]],

          [[ 1.48148179,  1.61030626,  1.52979100,  ...,  0.41867965,
             0.17713377, -0.11272129],
           [ 1.52979100,  1.62640929,  1.61030626,  ...,  0.37037048,
             0.46698883,  0.25764906],
           [ 1.32045114,  1.38486338,  1.19162667,  ...,  0.40257660,
             0.32206130, -0.01610294],
           ...,
           [-1.03059578, -1.07890499, -1.35265696,  ...,  0.74074084,
             1.07890511,  0.99838978],
           [-1.12721407, -1.23993552, -1.43317223,  ...,  0.75684386,
             1.17552364,  1.15942061],
           [-0.82125598, -1.09500802, -1.38486302,  ...,  0.48309189,
             0.93397754,  0.83735919]],

          [[ 1.36581755,  1.57571256,  1.65067506,  ...,  0.78110963,
             0.55622208,  0.27136448],
           [ 1.66566753,  1.87556267,  1.89055514,  ...,  0.66116959,
             0.79610211,  0.63118458],
           [ 1.60569763,  1.80060017,  1.68066013,  ...,  0.76611710,
             0.69115460,  0.37631202],
           ...,
           [-0.62818587, -0.73313338, -1.06296861,  ...,  0.39130452,
             0.52623707,  0.51124454],
           [-0.56821585, -0.67316341, -0.98800600,  ...,  0.39130452,
             0.70614707,  0.70614707],
           [-0.25337315, -0.58320838, -0.94302845,  ...,  0.24137947,
             0.57121456,  0.48125952]]],


         [[[ 1.55079389,  1.82063520,  1.80476213,  ...,  0.63015878,
             0.53492069,  0.29682547],
           [ 1.47142887,  1.69365108,  1.67777801,  ...,  0.74126989,
             0.80476195,  0.48730165],
           [ 1.24920666,  1.40793681,  1.20158756,  ...,  0.63015878,
             0.51904768,  0.21746039],
           ...,
           [-1.13174593, -1.19523799, -1.48095226,  ...,  1.04285717,
             0.23333341, -0.08412688],
           [-1.30634916, -1.38571417, -1.54444432,  ...,  1.37619078,
             0.56666672,  0.18571436],
           [-0.97301590, -1.24285710, -1.49682534,  ...,  0.86825401,
             0.18571436, -0.09999990]],

          [[ 1.48148179,  1.61030626,  1.52979100,  ...,  0.41867965,
             0.17713377, -0.11272129],
           [ 1.52979100,  1.62640929,  1.61030626,  ...,  0.37037048,
             0.46698883,  0.25764906],
           [ 1.32045114,  1.38486338,  1.19162667,  ...,  0.40257660,
             0.32206130, -0.01610294],
           ...,
           [-1.03059578, -1.07890499, -1.35265696,  ...,  0.74074084,
             1.07890511,  0.99838978],
           [-1.12721407, -1.23993552, -1.43317223,  ...,  0.75684386,
             1.17552364,  1.15942061],
           [-0.82125598, -1.09500802, -1.38486302,  ...,  0.48309189,
             0.93397754,  0.83735919]],

          [[ 1.36581755,  1.57571256,  1.65067506,  ...,  0.78110963,
             0.55622208,  0.27136448],
           [ 1.66566753,  1.87556267,  1.89055514,  ...,  0.66116959,
             0.79610211,  0.63118458],
           [ 1.60569763,  1.80060017,  1.68066013,  ...,  0.76611710,
             0.69115460,  0.37631202],
           ...,
           [-0.62818587, -0.73313338, -1.06296861,  ...,  0.39130452,
             0.52623707,  0.51124454],
           [-0.56821585, -0.67316341, -0.98800600,  ...,  0.39130452,
             0.70614707,  0.70614707],
           [-0.25337315, -0.58320838, -0.94302845,  ...,  0.24137947,
             0.57121456,  0.48125952]]],


         ...,


         [[[ 1.55079389,  1.82063520,  1.80476213,  ...,  0.63015878,
             0.53492069,  0.29682547],
           [ 1.47142887,  1.69365108,  1.67777801,  ...,  0.74126989,
             0.80476195,  0.48730165],
           [ 1.24920666,  1.40793681,  1.20158756,  ...,  0.63015878,
             0.51904768,  0.21746039],
           ...,
           [-1.13174593, -1.19523799, -1.48095226,  ...,  1.04285717,
             0.23333341, -0.08412688],
           [-1.30634916, -1.38571417, -1.54444432,  ...,  1.37619078,
             0.56666672,  0.18571436],
           [-0.97301590, -1.24285710, -1.49682534,  ...,  0.86825401,
             0.18571436, -0.09999990]],

          [[ 1.48148179,  1.61030626,  1.52979100,  ...,  0.41867965,
             0.17713377, -0.11272129],
           [ 1.52979100,  1.62640929,  1.61030626,  ...,  0.37037048,
             0.46698883,  0.25764906],
           [ 1.32045114,  1.38486338,  1.19162667,  ...,  0.40257660,
             0.32206130, -0.01610294],
           ...,
           [-1.03059578, -1.07890499, -1.35265696,  ...,  0.74074084,
             1.07890511,  0.99838978],
           [-1.12721407, -1.23993552, -1.43317223,  ...,  0.75684386,
             1.17552364,  1.15942061],
           [-0.82125598, -1.09500802, -1.38486302,  ...,  0.48309189,
             0.93397754,  0.83735919]],

          [[ 1.36581755,  1.57571256,  1.65067506,  ...,  0.78110963,
             0.55622208,  0.27136448],
           [ 1.66566753,  1.87556267,  1.89055514,  ...,  0.66116959,
             0.79610211,  0.63118458],
           [ 1.60569763,  1.80060017,  1.68066013,  ...,  0.76611710,
             0.69115460,  0.37631202],
           ...,
           [-0.62818587, -0.73313338, -1.06296861,  ...,  0.39130452,
             0.52623707,  0.51124454],
           [-0.56821585, -0.67316341, -0.98800600,  ...,  0.39130452,
             0.70614707,  0.70614707],
           [-0.25337315, -0.58320838, -0.94302845,  ...,  0.24137947,
             0.57121456,  0.48125952]]],


         [[[ 1.55079389,  1.82063520,  1.80476213,  ...,  0.63015878,
             0.53492069,  0.29682547],
           [ 1.47142887,  1.69365108,  1.67777801,  ...,  0.74126989,
             0.80476195,  0.48730165],
           [ 1.24920666,  1.40793681,  1.20158756,  ...,  0.63015878,
             0.51904768,  0.21746039],
           ...,
           [-1.13174593, -1.19523799, -1.48095226,  ...,  1.04285717,
             0.23333341, -0.08412688],
           [-1.30634916, -1.38571417, -1.54444432,  ...,  1.37619078,
             0.56666672,  0.18571436],
           [-0.97301590, -1.24285710, -1.49682534,  ...,  0.86825401,
             0.18571436, -0.09999990]],

          [[ 1.48148179,  1.61030626,  1.52979100,  ...,  0.41867965,
             0.17713377, -0.11272129],
           [ 1.52979100,  1.62640929,  1.61030626,  ...,  0.37037048,
             0.46698883,  0.25764906],
           [ 1.32045114,  1.38486338,  1.19162667,  ...,  0.40257660,
             0.32206130, -0.01610294],
           ...,
           [-1.03059578, -1.07890499, -1.35265696,  ...,  0.74074084,
             1.07890511,  0.99838978],
           [-1.12721407, -1.23993552, -1.43317223,  ...,  0.75684386,
             1.17552364,  1.15942061],
           [-0.82125598, -1.09500802, -1.38486302,  ...,  0.48309189,
             0.93397754,  0.83735919]],

          [[ 1.36581755,  1.57571256,  1.65067506,  ...,  0.78110963,
             0.55622208,  0.27136448],
           [ 1.66566753,  1.87556267,  1.89055514,  ...,  0.66116959,
             0.79610211,  0.63118458],
           [ 1.60569763,  1.80060017,  1.68066013,  ...,  0.76611710,
             0.69115460,  0.37631202],
           ...,
           [-0.62818587, -0.73313338, -1.06296861,  ...,  0.39130452,
             0.52623707,  0.51124454],
           [-0.56821585, -0.67316341, -0.98800600,  ...,  0.39130452,
             0.70614707,  0.70614707],
           [-0.25337315, -0.58320838, -0.94302845,  ...,  0.24137947,
             0.57121456,  0.48125952]]],


         [[[ 1.55079389,  1.82063520,  1.80476213,  ...,  0.63015878,
             0.53492069,  0.29682547],
           [ 1.47142887,  1.69365108,  1.67777801,  ...,  0.74126989,
             0.80476195,  0.48730165],
           [ 1.24920666,  1.40793681,  1.20158756,  ...,  0.63015878,
             0.51904768,  0.21746039],
           ...,
           [-1.13174593, -1.19523799, -1.48095226,  ...,  1.04285717,
             0.23333341, -0.08412688],
           [-1.30634916, -1.38571417, -1.54444432,  ...,  1.37619078,
             0.56666672,  0.18571436],
           [-0.97301590, -1.24285710, -1.49682534,  ...,  0.86825401,
             0.18571436, -0.09999990]],

          [[ 1.48148179,  1.61030626,  1.52979100,  ...,  0.41867965,
             0.17713377, -0.11272129],
           [ 1.52979100,  1.62640929,  1.61030626,  ...,  0.37037048,
             0.46698883,  0.25764906],
           [ 1.32045114,  1.38486338,  1.19162667,  ...,  0.40257660,
             0.32206130, -0.01610294],
           ...,
           [-1.03059578, -1.07890499, -1.35265696,  ...,  0.74074084,
             1.07890511,  0.99838978],
           [-1.12721407, -1.23993552, -1.43317223,  ...,  0.75684386,
             1.17552364,  1.15942061],
           [-0.82125598, -1.09500802, -1.38486302,  ...,  0.48309189,
             0.93397754,  0.83735919]],

          [[ 1.36581755,  1.57571256,  1.65067506,  ...,  0.78110963,
             0.55622208,  0.27136448],
           [ 1.66566753,  1.87556267,  1.89055514,  ...,  0.66116959,
             0.79610211,  0.63118458],
           [ 1.60569763,  1.80060017,  1.68066013,  ...,  0.76611710,
             0.69115460,  0.37631202],
           ...,
           [-0.62818587, -0.73313338, -1.06296861,  ...,  0.39130452,
             0.52623707,  0.51124454],
           [-0.56821585, -0.67316341, -0.98800600,  ...,  0.39130452,
             0.70614707,  0.70614707],
           [-0.25337315, -0.58320838, -0.94302845,  ...,  0.24137947,
             0.57121456,  0.48125952]]]]], device='cuda:0') torch.Size([1, 9, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0556 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 156, vnnlib ID: 156 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-45.49640274, -46.64448547, -42.58974075, -41.51312637, -42.18791199,
         -41.86023712, -41.08627701, -43.62110901, -46.77105713, -46.34824371]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1606]; unstable size 1606; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 85, 1, 1606] with unstable size 84 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 36, 1, 1606] with unstable size 35 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1606] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [544]; unstable size 544; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 36, 1, 544] with unstable size 35 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 544] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [35]; unstable size 35; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 35] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.13659501,  2.29783368, -0.28390360, -0.48994496, -0.64815521,
         -1.80941069,  0.95732218,  2.77812767,  2.19928432]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-45.49640274, -46.64448547, -42.58974075, -41.51312637, -42.18791199,
         -41.86023712, -41.08627701, -43.62110901, -46.77105713, -46.34824371]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-45.49640274, -46.64448166, -42.58973312, -41.51311874, -42.18790817,
          -41.86022949, -41.08627319, -43.62110138, -46.77104950, -46.34824371],
         [-45.49640274, -46.64448166, -42.58973312, -41.51311874, -42.18790817,
          -41.86022949, -41.08627319, -43.62110138, -46.77104950, -46.34824371]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.72950363, -0.34711075,  0.32767868, -0.77395630]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]],


         [[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]],


         [[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]],


         [[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0482 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 157, vnnlib ID: 157 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-82.62195587, -79.80370331, -86.20520782, -84.62644958, -86.29305267,
         -85.43472290, -85.56758118, -85.64747620, -82.13439178, -77.06540680]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1049]; unstable size 1049; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 507, 1, 1049] with unstable size 506 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 29, 1, 1049] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1049] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [506]; unstable size 506; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 29, 1, 506] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 506] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [28]; unstable size 28; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.87783861, 1.52473962, 6.97788000, 5.76344299, 7.12103844, 6.53897953,
         6.40658665, 6.17452717, 3.57317781]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0368 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 158, vnnlib ID: 158 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-57.10393524, -56.04603577, -58.17266464, -56.51480484, -58.86039352,
         -56.43955612, -57.51439285, -57.26512146, -52.83997726, -58.20638275]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1249]; unstable size 1249; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 87, 1, 1249] with unstable size 86 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 29, 1, 1249] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1249] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [523]; unstable size 523; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 29, 1, 523] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 523] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [28]; unstable size 28; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.96650505, 1.94844234, 3.37295294, 1.71304226, 3.59084034, 1.58256435,
         2.59837270, 2.30111051, 3.85735202]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0353 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 159, vnnlib ID: 159 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-82.07356262, -84.30519104, -82.34183502, -81.44073486, -83.99942017,
         -82.12490845, -80.37767029, -84.70626831, -83.58144379, -83.61125183]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1388]; unstable size 1388; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 468, 1, 1388] with unstable size 467 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 22, 1, 1388] with unstable size 21 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1388] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [467]; unstable size 467; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 22, 1, 467] with unstable size 21 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 467] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [21]; unstable size 21; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.44480884, 1.94549465, 0.81584877, 0.38175052, 2.65540791, 0.97455597,
         2.96762919, 1.66789961, 1.63384628]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0373 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 160, vnnlib ID: 160 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-27.02918243, -30.31531906, -24.26703453, -26.26643753, -23.59679985,
         -26.64868736, -24.92833138, -26.43937111, -27.79600716, -29.74079704]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1766]; unstable size 1766; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 67, 1, 1766] with unstable size 66 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 44, 1, 1766] with unstable size 43 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1766] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [522]; unstable size 522; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 44, 1, 522] with unstable size 43 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 522] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [43]; unstable size 43; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 43] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.92546046, 4.68279362, 0.17167211, 1.78547525, 2.17985344, 0.21624970,
         1.98909402, 2.57607341, 3.93793440]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0435 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 161, vnnlib ID: 161 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-45.48446274, -48.69549561, -42.17406845, -41.00143433, -42.57068253,
         -40.02661896, -42.31731033, -43.44971466, -47.22499466, -48.26470184]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1111]; unstable size 1111; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 87, 1, 1111] with unstable size 86 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 28, 1, 1111] with unstable size 27 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1111] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [527]; unstable size 527; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 28, 1, 527] with unstable size 27 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 527] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [27]; unstable size 27; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.89918160, 6.56812572, 1.25506377, 0.80539417, 1.58510470, 1.27471519,
         2.27723169, 5.47512388, 6.62579536]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0364 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 162, vnnlib ID: 162 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-39.53765488, -43.59346390, -36.93199921, -39.58841705, -37.53623962,
         -40.00466537, -37.28419495, -41.20804596, -40.47594833, -43.63611603]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1333]; unstable size 1333; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 439, 1, 1333] with unstable size 438 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 34, 1, 1333] with unstable size 33 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1333] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [438]; unstable size 438; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 34, 1, 438] with unstable size 33 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 438] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [33]; unstable size 33; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.50807047,  4.86067629,  1.95929110,  0.05314922,  2.34829950,
         -0.34075421,  3.19023967,  2.03576708,  4.97915983]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-39.53765488, -43.59346390, -36.93199921, -39.58841705, -37.53623962,
         -40.00466537, -37.28419495, -41.20804596, -40.47594833, -43.63611603]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.26it/s]100%|██████████| 1/1 [00:00<00:00,  8.25it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-39.88981628, -43.83239365, -37.25995636, -39.76843643, -37.74359512,
          -40.20945358, -37.31643295, -41.41146851, -40.64791870, -43.82619476]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.05647659]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1239 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 21.077205657958984
alpha/beta optimization time: 1.4664928913116455
initial alpha-crown bounds: tensor([[ 1.55341411,  4.93935537,  2.00835037,  0.08113170,  2.38712263,
         -0.30133331,  3.25464606,  2.10336089,  5.05115747]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.30133330821990967
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.3713665008545
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.37132740020752
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.3713026046753
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.3712809085846
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.37126111984253
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.37124037742615
Verifying property 5 with 1 instances.
##### Instance 162 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.30133331]], device='cuda:0') need to verify.
Model prediction is: tensor([-39.53765488, -43.59346390, -36.93199921, -39.58841705, -37.53623962,
        -40.00466537, -37.28419495, -41.20804596, -40.47594833, -43.63611603],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.30133331]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1333
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 432
Node /39 input 0: size torch.Size([250]) unstable 32
-----------------
# of unstable neurons: 1797
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 9.870529174804688e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3013329803943634
10 lb beta sum: 0.0, worst -0.30133309960365295
Time: prepare 0.0002    bound 0.1256    transfer 0.0001    finalize 0.0002    func 0.1262    
Accumulated time: func 0.1262    prepare 0.0002    bound 0.1256    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 37] 
split level 1: [/input-16, 218] 
split level 2: [/input-16, 248] 
split level 3: [/input-16, 225] 
split level 4: [/input-16, 64] 
split level 5: [/input-16, 235] 
split level 6: [/input-16, 195] 
split level 7: [/input-16, 77] 
split level 8: [/input-16, 178] 
split level 9: [/input-16, 7] 
split level 10: [/input-16, 247] 
split level 11: [/input-12, 994] 
split level 12: [/input-12, 1835] 
split level 13: [/input-12, 1829] 
split level 14: [/input-12, 4881] 
split level 15: [/input-12, 5931] 
split level 16: [/input-16, 78] 
split level 17: [/input-12, 995] 
split level 18: [/input-12, 3349] 
split level 19: [/input-12, 7637] 
split level 20: [/input-12, 2545] 
split level 21: [/input-12, 2581] 
split level 22: [/input-12, 4204] 
split level 23: [/input-12, 4571] 
split level 24: [/input-12, 1699] 
split level 25: [/input-12, 3812] 
split level 26: [/input-12, 1173] 
split level 27: [/input-12, 2544] 
split level 28: [/input-12, 4203] 
split level 29: [/input-12, 4882] 
split level 30: [/input-12, 5932] 
split level 31: [/input-12, 4880] 
split level 32: [/input-16, 129] 
split level 33: [/input-12, 4578] 
split level 34: [/input-12, 7333] 
split level 35: [/input-12, 2532] 
split level 36: [/input-12, 5773] 
split level 37: [/input-12, 2579] 
split level 38: [/input-12, 4889] 
split level 39: [/input-12, 2538] 
split level 40: [/input-12, 7907] 
split level 41: [/input-12, 2580] 
split level 42: [/input-12, 4558] 
split level 43: [/input-12, 7645] 
split level 44: [/input-12, 1180] 
split level 45: [/input-12, 4874] 
split level 46: [/input-12, 5354] 
split level 47: [/input-12, 334] 
split level 48: [/input-12, 4557] 
split level 49: [/input-12, 2533] 
split level 50: [/input-12, 4873] 
split level 51: [/input-12, 884] 
split level 52: [/input-12, 2210] 
split level 53: [/input-4, 1462] 
split level 54: [/input-12, 6244] 
split level 55: [/input-4, 6588] 
split level 56: [/input-12, 1179] 
split level 57: [/input-12, 5346] 
split level 58: [/input-4, 3212] 
split level 59: [/input-12, 2214] 
split level 60: [/input-12, 7638] 
split level 61: [/input-12, 2238] 
split level 62: [/input-4, 6282] 
split level 63: [/input-12, 3930] 
split level 64: [/input-4, 2229] 
split level 65: [/input-12, 2218] 
split level 66: [/input-12, 6764] 
split level 67: [/input-4, 8053] 
split level 68: [/input-4, 3254] 
split level 69: [/input-12, 7629] 
split level 70: [/input-12, 2531] 
split level 71: [/input-12, 4757] 
split level 72: [/input-12, 5347] 
split level 73: [/input-4, 6508] 
split level 74: [/input-4, 7804] 
split level 75: [/input-4, 1476] 
split level 76: [/input-12, 1772] 
split level 77: [/input-12, 5358] 
split level 78: [/input-12, 1057] 
split level 79: [/input-4, 4762] 
split level 80: [/input-12, 2007] 
split level 81: [/input-12, 2587] 
split level 82: [/input-12, 6797] 
split level 83: [/input-12, 2902] 
split level 84: [/input-12, 3953] 
split level 85: [/input-12, 3382] 
split level 86: [/input-12, 500] 
split level 87: [/input-4, 4746] 
split level 88: [/input-12, 2023] 
split level 89: [/input-12, 4888] 
split level 90: [/input-12, 5157] 
split level 91: [/input-12, 3945] 
split level 92: [/input-4, 3194] 
split level 93: [/input-12, 4430] 
split level 94: [/input-12, 4133] 
split level 95: [/input-12, 4901] 
split level 96: [/input-12, 1049] 
split level 97: [/input-4, 4747] 
split level 98: [/input-12, 1390] 
split level 99: [/input-4, 3207] 
split level 100: [/input-12, 2572] 
split level 101: [/input-4, 3753] 
split level 102: [/input-4, 2215] 
split level 103: [/input-4, 2199] 
split level 104: [/input-4, 7836] 
split level 105: [/input-4, 4248] 
split level 106: [/input-12, 5540] 
split level 107: [/input-12, 3429] 
split level 108: [/input-12, 2234] 
split level 109: [/input-12, 4394] 
split level 110: [/input-4, 3213] 
split level 111: [/input-12, 2188] 
split level 112: [/input-12, 3356] 
split level 113: [/input-4, 3191] 
split level 114: [/input-12, 1172] 
split level 115: [/input-4, 4761] 
split level 116: [/input-12, 3164] 
split level 117: [/input-4, 2998] 
split level 118: [/input-4, 4441] 
split level 119: [/input-12, 6819] 
split level 120: [/input-4, 6780] 
split level 121: [/input-4, 3255] 
split level 122: [/input-12, 1033] 
split level 123: [/input-4, 6503] 
split level 124: [/input-4, 4805] 
split level 125: [/input-4, 6764] 
split level 126: [/input-4, 3209] 
split level 127: [/input-4, 3193] 
split level 128: [/input-12, 4580] 
split level 129: [/input-12, 1061] 
split level 130: [/input-4, 2677] 
split level 131: [/input-4, 4791] 
split level 132: [/input-4, 2701] 
split level 133: [/input-12, 2894] 
split level 134: [/input-12, 1449] 
split level 135: [/input-4, 4790] 
split level 136: [/input-4, 1182] 
split level 137: [/input-4, 3208] 
split level 138: [/input-4, 3284] 
split level 139: [/input-4, 7788] 
split level 140: [/input-4, 4763] 
split level 141: [/input-12, 4577] 
split level 142: [/input-4, 4774] 
split level 143: [/input-12, 5325] 
split level 144: [/input-12, 7646] 
split level 145: [/input-4, 3221] 
split level 146: [/input-4, 2686] 
split level 147: [/input-12, 1563] 
split level 148: [/input-12, 3908] 
split level 149: [/input-4, 2970] 
split level 150: [/input-4, 4478] 
split level 151: [/input-4, 3228] 
split level 152: [/input-4, 1123] 
split level 153: [/input-4, 7821] 
split level 154: [/input-4, 2954] 
split level 155: [/input-12, 1041] 
split level 156: [/input-4, 1171] 
split level 157: [/input-4, 4445] 
split level 158: [/input-4, 6325] 
split level 159: [/input-4, 4556] 
split level 160: [/input-4, 1447] 
split level 161: [/input-4, 2670] 
split level 162: [/input-4, 6341] 
split level 163: [/input-4, 2919] 
split level 164: [/input-4, 2951] 
split level 165: [/input-4, 1139] 
split level 166: [/input-4, 7757] 
split level 167: [/input-12, 1025] 
split level 168: [/input-4, 4743] 
split level 169: [/input-4, 1156] 
split level 170: [/input-4, 6250] 
split level 171: [/input-4, 2648] 
split level 172: [/input-12, 7180] 
split level 173: [/input-4, 83] 
split level 174: [/input-4, 4455] 
split level 175: [/input-12, 3302] 
split level 176: [/input-4, 1639] 
split level 177: [/input-4, 7806] 
split level 178: [/input-12, 3156] 
split level 179: [/input-4, 2652] 
split level 180: [/input-4, 4759] 
split level 181: [/input-4, 3737] 
split level 182: [/input-12, 1392] 
split level 183: [/input-4, 2647] 
split level 184: [/input-4, 7783] 
split level 185: [/input-12, 2010] 
split level 186: [/input-4, 1198] 
split level 187: [/input-4, 2966] 
split level 188: [/input-12, 8005] 
split level 189: [/input-4, 3514] 
split level 190: [/input-4, 7850] 
split level 191: [/input-12, 727] 
split level 192: [/input-4, 5010] 
split level 193: [/input-4, 1738] 
split level 194: [/input-4, 7005] 
split level 195: [/input-12, 892] 
split level 196: [/input-4, 6291] 
split level 197: [/input-4, 6970] 
split level 198: [/input-4, 5544] 
split level 199: [/input-4, 4263] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3011992871761322
10 lb beta sum: 0.0, worst -0.3011987805366516
Time: prepare 0.0117    bound 0.1320    transfer 0.0030    finalize 0.0095    func 0.1588    
Accumulated time: func 0.2850    prepare 0.0219    bound 0.2576    transfer 0.0031    finalize 0.0097    
all_split False
======================Cut inference begins======================
max lb tensor(-0.07422304) min lb tensor(-0.30119723)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.009967327117919922 
BICCOS Cumulative time: 0.009967327117919922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.29499 (1), -0.29476 (1), -0.29474 (1), -0.29474 (1), -0.29449 (1), -0.29442 (1), -0.29440 (1), -0.29403 (1), -0.29397 (1), -0.29392 (1), -0.29369 (1), -0.29317 (1), -0.29306 (1), -0.29303 (1), -0.29290 (1), -0.29271 (1), -0.29249 (1), -0.29218 (1), -0.29179 (1), -0.29174 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7858    set_bounds 0.0103    solve 0.1589    add 0.0755    
Accumulated time: pickout 0.0003    decision 0.7858    set_bounds 0.0103    solve 0.1589    add 0.0755    
Current (lb-rhs): -0.29498741030693054
50 domains visited
Cumulative time: 1.1741275787353516

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 218] [/input-16, 218] [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 37] 
split level 1: [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 225] [/input-16, 225] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] 
split level 2: [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 195] [/input-16, 195] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 195] [/input-16, 225] 
split level 3: [/input-16, 195] [/input-12, 3356] [/input-16, 195] [/input-16, 77] [/input-16, 77] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 77] [/input-16, 195] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2871173024177551
10 lb beta sum: 0.0, worst -0.2871069014072418
Time: prepare 0.0126    bound 0.1381    transfer 0.0019    finalize 0.0054    func 0.1605    
Accumulated time: func 0.4455    prepare 0.0348    bound 0.3957    transfer 0.0050    finalize 0.0151    
all_split False
======================Cut inference begins======================
max lb tensor(0.14741528) min lb tensor(-0.28710502)
Number of Verified Splits: 8 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.012796163558959961 
BICCOS Cumulative time: 0.022763490676879883
Preprocessing time: 0.011976003646850586 Inference time: 0.00038695335388183594 Add cuts time: 0.00017881393432617188 Cut analysis time: 0.0002543926239013672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18829 (2), -0.18829 (2), -0.18812 (2), -0.18810 (2), -0.18801 (2), -0.18725 (2), -0.18690 (2), -0.18635 (2), -0.18588 (2), -0.18571 (2), -0.18543 (2), -0.18533 (2), -0.18484 (2), -0.18482 (2), -0.18368 (2), -0.18335 (2), -0.18305 (2), -0.18196 (2), -0.18176 (2), -0.18119 (2), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0252    set_bounds 0.0128    solve 0.1606    add 0.0953    
Accumulated time: pickout 0.0010    decision 0.8110    set_bounds 0.0231    solve 0.3195    add 0.1708    
Current (lb-rhs): -0.1882931888103485
100 domains visited
Cumulative time: 1.481743574142456

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 218] [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] 
split level 1: [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] 
split level 2: [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 225] [/input-16, 225] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] 
split level 3: [/input-16, 77] [/input-16, 77] [/input-16, 77] [/input-16, 77] [/input-16, 77] [/input-16, 77] [/input-16, 77] [/input-16, 77] [/input-16, 178] [/input-16, 178] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1843814253807068
10 lb beta sum: 0.5807359218597412, worst -0.18315288424491882
Time: prepare 0.0066    bound 0.1540    transfer 0.0016    finalize 0.0051    func 0.1704    
Accumulated time: func 0.6159    prepare 0.0416    bound 0.5497    transfer 0.0066    finalize 0.0202    
all_split False
======================Cut inference begins======================
max lb tensor(0.42420387) min lb tensor(-0.17977180)
Number of Verified Splits: 48 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.015680551528930664 
BICCOS Cumulative time: 0.03844404220581055
Preprocessing time: 0.011838436126708984 Inference time: 0.0022590160369873047 Add cuts time: 0.00084686279296875 Cut analysis time: 0.000736236572265625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11567 (3), -0.11565 (3), -0.11543 (3), -0.11541 (3), -0.11539 (3), -0.11521 (3), -0.11486 (3), -0.11484 (3), -0.11467 (3), -0.11450 (3), -0.11409 (3), -0.11262 (3), -0.11233 (3), -0.11208 (3), -0.11203 (3), -0.11052 (3), -0.10888 (3), -0.10791 (3), -0.10754 (3), -0.10734 (3), 
Length of domains: 50
Time: pickout 0.0007    decision 0.0258    set_bounds 0.0156    solve 0.1704    add 0.0953    
Accumulated time: pickout 0.0017    decision 0.8368    set_bounds 0.0387    solve 0.4899    add 0.2662    
Current (lb-rhs): -0.11567415297031403
150 domains visited
Cumulative time: 1.8055710792541504

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 218] [/input-16, 225] 
split level 1: [/input-16, 225] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 225] [/input-16, 225] [/input-16, 195] 
split level 2: [/input-16, 195] [/input-16, 77] [/input-16, 77] [/input-16, 178] [/input-16, 178] [/input-16, 178] [/input-16, 178] [/input-16, 195] [/input-16, 195] [/input-16, 77] 
split level 3: [/input-12, 4204] [/input-16, 178] [/input-12, 1179] [/input-12, 7907] [/input-12, 4571] [/input-12, 7907] [/input-12, 4571] [/input-12, 4204] [/input-12, 3356] [/input-16, 178] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11640191078186035
10 lb beta sum: 0.5904431939125061, worst -0.12453246116638184
Time: prepare 0.0066    bound 0.1567    transfer 0.0016    finalize 0.0053    func 0.1728    
Accumulated time: func 0.7887    prepare 0.0484    bound 0.7063    transfer 0.0082    finalize 0.0255    
all_split False
======================Cut inference begins======================
max lb tensor(0.01346433) min lb tensor(-0.11178559)
Number of Verified Splits: 8 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 5.
#cuts 1-3: 3
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.013169527053833008 
BICCOS Cumulative time: 0.051613569259643555
Preprocessing time: 0.011769294738769531 Inference time: 0.0004782676696777344 Add cuts time: 0.00014328956604003906 Cut analysis time: 0.0007786750793457031
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04568 (4), -0.04392 (4), -0.04369 (4), -0.04365 (4), -0.04355 (4), -0.04264 (4), -0.04117 (4), -0.03891 (4), -0.03841 (4), -0.03789 (4), -0.03684 (4), -0.03609 (4), -0.03540 (4), -0.03414 (4), -0.03303 (4), -0.03273 (4), -0.03172 (4), -0.03056 (4), -0.03015 (4), -0.02989 (4), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0252    set_bounds 0.0152    solve 0.1729    add 0.0957    
Accumulated time: pickout 0.0023    decision 0.8621    set_bounds 0.0539    solve 0.6629    add 0.3619    
Current (lb-rhs): -0.045683860778808594
200 domains visited
Cumulative time: 2.1286745071411133

Shallow-BaB round 5
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 218] [/input-16, 225] [/input-16, 225] [/input-16, 218] [/input-16, 218] [/input-16, 225] [/input-16, 225] [/input-16, 218] [/input-16, 218] [/input-16, 218] 
split level 1: [/input-16, 225] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] 
split level 2: [/input-16, 195] [/input-12, 4204] [/input-12, 4204] [/input-12, 4204] [/input-16, 77] [/input-12, 4204] [/input-12, 3812] [/input-12, 7907] [/input-12, 4204] [/input-12, 7907] 
split level 3: [/input-12, 7907] [/input-12, 3812] [/input-12, 3812] [/input-12, 7907] [/input-12, 1179] [/input-12, 3812] [/input-12, 4204] [/input-12, 1179] [/input-12, 7907] [/input-12, 1179] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.046553969383239746
10 lb beta sum: 0.6528568863868713, worst -0.05589193105697632
Time: prepare 0.0070    bound 0.1615    transfer 0.0016    finalize 0.0054    func 0.1781    
Accumulated time: func 0.9669    prepare 0.0557    bound 0.8679    transfer 0.0098    finalize 0.0309    
all_split False
======================Cut inference begins======================
max lb tensor(0.04912649) min lb tensor(-0.03731549)
Number of Verified Splits: 121 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 3
#cuts 4-6: 12
#cuts >= 20: 0
BICCOS time: 0.02382516860961914 
BICCOS Cumulative time: 0.0754387378692627
Preprocessing time: 0.013003826141357422 Inference time: 0.007768154144287109 Add cuts time: 0.002365589141845703 Cut analysis time: 0.0006875991821289062
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01513 (5), -0.01508 (5), -0.01491 (5), -0.01483 (5), -0.01460 (5), -0.01455 (5), -0.01455 (5), -0.01453 (5), -0.01426 (5), -0.01413 (5), -0.01405 (5), -0.01390 (5), -0.01348 (5), -0.01311 (5), -0.01307 (5), -0.01294 (5), -0.01291 (5), -0.01265 (5), -0.01238 (5), -0.01208 (5), 
Length of domains: 50
Time: pickout 0.0007    decision 0.0254    set_bounds 0.1840    solve 0.1782    add 0.1175    
Accumulated time: pickout 0.0030    decision 0.8874    set_bounds 0.2379    solve 0.8411    add 0.4793    
Current (lb-rhs): -0.015130192041397095
250 domains visited
Cumulative time: 2.6585774421691895

Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([  7,  37, 218, 225]), tensor([-1., -1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([0.00039655, 0.08611369, 0.02615978, 0.01193972]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([  7,  37, 218, 225]), tensor([-1., -1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([0.00039655, 0.08611369, 0.02615978, 0.04284452]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([  7,  37, 218,  77]), tensor([-1., -1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([0.00039655, 0.08611369, 0.04380004, 0.00705503]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([  7,  37, 218,  77, 225]), tensor([-1., -1.,  1.,  1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([0.00039655, 0.08611369, 0.04380004, 0.07614164, 0.01459177]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([  7,  37, 218,  77, 225]), tensor([-1., -1.,  1.,  1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([0.00039655, 0.08611369, 0.04380004, 0.07614164, 0.04126368]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([  7,  37,  77, 218]), tensor([-1.,  1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([0.00039655, 0.10435170, 0.01002449, 0.02435759]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([  7,  37,  77, 218]), tensor([-1.,  1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([0.00039655, 0.10435170, 0.01002449, 0.03515813]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([  7,  37,  77, 195, 218]), tensor([-1.,  1.,  1., -1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([0.00039655, 0.10435170, 0.07350348, 0.01431497, 0.01978959]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([  7,  37,  77, 195, 218]), tensor([-1.,  1.,  1., -1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([0.00039655, 0.10435170, 0.07350348, 0.01431497, 0.04973637]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([  7,  37,  77, 195, 218]), tensor([-1.,  1.,  1.,  1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([0.00039655, 0.10435170, 0.07350348, 0.01290636, 0.01958360]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([  7,  37,  77, 195, 218]), tensor([-1.,  1.,  1.,  1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([0.00039655, 0.10435170, 0.07350348, 0.01290636, 0.04313435]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([7]), tensor([1.]), tensor([0]), tensor([0.06072003]), tensor([0]))}
Shallow branching resets to n domains:  12
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2988016605377197
10 lb beta sum: 0.6439277529716492, worst -0.29460883140563965
Time: prepare 0.0005    bound 0.1668    transfer 0.0003    finalize 0.0004    func 0.1682    
Accumulated time: func 1.1350    prepare 0.0562    bound 1.0347    transfer 0.0101    finalize 0.0313    
After pruning, left:  9

Back to Regular BaB

BaB round 1
batch: 9
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 195] [/input-16, 195] [/input-16, 225] [/input-16, 195] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 37] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6720916032791138, worst -0.21552342176437378
10 lb beta sum: 0.6715282201766968, worst -0.2148137092590332
Time: prepare 0.0010    bound 0.1652    transfer 0.0002    finalize 0.0007    func 0.1672    
Accumulated time: func 1.3023    prepare 0.0574    bound 1.1999    transfer 0.0104    finalize 0.0320    
all_split False
======================Cut inference begins======================
max lb tensor(0.00918731) min lb tensor(-0.21461159)
Number of Verified Splits: 4 of 18
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.6814749836921692, worst -0.16565686464309692
10 lb beta sum: 1.0807112455368042, worst -0.05008333921432495
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 3
#cuts 4-6: 12
#cuts >= 20: 0
BICCOS time: 0.17401957511901855 
BICCOS Cumulative time: 0.24945831298828125
Preprocessing time: 0.0007998943328857422 Inference time: 0.17192339897155762 Add cuts time: 0.0006411075592041016 Cut analysis time: 0.0006551742553710938
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21461 (1), -0.19143 (1), -0.09070 (1), -0.09039 (1), -0.08137 (1), -0.07800 (1), -0.06777 (1), -0.05904 (1), -0.05843 (1), -0.05387 (1), -0.03796 (1), -0.02968 (1), -0.00373 (1), -0.00369 (1), 
Length of domains: 14
Time: pickout 0.0005    decision 0.0137    set_bounds 0.0010    solve 0.1673    add 0.0013    
Accumulated time: pickout 0.0034    decision 0.9011    set_bounds 0.2389    solve 1.0084    add 0.4806    
Current (lb-rhs): -0.21461158990859985
264 domains visited
Cumulative time: 3.2155556678771973

BaB round 2
batch: 14
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 77] [/input-16, 77] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 218] [/input-16, 77] [/input-16, 77] [/input-16, 195] [/input-16, 195] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6699829697608948, worst -0.19013118743896484
10 lb beta sum: 0.6836233735084534, worst -0.18995404243469238
Time: prepare 0.0014    bound 0.1693    transfer 0.0004    finalize 0.0007    func 0.1720    
Accumulated time: func 1.4743    prepare 0.0589    bound 1.3692    transfer 0.0107    finalize 0.0327    
all_split False
======================Cut inference begins======================
max lb tensor(0.01126620) min lb tensor(-0.18986857)
Number of Verified Splits: 5 of 28
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.6389521956443787, worst -0.1728585958480835
10 lb beta sum: 0.7218092083930969, worst -0.05413934588432312
Total number of valid cuts: 15.
#cuts 1-3: 3
#cuts 4-6: 12
#cuts >= 20: 0
BICCOS time: 0.1708674430847168 
BICCOS Cumulative time: 0.42032575607299805
Preprocessing time: 0.0011394023895263672 Inference time: 0.1693422794342041 Add cuts time: 0.0003688335418701172 Cut analysis time: 1.6927719116210938e-05
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18987 (2), -0.18595 (2), -0.16503 (2), -0.16331 (2), -0.08450 (2), -0.08421 (2), -0.06824 (2), -0.06600 (2), -0.06517 (2), -0.06447 (2), -0.05534 (2), -0.05384 (2), -0.05326 (2), -0.05265 (2), -0.03907 (2), -0.03714 (2), -0.03704 (2), -0.03263 (2), -0.02317 (2), -0.02252 (2), 
Length of domains: 23
Time: pickout 0.0007    decision 0.0139    set_bounds 0.0015    solve 0.1721    add 0.0016    
Accumulated time: pickout 0.0041    decision 0.9150    set_bounds 0.2404    solve 1.1804    add 0.4822    
Current (lb-rhs): -0.18986856937408447
287 domains visited
Cumulative time: 3.5764756202697754

BaB round 3
batch: 23
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 178] [/input-16, 178] [/input-16, 178] [/input-16, 178] [/input-16, 225] [/input-16, 178] [/input-12, 3812] [/input-16, 178] [/input-16, 178] [/input-12, 4204] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6768500804901123, worst -0.18036633729934692
10 lb beta sum: 0.6772640943527222, worst -0.18026036024093628
Time: prepare 0.0022    bound 0.1688    transfer 0.0008    finalize 0.0010    func 0.1732    
Accumulated time: func 1.6475    prepare 0.0613    bound 1.5380    transfer 0.0115    finalize 0.0337    
all_split False
======================Cut inference begins======================
max lb tensor(0.03633401) min lb tensor(-0.18020838)
Number of Verified Splits: 11 of 46
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.6710720658302307, worst -0.1627749502658844
10 lb beta sum: 0.6776590943336487, worst -0.03830355405807495
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 3
#cuts 4-6: 14
#cuts >= 20: 0
BICCOS time: 0.1765744686126709 
BICCOS Cumulative time: 0.596900224685669
Preprocessing time: 0.0016303062438964844 Inference time: 0.17337989807128906 Add cuts time: 0.0008087158203125 Cut analysis time: 0.0007555484771728516
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18021 (3), -0.17619 (3), -0.15546 (3), -0.15345 (3), -0.14877 (3), -0.14735 (3), -0.11425 (3), -0.11340 (3), -0.07958 (3), -0.07907 (3), -0.06151 (3), -0.06029 (3), -0.05960 (3), -0.05944 (3), -0.05871 (3), -0.05658 (3), -0.04964 (3), -0.04801 (3), -0.04771 (3), -0.04695 (3), 
Length of domains: 35
Time: pickout 0.0005    decision 0.0144    set_bounds 0.0026    solve 0.1732    add 0.0016    
Accumulated time: pickout 0.0046    decision 0.9294    set_bounds 0.2430    solve 1.3536    add 0.4839    
Current (lb-rhs): -0.18020838499069214
322 domains visited
Cumulative time: 3.945675849914551

BaB round 4
batch: 35
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4204] [/input-12, 4571] [/input-12, 4571] [/input-12, 4571] [/input-16, 195] [/input-12, 4204] [/input-16, 178] [/input-12, 4889] [/input-12, 4889] [/input-16, 195] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1725737601518631
10 lb beta sum: 0.5750500559806824, worst -0.16828933358192444
Time: prepare 0.0016    bound 0.1690    transfer 0.0005    finalize 0.0012    func 0.1728    
Accumulated time: func 1.8203    prepare 0.0631    bound 1.7071    transfer 0.0120    finalize 0.0349    
all_split False
======================Cut inference begins======================
max lb tensor(0.01488960) min lb tensor(-0.16824925)
Number of Verified Splits: 7 of 70
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1613333523273468
10 lb beta sum: 0.5944629907608032, worst -0.04679518938064575
Total number of valid cuts: 17.
#cuts 1-3: 3
#cuts 4-6: 14
#cuts >= 20: 0
BICCOS time: 0.17482995986938477 
BICCOS Cumulative time: 0.7717301845550537
Preprocessing time: 0.0023500919342041016 Inference time: 0.17206120491027832 Add cuts time: 0.00039505958557128906 Cut analysis time: 2.3603439331054688e-05
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16825 (4), -0.16821 (4), -0.16448 (4), -0.16357 (4), -0.14346 (4), -0.14307 (4), -0.14121 (4), -0.14104 (4), -0.13637 (4), -0.13567 (4), -0.13460 (4), -0.13446 (4), -0.10132 (4), -0.10130 (4), -0.10079 (4), -0.10005 (4), -0.07369 (4), -0.07336 (4), -0.07293 (4), -0.07242 (4), 
Length of domains: 63
Time: pickout 0.0005    decision 0.0148    set_bounds 0.0025    solve 0.1728    add 0.0020    
Accumulated time: pickout 0.0051    decision 0.9442    set_bounds 0.2456    solve 1.5264    add 0.4859    
Current (lb-rhs): -0.168249249458313
385 domains visited
Cumulative time: 4.313516855239868

BaB round 5
batch: 63
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3812] [/input-12, 3812] [/input-12, 1772] [/input-12, 4204] [/input-16, 77] [/input-12, 3812] [/input-12, 4204] [/input-12, 4881] [/input-12, 4204] [/input-16, 77] 
cut re-enabled after branching node selection
0 lb beta sum: 0.696998655796051, worst -0.16341376304626465
10 lb beta sum: 0.7157898545265198, worst -0.16335338354110718
Time: prepare 0.0059    bound 0.1687    transfer 0.0011    finalize 0.0032    func 0.1798    
Accumulated time: func 2.0001    prepare 0.0692    bound 1.8757    transfer 0.0131    finalize 0.0381    
all_split False
======================Cut inference begins======================
max lb tensor(0.00763482) min lb tensor(-0.16334158)
Number of Verified Splits: 25 of 126
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.6948594450950623, worst -0.16527098417282104
10 lb beta sum: 0.6988313794136047, worst -0.04610857367515564
Total number of valid cuts: 17.
#cuts 1-3: 3
#cuts 4-6: 14
#cuts >= 20: 0
BICCOS time: 0.18824100494384766 
BICCOS Cumulative time: 0.9599711894989014
Preprocessing time: 0.003987312316894531 Inference time: 0.18381881713867188 Add cuts time: 0.000415802001953125 Cut analysis time: 1.9073486328125e-05
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16334 (5), -0.16321 (5), -0.15986 (5), -0.15883 (5), -0.13860 (5), -0.13826 (5), -0.13648 (5), -0.13621 (5), -0.13093 (5), -0.13041 (5), -0.12966 (5), -0.12942 (5), -0.12370 (5), -0.11966 (5), -0.10685 (5), -0.10491 (5), -0.09604 (5), -0.09590 (5), -0.09550 (5), -0.09489 (5), 
Length of domains: 101
Time: pickout 0.0006    decision 0.0164    set_bounds 0.0058    solve 0.1798    add 0.0025    
Accumulated time: pickout 0.0057    decision 0.9606    set_bounds 0.2513    solve 1.7063    add 0.4884    
Current (lb-rhs): -0.16334158182144165
486 domains visited
Cumulative time: 4.707154750823975

BaB round 6
batch: 101
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7907] [/input-12, 7907] [/input-12, 1179] [/input-16, 178] [/input-12, 7907] [/input-12, 1179] [/input-12, 4204] [/input-12, 3812] [/input-16, 178] [/input-12, 1699] 
cut re-enabled after branching node selection
0 lb beta sum: 0.724388062953949, worst -0.15956014394760132
10 lb beta sum: 0.7245983481407166, worst -0.1595284342765808
Time: prepare 0.0091    bound 0.1801    transfer 0.0015    finalize 0.0043    func 0.1963    
Accumulated time: func 2.1963    prepare 0.0784    bound 2.0559    transfer 0.0146    finalize 0.0424    
all_split False
======================Cut inference begins======================
max lb tensor(0.01771289) min lb tensor(-0.15952033)
Number of Verified Splits: 18 of 202
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.8443408012390137, worst -0.15984365344047546
10 lb beta sum: 0.8478036522865295, worst -0.048354655504226685
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 3
#cuts 4-6: 14
#cuts >= 20: 0
BICCOS time: 0.18540191650390625 
BICCOS Cumulative time: 1.1453731060028076
Preprocessing time: 0.006197214126586914 Inference time: 0.17768406867980957 Add cuts time: 0.0007181167602539062 Cut analysis time: 0.0008025169372558594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15952 (6), -0.15934 (6), -0.15601 (6), -0.15500 (6), -0.13465 (6), -0.13424 (6), -0.13247 (6), -0.13223 (6), -0.12661 (6), -0.12611 (6), -0.12536 (6), -0.12500 (6), -0.11946 (6), -0.11939 (6), -0.11786 (6), -0.11523 (6), -0.11345 (6), -0.11100 (6), -0.10210 (6), -0.10073 (6), 
Length of domains: 184
Time: pickout 0.0008    decision 0.0232    set_bounds 0.0091    solve 0.1963    add 0.0061    
Accumulated time: pickout 0.0065    decision 0.9838    set_bounds 0.2604    solve 1.9026    add 0.4944    
Current (lb-rhs): -0.15952032804489136
670 domains visited
Cumulative time: 5.128484725952148

BaB round 7
batch: 184
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1699] [/input-12, 4204] [/input-12, 4881] [/input-12, 1835] [/input-12, 1179] [/input-12, 4889] [/input-16, 78] [/input-16, 78] [/input-12, 3812] [/input-12, 1179] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7128795385360718, worst -0.1564180850982666
10 lb beta sum: 0.712917685508728, worst -0.15638726949691772
Time: prepare 0.0166    bound 0.1700    transfer 0.0023    finalize 0.0084    func 0.1996    
Accumulated time: func 2.3960    prepare 0.0952    bound 2.2259    transfer 0.0168    finalize 0.0507    
all_split False
======================Cut inference begins======================
max lb tensor(0.20484978) min lb tensor(-0.15638238)
Number of Verified Splits: 52 of 368
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 5
#cuts 4-6: 12
#cuts >= 20: 0
BICCOS time: 0.018135547637939453 
BICCOS Cumulative time: 1.163508653640747
Preprocessing time: 0.010768413543701172 Inference time: 0.004797220230102539 Add cuts time: 0.0018756389617919922 Cut analysis time: 0.00069427490234375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15638 (7), -0.15617 (7), -0.15323 (7), -0.15224 (7), -0.14957 (7), -0.14951 (7), -0.13463 (7), -0.13421 (7), -0.13244 (7), -0.13220 (7), -0.12273 (7), -0.12221 (7), -0.12141 (7), -0.12113 (7), -0.11860 (7), -0.11777 (7), -0.11752 (7), -0.11727 (7), -0.11691 (7), -0.11621 (7), 
Length of domains: 316
Time: pickout 0.0014    decision 0.0240    set_bounds 0.0149    solve 0.1997    add 0.0057    
Accumulated time: pickout 0.0079    decision 1.0078    set_bounds 0.2753    solve 2.1024    add 0.5001    
Current (lb-rhs): -0.15638238191604614
986 domains visited
Cumulative time: 5.393075227737427

BaB round 8
batch: 256
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1179] [/input-12, 4571] [/input-12, 1699] [/input-12, 4133] [/input-16, 247] [/input-12, 4881] [/input-12, 4571] [/input-12, 1173] [/input-12, 2587] [/input-12, 2587] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7191126942634583, worst -0.9410237073898315
10 lb beta sum: 0.7491434812545776, worst -0.15358799695968628
Time: prepare 0.0229    bound 0.1759    transfer 0.0023    finalize 0.0157    func 0.2202    
Accumulated time: func 2.6162    prepare 0.1182    bound 2.4018    transfer 0.0191    finalize 0.0664    
all_split False
======================Cut inference begins======================
max lb tensor(0.28181699) min lb tensor(-0.15358371)
Number of Verified Splits: 92 of 512
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 6
#cuts 4-6: 13
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.027271747589111328 
BICCOS Cumulative time: 1.1907804012298584
Preprocessing time: 0.01488637924194336 Inference time: 0.008896112442016602 Add cuts time: 0.002689838409423828 Cut analysis time: 0.0007994174957275391
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15358 (8), -0.15332 (8), -0.15323 (8), -0.15224 (8), -0.14643 (8), -0.14634 (8), -0.13185 (8), -0.13143 (8), -0.12967 (8), -0.12946 (8), -0.12197 (8), -0.12148 (8), -0.11864 (8), -0.11859 (8), -0.11841 (8), -0.11828 (8), -0.11802 (8), -0.11793 (8), -0.11627 (8), -0.11598 (8), 
Length of domains: 480
Time: pickout 0.0019    decision 0.0284    set_bounds 0.0218    solve 0.2204    add 0.0132    
Accumulated time: pickout 0.0098    decision 1.0362    set_bounds 0.2971    solve 2.3228    add 0.5133    
Current (lb-rhs): -0.15358370542526245
1406 domains visited
current_vram/total_varm: 2.3GB/99.9GB, batch_size increase to 512
Cumulative time: 5.707556962966919

BaB round 9
batch: 480
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2587] [/input-12, 1173] [/input-16, 247] [/input-16, 78] [/input-12, 7907] [/input-12, 6244] [/input-12, 1173] [/input-12, 4571] [/input-16, 247] [/input-16, 78] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15589718520641327
10 lb beta sum: 0.6002452969551086, worst -0.1535843163728714
Time: prepare 0.0190    bound 0.2276    transfer 0.0041    finalize 0.0197    func 0.2767    
Accumulated time: func 2.8929    prepare 0.1375    bound 2.6294    transfer 0.0233    finalize 0.0862    
all_split False
======================Cut inference begins======================
max lb tensor(0.28071025) min lb tensor(-0.15358281)
Number of Verified Splits: 216 of 960
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 6
#cuts 4-6: 29
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.05883312225341797 
BICCOS Cumulative time: 1.2496135234832764
Preprocessing time: 0.02906346321105957 Inference time: 0.022982358932495117 Add cuts time: 0.0053708553314208984 Cut analysis time: 0.0014164447784423828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15358 (9), -0.15332 (9), -0.15025 (9), -0.14926 (9), -0.14633 (9), -0.14623 (9), -0.14450 (9), -0.14353 (9), -0.13056 (9), -0.13018 (9), -0.12967 (9), -0.12946 (9), -0.12193 (9), -0.12183 (9), -0.12147 (9), -0.12112 (9), -0.11585 (9), -0.11564 (9), -0.11518 (9), -0.11505 (9), 
Length of domains: 744
Time: pickout 0.0188    decision 0.0541    set_bounds 0.0407    solve 0.2771    add 0.0187    
Accumulated time: pickout 0.0286    decision 1.0903    set_bounds 0.3378    solve 2.5998    add 0.5320    
Current (lb-rhs): -0.15358281135559082
2150 domains visited
Cumulative time: 6.17832350730896

BaB round 10
batch: 512
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1179] [/input-16, 78] [/input-16, 248] [/input-16, 247] [/input-12, 2580] [/input-12, 4557] [/input-12, 1699] [/input-12, 884] [/input-12, 4571] [/input-12, 1699] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1545403003692627
10 lb beta sum: 0.5719507336616516, worst -0.15358547866344452
Time: prepare 0.0202    bound 0.2274    transfer 0.0036    finalize 0.0193    func 0.2774    
Accumulated time: func 3.1703    prepare 0.1579    bound 2.8568    transfer 0.0269    finalize 0.1055    
all_split False
======================Cut inference begins======================
max lb tensor(0.30528533) min lb tensor(-0.15358277)
Number of Verified Splits: 250 of 1024
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 54.
#cuts 1-3: 6
#cuts 4-6: 46
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.06828165054321289 
BICCOS Cumulative time: 1.3178951740264893
Preprocessing time: 0.030655622482299805 Inference time: 0.02741718292236328 Add cuts time: 0.008162736892700195 Cut analysis time: 0.0020461082458496094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15358 (10), -0.15332 (10), -0.15025 (10), -0.14925 (10), -0.14628 (10), -0.14414 (10), -0.14316 (10), -0.14233 (10), -0.14036 (10), -0.13056 (10), -0.13018 (10), -0.12755 (10), -0.12728 (10), -0.12192 (10), -0.12183 (10), -0.11903 (10), -0.11891 (10), -0.11784 (10), -0.11736 (10), -0.11395 (9), 
Length of domains: 1006
Time: pickout 0.0026    decision 0.0489    set_bounds 0.0431    solve 0.2776    add 0.0132    
Accumulated time: pickout 0.0312    decision 1.1392    set_bounds 0.3809    solve 2.8774    add 0.5452    
Current (lb-rhs): -0.15358276665210724
2924 domains visited
current_vram/total_varm: 3.2GB/99.9GB, batch_size increase to 1024
Cumulative time: 6.636404514312744

BaB round 11
batch: 1006
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2587] [/input-12, 4889] [/input-16, 78] [/input-12, 1772] [/input-12, 2587] [/input-12, 1835] [/input-12, 6764] [/input-12, 1835] [/input-12, 4133] [/input-16, 247] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15076231956481934
10 lb beta sum: 0.5794413089752197, worst -0.14978429675102234
Time: prepare 0.0402    bound 0.3745    transfer 0.0176    finalize 0.0682    func 0.5149    
Accumulated time: func 3.6852    prepare 0.1984    bound 3.2313    transfer 0.0445    finalize 0.1737    
all_split False
======================Cut inference begins======================
max lb tensor(0.35037255) min lb tensor(-0.14978239)
Number of Verified Splits: 526 of 2012
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 34.
#cuts 1-3: 9
#cuts 4-6: 25
#cuts >= 20: 0
BICCOS time: 0.13963699340820312 
BICCOS Cumulative time: 1.4575321674346924
Preprocessing time: 0.06253409385681152 Inference time: 0.06258201599121094 Add cuts time: 0.013211965560913086 Cut analysis time: 0.0013089179992675781
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14978 (11), -0.14951 (11), -0.14730 (11), -0.14704 (11), -0.14653 (11), -0.14554 (11), -0.14244 (11), -0.14240 (11), -0.14230 (11), -0.14140 (11), -0.14029 (11), -0.14029 (11), -0.14016 (11), -0.13931 (11), -0.13659 (11), -0.13579 (11), -0.12836 (11), -0.12803 (11), -0.12641 (11), -0.12605 (11), 
Length of domains: 1486
Time: pickout 0.0302    decision 0.0897    set_bounds 0.2468    solve 0.5153    add 0.0314    
Accumulated time: pickout 0.0614    decision 1.2289    set_bounds 0.6276    solve 3.3927    add 0.5766    
Current (lb-rhs): -0.14978238940238953
4410 domains visited
Cumulative time: 7.6976587772369385

BaB round 12
batch: 1024
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4881] [/input-12, 1187] [/input-12, 2587] [/input-12, 7340] [/input-16, 78] [/input-12, 6764] [/input-12, 4571] [/input-12, 6244] [/input-12, 1699] [/input-16, 78] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14679837226867676
10 lb beta sum: 0.7381000518798828, worst -0.1452704817056656
Time: prepare 0.0415    bound 0.3741    transfer 0.0072    finalize 0.0674    func 0.5037    
Accumulated time: func 4.1890    prepare 0.2401    bound 3.6053    transfer 0.0517    finalize 0.2411    
all_split False
======================Cut inference begins======================
max lb tensor(0.66910970) min lb tensor(-0.14402318)
Number of Verified Splits: 658 of 2048
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 39.
#cuts 1-3: 14
#cuts 4-6: 20
#cuts 7-9: 5
#cuts >= 20: 0
BICCOS time: 0.15583562850952148 
BICCOS Cumulative time: 1.6133677959442139
Preprocessing time: 0.06372642517089844 Inference time: 0.07506918907165527 Add cuts time: 0.015551328659057617 Cut analysis time: 0.0014886856079101562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14402 (12), -0.14391 (12), -0.14367 (12), -0.14338 (12), -0.14305 (12), -0.14240 (11), -0.14124 (12), -0.14091 (12), -0.14040 (12), -0.14036 (12), -0.14029 (11), -0.13991 (12), -0.13939 (12), -0.13938 (12), -0.13931 (11), -0.13883 (12), -0.13782 (12), -0.13725 (12), -0.13714 (12), -0.13646 (12), 
Length of domains: 1852
Time: pickout 0.0041    decision 0.0875    set_bounds 0.0891    solve 0.5047    add 0.0297    
Accumulated time: pickout 0.0654    decision 1.3163    set_bounds 0.7167    solve 3.8974    add 0.6063    
Current (lb-rhs): -0.14402318000793457
5800 domains visited
current_vram/total_varm: 7.2GB/99.9GB, batch_size increase to 2048
Cumulative time: 8.579504013061523

BaB round 13
batch: 1852
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5540] [/input-12, 884] [/input-12, 4133] [/input-12, 1187] [/input-12, 1772] [/input-12, 4881] [/input-12, 6244] [/input-12, 4882] [/input-12, 6819] [/input-12, 4571] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14499029517173767
10 lb beta sum: 1.117755651473999, worst -0.14268779754638672
Time: prepare 0.0787    bound 0.6174    transfer 0.0536    finalize 0.1286    func 0.9040    
Accumulated time: func 5.0930    prepare 0.3190    bound 4.2228    transfer 0.1052    finalize 0.3697    
all_split False
======================Cut inference begins======================
max lb tensor(0.60200620) min lb tensor(-0.14119405)
Number of Verified Splits: 1052 of 3704
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 46.
#cuts 1-3: 16
#cuts 4-6: 25
#cuts 7-9: 5
#cuts >= 20: 0
BICCOS time: 0.2808988094329834 
BICCOS Cumulative time: 1.8942666053771973
Preprocessing time: 0.11626505851745605 Inference time: 0.13549494743347168 Add cuts time: 0.027289390563964844 Cut analysis time: 0.0018494129180908203
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14119 (13), -0.13962 (13), -0.13929 (13), -0.13911 (13), -0.13869 (13), -0.13715 (13), -0.13678 (13), -0.13606 (13), -0.13573 (13), -0.13499 (13), -0.13458 (13), -0.13433 (13), -0.13407 (12), -0.13313 (12), -0.13275 (13), -0.13261 (13), -0.13255 (13), -0.13201 (13), -0.13184 (13), -0.13174 (13), 
Length of domains: 2652
Time: pickout 0.0588    decision 0.1522    set_bounds 0.3162    solve 0.9052    add 0.0470    
Accumulated time: pickout 0.1242    decision 1.4685    set_bounds 1.0329    solve 4.8026    add 0.6532    
Current (lb-rhs): -0.14119404554367065
8452 domains visited
Cumulative time: 10.356087684631348

BaB round 14
batch: 2048
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 248] [/input-16, 78] [/input-16, 248] [/input-16, 247] [/input-12, 884] [/input-12, 4557] [/input-12, 6244] [/input-12, 6244] [/input-12, 6819] [/input-12, 7907] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14391660690307617
10 lb beta sum: 1.2303287982940674, worst -0.1361566185951233
Time: prepare 0.0889    bound 0.6691    transfer 0.0539    finalize 0.1372    func 0.9767    
Accumulated time: func 6.0697    prepare 0.4082    bound 4.8918    transfer 0.1591    finalize 0.5069    
all_split False
======================Cut inference begins======================
max lb tensor(0.38345546) min lb tensor(-0.13594174)
Number of Verified Splits: 1119 of 4096
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 52.
#cuts 1-3: 16
#cuts 4-6: 34
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.310565710067749 
BICCOS Cumulative time: 2.2048323154449463
Preprocessing time: 0.12836146354675293 Inference time: 0.15284442901611328 Add cuts time: 0.02737283706665039 Cut analysis time: 0.001986980438232422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13594 (14), -0.13544 (14), -0.13543 (14), -0.13487 (14), -0.13455 (14), -0.13448 (14), -0.13419 (14), -0.13416 (14), -0.13261 (13), -0.13253 (14), -0.13225 (14), -0.13184 (13), -0.13167 (13), -0.13156 (13), -0.13143 (13), -0.13131 (14), -0.13113 (13), -0.13090 (14), -0.13044 (13), -0.13003 (13), 
Length of domains: 3581
Time: pickout 0.0078    decision 0.1634    set_bounds 0.3356    solve 0.9782    add 0.0753    
Accumulated time: pickout 0.1320    decision 1.6319    set_bounds 1.3685    solve 5.7808    add 0.7286    
Current (lb-rhs): -0.135941743850708
11429 domains visited
current_vram/total_varm: 14.8GB/99.9GB, batch_size increase to 4096
Cumulative time: 12.246771097183228

BaB round 15
batch: 3581
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 247] [/input-12, 2587] [/input-16, 247] [/input-12, 2587] [/input-16, 247] [/input-16, 247] [/input-16, 78] [/input-12, 2580] [/input-12, 3363] [/input-12, 3812] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14261940121650696
10 lb beta sum: 1.206421136856079, worst -0.13458991050720215
Time: prepare 0.1605    bound 1.1128    transfer 0.1010    finalize 0.2453    func 1.6677    
Accumulated time: func 7.7373    prepare 0.5689    bound 6.0047    transfer 0.2602    finalize 0.7522    
all_split False
======================Cut inference begins======================
max lb tensor(0.39083034) min lb tensor(-0.13457716)
Number of Verified Splits: 1532 of 7162
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 64.
#cuts 1-3: 17
#cuts 4-6: 37
#cuts 7-9: 10
#cuts >= 20: 0
BICCOS time: 0.492659330368042 
BICCOS Cumulative time: 2.6974916458129883
Preprocessing time: 0.22976350784301758 Inference time: 0.2199103832244873 Add cuts time: 0.04038214683532715 Cut analysis time: 0.002603292465209961
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13458 (15), -0.13410 (15), -0.13408 (15), -0.13353 (15), -0.13324 (15), -0.13307 (15), -0.13279 (15), -0.13277 (15), -0.13252 (15), -0.13225 (15), -0.13131 (15), -0.13089 (15), -0.13017 (14), -0.12957 (15), -0.12908 (14), -0.12900 (14), -0.12890 (15), -0.12858 (15), -0.12853 (14), -0.12839 (14), 
Length of domains: 5630
Time: pickout 0.1388    decision 0.2750    set_bounds 0.4865    solve 1.6699    add 0.1295    
Accumulated time: pickout 0.2707    decision 1.9070    set_bounds 1.8550    solve 7.4507    add 0.8580    
Current (lb-rhs): -0.13457715511322021
17059 domains visited
Cumulative time: 15.467055082321167

BaB round 16
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 248] [/input-12, 1179] [/input-12, 6244] [/input-12, 1187] [/input-12, 7907] [/input-12, 884] [/input-12, 2538] [/input-12, 5932] [/input-16, 247] [/input-12, 1563] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1408948451280594
10 lb beta sum: 1.1823269128799438, worst -0.13457489013671875
Time: prepare 0.1829    bound 1.2537    transfer 0.1076    finalize 0.2721    func 2.0627    
Accumulated time: func 9.8001    prepare 0.7522    bound 7.2584    transfer 0.3677    finalize 1.0244    
all_split False
======================Cut inference begins======================
max lb tensor(0.37909913) min lb tensor(-0.13457006)
Number of Verified Splits: 1645 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 71.
#cuts 1-3: 18
#cuts 4-6: 29
#cuts 7-9: 24
#cuts >= 20: 0
BICCOS time: 0.561164140701294 
BICCOS Cumulative time: 3.2586557865142822
Preprocessing time: 0.25787830352783203 Inference time: 0.2541522979736328 Add cuts time: 0.046051740646362305 Cut analysis time: 0.003081798553466797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13457 (16), -0.13409 (16), -0.13406 (16), -0.13351 (16), -0.13319 (16), -0.13225 (15), -0.13186 (16), -0.13159 (16), -0.13129 (16), -0.13125 (16), -0.13119 (16), -0.13089 (15), -0.12996 (16), -0.12890 (16), -0.12875 (15), -0.12784 (16), -0.12776 (15), -0.12772 (16), -0.12747 (15), -0.12745 (16), 
Length of domains: 8081
Time: pickout 0.0163    decision 0.5097    set_bounds 0.3684    solve 2.0654    add 0.1650    
Accumulated time: pickout 0.2870    decision 2.4166    set_bounds 2.2234    solve 9.5161    add 1.0230    
Current (lb-rhs): -0.13457006216049194
23606 domains visited
current_vram/total_varm: 29.9GB/99.9GB, batch_size increase to 8192
Cumulative time: 19.184957265853882

BaB round 17
batch: 8081
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5932] [/input-12, 2210] [/input-12, 6244] [/input-12, 2218] [/input-16, 247] [/input-12, 1179] [/input-16, 64] [/input-12, 1563] [/input-12, 5932] [/input-16, 64] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1390482783317566
10 lb beta sum: 1.1807631254196167, worst -0.13436470925807953
Time: prepare 0.3676    bound 2.4090    transfer 0.2191    finalize 0.5717    func 3.6767    
Accumulated time: func 13.4768    prepare 1.1201    bound 9.6674    transfer 0.5868    finalize 1.5960    
all_split False
======================Cut inference begins======================
max lb tensor(0.42578924) min lb tensor(-0.13405031)
Number of Verified Splits: 3140 of 16162
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 80.
#cuts 1-3: 20
#cuts 4-6: 35
#cuts 7-9: 25
#cuts >= 20: 0
BICCOS time: 1.3991320133209229 
BICCOS Cumulative time: 4.657787799835205
Preprocessing time: 0.5210762023925781 Inference time: 0.7849631309509277 Add cuts time: 0.08971309661865234 Cut analysis time: 0.0033795833587646484
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13405 (17), -0.13351 (17), -0.13319 (17), -0.13267 (17), -0.13220 (17), -0.13186 (17), -0.13159 (17), -0.13129 (17), -0.13123 (17), -0.13118 (17), -0.13091 (16), -0.12996 (17), -0.12955 (16), -0.12867 (16), -0.12851 (17), -0.12773 (17), -0.12770 (16), -0.12747 (17), -0.12729 (16), -0.12725 (16), 
Length of domains: 13022
Time: pickout 0.3036    decision 0.8122    set_bounds 0.9897    solve 3.6807    add 0.3340    
Accumulated time: pickout 0.5906    decision 3.2288    set_bounds 3.2131    solve 13.1967    add 1.3570    
Current (lb-rhs): -0.13405030965805054
36628 domains visited
Cumulative time: 26.760898113250732

BaB round 18
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4757] [/input-12, 2580] [/input-12, 4757] [/input-12, 7907] [/input-12, 4882] [/input-16, 247] [/input-12, 6244] [/input-16, 64] [/input-12, 4757] [/input-12, 7907] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1447356939315796
10 lb beta sum: 1.1426646709442139, worst -0.13216978311538696
Time: prepare 0.3768    bound 2.4437    transfer 0.2158    finalize 0.5475    func 3.6939    
Accumulated time: func 17.1707    prepare 1.4972    bound 12.1110    transfer 0.8027    finalize 2.1436    
all_split False
======================Cut inference begins======================
max lb tensor(0.43842217) min lb tensor(-0.13216215)
Number of Verified Splits: 3418 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 105.
#cuts 1-3: 21
#cuts 4-6: 39
#cuts 7-9: 44
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 1.612614393234253 
BICCOS Cumulative time: 6.270402193069458
Preprocessing time: 0.9173910617828369 Inference time: 0.5722105503082275 Add cuts time: 0.11805295944213867 Cut analysis time: 0.004959821701049805
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13267 (17), -0.13220 (17), -0.13216 (18), -0.13169 (18), -0.13163 (18), -0.13123 (18), -0.13091 (17), -0.13032 (18), -0.13007 (18), -0.12996 (18), -0.12954 (17), -0.12948 (18), -0.12943 (18), -0.12916 (18), -0.12851 (17), -0.12825 (17), -0.12770 (16), -0.12753 (17), -0.12729 (16), -0.12728 (18), 
Length of domains: 17796
Time: pickout 0.0377    decision 0.6216    set_bounds 1.0495    solve 3.6991    add 0.3562    
Accumulated time: pickout 0.6284    decision 3.8504    set_bounds 4.2626    solve 16.8959    add 1.7132    
Current (lb-rhs): -0.13267403841018677
49594 domains visited
Cumulative time: 34.202316761016846

BaB round 19
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 247] [/input-16, 78] [/input-12, 6764] [/input-12, 5932] [/input-16, 247] [/input-12, 4882] [/input-12, 1187] [/input-16, 64] [/input-12, 5540] [/input-12, 1173] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14012813568115234
10 lb beta sum: 1.1024152040481567, worst -0.13266867399215698
Time: prepare 0.3824    bound 3.2271    transfer 0.2145    finalize 0.5639    func 4.4969    
Accumulated time: func 21.6676    prepare 1.8799    bound 15.3381    transfer 1.0171    finalize 2.7075    
all_split False
======================Cut inference begins======================
max lb tensor(0.43225661) min lb tensor(-0.13266486)
Number of Verified Splits: 3701 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 124.
#cuts 1-3: 21
#cuts 4-6: 46
#cuts 7-9: 55
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 1.7536544799804688 
BICCOS Cumulative time: 8.024056673049927
Preprocessing time: 0.9517769813537598 Inference time: 0.6570770740509033 Add cuts time: 0.1385650634765625 Cut analysis time: 0.006235361099243164
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13266 (18), -0.13220 (18), -0.13216 (18), -0.13163 (18), -0.13032 (18), -0.13007 (18), -0.12996 (18), -0.12970 (19), -0.12954 (18), -0.12948 (18), -0.12943 (18), -0.12926 (19), -0.12917 (18), -0.12916 (18), -0.12850 (18), -0.12825 (17), -0.12728 (18), -0.12720 (18), -0.12680 (18), -0.12665 (17), 
Length of domains: 22287
Time: pickout 0.0386    decision 0.6247    set_bounds 1.1360    solve 4.5015    add 0.3084    
Accumulated time: pickout 0.6670    decision 4.4752    set_bounds 5.3986    solve 21.3974    add 2.0216    
Current (lb-rhs): -0.13266485929489136
62277 domains visited
Cumulative time: 42.63474178314209

BaB round 20
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5932] [/input-16, 64] [/input-12, 1563] [/input-12, 6244] [/input-12, 4881] [/input-12, 4571] [/input-12, 2218] [/input-16, 248] [/input-16, 247] [/input-12, 1390] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13454827666282654
10 lb beta sum: 1.0581210851669312, worst -0.13216160237789154
Time: prepare 0.3984    bound 3.2466    transfer 0.2085    finalize 0.5757    func 4.5415    
Accumulated time: func 26.2091    prepare 2.2787    bound 18.5847    transfer 1.2257    finalize 3.2832    
all_split False
======================Cut inference begins======================
max lb tensor(0.43203509) min lb tensor(-0.13215795)
Number of Verified Splits: 3705 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 149.
#cuts 1-3: 21
#cuts 4-6: 60
#cuts 7-9: 65
#cuts 10-12: 3
#cuts >= 20: 0
BICCOS time: 1.7899527549743652 
BICCOS Cumulative time: 9.814009428024292
Preprocessing time: 1.0112724304199219 Inference time: 0.6239261627197266 Add cuts time: 0.14771652221679688 Cut analysis time: 0.007037639617919922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13266 (18), -0.13220 (18), -0.13216 (19), -0.13162 (19), -0.13048 (19), -0.13027 (19), -0.12970 (19), -0.12954 (18), -0.12946 (19), -0.12943 (19), -0.12926 (19), -0.12917 (18), -0.12850 (18), -0.12832 (19), -0.12829 (19), -0.12824 (19), -0.12820 (18), -0.12813 (19), -0.12803 (19), -0.12720 (19), 
Length of domains: 26774
Time: pickout 0.0419    decision 0.6185    set_bounds 1.1919    solve 4.5473    add 0.3543    
Accumulated time: pickout 0.7089    decision 5.0937    set_bounds 6.5905    solve 25.9447    add 2.3759    
Current (lb-rhs): -0.13266485929489136
74956 domains visited
Cumulative time: 51.258315324783325

BaB round 21
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4881] [/input-12, 7907] [/input-12, 2580] [/input-16, 248] [/input-12, 4757] [/input-12, 6764] [/input-12, 4881] [/input-12, 4204] [/input-12, 7907] [/input-12, 4882] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16908013820648193
10 lb beta sum: 1.037416934967041, worst -0.13266348838806152
Time: prepare 0.3955    bound 3.3034    transfer 0.2155    finalize 0.5733    func 4.5994    
Accumulated time: func 30.8085    prepare 2.6747    bound 21.8881    transfer 1.4412    finalize 3.8565    
all_split False
======================Cut inference begins======================
max lb tensor(0.42379543) min lb tensor(-0.13266075)
Number of Verified Splits: 3608 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 190.
#cuts 1-3: 21
#cuts 4-6: 70
#cuts 7-9: 89
#cuts 10-12: 10
#cuts >= 20: 0
BICCOS time: 1.8948938846588135 
BICCOS Cumulative time: 11.708903312683105
Preprocessing time: 0.5684869289398193 Inference time: 1.1497845649719238 Add cuts time: 0.16698288917541504 Cut analysis time: 0.009639501571655273
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13266 (19), -0.13219 (19), -0.13216 (19), -0.13162 (19), -0.13099 (19), -0.13082 (19), -0.13048 (19), -0.13027 (19), -0.12970 (19), -0.12946 (19), -0.12943 (19), -0.12926 (19), -0.12917 (18), -0.12832 (19), -0.12829 (19), -0.12824 (19), -0.12820 (18), -0.12813 (19), -0.12803 (19), -0.12755 (19), 
Length of domains: 31358
Time: pickout 0.0418    decision 0.6200    set_bounds 1.2838    solve 4.6048    add 0.3498    
Accumulated time: pickout 0.7507    decision 5.7137    set_bounds 7.8742    solve 30.5495    add 2.7257    
Current (lb-rhs): -0.13266074657440186
87732 domains visited
Cumulative time: 60.13499617576599

BaB round 22
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5347] [/input-12, 2587] [/input-12, 4882] [/input-16, 248] [/input-12, 4882] [/input-12, 4571] [/input-12, 1772] [/input-12, 995] [/input-12, 4881] [/input-12, 884] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1315099596977234
10 lb beta sum: 1.0111305713653564, worst -0.12916642427444458
Time: prepare 0.9190    bound 3.3553    transfer 0.2070    finalize 0.5663    func 5.1613    
Accumulated time: func 35.9698    prepare 3.5940    bound 25.2434    transfer 1.6481    finalize 4.4228    
all_split False
======================Cut inference begins======================
max lb tensor(0.41478121) min lb tensor(-0.12916332)
Number of Verified Splits: 3480 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 190.
#cuts 1-3: 21
#cuts 4-6: 83
#cuts 7-9: 79
#cuts 10-12: 7
#cuts >= 20: 0
BICCOS time: 1.3538014888763428 
BICCOS Cumulative time: 13.062704801559448
Preprocessing time: 0.5627756118774414 Inference time: 0.6057391166687012 Add cuts time: 0.17612528800964355 Cut analysis time: 0.00916147232055664
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13266 (19), -0.13219 (19), -0.13216 (19), -0.13162 (19), -0.13099 (19), -0.13082 (19), -0.13048 (19), -0.13027 (19), -0.12946 (19), -0.12943 (19), -0.12916 (19), -0.12832 (19), -0.12829 (19), -0.12824 (19), -0.12820 (18), -0.12813 (19), -0.12803 (19), -0.12790 (19), -0.12755 (19), -0.12727 (20), 
Length of domains: 36070
Time: pickout 0.0393    decision 0.6264    set_bounds 0.8151    solve 5.1675    add 0.6628    
Accumulated time: pickout 0.7900    decision 6.3401    set_bounds 8.6893    solve 35.7170    add 3.3885    
Current (lb-rhs): -0.13266074657440186
100636 domains visited
Cumulative time: 68.88998746871948

BaB round 23
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1835] [/input-12, 2477] [/input-12, 1187] [/input-12, 2545] [/input-12, 6244] [/input-12, 6244] [/input-12, 2477] [/input-12, 2580] [/input-16, 64] [/input-12, 2477] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13892263174057007
10 lb beta sum: 0.9959998726844788, worst -0.12993203103542328
Time: prepare 0.3982    bound 3.3524    transfer 0.2066    finalize 0.5694    func 4.6381    
Accumulated time: func 40.6079    prepare 3.9927    bound 28.5958    transfer 1.8547    finalize 4.9922    
all_split False
======================Cut inference begins======================
max lb tensor(0.41868085) min lb tensor(-0.12992522)
Number of Verified Splits: 3245 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 186.
#cuts 1-3: 21
#cuts 4-6: 82
#cuts 7-9: 74
#cuts 10-12: 9
#cuts >= 20: 0
BICCOS time: 1.930464744567871 
BICCOS Cumulative time: 14.99316954612732
Preprocessing time: 1.1768529415130615 Inference time: 0.581043004989624 Add cuts time: 0.16345429420471191 Cut analysis time: 0.009114503860473633
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13266 (19), -0.13219 (19), -0.13099 (19), -0.13082 (19), -0.13048 (19), -0.13027 (19), -0.12993 (20), -0.12942 (20), -0.12916 (19), -0.12876 (20), -0.12824 (19), -0.12820 (20), -0.12813 (19), -0.12803 (19), -0.12790 (19), -0.12763 (20), -0.12755 (19), -0.12737 (20), -0.12727 (20), -0.12697 (20), 
Length of domains: 41017
Time: pickout 0.0457    decision 1.1634    set_bounds 0.7950    solve 4.6439    add 0.3573    
Accumulated time: pickout 0.8356    decision 7.5035    set_bounds 9.4843    solve 40.3609    add 3.7458    
Current (lb-rhs): -0.13266074657440186
113775 domains visited
Cumulative time: 77.90498614311218

BaB round 24
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 64] [/input-4, 4742] [/input-12, 4571] [/input-12, 7340] [/input-12, 4882] [/input-12, 1772] [/input-12, 1179] [/input-16, 64] [/input-16, 64] [/input-12, 4571] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1545954942703247
10 lb beta sum: 0.9965372085571289, worst -0.13059404492378235
Time: prepare 0.4035    bound 3.3506    transfer 0.2101    finalize 0.5670    func 4.6442    
Accumulated time: func 45.2521    prepare 4.3966    bound 31.9464    transfer 2.0648    finalize 5.5592    
all_split False
======================Cut inference begins======================
max lb tensor(0.42910653) min lb tensor(-0.13059020)
Number of Verified Splits: 3166 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 197.
#cuts 1-3: 21
#cuts 4-6: 90
#cuts 7-9: 76
#cuts 10-12: 10
#cuts >= 20: 0
BICCOS time: 1.2993919849395752 
BICCOS Cumulative time: 16.292561531066895
Preprocessing time: 0.5643050670623779 Inference time: 0.5634653568267822 Add cuts time: 0.16217517852783203 Cut analysis time: 0.009446382522583008
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13099 (19), -0.13082 (19), -0.13059 (20), -0.13014 (20), -0.12993 (20), -0.12942 (20), -0.12916 (19), -0.12916 (20), -0.12876 (20), -0.12866 (20), -0.12820 (20), -0.12819 (20), -0.12796 (20), -0.12790 (19), -0.12763 (20), -0.12737 (20), -0.12727 (20), -0.12710 (20), -0.12697 (20), -0.12692 (20), 
Length of domains: 46043
Time: pickout 0.0395    decision 0.6256    set_bounds 1.5050    solve 4.6495    add 0.3325    
Accumulated time: pickout 0.8751    decision 8.1291    set_bounds 10.9893    solve 45.0104    add 4.0783    
Current (lb-rhs): -0.130992591381073
126993 domains visited
Cumulative time: 86.43954586982727

BaB round 25
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7340] [/input-4, 4762] [/input-12, 5347] [/input-4, 4761] [/input-12, 1179] [/input-12, 2477] [/input-4, 4761] [/input-12, 1563] [/input-12, 4557] [/input-12, 5347] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14835739135742188
10 lb beta sum: 0.9737179279327393, worst -0.18970075249671936
Time: prepare 0.4061    bound 3.3722    transfer 0.2167    finalize 0.5627    func 4.6719    
Accumulated time: func 49.9240    prepare 4.8032    bound 35.3186    transfer 2.2815    finalize 6.1219    
all_split False
======================Cut inference begins======================
max lb tensor(0.41771215) min lb tensor(-0.12888676)
Number of Verified Splits: 3101 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 201.
#cuts 1-3: 21
#cuts 4-6: 89
#cuts 7-9: 78
#cuts 10-12: 13
#cuts >= 20: 0
BICCOS time: 2.053799629211426 
BICCOS Cumulative time: 18.34636116027832
Preprocessing time: 0.5668337345123291 Inference time: 1.3097829818725586 Add cuts time: 0.16725397109985352 Cut analysis time: 0.00992894172668457
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13059 (20), -0.13014 (20), -0.12993 (20), -0.12942 (20), -0.12916 (19), -0.12916 (20), -0.12889 (20), -0.12876 (20), -0.12871 (20), -0.12866 (20), -0.12820 (20), -0.12819 (20), -0.12796 (20), -0.12790 (19), -0.12763 (20), -0.12753 (20), -0.12737 (20), -0.12730 (20), -0.12727 (20), -0.12710 (20), 
Length of domains: 51134
Time: pickout 0.0401    decision 0.6229    set_bounds 1.4811    solve 4.6784    add 0.3699    
Accumulated time: pickout 0.9152    decision 8.7520    set_bounds 12.4704    solve 49.6889    add 4.4482    
Current (lb-rhs): -0.13059020042419434
140276 domains visited
Cumulative time: 95.76559901237488

BaB round 26
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5347] [/input-12, 6244] [/input-12, 2210] [/input-16, 64] [/input-16, 78] [/input-12, 5347] [/input-12, 6244] [/input-12, 6244] [/input-16, 64] [/input-16, 248] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14055407047271729
10 lb beta sum: 0.9807953834533691, worst -0.1675933599472046
Time: prepare 0.4129    bound 3.3783    transfer 0.2114    finalize 0.5890    func 4.7042    
Accumulated time: func 54.6282    prepare 5.2165    bound 38.6968    transfer 2.4929    finalize 6.7110    
all_split False
======================Cut inference begins======================
max lb tensor(0.43607715) min lb tensor(-0.12736189)
Number of Verified Splits: 3089 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 213.
#cuts 1-3: 22
#cuts 4-6: 83
#cuts 7-9: 97
#cuts 10-12: 11
#cuts >= 20: 0
BICCOS time: 2.0755486488342285 
BICCOS Cumulative time: 20.42190980911255
Preprocessing time: 1.339034080505371 Inference time: 0.5604195594787598 Add cuts time: 0.16553616523742676 Cut analysis time: 0.010558843612670898
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13059 (20), -0.13014 (20), -0.12993 (20), -0.12942 (20), -0.12916 (20), -0.12889 (20), -0.12876 (20), -0.12871 (20), -0.12866 (20), -0.12820 (20), -0.12819 (20), -0.12796 (20), -0.12763 (20), -0.12753 (20), -0.12737 (20), -0.12736 (20), -0.12730 (20), -0.12710 (20), -0.12697 (20), -0.12685 (20), 
Length of domains: 56237
Time: pickout 0.0403    decision 0.6292    set_bounds 0.8198    solve 4.7130    add 0.3675    
Accumulated time: pickout 0.9555    decision 9.3812    set_bounds 13.2902    solve 54.4019    add 4.8157    
Current (lb-rhs): -0.13059020042419434
153571 domains visited
Cumulative time: 104.48315978050232

BaB round 27
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4571] [/input-12, 4204] [/input-16, 248] [/input-12, 4203] [/input-12, 2580] [/input-12, 4881] [/input-12, 5932] [/input-12, 4889] [/input-12, 1179] [/input-12, 2580] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13092200458049774
10 lb beta sum: 0.9687264561653137, worst -0.16459733247756958
Time: prepare 0.4152    bound 3.3922    transfer 0.2081    finalize 1.3829    func 5.5101    
Accumulated time: func 60.1383    prepare 5.6320    bound 42.0890    transfer 2.7009    finalize 8.0939    
all_split False
======================Cut inference begins======================
max lb tensor(0.40598184) min lb tensor(-0.12991896)
Number of Verified Splits: 2826 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 208.
#cuts 1-3: 23
#cuts 4-6: 75
#cuts 7-9: 98
#cuts 10-12: 11
#cuts 13-15: 1
#cuts >= 20: 0
BICCOS time: 1.27402663230896 
BICCOS Cumulative time: 21.69593644142151
Preprocessing time: 0.5667548179626465 Inference time: 0.5319421291351318 Add cuts time: 0.16369223594665527 Cut analysis time: 0.011637449264526367
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13059 (20), -0.13014 (20), -0.12992 (21), -0.12916 (20), -0.12889 (20), -0.12876 (20), -0.12871 (20), -0.12866 (20), -0.12820 (20), -0.12819 (20), -0.12796 (20), -0.12763 (21), -0.12753 (20), -0.12736 (21), -0.12736 (20), -0.12730 (20), -0.12710 (20), -0.12697 (21), -0.12685 (20), -0.12682 (21), 
Length of domains: 61603
Time: pickout 0.0407    decision 0.6249    set_bounds 0.8254    solve 5.5186    add 0.3531    
Accumulated time: pickout 0.9962    decision 10.0061    set_bounds 14.1156    solve 59.9205    add 5.1688    
Current (lb-rhs): -0.13059020042419434
167129 domains visited
Cumulative time: 113.21005463600159

BaB round 28
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6244] [/input-12, 6244] [/input-12, 4204] [/input-12, 4889] [/input-12, 2477] [/input-12, 2218] [/input-12, 2572] [/input-12, 1563] [/input-4, 4746] [/input-12, 1772] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1398828625679016
10 lb beta sum: 0.9441487789154053, worst -0.14862462878227234
Time: prepare 0.3958    bound 3.3891    transfer 0.2025    finalize 0.5764    func 4.6775    
Accumulated time: func 64.8158    prepare 6.0283    bound 45.4781    transfer 2.9034    finalize 8.6703    
all_split False
======================Cut inference begins======================
max lb tensor(0.39210767) min lb tensor(-0.12671651)
Number of Verified Splits: 2672 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 223.
#cuts 1-3: 23
#cuts 4-6: 76
#cuts 7-9: 107
#cuts 10-12: 16
#cuts 13-15: 1
#cuts >= 20: 0
BICCOS time: 1.2389121055603027 
BICCOS Cumulative time: 22.93484854698181
Preprocessing time: 0.5731115341186523 Inference time: 0.5002548694610596 Add cuts time: 0.1540379524230957 Cut analysis time: 0.011507749557495117
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13059 (20), -0.13014 (20), -0.12992 (21), -0.12916 (20), -0.12889 (20), -0.12871 (20), -0.12866 (20), -0.12819 (20), -0.12796 (20), -0.12763 (21), -0.12753 (20), -0.12736 (21), -0.12736 (20), -0.12730 (20), -0.12710 (20), -0.12697 (21), -0.12685 (20), -0.12682 (21), -0.12672 (21), -0.12623 (21), 
Length of domains: 67123
Time: pickout 0.0393    decision 0.6235    set_bounds 1.7302    solve 4.6844    add 0.8587    
Accumulated time: pickout 1.0355    decision 10.6296    set_bounds 15.8458    solve 64.6049    add 6.0276    
Current (lb-rhs): -0.13059020042419434
180841 domains visited
Cumulative time: 122.47274017333984

BaB round 29
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-4, 4746] [/input-12, 2218] [/input-12, 4571] [/input-12, 2210] [/input-12, 2477] [/input-12, 4882] [/input-12, 2545] [/input-12, 5347] [/input-12, 2545] [/input-12, 2218] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1430220603942871
10 lb beta sum: 0.9648995995521545, worst -0.16184917092323303
Time: prepare 0.4058    bound 3.4041    transfer 0.2107    finalize 0.5774    func 4.7105    
Accumulated time: func 69.5263    prepare 6.4345    bound 48.8822    transfer 3.1142    finalize 9.2477    
all_split False
======================Cut inference begins======================
max lb tensor(0.40819445) min lb tensor(-0.13058482)
Number of Verified Splits: 2816 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 241.
#cuts 1-3: 23
#cuts 4-6: 86
#cuts 7-9: 113
#cuts 10-12: 19
#cuts >= 20: 0
BICCOS time: 1.2896533012390137 
BICCOS Cumulative time: 24.224501848220825
Preprocessing time: 0.5723004341125488 Inference time: 0.5328366756439209 Add cuts time: 0.17186498641967773 Cut analysis time: 0.012651205062866211
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13058 (21), -0.13014 (21), -0.12992 (21), -0.12916 (20), -0.12889 (20), -0.12871 (20), -0.12866 (20), -0.12819 (21), -0.12763 (21), -0.12753 (20), -0.12736 (21), -0.12736 (20), -0.12730 (20), -0.12710 (20), -0.12697 (21), -0.12685 (20), -0.12682 (21), -0.12672 (21), -0.12623 (21), -0.12618 (21), 
Length of domains: 72499
Time: pickout 0.0362    decision 0.6210    set_bounds 1.7701    solve 4.7193    add 0.2921    
Accumulated time: pickout 1.0717    decision 11.2507    set_bounds 17.6159    solve 69.3242    add 6.3197    
Current (lb-rhs): -0.13058482110500336
194409 domains visited
Cumulative time: 131.27561354637146

BaB round 30
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 248] [/input-12, 6764] [/input-12, 1563] [/input-12, 5340] [/input-12, 5340] [/input-16, 64] [/input-4, 4761] [/input-12, 2210] [/input-12, 7340] [/input-12, 2545] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.162480890750885
10 lb beta sum: 0.9523756504058838, worst -0.12714606523513794
Time: prepare 0.4085    bound 3.4286    transfer 0.2102    finalize 0.5715    func 4.7326    
Accumulated time: func 74.2588    prepare 6.8434    bound 52.3108    transfer 3.3244    finalize 9.8192    
all_split False
======================Cut inference begins======================
max lb tensor(0.42552799) min lb tensor(-0.12713796)
Number of Verified Splits: 2768 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 260.
#cuts 1-3: 23
#cuts 4-6: 84
#cuts 7-9: 129
#cuts 10-12: 24
#cuts >= 20: 0
BICCOS time: 1.3372409343719482 
BICCOS Cumulative time: 25.561742782592773
Preprocessing time: 0.5792288780212402 Inference time: 0.5184841156005859 Add cuts time: 0.22517919540405273 Cut analysis time: 0.014348745346069336
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13058 (21), -0.13014 (21), -0.12992 (21), -0.12889 (20), -0.12871 (20), -0.12819 (21), -0.12763 (21), -0.12753 (20), -0.12736 (21), -0.12736 (20), -0.12730 (20), -0.12714 (21), -0.12697 (21), -0.12682 (21), -0.12672 (21), -0.12662 (21), -0.12655 (21), -0.12623 (21), -0.12618 (21), -0.12615 (21), 
Length of domains: 77923
Time: pickout 0.0376    decision 0.6258    set_bounds 1.8429    solve 4.7408    add 0.3209    
Accumulated time: pickout 1.1093    decision 11.8765    set_bounds 19.4588    solve 74.0650    add 6.6406    
Current (lb-rhs): -0.13058482110500336
208025 domains visited
Cumulative time: 140.25419068336487

BaB round 31
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4557] [/input-12, 2538] [/input-12, 5347] [/input-12, 2545] [/input-16, 248] [/input-16, 64] [/input-12, 3812] [/input-12, 2532] [/input-12, 1563] [/input-12, 1772] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13715648651123047
10 lb beta sum: 0.9337431192398071, worst -0.17857515811920166
Time: prepare 1.4022    bound 3.4923    transfer 0.2036    finalize 0.5591    func 5.7697    
Accumulated time: func 80.0285    prepare 8.2461    bound 55.8032    transfer 3.5280    finalize 10.3783    
all_split False
======================Cut inference begins======================
max lb tensor(0.43250668) min lb tensor(-0.12888265)
Number of Verified Splits: 2766 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 275.
#cuts 1-3: 23
#cuts 4-6: 89
#cuts 7-9: 136
#cuts 10-12: 27
#cuts >= 20: 0
BICCOS time: 1.312199354171753 
BICCOS Cumulative time: 26.873942136764526
Preprocessing time: 0.5683491230010986 Inference time: 0.535618782043457 Add cuts time: 0.19280362129211426 Cut analysis time: 0.015427827835083008
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13058 (21), -0.13014 (21), -0.12992 (21), -0.12888 (21), -0.12819 (21), -0.12763 (21), -0.12736 (21), -0.12736 (20), -0.12714 (21), -0.12697 (21), -0.12682 (21), -0.12672 (21), -0.12665 (21), -0.12662 (21), -0.12655 (21), -0.12623 (21), -0.12618 (21), -0.12617 (21), -0.12615 (21), -0.12609 (21), 
Length of domains: 83349
Time: pickout 0.0337    decision 0.6290    set_bounds 0.8177    solve 5.7763    add 0.2943    
Accumulated time: pickout 1.1430    decision 12.5055    set_bounds 20.2765    solve 79.8413    add 6.9349    
Current (lb-rhs): -0.13058482110500336
221643 domains visited
Cumulative time: 149.18910670280457

BaB round 32
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2532] [/input-12, 7907] [/input-12, 3356] [/input-12, 3349] [/input-16, 64] [/input-12, 2572] [/input-12, 5540] [/input-12, 5932] [/input-12, 1563] [/input-12, 4881] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16243970394134521
10 lb beta sum: 0.9410484433174133, worst -0.1720031499862671
Time: prepare 0.4131    bound 3.5126    transfer 0.2132    finalize 1.6308    func 5.8814    
Accumulated time: func 85.9099    prepare 8.6596    bound 59.3158    transfer 3.7412    finalize 12.0091    
all_split False
======================Cut inference begins======================
max lb tensor(0.44332546) min lb tensor(-0.12736027)
Number of Verified Splits: 2766 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 295.
#cuts 1-3: 23
#cuts 4-6: 91
#cuts 7-9: 147
#cuts 10-12: 34
#cuts >= 20: 0
BICCOS time: 1.3464362621307373 
BICCOS Cumulative time: 28.220378398895264
Preprocessing time: 0.5623586177825928 Inference time: 0.5226166248321533 Add cuts time: 0.2451341152191162 Cut analysis time: 0.016326904296875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13058 (21), -0.13014 (21), -0.12992 (21), -0.12888 (21), -0.12819 (21), -0.12763 (21), -0.12736 (21), -0.12736 (21), -0.12714 (21), -0.12697 (21), -0.12682 (21), -0.12672 (21), -0.12665 (21), -0.12662 (21), -0.12655 (21), -0.12623 (21), -0.12618 (21), -0.12617 (21), -0.12615 (21), -0.12609 (21), 
Length of domains: 88775
Time: pickout 0.0351    decision 0.6237    set_bounds 0.8294    solve 5.8889    add 0.3041    
Accumulated time: pickout 1.1780    decision 13.1292    set_bounds 21.1059    solve 85.7302    add 7.2390    
Current (lb-rhs): -0.13058482110500336
235261 domains visited
Cumulative time: 158.29939365386963

BaB round 33
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5932] [/input-12, 2545] [/input-12, 4882] [/input-12, 6764] [/input-12, 1390] [/input-12, 4881] [/input-12, 5932] [/input-12, 1179] [/input-12, 3812] [/input-12, 6244] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15368878841400146
10 lb beta sum: 0.924535870552063, worst -0.17080563306808472
Time: prepare 0.4034    bound 3.5354    transfer 0.2102    finalize 0.5642    func 4.8254    
Accumulated time: func 90.7354    prepare 9.0633    bound 62.8511    transfer 3.9514    finalize 12.5733    
all_split False
======================Cut inference begins======================
max lb tensor(0.43618250) min lb tensor(-0.12408805)
Number of Verified Splits: 2575 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 296.
#cuts 1-3: 23
#cuts 4-6: 95
#cuts 7-9: 142
#cuts 10-12: 36
#cuts >= 20: 0
BICCOS time: 2.4593539237976074 
BICCOS Cumulative time: 30.67973232269287
Preprocessing time: 1.7219340801239014 Inference time: 0.4881312847137451 Add cuts time: 0.23325419425964355 Cut analysis time: 0.016034364700317383
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13058 (21), -0.13014 (21), -0.12992 (21), -0.12888 (21), -0.12819 (21), -0.12763 (21), -0.12736 (21), -0.12736 (21), -0.12714 (21), -0.12697 (21), -0.12682 (21), -0.12672 (21), -0.12665 (21), -0.12662 (21), -0.12655 (21), -0.12623 (21), -0.12618 (21), -0.12617 (21), -0.12615 (21), -0.12609 (21), 
Length of domains: 94392
Time: pickout 0.0371    decision 0.6227    set_bounds 0.8300    solve 4.8340    add 0.3025    
Accumulated time: pickout 1.2152    decision 13.7519    set_bounds 21.9360    solve 90.5642    add 7.5415    
Current (lb-rhs): -0.13058482110500336
249070 domains visited
Cumulative time: 167.45347452163696

BaB round 34
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 64] [/input-12, 2531] [/input-12, 4557] [/input-12, 6244] [/input-12, 2580] [/input-12, 1772] [/input-12, 4881] [/input-12, 5932] [/input-12, 6244] [/input-4, 4746] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15177035331726074
10 lb beta sum: 0.9342814087867737, worst -0.20248454809188843
Time: prepare 0.4079    bound 3.5348    transfer 0.2162    finalize 0.5770    func 4.8456    
Accumulated time: func 95.5810    prepare 9.4716    bound 66.3859    transfer 4.1676    finalize 13.1503    
all_split False
======================Cut inference begins======================
max lb tensor(0.43777364) min lb tensor(-0.12788436)
Number of Verified Splits: 2622 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 304.
#cuts 1-3: 23
#cuts 4-6: 95
#cuts 7-9: 147
#cuts 10-12: 38
#cuts 13-15: 1
#cuts >= 20: 0
BICCOS time: 1.3090920448303223 
BICCOS Cumulative time: 31.988824367523193
Preprocessing time: 0.5689547061920166 Inference time: 0.5169055461883545 Add cuts time: 0.20674824714660645 Cut analysis time: 0.016483545303344727
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13058 (21), -0.13014 (21), -0.12888 (21), -0.12819 (21), -0.12788 (22), -0.12736 (21), -0.12736 (21), -0.12732 (22), -0.12714 (21), -0.12682 (22), -0.12672 (21), -0.12665 (21), -0.12662 (21), -0.12655 (21), -0.12623 (21), -0.12618 (21), -0.12617 (21), -0.12615 (21), -0.12609 (21), -0.12607 (21), 
Length of domains: 99962
Time: pickout 0.0336    decision 0.6342    set_bounds 0.8179    solve 4.8527    add 0.3355    
Accumulated time: pickout 1.2487    decision 14.3861    set_bounds 22.7538    solve 95.4169    add 7.8770    
Current (lb-rhs): -0.13058482110500336
262832 domains visited
Cumulative time: 175.51884531974792

BaB round 35
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2572] [/input-4, 4746] [/input-12, 2218] [/input-4, 6282] [/input-12, 5347] [/input-4, 4762] [/input-12, 5932] [/input-12, 4430] [/input-12, 334] [/input-12, 4571] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15355134010314941
10 lb beta sum: 0.9241683483123779, worst -0.20125040411949158
Time: prepare 0.4058    bound 3.5376    transfer 0.2053    finalize 0.5705    func 4.8303    
Accumulated time: func 100.4113    prepare 9.8777    bound 69.9235    transfer 4.3730    finalize 13.7208    
all_split False
======================Cut inference begins======================
max lb tensor(0.42658842) min lb tensor(-0.12736209)
Number of Verified Splits: 2643 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 324.
#cuts 1-3: 24
#cuts 4-6: 90
#cuts 7-9: 161
#cuts 10-12: 47
#cuts 13-15: 2
#cuts >= 20: 0
BICCOS time: 1.3152472972869873 
BICCOS Cumulative time: 33.30407166481018
Preprocessing time: 0.5747084617614746 Inference time: 0.5130634307861328 Add cuts time: 0.20949673652648926 Cut analysis time: 0.017978668212890625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13058 (21), -0.13014 (21), -0.12888 (21), -0.12819 (21), -0.12788 (22), -0.12736 (22), -0.12736 (21), -0.12732 (22), -0.12714 (21), -0.12682 (22), -0.12672 (21), -0.12665 (21), -0.12662 (21), -0.12655 (21), -0.12623 (21), -0.12618 (21), -0.12617 (21), -0.12615 (21), -0.12609 (21), -0.12607 (21), 
Length of domains: 105511
Time: pickout 0.0353    decision 1.8160    set_bounds 0.8389    solve 4.8375    add 0.3570    
Accumulated time: pickout 1.2840    decision 16.2021    set_bounds 23.5927    solve 100.2545    add 8.2340    
Current (lb-rhs): -0.13058482110500336
276573 domains visited
Cumulative time: 184.79391384124756

BaB round 36
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 64] [/input-12, 1772] [/input-12, 3421] [/input-12, 3812] [/input-16, 129] [/input-16, 64] [/input-12, 4557] [/input-4, 4746] [/input-12, 1563] [/input-12, 1187] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15610146522521973
10 lb beta sum: 0.9041176438331604, worst -0.1747705340385437
Time: prepare 0.4101    bound 3.5679    transfer 0.2051    finalize 0.5556    func 4.8522    
Accumulated time: func 105.2635    prepare 10.2882    bound 73.4915    transfer 4.5781    finalize 14.2763    
all_split False
======================Cut inference begins======================
max lb tensor(0.39684021) min lb tensor(-0.12671313)
Number of Verified Splits: 2406 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 323.
#cuts 1-3: 26
#cuts 4-6: 74
#cuts 7-9: 168
#cuts 10-12: 53
#cuts 13-15: 2
#cuts >= 20: 0
BICCOS time: 1.2583677768707275 
BICCOS Cumulative time: 34.56243944168091
Preprocessing time: 0.57464599609375 Inference time: 0.46766066551208496 Add cuts time: 0.19765186309814453 Cut analysis time: 0.018409252166748047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13058 (21), -0.13014 (21), -0.12888 (21), -0.12819 (21), -0.12788 (22), -0.12736 (22), -0.12736 (21), -0.12732 (22), -0.12714 (21), -0.12682 (22), -0.12671 (22), -0.12665 (21), -0.12662 (21), -0.12655 (21), -0.12618 (21), -0.12617 (21), -0.12615 (22), -0.12609 (21), -0.12607 (21), -0.12606 (22), 
Length of domains: 111297
Time: pickout 0.0347    decision 0.6247    set_bounds 2.0970    solve 4.8593    add 0.3275    
Accumulated time: pickout 1.3187    decision 16.8268    set_bounds 25.6897    solve 105.1138    add 8.5614    
Current (lb-rhs): -0.13058482110500336
290551 domains visited
Cumulative time: 194.0646255016327

BaB round 37
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7340] [/input-12, 6244] [/input-12, 2572] [/input-12, 5932] [/input-12, 2218] [/input-12, 5347] [/input-12, 4204] [/input-12, 4204] [/input-12, 4571] [/input-12, 2477] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15968018770217896
10 lb beta sum: 0.9286513328552246, worst -0.15497532486915588
Time: prepare 0.4278    bound 3.5701    transfer 0.2122    finalize 1.9357    func 6.2550    
Accumulated time: func 111.5185    prepare 10.7164    bound 77.0616    transfer 4.7903    finalize 16.2120    
all_split False
======================Cut inference begins======================
max lb tensor(0.44781867) min lb tensor(-0.12855266)
Number of Verified Splits: 2459 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 359.
#cuts 1-3: 26
#cuts 4-6: 82
#cuts 7-9: 175
#cuts 10-12: 74
#cuts 13-15: 2
#cuts >= 20: 0
BICCOS time: 1.276968002319336 
BICCOS Cumulative time: 35.839407444000244
Preprocessing time: 0.5489296913146973 Inference time: 0.48277974128723145 Add cuts time: 0.22406649589538574 Cut analysis time: 0.021192073822021484
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12888 (21), -0.12855 (22), -0.12810 (22), -0.12805 (22), -0.12788 (22), -0.12762 (22), -0.12736 (22), -0.12736 (21), -0.12732 (22), -0.12714 (21), -0.12682 (22), -0.12671 (22), -0.12665 (21), -0.12662 (21), -0.12655 (21), -0.12617 (21), -0.12615 (22), -0.12615 (22), -0.12609 (21), -0.12607 (21), 
Length of domains: 117030
Time: pickout 0.0343    decision 0.6279    set_bounds 0.8163    solve 6.2608    add 0.3404    
Accumulated time: pickout 1.3531    decision 17.4547    set_bounds 26.5060    solve 111.3746    add 8.9019    
Current (lb-rhs): -0.12888264656066895
304476 domains visited
Time out!!!!!!!!
Result: unknown in 206.4735 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 163, vnnlib ID: 163 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-36.28493881, -37.24505615, -35.70299911, -36.42979050, -35.91878128,
         -36.23475647, -36.92647552, -35.50557709, -38.06435013, -37.42086029]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1494]; unstable size 1494; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 85, 1, 1494] with unstable size 84 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 37, 1, 1494] with unstable size 36 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1494] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [599]; unstable size 599; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 37, 1, 599] with unstable size 36 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 599] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [36]; unstable size 36; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 36] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.25099564, -0.66955900, -1.16831136, -0.37081695, -0.75052071,
         -0.55227661, -0.18392992,  0.66599929, -0.71106720]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-36.28493881, -37.24505615, -35.70299911, -36.42979050, -35.91878128,
         -36.23475647, -36.92647552, -35.50557709, -38.06435013, -37.42086029]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-36.04010773, -37.35272217, -35.39404297, -36.36281586, -35.77348328,
          -36.17906189, -36.74587250, -35.71213150, -38.06096649, -37.52245331],
         [-36.04010773, -37.35272217, -35.39404297, -36.36281586, -35.77348328,
          -36.17906189, -36.74587250, -35.71213150, -38.06096649, -37.52245331]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.32797623,  1.64059067, -0.31808853,  0.65068436,  0.06135178,
           0.46693039,  1.03374100,  1.81032181]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0147 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0607 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 164, vnnlib ID: 164 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-41.39362717, -43.03472137, -38.55974960, -37.90369797, -38.76990128,
         -37.23453522, -38.37669754, -39.20212936, -41.92275238, -42.80599213]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1502]; unstable size 1502; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 84, 1, 1502] with unstable size 83 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 29, 1, 1502] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1502] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [635]; unstable size 635; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 29, 1, 635] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 635] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [28]; unstable size 28; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.76512814, 3.60987282, 0.47790265, 0.48830593, 0.57612586, 0.04416615,
         0.91640401, 3.02101398, 3.40906739]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0375 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 165, vnnlib ID: 165 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-47.65972900, -48.32041168, -46.50114059, -47.10782242, -47.19073868,
         -47.32524490, -48.58856201, -46.69837189, -47.73235703, -48.27389526]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1352]; unstable size 1352; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 85, 1, 1352] with unstable size 84 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 23, 1, 1352] with unstable size 22 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1352] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [587]; unstable size 587; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 23, 1, 587] with unstable size 22 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 587] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [22]; unstable size 22; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.65520978, -0.37197423, -1.22140241, -0.38789296, -0.37607861,
         -0.16175014,  0.86097813, -0.53921014, -0.37318230]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-47.65972900, -48.32041168, -46.50114059, -47.10782242, -47.19073868,
         -47.32524490, -48.58856201, -46.69837189, -47.73235703, -48.27389526]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-47.65973282, -48.32041550, -46.50114441, -47.10782623, -47.19074249,
          -47.32524490, -48.58856201, -46.69837952, -47.73235321, -48.27389526],
         [-47.65973282, -48.32041550, -46.50114441, -47.10782623, -47.19074249,
          -47.32524490, -48.58856201, -46.69837952, -47.73235321, -48.27389526]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.96135330,  1.62203598, -0.19723511,  0.40944672,  0.49236298,
           0.62686539,  1.03397369,  1.57551575]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         ...,


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]]]], device='cuda:0') torch.Size([1, 8, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0508 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 166, vnnlib ID: 166 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-42.42180252, -42.89379883, -39.75101471, -39.63619232, -39.60887909,
         -40.00736237, -37.38924026, -41.70727539, -42.50776291, -41.96659851]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1128]; unstable size 1128; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 81, 1, 1128] with unstable size 80 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 44, 1, 1128] with unstable size 43 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1128] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [719]; unstable size 719; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 44, 1, 719] with unstable size 43 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 719] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [43]; unstable size 43; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 43] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.01881838, 2.21175814, 1.33080399, 1.36717772, 1.10749578, 1.65359855,
         2.45187402, 2.55423617, 1.74422503]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0366 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 167, vnnlib ID: 167 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-34.11568832, -37.53598785, -34.52349472, -34.81072998, -35.87179184,
         -35.04685974, -35.96114731, -36.53546524, -35.08614731, -36.57527924]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1438]; unstable size 1438; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 76, 1, 1438] with unstable size 75 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 40, 1, 1438] with unstable size 39 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1438] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [661]; unstable size 661; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 40, 1, 661] with unstable size 39 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 661] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [39]; unstable size 39; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 39] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.58400333, -1.25092196, -0.86094308, -0.13386607, -0.67230511,
          0.24641299,  0.36094725, -0.50607443,  0.47674990]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-34.11568832, -37.53598785, -34.52349472, -34.81072998, -35.87179184,
         -35.04685974, -35.96114731, -36.53546524, -35.08614731, -36.57527924]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-36.16120529, -39.46107483, -36.16009521, -36.50471878, -37.61370087,
          -36.73508835, -37.70164108, -38.27121353, -37.11111450, -38.47537994],
         [-36.16120529, -39.46107483, -36.16009521, -36.50471878, -37.61370087,
          -36.73508835, -37.70164108, -38.27121353, -37.11111450, -38.47537994]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-1.11007690e-03,  3.43513489e-01,  1.45249557e+00,  5.73883057e-01,
           9.49909210e-01]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0130 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0505 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 168, vnnlib ID: 168 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-71.71402740, -79.58744049, -71.42162323, -75.86884308, -73.19290161,
         -74.76038361, -75.93649292, -77.62896729, -78.98218536, -80.17474365]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1176]; unstable size 1176; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 283, 1, 1176] with unstable size 282 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 15, 1, 1176] with unstable size 14 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1176] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [282]; unstable size 282; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 15, 1, 282] with unstable size 14 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 282] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [14]; unstable size 14; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.37567437,  6.89872456,  3.95744181,  1.27953005,  2.83169770,
          3.95994163,  5.35769129,  6.55233812,  7.68598986]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-71.71402740, -79.58744049, -71.42162323, -75.86884308, -73.19290161,
         -74.76038361, -75.93649292, -77.62896729, -78.98218536, -80.17474365]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-70.25017548, -78.13430023, -70.34717560, -74.65281677, -72.08408356,
          -73.57807159, -74.74716949, -76.43380737, -77.53524017, -78.73778534]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.09700012]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0059 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0501 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 169, vnnlib ID: 169 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-36.29364395, -39.01163483, -35.00701141, -36.80519485, -33.08849716,
         -36.47701263, -37.80215836, -35.15445709, -37.09041595, -38.71384430]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1121]; unstable size 1121; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 511, 1, 1121] with unstable size 510 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 31, 1, 1121] with unstable size 30 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1121] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [510]; unstable size 510; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 31, 1, 510] with unstable size 30 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 510] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [30]; unstable size 30; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.74137163, 3.61584020, 1.03322625, 2.76946688, 2.46568871, 3.26580119,
         1.29110205, 1.97277558, 3.72410965]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0368 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 170, vnnlib ID: 170 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-45.41727448, -51.72291183, -41.83648300, -46.46516800, -42.19234085,
         -45.56911469, -45.96507645, -46.30514145, -49.59290695, -51.17793274]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1260]; unstable size 1260; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 440, 1, 1260] with unstable size 439 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 19, 1, 1260] with unstable size 18 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1260] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [439]; unstable size 439; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 19, 1, 439] with unstable size 18 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 439] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [18]; unstable size 18; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.27096701,  7.89022446, -1.07378650,  3.39359426,  2.44735909,
          2.83307028,  3.39363098,  6.31645679,  7.76480770]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-45.41727448, -51.72291183, -41.83648300, -46.46516800, -42.19234085,
         -45.56911469, -45.96507645, -46.30514145, -49.59290695, -51.17793274]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-45.41727448, -51.72291183, -41.83648300, -46.46516800, -42.19234085,
          -45.56911469, -45.96507645, -46.30514145, -49.59290695, -51.17793274]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.35585785]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.84603173, -0.94126981, -0.86190474,  ..., -0.33809513,
            -0.48095238, -0.51269841],
           [-0.25873005, -0.30634910, -0.27460307,  ..., -0.29047608,
            -0.33809513, -0.43333322],
           [ 0.42380959,  0.36031753,  0.39206356,  ..., -0.08412688,
            -0.14761895, -0.32222211],
           ...,
           [ 0.47142863,  0.48730165,  0.55079371,  ...,  0.05873025,
             0.01111121,  0.12222230],
           [ 0.12222230,  0.10634929,  0.23333341,  ..., -0.02063482,
            -0.02063482,  0.16984135],
           [-0.19523799, -0.41746020, -0.29047608,  ...,  0.16984135,
             0.31269848,  0.58253974]],

          [[-0.67632848, -0.78904986, -0.72463763,  ..., -0.03220600,
            -0.17713353, -0.20933965],
           [ 0.04830930, -0.01610294,  0.01610318,  ...,  0.03220624,
            -0.01610294, -0.11272129],
           [ 0.88566834,  0.82125610,  0.85346222,  ...,  0.24154601,
             0.19323683, -0.01610294],
           ...,
           [ 0.95008057,  0.98228669,  1.03059590,  ...,  0.62801939,
             0.56360716,  0.61191636],
           [ 0.70853472,  0.72463775,  0.85346222,  ...,  0.66022551,
             0.62801939,  0.77294695],
           [ 0.46698883,  0.22544295,  0.40257660,  ...,  0.77294695,
             0.85346222,  1.14331758]],

          [[-0.01349309, -0.07346311,  0.03148442,  ...,  0.76611710,
             0.66116959,  0.64617711],
           [-0.02848560, -0.04347810,  0.00149941,  ...,  0.78110963,
             0.78110963,  0.78110963],
           [-0.14842562, -0.19340314, -0.14842562,  ...,  0.81109464,
             0.81109464,  0.76611710],
           ...,
           [-0.53823084, -0.56821585, -0.50824583,  ..., -0.68815589,
            -0.65817088, -0.49325335],
           [-0.58320838, -0.73313338, -0.61319339,  ..., -0.83808094,
            -0.83808094, -0.65817088],
           [-0.80809593, -1.04797614, -0.85307342,  ..., -0.74812591,
            -0.67316341, -0.43328333]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0417 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 171, vnnlib ID: 171 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-60.41119766, -60.70859909, -58.91210175, -58.45389175, -59.81015015,
         -58.76486588, -56.64972305, -60.33009720, -62.95435715, -59.18806458]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1318]; unstable size 1318; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 83, 1, 1318] with unstable size 82 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 30, 1, 1318] with unstable size 29 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1318] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [519]; unstable size 519; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 30, 1, 519] with unstable size 29 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 519] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [29]; unstable size 29; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.32301378, 2.16984487, 1.02120924, 0.93944269, 1.60304594, 1.21114838,
         1.91980362, 4.24350739, 0.97748470]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0364 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 172, vnnlib ID: 172 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-56.67526627, -61.46788788, -59.37830734, -62.21392822, -59.52711868,
         -62.49036407, -62.21816635, -61.69208145, -58.06240463, -61.63801575]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1473]; unstable size 1473; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 83, 1, 1473] with unstable size 82 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 32, 1, 1473] with unstable size 31 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1473] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [523]; unstable size 523; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 32, 1, 523] with unstable size 31 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 523] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [31]; unstable size 31; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.37220263, 1.30357039, 3.99258375, 1.42721939, 4.19811678, 3.86452460,
         3.54222941, 0.39779323, 3.61907268]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0378 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 173, vnnlib ID: 173 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-37.77401352, -38.58788300, -36.72191620, -35.47452164, -36.59397507,
         -35.88423157, -34.93942642, -37.63751221, -39.35902023, -38.44329834]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1350]; unstable size 1350; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 84, 1, 1350] with unstable size 83 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 41, 1, 1350] with unstable size 40 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1350] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [624]; unstable size 624; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 41, 1, 624] with unstable size 40 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 624] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [40]; unstable size 40; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 40] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.64823437,  0.80964732,  0.02056670, -0.17025185,  0.26929063,
         -1.64081764,  0.78990293,  1.70858467,  0.62001872]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-37.77401352, -38.58788300, -36.72191620, -35.47452164, -36.59397507,
         -35.88423157, -34.93942642, -37.63751221, -39.35902023, -38.44329834]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-37.77401733, -38.58788681, -36.72191620, -35.47452545, -36.59398270,
          -35.88423538, -34.93942642, -37.63751221, -39.35901642, -38.44329834],
         [-37.77401733, -38.58788681, -36.72191620, -35.47452545, -36.59398270,
          -35.88423538, -34.93942642, -37.63751221, -39.35901642, -38.44329834]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.11945724, -0.53509903]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.12222230,  0.18571436,  0.09047628,  ..., -1.36984122,
            -0.30634910, -0.08412688],
           [ 0.04285724,  0.18571436,  0.26507944,  ..., -0.56031746,
            -0.09999990, -0.02063482],
           [ 0.16984135,  0.09047628,  0.20158738,  ..., -0.43333322,
            -0.40158719,  0.07460327],
           ...,
           [ 0.37619054,  0.24920642, -0.08412688,  ...,  0.20158738,
             0.12222230,  0.26507944],
           [ 0.20158738, -0.09999990,  0.24920642,  ...,  0.04285724,
             0.40793657,  0.29682547],
           [-0.21111101,  0.16984135,  0.58253974,  ...,  0.20158738,
             0.58253974,  0.18571436]],

          [[ 0.16103071,  0.22544295,  0.12882459,  ..., -1.35265696,
            -0.27375188, -0.04830906],
           [ 0.08051541,  0.22544295,  0.30595824,  ..., -0.53140092,
            -0.06441211,  0.01610318],
           [ 0.20933989,  0.12882459,  0.24154601,  ..., -0.40257636,
            -0.37037024,  0.11272153],
           ...,
           [ 0.41867965,  0.28985518, -0.04830906,  ...,  0.24154601,
             0.16103071,  0.30595824],
           [ 0.24154601, -0.06441211,  0.28985518,  ...,  0.08051541,
             0.45088577,  0.33816436],
           [-0.17713353,  0.20933989,  0.62801939,  ...,  0.24154601,
             0.62801939,  0.22544295]],

          [[ 0.28635699,  0.34632701,  0.25637197,  ..., -1.12293863,
            -0.11844061,  0.09145443],
           [ 0.21139447,  0.34632701,  0.42128953,  ..., -0.35832080,
             0.07646193,  0.15142445],
           [ 0.33133450,  0.25637197,  0.36131951,  ..., -0.23838064,
            -0.20839565,  0.24137947],
           ...,
           [ 0.52623707,  0.40629703,  0.09145443,  ...,  0.36131951,
             0.28635699,  0.42128953],
           [ 0.36131951,  0.07646193,  0.40629703,  ...,  0.21139447,
             0.55622208,  0.45127454],
           [-0.02848560,  0.33133450,  0.72113961,  ...,  0.36131951,
             0.72113961,  0.34632701]]],


         [[[ 0.12222230,  0.18571436,  0.09047628,  ..., -1.36984122,
            -0.30634910, -0.08412688],
           [ 0.04285724,  0.18571436,  0.26507944,  ..., -0.56031746,
            -0.09999990, -0.02063482],
           [ 0.16984135,  0.09047628,  0.20158738,  ..., -0.43333322,
            -0.40158719,  0.07460327],
           ...,
           [ 0.37619054,  0.24920642, -0.08412688,  ...,  0.20158738,
             0.12222230,  0.26507944],
           [ 0.20158738, -0.09999990,  0.24920642,  ...,  0.04285724,
             0.40793657,  0.29682547],
           [-0.21111101,  0.16984135,  0.58253974,  ...,  0.20158738,
             0.58253974,  0.18571436]],

          [[ 0.16103071,  0.22544295,  0.12882459,  ..., -1.35265696,
            -0.27375188, -0.04830906],
           [ 0.08051541,  0.22544295,  0.30595824,  ..., -0.53140092,
            -0.06441211,  0.01610318],
           [ 0.20933989,  0.12882459,  0.24154601,  ..., -0.40257636,
            -0.37037024,  0.11272153],
           ...,
           [ 0.41867965,  0.28985518, -0.04830906,  ...,  0.24154601,
             0.16103071,  0.30595824],
           [ 0.24154601, -0.06441211,  0.28985518,  ...,  0.08051541,
             0.45088577,  0.33816436],
           [-0.17713353,  0.20933989,  0.62801939,  ...,  0.24154601,
             0.62801939,  0.22544295]],

          [[ 0.28635699,  0.34632701,  0.25637197,  ..., -1.12293863,
            -0.11844061,  0.09145443],
           [ 0.21139447,  0.34632701,  0.42128953,  ..., -0.35832080,
             0.07646193,  0.15142445],
           [ 0.33133450,  0.25637197,  0.36131951,  ..., -0.23838064,
            -0.20839565,  0.24137947],
           ...,
           [ 0.52623707,  0.40629703,  0.09145443,  ...,  0.36131951,
             0.28635699,  0.42128953],
           [ 0.36131951,  0.07646193,  0.40629703,  ...,  0.21139447,
             0.55622208,  0.45127454],
           [-0.02848560,  0.33133450,  0.72113961,  ...,  0.36131951,
             0.72113961,  0.34632701]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0443 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 174, vnnlib ID: 174 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-55.60641861, -59.52717972, -52.95781326, -54.54991913, -52.09571457,
         -54.65149689, -54.43303299, -54.48038483, -57.25499725, -58.99887848]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1647]; unstable size 1647; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 87, 1, 1647] with unstable size 86 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 44, 1, 1647] with unstable size 43 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1647] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [688]; unstable size 688; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 44, 1, 688] with unstable size 43 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 688] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [43]; unstable size 43; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 43] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.63923943,  4.59862375, -0.22880340,  0.88067007,  0.92320430,
          0.73825645,  0.89671171,  2.70268440,  4.09483385]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-55.60641861, -59.52717972, -52.95781326, -54.54991913, -52.09571457,
         -54.65149689, -54.43303299, -54.48038483, -57.25499725, -58.99887848]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.51it/s]100%|██████████| 1/1 [00:00<00:00,  8.50it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-53.92810440, -57.78057098, -51.21750259, -52.83337021, -50.76032257,
          -52.95186996, -52.71417618, -53.09421921, -55.49901962, -57.24967194]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.45718002]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1202 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 17.173065185546875
alpha/beta optimization time: 1.4440982341766357
initial alpha-crown bounds: tensor([[ 1.72907519,  4.77470493, -0.17731500,  0.96376741,  1.00346446,
          0.82610059,  0.96622241,  2.82447839,  4.26256704]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.17731499671936035
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.39764189720154
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.39760303497314
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.39757466316223
Verifying property 2 with 1 instances.
##### Instance 174 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.17731500]], device='cuda:0') need to verify.
Model prediction is: tensor([-55.60641861, -59.52717972, -52.95781326, -54.54991913, -52.09571457,
        -54.65149689, -54.43303299, -54.48038483, -57.25499725, -58.99887848],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.17731500]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1647
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 669
Node /39 input 0: size torch.Size([250]) unstable 42
-----------------
# of unstable neurons: 2358
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00010657310485839844
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1772785186767578
10 lb beta sum: 0.0, worst -0.17728209495544434
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0729    transfer 0.0001    finalize 0.0002    func 0.0735    
Accumulated time: func 0.0735    prepare 0.0002    bound 0.0729    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 35] 
split level 1: [/input-16, 110] 
split level 2: [/input-16, 171] 
split level 3: [/input-16, 170] 
split level 4: [/input-16, 104] 
split level 5: [/input-16, 111] 
split level 6: [/input-16, 166] 
split level 7: [/input-16, 217] 
split level 8: [/input-16, 58] 
split level 9: [/input-16, 23] 
split level 10: [/input-16, 37] 
split level 11: [/input-16, 185] 
split level 12: [/input-16, 178] 
split level 13: [/input-12, 3605] 
split level 14: [/input-16, 165] 
split level 15: [/input-12, 5285] 
split level 16: [/input-12, 5286] 
split level 17: [/input-12, 3811] 
split level 18: [/input-12, 3804] 
split level 19: [/input-16, 24] 
split level 20: [/input-12, 3630] 
split level 21: [/input-12, 3613] 
split level 22: [/input-16, 235] 
split level 23: [/input-16, 195] 
split level 24: [/input-12, 7757] 
split level 25: [/input-12, 202] 
split level 26: [/input-16, 146] 
split level 27: [/input-12, 3788] 
split level 28: [/input-12, 3874] 
split level 29: [/input-16, 25] 
split level 30: [/input-12, 7683] 
split level 31: [/input-12, 5427] 
split level 32: [/input-12, 1749] 
split level 33: [/input-12, 3812] 
split level 34: [/input-12, 1748] 
split level 35: [/input-16, 65] 
split level 36: [/input-12, 4373] 
split level 37: [/input-12, 3419] 
split level 38: [/input-12, 7003] 
split level 39: [/input-12, 1804] 
split level 40: [/input-12, 5386] 
split level 41: [/input-12, 5428] 
split level 42: [/input-12, 2853] 
split level 43: [/input-16, 160] 
split level 44: [/input-12, 5435] 
split level 45: [/input-12, 2469] 
split level 46: [/input-12, 5430] 
split level 47: [/input-12, 2546] 
split level 48: [/input-12, 620] 
split level 49: [/input-12, 7522] 
split level 50: [/input-12, 4362] 
split level 51: [/input-12, 4405] 
split level 52: [/input-12, 5294] 
split level 53: [/input-12, 355] 
split level 54: [/input-12, 4366] 
split level 55: [/input-12, 5381] 
split level 56: [/input-12, 7149] 
split level 57: [/input-12, 4374] 
split level 58: [/input-12, 5257] 
split level 59: [/input-12, 5420] 
split level 60: [/input-12, 1739] 
split level 61: [/input-12, 875] 
split level 62: [/input-12, 7521] 
split level 63: [/input-16, 212] 
split level 64: [/input-12, 619] 
split level 65: [/input-12, 6722] 
split level 66: [/input-12, 5437] 
split level 67: [/input-12, 5213] 
split level 68: [/input-12, 8086] 
split level 69: [/input-16, 247] 
split level 70: [/input-12, 1074] 
split level 71: [/input-12, 2861] 
split level 72: [/input-12, 354] 
split level 73: [/input-12, 6859] 
split level 74: [/input-12, 4406] 
split level 75: [/input-12, 3163] 
split level 76: [/input-12, 492] 
split level 77: [/input-4, 2167] 
split level 78: [/input-12, 2476] 
split level 79: [/input-12, 491] 
split level 80: [/input-12, 3364] 
split level 81: [/input-12, 3616] 
split level 82: [/input-4, 6573] 
split level 83: [/input-12, 4389] 
split level 84: [/input-4, 2715] 
split level 85: [/input-12, 7008] 
split level 86: [/input-16, 78] 
split level 87: [/input-12, 1082] 
split level 88: [/input-12, 4397] 
split level 89: [/input-12, 3825] 
split level 90: [/input-16, 239] 
split level 91: [/input-4, 168] 
split level 92: [/input-12, 2035] 
split level 93: [/input-12, 1073] 
split level 94: [/input-12, 2421] 
split level 95: [/input-12, 2345] 
split level 96: [/input-12, 604] 
split level 97: [/input-12, 1458] 
split level 98: [/input-12, 2267] 
split level 99: [/input-12, 6721] 
split level 100: [/input-16, 18] 
split level 101: [/input-12, 2268] 
split level 102: [/input-12, 1459] 
split level 103: [/input-12, 8038] 
split level 104: [/input-4, 7084] 
split level 105: [/input-12, 1076] 
split level 106: [/input-12, 5221] 
split level 107: [/input-12, 396] 
split level 108: [/input-12, 5725] 
split level 109: [/input-12, 5211] 
split level 110: [/input-12, 5436] 
split level 111: [/input-12, 5258] 
split level 112: [/input-4, 2135] 
split level 113: [/input-12, 3356] 
split level 114: [/input-12, 2777] 
split level 115: [/input-12, 2357] 
split level 116: [/input-12, 1084] 
split level 117: [/input-4, 2732] 
split level 118: [/input-12, 3833] 
split level 119: [/input-12, 811] 
split level 120: [/input-12, 886] 
split level 121: [/input-12, 5202] 
split level 122: [/input-12, 489] 
split level 123: [/input-12, 1742] 
split level 124: [/input-4, 6534] 
split level 125: [/input-12, 730] 
split level 126: [/input-12, 2356] 
split level 127: [/input-12, 2036] 
split level 128: [/input-4, 412] 
split level 129: [/input-4, 3863] 
split level 130: [/input-12, 7215] 
split level 131: [/input-12, 2355] 
split level 132: [/input-4, 5803] 
split level 133: [/input-4, 157] 
split level 134: [/input-4, 2957] 
split level 135: [/input-12, 7222] 
split level 136: [/input-12, 6730] 
split level 137: [/input-12, 4354] 
split level 138: [/input-4, 2684] 
split level 139: [/input-12, 5210] 
split level 140: [/input-12, 409] 
split level 141: [/input-12, 5222] 
split level 142: [/input-12, 4382] 
split level 143: [/input-12, 7562] 
split level 144: [/input-12, 2462] 
split level 145: [/input-12, 7164] 
split level 146: [/input-12, 7837] 
split level 147: [/input-12, 1065] 
split level 148: [/input-12, 970] 
split level 149: [/input-12, 6516] 
split level 150: [/input-12, 776] 
split level 151: [/input-12, 5652] 
split level 152: [/input-12, 3914] 
split level 153: [/input-12, 5220] 
split level 154: [/input-12, 6498] 
split level 155: [/input-12, 395] 
split level 156: [/input-12, 1027] 
split level 157: [/input-4, 2215] 
split level 158: [/input-12, 2807] 
split level 159: [/input-12, 1788] 
split level 160: [/input-12, 1761] 
split level 161: [/input-12, 525] 
split level 162: [/input-12, 2452] 
split level 163: [/input-4, 2221] 
split level 164: [/input-12, 814] 
split level 165: [/input-12, 3957] 
split level 166: [/input-12, 7563] 
split level 167: [/input-4, 2184] 
split level 168: [/input-12, 6882] 
split level 169: [/input-4, 3162] 
split level 170: [/input-12, 6720] 
split level 171: [/input-4, 4007] 
split level 172: [/input-12, 5417] 
split level 173: [/input-12, 6507] 
split level 174: [/input-12, 605] 
split level 175: [/input-12, 3925] 
split level 176: [/input-12, 1451] 
split level 177: [/input-4, 2907] 
split level 178: [/input-12, 1450] 
split level 179: [/input-12, 6786] 
split level 180: [/input-4, 6501] 
split level 181: [/input-12, 110] 
split level 182: [/input-12, 3555] 
split level 183: [/input-12, 2043] 
split level 184: [/input-4, 7846] 
split level 185: [/input-12, 3467] 
split level 186: [/input-12, 4355] 
split level 187: [/input-12, 2550] 
split level 188: [/input-4, 6796] 
split level 189: [/input-4, 6533] 
split level 190: [/input-4, 1405] 
split level 191: [/input-4, 2233] 
split level 192: [/input-4, 3146] 
split level 193: [/input-12, 3313] 
split level 194: [/input-4, 7814] 
split level 195: [/input-12, 3468] 
split level 196: [/input-12, 3484] 
split level 197: [/input-4, 6822] 
split level 198: [/input-12, 841] 
split level 199: [/input-12, 5132] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17711925506591797
10 lb beta sum: 0.0, worst -0.17711400985717773
Time: prepare 0.0112    bound 0.1318    transfer 0.0027    finalize 0.0098    func 0.1583    
Accumulated time: func 0.2318    prepare 0.0213    bound 0.2048    transfer 0.0028    finalize 0.0101    
all_split False
======================Cut inference begins======================
max lb tensor(0.14540637) min lb tensor(-0.17710972)
Number of Verified Splits: 8 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.010779857635498047 
BICCOS Cumulative time: 0.010779857635498047
Preprocessing time: 0.010014057159423828 Inference time: 0.0003514289855957031 Add cuts time: 0.00013875961303710938 Cut analysis time: 0.00027561187744140625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16389 (1), -0.16369 (1), -0.16299 (1), -0.16271 (1), -0.16267 (1), -0.16172 (1), -0.16084 (1), -0.16034 (1), -0.15988 (1), -0.15962 (1), -0.15917 (1), -0.15855 (1), -0.15848 (1), -0.15743 (1), -0.15640 (1), -0.15635 (1), -0.15588 (1), -0.15552 (1), -0.15490 (1), -0.15451 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7651    set_bounds 0.0087    solve 0.1584    add 0.0775    
Accumulated time: pickout 0.0003    decision 0.7651    set_bounds 0.0087    solve 0.1584    add 0.0775    
Current (lb-rhs): -0.16388607025146484
50 domains visited
Cumulative time: 1.1016583442687988

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 110] 
split level 1: [/input-16, 171] [/input-16, 171] [/input-16, 171] [/input-16, 171] [/input-16, 171] [/input-16, 171] [/input-16, 171] [/input-16, 171] [/input-16, 171] [/input-16, 171] 
split level 2: [/input-16, 104] [/input-16, 170] [/input-16, 170] [/input-16, 170] [/input-16, 170] [/input-16, 170] [/input-16, 170] [/input-16, 170] [/input-16, 170] [/input-16, 170] 
split level 3: [/input-16, 111] [/input-16, 104] [/input-16, 104] [/input-16, 111] [/input-16, 104] [/input-16, 104] [/input-16, 104] [/input-16, 111] [/input-16, 104] [/input-16, 104] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12789416313171387
10 lb beta sum: 1.1250243186950684, worst -0.0695309042930603
Time: prepare 0.0069    bound 0.1494    transfer 0.0015    finalize 0.0051    func 0.1655    
Accumulated time: func 0.3973    prepare 0.0284    bound 0.3542    transfer 0.0043    finalize 0.0151    
all_split False
======================Cut inference begins======================
max lb tensor(0.25100374) min lb tensor(-0.06939793)
Number of Verified Splits: 303 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.030169010162353516 
BICCOS Cumulative time: 0.04094886779785156
Preprocessing time: 0.011866569519042969 Inference time: 0.012081146240234375 Add cuts time: 0.006043195724487305 Cut analysis time: 0.0001780986785888672
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0009    decision 0.0248    set_bounds 0.0127    solve 0.1656    add 0.0148    
Accumulated time: pickout 0.0012    decision 0.7899    set_bounds 0.0214    solve 0.3240    add 0.0922    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([170, 110]), tensor([-1., -1.]), tensor([0, 0]), tensor([-1.26703856e+34,  4.49057072e-02]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([170, 110]), tensor([-1.,  1.]), tensor([0, 0]), tensor([-1.26703856e+34,  2.18045518e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([170, 110]), tensor([ 1., -1.]), tensor([0, 0]), tensor([-1.26703856e+34,  1.08980462e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([170, 110]), tensor([1., 1.]), tensor([0, 0]), tensor([-1.26703856e+34,  2.40528509e-01]), tensor([0, 1]))}
Shallow branching resets to n domains:  4
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08992981910705566

all verified at 2th iter
Time: prepare 0.0003    bound 0.0194    transfer 0.0002    finalize 0.0003    func 0.0202    
Accumulated time: func 0.4175    prepare 0.0288    bound 0.3736    transfer 0.0045    finalize 0.0154    
After pruning, left:  0

Back to Regular BaB


Properties batch 3, size 1
Remaining timeout: 196.81825757026672
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 196.8181872367859
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 196.8181643486023
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 196.81791949272156
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 196.8178949356079
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 196.8178744316101
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 3.1822 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 175, vnnlib ID: 175 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-56.78467941, -58.90297318, -59.07059097, -59.81962967, -58.67394638,
         -59.81617355, -59.39533997, -58.37439346, -58.97521210, -58.21345520]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1471]; unstable size 1471; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 81, 1, 1471] with unstable size 80 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 41, 1, 1471] with unstable size 40 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1471] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [648]; unstable size 648; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 41, 1, 648] with unstable size 40 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 648] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [40]; unstable size 40; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 40] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.23309994,  0.74632049,  1.29553807,  0.17329073,  1.21449840,
          0.55492830, -0.41735673,  0.64625281, -0.48688126]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-56.78467941, -58.90297318, -59.07059097, -59.81962967, -58.67394638,
         -59.81617355, -59.39533997, -58.37439346, -58.97521210, -58.21345520]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.71it/s]100%|██████████| 1/1 [00:00<00:00,  7.70it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-57.96122360, -59.97881699, -59.94141769, -60.51564407, -59.35273743,
          -60.46493530, -60.23474884, -58.71460342, -60.06628036, -59.24467468],
         [-57.96122360, -59.97881699, -59.94141769, -60.51564407, -59.35273743,
          -60.46493530, -60.23474884, -58.71460342, -60.06628036, -59.24467468]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[2.01759338, 0.75337982, 1.28345108]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1329 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 4.505889415740967
alpha/beta optimization time: 1.4392600059509277
initial alpha-crown bounds: tensor([[-0.08878374,  0.84097743,  1.38889253,  0.26620722,  1.31235445,
          0.66827273, -0.30853987,  0.74987829, -0.32336950]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 3 ; Worst class: (+ rhs) -0.32336950302124023
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.3826024532318
Verifying property 0 with 1 instances.
##### Instance 175 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.08878374]], device='cuda:0') need to verify.
Model prediction is: tensor([-56.78467941, -58.90297318, -59.07059097, -59.81962967, -58.67394638,
        -59.81617355, -59.39533997, -58.37439346, -58.97521210, -58.21345520],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.08878374]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1471
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 635
Node /39 input 0: size torch.Size([250]) unstable 40
-----------------
# of unstable neurons: 2146
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 9.584426879882812e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08874368667602539
10 lb beta sum: 0.0, worst -0.08874845504760742
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0727    transfer 0.0001    finalize 0.0002    func 0.0733    
Accumulated time: func 0.0733    prepare 0.0002    bound 0.0727    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 213] 
split level 1: [/input-16, 111] 
split level 2: [/input-16, 247] 
split level 3: [/input-16, 239] 
split level 4: [/input-16, 236] 
split level 5: [/input-16, 195] 
split level 6: [/input-16, 78] 
split level 7: [/input-12, 7451] 
split level 8: [/input-12, 3099] 
split level 9: [/input-16, 237] 
split level 10: [/input-12, 7459] 
split level 11: [/input-16, 65] 
split level 12: [/input-12, 7465] 
split level 13: [/input-16, 218] 
split level 14: [/input-16, 126] 
split level 15: [/input-12, 3110] 
split level 16: [/input-16, 208] 
split level 17: [/input-12, 1387] 
split level 18: [/input-16, 64] 
split level 19: [/input-16, 140] 
split level 20: [/input-12, 5539] 
split level 21: [/input-12, 877] 
split level 22: [/input-12, 5195] 
split level 23: [/input-12, 2411] 
split level 24: [/input-12, 5541] 
split level 25: [/input-12, 3097] 
split level 26: [/input-12, 3105] 
split level 27: [/input-12, 5196] 
split level 28: [/input-12, 7525] 
split level 29: [/input-12, 1378] 
split level 30: [/input-12, 7017] 
split level 31: [/input-12, 3373] 
split level 32: [/input-12, 5549] 
split level 33: [/input-4, 4999] 
split level 34: [/input-12, 550] 
split level 35: [/input-12, 5778] 
split level 36: [/input-12, 2403] 
split level 37: [/input-12, 6883] 
split level 38: [/input-12, 6498] 
split level 39: [/input-12, 5230] 
split level 40: [/input-12, 3111] 
split level 41: [/input-12, 5204] 
split level 42: [/input-12, 5781] 
split level 43: [/input-16, 160] 
split level 44: [/input-12, 876] 
split level 45: [/input-12, 2284] 
split level 46: [/input-12, 1740] 
split level 47: [/input-12, 1197] 
split level 48: [/input-12, 5387] 
split level 49: [/input-12, 5545] 
split level 50: [/input-12, 2352] 
split level 51: [/input-12, 2278] 
split level 52: [/input-12, 5222] 
split level 53: [/input-12, 872] 
split level 54: [/input-12, 1810] 
split level 55: [/input-12, 1025] 
split level 56: [/input-12, 1994] 
split level 57: [/input-12, 8144] 
split level 58: [/input-12, 6509] 
split level 59: [/input-12, 542] 
split level 60: [/input-12, 501] 
split level 61: [/input-4, 1672] 
split level 62: [/input-12, 1036] 
split level 63: [/input-12, 7904] 
split level 64: [/input-12, 5259] 
split level 65: [/input-12, 1828] 
split level 66: [/input-12, 6992] 
split level 67: [/input-4, 2714] 
split level 68: [/input-12, 4753] 
split level 69: [/input-4, 4777] 
split level 70: [/input-12, 1028] 
split level 71: [/input-12, 8174] 
split level 72: [/input-4, 1097] 
split level 73: [/input-12, 3915] 
split level 74: [/input-4, 1192] 
split level 75: [/input-12, 3609] 
split level 76: [/input-12, 2309] 
split level 77: [/input-4, 3224] 
split level 78: [/input-4, 918] 
split level 79: [/input-12, 3876] 
split level 80: [/input-12, 3906] 
split level 81: [/input-12, 5347] 
split level 82: [/input-12, 2308] 
split level 83: [/input-4, 1654] 
split level 84: [/input-12, 4126] 
split level 85: [/input-12, 1421] 
split level 86: [/input-12, 5532] 
split level 87: [/input-12, 3382] 
split level 88: [/input-12, 1731] 
split level 89: [/input-12, 7533] 
split level 90: [/input-4, 3225] 
split level 91: [/input-12, 2509] 
split level 92: [/input-12, 1754] 
split level 93: [/input-4, 3735] 
split level 94: [/input-12, 2358] 
split level 95: [/input-12, 5216] 
split level 96: [/input-12, 5814] 
split level 97: [/input-12, 2356] 
split level 98: [/input-4, 1080] 
split level 99: [/input-12, 7448] 
split level 100: [/input-4, 2700] 
split level 101: [/input-4, 3143] 
split level 102: [/input-4, 3144] 
split level 103: [/input-12, 4451] 
split level 104: [/input-4, 1081] 
split level 105: [/input-4, 1098] 
split level 106: [/input-16, 82] 
split level 107: [/input-12, 1451] 
split level 108: [/input-12, 5427] 
split level 109: [/input-12, 7019] 
split level 110: [/input-12, 4205] 
split level 111: [/input-12, 2544] 
split level 112: [/input-12, 884] 
split level 113: [/input-12, 784] 
split level 114: [/input-12, 5737] 
split level 115: [/input-12, 2526] 
split level 116: [/input-12, 5750] 
split level 117: [/input-12, 2291] 
split level 118: [/input-4, 5772] 
split level 119: [/input-16, 154] 
split level 120: [/input-4, 2890] 
split level 121: [/input-12, 3889] 
split level 122: [/input-4, 6712] 
split level 123: [/input-12, 4145] 
split level 124: [/input-12, 6754] 
split level 125: [/input-4, 5430] 
split level 126: [/input-4, 3641] 
split level 127: [/input-4, 4425] 
split level 128: [/input-4, 1082] 
split level 129: [/input-4, 1676] 
split level 130: [/input-12, 1449] 
split level 131: [/input-12, 4355] 
split level 132: [/input-4, 6713] 
split level 133: [/input-12, 1228] 
split level 134: [/input-12, 4422] 
split level 135: [/input-4, 4407] 
split level 136: [/input-4, 56] 
split level 137: [/input-4, 6679] 
split level 138: [/input-12, 6505] 
split level 139: [/input-4, 3657] 
split level 140: [/input-12, 6752] 
split level 141: [/input-12, 3625] 
split level 142: [/input-4, 6728] 
split level 143: [/input-4, 3702] 
split level 144: [/input-4, 6711] 
split level 145: [/input-12, 3843] 
split level 146: [/input-4, 3203] 
split level 147: [/input-4, 8084] 
split level 148: [/input-4, 3429] 
split level 149: [/input-4, 7990] 
split level 150: [/input-12, 2046] 
split level 151: [/input-12, 5635] 
split level 152: [/input-4, 3747] 
split level 153: [/input-4, 6714] 
split level 154: [/input-4, 3145] 
split level 155: [/input-4, 5415] 
split level 156: [/input-12, 3797] 
split level 157: [/input-4, 4389] 
split level 158: [/input-4, 6199] 
split level 159: [/input-12, 6723] 
split level 160: [/input-12, 1230] 
split level 161: [/input-4, 1099] 
split level 162: [/input-4, 8053] 
split level 163: [/input-4, 457] 
split level 164: [/input-12, 6760] 
split level 165: [/input-4, 3655] 
split level 166: [/input-4, 5701] 
split level 167: [/input-12, 3914] 
split level 168: [/input-4, 3125] 
split level 169: [/input-4, 1334] 
split level 170: [/input-4, 3718] 
split level 171: [/input-4, 4980] 
split level 172: [/input-4, 7885] 
split level 173: [/input-4, 1593] 
split level 174: [/input-12, 7314] 
split level 175: [/input-4, 2873] 
split level 176: [/input-4, 2870] 
split level 177: [/input-12, 6888] 
split level 178: [/input-12, 2555] 
split level 179: [/input-12, 3573] 
split level 180: [/input-12, 5636] 
split level 181: [/input-4, 3146] 
split level 182: [/input-4, 4388] 
split level 183: [/input-4, 6439] 
split level 184: [/input-12, 1217] 
split level 185: [/input-12, 4902] 
split level 186: [/input-4, 4476] 
split level 187: [/input-4, 3142] 
split level 188: [/input-4, 2979] 
split level 189: [/input-4, 147] 
split level 190: [/input-4, 2209] 
split level 191: [/input-12, 5637] 
split level 192: [/input-4, 7721] 
split level 193: [/input-4, 1602] 
split level 194: [/input-4, 7972] 
split level 195: [/input-4, 1219] 
split level 196: [/input-4, 5514] 
split level 197: [/input-4, 5667] 
split level 198: [/input-4, 3473] 
split level 199: [/input-12, 4896] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08836936950683594
10 lb beta sum: 0.0, worst -0.08836698532104492
Time: prepare 0.0115    bound 0.1331    transfer 0.0021    finalize 0.0136    func 0.1629    
Accumulated time: func 0.2362    prepare 0.0214    bound 0.2059    transfer 0.0022    finalize 0.0138    
all_split False
======================Cut inference begins======================
max lb tensor(0.53211331) min lb tensor(-0.08836269)
Number of Verified Splits: 15 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.010852813720703125 
BICCOS Cumulative time: 0.010852813720703125
Preprocessing time: 0.009949922561645508 Inference time: 0.0005657672882080078 Add cuts time: 0.00018453598022460938 Cut analysis time: 0.000152587890625
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.7620    set_bounds 0.0102    solve 0.1630    add 0.0098    
Accumulated time: pickout 0.0003    decision 0.7620    set_bounds 0.0102    solve 0.1630    add 0.0098    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([213]), tensor([-1.]), tensor([0]), tensor([237.97143555]), tensor([0]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([213]), tensor([1.]), tensor([0]), tensor([-1.26703658e+34]), tensor([0]))}
Shallow branching resets to n domains:  2
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.013437271118164062

all verified at 1th iter
Time: prepare 0.0003    bound 0.0127    transfer 0.0001    finalize 0.0003    func 0.0134    
Accumulated time: func 0.2497    prepare 0.0217    bound 0.2186    transfer 0.0023    finalize 0.0141    
After pruning, left:  0

Back to Regular BaB


Properties batch 1, size 1
Remaining timeout: 197.13549065589905
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 197.13542699813843
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 197.1354033946991
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 197.13538122177124
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 197.13536071777344
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.13534116744995
Verifying property 6 with 1 instances.
##### Instance 175 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.30853987]], device='cuda:0') need to verify.
Model prediction is: tensor([-56.78467941, -58.90297318, -59.07059097, -59.81962967, -58.67394638,
        -59.81617355, -59.39533997, -58.37439346, -58.97521210, -58.21345520],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.30853987]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1471
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 635
Node /39 input 0: size torch.Size([250]) unstable 40
-----------------
# of unstable neurons: 2146
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00012636184692382812
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.30851125717163086
10 lb beta sum: 0.0, worst -0.30851614475250244
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0724    transfer 0.0001    finalize 0.0002    func 0.0730    
Accumulated time: func 0.0730    prepare 0.0002    bound 0.0724    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 225] 
split level 1: [/input-16, 99] 
split level 2: [/input-16, 7] 
split level 3: [/input-16, 154] 
split level 4: [/input-16, 24] 
split level 5: [/input-16, 126] 
split level 6: [/input-16, 115] 
split level 7: [/input-16, 64] 
split level 8: [/input-16, 157] 
split level 9: [/input-16, 230] 
split level 10: [/input-16, 111] 
split level 11: [/input-16, 160] 
split level 12: [/input-12, 7588] 
split level 13: [/input-12, 542] 
split level 14: [/input-12, 801] 
split level 15: [/input-16, 140] 
split level 16: [/input-12, 6251] 
split level 17: [/input-16, 110] 
split level 18: [/input-12, 5557] 
split level 19: [/input-12, 2323] 
split level 20: [/input-12, 550] 
split level 21: [/input-12, 1836] 
split level 22: [/input-12, 545] 
split level 23: [/input-12, 2018] 
split level 24: [/input-12, 3300] 
split level 25: [/input-12, 1994] 
split level 26: [/input-12, 1962] 
split level 27: [/input-12, 2010] 
split level 28: [/input-16, 82] 
split level 29: [/input-12, 6261] 
split level 30: [/input-12, 7333] 
split level 31: [/input-12, 2526] 
split level 32: [/input-12, 2611] 
split level 33: [/input-12, 2017] 
split level 34: [/input-12, 1954] 
split level 35: [/input-12, 8043] 
split level 36: [/input-12, 5737] 
split level 37: [/input-12, 2330] 
split level 38: [/input-12, 4206] 
split level 39: [/input-12, 813] 
split level 40: [/input-12, 6258] 
split level 41: [/input-12, 5394] 
split level 42: [/input-12, 8035] 
split level 43: [/input-12, 1199] 
split level 44: [/input-12, 3625] 
split level 45: [/input-12, 7198] 
split level 46: [/input-12, 3110] 
split level 47: [/input-4, 5482] 
split level 48: [/input-12, 1810] 
split level 49: [/input-4, 8099] 
split level 50: [/input-12, 1828] 
split level 51: [/input-12, 5564] 
split level 52: [/input-12, 1731] 
split level 53: [/input-12, 3291] 
split level 54: [/input-12, 6517] 
split level 55: [/input-12, 1568] 
split level 56: [/input-12, 4753] 
split level 57: [/input-12, 2475] 
split level 58: [/input-12, 5387] 
split level 59: [/input-12, 7979] 
split level 60: [/input-12, 2596] 
split level 61: [/input-12, 2506] 
split level 62: [/input-12, 2308] 
split level 63: [/input-12, 366] 
split level 64: [/input-4, 5508] 
split level 65: [/input-12, 7184] 
split level 66: [/input-12, 808] 
split level 67: [/input-12, 2482] 
split level 68: [/input-12, 1955] 
split level 69: [/input-12, 2915] 
split level 70: [/input-12, 6246] 
split level 71: [/input-12, 5562] 
split level 72: [/input-12, 6754] 
split level 73: [/input-12, 784] 
split level 74: [/input-12, 7125] 
split level 75: [/input-12, 3569] 
split level 76: [/input-12, 2588] 
split level 77: [/input-4, 8114] 
split level 78: [/input-12, 2612] 
split level 79: [/input-12, 2309] 
split level 80: [/input-12, 2613] 
split level 81: [/input-12, 5515] 
split level 82: [/input-12, 2479] 
split level 83: [/input-12, 209] 
split level 84: [/input-12, 5322] 
split level 85: [/input-12, 5347] 
split level 86: [/input-12, 2471] 
split level 87: [/input-4, 1226] 
split level 88: [/input-12, 2044] 
split level 89: [/input-4, 2737] 
split level 90: [/input-12, 7314] 
split level 91: [/input-4, 1081] 
split level 92: [/input-4, 56] 
split level 93: [/input-4, 8088] 
split level 94: [/input-12, 6515] 
split level 95: [/input-4, 6364] 
split level 96: [/input-12, 1045] 
split level 97: [/input-4, 8056] 
split level 98: [/input-12, 3915] 
split level 99: [/input-4, 1130] 
split level 100: [/input-12, 6760] 
split level 101: [/input-12, 8013] 
split level 102: [/input-12, 7161] 
split level 103: [/input-12, 2466] 
split level 104: [/input-4, 4425] 
split level 105: [/input-4, 1082] 
split level 106: [/input-4, 3205] 
split level 107: [/input-4, 6249] 
split level 108: [/input-4, 3142] 
split level 109: [/input-12, 7160] 
split level 110: [/input-4, 1097] 
split level 111: [/input-4, 6250] 
split level 112: [/input-4, 8050] 
split level 113: [/input-4, 918] 
split level 114: [/input-12, 2025] 
split level 115: [/input-4, 3144] 
split level 116: [/input-12, 7156] 
split level 117: [/input-4, 1080] 
split level 118: [/input-12, 2595] 
split level 119: [/input-4, 3911] 
split level 120: [/input-4, 4932] 
split level 121: [/input-12, 1815] 
split level 122: [/input-12, 2603] 
split level 123: [/input-12, 2509] 
split level 124: [/input-4, 8084] 
split level 125: [/input-12, 2587] 
split level 126: [/input-4, 5460] 
split level 127: [/input-12, 2045] 
split level 128: [/input-12, 7904] 
split level 129: [/input-12, 4428] 
split level 130: [/input-4, 1641] 
split level 131: [/input-4, 5769] 
split level 132: [/input-12, 2610] 
split level 133: [/input-12, 5635] 
split level 134: [/input-12, 5340] 
split level 135: [/input-4, 1190] 
split level 136: [/input-4, 3655] 
split level 137: [/input-12, 1360] 
split level 138: [/input-12, 3322] 
split level 139: [/input-4, 1642] 
split level 140: [/input-12, 2609] 
split level 141: [/input-4, 408] 
split level 142: [/input-12, 6752] 
split level 143: [/input-4, 7745] 
split level 144: [/input-4, 3673] 
split level 145: [/input-12, 2902] 
split level 146: [/input-4, 3641] 
split level 147: [/input-12, 5363] 
split level 148: [/input-12, 2297] 
split level 149: [/input-12, 2604] 
split level 150: [/input-4, 313] 
split level 151: [/input-4, 229] 
split level 152: [/input-4, 4963] 
split level 153: [/input-4, 1602] 
split level 154: [/input-4, 1621] 
split level 155: [/input-4, 4962] 
split level 156: [/input-4, 3149] 
split level 157: [/input-4, 3457] 
split level 158: [/input-4, 6230] 
split level 159: [/input-4, 3657] 
split level 160: [/input-12, 2307] 
split level 161: [/input-12, 4205] 
split level 162: [/input-4, 4281] 
split level 163: [/input-4, 3182] 
split level 164: [/input-4, 8097] 
split level 165: [/input-12, 6723] 
split level 166: [/input-4, 3670] 
split level 167: [/input-4, 3278] 
split level 168: [/input-12, 4902] 
split level 169: [/input-4, 2761] 
split level 170: [/input-4, 3483] 
split level 171: [/input-4, 3958] 
split level 172: [/input-4, 4980] 
split level 173: [/input-4, 1236] 
split level 174: [/input-12, 5814] 
split level 175: [/input-4, 3045] 
split level 176: [/input-4, 4407] 
split level 177: [/input-4, 1755] 
split level 178: [/input-4, 5100] 
split level 179: [/input-12, 6502] 
split level 180: [/input-4, 1260] 
split level 181: [/input-4, 6340] 
split level 182: [/input-4, 5589] 
split level 183: [/input-4, 1593] 
split level 184: [/input-4, 4806] 
split level 185: [/input-12, 3525] 
split level 186: [/input-4, 1251] 
split level 187: [/input-4, 5701] 
split level 188: [/input-12, 5690] 
split level 189: [/input-12, 8024] 
split level 190: [/input-4, 6356] 
split level 191: [/input-4, 2873] 
split level 192: [/input-4, 2910] 
split level 193: [/input-12, 6248] 
split level 194: [/input-12, 5636] 
split level 195: [/input-4, 1334] 
split level 196: [/input-4, 2870] 
split level 197: [/input-4, 5745] 
split level 198: [/input-4, 5065] 
split level 199: [/input-4, 5606] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3081315755844116
10 lb beta sum: 0.0, worst -0.30814385414123535
Time: prepare 0.0115    bound 0.1323    transfer 0.0015    finalize 0.0058    func 0.1537    
Accumulated time: func 0.2267    prepare 0.0214    bound 0.2048    transfer 0.0016    finalize 0.0060    
all_split False
======================Cut inference begins======================
max lb tensor(0.46135855) min lb tensor(-0.30812693)
Number of Verified Splits: 10 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 10
#cuts >= 20: 0
BICCOS time: 0.010862588882446289 
BICCOS Cumulative time: 0.010862588882446289
Preprocessing time: 0.010020256042480469 Inference time: 0.0003998279571533203 Add cuts time: 0.0001556873321533203 Cut analysis time: 0.0002868175506591797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.29437 (1), -0.29413 (1), -0.29382 (1), -0.29242 (1), -0.29186 (1), -0.29134 (1), -0.29120 (1), -0.29036 (1), -0.29024 (1), -0.28994 (1), -0.28989 (1), -0.28940 (1), -0.28805 (1), -0.28776 (1), -0.28736 (1), -0.28641 (1), -0.28564 (1), -0.28533 (1), -0.28478 (1), -0.28398 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7620    set_bounds 0.0092    solve 0.1538    add 0.1238    
Accumulated time: pickout 0.0003    decision 0.7620    set_bounds 0.0092    solve 0.1538    add 0.1238    
Current (lb-rhs): -0.29437434673309326
50 domains visited
Cumulative time: 1.1401312351226807

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] 
split level 1: [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 24] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 154] 
split level 2: [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 24] [/input-16, 126] [/input-16, 126] [/input-16, 24] [/input-16, 24] [/input-16, 24] 
split level 3: [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 126] [/input-16, 126] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2560853958129883
10 lb beta sum: 1.5141700506210327, worst -0.04122281074523926
Time: prepare 0.0071    bound 0.1510    transfer 0.0015    finalize 0.0051    func 0.1678    
Accumulated time: func 0.3946    prepare 0.0288    bound 0.3558    transfer 0.0031    finalize 0.0112    
all_split False
======================Cut inference begins======================
max lb tensor(0.50394058) min lb tensor(-0.04100776)
Number of Verified Splits: 260 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 25
#cuts >= 20: 0
BICCOS time: 0.0270535945892334 
BICCOS Cumulative time: 0.03791618347167969
Preprocessing time: 0.011761903762817383 Inference time: 0.01035308837890625 Add cuts time: 0.004459857940673828 Cut analysis time: 0.0004787445068359375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01487 (2), -0.01484 (2), -0.01483 (2), -0.01483 (2), -0.01483 (2), -0.01481 (2), -0.01337 (2), -0.01337 (2), -0.01335 (2), -0.01335 (2), -0.01329 (2), -0.01328 (2), -0.01326 (2), -0.01326 (2), -0.01144 (2), -0.01144 (2), -0.01142 (2), -0.01142 (2), -0.00603 (2), -0.00594 (2), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0250    set_bounds 0.0121    solve 0.1679    add 0.1013    
Accumulated time: pickout 0.0010    decision 0.7871    set_bounds 0.0212    solve 0.3217    add 0.2251    
Current (lb-rhs): -0.014870643615722656
100 domains visited
Cumulative time: 1.4744164943695068

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 225] [/input-16, 154] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 154] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] 
split level 1: [/input-16, 154] [/input-16, 24] [/input-16, 154] [/input-16, 24] [/input-16, 154] [/input-16, 24] [/input-16, 24] [/input-16, 154] [/input-16, 24] [/input-16, 154] 
split level 2: [/input-16, 24] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 24] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 24] 
split level 3: [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.21837854385375977

all verified at 3th iter
Time: prepare 0.0071    bound 0.0400    transfer 0.0015    finalize 0.0049    func 0.0561    
Accumulated time: func 0.4507    prepare 0.0361    bound 0.3958    transfer 0.0045    finalize 0.0161    
all_split False
======================Cut inference begins======================
max lb tensor(0.45217729) min lb tensor(0.00126612)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 75.
#cuts 1-3: 75
#cuts >= 20: 0
BICCOS time: 0.04048871994018555 
BICCOS Cumulative time: 0.07840490341186523
Preprocessing time: 0.011674165725708008 Inference time: 0.017180204391479492 Add cuts time: 0.010201215744018555 Cut analysis time: 0.0014331340789794922
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0006    decision 0.0263    set_bounds 0.0157    solve 0.0562    add 0.0243    
Accumulated time: pickout 0.0016    decision 0.8134    set_bounds 0.0370    solve 0.3779    add 0.2494    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([157, 225]), tensor([-1., -1.]), tensor([0, 0]), tensor([1.37435272e-04, 4.71432507e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([157, 225]), tensor([-1.,  1.]), tensor([0, 0]), tensor([0.00013744, 0.04249315]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([157, 225]), tensor([ 1., -1.]), tensor([0, 0]), tensor([-1.26704054e+34,  4.89673078e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([157, 225, 154]), tensor([ 1.,  1., -1.]), tensor([0, 0, 0]), tensor([-1.26704054e+34,  2.67727673e-01,  5.04321307e-02]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([157, 225, 154]), tensor([1., 1., 1.]), tensor([0, 0, 0]), tensor([-1.26704054e+34,  2.67727673e-01,  7.51331300e-02]), tensor([0, 1, 2]))}
Shallow branching resets to n domains:  5
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1785515546798706

all verified at 2th iter
Time: prepare 0.0004    bound 0.0261    transfer 0.0001    finalize 0.0003    func 0.0270    
Accumulated time: func 0.4776    prepare 0.0365    bound 0.4219    transfer 0.0047    finalize 0.0164    
After pruning, left:  0

Back to Regular BaB


Properties batch 7, size 1
Remaining timeout: 195.31509065628052
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 195.31501603126526
Verifying property 8 with 1 instances.
##### Instance 175 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.32336950]], device='cuda:0') need to verify.
Model prediction is: tensor([-56.78467941, -58.90297318, -59.07059097, -59.81962967, -58.67394638,
        -59.81617355, -59.39533997, -58.37439346, -58.97521210, -58.21345520],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.32336950]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1471
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 635
Node /39 input 0: size torch.Size([250]) unstable 40
-----------------
# of unstable neurons: 2146
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00010013580322265625
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.32332658767700195
10 lb beta sum: 0.0, worst -0.3233342170715332
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0735    transfer 0.0001    finalize 0.0002    func 0.0741    
Accumulated time: func 0.0741    prepare 0.0002    bound 0.0735    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 237] 
split level 1: [/input-16, 78] 
split level 2: [/input-16, 213] 
split level 3: [/input-16, 65] 
split level 4: [/input-16, 239] 
split level 5: [/input-16, 111] 
split level 6: [/input-16, 195] 
split level 7: [/input-16, 236] 
split level 8: [/input-16, 247] 
split level 9: [/input-12, 7465] 
split level 10: [/input-16, 225] 
split level 11: [/input-16, 64] 
split level 12: [/input-12, 7459] 
split level 13: [/input-16, 230] 
split level 14: [/input-16, 140] 
split level 15: [/input-16, 126] 
split level 16: [/input-16, 160] 
split level 17: [/input-12, 3110] 
split level 18: [/input-16, 218] 
split level 19: [/input-12, 7451] 
split level 20: [/input-12, 2411] 
split level 21: [/input-12, 3099] 
split level 22: [/input-12, 1387] 
split level 23: [/input-16, 154] 
split level 24: [/input-16, 165] 
split level 25: [/input-12, 1828] 
split level 26: [/input-12, 2403] 
split level 27: [/input-12, 2284] 
split level 28: [/input-12, 5539] 
split level 29: [/input-12, 7525] 
split level 30: [/input-16, 157] 
split level 31: [/input-12, 3105] 
split level 32: [/input-16, 24] 
split level 33: [/input-12, 550] 
split level 34: [/input-12, 1994] 
split level 35: [/input-12, 6883] 
split level 36: [/input-4, 4999] 
split level 37: [/input-12, 1036] 
split level 38: [/input-12, 5532] 
split level 39: [/input-12, 5230] 
split level 40: [/input-12, 1731] 
split level 41: [/input-12, 5549] 
split level 42: [/input-16, 115] 
split level 43: [/input-12, 5387] 
split level 44: [/input-12, 877] 
split level 45: [/input-12, 209] 
split level 46: [/input-12, 5427] 
split level 47: [/input-12, 872] 
split level 48: [/input-12, 2278] 
split level 49: [/input-12, 884] 
split level 50: [/input-12, 6498] 
split level 51: [/input-12, 1810] 
split level 52: [/input-12, 2285] 
split level 53: [/input-12, 1739] 
split level 54: [/input-12, 6509] 
split level 55: [/input-12, 6754] 
split level 56: [/input-4, 6281] 
split level 57: [/input-12, 2544] 
split level 58: [/input-12, 3111] 
split level 59: [/input-12, 2017] 
split level 60: [/input-12, 5259] 
split level 61: [/input-12, 5195] 
split level 62: [/input-12, 1740] 
split level 63: [/input-12, 545] 
split level 64: [/input-12, 5347] 
split level 65: [/input-12, 1378] 
split level 66: [/input-12, 1028] 
split level 67: [/input-12, 7904] 
split level 68: [/input-12, 5781] 
split level 69: [/input-12, 5541] 
split level 70: [/input-12, 542] 
split level 71: [/input-12, 8174] 
split level 72: [/input-12, 3915] 
split level 73: [/input-12, 5809] 
split level 74: [/input-12, 3097] 
split level 75: [/input-12, 2352] 
split level 76: [/input-12, 5222] 
split level 77: [/input-12, 2018] 
split level 78: [/input-12, 881] 
split level 79: [/input-12, 7533] 
split level 80: [/input-12, 6752] 
split level 81: [/input-12, 1229] 
split level 82: [/input-12, 4355] 
split level 83: [/input-12, 538] 
split level 84: [/input-12, 4126] 
split level 85: [/input-12, 1421] 
split level 86: [/input-4, 918] 
split level 87: [/input-12, 2509] 
split level 88: [/input-12, 2526] 
split level 89: [/input-4, 6261] 
split level 90: [/input-12, 1220] 
split level 91: [/input-12, 3906] 
split level 92: [/input-12, 1228] 
split level 93: [/input-12, 5750] 
split level 94: [/input-12, 2356] 
split level 95: [/input-12, 4422] 
split level 96: [/input-12, 4753] 
split level 97: [/input-4, 4980] 
split level 98: [/input-12, 5737] 
split level 99: [/input-12, 5814] 
split level 100: [/input-12, 6760] 
split level 101: [/input-12, 784] 
split level 102: [/input-4, 1097] 
split level 103: [/input-12, 4354] 
split level 104: [/input-12, 1025] 
split level 105: [/input-12, 5216] 
split level 106: [/input-4, 6283] 
split level 107: [/input-12, 5394] 
split level 108: [/input-12, 2548] 
split level 109: [/input-4, 7054] 
split level 110: [/input-12, 2323] 
split level 111: [/input-4, 2714] 
split level 112: [/input-4, 8053] 
split level 113: [/input-12, 1045] 
split level 114: [/input-12, 2339] 
split level 115: [/input-12, 1217] 
split level 116: [/input-12, 1540] 
split level 117: [/input-12, 2309] 
split level 118: [/input-12, 6765] 
split level 119: [/input-12, 2010] 
split level 120: [/input-12, 6802] 
split level 121: [/input-12, 4428] 
split level 122: [/input-4, 4777] 
split level 123: [/input-12, 1197] 
split level 124: [/input-4, 1081] 
split level 125: [/input-12, 2800] 
split level 126: [/input-12, 4363] 
split level 127: [/input-4, 3702] 
split level 128: [/input-12, 5204] 
split level 129: [/input-12, 2291] 
split level 130: [/input-12, 2046] 
split level 131: [/input-4, 6614] 
split level 132: [/input-12, 1230] 
split level 133: [/input-12, 4398] 
split level 134: [/input-12, 4787] 
split level 135: [/input-12, 876] 
split level 136: [/input-4, 3735] 
split level 137: [/input-12, 2555] 
split level 138: [/input-4, 8099] 
split level 139: [/input-4, 8084] 
split level 140: [/input-12, 6888] 
split level 141: [/input-4, 1654] 
split level 142: [/input-4, 3142] 
split level 143: [/input-12, 1238] 
split level 144: [/input-4, 1098] 
split level 145: [/input-4, 7885] 
split level 146: [/input-4, 4709] 
split level 147: [/input-12, 2025] 
split level 148: [/input-4, 4425] 
split level 149: [/input-4, 1190] 
split level 150: [/input-4, 3224] 
split level 151: [/input-12, 3452] 
split level 152: [/input-4, 1080] 
split level 153: [/input-4, 1621] 
split level 154: [/input-12, 1221] 
split level 155: [/input-4, 3718] 
split level 156: [/input-4, 3144] 
split level 157: [/input-4, 4963] 
split level 158: [/input-12, 2554] 
split level 159: [/input-4, 3747] 
split level 160: [/input-12, 6226] 
split level 161: [/input-4, 3225] 
split level 162: [/input-12, 6514] 
split level 163: [/input-12, 501] 
split level 164: [/input-12, 4795] 
split level 165: [/input-12, 4362] 
split level 166: [/input-4, 3655] 
split level 167: [/input-4, 6713] 
split level 168: [/input-12, 3797] 
split level 169: [/input-12, 3382] 
split level 170: [/input-4, 5701] 
split level 171: [/input-12, 1538] 
split level 172: [/input-12, 6992] 
split level 173: [/input-12, 6728] 
split level 174: [/input-12, 4395] 
split level 175: [/input-4, 3734] 
split level 176: [/input-4, 5514] 
split level 177: [/input-12, 7314] 
split level 178: [/input-4, 3933] 
split level 179: [/input-12, 3914] 
split level 180: [/input-4, 4993] 
split level 181: [/input-4, 3657] 
split level 182: [/input-4, 1676] 
split level 183: [/input-12, 4557] 
split level 184: [/input-4, 4407] 
split level 185: [/input-4, 1641] 
split level 186: [/input-4, 6230] 
split level 187: [/input-12, 6246] 
split level 188: [/input-4, 8056] 
split level 189: [/input-4, 4762] 
split level 190: [/input-4, 6714] 
split level 191: [/input-4, 5445] 
split level 192: [/input-4, 3145] 
split level 193: [/input-4, 1099] 
split level 194: [/input-4, 6711] 
split level 195: [/input-4, 5745] 
split level 196: [/input-4, 1602] 
split level 197: [/input-4, 1334] 
split level 198: [/input-12, 366] 
split level 199: [/input-4, 3670] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3230557441711426
10 lb beta sum: 0.0, worst -0.3230557441711426
Time: prepare 0.0116    bound 0.1322    transfer 0.0023    finalize 0.0063    func 0.1549    
Accumulated time: func 0.2290    prepare 0.0215    bound 0.2057    transfer 0.0025    finalize 0.0065    
all_split False
======================Cut inference begins======================
max lb tensor(0.27637863) min lb tensor(-0.32305288)
Number of Verified Splits: 5 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.010884284973144531 
BICCOS Cumulative time: 0.010884284973144531
Preprocessing time: 0.00998687744140625 Inference time: 0.0002262592315673828 Add cuts time: 8.130073547363281e-05 Cut analysis time: 0.0005898475646972656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.30189 (1), -0.30093 (1), -0.29975 (1), -0.29959 (1), -0.29939 (1), -0.29920 (1), -0.29883 (1), -0.29837 (1), -0.29729 (1), -0.29619 (1), -0.29417 (1), -0.29382 (1), -0.29104 (1), -0.29033 (1), -0.28917 (1), -0.28899 (1), -0.28859 (1), -0.28833 (1), -0.28656 (1), -0.28523 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7638    set_bounds 0.0092    solve 0.1550    add 0.0825    
Accumulated time: pickout 0.0003    decision 0.7638    set_bounds 0.0092    solve 0.1550    add 0.0825    
Current (lb-rhs): -0.3018932342529297
50 domains visited
Cumulative time: 1.1026675701141357

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 237] [/input-16, 237] [/input-16, 237] [/input-16, 237] [/input-16, 237] [/input-16, 237] [/input-16, 237] [/input-16, 237] [/input-16, 237] [/input-16, 237] 
split level 1: [/input-16, 78] [/input-16, 78] [/input-16, 213] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] 
split level 2: [/input-16, 65] [/input-16, 65] [/input-16, 65] [/input-16, 65] [/input-16, 65] [/input-16, 65] [/input-16, 65] [/input-16, 213] [/input-16, 65] [/input-16, 65] 
split level 3: [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2682662010192871
10 lb beta sum: 0.8507116436958313, worst -0.2566836476325989
Time: prepare 0.0067    bound 0.1517    transfer 0.0018    finalize 0.0069    func 0.1698    
Accumulated time: func 0.3988    prepare 0.0284    bound 0.3574    transfer 0.0042    finalize 0.0134    
all_split False
======================Cut inference begins======================
max lb tensor(0.33036041) min lb tensor(-0.25662333)
Number of Verified Splits: 148 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 15
#cuts >= 20: 0
BICCOS time: 0.02080512046813965 
BICCOS Cumulative time: 0.03168940544128418
Preprocessing time: 0.012009620666503906 Inference time: 0.0063953399658203125 Add cuts time: 0.0020411014556884766 Cut analysis time: 0.0003590583801269531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07261 (2), -0.07175 (2), -0.07062 (2), -0.07047 (2), -0.07019 (2), -0.07012 (2), -0.07000 (2), -0.06902 (2), -0.06866 (2), -0.06865 (2), -0.06775 (2), -0.06759 (2), -0.06755 (2), -0.06667 (2), -0.06610 (2), -0.06555 (2), -0.06513 (2), -0.06194 (2), -0.06070 (2), -0.06038 (2), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0248    set_bounds 0.0131    solve 0.1698    add 0.0976    
Accumulated time: pickout 0.0009    decision 0.7885    set_bounds 0.0223    solve 0.3249    add 0.1801    
Current (lb-rhs): -0.07261073589324951
100 domains visited
Cumulative time: 1.429602861404419

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 237] [/input-16, 237] [/input-16, 237] [/input-16, 237] [/input-16, 237] [/input-16, 237] [/input-16, 237] [/input-16, 237] [/input-16, 237] [/input-16, 237] 
split level 1: [/input-16, 78] [/input-16, 78] [/input-16, 213] [/input-16, 213] [/input-16, 78] [/input-16, 78] [/input-16, 213] [/input-16, 213] [/input-16, 78] [/input-16, 78] 
split level 2: [/input-16, 213] [/input-16, 213] [/input-16, 111] [/input-16, 111] [/input-16, 213] [/input-16, 213] [/input-16, 195] [/input-16, 195] [/input-16, 213] [/input-16, 213] 
split level 3: [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-16, 236] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10589218139648438

all verified at 2th iter
Time: prepare 0.0067    bound 0.0248    transfer 0.0015    finalize 0.0051    func 0.0407    
Accumulated time: func 0.4395    prepare 0.0354    bound 0.3822    transfer 0.0058    finalize 0.0185    
all_split False
======================Cut inference begins======================
max lb tensor(0.33606029) min lb tensor(0.00073290)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.04110121726989746 
BICCOS Cumulative time: 0.07279062271118164
Preprocessing time: 0.011693954467773438 Inference time: 0.017414569854736328 Add cuts time: 0.011799335479736328 Cut analysis time: 0.0001933574676513672
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0006    decision 0.0250    set_bounds 0.0157    solve 0.0408    add 0.0187    
Accumulated time: pickout 0.0016    decision 0.8135    set_bounds 0.0379    solve 0.3657    add 0.1988    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 65,  78, 237]), tensor([-1., -1., -1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  1.60766289e-01,  3.40968549e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 65,  78, 237]), tensor([-1., -1.,  1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  1.60766289e-01,  1.39145598e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([65, 78]), tensor([-1.,  1.]), tensor([0, 0]), tensor([-1.26703658e+34,  2.43282363e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 65, 195, 237]), tensor([ 1., -1., -1.]), tensor([0, 0, 0]), tensor([-3.73901243e-34,  1.76705644e-01,  3.42527449e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 65, 195, 237]), tensor([ 1., -1.,  1.]), tensor([0, 0, 0]), tensor([-3.73901243e-34,  1.76705644e-01,  1.41105220e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 65, 195, 237]), tensor([ 1.,  1., -1.]), tensor([0, 0, 0]), tensor([-3.73901243e-34,  1.58018515e-01,  3.39255989e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 65, 195, 237]), tensor([1., 1., 1.]), tensor([0, 0, 0]), tensor([-3.73901243e-34,  1.58018515e-01,  1.39983699e-01]), tensor([0, 1, 2]))}
Shallow branching resets to n domains:  7
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.058743953704833984

all verified at 2th iter
Time: prepare 0.0004    bound 0.0198    transfer 0.0002    finalize 0.0004    func 0.0208    
Accumulated time: func 0.4603    prepare 0.0358    bound 0.4020    transfer 0.0059    finalize 0.0189    
After pruning, left:  0

Back to Regular BaB

Result: safe in 6.4640 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 176, vnnlib ID: 176 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-44.12900162, -46.66632080, -42.69036102, -42.94030380, -43.27370071,
         -42.98764038, -43.82146835, -44.16601562, -45.14616394, -46.68960571]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1481]; unstable size 1481; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 450, 1, 1481] with unstable size 449 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 27, 1, 1481] with unstable size 26 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1481] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [449]; unstable size 449; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 27, 1, 449] with unstable size 26 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 449] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [26]; unstable size 26; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.22707605,  2.13945532, -1.38459921, -0.71596098, -0.13486710,
          0.21283054, -0.05708903,  0.80636692,  2.37873936]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-44.12900162, -46.66632080, -42.69036102, -42.94030380, -43.27370071,
         -42.98764038, -43.82146835, -44.16601562, -45.14616394, -46.68960571]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-44.12900162, -46.66632462, -42.69035721, -42.94030380, -43.27369690,
          -42.98763657, -43.82147217, -44.16601562, -45.14616013, -46.68960571],
         [-44.12900162, -46.66632462, -42.69035721, -42.94030380, -43.27369690,
          -42.98763657, -43.82147217, -44.16601562, -45.14616013, -46.68960571]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.24994659,  0.33339310,  0.04733276,  1.22571182]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[0.01111121, 0.07460327, 0.07460327,  ..., 0.09047628,
            0.07460327, 0.05873025],
           [0.07460327, 0.07460327, 0.15396833,  ..., 0.15396833,
            0.15396833, 0.15396833],
           [0.01111121, 0.15396833, 0.75714290,  ..., 0.18571436,
            0.16984135, 0.20158738],
           ...,
           [0.93174607, 0.61428577, 1.37619078,  ..., 1.20158756,
            1.12222254, 1.09047651],
           [0.99523818, 0.50317466, 1.02698421,  ..., 1.28095269,
            1.20158756, 1.15396857],
           [0.93174607, 0.64603180, 0.56666672,  ..., 1.28095269,
            1.21746063, 1.16984153]],

          [[0.30595824, 0.35426742, 0.38647354,  ..., 0.46698883,
            0.46698883, 0.45088577],
           [0.35426742, 0.30595824, 0.33816436,  ..., 0.54750413,
            0.54750413, 0.56360716],
           [0.33816436, 0.40257660, 0.90177143,  ..., 0.57971025,
            0.56360716, 0.59581327],
           ...,
           [0.99838978, 0.62801939, 1.38486338,  ..., 1.33655429,
            1.25603890, 1.20772982],
           [1.07890511, 0.49919492, 1.01449287,  ..., 1.40096653,
            1.33655429, 1.27214205],
           [1.01449287, 0.64412248, 0.54750413,  ..., 1.41706955,
            1.33655429, 1.28824508]],

          [[0.30134949, 0.33133450, 0.34632701,  ..., 0.39130452,
            0.39130452, 0.39130452],
           [0.34632701, 0.28635699, 0.30134949,  ..., 0.46626705,
            0.46626705, 0.48125952],
           [0.28635699, 0.36131951, 0.81109464,  ..., 0.49625200,
            0.48125952, 0.52623707],
           ...,
           [1.08095968, 0.69115460, 1.38081002,  ..., 1.32084000,
            1.27586246, 1.24587750],
           [1.14092970, 0.58620709, 1.03598225,  ..., 1.39580250,
            1.35082495, 1.33583248],
           [1.06596720, 0.73613209, 0.64617711,  ..., 1.42578757,
            1.39580250, 1.35082495]]],


         [[[0.01111121, 0.07460327, 0.07460327,  ..., 0.09047628,
            0.07460327, 0.05873025],
           [0.07460327, 0.07460327, 0.15396833,  ..., 0.15396833,
            0.15396833, 0.15396833],
           [0.01111121, 0.15396833, 0.75714290,  ..., 0.18571436,
            0.16984135, 0.20158738],
           ...,
           [0.93174607, 0.61428577, 1.37619078,  ..., 1.20158756,
            1.12222254, 1.09047651],
           [0.99523818, 0.50317466, 1.02698421,  ..., 1.28095269,
            1.20158756, 1.15396857],
           [0.93174607, 0.64603180, 0.56666672,  ..., 1.28095269,
            1.21746063, 1.16984153]],

          [[0.30595824, 0.35426742, 0.38647354,  ..., 0.46698883,
            0.46698883, 0.45088577],
           [0.35426742, 0.30595824, 0.33816436,  ..., 0.54750413,
            0.54750413, 0.56360716],
           [0.33816436, 0.40257660, 0.90177143,  ..., 0.57971025,
            0.56360716, 0.59581327],
           ...,
           [0.99838978, 0.62801939, 1.38486338,  ..., 1.33655429,
            1.25603890, 1.20772982],
           [1.07890511, 0.49919492, 1.01449287,  ..., 1.40096653,
            1.33655429, 1.27214205],
           [1.01449287, 0.64412248, 0.54750413,  ..., 1.41706955,
            1.33655429, 1.28824508]],

          [[0.30134949, 0.33133450, 0.34632701,  ..., 0.39130452,
            0.39130452, 0.39130452],
           [0.34632701, 0.28635699, 0.30134949,  ..., 0.46626705,
            0.46626705, 0.48125952],
           [0.28635699, 0.36131951, 0.81109464,  ..., 0.49625200,
            0.48125952, 0.52623707],
           ...,
           [1.08095968, 0.69115460, 1.38081002,  ..., 1.32084000,
            1.27586246, 1.24587750],
           [1.14092970, 0.58620709, 1.03598225,  ..., 1.39580250,
            1.35082495, 1.33583248],
           [1.06596720, 0.73613209, 0.64617711,  ..., 1.42578757,
            1.39580250, 1.35082495]]],


         [[[0.01111121, 0.07460327, 0.07460327,  ..., 0.09047628,
            0.07460327, 0.05873025],
           [0.07460327, 0.07460327, 0.15396833,  ..., 0.15396833,
            0.15396833, 0.15396833],
           [0.01111121, 0.15396833, 0.75714290,  ..., 0.18571436,
            0.16984135, 0.20158738],
           ...,
           [0.93174607, 0.61428577, 1.37619078,  ..., 1.20158756,
            1.12222254, 1.09047651],
           [0.99523818, 0.50317466, 1.02698421,  ..., 1.28095269,
            1.20158756, 1.15396857],
           [0.93174607, 0.64603180, 0.56666672,  ..., 1.28095269,
            1.21746063, 1.16984153]],

          [[0.30595824, 0.35426742, 0.38647354,  ..., 0.46698883,
            0.46698883, 0.45088577],
           [0.35426742, 0.30595824, 0.33816436,  ..., 0.54750413,
            0.54750413, 0.56360716],
           [0.33816436, 0.40257660, 0.90177143,  ..., 0.57971025,
            0.56360716, 0.59581327],
           ...,
           [0.99838978, 0.62801939, 1.38486338,  ..., 1.33655429,
            1.25603890, 1.20772982],
           [1.07890511, 0.49919492, 1.01449287,  ..., 1.40096653,
            1.33655429, 1.27214205],
           [1.01449287, 0.64412248, 0.54750413,  ..., 1.41706955,
            1.33655429, 1.28824508]],

          [[0.30134949, 0.33133450, 0.34632701,  ..., 0.39130452,
            0.39130452, 0.39130452],
           [0.34632701, 0.28635699, 0.30134949,  ..., 0.46626705,
            0.46626705, 0.48125952],
           [0.28635699, 0.36131951, 0.81109464,  ..., 0.49625200,
            0.48125952, 0.52623707],
           ...,
           [1.08095968, 0.69115460, 1.38081002,  ..., 1.32084000,
            1.27586246, 1.24587750],
           [1.14092970, 0.58620709, 1.03598225,  ..., 1.39580250,
            1.35082495, 1.33583248],
           [1.06596720, 0.73613209, 0.64617711,  ..., 1.42578757,
            1.39580250, 1.35082495]]],


         [[[0.01111121, 0.07460327, 0.07460327,  ..., 0.09047628,
            0.07460327, 0.05873025],
           [0.07460327, 0.07460327, 0.15396833,  ..., 0.15396833,
            0.15396833, 0.15396833],
           [0.01111121, 0.15396833, 0.75714290,  ..., 0.18571436,
            0.16984135, 0.20158738],
           ...,
           [0.93174607, 0.61428577, 1.37619078,  ..., 1.20158756,
            1.12222254, 1.09047651],
           [0.99523818, 0.50317466, 1.02698421,  ..., 1.28095269,
            1.20158756, 1.15396857],
           [0.93174607, 0.64603180, 0.56666672,  ..., 1.28095269,
            1.21746063, 1.16984153]],

          [[0.30595824, 0.35426742, 0.38647354,  ..., 0.46698883,
            0.46698883, 0.45088577],
           [0.35426742, 0.30595824, 0.33816436,  ..., 0.54750413,
            0.54750413, 0.56360716],
           [0.33816436, 0.40257660, 0.90177143,  ..., 0.57971025,
            0.56360716, 0.59581327],
           ...,
           [0.99838978, 0.62801939, 1.38486338,  ..., 1.33655429,
            1.25603890, 1.20772982],
           [1.07890511, 0.49919492, 1.01449287,  ..., 1.40096653,
            1.33655429, 1.27214205],
           [1.01449287, 0.64412248, 0.54750413,  ..., 1.41706955,
            1.33655429, 1.28824508]],

          [[0.30134949, 0.33133450, 0.34632701,  ..., 0.39130452,
            0.39130452, 0.39130452],
           [0.34632701, 0.28635699, 0.30134949,  ..., 0.46626705,
            0.46626705, 0.48125952],
           [0.28635699, 0.36131951, 0.81109464,  ..., 0.49625200,
            0.48125952, 0.52623707],
           ...,
           [1.08095968, 0.69115460, 1.38081002,  ..., 1.32084000,
            1.27586246, 1.24587750],
           [1.14092970, 0.58620709, 1.03598225,  ..., 1.39580250,
            1.35082495, 1.33583248],
           [1.06596720, 0.73613209, 0.64617711,  ..., 1.42578757,
            1.39580250, 1.35082495]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0521 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 177, vnnlib ID: 177 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-76.46482849, -82.55593109, -71.76191711, -77.22601318, -78.42514038,
         -77.82784271, -79.21444702, -78.36045074, -80.30444336, -82.39820099]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1180]; unstable size 1180; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 262, 1, 1180] with unstable size 261 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 11, 1, 1180] with unstable size 10 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1180] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [261]; unstable size 261; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 11, 1, 261] with unstable size 10 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 261] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [10]; unstable size 10; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.02578211, 9.33875942, 4.80867863, 6.03334236, 5.39398098, 6.72668362,
         5.81092644, 7.54275131, 9.35808563]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0404 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 178, vnnlib ID: 178 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-88.56839752, -98.10660553, -90.16876984, -92.29847717, -90.96711731,
         -92.63471222, -94.91857910, -92.23672485, -96.11333466, -98.88515472]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1415]; unstable size 1415; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 423, 1, 1415] with unstable size 422 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 14, 1, 1415] with unstable size 13 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1415] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [422]; unstable size 422; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 14, 1, 422] with unstable size 13 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 422] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [13]; unstable size 13; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[8.26950073, 0.66136503, 2.59348917, 1.21471786, 2.90392494, 4.86445522,
         2.11383986, 6.44217825, 8.90215874]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0385 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 179, vnnlib ID: 179 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-60.69135284, -67.99265289, -63.70318604, -67.76333618, -65.05233002,
         -68.30519867, -68.29019928, -68.45422363, -65.27211761, -68.49366760]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1308]; unstable size 1308; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 429, 1, 1308] with unstable size 428 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 16, 1, 1308] with unstable size 15 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1308] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [428]; unstable size 428; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 16, 1, 428] with unstable size 15 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 428] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [15]; unstable size 15; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.71126986, 2.21063542, 5.71015167, 2.96899319, 6.19588089, 6.36306620,
         6.28463364, 3.63464355, 6.47566032]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0377 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 180, vnnlib ID: 180 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-36.69345856, -40.05865097, -34.18153763, -33.73690414, -32.04956436,
         -33.41833115, -34.93813705, -29.17098427, -39.29114151, -37.83329010]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1459]; unstable size 1459; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 86, 1, 1459] with unstable size 85 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 32, 1, 1459] with unstable size 31 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1459] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [619]; unstable size 619; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 32, 1, 619] with unstable size 31 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 619] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [31]; unstable size 31; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.39204454, 8.41875935, 3.07713461, 2.77978945, 1.73467970, 2.49759889,
         3.46863794, 7.84545326, 6.20803642]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0351 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 181, vnnlib ID: 181 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-36.18200302, -36.14561081, -33.55203629, -35.04278946, -33.36489487,
         -35.12923050, -32.04918289, -36.34218597, -35.42324829, -36.36071014]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1429]; unstable size 1429; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 82, 1, 1429] with unstable size 81 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 32, 1, 1429] with unstable size 31 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1429] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [582]; unstable size 582; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 32, 1, 582] with unstable size 31 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 582] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [31]; unstable size 31; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.39601326, 2.10305500, 0.31289601, 2.29009938, 0.39361095, 2.26552916,
         2.98368168, 1.50114202, 2.24368334]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0372 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 182, vnnlib ID: 182 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-87.28224182, -91.01268768, -88.98756409, -90.49700928, -92.41665649,
         -91.33647156, -91.14654541, -92.12954712, -90.29201508, -91.29863739]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [995]; unstable size 995; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 362, 1, 995] with unstable size 361 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 19, 1, 995] with unstable size 18 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 995] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [361]; unstable size 361; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 19, 1, 361] with unstable size 18 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 361] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [18]; unstable size 18; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.67710781, 0.66551661, 2.22354388, 4.06200790, 2.98983812, 2.85570669,
         3.46563172, 2.21528244, 3.06181264]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0400 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 183, vnnlib ID: 183 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-31.50898933, -34.06023407, -27.83400154, -29.41015816, -27.60145760,
         -29.83990288, -27.91974831, -30.94551849, -32.20978165, -33.85030365]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1762]; unstable size 1762; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 69, 1, 1762] with unstable size 68 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 49, 1, 1762] with unstable size 48 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1762] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [830]; unstable size 830; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 49, 1, 830] with unstable size 48 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 830] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [48]; unstable size 48; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 48] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.80153179,  4.14373302, -0.54197764,  0.87929589,  1.28232729,
         -1.08200359,  1.72248399,  2.72919941,  3.67727470]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-31.50898933, -34.06023407, -27.83400154, -29.41015816, -27.60145760,
         -29.83990288, -27.91974831, -30.94551849, -32.20978165, -33.85030365]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-32.57997131, -34.99222183, -28.84398460, -30.36093712, -28.64009666,
          -30.81289673, -28.48570633, -32.07526779, -33.20218277, -34.78026581],
         [-32.57997131, -34.99222183, -28.84398460, -30.36093712, -28.64009666,
          -30.81289673, -28.48570633, -32.07526779, -33.20218277, -34.78026581]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.20388794, -0.15439034]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0066 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0441 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 184, vnnlib ID: 184 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-62.01098633, -62.81069946, -66.37389374, -67.66635895, -66.04154968,
         -68.09442902, -69.08332825, -66.26930237, -61.08360672, -60.89788055]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1152]; unstable size 1152; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 486, 1, 1152] with unstable size 485 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 31, 1, 1152] with unstable size 30 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1152] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [485]; unstable size 485; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 31, 1, 485] with unstable size 30 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 485] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [30]; unstable size 30; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.08359528,  0.92715174,  3.82679629,  5.23117828,  3.67704463,
          5.61474609,  6.49095917,  3.67557669, -1.11417651]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-62.01098633, -62.81069946, -66.37389374, -67.66635895, -66.04154968,
         -68.09442902, -69.08332825, -66.26930237, -61.08360672, -60.89788055]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-63.99181747, -64.96710205, -68.37111664, -69.80022430, -68.15113068,
          -70.26047516, -71.20537567, -68.58676910, -62.84612274, -63.25257874],
         [-63.99181747, -64.96710205, -68.37111664, -69.80022430, -68.15113068,
          -70.26047516, -71.20537567, -68.58676910, -62.84612274, -63.25257874]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.73923874, -0.40645599]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0058 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0431 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 185, vnnlib ID: 185 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-49.04260635, -46.47156143, -47.52237701, -47.54033279, -46.95476151,
         -47.80789185, -46.89925385, -46.95186615, -49.43678665, -45.72424316]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1252]; unstable size 1252; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 89, 1, 1252] with unstable size 88 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 35, 1, 1252] with unstable size 34 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1252] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [605]; unstable size 605; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 35, 1, 605] with unstable size 34 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 605] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [34]; unstable size 34; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 34] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.19691086, -0.38410553, -0.53982449, -0.06855106, -1.00326395,
          0.18978786, -0.84674263, -1.02844906,  2.00096345]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-49.04260635, -46.47156143, -47.52237701, -47.54033279, -46.95476151,
         -47.80789185, -46.89925385, -46.95186615, -49.43678665, -45.72424316]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  6.91it/s]100%|██████████| 1/1 [00:00<00:00,  6.90it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-48.61816406, -45.79016495, -47.03409195, -47.11381531, -46.51944733,
          -47.38497543, -46.44153976, -46.53589630, -48.81137848, -45.46572876],
         [-48.61816406, -45.79016495, -47.03409195, -47.11381531, -46.51944733,
          -47.38497543, -46.44153976, -46.53589630, -48.81137848, -45.46572876]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.32443619, 1.56836319, 1.64808655, 1.05371857, 0.97581100,
          1.07016754]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1480 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 0.8349728584289551
alpha/beta optimization time: 1.4349231719970703
initial alpha-crown bounds: tensor([[ 1.36616015, -0.30998635, -0.37341213,  0.06957102, -0.84179640,
          0.32818127, -0.67301083, -0.84706211,  2.11632824]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 5 ; Worst class: (+ rhs) -0.8470621109008789
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.37702465057373
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.3769850730896
Verifying property 1 with 1 instances.
##### Instance 185 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.30998635]], device='cuda:0') need to verify.
Model prediction is: tensor([-49.04260635, -46.47156143, -47.52237701, -47.54033279, -46.95476151,
        -47.80789185, -46.89925385, -46.95186615, -49.43678665, -45.72424316],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.30998635]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1252
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 588
Node /39 input 0: size torch.Size([250]) unstable 33
-----------------
# of unstable neurons: 1873
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 9.942054748535156e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.309928834438324
10 lb beta sum: 0.0, worst -0.3099285364151001
Time: prepare 0.0002    bound 0.1220    transfer 0.0001    finalize 0.0002    func 0.1226    
Accumulated time: func 0.1226    prepare 0.0002    bound 0.1220    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 236] 
split level 1: [/input-16, 146] 
split level 2: [/input-16, 239] 
split level 3: [/input-16, 195] 
split level 4: [/input-16, 215] 
split level 5: [/input-16, 138] 
split level 6: [/input-16, 58] 
split level 7: [/input-16, 186] 
split level 8: [/input-12, 5794] 
split level 9: [/input-16, 54] 
split level 10: [/input-16, 126] 
split level 11: [/input-16, 10] 
split level 12: [/input-12, 2404] 
split level 13: [/input-12, 5548] 
split level 14: [/input-12, 5787] 
split level 15: [/input-12, 2931] 
split level 16: [/input-12, 3811] 
split level 17: [/input-12, 1387] 
split level 18: [/input-12, 1969] 
split level 19: [/input-12, 786] 
split level 20: [/input-12, 492] 
split level 21: [/input-12, 3803] 
split level 22: [/input-12, 4677] 
split level 23: [/input-12, 5203] 
split level 24: [/input-12, 5210] 
split level 25: [/input-12, 5545] 
split level 26: [/input-12, 797] 
split level 27: [/input-12, 7763] 
split level 28: [/input-12, 803] 
split level 29: [/input-12, 7790] 
split level 30: [/input-12, 4458] 
split level 31: [/input-12, 4699] 
split level 32: [/input-12, 7202] 
split level 33: [/input-12, 8154] 
split level 34: [/input-12, 3106] 
split level 35: [/input-12, 6427] 
split level 36: [/input-12, 3793] 
split level 37: [/input-12, 804] 
split level 38: [/input-12, 794] 
split level 39: [/input-12, 4909] 
split level 40: [/input-12, 802] 
split level 41: [/input-12, 404] 
split level 42: [/input-12, 2461] 
split level 43: [/input-12, 5557] 
split level 44: [/input-12, 2029] 
split level 45: [/input-12, 2469] 
split level 46: [/input-16, 28] 
split level 47: [/input-12, 2586] 
split level 48: [/input-12, 4204] 
split level 49: [/input-12, 2933] 
split level 50: [/input-4, 5992] 
split level 51: [/input-12, 2890] 
split level 52: [/input-12, 5556] 
split level 53: [/input-12, 1755] 
split level 54: [/input-12, 1758] 
split level 55: [/input-12, 307] 
split level 56: [/input-12, 5788] 
split level 57: [/input-12, 4908] 
split level 58: [/input-12, 2149] 
split level 59: [/input-16, 82] 
split level 60: [/input-4, 6755] 
split level 61: [/input-12, 405] 
split level 62: [/input-12, 3569] 
split level 63: [/input-4, 7781] 
split level 64: [/input-12, 798] 
split level 65: [/input-12, 3809] 
split level 66: [/input-12, 4466] 
split level 67: [/input-12, 4205] 
split level 68: [/input-12, 7005] 
split level 69: [/input-12, 1841] 
split level 70: [/input-12, 2148] 
split level 71: [/input-12, 4214] 
split level 72: [/input-12, 3876] 
split level 73: [/input-12, 1434] 
split level 74: [/input-12, 2462] 
split level 75: [/input-12, 2028] 
split level 76: [/input-12, 4444] 
split level 77: [/input-12, 3111] 
split level 78: [/input-4, 6740] 
split level 79: [/input-12, 806] 
split level 80: [/input-4, 7656] 
split level 81: [/input-12, 5554] 
split level 82: [/input-12, 2481] 
split level 83: [/input-12, 3638] 
split level 84: [/input-4, 6788] 
split level 85: [/input-4, 2645] 
split level 86: [/input-4, 6756] 
split level 87: [/input-12, 1445] 
split level 88: [/input-4, 7779] 
split level 89: [/input-12, 7818] 
split level 90: [/input-12, 3913] 
split level 91: [/input-12, 6772] 
split level 92: [/input-12, 4913] 
split level 93: [/input-12, 1426] 
split level 94: [/input-12, 3890] 
split level 95: [/input-12, 1058] 
split level 96: [/input-12, 315] 
split level 97: [/input-12, 7011] 
split level 98: [/input-4, 339] 
split level 99: [/input-4, 4487] 
split level 100: [/input-16, 46] 
split level 101: [/input-12, 6842] 
split level 102: [/input-12, 3850] 
split level 103: [/input-12, 5722] 
split level 104: [/input-12, 4153] 
split level 105: [/input-12, 337] 
split level 106: [/input-12, 2677] 
split level 107: [/input-4, 5299] 
split level 108: [/input-12, 3881] 
split level 109: [/input-12, 2008] 
split level 110: [/input-4, 2777] 
split level 111: [/input-12, 1588] 
split level 112: [/input-12, 2668] 
split level 113: [/input-12, 3334] 
split level 114: [/input-4, 2149] 
split level 115: [/input-4, 4585] 
split level 116: [/input-12, 7970] 
split level 117: [/input-12, 3371] 
split level 118: [/input-12, 3519] 
split level 119: [/input-12, 5807] 
split level 120: [/input-12, 2489] 
split level 121: [/input-4, 148] 
split level 122: [/input-4, 5770] 
split level 123: [/input-12, 7430] 
split level 124: [/input-4, 1671] 
split level 125: [/input-12, 2660] 
split level 126: [/input-12, 4467] 
split level 127: [/input-12, 5517] 
split level 128: [/input-12, 6726] 
split level 129: [/input-12, 4172] 
split level 130: [/input-12, 4575] 
split level 131: [/input-4, 4500] 
split level 132: [/input-12, 7927] 
split level 133: [/input-12, 1747] 
split level 134: [/input-4, 437] 
split level 135: [/input-12, 2446] 
split level 136: [/input-4, 4435] 
split level 137: [/input-12, 1921] 
split level 138: [/input-4, 147] 
split level 139: [/input-12, 105] 
split level 140: [/input-12, 2480] 
split level 141: [/input-12, 3867] 
split level 142: [/input-4, 438] 
split level 143: [/input-12, 2938] 
split level 144: [/input-12, 6775] 
split level 145: [/input-12, 779] 
split level 146: [/input-12, 6470] 
split level 147: [/input-12, 2645] 
split level 148: [/input-4, 4586] 
split level 149: [/input-4, 341] 
split level 150: [/input-12, 5707] 
split level 151: [/input-4, 8150] 
split level 152: [/input-4, 6888] 
split level 153: [/input-12, 4686] 
split level 154: [/input-12, 6739] 
split level 155: [/input-4, 6872] 
split level 156: [/input-12, 4426] 
split level 157: [/input-12, 6998] 
split level 158: [/input-4, 6793] 
split level 159: [/input-4, 6725] 
split level 160: [/input-4, 1725] 
split level 161: [/input-4, 4555] 
split level 162: [/input-4, 4490] 
split level 163: [/input-12, 960] 
split level 164: [/input-12, 3476] 
split level 165: [/input-4, 84] 
split level 166: [/input-12, 2551] 
split level 167: [/input-4, 5731] 
split level 168: [/input-12, 8045] 
split level 169: [/input-4, 371] 
split level 170: [/input-12, 3893] 
split level 171: [/input-4, 5835] 
split level 172: [/input-4, 1169] 
split level 173: [/input-4, 5236] 
split level 174: [/input-4, 6885] 
split level 175: [/input-4, 2644] 
split level 176: [/input-4, 6726] 
split level 177: [/input-4, 1683] 
split level 178: [/input-12, 7620] 
split level 179: [/input-12, 2472] 
split level 180: [/input-12, 1349] 
split level 181: [/input-4, 2790] 
split level 182: [/input-4, 4042] 
split level 183: [/input-12, 2667] 
split level 184: [/input-12, 5414] 
split level 185: [/input-12, 3477] 
split level 186: [/input-12, 6722] 
split level 187: [/input-12, 6793] 
split level 188: [/input-12, 7828] 
split level 189: [/input-4, 6873] 
split level 190: [/input-4, 1699] 
split level 191: [/input-4, 2745] 
split level 192: [/input-4, 4185] 
split level 193: [/input-12, 3472] 
split level 194: [/input-12, 3918] 
split level 195: [/input-4, 4834] 
split level 196: [/input-12, 6768] 
split level 197: [/input-4, 2722] 
split level 198: [/input-4, 1692] 
split level 199: [/input-4, 6805] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.30978259444236755
10 lb beta sum: 0.0, worst -0.30978795886039734
Time: prepare 0.0146    bound 0.1333    transfer 0.0029    finalize 0.0086    func 0.1620    
Accumulated time: func 0.2846    prepare 0.0245    bound 0.2553    transfer 0.0030    finalize 0.0089    
all_split False
======================Cut inference begins======================
max lb tensor(0.24341869) min lb tensor(-0.30978215)
Number of Verified Splits: 2 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.010618209838867188 
BICCOS Cumulative time: 0.010618209838867188
Preprocessing time: 0.009865045547485352 Inference time: 0.00011754035949707031 Add cuts time: 5.0067901611328125e-05 Cut analysis time: 0.0005855560302734375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.29626 (1), -0.29588 (1), -0.29557 (1), -0.29538 (1), -0.29527 (1), -0.29519 (1), -0.29481 (1), -0.29407 (1), -0.29374 (1), -0.29351 (1), -0.29195 (1), -0.29116 (1), -0.29065 (1), -0.29033 (1), -0.28996 (1), -0.28990 (1), -0.28921 (1), -0.28908 (1), -0.28882 (1), -0.28672 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7649    set_bounds 0.0092    solve 0.1621    add 0.0761    
Accumulated time: pickout 0.0003    decision 0.7649    set_bounds 0.0092    solve 0.1621    add 0.0761    
Current (lb-rhs): -0.2962619662284851
50 domains visited
Cumulative time: 1.1532056331634521

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 239] [/input-16, 146] [/input-16, 146] [/input-16, 239] [/input-16, 146] [/input-16, 146] [/input-16, 146] [/input-16, 146] [/input-16, 146] [/input-16, 146] 
split level 1: [/input-16, 195] [/input-16, 239] [/input-16, 195] [/input-16, 195] [/input-16, 239] [/input-16, 195] [/input-16, 239] [/input-16, 239] [/input-16, 239] [/input-16, 239] 
split level 2: [/input-16, 215] [/input-16, 195] [/input-16, 215] [/input-16, 215] [/input-16, 195] [/input-16, 215] [/input-16, 195] [/input-16, 215] [/input-16, 195] [/input-16, 195] 
split level 3: [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2686530351638794
10 lb beta sum: 0.38179031014442444, worst -0.25991612672805786
Time: prepare 0.0072    bound 0.1523    transfer 0.0016    finalize 0.0051    func 0.1688    
Accumulated time: func 0.4534    prepare 0.0320    bound 0.4075    transfer 0.0046    finalize 0.0140    
all_split False
======================Cut inference begins======================
max lb tensor(0.12574866) min lb tensor(-0.25988060)
Number of Verified Splits: 17 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.013051986694335938 
BICCOS Cumulative time: 0.023670196533203125
Preprocessing time: 0.011879920959472656 Inference time: 0.0007164478302001953 Add cuts time: 0.00023174285888671875 Cut analysis time: 0.0002238750457763672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13066 (2), -0.13048 (2), -0.13024 (2), -0.12952 (2), -0.12869 (2), -0.12844 (2), -0.12819 (2), -0.12792 (2), -0.12499 (2), -0.12420 (2), -0.12368 (2), -0.12348 (2), -0.12346 (2), -0.12322 (2), -0.12220 (2), -0.12078 (2), -0.12060 (2), -0.12029 (2), -0.12026 (2), -0.11922 (2), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0249    set_bounds 0.0125    solve 0.1689    add 0.0965    
Accumulated time: pickout 0.0009    decision 0.7898    set_bounds 0.0217    solve 0.3310    add 0.1726    
Current (lb-rhs): -0.1306619644165039
100 domains visited
Cumulative time: 1.4699172973632812

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 239] [/input-16, 146] [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-16, 146] [/input-16, 146] 
split level 1: [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 239] [/input-16, 239] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 239] 
split level 2: [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 195] [/input-16, 195] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] 
split level 3: [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13107144832611084
10 lb beta sum: 0.546341598033905, worst -0.12018746137619019
Time: prepare 0.0067    bound 0.1543    transfer 0.0016    finalize 0.0049    func 0.1706    
Accumulated time: func 0.6240    prepare 0.0389    bound 0.5618    transfer 0.0062    finalize 0.0189    
all_split False
======================Cut inference begins======================
max lb tensor(0.23831111) min lb tensor(-0.11998492)
Number of Verified Splits: 302 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 11
#cuts >= 20: 0
BICCOS time: 0.031180143356323242 
BICCOS Cumulative time: 0.05485033988952637
Preprocessing time: 0.011747360229492188 Inference time: 0.013432741165161133 Add cuts time: 0.005650758743286133 Cut analysis time: 0.00034928321838378906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11998 (3), -0.11977 (3), -0.11173 (3), -0.10964 (3), -0.10701 (3), -0.10675 (3), -0.10661 (3), -0.10628 (3), -0.10482 (3), -0.10133 (3), -0.09908 (3), -0.09586 (3), -0.09365 (3), -0.09337 (3), -0.09292 (3), -0.09202 (3), -0.09159 (3), -0.09014 (3), -0.08920 (3), -0.08861 (3), 
Length of domains: 50
Time: pickout 0.0007    decision 0.0256    set_bounds 0.0154    solve 0.1707    add 0.1114    
Accumulated time: pickout 0.0016    decision 0.8155    set_bounds 0.0372    solve 0.5017    add 0.2840    
Current (lb-rhs): -0.11998492479324341
150 domains visited
Cumulative time: 1.825244426727295

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-16, 236] [/input-16, 236] 
split level 1: [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] [/input-16, 195] 
split level 2: [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] 
split level 3: [/input-16, 54] [/input-16, 54] [/input-16, 54] [/input-16, 54] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 54] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11465805768966675

all verified at 7th iter
Time: prepare 0.0069    bound 0.0723    transfer 0.0016    finalize 0.0049    func 0.0882    
Accumulated time: func 0.7122    prepare 0.0461    bound 0.6341    transfer 0.0077    finalize 0.0238    
all_split False
======================Cut inference begins======================
max lb tensor(0.25203776) min lb tensor(0.00025225)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 31.
#cuts 1-3: 13
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.04000377655029297 
BICCOS Cumulative time: 0.09485411643981934
Preprocessing time: 0.011576652526855469 Inference time: 0.018597841262817383 Add cuts time: 0.008934497833251953 Cut analysis time: 0.0008947849273681641
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0007    decision 0.0253    set_bounds 0.0159    solve 0.0883    add 0.0247    
Accumulated time: pickout 0.0023    decision 0.8408    set_bounds 0.0530    solve 0.5900    add 0.3087    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([146, 239]), tensor([-1., -1.]), tensor([0, 0]), tensor([0.00031408, 0.13494526]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([146, 239]), tensor([-1.,  1.]), tensor([0, 0]), tensor([0.00031408, 0.09497207]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([146, 239, 236]), tensor([ 1., -1., -1.]), tensor([0, 0, 0]), tensor([0.00031408, 0.15008561, 0.26439798]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([146, 239, 236]), tensor([ 1., -1.,  1.]), tensor([0, 0, 0]), tensor([0.00031408, 0.15008561, 0.00261818]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([146, 239, 138, 236]), tensor([ 1.,  1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([0.00031408, 0.10904770, 0.02875249, 0.26216322]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([146, 239, 138, 236]), tensor([ 1.,  1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([0.00031408, 0.10904770, 0.02875249, 0.06824742]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([146, 239, 138, 236]), tensor([ 1.,  1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([0.00031408, 0.10904770, 0.03710471, 0.25904164]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([146, 239, 138, 236]), tensor([1., 1., 1., 1.]), tensor([0, 0, 0, 0]), tensor([0.00031408, 0.10904770, 0.03710471, 0.06755941]), tensor([0, 1, 2, 3]))}
Shallow branching resets to n domains:  8
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.048746466636657715

all verified at 2th iter
Time: prepare 0.0004    bound 0.0268    transfer 0.0001    finalize 0.0004    func 0.0278    
Accumulated time: func 0.7400    prepare 0.0465    bound 0.6610    transfer 0.0079    finalize 0.0242    
After pruning, left:  0

Back to Regular BaB


Properties batch 2, size 1
Remaining timeout: 196.1378879547119
Verifying property 2 with 1 instances.
##### Instance 185 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.37341213]], device='cuda:0') need to verify.
Model prediction is: tensor([-49.04260635, -46.47156143, -47.52237701, -47.54033279, -46.95476151,
        -47.80789185, -46.89925385, -46.95186615, -49.43678665, -45.72424316],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.37341213]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1252
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 588
Node /39 input 0: size torch.Size([250]) unstable 33
-----------------
# of unstable neurons: 1873
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 9.369850158691406e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3732295036315918
10 lb beta sum: 0.0, worst -0.37323427200317383
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0730    transfer 0.0001    finalize 0.0002    func 0.0735    
Accumulated time: func 0.0735    prepare 0.0002    bound 0.0730    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 186] 
split level 1: [/input-16, 35] 
split level 2: [/input-16, 72] 
split level 3: [/input-16, 95] 
split level 4: [/input-16, 138] 
split level 5: [/input-16, 10] 
split level 6: [/input-16, 215] 
split level 7: [/input-16, 134] 
split level 8: [/input-16, 46] 
split level 9: [/input-16, 115] 
split level 10: [/input-16, 58] 
split level 11: [/input-16, 170] 
split level 12: [/input-16, 126] 
split level 13: [/input-16, 54] 
split level 14: [/input-12, 2484] 
split level 15: [/input-16, 154] 
split level 16: [/input-16, 84] 
split level 17: [/input-16, 160] 
split level 18: [/input-12, 2931] 
split level 19: [/input-16, 64] 
split level 20: [/input-16, 225] 
split level 21: [/input-12, 822] 
split level 22: [/input-12, 1243] 
split level 23: [/input-16, 217] 
split level 24: [/input-12, 2149] 
split level 25: [/input-12, 1969] 
split level 26: [/input-12, 810] 
split level 27: [/input-12, 2932] 
split level 28: [/input-12, 2660] 
split level 29: [/input-12, 363] 
split level 30: [/input-12, 2661] 
split level 31: [/input-12, 7790] 
split level 32: [/input-12, 3638] 
split level 33: [/input-12, 802] 
split level 34: [/input-12, 2404] 
split level 35: [/input-12, 797] 
split level 36: [/input-12, 2148] 
split level 37: [/input-12, 804] 
split level 38: [/input-16, 28] 
split level 39: [/input-12, 817] 
split level 40: [/input-12, 2474] 
split level 41: [/input-12, 2668] 
split level 42: [/input-16, 82] 
split level 43: [/input-12, 794] 
split level 44: [/input-12, 818] 
split level 45: [/input-12, 803] 
split level 46: [/input-12, 2481] 
split level 47: [/input-12, 6260] 
split level 48: [/input-12, 3811] 
split level 49: [/input-12, 2461] 
split level 50: [/input-12, 1961] 
split level 51: [/input-12, 3809] 
split level 52: [/input-12, 806] 
split level 53: [/input-12, 2450] 
split level 54: [/input-12, 2029] 
split level 55: [/input-12, 798] 
split level 56: [/input-12, 6258] 
split level 57: [/input-12, 2933] 
split level 58: [/input-12, 2667] 
split level 59: [/input-12, 1244] 
split level 60: [/input-12, 7005] 
split level 61: [/input-12, 220] 
split level 62: [/input-12, 2469] 
split level 63: [/input-12, 2473] 
split level 64: [/input-12, 2462] 
split level 65: [/input-12, 3941] 
split level 66: [/input-12, 3476] 
split level 67: [/input-12, 2677] 
split level 68: [/input-12, 2329] 
split level 69: [/input-4, 6371] 
split level 70: [/input-4, 6374] 
split level 71: [/input-12, 7763] 
split level 72: [/input-12, 85] 
split level 73: [/input-12, 6842] 
split level 74: [/input-12, 4908] 
split level 75: [/input-12, 4699] 
split level 76: [/input-12, 8045] 
split level 77: [/input-12, 2330] 
split level 78: [/input-12, 7894] 
split level 79: [/input-12, 1747] 
split level 80: [/input-12, 1235] 
split level 81: [/input-12, 799] 
split level 82: [/input-12, 1192] 
split level 83: [/input-12, 7851] 
split level 84: [/input-12, 4677] 
split level 85: [/input-12, 6262] 
split level 86: [/input-12, 6261] 
split level 87: [/input-16, 140] 
split level 88: [/input-4, 4853] 
split level 89: [/input-4, 6375] 
split level 90: [/input-12, 2338] 
split level 91: [/input-12, 6257] 
split level 92: [/input-12, 6845] 
split level 93: [/input-12, 1588] 
split level 94: [/input-12, 2028] 
split level 95: [/input-4, 3303] 
split level 96: [/input-12, 7151] 
split level 97: [/input-12, 4153] 
split level 98: [/input-12, 2669] 
split level 99: [/input-12, 2465] 
split level 100: [/input-4, 1268] 
split level 101: [/input-4, 3811] 
split level 102: [/input-12, 426] 
split level 103: [/input-12, 2507] 
split level 104: [/input-12, 337] 
split level 105: [/input-12, 3949] 
split level 106: [/input-4, 84] 
split level 107: [/input-4, 3812] 
split level 108: [/input-12, 1755] 
split level 109: [/input-4, 4837] 
split level 110: [/input-4, 3051] 
split level 111: [/input-12, 4386] 
split level 112: [/input-12, 3371] 
split level 113: [/input-12, 528] 
split level 114: [/input-4, 4581] 
split level 115: [/input-12, 5526] 
split level 116: [/input-12, 6052] 
split level 117: [/input-12, 7209] 
split level 118: [/input-12, 3098] 
split level 119: [/input-4, 1270] 
split level 120: [/input-4, 3820] 
split level 121: [/input-4, 4317] 
split level 122: [/input-12, 2442] 
split level 123: [/input-4, 4307] 
split level 124: [/input-12, 7970] 
split level 125: [/input-4, 4311] 
split level 126: [/input-4, 6857] 
split level 127: [/input-4, 4585] 
split level 128: [/input-12, 6997] 
split level 129: [/input-4, 4310] 
split level 130: [/input-12, 2434] 
split level 131: [/input-12, 7828] 
split level 132: [/input-4, 4834] 
split level 133: [/input-4, 4845] 
split level 134: [/input-12, 4172] 
split level 135: [/input-12, 960] 
split level 136: [/input-4, 4059] 
split level 137: [/input-12, 3608] 
split level 138: [/input-12, 5517] 
split level 139: [/input-12, 5554] 
split level 140: [/input-4, 4586] 
split level 141: [/input-12, 2890] 
split level 142: [/input-4, 1190] 
split level 143: [/input-12, 309] 
split level 144: [/input-4, 5095] 
split level 145: [/input-12, 2940] 
split level 146: [/input-4, 5858] 
split level 147: [/input-12, 6998] 
split level 148: [/input-12, 5525] 
split level 149: [/input-12, 2645] 
split level 150: [/input-12, 4214] 
split level 151: [/input-4, 5835] 
split level 152: [/input-4, 3810] 
split level 153: [/input-12, 784] 
split level 154: [/input-4, 4555] 
split level 155: [/input-12, 315] 
split level 156: [/input-12, 1256] 
split level 157: [/input-12, 4686] 
split level 158: [/input-12, 3499] 
split level 159: [/input-4, 3816] 
split level 160: [/input-4, 148] 
split level 161: [/input-4, 1772] 
split level 162: [/input-12, 3106] 
split level 163: [/input-4, 2971] 
split level 164: [/input-12, 2437] 
split level 165: [/input-4, 1481] 
split level 166: [/input-4, 4305] 
split level 167: [/input-4, 1767] 
split level 168: [/input-12, 774] 
split level 169: [/input-4, 3302] 
split level 170: [/input-12, 5385] 
split level 171: [/input-12, 4426] 
split level 172: [/input-12, 3477] 
split level 173: [/input-12, 8154] 
split level 174: [/input-12, 5653] 
split level 175: [/input-4, 5108] 
split level 176: [/input-4, 4839] 
split level 177: [/input-4, 5832] 
split level 178: [/input-12, 2446] 
split level 179: [/input-4, 5090] 
split level 180: [/input-4, 8180] 
split level 181: [/input-4, 6890] 
split level 182: [/input-4, 3017] 
split level 183: [/input-4, 4290] 
split level 184: [/input-4, 1761] 
split level 185: [/input-12, 4205] 
split level 186: [/input-4, 4318] 
split level 187: [/input-4, 4323] 
split level 188: [/input-4, 6331] 
split level 189: [/input-4, 1780] 
split level 190: [/input-4, 4285] 
split level 191: [/input-4, 3549] 
split level 192: [/input-12, 6440] 
split level 193: [/input-4, 1996] 
split level 194: [/input-12, 7430] 
split level 195: [/input-4, 4504] 
split level 196: [/input-12, 7620] 
split level 197: [/input-4, 6756] 
split level 198: [/input-4, 6887] 
split level 199: [/input-12, 1079] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.37277650833129883
10 lb beta sum: 0.0, worst -0.3727755546569824
Time: prepare 0.0117    bound 0.1324    transfer 0.0017    finalize 0.0057    func 0.1541    
Accumulated time: func 0.2276    prepare 0.0216    bound 0.2054    transfer 0.0018    finalize 0.0059    
all_split False
======================Cut inference begins======================
max lb tensor(0.44554329) min lb tensor(-0.37277174)
Number of Verified Splits: 6 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.010982751846313477 
BICCOS Cumulative time: 0.010982751846313477
Preprocessing time: 0.010046958923339844 Inference time: 0.0002532005310058594 Add cuts time: 8.559226989746094e-05 Cut analysis time: 0.0005970001220703125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34659 (1), -0.34574 (1), -0.34509 (1), -0.34438 (1), -0.34395 (1), -0.34373 (1), -0.34230 (1), -0.34079 (1), -0.34008 (1), -0.33958 (1), -0.33912 (1), -0.33888 (1), -0.33683 (1), -0.33367 (1), -0.33334 (1), -0.32995 (1), -0.32579 (1), -0.32374 (1), -0.32226 (1), -0.32182 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7636    set_bounds 0.0096    solve 0.1542    add 0.0738    
Accumulated time: pickout 0.0003    decision 0.7636    set_bounds 0.0096    solve 0.1542    add 0.0738    
Current (lb-rhs): -0.34659481048583984
50 domains visited
Cumulative time: 1.0930817127227783

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 95] [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 72] 
split level 1: [/input-16, 95] [/input-16, 95] [/input-16, 138] [/input-16, 138] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] 
split level 2: [/input-16, 138] [/input-16, 138] [/input-16, 215] [/input-16, 215] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 215] [/input-16, 215] [/input-16, 138] 
split level 3: [/input-16, 215] [/input-16, 215] [/input-16, 115] [/input-16, 115] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 115] [/input-16, 115] [/input-16, 115] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2909369468688965
10 lb beta sum: 1.1646652221679688, worst -0.2521930932998657
Time: prepare 0.0067    bound 0.1514    transfer 0.0026    finalize 0.0050    func 0.1684    
Accumulated time: func 0.3960    prepare 0.0285    bound 0.3568    transfer 0.0045    finalize 0.0109    
all_split False
======================Cut inference begins======================
max lb tensor(0.18073940) min lb tensor(-0.25210828)
Number of Verified Splits: 90 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 14
#cuts >= 20: 0
BICCOS time: 0.01752305030822754 
BICCOS Cumulative time: 0.028505802154541016
Preprocessing time: 0.011864185333251953 Inference time: 0.003832101821899414 Add cuts time: 0.0014705657958984375 Cut analysis time: 0.0003561973571777344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10055 (2), -0.10026 (2), -0.09980 (2), -0.09908 (2), -0.09838 (2), -0.09674 (2), -0.09631 (2), -0.09615 (2), -0.09521 (2), -0.09507 (2), -0.09498 (2), -0.09399 (2), -0.09383 (2), -0.09183 (2), -0.09159 (2), -0.09148 (2), -0.09118 (2), -0.09064 (2), -0.08923 (2), -0.08851 (2), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0250    set_bounds 0.0132    solve 0.1685    add 0.0888    
Accumulated time: pickout 0.0009    decision 0.7886    set_bounds 0.0228    solve 0.3226    add 0.1626    
Current (lb-rhs): -0.10054671764373779
100 domains visited
Cumulative time: 1.4068846702575684

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 72] [/input-16, 35] [/input-16, 35] [/input-16, 72] [/input-16, 72] [/input-16, 95] [/input-16, 35] [/input-16, 35] [/input-16, 72] [/input-16, 72] 
split level 1: [/input-16, 95] [/input-16, 72] [/input-16, 72] [/input-16, 95] [/input-16, 95] [/input-16, 138] [/input-16, 72] [/input-16, 72] [/input-16, 95] [/input-16, 95] 
split level 2: [/input-16, 215] [/input-16, 95] [/input-16, 95] [/input-16, 215] [/input-16, 138] [/input-16, 215] [/input-16, 95] [/input-16, 95] [/input-16, 215] [/input-16, 215] 
split level 3: [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12649273872375488
10 lb beta sum: 1.6538268327713013, worst -0.006474971771240234

all verified at 13th iter
Time: prepare 0.0065    bound 0.1057    transfer 0.0015    finalize 0.0059    func 0.1222    
Accumulated time: func 0.5182    prepare 0.0353    bound 0.4625    transfer 0.0060    finalize 0.0168    
all_split False
======================Cut inference begins======================
max lb tensor(0.30296445) min lb tensor(0.00242138)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.03774619102478027 
BICCOS Cumulative time: 0.06625199317932129
Preprocessing time: 0.011615991592407227 Inference time: 0.01763606071472168 Add cuts time: 0.008291006088256836 Cut analysis time: 0.00020313262939453125
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0006    decision 0.0253    set_bounds 0.0158    solve 0.1223    add 0.0188    
Accumulated time: pickout 0.0016    decision 0.8138    set_bounds 0.0386    solve 0.4449    add 0.1814    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([138, 215,  35]), tensor([-1., -1., -1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  1.48067042e-01,  1.69160411e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([138, 215,  35]), tensor([-1., -1.,  1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  1.48067042e-01,  2.03684613e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([138, 215,  35]), tensor([-1.,  1., -1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  1.94738671e-01,  1.64233252e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([138, 215,  35]), tensor([-1.,  1.,  1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  1.94738671e-01,  1.97812602e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([138, 215,  35]), tensor([ 1., -1., -1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  1.49074122e-01,  1.66662261e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([138, 215,  35]), tensor([ 1., -1.,  1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  1.49074122e-01,  2.01264307e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([138, 215,  35]), tensor([ 1.,  1., -1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  1.94573686e-01,  1.64870545e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([138, 215,  35]), tensor([1., 1., 1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  1.94573686e-01,  1.79302379e-01]), tensor([0, 1, 2]))}
Shallow branching resets to n domains:  8
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1234440803527832

all verified at 3th iter
Time: prepare 0.0004    bound 0.0261    transfer 0.0001    finalize 0.0004    func 0.0271    
Accumulated time: func 0.5453    prepare 0.0357    bound 0.4887    transfer 0.0062    finalize 0.0172    
After pruning, left:  0

Back to Regular BaB


Properties batch 3, size 1
Remaining timeout: 194.2948567867279
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 194.29422569274902
Verifying property 4 with 1 instances.
##### Instance 185 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.84179640]], device='cuda:0') need to verify.
Model prediction is: tensor([-49.04260635, -46.47156143, -47.52237701, -47.54033279, -46.95476151,
        -47.80789185, -46.89925385, -46.95186615, -49.43678665, -45.72424316],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.84179640]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1252
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 588
Node /39 input 0: size torch.Size([250]) unstable 33
-----------------
# of unstable neurons: 1873
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 9.799003601074219e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.84161376953125
10 lb beta sum: 0.0, worst -0.8416204452514648
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0728    transfer 0.0001    finalize 0.0002    func 0.0734    
Accumulated time: func 0.0734    prepare 0.0002    bound 0.0728    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 10] 
split level 1: [/input-16, 186] 
split level 2: [/input-16, 64] 
split level 3: [/input-16, 95] 
split level 4: [/input-16, 115] 
split level 5: [/input-16, 126] 
split level 6: [/input-16, 138] 
split level 7: [/input-16, 225] 
split level 8: [/input-16, 46] 
split level 9: [/input-16, 154] 
split level 10: [/input-16, 72] 
split level 11: [/input-16, 84] 
split level 12: [/input-16, 190] 
split level 13: [/input-16, 54] 
split level 14: [/input-12, 2484] 
split level 15: [/input-16, 58] 
split level 16: [/input-16, 134] 
split level 17: [/input-16, 35] 
split level 18: [/input-16, 160] 
split level 19: [/input-12, 2932] 
split level 20: [/input-12, 2931] 
split level 21: [/input-12, 822] 
split level 22: [/input-12, 2933] 
split level 23: [/input-16, 82] 
split level 24: [/input-16, 28] 
split level 25: [/input-12, 1969] 
split level 26: [/input-16, 215] 
split level 27: [/input-12, 6260] 
split level 28: [/input-12, 817] 
split level 29: [/input-12, 810] 
split level 30: [/input-12, 2660] 
split level 31: [/input-12, 2450] 
split level 32: [/input-12, 2474] 
split level 33: [/input-12, 2661] 
split level 34: [/input-12, 809] 
split level 35: [/input-12, 818] 
split level 36: [/input-12, 804] 
split level 37: [/input-12, 794] 
split level 38: [/input-12, 797] 
split level 39: [/input-12, 802] 
split level 40: [/input-12, 7790] 
split level 41: [/input-12, 803] 
split level 42: [/input-12, 2148] 
split level 43: [/input-12, 2668] 
split level 44: [/input-12, 2029] 
split level 45: [/input-12, 2481] 
split level 46: [/input-12, 6258] 
split level 47: [/input-12, 6261] 
split level 48: [/input-12, 6262] 
split level 49: [/input-12, 799] 
split level 50: [/input-12, 798] 
split level 51: [/input-12, 2473] 
split level 52: [/input-12, 1961] 
split level 53: [/input-12, 2028] 
split level 54: [/input-12, 2404] 
split level 55: [/input-12, 6842] 
split level 56: [/input-12, 2442] 
split level 57: [/input-12, 2149] 
split level 58: [/input-12, 816] 
split level 59: [/input-12, 220] 
split level 60: [/input-12, 2462] 
split level 61: [/input-12, 2461] 
split level 62: [/input-4, 6374] 
split level 63: [/input-12, 3476] 
split level 64: [/input-12, 2667] 
split level 65: [/input-12, 2677] 
split level 66: [/input-12, 3809] 
split level 67: [/input-4, 6371] 
split level 68: [/input-12, 3638] 
split level 69: [/input-12, 6257] 
split level 70: [/input-12, 2329] 
split level 71: [/input-12, 7851] 
split level 72: [/input-12, 806] 
split level 73: [/input-12, 7894] 
split level 74: [/input-12, 3941] 
split level 75: [/input-12, 4677] 
split level 76: [/input-4, 6375] 
split level 77: [/input-12, 2469] 
split level 78: [/input-12, 2940] 
split level 79: [/input-4, 4853] 
split level 80: [/input-12, 1192] 
split level 81: [/input-12, 2330] 
split level 82: [/input-12, 85] 
split level 83: [/input-12, 786] 
split level 84: [/input-12, 6845] 
split level 85: [/input-12, 3371] 
split level 86: [/input-12, 1588] 
split level 87: [/input-12, 8045] 
split level 88: [/input-12, 2669] 
split level 89: [/input-4, 4837] 
split level 90: [/input-12, 6052] 
split level 91: [/input-12, 6254] 
split level 92: [/input-12, 5554] 
split level 93: [/input-4, 3811] 
split level 94: [/input-12, 7828] 
split level 95: [/input-12, 2465] 
split level 96: [/input-12, 2890] 
split level 97: [/input-4, 1268] 
split level 98: [/input-4, 3051] 
split level 99: [/input-12, 7891] 
split level 100: [/input-4, 3820] 
split level 101: [/input-12, 2938] 
split level 102: [/input-12, 528] 
split level 103: [/input-12, 4153] 
split level 104: [/input-4, 84] 
split level 105: [/input-4, 4311] 
split level 106: [/input-12, 7332] 
split level 107: [/input-4, 3812] 
split level 108: [/input-4, 3303] 
split level 109: [/input-12, 1256] 
split level 110: [/input-4, 4317] 
split level 111: [/input-12, 3098] 
split level 112: [/input-4, 4581] 
split level 113: [/input-12, 2434] 
split level 114: [/input-4, 1270] 
split level 115: [/input-12, 4908] 
split level 116: [/input-12, 7970] 
split level 117: [/input-4, 4310] 
split level 118: [/input-12, 4214] 
split level 119: [/input-4, 4307] 
split level 120: [/input-4, 4059] 
split level 121: [/input-4, 6857] 
split level 122: [/input-4, 4585] 
split level 123: [/input-4, 5858] 
split level 124: [/input-12, 960] 
split level 125: [/input-12, 3477] 
split level 126: [/input-12, 4172] 
split level 127: [/input-12, 2609] 
split level 128: [/input-4, 4322] 
split level 129: [/input-12, 5526] 
split level 130: [/input-12, 7005] 
split level 131: [/input-4, 1190] 
split level 132: [/input-4, 4834] 
split level 133: [/input-12, 5001] 
split level 134: [/input-12, 2507] 
split level 135: [/input-4, 4555] 
split level 136: [/input-12, 3949] 
split level 137: [/input-12, 7151] 
split level 138: [/input-4, 5095] 
split level 139: [/input-4, 4845] 
split level 140: [/input-4, 1772] 
split level 141: [/input-4, 5835] 
split level 142: [/input-12, 315] 
split level 143: [/input-4, 4577] 
split level 144: [/input-4, 3816] 
split level 145: [/input-12, 337] 
split level 146: [/input-4, 4586] 
split level 147: [/input-4, 1767] 
split level 148: [/input-4, 3810] 
split level 149: [/input-4, 5090] 
split level 150: [/input-12, 2645] 
split level 151: [/input-4, 148] 
split level 152: [/input-12, 7996] 
split level 153: [/input-4, 4296] 
split level 154: [/input-4, 4839] 
split level 155: [/input-4, 4833] 
split level 156: [/input-4, 1481] 
split level 157: [/input-4, 4318] 
split level 158: [/input-4, 5108] 
split level 159: [/input-4, 4323] 
split level 160: [/input-12, 3608] 
split level 161: [/input-4, 8180] 
split level 162: [/input-12, 4205] 
split level 163: [/input-4, 4305] 
split level 164: [/input-4, 6331] 
split level 165: [/input-4, 4596] 
split level 166: [/input-12, 4686] 
split level 167: [/input-4, 3017] 
split level 168: [/input-4, 6394] 
split level 169: [/input-4, 1780] 
split level 170: [/input-4, 3302] 
split level 171: [/input-4, 1761] 
split level 172: [/input-12, 2338] 
split level 173: [/input-4, 8146] 
split level 174: [/input-4, 6890] 
split level 175: [/input-4, 4290] 
split level 176: [/input-12, 4426] 
split level 177: [/input-12, 5341] 
split level 178: [/input-4, 5832] 
split level 179: [/input-12, 3341] 
split level 180: [/input-12, 2539] 
split level 181: [/input-12, 3106] 
split level 182: [/input-12, 1921] 
split level 183: [/input-12, 6440] 
split level 184: [/input-4, 6387] 
split level 185: [/input-12, 7228] 
split level 186: [/input-4, 3549] 
split level 187: [/input-4, 4504] 
split level 188: [/input-4, 6887] 
split level 189: [/input-4, 147] 
split level 190: [/input-4, 4042] 
split level 191: [/input-12, 6775] 
split level 192: [/input-4, 3140] 
split level 193: [/input-12, 4887] 
split level 194: [/input-4, 1362] 
split level 195: [/input-12, 2032] 
split level 196: [/input-12, 2446] 
split level 197: [/input-4, 4270] 
split level 198: [/input-12, 2333] 
split level 199: [/input-12, 1079] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8411674499511719
10 lb beta sum: 0.0, worst -0.8411722183227539
Time: prepare 0.0119    bound 0.1328    transfer 0.0015    finalize 0.0104    func 0.1592    
Accumulated time: func 0.2326    prepare 0.0218    bound 0.2056    transfer 0.0016    finalize 0.0106    
all_split False
======================Cut inference begins======================
max lb tensor(0.06062317) min lb tensor(-0.84116459)
Number of Verified Splits: 1 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.01053619384765625 
BICCOS Cumulative time: 0.01053619384765625
Preprocessing time: 0.009874343872070312 Inference time: 7.62939453125e-05 Add cuts time: 3.790855407714844e-05 Cut analysis time: 0.0005476474761962891
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.81333 (1), -0.81314 (1), -0.81142 (1), -0.81109 (1), -0.81092 (1), -0.80874 (1), -0.80851 (1), -0.80795 (1), -0.80711 (1), -0.80610 (1), -0.80568 (1), -0.80429 (1), -0.80423 (1), -0.80336 (1), -0.80120 (1), -0.79989 (1), -0.79968 (1), -0.79714 (1), -0.79685 (1), -0.79639 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7631    set_bounds 0.0103    solve 0.1593    add 0.0742    
Accumulated time: pickout 0.0003    decision 0.7631    set_bounds 0.0103    solve 0.1593    add 0.0742    
Current (lb-rhs): -0.8133292198181152
50 domains visited
Cumulative time: 1.0982379913330078

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 10] [/input-16, 95] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] 
split level 1: [/input-16, 95] [/input-16, 126] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 115] [/input-16, 95] [/input-16, 95] [/input-16, 95] 
split level 2: [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 126] [/input-16, 115] [/input-16, 115] [/input-16, 115] 
split level 3: [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7823948860168457
10 lb beta sum: 0.1859624832868576, worst -0.7716878652572632
Time: prepare 0.0067    bound 0.1492    transfer 0.0038    finalize 0.0049    func 0.1672    
Accumulated time: func 0.3998    prepare 0.0288    bound 0.3548    transfer 0.0054    finalize 0.0155    
all_split False
======================Cut inference begins======================
max lb tensor(0.49006552) min lb tensor(-0.77165467)
Number of Verified Splits: 70 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.016108989715576172 
BICCOS Cumulative time: 0.026645183563232422
Preprocessing time: 0.011819839477539062 Inference time: 0.0027136802673339844 Add cuts time: 0.0012896060943603516 Cut analysis time: 0.00028586387634277344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.46671 (2), -0.46452 (2), -0.46283 (2), -0.46219 (2), -0.46053 (2), -0.45990 (2), -0.45455 (2), -0.45369 (2), -0.45087 (2), -0.44770 (2), -0.43587 (2), -0.43323 (2), -0.42916 (2), -0.42747 (2), -0.42637 (2), -0.42121 (2), -0.42005 (2), -0.40906 (2), -0.40596 (2), -0.40553 (2), 
Length of domains: 50
Time: pickout 0.0007    decision 0.0254    set_bounds 0.0134    solve 0.1673    add 0.0855    
Accumulated time: pickout 0.0010    decision 0.7885    set_bounds 0.0237    solve 0.3266    add 0.1598    
Current (lb-rhs): -0.4667069613933563
100 domains visited
Cumulative time: 1.4069421291351318

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 95] 
split level 1: [/input-16, 95] [/input-16, 115] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 115] [/input-16, 126] [/input-16, 115] [/input-16, 115] [/input-16, 126] 
split level 2: [/input-16, 138] [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 115] [/input-16, 126] [/input-16, 115] [/input-16, 138] [/input-16, 138] [/input-16, 115] 
split level 3: [/input-16, 126] [/input-16, 138] [/input-16, 115] [/input-16, 138] [/input-16, 126] [/input-16, 138] [/input-16, 138] [/input-16, 46] [/input-16, 46] [/input-16, 138] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.44294118881225586
10 lb beta sum: 0.7823162078857422, worst -0.42310357093811035
Time: prepare 0.0061    bound 0.1518    transfer 0.0016    finalize 0.0048    func 0.1670    
Accumulated time: func 0.5668    prepare 0.0351    bound 0.5067    transfer 0.0070    finalize 0.0204    
all_split False
======================Cut inference begins======================
max lb tensor(0.60662162) min lb tensor(-0.42083806)
Number of Verified Splits: 120 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 10
#cuts 4-6: 7
#cuts >= 20: 0
BICCOS time: 0.020470142364501953 
BICCOS Cumulative time: 0.047115325927734375
Preprocessing time: 0.011638402938842773 Inference time: 0.0058939456939697266 Add cuts time: 0.002384662628173828 Cut analysis time: 0.000553131103515625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15633 (3), -0.15591 (3), -0.15495 (3), -0.15288 (3), -0.15255 (3), -0.15021 (3), -0.14961 (3), -0.14868 (3), -0.14381 (3), -0.14378 (3), -0.14231 (3), -0.14229 (3), -0.13852 (3), -0.13839 (3), -0.13244 (3), -0.13173 (3), -0.12590 (3), -0.12580 (3), -0.12506 (3), -0.09889 (3), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0249    set_bounds 0.0156    solve 0.1671    add 0.1039    
Accumulated time: pickout 0.0017    decision 0.8134    set_bounds 0.0394    solve 0.4937    add 0.2636    
Current (lb-rhs): -0.15632522106170654
150 domains visited
Cumulative time: 1.7398126125335693

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] 
split level 1: [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 115] [/input-16, 64] [/input-16, 64] 
split level 2: [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 115] [/input-16, 138] [/input-16, 115] [/input-16, 138] [/input-16, 115] [/input-16, 115] 
split level 3: [/input-16, 46] [/input-16, 46] [/input-16, 46] [/input-16, 46] [/input-16, 46] [/input-16, 46] [/input-16, 46] [/input-16, 46] [/input-16, 138] [/input-16, 138] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20885372161865234
10 lb beta sum: 0.9078977108001709, worst -0.2932003140449524
Time: prepare 0.0061    bound 0.1717    transfer 0.0016    finalize 0.0053    func 0.1873    
Accumulated time: func 0.7541    prepare 0.0415    bound 0.6784    transfer 0.0086    finalize 0.0256    
all_split False
======================Cut inference begins======================
max lb tensor(0.43884814) min lb tensor(-0.11407059)
Number of Verified Splits: 295 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 15
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.03309035301208496 
BICCOS Cumulative time: 0.08020567893981934
Preprocessing time: 0.011625289916992188 Inference time: 0.015043258666992188 Add cuts time: 0.0059320926666259766 Cut analysis time: 0.0004897117614746094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06120 (4), -0.06086 (4), -0.05971 (4), -0.05969 (4), -0.05944 (4), -0.05927 (4), -0.05574 (4), -0.05530 (4), -0.05460 (4), -0.05384 (4), -0.05377 (4), -0.05345 (4), -0.05319 (4), -0.05315 (4), -0.05305 (4), -0.05246 (4), -0.05218 (4), -0.05182 (4), -0.05176 (4), -0.05163 (4), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0260    set_bounds 0.0153    solve 0.1874    add 0.2685    
Accumulated time: pickout 0.0023    decision 0.8394    set_bounds 0.0546    solve 0.6811    add 0.5321    
Current (lb-rhs): -0.06119942665100098
200 domains visited
Cumulative time: 2.270995855331421

Shallow-BaB round 5
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] 
split level 1: [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] 
split level 2: [/input-16, 126] [/input-16, 126] [/input-16, 95] [/input-16, 95] [/input-16, 126] [/input-16, 126] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] 
split level 3: [/input-16, 46] [/input-16, 46] [/input-16, 126] [/input-16, 126] [/input-16, 46] [/input-16, 46] [/input-16, 126] [/input-16, 126] [/input-16, 46] [/input-16, 46] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12957096099853516
10 lb beta sum: 0.6193951368331909, worst -0.08812791109085083
Time: prepare 0.0056    bound 0.1726    transfer 0.0016    finalize 0.0048    func 0.1873    
Accumulated time: func 0.9414    prepare 0.0474    bound 0.8509    transfer 0.0102    finalize 0.0305    
all_split False
======================Cut inference begins======================
max lb tensor(0.29366142) min lb tensor(-0.05828273)
Number of Verified Splits: 268 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 14
#cuts 4-6: 5
#cuts >= 20: 0
BICCOS time: 0.03346872329711914 
BICCOS Cumulative time: 0.11367440223693848
Preprocessing time: 0.011561155319213867 Inference time: 0.01615142822265625 Add cuts time: 0.005185604095458984 Cut analysis time: 0.0005705356597900391
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05327 (5), -0.05327 (5), -0.05307 (5), -0.05302 (5), -0.05146 (5), -0.05065 (5), -0.05023 (5), -0.05022 (5), -0.05015 (5), -0.04966 (5), -0.04931 (5), -0.04928 (5), -0.04904 (5), -0.04898 (5), -0.01360 (5), -0.01356 (5), -0.01203 (5), -0.01155 (5), -0.01153 (5), -0.01014 (5), 
Length of domains: 32
Time: pickout 0.0007    decision 0.0252    set_bounds 0.0158    solve 0.1873    add 0.1209    
Accumulated time: pickout 0.0030    decision 0.8646    set_bounds 0.0704    solve 0.8684    add 0.6529    
Current (lb-rhs): -0.05327308177947998
232 domains visited
Cumulative time: 2.6546123027801514

Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([154, 115, 138,  46,  10]), tensor([-1., -1., -1., -1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([1.68915963e+14, 1.61377415e-01, 1.75518379e-01, 1.14032194e-01,
        2.29584858e-01]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([154, 115, 138,  46,  10]), tensor([-1., -1., -1., -1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([1.68915963e+14, 1.61377415e-01, 1.75518379e-01, 1.14032194e-01,
        8.58204253e-03]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([154, 115, 138,  46,  10]), tensor([-1., -1., -1.,  1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([1.68915963e+14, 1.61377415e-01, 1.75518379e-01, 9.28374976e-02,
        2.44105026e-01]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([154, 115, 138,  46,  10]), tensor([-1., -1., -1.,  1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([1.68915963e+14, 1.61377415e-01, 1.75518379e-01, 9.28374976e-02,
        3.39470967e-03]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([154, 115, 138,  46,  10]), tensor([-1., -1.,  1., -1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([1.68915963e+14, 1.61377415e-01, 1.84254870e-01, 1.12066552e-01,
        2.39295170e-01]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([154, 115, 138,  46,  10]), tensor([-1., -1.,  1., -1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([1.68915963e+14, 1.61377415e-01, 1.84254870e-01, 1.12066552e-01,
        9.82521661e-03]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([154, 115, 138,  46,  10]), tensor([-1., -1.,  1.,  1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([1.68915963e+14, 1.61377415e-01, 1.84254870e-01, 9.32602137e-02,
        2.45852992e-01]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([154, 115, 138,  46,  10]), tensor([-1., -1.,  1.,  1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([1.68915963e+14, 1.61377415e-01, 1.84254870e-01, 9.32602137e-02,
        1.39956339e-03]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([154, 115, 138,  46,  10]), tensor([-1.,  1., -1., -1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([1.68915963e+14, 1.64523587e-01, 1.75312266e-01, 1.05526850e-01,
        2.29713961e-01]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([154, 115, 138,  46,  10]), tensor([-1.,  1., -1., -1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([1.68915963e+14, 1.64523587e-01, 1.75312266e-01, 1.05526850e-01,
        9.84399207e-03]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([154, 115, 138,  46,  10]), tensor([-1.,  1., -1.,  1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([1.68915963e+14, 1.64523587e-01, 1.75312266e-01, 9.50094908e-02,
        2.37725303e-01]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([154, 115, 138,  46,  10]), tensor([-1.,  1., -1.,  1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([1.68915963e+14, 1.64523587e-01, 1.75312266e-01, 9.50094908e-02,
        2.90732249e-03]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([154, 115, 138,  46,  10]), tensor([-1.,  1.,  1., -1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([1.68915963e+14, 1.64523587e-01, 1.86530694e-01, 1.08701751e-01,
        2.38606498e-01]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([154, 115, 138,  46,  10]), tensor([-1.,  1.,  1., -1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([1.68915963e+14, 1.64523587e-01, 1.86530694e-01, 1.08701751e-01,
        8.12260993e-03]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([154, 115, 138,  46,  10]), tensor([-1.,  1.,  1.,  1., -1.]), tensor([0, 0, 0, 0, 0]), tensor([1.68915963e+14, 1.64523587e-01, 1.86530694e-01, 9.19809788e-02,
        2.44459674e-01]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([154, 115, 138,  46,  10]), tensor([-1.,  1.,  1.,  1.,  1.]), tensor([0, 0, 0, 0, 0]), tensor([1.68915963e+14, 1.64523587e-01, 1.86530694e-01, 9.19809788e-02,
        6.96639856e-03]), tensor([0, 1, 2, 3, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([154]), tensor([1.]), tensor([0]), tensor([0.05126554]), tensor([0]))}
Shallow branching resets to n domains:  17
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.828984260559082
10 lb beta sum: 1.3633774518966675, worst -0.7524495124816895
Time: prepare 0.0006    bound 0.1686    transfer 0.0004    finalize 0.0007    func 0.1704    
Accumulated time: func 1.1118    prepare 0.0480    bound 1.0195    transfer 0.0106    finalize 0.0311    
After pruning, left:  9

Back to Regular BaB

BaB round 1
batch: 9
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 95] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2889374494552612, worst -0.6976051330566406
10 lb beta sum: 1.2924264669418335, worst -0.6992982625961304
Time: prepare 0.0010    bound 0.1630    transfer 0.0002    finalize 0.0006    func 0.1649    
Accumulated time: func 1.2767    prepare 0.0491    bound 1.1825    transfer 0.0108    finalize 0.0318    
all_split False
======================Cut inference begins======================
max lb tensor(0.17779899) min lb tensor(-0.69747150)
Number of Verified Splits: 8 of 18
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 1.2965044975280762, worst -0.4270130395889282

all verified at 2th iter
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 14
#cuts 4-6: 5
#cuts >= 20: 0
BICCOS time: 0.031018495559692383 
BICCOS Cumulative time: 0.14469289779663086
Preprocessing time: 0.0007746219635009766 Inference time: 0.029157638549804688 Add cuts time: 0.0005319118499755859 Cut analysis time: 0.0005543231964111328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.69747 (1), -0.38586 (1), -0.08356 (1), -0.07985 (1), -0.07517 (1), -0.06789 (1), -0.06318 (1), -0.05862 (1), -0.05145 (1), -0.05032 (1), 
Length of domains: 10
Time: pickout 0.0005    decision 0.0132    set_bounds 0.0010    solve 0.1650    add 0.0011    
Accumulated time: pickout 0.0034    decision 0.8779    set_bounds 0.0714    solve 1.0334    add 0.6541    
Current (lb-rhs): -0.6974714994430542
242 domains visited
Cumulative time: 3.079141616821289

BaB round 2
batch: 10
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 10] [/input-16, 10] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2978938817977905, worst -0.697471022605896
10 lb beta sum: 1.3316847085952759, worst -0.699161171913147
Time: prepare 0.0011    bound 0.1638    transfer 0.0003    finalize 0.0006    func 0.1660    
Accumulated time: func 1.4427    prepare 0.0504    bound 1.3463    transfer 0.0111    finalize 0.0323    
all_split False
======================Cut inference begins======================
max lb tensor(0.25355446) min lb tensor(-0.69747102)
Number of Verified Splits: 15 of 20
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 1.300365686416626, worst -0.4217325448989868
10 lb beta sum: 1.5453553199768066, worst -0.09335136413574219
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 14
#cuts 4-6: 5
#cuts >= 20: 0
BICCOS time: 0.173126220703125 
BICCOS Cumulative time: 0.31781911849975586
Preprocessing time: 0.0008804798126220703 Inference time: 0.17106080055236816 Add cuts time: 0.0006392002105712891 Cut analysis time: 0.0005457401275634766
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.69747 (2), -0.38072 (2), -0.01441 (2), -0.01027 (2), -0.00990 (2), 
Length of domains: 5
Time: pickout 0.0004    decision 0.0135    set_bounds 0.0011    solve 0.1660    add 0.0010    
Accumulated time: pickout 0.0039    decision 0.8913    set_bounds 0.0726    solve 1.1994    add 0.6551    
Current (lb-rhs): -0.697471022605896
247 domains visited
Cumulative time: 3.434601306915283

BaB round 3
batch: 5
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 126] [/input-16, 126] [/input-16, 126] [/input-16, 115] [/input-16, 115] 
split level 1: [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 126] [/input-16, 126] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4267215728759766, worst -0.5315688848495483
10 lb beta sum: 1.562188982963562, worst -0.5230668783187866
Time: prepare 0.0010    bound 0.1612    transfer 0.0002    finalize 0.0005    func 0.1632    
Accumulated time: func 1.6059    prepare 0.0516    bound 1.5076    transfer 0.0114    finalize 0.0328    
all_split False
======================Cut inference begins======================
max lb tensor(0.19939232) min lb tensor(-0.52272296)
Number of Verified Splits: 13 of 20
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 1.5122272968292236, worst -0.6730494499206543
10 lb beta sum: 1.837147831916809, worst -0.06607973575592041
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 14
#cuts 4-6: 5
#cuts >= 20: 0
BICCOS time: 0.17434334754943848 
BICCOS Cumulative time: 0.49216246604919434
Preprocessing time: 0.0008730888366699219 Inference time: 0.17221403121948242 Add cuts time: 0.0007116794586181641 Cut analysis time: 0.0005445480346679688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.52272 (4), -0.50968 (4), -0.35340 (4), -0.31163 (4), -0.23229 (4), -0.22290 (4), -0.00381 (4), 
Length of domains: 7
Time: pickout 0.0004    decision 0.0133    set_bounds 0.0013    solve 0.1632    add 0.0011    
Accumulated time: pickout 0.0043    decision 0.9046    set_bounds 0.0739    solve 1.3626    add 0.6562    
Current (lb-rhs): -0.5227229595184326
254 domains visited
Cumulative time: 3.7884750366210938

BaB round 4
batch: 7
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] 
cut re-enabled after branching node selection
0 lb beta sum: 1.6217381954193115, worst -0.5227220058441162
10 lb beta sum: 1.6209479570388794, worst -0.5227850675582886
Time: prepare 0.0008    bound 0.1659    transfer 0.0002    finalize 0.0004    func 0.1674    
Accumulated time: func 1.7733    prepare 0.0526    bound 1.6734    transfer 0.0115    finalize 0.0333    
all_split False
======================Cut inference begins======================
max lb tensor(0.47021949) min lb tensor(-0.52254236)
Number of Verified Splits: 8 of 14
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 1.6693313121795654, worst -0.5321505665779114
10 lb beta sum: 1.8743473291397095, worst -0.027467012405395508
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 14
#cuts 4-6: 5
#cuts >= 20: 0
BICCOS time: 0.1684856414794922 
BICCOS Cumulative time: 0.6606481075286865
Preprocessing time: 0.000736236572265625 Inference time: 0.1666727066040039 Add cuts time: 0.0005354881286621094 Cut analysis time: 0.0005412101745605469
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.52254 (5), -0.50932 (5), -0.34959 (5), -0.30815 (5), -0.22921 (5), -0.21984 (5), 
Length of domains: 6
Time: pickout 0.0004    decision 0.0132    set_bounds 0.0009    solve 0.1676    add 0.0011    
Accumulated time: pickout 0.0047    decision 0.9178    set_bounds 0.0748    solve 1.5301    add 0.6573    
Current (lb-rhs): -0.5225423574447632
260 domains visited
Cumulative time: 4.1404290199279785

BaB round 5
batch: 6
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] 
split level 1: [/input-16, 46] [/input-16, 46] [/input-16, 46] [/input-16, 46] [/input-16, 46] [/input-16, 46] 
cut re-enabled after branching node selection
0 lb beta sum: 1.5583046674728394, worst -0.35778892040252686
10 lb beta sum: 1.5761308670043945, worst -0.35433757305145264
Time: prepare 0.0012    bound 0.1668    transfer 0.0005    finalize 0.0006    func 0.1693    
Accumulated time: func 1.9427    prepare 0.0540    bound 1.8403    transfer 0.0121    finalize 0.0339    
all_split False
======================Cut inference begins======================
max lb tensor(-0.00226796) min lb tensor(-0.35405576)
Number of Verified Splits: 0 of 24
No cut inferred: All or none verified.
Total number of valid cuts: 19.
#cuts 1-3: 14
#cuts 4-6: 5
#cuts >= 20: 0
BICCOS time: 0.0010714530944824219 
BICCOS Cumulative time: 0.661719560623169
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.35406 (7), -0.33558 (7), -0.33548 (7), -0.33115 (7), -0.32820 (7), -0.31847 (7), -0.31090 (7), -0.30759 (7), -0.18602 (7), -0.16286 (7), -0.14900 (7), -0.14412 (7), -0.12549 (7), -0.12332 (7), -0.10609 (7), -0.08797 (7), -0.05642 (7), -0.05216 (7), -0.04243 (7), -0.04160 (7), 
Length of domains: 24
Time: pickout 0.0004    decision 0.0134    set_bounds 0.0015    solve 0.1694    add 0.0014    
Accumulated time: pickout 0.0051    decision 0.9312    set_bounds 0.0763    solve 1.6995    add 0.6587    
Current (lb-rhs): -0.3540557622909546
284 domains visited
Cumulative time: 4.327632665634155

BaB round 6
batch: 24
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 72] 
cut re-enabled after branching node selection
0 lb beta sum: 1.566840410232544, worst -0.3182758092880249
10 lb beta sum: 1.566840410232544, worst -0.3179110288619995
Time: prepare 0.0022    bound 0.1639    transfer 0.0007    finalize 0.0015    func 0.1686    
Accumulated time: func 2.1112    prepare 0.0563    bound 2.0041    transfer 0.0127    finalize 0.0354    
all_split False
======================Cut inference begins======================
max lb tensor(0.05483580) min lb tensor(-0.31775224)
Number of Verified Splits: 12 of 48
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 1.4272865056991577, worst -0.21358978748321533
10 lb beta sum: 1.6245940923690796, worst -0.08066892623901367
Total number of valid cuts: 19.
#cuts 1-3: 14
#cuts 4-6: 5
#cuts >= 20: 0
BICCOS time: 0.17190098762512207 
BICCOS Cumulative time: 0.833620548248291
Preprocessing time: 0.0016417503356933594 Inference time: 0.16995525360107422 Add cuts time: 0.0002865791320800781 Cut analysis time: 1.7404556274414062e-05
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.31775 (8), -0.29991 (8), -0.29976 (8), -0.29587 (8), -0.29031 (8), -0.28140 (8), -0.28092 (8), -0.27334 (8), -0.27118 (8), -0.25939 (8), -0.25834 (8), -0.25832 (8), -0.24759 (8), -0.24727 (8), -0.24250 (8), -0.23530 (8), -0.14808 (8), -0.12436 (8), -0.11457 (8), -0.11117 (8), 
Length of domains: 36
Time: pickout 0.0005    decision 0.0143    set_bounds 0.0023    solve 0.1686    add 0.0015    
Accumulated time: pickout 0.0056    decision 0.9455    set_bounds 0.0785    solve 1.8681    add 0.6602    
Current (lb-rhs): -0.31775224208831787
320 domains visited
Cumulative time: 4.686922550201416

BaB round 7
batch: 36
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 186] 
cut re-enabled after branching node selection
0 lb beta sum: 1.6133582592010498, worst -0.3177527189254761
10 lb beta sum: 1.6133582592010498, worst -0.3176344633102417
Time: prepare 0.0031    bound 0.1642    transfer 0.0007    finalize 0.0014    func 0.1699    
Accumulated time: func 2.2811    prepare 0.0596    bound 2.1683    transfer 0.0134    finalize 0.0368    
all_split False
======================Cut inference begins======================
max lb tensor(0.47026032) min lb tensor(-0.31757724)
Number of Verified Splits: 36 of 72
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 1.6133582592010498, worst -0.39235812425613403

all verified at 3th iter
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 14
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.05965757369995117 
BICCOS Cumulative time: 0.8932781219482422
Preprocessing time: 0.0022995471954345703 Inference time: 0.055325984954833984 Add cuts time: 0.001432657241821289 Cut analysis time: 0.0005993843078613281
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.31758 (9), -0.29979 (9), -0.29944 (9), -0.29559 (9), -0.28997 (9), -0.28118 (9), -0.28006 (9), -0.27313 (9), -0.27097 (9), -0.25877 (9), -0.25765 (9), -0.25728 (9), -0.24727 (9), -0.24682 (9), -0.24216 (9), -0.23475 (9), -0.14675 (9), -0.12287 (9), -0.11230 (9), -0.10913 (9), 
Length of domains: 36
Time: pickout 0.0005    decision 0.0146    set_bounds 0.0032    solve 0.1699    add 0.0016    
Accumulated time: pickout 0.0061    decision 0.9601    set_bounds 0.0817    solve 2.0380    add 0.6618    
Current (lb-rhs): -0.3175772428512573
356 domains visited
Cumulative time: 4.93683385848999

BaB round 8
batch: 36
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 84] [/input-16, 84] [/input-16, 84] [/input-16, 84] [/input-16, 84] [/input-16, 84] [/input-16, 84] [/input-16, 84] [/input-16, 84] [/input-16, 84] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2965836524963379
10 lb beta sum: 0.7499915361404419, worst -0.28719788789749146
Time: prepare 0.0013    bound 0.1642    transfer 0.0004    finalize 0.0011    func 0.1675    
Accumulated time: func 2.4486    prepare 0.0611    bound 2.3325    transfer 0.0139    finalize 0.0379    
all_split False
======================Cut inference begins======================
max lb tensor(0.21391010) min lb tensor(-0.28713042)
Number of Verified Splits: 25 of 72
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 10
#cuts 4-6: 9
#cuts >= 20: 0
BICCOS time: 0.00641632080078125 
BICCOS Cumulative time: 0.8996944427490234
Preprocessing time: 0.002309083938598633 Inference time: 0.0024971961975097656 Add cuts time: 0.000926971435546875 Cut analysis time: 0.0006830692291259766
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.28713 (10), -0.26922 (10), -0.26860 (10), -0.26497 (10), -0.25993 (10), -0.25165 (10), -0.25091 (10), -0.24989 (10), -0.24315 (10), -0.24139 (10), -0.23675 (10), -0.23364 (10), -0.22942 (10), -0.22835 (10), -0.22782 (10), -0.22670 (10), -0.21755 (10), -0.21714 (10), -0.21658 (10), -0.21303 (10), 
Length of domains: 47
Time: pickout 0.0006    decision 0.0147    set_bounds 0.0032    solve 0.1676    add 0.0018    
Accumulated time: pickout 0.0067    decision 0.9748    set_bounds 0.0849    solve 2.2056    add 0.6636    
Current (lb-rhs): -0.2871304154396057
403 domains visited
Cumulative time: 5.1313958168029785

BaB round 9
batch: 47
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 54] [/input-16, 54] [/input-16, 54] [/input-16, 54] [/input-16, 54] [/input-16, 54] [/input-16, 54] [/input-16, 54] [/input-16, 54] [/input-16, 54] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.26734447479248047
10 lb beta sum: 0.7863061428070068, worst -0.2580268979072571
Time: prepare 0.0016    bound 0.1482    transfer 0.0006    finalize 0.0019    func 0.1531    
Accumulated time: func 2.6018    prepare 0.0629    bound 2.4807    transfer 0.0145    finalize 0.0398    
all_split False
======================Cut inference begins======================
max lb tensor(0.02293500) min lb tensor(-0.25798282)
Number of Verified Splits: 12 of 94
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 11
#cuts 4-6: 7
#cuts >= 20: 0
BICCOS time: 0.005597829818725586 
BICCOS Cumulative time: 0.905292272567749
Preprocessing time: 0.002956390380859375 Inference time: 0.0013310909271240234 Add cuts time: 0.0006403923034667969 Cut analysis time: 0.0006699562072753906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25798 (11), -0.24504 (11), -0.24091 (11), -0.23981 (11), -0.23631 (11), -0.23129 (11), -0.22504 (11), -0.22337 (11), -0.22289 (11), -0.22269 (11), -0.22066 (11), -0.21868 (11), -0.21650 (11), -0.21464 (11), -0.21262 (11), -0.20905 (11), -0.20850 (11), -0.20610 (11), -0.20539 (11), -0.20498 (11), 
Length of domains: 82
Time: pickout 0.0005    decision 0.0153    set_bounds 0.0041    solve 0.1532    add 0.0024    
Accumulated time: pickout 0.0072    decision 0.9901    set_bounds 0.0891    solve 2.3587    add 0.6659    
Current (lb-rhs): -0.2579828202724457
485 domains visited
Cumulative time: 5.312761068344116

BaB round 10
batch: 82
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.25917959213256836
10 lb beta sum: 0.58722984790802, worst -0.2579650282859802
Time: prepare 0.0026    bound 0.1504    transfer 0.0011    finalize 0.0033    func 0.1585    
Accumulated time: func 2.7603    prepare 0.0657    bound 2.6311    transfer 0.0156    finalize 0.0431    
all_split False
======================Cut inference begins======================
max lb tensor(0.63799107) min lb tensor(-0.25794846)
Number of Verified Splits: 82 of 164
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 9
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.01558375358581543 
BICCOS Cumulative time: 0.9208760261535645
Preprocessing time: 0.004925727844238281 Inference time: 0.00886392593383789 Add cuts time: 0.0013883113861083984 Cut analysis time: 0.0004057884216308594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25795 (12), -0.24475 (12), -0.24086 (12), -0.23977 (12), -0.23625 (12), -0.23123 (12), -0.22480 (12), -0.22313 (12), -0.22280 (12), -0.22204 (12), -0.22035 (12), -0.21824 (12), -0.21641 (12), -0.21464 (12), -0.21262 (12), -0.20891 (12), -0.20784 (12), -0.20603 (12), -0.20466 (12), -0.20345 (12), 
Length of domains: 82
Time: pickout 0.0006    decision 0.0171    set_bounds 0.0071    solve 0.1586    add 0.0022    
Accumulated time: pickout 0.0078    decision 1.0071    set_bounds 0.0962    solve 2.5174    add 0.6681    
Current (lb-rhs): -0.25794845819473267
567 domains visited
Cumulative time: 5.514631509780884

BaB round 11
batch: 82
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.24926424026489258
10 lb beta sum: 0.5159496665000916, worst -0.24803297221660614
Time: prepare 0.0028    bound 0.1500    transfer 0.0007    finalize 0.0023    func 0.1568    
Accumulated time: func 2.9172    prepare 0.0686    bound 2.7811    transfer 0.0163    finalize 0.0454    
all_split False
======================Cut inference begins======================
max lb tensor(0.59954375) min lb tensor(-0.24802548)
Number of Verified Splits: 85 of 164
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 10
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.01628851890563965 
BICCOS Cumulative time: 0.9371645450592041
Preprocessing time: 0.004881381988525391 Inference time: 0.009342432022094727 Add cuts time: 0.0016164779663085938 Cut analysis time: 0.0004482269287109375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.24803 (13), -0.23488 (13), -0.23098 (13), -0.23017 (13), -0.22666 (13), -0.22096 (13), -0.21919 (13), -0.21538 (13), -0.21330 (13), -0.21283 (13), -0.21148 (13), -0.20888 (13), -0.20622 (13), -0.20477 (13), -0.20286 (13), -0.19926 (13), -0.19740 (13), -0.19580 (13), -0.19455 (13), -0.19304 (13), 
Length of domains: 79
Time: pickout 0.0008    decision 0.0170    set_bounds 0.0067    solve 0.1569    add 0.0022    
Accumulated time: pickout 0.0086    decision 1.0241    set_bounds 0.1029    solve 2.6743    add 0.6703    
Current (lb-rhs): -0.24802547693252563
646 domains visited
Cumulative time: 5.7151267528533936

BaB round 12
batch: 79
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 160] [/input-16, 58] [/input-16, 28] [/input-16, 160] [/input-16, 160] [/input-16, 58] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.235198974609375
10 lb beta sum: 0.4954850673675537, worst -0.2338828444480896
Time: prepare 0.0026    bound 0.1575    transfer 0.0007    finalize 0.0025    func 0.1644    
Accumulated time: func 3.0815    prepare 0.0715    bound 2.9386    transfer 0.0171    finalize 0.0479    
all_split False
======================Cut inference begins======================
max lb tensor(0.33392805) min lb tensor(-0.23387010)
Number of Verified Splits: 29 of 158
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 10
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.00963902473449707 
BICCOS Cumulative time: 0.9468035697937012
Preprocessing time: 0.0048122406005859375 Inference time: 0.003406047821044922 Add cuts time: 0.0006144046783447266 Cut analysis time: 0.0008063316345214844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23387 (14), -0.22074 (14), -0.21721 (14), -0.21599 (14), -0.21281 (14), -0.20668 (14), -0.20117 (14), -0.19968 (14), -0.19867 (14), -0.19816 (14), -0.19731 (14), -0.19633 (14), -0.19507 (14), -0.19204 (14), -0.19076 (14), -0.18903 (14), -0.18352 (14), -0.18172 (14), -0.18044 (14), -0.18000 (14), 
Length of domains: 129
Time: pickout 0.0008    decision 0.0218    set_bounds 0.0066    solve 0.1644    add 0.0028    
Accumulated time: pickout 0.0094    decision 1.0459    set_bounds 0.1095    solve 2.8387    add 0.6732    
Current (lb-rhs): -0.23387010395526886
775 domains visited
Cumulative time: 5.9216015338897705

BaB round 13
batch: 129
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 28] [/input-16, 28] [/input-16, 28] [/input-16, 28] [/input-16, 28] [/input-16, 28] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2164607048034668
10 lb beta sum: 0.48478028178215027, worst -0.21518318355083466
Time: prepare 0.0042    bound 0.1710    transfer 0.0010    finalize 0.0043    func 0.1824    
Accumulated time: func 3.2639    prepare 0.0759    bound 3.1097    transfer 0.0181    finalize 0.0522    
all_split False
======================Cut inference begins======================
max lb tensor(0.40228945) min lb tensor(-0.21515994)
Number of Verified Splits: 32 of 258
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 10
#cuts 4-6: 7
#cuts >= 20: 0
BICCOS time: 0.013425588607788086 
BICCOS Cumulative time: 0.9602291584014893
Preprocessing time: 0.007891654968261719 Inference time: 0.00395512580871582 Add cuts time: 0.0006687641143798828 Cut analysis time: 0.0009100437164306641
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21516 (15), -0.21469 (15), -0.20218 (15), -0.20130 (15), -0.19832 (15), -0.19795 (15), -0.19742 (15), -0.19656 (15), -0.19630 (15), -0.19421 (15), -0.19354 (15), -0.18811 (15), -0.18722 (15), -0.18468 (15), -0.18243 (15), -0.18188 (15), -0.18111 (15), -0.18005 (15), -0.17992 (15), -0.17938 (15), 
Length of domains: 226
Time: pickout 0.0008    decision 0.0211    set_bounds 0.0108    solve 0.1825    add 0.0057    
Accumulated time: pickout 0.0102    decision 1.0670    set_bounds 0.1203    solve 3.0211    add 0.6789    
Current (lb-rhs): -0.21515993773937225
1001 domains visited
Cumulative time: 6.156437158584595

BaB round 14
batch: 226
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-12, 7790] [/input-16, 215] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2152099609375
10 lb beta sum: 0.5070394277572632, worst -0.21401634812355042
Time: prepare 0.0074    bound 0.1720    transfer 0.0060    finalize 0.0102    func 0.1986    
Accumulated time: func 3.4625    prepare 0.0835    bound 3.2817    transfer 0.0241    finalize 0.0624    
all_split False
======================Cut inference begins======================
max lb tensor(0.43885860) min lb tensor(-0.21399930)
Number of Verified Splits: 58 of 452
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 10
#cuts 4-6: 12
#cuts >= 20: 0
BICCOS time: 0.0220944881439209 
BICCOS Cumulative time: 0.9823236465454102
Preprocessing time: 0.012845754623413086 Inference time: 0.007392406463623047 Add cuts time: 0.0011851787567138672 Cut analysis time: 0.0006711483001708984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21400 (16), -0.20238 (16), -0.18944 (16), -0.18868 (16), -0.18547 (16), -0.18519 (16), -0.18509 (16), -0.18437 (16), -0.18157 (16), -0.18078 (16), -0.17871 (16), -0.17768 (16), -0.17728 (16), -0.17522 (16), -0.17440 (16), -0.17197 (16), -0.17138 (16), -0.17100 (16), -0.17098 (16), -0.16996 (16), 
Length of domains: 394
Time: pickout 0.0075    decision 0.0274    set_bounds 0.0192    solve 0.1988    add 0.0081    
Accumulated time: pickout 0.0177    decision 1.0944    set_bounds 0.1394    solve 3.2199    add 0.6869    
Current (lb-rhs): -0.21399930119514465
1395 domains visited
Cumulative time: 6.440903902053833

BaB round 15
batch: 256
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 810] [/input-12, 804] [/input-12, 810] [/input-12, 810] [/input-12, 818] [/input-12, 810] [/input-12, 2148] [/input-12, 810] [/input-16, 215] [/input-12, 810] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2029743194580078
10 lb beta sum: 0.49625077843666077, worst -0.20174065232276917
Time: prepare 0.0099    bound 0.1715    transfer 0.0022    finalize 0.0071    func 0.1940    
Accumulated time: func 3.6565    prepare 0.0936    bound 3.4532    transfer 0.0263    finalize 0.0695    
all_split False
======================Cut inference begins======================
max lb tensor(0.43022358) min lb tensor(-0.20173240)
Number of Verified Splits: 80 of 512
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 11
#cuts 4-6: 15
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.028458833694458008 
BICCOS Cumulative time: 1.0107824802398682
Preprocessing time: 0.014704465866088867 Inference time: 0.010224103927612305 Add cuts time: 0.002679586410522461 Cut analysis time: 0.000850677490234375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20173 (17), -0.19358 (17), -0.18944 (16), -0.18665 (17), -0.18547 (16), -0.18437 (16), -0.18392 (17), -0.18078 (16), -0.17819 (17), -0.17787 (17), -0.17768 (16), -0.17522 (16), -0.17500 (17), -0.17469 (17), -0.16963 (16), -0.16893 (17), -0.16810 (16), -0.16756 (17), -0.16690 (16), -0.16629 (16), 
Length of domains: 570
Time: pickout 0.0012    decision 0.0297    set_bounds 0.0181    solve 0.1942    add 0.0086    
Accumulated time: pickout 0.0189    decision 1.1241    set_bounds 0.1576    solve 3.4141    add 0.6955    
Current (lb-rhs): -0.20173239707946777
1827 domains visited
current_vram/total_varm: 2.7GB/99.9GB, batch_size increase to 512
Cumulative time: 6.722472906112671

BaB round 16
batch: 512
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 810] [/input-12, 810] [/input-16, 215] [/input-12, 810] [/input-12, 810] [/input-16, 215] [/input-12, 810] [/input-12, 810] [/input-16, 134] [/input-12, 2148] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19422054290771484
10 lb beta sum: 0.644184947013855, worst -0.18604174256324768
Time: prepare 0.0196    bound 0.2240    transfer 0.0047    finalize 0.0301    func 0.2853    
Accumulated time: func 3.9418    prepare 0.1134    bound 3.6772    transfer 0.0310    finalize 0.0996    
all_split False
======================Cut inference begins======================
max lb tensor(0.75077093) min lb tensor(-0.18600897)
Number of Verified Splits: 260 of 1024
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 14
#cuts 4-6: 12
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.07094597816467285 
BICCOS Cumulative time: 1.081728458404541
Preprocessing time: 0.030879974365234375 Inference time: 0.034631967544555664 Add cuts time: 0.004593849182128906 Cut analysis time: 0.0008401870727539062
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18665 (17), -0.18601 (18), -0.18191 (18), -0.18129 (17), -0.17900 (18), -0.17855 (17), -0.17819 (17), -0.17469 (17), -0.17386 (17), -0.16859 (17), -0.16788 (18), -0.16756 (17), -0.16730 (17), -0.16260 (18), -0.16110 (18), -0.16102 (17), -0.16033 (17), -0.16026 (17), -0.16007 (17), -0.15972 (17), 
Length of domains: 822
Time: pickout 0.0019    decision 0.0496    set_bounds 0.0408    solve 0.2856    add 0.0162    
Accumulated time: pickout 0.0208    decision 1.1737    set_bounds 0.1984    solve 3.6997    add 0.7117    
Current (lb-rhs): -0.18664582073688507
2591 domains visited
current_vram/total_varm: 3.9GB/99.9GB, batch_size increase to 1024
Cumulative time: 7.191471576690674

BaB round 17
batch: 822
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 134] [/input-12, 810] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-12, 810] [/input-12, 810] [/input-12, 810] [/input-16, 82] [/input-12, 810] 
cut re-enabled after branching node selection
0 lb beta sum: 0.611575722694397, worst -0.8837037682533264
10 lb beta sum: 0.7075265049934387, worst -0.1859913319349289
Time: prepare 0.0704    bound 0.3218    transfer 0.0096    finalize 0.0468    func 0.4595    
Accumulated time: func 4.4014    prepare 0.1841    bound 3.9990    transfer 0.0406    finalize 0.1464    
all_split False
======================Cut inference begins======================
max lb tensor(0.86631131) min lb tensor(-0.18597560)
Number of Verified Splits: 557 of 1644
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 18
#cuts 4-6: 5
#cuts >= 20: 0
BICCOS time: 0.13857746124267578 
BICCOS Cumulative time: 1.2203059196472168
Preprocessing time: 0.051072120666503906 Inference time: 0.07627272605895996 Add cuts time: 0.01059269905090332 Cut analysis time: 0.0006399154663085938
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18598 (19), -0.18075 (19), -0.17899 (19), -0.17665 (18), -0.17497 (18), -0.17259 (18), -0.17223 (18), -0.16877 (18), -0.16805 (18), -0.16788 (19), -0.16605 (18), -0.16260 (19), -0.16018 (18), -0.15899 (18), -0.15893 (19), -0.15484 (19), -0.15429 (18), -0.15411 (18), -0.15372 (18), -0.15356 (18), 
Length of domains: 1087
Time: pickout 0.0244    decision 0.2316    set_bounds 0.0692    solve 0.4598    add 0.0270    
Accumulated time: pickout 0.0452    decision 1.4053    set_bounds 0.2676    solve 4.1596    add 0.7388    
Current (lb-rhs): -0.1859755963087082
3678 domains visited
Cumulative time: 8.150634765625

BaB round 18
batch: 1024
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 134] [/input-16, 134] [/input-16, 82] [/input-16, 134] [/input-16, 82] [/input-16, 134] [/input-16, 82] [/input-12, 2148] [/input-16, 82] [/input-16, 82] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18247604370117188
10 lb beta sum: 1.1082289218902588, worst -0.17513170838356018
Time: prepare 0.0411    bound 0.3715    transfer 0.0164    finalize 0.0679    func 0.5112    
Accumulated time: func 4.9126    prepare 0.2254    bound 4.3705    transfer 0.0570    finalize 0.2142    
all_split False
======================Cut inference begins======================
max lb tensor(1.21020985) min lb tensor(-0.17511944)
Number of Verified Splits: 1628 of 2048
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 24
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.3115122318267822 
BICCOS Cumulative time: 1.531818151473999
Preprocessing time: 0.06345558166503906 Inference time: 0.22622966766357422 Add cuts time: 0.021066665649414062 Cut analysis time: 0.0007603168487548828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17899 (19), -0.17512 (20), -0.16753 (19), -0.16523 (19), -0.16485 (19), -0.16471 (20), -0.16091 (20), -0.16076 (19), -0.15994 (19), -0.15814 (19), -0.15781 (19), -0.15421 (19), -0.15344 (19), -0.15099 (19), -0.15071 (20), -0.14542 (19), -0.14424 (19), -0.14401 (19), -0.14302 (20), -0.14274 (20), 
Length of domains: 483
Time: pickout 0.0043    decision 0.0870    set_bounds 0.0858    solve 0.5117    add 0.0087    
Accumulated time: pickout 0.0495    decision 1.4922    set_bounds 0.3534    solve 4.6712    add 0.7475    
Current (lb-rhs): -0.1789875626564026
4098 domains visited
current_vram/total_varm: 7.9GB/99.9GB, batch_size increase to 2048
Cumulative time: 9.177174806594849

BaB round 19
batch: 483
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 818] [/input-12, 818] [/input-12, 802] [/input-16, 82] [/input-16, 134] [/input-12, 818] [/input-12, 804] [/input-12, 818] [/input-12, 804] [/input-12, 804] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17547225952148438
10 lb beta sum: 2.034503698348999, worst -0.15257340669631958
Time: prepare 0.0197    bound 0.2258    transfer 0.0034    finalize 0.0176    func 0.4268    
Accumulated time: func 5.3395    prepare 0.2453    bound 4.5963    transfer 0.0604    finalize 0.2319    
all_split False
======================Cut inference begins======================
max lb tensor(1.40359974) min lb tensor(-0.15252265)
Number of Verified Splits: 881 of 966
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 26
#cuts >= 20: 0
BICCOS time: 0.16762733459472656 
BICCOS Cumulative time: 1.6994454860687256
Preprocessing time: 0.030791759490966797 Inference time: 0.12376928329467773 Add cuts time: 0.01244807243347168 Cut analysis time: 0.0006182193756103516
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15252 (21), -0.14899 (21), -0.14598 (20), -0.13379 (20), -0.13142 (20), -0.12909 (20), -0.12774 (20), -0.12710 (21), -0.12686 (20), -0.12523 (20), -0.12519 (20), -0.12366 (21), -0.12265 (20), -0.12259 (20), -0.12208 (20), -0.12078 (20), -0.11912 (20), -0.11631 (20), -0.08994 (20), -0.08654 (20), 
Length of domains: 85
Time: pickout 0.0026    decision 0.0518    set_bounds 0.0412    solve 0.4271    add 0.0024    
Accumulated time: pickout 0.0521    decision 1.5440    set_bounds 0.3947    solve 5.0983    add 0.7499    
Current (lb-rhs): -0.15252265334129333
4183 domains visited
Cumulative time: 9.875224351882935

BaB round 20
batch: 85
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7790] [/input-16, 134] [/input-16, 134] [/input-16, 134] [/input-12, 7790] [/input-12, 818] [/input-12, 804] [/input-16, 82] [/input-16, 134] [/input-12, 818] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1666731834411621
10 lb beta sum: 1.6902692317962646, worst -0.13812994956970215
Time: prepare 0.0037    bound 0.1696    transfer 0.0008    finalize 0.0034    func 0.1786    
Accumulated time: func 5.5181    prepare 0.2492    bound 4.7659    transfer 0.0612    finalize 0.2353    
all_split False
======================Cut inference begins======================
max lb tensor(0.65322661) min lb tensor(-0.13810408)
Number of Verified Splits: 91 of 170
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 28
#cuts >= 20: 0
BICCOS time: 0.020653486251831055 
BICCOS Cumulative time: 1.7200989723205566
Preprocessing time: 0.005286693572998047 Inference time: 0.01301431655883789 Add cuts time: 0.0018420219421386719 Cut analysis time: 0.0005104541778564453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13810 (22), -0.13449 (22), -0.13157 (21), -0.13131 (21), -0.12809 (21), -0.12518 (21), -0.12516 (21), -0.12396 (21), -0.12159 (21), -0.12008 (21), -0.11815 (21), -0.11716 (21), -0.11438 (21), -0.11224 (22), -0.11136 (21), -0.11007 (21), -0.10921 (21), -0.10872 (22), -0.10639 (21), -0.10303 (21), 
Length of domains: 79
Time: pickout 0.0022    decision 0.0181    set_bounds 0.0075    solve 0.1787    add 0.0022    
Accumulated time: pickout 0.0543    decision 1.5621    set_bounds 0.4021    solve 5.2770    add 0.7521    
Current (lb-rhs): -0.13810408115386963
4262 domains visited
Cumulative time: 10.105267763137817

BaB round 21
batch: 79
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 82] [/input-16, 82] [/input-16, 82] [/input-12, 804] [/input-12, 804] [/input-16, 82] [/input-12, 804] [/input-16, 82] [/input-16, 82] [/input-12, 802] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15967893600463867
10 lb beta sum: 1.7685145139694214, worst -0.13100075721740723
Time: prepare 0.0034    bound 0.1674    transfer 0.0007    finalize 0.0023    func 0.1749    
Accumulated time: func 5.6930    prepare 0.2528    bound 4.9333    transfer 0.0619    finalize 0.2376    
all_split False
======================Cut inference begins======================
max lb tensor(0.47782052) min lb tensor(-0.13097638)
Number of Verified Splits: 107 of 158
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.021710872650146484 
BICCOS Cumulative time: 1.7418098449707031
Preprocessing time: 0.0048830509185791016 Inference time: 0.015079736709594727 Add cuts time: 0.0015797615051269531 Cut analysis time: 0.00016832351684570312
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13098 (23), -0.12734 (23), -0.12447 (22), -0.12364 (22), -0.12083 (22), -0.11762 (22), -0.11227 (22), -0.10668 (22), -0.10319 (22), -0.09911 (22), -0.09563 (22), -0.09416 (23), -0.09309 (23), -0.09291 (22), -0.09067 (23), -0.08959 (23), -0.06491 (22), -0.06428 (22), -0.06385 (22), -0.06179 (22), 
Length of domains: 51
Time: pickout 0.0016    decision 0.0169    set_bounds 0.0070    solve 0.1750    add 0.0022    
Accumulated time: pickout 0.0559    decision 1.5790    set_bounds 0.4091    solve 5.4520    add 0.7543    
Current (lb-rhs): -0.1309763789176941
4313 domains visited
Cumulative time: 10.330285549163818

BaB round 22
batch: 51
splitting decisions: 
split level 0: [/input-12, 2148] [/input-12, 798] [/input-16, 82] [/input-12, 818] [/input-12, 2148] [/input-12, 1961] [/input-12, 818] [/input-16, 35] [/input-12, 798] [/input-12, 804] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15050077438354492

all verified at 4th iter
Time: prepare 0.0024    bound 0.0396    transfer 0.0007    finalize 0.0021    func 0.0456    
Accumulated time: func 5.7387    prepare 0.2553    bound 4.9729    transfer 0.0626    finalize 0.2397    
all_split False
======================Cut inference begins======================
max lb tensor(0.25312263) min lb tensor(0.03834012)
Number of Verified Splits: 102 of 102
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.0032677650451660156 
BICCOS Cumulative time: 1.7450776100158691
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0008    decision 0.0153    set_bounds 0.0046    solve 0.0457    add 0.0001    
Accumulated time: pickout 0.0567    decision 1.5944    set_bounds 0.4136    solve 5.4977    add 0.7543    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
4313 domains visited
Cumulative time: 10.400493383407593


Properties batch 5, size 1
Remaining timeout: 183.73888659477234
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 183.73879718780518
Verifying property 6 with 1 instances.
##### Instance 185 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.67301083]], device='cuda:0') need to verify.
Model prediction is: tensor([-49.04260635, -46.47156143, -47.52237701, -47.54033279, -46.95476151,
        -47.80789185, -46.89925385, -46.95186615, -49.43678665, -45.72424316],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.67301083]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1252
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 588
Node /39 input 0: size torch.Size([250]) unstable 33
-----------------
# of unstable neurons: 1873
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00010037422180175781
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6728224754333496
10 lb beta sum: 0.0, worst -0.6728291511535645
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0724    transfer 0.0001    finalize 0.0002    func 0.0730    
Accumulated time: func 0.0730    prepare 0.0002    bound 0.0724    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 186] 
split level 1: [/input-16, 190] 
split level 2: [/input-16, 140] 
split level 3: [/input-16, 138] 
split level 4: [/input-16, 10] 
split level 5: [/input-16, 115] 
split level 6: [/input-16, 225] 
split level 7: [/input-16, 35] 
split level 8: [/input-16, 160] 
split level 9: [/input-16, 82] 
split level 10: [/input-16, 95] 
split level 11: [/input-16, 64] 
split level 12: [/input-16, 217] 
split level 13: [/input-12, 2484] 
split level 14: [/input-16, 154] 
split level 15: [/input-16, 126] 
split level 16: [/input-16, 170] 
split level 17: [/input-16, 72] 
split level 18: [/input-16, 58] 
split level 19: [/input-12, 822] 
split level 20: [/input-16, 28] 
split level 21: [/input-16, 84] 
split level 22: [/input-12, 2660] 
split level 23: [/input-12, 810] 
split level 24: [/input-12, 2474] 
split level 25: [/input-12, 797] 
split level 26: [/input-16, 134] 
split level 27: [/input-12, 1969] 
split level 28: [/input-12, 2661] 
split level 29: [/input-12, 817] 
split level 30: [/input-12, 804] 
split level 31: [/input-12, 7790] 
split level 32: [/input-12, 2668] 
split level 33: [/input-12, 2481] 
split level 34: [/input-12, 363] 
split level 35: [/input-12, 2029] 
split level 36: [/input-12, 802] 
split level 37: [/input-12, 809] 
split level 38: [/input-12, 794] 
split level 39: [/input-12, 818] 
split level 40: [/input-16, 215] 
split level 41: [/input-12, 7827] 
split level 42: [/input-12, 803] 
split level 43: [/input-12, 3638] 
split level 44: [/input-12, 799] 
split level 45: [/input-12, 816] 
split level 46: [/input-12, 798] 
split level 47: [/input-12, 2667] 
split level 48: [/input-12, 2473] 
split level 49: [/input-12, 2148] 
split level 50: [/input-12, 1961] 
split level 51: [/input-12, 806] 
split level 52: [/input-12, 2028] 
split level 53: [/input-12, 3941] 
split level 54: [/input-12, 2450] 
split level 55: [/input-12, 2465] 
split level 56: [/input-12, 7011] 
split level 57: [/input-4, 3303] 
split level 58: [/input-12, 5668] 
split level 59: [/input-4, 6374] 
split level 60: [/input-12, 2462] 
split level 61: [/input-4, 6371] 
split level 62: [/input-12, 3809] 
split level 63: [/input-12, 2461] 
split level 64: [/input-12, 2469] 
split level 65: [/input-12, 7851] 
split level 66: [/input-12, 2507] 
split level 67: [/input-4, 6375] 
split level 68: [/input-12, 792] 
split level 69: [/input-12, 3811] 
split level 70: [/input-12, 7828] 
split level 71: [/input-12, 7005] 
split level 72: [/input-12, 2677] 
split level 73: [/input-4, 1268] 
split level 74: [/input-12, 6842] 
split level 75: [/input-4, 3811] 
split level 76: [/input-12, 3949] 
split level 77: [/input-12, 3476] 
split level 78: [/input-12, 3371] 
split level 79: [/input-4, 4853] 
split level 80: [/input-12, 3347] 
split level 81: [/input-12, 2940] 
split level 82: [/input-12, 2472] 
split level 83: [/input-4, 3051] 
split level 84: [/input-12, 2329] 
split level 85: [/input-4, 3812] 
split level 86: [/input-4, 4487] 
split level 87: [/input-12, 2330] 
split level 88: [/input-12, 2442] 
split level 89: [/input-12, 3341] 
split level 90: [/input-4, 3820] 
split level 91: [/input-4, 4581] 
split level 92: [/input-12, 2669] 
split level 93: [/input-12, 6997] 
split level 94: [/input-12, 6258] 
split level 95: [/input-12, 7996] 
split level 96: [/input-12, 6262] 
split level 97: [/input-12, 7538] 
split level 98: [/input-12, 4677] 
split level 99: [/input-12, 2480] 
split level 100: [/input-12, 2645] 
split level 101: [/input-12, 6257] 
split level 102: [/input-12, 3098] 
split level 103: [/input-4, 1671] 
split level 104: [/input-12, 2434] 
split level 105: [/input-4, 4585] 
split level 106: [/input-4, 4555] 
split level 107: [/input-4, 4059] 
split level 108: [/input-4, 4837] 
split level 109: [/input-4, 1767] 
split level 110: [/input-12, 2464] 
split level 111: [/input-12, 3818] 
split level 112: [/input-4, 1270] 
split level 113: [/input-4, 1658] 
split level 114: [/input-4, 4586] 
split level 115: [/input-12, 85] 
split level 116: [/input-12, 5653] 
split level 117: [/input-12, 2938] 
split level 118: [/input-4, 84] 
split level 119: [/input-4, 1772] 
split level 120: [/input-12, 2489] 
split level 121: [/input-4, 5835] 
split level 122: [/input-12, 6260] 
split level 123: [/input-4, 3302] 
split level 124: [/input-4, 6857] 
split level 125: [/input-4, 1190] 
split level 126: [/input-4, 1659] 
split level 127: [/input-12, 2890] 
split level 128: [/input-4, 4834] 
split level 129: [/input-16, 54] 
split level 130: [/input-12, 4214] 
split level 131: [/input-12, 4205] 
split level 132: [/input-12, 7621] 
split level 133: [/input-12, 467] 
split level 134: [/input-4, 4311] 
split level 135: [/input-4, 171] 
split level 136: [/input-4, 4839] 
split level 137: [/input-4, 4504] 
split level 138: [/input-12, 1747] 
split level 139: [/input-12, 1256] 
split level 140: [/input-4, 148] 
split level 141: [/input-4, 4310] 
split level 142: [/input-4, 3810] 
split level 143: [/input-4, 3816] 
split level 144: [/input-12, 784] 
split level 145: [/input-4, 1692] 
split level 146: [/input-4, 4577] 
split level 147: [/input-4, 7656] 
split level 148: [/input-4, 4540] 
split level 149: [/input-12, 4172] 
split level 150: [/input-4, 3809] 
split level 151: [/input-12, 3334] 
split level 152: [/input-4, 5095] 
split level 153: [/input-12, 7843] 
split level 154: [/input-4, 4508] 
split level 155: [/input-12, 4153] 
split level 156: [/input-4, 2971] 
split level 157: [/input-12, 6261] 
split level 158: [/input-12, 6775] 
split level 159: [/input-12, 337] 
split level 160: [/input-4, 5770] 
split level 161: [/input-12, 6998] 
split level 162: [/input-4, 5108] 
split level 163: [/input-4, 4845] 
split level 164: [/input-12, 1464] 
split level 165: [/input-4, 1761] 
split level 166: [/input-4, 147] 
split level 167: [/input-4, 4290] 
split level 168: [/input-12, 7631] 
split level 169: [/input-4, 2949] 
split level 170: [/input-12, 2539] 
split level 171: [/input-12, 2085] 
split level 172: [/input-4, 5832] 
split level 173: [/input-4, 4516] 
split level 174: [/input-4, 6890] 
split level 175: [/input-4, 4490] 
split level 176: [/input-12, 2446] 
split level 177: [/input-4, 6875] 
split level 178: [/input-4, 1780] 
split level 179: [/input-12, 3106] 
split level 180: [/input-4, 1481] 
split level 181: [/input-12, 2437] 
split level 182: [/input-4, 2948] 
split level 183: [/input-12, 4386] 
split level 184: [/input-4, 3017] 
split level 185: [/input-4, 1725] 
split level 186: [/input-4, 5090] 
split level 187: [/input-12, 6772] 
split level 188: [/input-4, 6725] 
split level 189: [/input-12, 1058] 
split level 190: [/input-4, 3060] 
split level 191: [/input-4, 2886] 
split level 192: [/input-4, 89] 
split level 193: [/input-4, 6331] 
split level 194: [/input-12, 5414] 
split level 195: [/input-4, 2745] 
split level 196: [/input-4, 341] 
split level 197: [/input-12, 7620] 
split level 198: [/input-4, 6873] 
split level 199: [/input-4, 2890] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6723241806030273
10 lb beta sum: 0.0, worst -0.6723270416259766
Time: prepare 0.0115    bound 0.1337    transfer 0.0018    finalize 0.0084    func 0.1578    
Accumulated time: func 0.2308    prepare 0.0214    bound 0.2061    transfer 0.0019    finalize 0.0086    
all_split False
======================Cut inference begins======================
max lb tensor(0.27061081) min lb tensor(-0.67232227)
Number of Verified Splits: 2 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.010665655136108398 
BICCOS Cumulative time: 0.010665655136108398
Preprocessing time: 0.009972333908081055 Inference time: 0.00010943412780761719 Add cuts time: 4.482269287109375e-05 Cut analysis time: 0.0005390644073486328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.65303 (1), -0.65299 (1), -0.65261 (1), -0.65217 (1), -0.65204 (1), -0.65078 (1), -0.64825 (1), -0.64651 (1), -0.64631 (1), -0.64510 (1), -0.64173 (1), -0.64083 (1), -0.64045 (1), -0.63964 (1), -0.63949 (1), -0.63938 (1), -0.63812 (1), -0.63663 (1), -0.63535 (1), -0.63167 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7614    set_bounds 0.0092    solve 0.1579    add 0.0795    
Accumulated time: pickout 0.0003    decision 0.7614    set_bounds 0.0092    solve 0.1579    add 0.0795    
Current (lb-rhs): -0.6530318260192871
50 domains visited
Cumulative time: 1.0989055633544922

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 140] [/input-16, 140] [/input-16, 140] [/input-16, 140] [/input-16, 140] [/input-16, 140] [/input-16, 140] [/input-16, 138] [/input-16, 140] [/input-16, 140] 
split level 1: [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 115] [/input-16, 138] [/input-16, 138] 
split level 2: [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 160] [/input-16, 115] [/input-16, 115] 
split level 3: [/input-16, 160] [/input-12, 3638] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 82] [/input-16, 160] [/input-16, 160] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6328010559082031
10 lb beta sum: 0.3827768564224243, worst -0.6181400418281555
Time: prepare 0.0067    bound 0.4856    transfer 0.0016    finalize 0.0050    func 0.5016    
Accumulated time: func 0.7325    prepare 0.0283    bound 0.6918    transfer 0.0035    finalize 0.0136    
all_split False
======================Cut inference begins======================
max lb tensor(0.20775938) min lb tensor(-0.61811650)
Number of Verified Splits: 19 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.013998270034790039 
BICCOS Cumulative time: 0.024663925170898438
Preprocessing time: 0.011987924575805664 Inference time: 0.0008366107940673828 Add cuts time: 0.0003285408020019531 Cut analysis time: 0.0008451938629150391
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.31223 (2), -0.31027 (2), -0.31004 (2), -0.30937 (2), -0.30896 (2), -0.30771 (2), -0.30763 (2), -0.28764 (2), -0.28027 (2), -0.27976 (2), -0.27917 (2), -0.26704 (2), -0.24136 (2), -0.23781 (2), -0.23547 (2), -0.22849 (2), -0.21285 (2), -0.21139 (2), -0.20897 (2), -0.20489 (2), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0252    set_bounds 0.0135    solve 0.5017    add 0.0838    
Accumulated time: pickout 0.0009    decision 0.7867    set_bounds 0.0227    solve 0.6596    add 0.1633    
Current (lb-rhs): -0.3122296929359436
100 domains visited
Cumulative time: 1.7380247116088867

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 138] [/input-16, 140] [/input-16, 138] [/input-16, 140] [/input-16, 140] [/input-16, 140] [/input-16, 140] [/input-16, 140] [/input-16, 140] [/input-16, 138] 
split level 1: [/input-16, 115] [/input-16, 138] [/input-16, 115] [/input-16, 138] [/input-16, 138] [/input-16, 138] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] 
split level 2: [/input-16, 160] [/input-16, 115] [/input-16, 160] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] 
split level 3: [/input-16, 82] [/input-12, 7005] [/input-16, 82] [/input-16, 82] [/input-12, 3638] [/input-12, 2149] [/input-16, 82] [/input-16, 82] [/input-16, 82] [/input-16, 82] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.30858659744262695
10 lb beta sum: 0.8115103244781494, worst -0.44944798946380615
Time: prepare 0.0060    bound 0.1511    transfer 0.0018    finalize 0.0053    func 0.1668    
Accumulated time: func 0.8993    prepare 0.0345    bound 0.8429    transfer 0.0053    finalize 0.0189    
all_split False
======================Cut inference begins======================
max lb tensor(0.22365671) min lb tensor(-0.25958133)
Number of Verified Splits: 93 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 12
#cuts >= 20: 0
BICCOS time: 0.018636465072631836 
BICCOS Cumulative time: 0.04330039024353027
Preprocessing time: 0.011643409729003906 Inference time: 0.004249095916748047 Add cuts time: 0.002353191375732422 Cut analysis time: 0.00039076805114746094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07161 (3), -0.07147 (3), -0.07105 (3), -0.07017 (3), -0.06990 (3), -0.06810 (3), -0.06788 (3), -0.06764 (3), -0.05854 (3), -0.05628 (3), -0.05577 (3), -0.05523 (3), -0.05509 (3), -0.05478 (3), -0.05476 (3), -0.05448 (3), -0.05444 (3), -0.05342 (3), -0.05334 (3), -0.05312 (3), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0250    set_bounds 0.0153    solve 0.1669    add 0.0932    
Accumulated time: pickout 0.0016    decision 0.8117    set_bounds 0.0380    solve 0.8266    add 0.2565    
Current (lb-rhs): -0.07161343097686768
150 domains visited
Cumulative time: 2.057996988296509

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 140] [/input-16, 140] [/input-16, 140] [/input-16, 140] [/input-16, 140] [/input-16, 140] [/input-16, 140] [/input-16, 140] [/input-16, 138] [/input-16, 138] 
split level 1: [/input-16, 115] [/input-16, 115] [/input-16, 138] [/input-16, 115] [/input-16, 115] [/input-16, 138] [/input-16, 115] [/input-16, 115] [/input-16, 115] [/input-16, 115] 
split level 2: [/input-16, 160] [/input-12, 2149] [/input-16, 82] [/input-12, 2149] [/input-16, 82] [/input-12, 2149] [/input-16, 160] [/input-16, 82] [/input-12, 2149] [/input-16, 160] 
split level 3: [/input-16, 72] [/input-12, 7005] [/input-12, 2149] [/input-12, 7005] [/input-12, 2149] [/input-12, 7005] [/input-16, 72] [/input-12, 2149] [/input-12, 7005] [/input-16, 72] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09899568557739258
10 lb beta sum: 0.7407388091087341, worst -0.26524442434310913
Time: prepare 0.0061    bound 0.1517    transfer 0.0016    finalize 0.0049    func 0.1673    
Accumulated time: func 1.0667    prepare 0.0408    bound 0.9945    transfer 0.0069    finalize 0.0238    
all_split False
======================Cut inference begins======================
max lb tensor(0.19158077) min lb tensor(-0.04432601)
Number of Verified Splits: 311 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 14
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.035056352615356445 
BICCOS Cumulative time: 0.07835674285888672
Preprocessing time: 0.011414051055908203 Inference time: 0.016419410705566406 Add cuts time: 0.006579399108886719 Cut analysis time: 0.0006434917449951172
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0006    decision 0.0252    set_bounds 0.0152    solve 0.1674    add 0.0235    
Accumulated time: pickout 0.0022    decision 0.8369    set_bounds 0.0532    solve 0.9940    add 0.2800    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 10, 138, 115, 140]), tensor([-1., -1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([-1.26703658e+34,  1.12037584e-01,  8.70389789e-02,  1.88288912e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 10, 138, 115, 140]), tensor([-1., -1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([-1.26703658e+34,  1.12037584e-01,  8.70389789e-02,  4.68380302e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 10, 138, 115, 140]), tensor([-1., -1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([-1.26703658e+34,  1.12037584e-01,  7.07893819e-02,  1.85405418e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 10, 138, 115, 140]), tensor([-1., -1.,  1.,  1.]), tensor([0, 0, 0, 0]), tensor([-1.26703658e+34,  1.12037584e-01,  7.07893819e-02,  7.34147280e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 10, 138, 115, 140]), tensor([-1.,  1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([-1.26703658e+34,  1.15197137e-01,  8.73438269e-02,  1.91864535e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 10, 138, 115, 140]), tensor([-1.,  1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([-1.26703658e+34,  1.15197137e-01,  8.73438269e-02,  4.67019528e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 10, 138, 115, 140]), tensor([-1.,  1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([-1.26703658e+34,  1.15197137e-01,  6.93782121e-02,  1.91002235e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 10, 138, 115, 140]), tensor([-1.,  1.,  1.,  1.]), tensor([0, 0, 0, 0]), tensor([-1.26703658e+34,  1.15197137e-01,  6.93782121e-02,  7.53677934e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([10]), tensor([1.]), tensor([0]), tensor([-1.26703658e+34]), tensor([0]))}
Shallow branching resets to n domains:  9
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.663456916809082
10 lb beta sum: 1.1906715631484985, worst -0.6403607726097107
Time: prepare 0.0004    bound 0.1490    transfer 0.0002    finalize 0.0004    func 0.1502    
Accumulated time: func 1.2168    prepare 0.0413    bound 1.1436    transfer 0.0072    finalize 0.0242    
After pruning, left:  2

Back to Regular BaB

BaB round 1
batch: 2
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 160] [/input-16, 140] 
split level 1: [/input-16, 82] [/input-16, 138] 
split level 2: [/input-12, 526] [/input-16, 115] 
cut re-enabled after branching node selection
0 lb beta sum: 1.1891438961029053, worst -0.4329860210418701
10 lb beta sum: 1.2315897941589355, worst -0.42495882511138916
Time: prepare 0.0010    bound 0.1493    transfer 0.0002    finalize 0.0007    func 0.1514    
Accumulated time: func 1.3682    prepare 0.0424    bound 1.2929    transfer 0.0074    finalize 0.0249    
all_split False
======================Cut inference begins======================
max lb tensor(0.11340642) min lb tensor(-0.42456359)
Number of Verified Splits: 8 of 16
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 1.238457441329956, worst -0.4237039089202881
10 lb beta sum: 1.4079067707061768, worst -0.007838964462280273
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 14
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.15582728385925293 
BICCOS Cumulative time: 0.23418402671813965
Preprocessing time: 0.0007445812225341797 Inference time: 0.15381693840026855 Add cuts time: 0.0006539821624755859 Cut analysis time: 0.0006117820739746094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.42456 (3), -0.42180 (3), -0.41950 (3), -0.40943 (3), -0.19872 (3), -0.19649 (3), -0.18940 (3), -0.18713 (3), 
Length of domains: 8
Time: pickout 0.0004    decision 0.0129    set_bounds 0.0013    solve 0.1514    add 0.0010    
Accumulated time: pickout 0.0026    decision 0.8498    set_bounds 0.0545    solve 1.1454    add 0.2810    
Current (lb-rhs): -0.42456358671188354
158 domains visited
Cumulative time: 2.822100877761841

BaB round 2
batch: 8
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] 
cut re-enabled after branching node selection
0 lb beta sum: 1.1989195346832275, worst -0.40609854459762573
10 lb beta sum: 1.1922070980072021, worst -0.40426886081695557
Time: prepare 0.0009    bound 0.1458    transfer 0.0002    finalize 0.0005    func 0.1475    
Accumulated time: func 1.5156    prepare 0.0435    bound 1.4387    transfer 0.0076    finalize 0.0253    
all_split False
======================Cut inference begins======================
max lb tensor(-0.09464300) min lb tensor(-0.40418446)
Number of Verified Splits: 0 of 16
No cut inferred: All or none verified.
Total number of valid cuts: 22.
#cuts 1-3: 14
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.0007960796356201172 
BICCOS Cumulative time: 0.23498010635375977
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.40418 (4), -0.40114 (4), -0.39900 (4), -0.38861 (4), -0.28855 (4), -0.28729 (4), -0.28682 (4), -0.28022 (4), -0.17432 (4), -0.17192 (4), -0.16359 (4), -0.16074 (4), -0.10358 (4), -0.10240 (4), -0.09638 (4), -0.09464 (4), 
Length of domains: 16
Time: pickout 0.0004    decision 0.0135    set_bounds 0.0010    solve 0.1475    add 0.0012    
Accumulated time: pickout 0.0030    decision 0.8633    set_bounds 0.0555    solve 1.2929    add 0.2822    
Current (lb-rhs): -0.4041844606399536
174 domains visited
Cumulative time: 2.9867053031921387

BaB round 3
batch: 16
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 82] [/input-16, 82] [/input-16, 82] [/input-16, 82] [/input-16, 82] [/input-16, 82] [/input-16, 82] [/input-16, 82] [/input-16, 82] [/input-16, 82] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2115083932876587, worst -0.38523542881011963
10 lb beta sum: 1.308019757270813, worst -0.38479387760162354
Time: prepare 0.0015    bound 0.1484    transfer 0.0003    finalize 0.0011    func 0.1517    
Accumulated time: func 1.6673    prepare 0.0452    bound 1.5872    transfer 0.0079    finalize 0.0265    
all_split False
======================Cut inference begins======================
max lb tensor(0.03250420) min lb tensor(-0.38473237)
Number of Verified Splits: 4 of 32
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 1.2762060165405273, worst -0.28811776638031006
10 lb beta sum: 1.6102262735366821, worst -0.08394509553909302
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 14
#cuts 4-6: 9
#cuts >= 20: 0
BICCOS time: 0.15099000930786133 
BICCOS Cumulative time: 0.3859701156616211
Preprocessing time: 0.001203775405883789 Inference time: 0.148789644241333 Add cuts time: 0.00035691261291503906 Cut analysis time: 0.0006396770477294922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.38473 (5), -0.38198 (5), -0.37940 (5), -0.36884 (5), -0.28247 (5), -0.28210 (5), -0.27976 (5), -0.27873 (5), -0.26753 (5), -0.26444 (5), -0.26418 (5), -0.25791 (5), -0.18229 (5), -0.18206 (5), -0.18095 (5), -0.18045 (5), -0.15225 (5), -0.15098 (5), -0.14218 (5), -0.13934 (5), 
Length of domains: 28
Time: pickout 0.0004    decision 0.0137    set_bounds 0.0017    solve 0.1517    add 0.0018    
Accumulated time: pickout 0.0034    decision 0.8770    set_bounds 0.0572    solve 1.4446    add 0.2841    
Current (lb-rhs): -0.38473236560821533
202 domains visited
Cumulative time: 3.307199001312256

BaB round 4
batch: 28
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3946676254272461
10 lb beta sum: 1.1968872547149658, worst -0.37163472175598145
Time: prepare 0.0011    bound 0.1491    transfer 0.0006    finalize 0.0012    func 0.1524    
Accumulated time: func 1.8197    prepare 0.0464    bound 1.7363    transfer 0.0084    finalize 0.0277    
all_split False
======================Cut inference begins======================
max lb tensor(0.16351956) min lb tensor(-0.37161267)
Number of Verified Splits: 12 of 56
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.35918331146240234
10 lb beta sum: 1.4128739833831787, worst -0.24880659580230713
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 14
#cuts 4-6: 9
#cuts >= 20: 0
BICCOS time: 0.15776944160461426 
BICCOS Cumulative time: 0.5437395572662354
Preprocessing time: 0.0019435882568359375 Inference time: 0.15438628196716309 Add cuts time: 0.0007727146148681641 Cut analysis time: 0.0006668567657470703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.37161 (6), -0.36861 (6), -0.36627 (6), -0.35545 (6), -0.26682 (6), -0.26596 (6), -0.26434 (6), -0.26309 (6), -0.25189 (6), -0.25031 (6), -0.24572 (6), -0.24265 (6), -0.18571 (6), -0.18008 (6), -0.17645 (6), -0.17207 (6), -0.16492 (6), -0.16460 (6), -0.16429 (6), -0.16355 (6), 
Length of domains: 44
Time: pickout 0.0005    decision 0.0143    set_bounds 0.0026    solve 0.1524    add 0.0017    
Accumulated time: pickout 0.0039    decision 0.8913    set_bounds 0.0598    solve 1.5970    add 0.2858    
Current (lb-rhs): -0.37161266803741455
246 domains visited
Cumulative time: 3.6366913318634033

BaB round 5
batch: 44
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 186] [/input-16, 186] 
cut re-enabled after branching node selection
0 lb beta sum: 1.3715654611587524, worst -0.37161076068878174
10 lb beta sum: 1.3717886209487915, worst -0.3716036081314087
Time: prepare 0.0038    bound 0.1490    transfer 0.0005    finalize 0.0014    func 0.1554    
Accumulated time: func 1.9751    prepare 0.0503    bound 1.8853    transfer 0.0089    finalize 0.0291    
all_split False
======================Cut inference begins======================
max lb tensor(0.47020137) min lb tensor(-0.37158692)
Number of Verified Splits: 44 of 88
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 1.3715654611587524, worst -0.6191850900650024

all verified at 3th iter
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 14
#cuts 4-6: 9
#cuts >= 20: 0
BICCOS time: 0.061095476150512695 
BICCOS Cumulative time: 0.604835033416748
Preprocessing time: 0.002788543701171875 Inference time: 0.0561213493347168 Add cuts time: 0.001512289047241211 Cut analysis time: 0.0006732940673828125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.37159 (7), -0.36859 (7), -0.36622 (7), -0.35544 (7), -0.26593 (7), -0.26509 (7), -0.26328 (7), -0.26200 (7), -0.25189 (7), -0.24947 (7), -0.24572 (7), -0.24178 (7), -0.18093 (7), -0.17677 (7), -0.17338 (7), -0.16760 (7), -0.16317 (7), -0.16246 (7), -0.16186 (7), -0.16165 (7), 
Length of domains: 44
Time: pickout 0.0006    decision 0.0169    set_bounds 0.0042    solve 0.1555    add 0.0017    
Accumulated time: pickout 0.0045    decision 0.9082    set_bounds 0.0640    solve 1.7524    add 0.2875    
Current (lb-rhs): -0.3715869188308716
290 domains visited
Cumulative time: 3.8770718574523926

BaB round 6
batch: 44
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 170] [/input-16, 170] [/input-16, 170] [/input-16, 170] [/input-16, 170] [/input-16, 170] [/input-16, 170] [/input-16, 170] [/input-16, 170] [/input-16, 170] 
cut re-enabled after branching node selection
0 lb beta sum: 1.3748117685317993, worst -0.3574906587600708
10 lb beta sum: 1.3724229335784912, worst -0.3574005365371704
Time: prepare 0.0038    bound 0.1466    transfer 0.0005    finalize 0.0013    func 0.1529    
Accumulated time: func 2.1280    prepare 0.0543    bound 2.0319    transfer 0.0094    finalize 0.0304    
all_split False
======================Cut inference begins======================
max lb tensor(0.03080809) min lb tensor(-0.35738289)
Number of Verified Splits: 12 of 88
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 1.4713233709335327, worst -0.47829902172088623
10 lb beta sum: 1.6253913640975952, worst -0.27769577503204346
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 14
#cuts 4-6: 11
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.15952682495117188 
BICCOS Cumulative time: 0.7643618583679199
Preprocessing time: 0.002769947052001953 Inference time: 0.15543913841247559 Add cuts time: 0.000492095947265625 Cut analysis time: 0.0008256435394287109
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.35738 (8), -0.35448 (8), -0.35147 (8), -0.34075 (8), -0.27991 (8), -0.27416 (8), -0.27215 (8), -0.27197 (8), -0.24905 (8), -0.24783 (8), -0.24584 (8), -0.24444 (8), -0.23776 (8), -0.23410 (8), -0.23142 (8), -0.22657 (8), -0.21254 (8), -0.21045 (8), -0.21042 (8), -0.20664 (8), 
Length of domains: 76
Time: pickout 0.0006    decision 0.0153    set_bounds 0.0038    solve 0.1529    add 0.0021    
Accumulated time: pickout 0.0051    decision 0.9235    set_bounds 0.0678    solve 1.9053    add 0.2896    
Current (lb-rhs): -0.3573828935623169
366 domains visited
Cumulative time: 4.211744546890259

BaB round 7
batch: 76
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 72] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.35223865509033203
10 lb beta sum: 0.9929395914077759, worst -0.3375185430049896
Time: prepare 0.0024    bound 0.1563    transfer 0.0008    finalize 0.0024    func 0.1629    
Accumulated time: func 2.2909    prepare 0.0568    bound 2.1883    transfer 0.0102    finalize 0.0327    
all_split False
======================Cut inference begins======================
max lb tensor(0.07089698) min lb tensor(-0.33750737)
Number of Verified Splits: 35 of 152
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4342689514160156
10 lb beta sum: 1.393528699874878, worst -0.3119277358055115
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 14
#cuts 4-6: 12
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.322573184967041 
BICCOS Cumulative time: 1.086935043334961
Preprocessing time: 0.004683494567871094 Inference time: 0.3162558078765869 Add cuts time: 0.0006463527679443359 Cut analysis time: 0.0009875297546386719
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33751 (9), -0.33454 (9), -0.33159 (9), -0.32074 (9), -0.31563 (9), -0.31298 (9), -0.30919 (9), -0.29638 (9), -0.25873 (9), -0.25313 (9), -0.25131 (9), -0.25092 (9), -0.22880 (9), -0.22868 (9), -0.22780 (9), -0.22602 (9), -0.22443 (9), -0.22270 (9), -0.22248 (9), -0.22233 (9), 
Length of domains: 117
Time: pickout 0.0017    decision 0.0171    set_bounds 0.0066    solve 0.1630    add 0.0037    
Accumulated time: pickout 0.0068    decision 0.9406    set_bounds 0.0744    solve 2.0683    add 0.2933    
Current (lb-rhs): -0.33750736713409424
483 domains visited
Cumulative time: 4.7270591259002686

BaB round 8
batch: 117
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 190] [/input-16, 190] [/input-16, 190] [/input-16, 190] [/input-16, 28] [/input-16, 28] [/input-16, 28] [/input-16, 28] [/input-16, 28] [/input-16, 190] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.34603357315063477
10 lb beta sum: 0.8844231963157654, worst -0.3375052809715271
Time: prepare 0.0036    bound 0.1503    transfer 0.0010    finalize 0.0038    func 0.1602    
Accumulated time: func 2.4510    prepare 0.0606    bound 2.3385    transfer 0.0112    finalize 0.0365    
all_split False
======================Cut inference begins======================
max lb tensor(0.55523682) min lb tensor(-0.33750045)
Number of Verified Splits: 52 of 234
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 13
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.014089345932006836 
BICCOS Cumulative time: 1.1010243892669678
Preprocessing time: 0.006896257400512695 Inference time: 0.005140781402587891 Add cuts time: 0.0015115737915039062 Cut analysis time: 0.0005407333374023438
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33750 (10), -0.33453 (10), -0.33158 (10), -0.32074 (10), -0.31533 (10), -0.31267 (10), -0.30895 (10), -0.27869 (10), -0.27554 (10), -0.25825 (10), -0.25239 (10), -0.25057 (10), -0.25029 (10), -0.22877 (10), -0.22767 (10), -0.22591 (10), -0.22429 (10), -0.20965 (10), -0.20752 (10), -0.20411 (10), 
Length of domains: 182
Time: pickout 0.0009    decision 0.0210    set_bounds 0.0103    solve 0.1602    add 0.0044    
Accumulated time: pickout 0.0076    decision 0.9616    set_bounds 0.0848    solve 2.2285    add 0.2977    
Current (lb-rhs): -0.3375004529953003
665 domains visited
Cumulative time: 4.938678026199341

BaB round 9
batch: 182
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 28] [/input-16, 28] [/input-16, 28] [/input-16, 28] [/input-16, 84] [/input-16, 84] [/input-16, 84] [/input-16, 84] [/input-16, 84] [/input-16, 28] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3371543884277344
10 lb beta sum: 0.9073446393013, worst -0.3286208510398865
Time: prepare 0.0055    bound 0.1507    transfer 0.0022    finalize 0.0069    func 0.1678    
Accumulated time: func 2.6188    prepare 0.0663    bound 2.4892    transfer 0.0134    finalize 0.0435    
all_split False
======================Cut inference begins======================
max lb tensor(0.52810395) min lb tensor(-0.32861647)
Number of Verified Splits: 165 of 364
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 11
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.030484676361083984 
BICCOS Cumulative time: 1.1315090656280518
Preprocessing time: 0.010486602783203125 Inference time: 0.017614364624023438 Add cuts time: 0.002040863037109375 Cut analysis time: 0.0003428459167480469
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.32862 (11), -0.32267 (11), -0.31735 (11), -0.31180 (11), -0.30646 (11), -0.30326 (11), -0.29922 (11), -0.29496 (11), -0.29064 (11), -0.29063 (11), -0.28872 (11), -0.27852 (11), -0.27464 (11), -0.23992 (11), -0.23680 (11), -0.23439 (11), -0.23241 (11), -0.23212 (11), -0.22951 (11), -0.22902 (11), 
Length of domains: 199
Time: pickout 0.0010    decision 0.0254    set_bounds 0.0156    solve 0.1684    add 0.0039    
Accumulated time: pickout 0.0086    decision 0.9870    set_bounds 0.1003    solve 2.3969    add 0.3017    
Current (lb-rhs): -0.3286164700984955
864 domains visited
Cumulative time: 5.18455958366394

BaB round 10
batch: 199
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 84] [/input-16, 84] [/input-16, 58] [/input-16, 58] [/input-16, 190] [/input-16, 84] [/input-16, 190] [/input-16, 84] [/input-16, 190] [/input-16, 190] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3285493850708008
10 lb beta sum: 0.7428291440010071, worst -0.3200487494468689
Time: prepare 0.0064    bound 0.1646    transfer 0.0015    finalize 0.0057    func 0.1808    
Accumulated time: func 2.7996    prepare 0.0729    bound 2.6538    transfer 0.0149    finalize 0.0492    
all_split False
======================Cut inference begins======================
max lb tensor(0.39091426) min lb tensor(-0.32004124)
Number of Verified Splits: 283 of 398
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 13
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.045124053955078125 
BICCOS Cumulative time: 1.1766331195831299
Preprocessing time: 0.011553287506103516 Inference time: 0.0307619571685791 Add cuts time: 0.00244903564453125 Cut analysis time: 0.0003597736358642578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.32004 (12), -0.31385 (12), -0.30858 (12), -0.30291 (12), -0.29436 (12), -0.29042 (12), -0.28845 (12), -0.28534 (12), -0.28208 (12), -0.28182 (12), -0.27970 (12), -0.27803 (12), -0.26607 (12), -0.26267 (12), -0.24811 (12), -0.24404 (12), -0.22981 (12), -0.22679 (12), -0.20071 (12), -0.19989 (12), 
Length of domains: 115
Time: pickout 0.0012    decision 0.0319    set_bounds 0.0161    solve 0.1809    add 0.0026    
Accumulated time: pickout 0.0098    decision 1.0189    set_bounds 0.1164    solve 2.5779    add 0.3043    
Current (lb-rhs): -0.3200412392616272
979 domains visited
Cumulative time: 5.464334726333618

BaB round 11
batch: 115
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 126] [/input-16, 84] [/input-16, 84] [/input-16, 84] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 84] [/input-12, 7790] [/input-16, 58] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.31110048294067383
10 lb beta sum: 0.9103994965553284, worst -0.3025173544883728
Time: prepare 0.0040    bound 0.1610    transfer 0.0014    finalize 0.0031    func 0.1716    
Accumulated time: func 2.9712    prepare 0.0771    bound 2.8147    transfer 0.0163    finalize 0.0522    
all_split False
======================Cut inference begins======================
max lb tensor(0.42946118) min lb tensor(-0.30250603)
Number of Verified Splits: 101 of 230
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 15
#cuts >= 20: 0
BICCOS time: 0.01973700523376465 
BICCOS Cumulative time: 1.1963701248168945
Preprocessing time: 0.006777763366699219 Inference time: 0.010949134826660156 Add cuts time: 0.0016536712646484375 Cut analysis time: 0.00035643577575683594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.30251 (13), -0.30020 (13), -0.29908 (13), -0.29591 (13), -0.29451 (13), -0.29338 (13), -0.28573 (13), -0.28186 (13), -0.27969 (13), -0.27687 (13), -0.27323 (13), -0.27311 (13), -0.27096 (13), -0.26909 (13), -0.25385 (13), -0.25038 (13), -0.23771 (13), -0.23304 (13), -0.21531 (13), -0.21297 (13), 
Length of domains: 129
Time: pickout 0.0012    decision 0.0194    set_bounds 0.0092    solve 0.1716    add 0.0035    
Accumulated time: pickout 0.0110    decision 1.0383    set_bounds 0.1256    solve 2.7495    add 0.3078    
Current (lb-rhs): -0.3025060296058655
1108 domains visited
Cumulative time: 5.68979811668396

BaB round 12
batch: 129
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 810] [/input-16, 58] [/input-16, 58] [/input-16, 126] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.30391454696655273
10 lb beta sum: 1.1538887023925781, worst -0.28323692083358765
Time: prepare 0.0047    bound 0.1522    transfer 0.0011    finalize 0.0036    func 0.1633    
Accumulated time: func 3.1345    prepare 0.0820    bound 2.9670    transfer 0.0174    finalize 0.0558    
all_split False
======================Cut inference begins======================
max lb tensor(0.66071796) min lb tensor(-0.28321606)
Number of Verified Splits: 202 of 258
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 19
#cuts >= 20: 0
BICCOS time: 0.03382229804992676 
BICCOS Cumulative time: 1.2301924228668213
Preprocessing time: 0.007655143737792969 Inference time: 0.023084640502929688 Add cuts time: 0.0026700496673583984 Cut analysis time: 0.0004124641418457031
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.28322 (14), -0.28245 (14), -0.28065 (14), -0.27902 (14), -0.26713 (14), -0.26400 (14), -0.26047 (14), -0.25827 (14), -0.18573 (14), -0.18506 (14), -0.18111 (14), -0.17999 (14), -0.13322 (14), -0.13307 (14), -0.13222 (14), -0.13215 (14), -0.12926 (14), -0.12879 (14), -0.12879 (14), -0.12761 (14), 
Length of domains: 56
Time: pickout 0.0064    decision 0.0201    set_bounds 0.0107    solve 0.1634    add 0.0019    
Accumulated time: pickout 0.0174    decision 1.0584    set_bounds 0.1364    solve 2.9129    add 0.3097    
Current (lb-rhs): -0.28321605920791626
1164 domains visited
Cumulative time: 5.927361488342285

BaB round 13
batch: 56
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 84] [/input-16, 126] [/input-16, 84] [/input-16, 84] [/input-16, 84] [/input-12, 810] [/input-16, 35] [/input-16, 126] [/input-16, 126] [/input-12, 810] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2909660339355469
10 lb beta sum: 1.2799040079116821, worst -0.2752164304256439
Time: prepare 0.0023    bound 0.1661    transfer 0.0006    finalize 0.0024    func 0.1724    
Accumulated time: func 3.3069    prepare 0.0845    bound 3.1330    transfer 0.0180    finalize 0.0582    
all_split False
======================Cut inference begins======================
max lb tensor(0.39943683) min lb tensor(-0.27517328)
Number of Verified Splits: 72 of 112
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 19
#cuts >= 20: 0
BICCOS time: 0.01328134536743164 
BICCOS Cumulative time: 1.243473768234253
Preprocessing time: 0.0035381317138671875 Inference time: 0.008144855499267578 Add cuts time: 0.0011641979217529297 Cut analysis time: 0.0004341602325439453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.27517 (15), -0.27146 (15), -0.25226 (15), -0.24961 (15), -0.17116 (15), -0.17066 (15), -0.17018 (15), -0.16973 (15), -0.15037 (15), -0.15035 (15), -0.12632 (15), -0.12091 (15), -0.11705 (15), -0.11601 (15), -0.11056 (15), -0.10927 (15), -0.10790 (15), -0.10734 (15), -0.07071 (15), -0.07014 (15), 
Length of domains: 40
Time: pickout 0.0010    decision 0.0157    set_bounds 0.0044    solve 0.1725    add 0.0016    
Accumulated time: pickout 0.0184    decision 1.0741    set_bounds 0.1408    solve 3.0853    add 0.3113    
Current (lb-rhs): -0.27517327666282654
1204 domains visited
Cumulative time: 6.136239051818848

BaB round 14
batch: 40
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 154] [/input-12, 804] [/input-12, 810] [/input-16, 35] [/input-12, 7790] [/input-16, 35] [/input-12, 810] [/input-12, 810] [/input-12, 7790] [/input-12, 7790] 
cut re-enabled after branching node selection
0 lb beta sum: 1.5375385284423828, worst -0.2690053880214691
10 lb beta sum: 1.5375385284423828, worst -0.26893195509910583
Time: prepare 0.0038    bound 0.1661    transfer 0.0008    finalize 0.0014    func 0.1726    
Accumulated time: func 3.4795    prepare 0.0884    bound 3.2991    transfer 0.0188    finalize 0.0596    
all_split False
======================Cut inference begins======================
max lb tensor(0.29286504) min lb tensor(-0.26889953)
Number of Verified Splits: 27 of 80
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 20
#cuts >= 20: 0
BICCOS time: 0.006791830062866211 
BICCOS Cumulative time: 1.2502655982971191
Preprocessing time: 0.0026340484619140625 Inference time: 0.003236055374145508 Add cuts time: 0.0005102157592773438 Cut analysis time: 0.0004115104675292969
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.26890 (16), -0.26538 (16), -0.25218 (16), -0.24916 (16), -0.24119 (16), -0.23867 (16), -0.17116 (16), -0.17064 (16), -0.17018 (16), -0.16973 (16), -0.16507 (16), -0.16424 (16), -0.15037 (16), -0.15037 (16), -0.15035 (16), -0.15035 (16), -0.12632 (16), -0.12091 (16), -0.11694 (16), -0.11601 (16), 
Length of domains: 53
Time: pickout 0.0005    decision 0.0151    set_bounds 0.0032    solve 0.1727    add 0.0018    
Accumulated time: pickout 0.0189    decision 1.0892    set_bounds 0.1440    solve 3.2581    add 0.3131    
Current (lb-rhs): -0.268899530172348
1257 domains visited
Cumulative time: 6.3369786739349365

BaB round 15
batch: 53
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 810] [/input-16, 154] [/input-16, 154] [/input-12, 804] [/input-12, 810] [/input-16, 154] [/input-16, 154] [/input-12, 802] [/input-16, 154] [/input-16, 154] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.27741575241088867
10 lb beta sum: 1.2321544885635376, worst -0.26886409521102905
Time: prepare 0.0028    bound 0.1773    transfer 0.0006    finalize 0.0017    func 0.1834    
Accumulated time: func 3.6629    prepare 0.0914    bound 3.4764    transfer 0.0194    finalize 0.0613    
all_split False
======================Cut inference begins======================
max lb tensor(0.30244011) min lb tensor(-0.26884371)
Number of Verified Splits: 37 of 106
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 20
#cuts >= 20: 0
BICCOS time: 0.009175777435302734 
BICCOS Cumulative time: 1.2594413757324219
Preprocessing time: 0.0035486221313476562 Inference time: 0.004646778106689453 Add cuts time: 0.0005664825439453125 Cut analysis time: 0.0004138946533203125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.26884 (17), -0.26534 (17), -0.26135 (17), -0.25807 (17), -0.24601 (17), -0.24308 (17), -0.23499 (17), -0.23269 (17), -0.16490 (17), -0.16434 (17), -0.16423 (17), -0.16338 (17), -0.15886 (17), -0.15810 (17), -0.15751 (17), -0.15651 (17), -0.14470 (17), -0.13745 (17), -0.13126 (17), -0.11994 (17), 
Length of domains: 69
Time: pickout 0.0006    decision 0.0203    set_bounds 0.0048    solve 0.1834    add 0.0029    
Accumulated time: pickout 0.0195    decision 1.1095    set_bounds 0.1488    solve 3.4415    add 0.3160    
Current (lb-rhs): -0.26884371042251587
1326 domains visited
Cumulative time: 6.558893918991089

BaB round 16
batch: 69
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7790] [/input-12, 810] [/input-12, 804] [/input-16, 154] [/input-16, 154] [/input-12, 804] [/input-12, 804] [/input-16, 154] [/input-12, 810] [/input-12, 810] 
cut re-enabled after branching node selection
0 lb beta sum: 1.371901273727417, worst -0.2576356530189514
10 lb beta sum: 1.371901273727417, worst -0.25755077600479126
Time: prepare 0.0064    bound 0.1721    transfer 0.0013    finalize 0.0031    func 0.1839    
Accumulated time: func 3.8468    prepare 0.0981    bound 3.6485    transfer 0.0206    finalize 0.0644    
all_split False
======================Cut inference begins======================
max lb tensor(0.35737216) min lb tensor(-0.25753647)
Number of Verified Splits: 26 of 138
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.008670330047607422 
BICCOS Cumulative time: 1.2681117057800293
Preprocessing time: 0.004288673400878906 Inference time: 0.003357410430908203 Add cuts time: 0.0006098747253417969 Cut analysis time: 0.0004143714904785156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25754 (18), -0.25521 (18), -0.25434 (18), -0.25169 (18), -0.24995 (18), -0.24763 (18), -0.24682 (18), -0.24437 (18), -0.23659 (18), -0.23472 (18), -0.23286 (18), -0.22343 (18), -0.22198 (18), -0.22112 (18), -0.21958 (18), -0.16490 (18), -0.16490 (18), -0.16434 (18), -0.16434 (18), -0.15751 (18), 
Length of domains: 112
Time: pickout 0.0007    decision 0.0217    set_bounds 0.0062    solve 0.1840    add 0.0030    
Accumulated time: pickout 0.0202    decision 1.1312    set_bounds 0.1551    solve 3.6255    add 0.3189    
Current (lb-rhs): -0.25753647089004517
1438 domains visited
Cumulative time: 6.783730983734131

BaB round 17
batch: 112
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 804] [/input-16, 215] [/input-16, 64] [/input-12, 7790] [/input-12, 804] [/input-12, 3638] [/input-16, 215] [/input-12, 804] [/input-16, 64] [/input-16, 64] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2597823143005371
10 lb beta sum: 1.2661856412887573, worst -0.25125306844711304
Time: prepare 0.0047    bound 0.1672    transfer 0.0009    finalize 0.0034    func 0.1777    
Accumulated time: func 4.0245    prepare 0.1029    bound 3.8158    transfer 0.0216    finalize 0.0678    
all_split False
======================Cut inference begins======================
max lb tensor(0.38425422) min lb tensor(-0.25123984)
Number of Verified Splits: 67 of 224
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.017469167709350586 
BICCOS Cumulative time: 1.2855808734893799
Preprocessing time: 0.0067462921142578125 Inference time: 0.008861780166625977 Add cuts time: 0.0014216899871826172 Cut analysis time: 0.0004394054412841797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25124 (19), -0.24892 (19), -0.24807 (19), -0.24541 (19), -0.24369 (19), -0.24133 (19), -0.24065 (19), -0.23813 (19), -0.22836 (19), -0.22651 (19), -0.22547 (19), -0.22355 (19), -0.21712 (19), -0.21560 (19), -0.21487 (19), -0.21313 (19), -0.15629 (19), -0.15235 (19), -0.14857 (19), -0.14174 (19), 
Length of domains: 157
Time: pickout 0.0008    decision 0.0190    set_bounds 0.0096    solve 0.1778    add 0.0039    
Accumulated time: pickout 0.0210    decision 1.1501    set_bounds 0.1647    solve 3.8032    add 0.3228    
Current (lb-rhs): -0.2512398362159729
1595 domains visited
Cumulative time: 7.012756109237671

BaB round 18
batch: 157
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 64] [/input-12, 7790] [/input-16, 215] [/input-16, 64] [/input-16, 215] [/input-12, 3638] [/input-12, 7790] [/input-12, 804] [/input-12, 804] [/input-12, 7790] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4535125494003296, worst -0.24115616083145142
10 lb beta sum: 1.4535125494003296, worst -0.2411385178565979
Time: prepare 0.0143    bound 0.1796    transfer 0.0020    finalize 0.0043    func 0.2023    
Accumulated time: func 4.2268    prepare 0.1174    bound 3.9953    transfer 0.0236    finalize 0.0721    
all_split False
======================Cut inference begins======================
max lb tensor(0.24767804) min lb tensor(-0.24112850)
Number of Verified Splits: 78 of 314
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.02226853370666504 
BICCOS Cumulative time: 1.307849407196045
Preprocessing time: 0.009284257888793945 Inference time: 0.010766029357910156 Add cuts time: 0.0017859935760498047 Cut analysis time: 0.0004322528839111328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.24113 (20), -0.23910 (20), -0.23880 (20), -0.23801 (20), -0.23653 (20), -0.23614 (20), -0.23531 (20), -0.23362 (20), -0.23338 (20), -0.23128 (20), -0.23080 (20), -0.23065 (20), -0.22829 (20), -0.22813 (20), -0.22800 (20), -0.22538 (20), -0.22226 (20), -0.22033 (20), -0.21952 (20), -0.21762 (20), 
Length of domains: 236
Time: pickout 0.0009    decision 0.0272    set_bounds 0.0133    solve 0.2024    add 0.0044    
Accumulated time: pickout 0.0219    decision 1.1774    set_bounds 0.1779    solve 4.0057    add 0.3272    
Current (lb-rhs): -0.24112850427627563
1831 domains visited
Cumulative time: 7.284123182296753

BaB round 19
batch: 236
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 215] [/input-12, 802] [/input-12, 818] [/input-12, 3638] [/input-12, 818] [/input-16, 64] [/input-16, 64] [/input-12, 802] [/input-16, 215] [/input-12, 7790] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4137511253356934, worst -0.23329263925552368
10 lb beta sum: 1.4137511253356934, worst -0.2332811951637268
Time: prepare 0.0213    bound 0.1846    transfer 0.0021    finalize 0.0104    func 0.2216    
Accumulated time: func 4.4485    prepare 0.1389    bound 4.1800    transfer 0.0257    finalize 0.0825    
all_split False
======================Cut inference begins======================
max lb tensor(0.31332707) min lb tensor(-0.23327309)
Number of Verified Splits: 65 of 472
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.025658607482910156 
BICCOS Cumulative time: 1.333508014678955
Preprocessing time: 0.013802051544189453 Inference time: 0.009341955184936523 Add cuts time: 0.002069711685180664 Cut analysis time: 0.0004448890686035156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23327 (21), -0.23090 (21), -0.23081 (21), -0.23026 (21), -0.23019 (21), -0.22819 (21), -0.22804 (21), -0.22772 (21), -0.22755 (21), -0.22744 (21), -0.22723 (21), -0.22572 (21), -0.22499 (21), -0.22475 (21), -0.22463 (21), -0.22437 (21), -0.22332 (21), -0.22293 (21), -0.22271 (21), -0.22237 (21), 
Length of domains: 407
Time: pickout 0.0011    decision 0.0345    set_bounds 0.0199    solve 0.2226    add 0.0122    
Accumulated time: pickout 0.0231    decision 1.2119    set_bounds 0.1979    solve 4.2282    add 0.3394    
Current (lb-rhs): -0.23327308893203735
2238 domains visited
Cumulative time: 7.601102590560913

BaB round 20
batch: 256
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3638] [/input-16, 215] [/input-12, 798] [/input-16, 215] [/input-12, 7790] [/input-12, 798] [/input-16, 215] [/input-16, 215] [/input-12, 802] [/input-12, 818] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4118196964263916, worst -0.2252684235572815
10 lb beta sum: 1.4118196964263916, worst -0.22567182779312134
Time: prepare 0.0234    bound 0.1728    transfer 0.0022    finalize 0.0065    func 0.2082    
Accumulated time: func 4.6567    prepare 0.1625    bound 4.3527    transfer 0.0278    finalize 0.0890    
all_split False
======================Cut inference begins======================
max lb tensor(0.36439896) min lb tensor(-0.22524744)
Number of Verified Splits: 75 of 512
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.028760671615600586 
BICCOS Cumulative time: 1.3622686862945557
Preprocessing time: 0.014853239059448242 Inference time: 0.011197090148925781 Add cuts time: 0.0022678375244140625 Cut analysis time: 0.0004425048828125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23019 (21), -0.22772 (21), -0.22744 (21), -0.22723 (21), -0.22525 (22), -0.22487 (22), -0.22472 (22), -0.22463 (21), -0.22437 (21), -0.22302 (22), -0.22271 (21), -0.22256 (22), -0.22245 (22), -0.22236 (22), -0.22217 (22), -0.22058 (22), -0.22015 (21), -0.21987 (21), -0.21939 (22), -0.21906 (22), 
Length of domains: 588
Time: pickout 0.0097    decision 0.0304    set_bounds 0.0220    solve 0.2083    add 0.0075    
Accumulated time: pickout 0.0328    decision 1.2423    set_bounds 0.2198    solve 4.4365    add 0.3468    
Current (lb-rhs): -0.23018938302993774
2675 domains visited
current_vram/total_varm: 3.1GB/99.9GB, batch_size increase to 512
Cumulative time: 7.90904426574707

BaB round 21
batch: 512
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 215] [/input-16, 215] [/input-12, 798] [/input-16, 215] [/input-16, 64] [/input-16, 215] [/input-16, 215] [/input-16, 215] [/input-12, 3638] [/input-12, 798] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4229539632797241, worst -0.22224849462509155
10 lb beta sum: 1.4229539632797241, worst -0.2223062962293625
Time: prepare 0.0461    bound 0.2216    transfer 0.0109    finalize 0.0185    func 0.3037    
Accumulated time: func 4.9604    prepare 0.2088    bound 4.5743    transfer 0.0387    finalize 0.1075    
all_split False
======================Cut inference begins======================
max lb tensor(0.39821413) min lb tensor(-0.22209077)
Number of Verified Splits: 99 of 1024
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.04791069030761719 
BICCOS Cumulative time: 1.4101793766021729
Preprocessing time: 0.03061819076538086 Inference time: 0.014951944351196289 Add cuts time: 0.0018973350524902344 Cut analysis time: 0.0004432201385498047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22472 (22), -0.22236 (22), -0.22209 (23), -0.22181 (22), -0.22176 (22), -0.22158 (22), -0.22008 (22), -0.21987 (22), -0.21912 (22), -0.21904 (22), -0.21891 (22), -0.21829 (23), -0.21761 (23), -0.21730 (22), -0.21722 (22), -0.21623 (23), -0.21565 (23), -0.21550 (23), -0.21543 (23), -0.21512 (23), 
Length of domains: 1001
Time: pickout 0.0021    decision 0.0488    set_bounds 0.0439    solve 0.3039    add 0.0222    
Accumulated time: pickout 0.0349    decision 1.2911    set_bounds 0.2637    solve 4.7405    add 0.3690    
Current (lb-rhs): -0.22472482919692993
3600 domains visited
current_vram/total_varm: 4.3GB/99.9GB, batch_size increase to 1024
Cumulative time: 8.38014841079712

BaB round 22
batch: 1001
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 802] [/input-16, 225] [/input-12, 818] [/input-12, 3638] [/input-12, 818] [/input-12, 818] [/input-12, 818] [/input-12, 818] [/input-16, 225] [/input-16, 64] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4246443510055542, worst -0.21941381692886353
10 lb beta sum: 1.4246443510055542, worst -0.21933656930923462
Time: prepare 0.0943    bound 0.3734    transfer 0.0217    finalize 0.0587    func 0.5612    
Accumulated time: func 5.5216    prepare 0.3033    bound 4.9477    transfer 0.0604    finalize 0.1662    
all_split False
======================Cut inference begins======================
max lb tensor(0.43732113) min lb tensor(-0.21931940)
Number of Verified Splits: 138 of 2002
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.08729839324951172 
BICCOS Cumulative time: 1.4974777698516846
Preprocessing time: 0.06183886528015137 Inference time: 0.023077726364135742 Add cuts time: 0.001895904541015625 Cut analysis time: 0.0004858970642089844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21932 (23), -0.21757 (24), -0.21721 (23), -0.21694 (23), -0.21623 (24), -0.21614 (23), -0.21509 (24), -0.21480 (23), -0.21442 (23), -0.21440 (24), -0.21366 (23), -0.21350 (24), -0.21311 (23), -0.21310 (23), -0.21192 (23), -0.21180 (23), -0.21173 (23), -0.21164 (24), -0.21156 (23), -0.21133 (23), 
Length of domains: 1864
Time: pickout 0.0296    decision 0.0899    set_bounds 0.2173    solve 0.5625    add 0.0374    
Accumulated time: pickout 0.0645    decision 1.3810    set_bounds 0.4811    solve 5.3030    add 0.4064    
Current (lb-rhs): -0.2193194031715393
5464 domains visited
Cumulative time: 9.408631801605225

BaB round 23
batch: 1024
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 225] [/input-12, 798] [/input-12, 798] [/input-12, 798] [/input-12, 798] [/input-12, 802] [/input-12, 798] [/input-12, 802] [/input-12, 2148] [/input-12, 798] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4248446226119995, worst -0.2193198800086975
10 lb beta sum: 1.4248446226119995, worst -0.2193194031715393
Time: prepare 0.0970    bound 0.3728    transfer 0.0072    finalize 0.0562    func 0.5474    
Accumulated time: func 6.0689    prepare 0.4006    bound 5.3205    transfer 0.0675    finalize 0.2224    
all_split False
======================Cut inference begins======================
max lb tensor(0.58180654) min lb tensor(-0.21930891)
Number of Verified Splits: 409 of 2048
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.13911914825439453 
BICCOS Cumulative time: 1.636596918106079
Preprocessing time: 0.06324505805969238 Inference time: 0.06848597526550293 Add cuts time: 0.006879091262817383 Cut analysis time: 0.0005090236663818359
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21931 (24), -0.21692 (24), -0.21612 (24), -0.21438 (24), -0.21363 (24), -0.21350 (24), -0.21311 (23), -0.21310 (23), -0.21192 (23), -0.21190 (24), -0.21174 (24), -0.21156 (23), -0.21119 (24), -0.21101 (25), -0.21031 (23), -0.20960 (24), -0.20956 (25), -0.20951 (24), -0.20870 (24), -0.20851 (25), 
Length of domains: 2479
Time: pickout 0.0055    decision 0.0873    set_bounds 0.0874    solve 0.5477    add 0.0436    
Accumulated time: pickout 0.0700    decision 1.4682    set_bounds 0.5685    solve 5.8507    add 0.4500    
Current (lb-rhs): -0.21930891275405884
7103 domains visited
current_vram/total_varm: 8.8GB/99.9GB, batch_size increase to 2048
Cumulative time: 10.327887535095215

BaB round 24
batch: 2048
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 798] [/input-12, 798] [/input-16, 225] [/input-12, 798] [/input-12, 798] [/input-12, 798] [/input-12, 798] [/input-12, 798] [/input-12, 818] [/input-12, 798] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4289813041687012, worst -0.21311096847057343
10 lb beta sum: 1.4289813041687012, worst -0.21314482390880585
Time: prepare 0.1885    bound 0.6655    transfer 0.0538    finalize 0.1256    func 1.0615    
Accumulated time: func 7.1305    prepare 0.5893    bound 5.9860    transfer 0.1213    finalize 0.3480    
all_split False
======================Cut inference begins======================
max lb tensor(0.58362484) min lb tensor(-0.21308045)
Number of Verified Splits: 978 of 4096
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.31963467597961426 
BICCOS Cumulative time: 1.9562315940856934
Preprocessing time: 0.1285092830657959 Inference time: 0.17398953437805176 Add cuts time: 0.016539335250854492 Cut analysis time: 0.0005965232849121094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21308 (24), -0.21276 (25), -0.21101 (25), -0.21038 (25), -0.21025 (24), -0.20960 (25), -0.20956 (25), -0.20953 (25), -0.20851 (25), -0.20778 (25), -0.20771 (25), -0.20705 (25), -0.20702 (25), -0.20693 (25), -0.20680 (25), -0.20661 (25), -0.20624 (24), -0.20611 (24), -0.20585 (24), -0.20571 (25), 
Length of domains: 3549
Time: pickout 0.0075    decision 0.1677    set_bounds 0.3425    solve 1.0628    add 0.0662    
Accumulated time: pickout 0.0775    decision 1.6360    set_bounds 0.9110    solve 6.9135    add 0.5162    
Current (lb-rhs): -0.21308045089244843
10221 domains visited
current_vram/total_varm: 13.8GB/99.9GB, batch_size increase to 4096
Cumulative time: 12.311078548431396

BaB round 25
batch: 3549
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2473] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-12, 2473] [/input-12, 2149] [/input-12, 2149] [/input-16, 225] [/input-12, 2473] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4410194158554077, worst -0.20808321237564087
10 lb beta sum: 1.4410194158554077, worst -0.20807987451553345
Time: prepare 0.3287    bound 1.0908    transfer 0.0995    finalize 0.2378    func 1.8048    
Accumulated time: func 8.9352    prepare 0.9183    bound 7.0768    transfer 0.2209    finalize 0.5858    
all_split False
======================Cut inference begins======================
max lb tensor(0.59092605) min lb tensor(-0.20807463)
Number of Verified Splits: 1348 of 7098
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.6736087799072266 
BICCOS Cumulative time: 2.62984037399292
Preprocessing time: 0.22114348411560059 Inference time: 0.42942214012145996 Add cuts time: 0.02244091033935547 Cut analysis time: 0.0006022453308105469
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20807 (26), -0.20636 (25), -0.20632 (26), -0.20608 (25), -0.20570 (26), -0.20488 (26), -0.20485 (26), -0.20464 (26), -0.20356 (25), -0.20314 (25), -0.20306 (26), -0.20280 (26), -0.20221 (26), -0.20216 (26), -0.20201 (26), -0.20168 (26), -0.20147 (26), -0.20114 (26), -0.20099 (25), -0.20098 (26), 
Length of domains: 5750
Time: pickout 0.1283    decision 0.2704    set_bounds 0.4598    solve 1.8066    add 0.1366    
Accumulated time: pickout 0.2058    decision 1.9064    set_bounds 1.3709    solve 8.7201    add 0.6528    
Current (lb-rhs): -0.2080746293067932
15971 domains visited
Cumulative time: 15.80939269065857

BaB round 26
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 225] [/input-12, 2473] [/input-12, 2481] [/input-12, 806] [/input-12, 2481] [/input-12, 2462] [/input-12, 2481] [/input-16, 225] [/input-12, 2481] [/input-16, 225] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4444127082824707, worst -0.20179371535778046
10 lb beta sum: 1.4444127082824707, worst -0.20215420424938202
Time: prepare 0.3809    bound 1.2435    transfer 0.1032    finalize 0.4554    func 2.2384    
Accumulated time: func 11.1736    prepare 1.2995    bound 8.3203    transfer 0.3241    finalize 1.0412    
all_split False
======================Cut inference begins======================
max lb tensor(0.57544756) min lb tensor(-0.20179372)
Number of Verified Splits: 639 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.4095025062561035 
BICCOS Cumulative time: 3.0393428802490234
Preprocessing time: 0.25847768783569336 Inference time: 0.13612747192382812 Add cuts time: 0.014281511306762695 Cut analysis time: 0.0006158351898193359
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20807 (26), -0.20570 (26), -0.20485 (26), -0.20216 (26), -0.20179 (26), -0.20114 (26), -0.20113 (26), -0.20064 (27), -0.19993 (26), -0.19936 (27), -0.19912 (26), -0.19894 (27), -0.19891 (26), -0.19877 (26), -0.19830 (26), -0.19813 (27), -0.19796 (26), -0.19759 (27), -0.19755 (27), -0.19693 (26), 
Length of domains: 9207
Time: pickout 0.0194    decision 0.3142    set_bounds 0.3685    solve 2.2402    add 0.1999    
Accumulated time: pickout 0.2252    decision 2.2206    set_bounds 1.7394    solve 10.9603    add 0.8527    
Current (lb-rhs): -0.2080746293067932
23524 domains visited
current_vram/total_varm: 30.4GB/99.9GB, batch_size increase to 8192
Cumulative time: 19.382230281829834

BaB round 27
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 806] [/input-12, 818] [/input-12, 806] [/input-12, 2473] [/input-12, 806] [/input-12, 2462] [/input-12, 2481] [/input-12, 3638] [/input-12, 818] [/input-12, 2481] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4317713975906372, worst -0.20239311456680298
10 lb beta sum: 1.4317713975906372, worst -0.2023525834083557
Time: prepare 0.7575    bound 2.3921    transfer 0.2118    finalize 0.5249    func 3.9953    
Accumulated time: func 15.1689    prepare 2.0573    bound 10.7124    transfer 0.5359    finalize 1.5660    
all_split False
======================Cut inference begins======================
max lb tensor(0.54474759) min lb tensor(-0.20233065)
Number of Verified Splits: 944 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 1.0498621463775635 
BICCOS Cumulative time: 4.089205026626587
Preprocessing time: 0.5293164253234863 Inference time: 0.5029442310333252 Add cuts time: 0.0169827938079834 Cut analysis time: 0.0006186962127685547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20233 (27), -0.20179 (26), -0.20001 (27), -0.19935 (27), -0.19891 (26), -0.19824 (28), -0.19682 (27), -0.19682 (28), -0.19664 (27), -0.19577 (27), -0.19547 (26), -0.19540 (27), -0.19540 (28), -0.19520 (28), -0.19505 (28), -0.19501 (26), -0.19456 (27), -0.19407 (28), -0.19398 (27), -0.19375 (27), 
Length of domains: 16455
Time: pickout 0.0317    decision 0.7790    set_bounds 0.9599    solve 3.9998    add 0.3745    
Accumulated time: pickout 0.2569    decision 2.9996    set_bounds 2.6992    solve 14.9601    add 1.2272    
Current (lb-rhs): -0.20233064889907837
38964 domains visited
Cumulative time: 26.61193823814392

BaB round 28
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 806] [/input-12, 2473] [/input-12, 2660] [/input-12, 2660] [/input-12, 2660] [/input-12, 806] [/input-12, 2473] [/input-12, 806] [/input-12, 2481] [/input-12, 806] 
cut re-enabled after branching node selection
0 lb beta sum: 1.427437424659729, worst -0.19999033212661743
10 lb beta sum: 1.427437424659729, worst -0.19993644952774048
Time: prepare 0.7595    bound 2.3923    transfer 0.2110    finalize 0.5308    func 4.0022    
Accumulated time: func 19.1711    prepare 2.8171    bound 13.1047    transfer 0.7469    finalize 2.0969    
all_split False
======================Cut inference begins======================
max lb tensor(0.55880642) min lb tensor(-0.19991738)
Number of Verified Splits: 697 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.7187337875366211 
BICCOS Cumulative time: 4.807938814163208
Preprocessing time: 0.5366437435150146 Inference time: 0.1688365936279297 Add cuts time: 0.012638092041015625 Cut analysis time: 0.0006153583526611328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19992 (28), -0.19729 (28), -0.19692 (28), -0.19639 (27), -0.19577 (27), -0.19520 (28), -0.19451 (29), -0.19414 (28), -0.19398 (27), -0.19382 (28), -0.19350 (27), -0.19317 (29), -0.19302 (28), -0.19283 (27), -0.19216 (28), -0.19196 (28), -0.19134 (29), -0.19126 (27), -0.19070 (28), -0.19053 (27), 
Length of domains: 23950
Time: pickout 0.0326    decision 0.6228    set_bounds 1.0438    solve 4.0058    add 0.3491    
Accumulated time: pickout 0.2895    decision 3.6224    set_bounds 3.7431    solve 18.9659    add 1.5763    
Current (lb-rhs): -0.19991737604141235
54651 domains visited
Cumulative time: 33.42166328430176

BaB round 29
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2660] [/input-12, 806] [/input-12, 2474] [/input-12, 2667] [/input-12, 2473] [/input-12, 2474] [/input-12, 2473] [/input-12, 2474] [/input-12, 2474] [/input-12, 2473] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4185439348220825, worst -0.193997323513031
10 lb beta sum: 1.4185439348220825, worst -0.19401639699935913
Time: prepare 0.7539    bound 2.3922    transfer 0.2110    finalize 0.5347    func 4.0016    
Accumulated time: func 23.1726    prepare 3.5714    bound 15.4969    transfer 0.9579    finalize 2.6316    
all_split False
======================Cut inference begins======================
max lb tensor(0.52765095) min lb tensor(-0.19146353)
Number of Verified Splits: 553 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.6993234157562256 
BICCOS Cumulative time: 5.507262229919434
Preprocessing time: 0.5314440727233887 Inference time: 0.14688634872436523 Add cuts time: 0.020371198654174805 Cut analysis time: 0.000621795654296875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19992 (28), -0.19729 (28), -0.19692 (28), -0.19639 (27), -0.19451 (29), -0.19414 (28), -0.19382 (28), -0.19350 (27), -0.19317 (29), -0.19302 (28), -0.19196 (28), -0.19146 (29), -0.19136 (28), -0.19134 (29), -0.19043 (28), -0.19024 (29), -0.19004 (28), -0.19002 (28), -0.18993 (27), -0.18957 (27), 
Length of domains: 31589
Time: pickout 0.0327    decision 0.9530    set_bounds 1.1143    solve 4.0039    add 0.3807    
Accumulated time: pickout 0.3221    decision 4.5754    set_bounds 4.8574    solve 22.9698    add 1.9570    
Current (lb-rhs): -0.19991737604141235
70482 domains visited
Cumulative time: 40.63314461708069

BaB round 30
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2462] [/input-12, 2474] [/input-12, 2469] [/input-12, 2660] [/input-12, 806] [/input-12, 2462] [/input-12, 2148] [/input-12, 2667] [/input-12, 2462] [/input-12, 2462] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4256510734558105, worst -0.19630581140518188
10 lb beta sum: 1.4256510734558105, worst -0.19624477624893188
Time: prepare 0.7600    bound 2.3946    transfer 0.2105    finalize 0.9408    func 4.4156    
Accumulated time: func 27.5882    prepare 4.3318    bound 17.8915    transfer 1.1684    finalize 3.5724    
all_split False
======================Cut inference begins======================
max lb tensor(0.40549886) min lb tensor(-0.19622570)
Number of Verified Splits: 600 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.7046823501586914 
BICCOS Cumulative time: 6.211944580078125
Preprocessing time: 0.5367085933685303 Inference time: 0.15398120880126953 Add cuts time: 0.013313055038452148 Cut analysis time: 0.0006794929504394531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19623 (29), -0.19388 (28), -0.19354 (29), -0.19322 (29), -0.19146 (29), -0.19136 (28), -0.19069 (28), -0.19041 (29), -0.19013 (29), -0.19004 (28), -0.18906 (30), -0.18901 (29), -0.18835 (28), -0.18826 (29), -0.18797 (28), -0.18787 (29), -0.18773 (29), -0.18761 (28), -0.18729 (28), -0.18719 (28), 
Length of domains: 39181
Time: pickout 0.0326    decision 0.9550    set_bounds 0.7696    solve 4.4190    add 0.7057    
Accumulated time: pickout 0.3547    decision 5.5304    set_bounds 5.6270    solve 27.3889    add 2.6627    
Current (lb-rhs): -0.19622570276260376
86266 domains visited
Cumulative time: 48.25852131843567

BaB round 31
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2462] [/input-12, 2462] [/input-12, 2462] [/input-12, 3638] [/input-12, 2473] [/input-12, 2481] [/input-12, 2474] [/input-12, 2462] [/input-12, 2473] [/input-12, 2465] 
cut re-enabled after branching node selection
0 lb beta sum: 1.423675775527954, worst -0.18858224153518677
10 lb beta sum: 1.423675775527954, worst -0.18871957063674927
Time: prepare 0.7645    bound 2.3956    transfer 0.2111    finalize 0.5368    func 4.0182    
Accumulated time: func 31.6064    prepare 5.0966    bound 20.2871    transfer 1.3795    finalize 4.1092    
all_split False
======================Cut inference begins======================
max lb tensor(0.40488422) min lb tensor(-0.18359572)
Number of Verified Splits: 509 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 1.2100965976715088 
BICCOS Cumulative time: 7.422041177749634
Preprocessing time: 0.5428318977355957 Inference time: 0.6543493270874023 Add cuts time: 0.01228785514831543 Cut analysis time: 0.0006275177001953125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19623 (29), -0.19388 (28), -0.19354 (29), -0.19322 (29), -0.19146 (29), -0.19136 (28), -0.19069 (28), -0.19041 (29), -0.19013 (29), -0.18906 (30), -0.18901 (29), -0.18835 (28), -0.18826 (29), -0.18797 (28), -0.18787 (29), -0.18761 (28), -0.18729 (28), -0.18719 (28), -0.18717 (30), -0.18688 (30), 
Length of domains: 46864
Time: pickout 0.0302    decision 0.6409    set_bounds 1.2474    solve 4.0216    add 0.3806    
Accumulated time: pickout 0.3849    decision 6.1713    set_bounds 6.8745    solve 31.4105    add 3.0433    
Current (lb-rhs): -0.19622570276260376
102141 domains visited
Cumulative time: 55.82237005233765

BaB round 32
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2474] [/input-12, 2473] [/input-12, 2474] [/input-12, 2474] [/input-12, 2667] [/input-12, 806] [/input-12, 2474] [/input-12, 2667] [/input-12, 2473] [/input-12, 2474] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4164948463439941, worst -0.18775850534439087
10 lb beta sum: 1.4164948463439941, worst -0.18763691186904907
Time: prepare 0.7661    bound 2.3941    transfer 0.2111    finalize 0.5502    func 4.5764    
Accumulated time: func 36.1827    prepare 5.8630    bound 22.6812    transfer 1.5907    finalize 4.6595    
all_split False
======================Cut inference begins======================
max lb tensor(0.32507312) min lb tensor(-0.18750006)
Number of Verified Splits: 478 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.6832864284515381 
BICCOS Cumulative time: 8.105327606201172
Preprocessing time: 0.5380561351776123 Inference time: 0.1323084831237793 Add cuts time: 0.012288093566894531 Cut analysis time: 0.0006337165832519531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19623 (29), -0.19388 (28), -0.19354 (29), -0.19322 (29), -0.19069 (28), -0.19041 (29), -0.19013 (29), -0.18906 (30), -0.18901 (29), -0.18826 (29), -0.18750 (29), -0.18729 (28), -0.18719 (28), -0.18717 (30), -0.18688 (30), -0.18658 (29), -0.18602 (29), -0.18540 (29), -0.18530 (30), -0.18523 (29), 
Length of domains: 54578
Time: pickout 0.0306    decision 0.6256    set_bounds 0.8076    solve 4.5793    add 0.3955    
Accumulated time: pickout 0.4155    decision 6.7969    set_bounds 7.6820    solve 35.9898    add 3.4389    
Current (lb-rhs): -0.19622570276260376
118047 domains visited
Cumulative time: 62.98161697387695

BaB round 33
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2474] [/input-12, 2148] [/input-12, 2660] [/input-12, 806] [/input-12, 2474] [/input-12, 2667] [/input-12, 806] [/input-12, 806] [/input-12, 806] [/input-12, 2660] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4101723432540894, worst -0.190310999751091
10 lb beta sum: 1.4101723432540894, worst -0.19036583602428436
Time: prepare 0.7630    bound 2.3964    transfer 0.2181    finalize 0.5535    func 4.0435    
Accumulated time: func 40.2263    prepare 6.6263    bound 25.0776    transfer 1.8088    finalize 5.2129    
all_split False
======================Cut inference begins======================
max lb tensor(0.40905988) min lb tensor(-0.19013648)
Number of Verified Splits: 467 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.6951487064361572 
BICCOS Cumulative time: 8.800476312637329
Preprocessing time: 0.5515100955963135 Inference time: 0.13241815567016602 Add cuts time: 0.01051950454711914 Cut analysis time: 0.0007009506225585938
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19623 (29), -0.19354 (29), -0.19322 (29), -0.19014 (29), -0.19013 (29), -0.18906 (30), -0.18901 (29), -0.18826 (29), -0.18750 (29), -0.18717 (30), -0.18700 (29), -0.18688 (30), -0.18658 (29), -0.18602 (29), -0.18530 (30), -0.18480 (29), -0.18465 (29), -0.18442 (29), -0.18429 (29), -0.18418 (29), 
Length of domains: 62303
Time: pickout 0.0348    decision 0.6458    set_bounds 1.4071    solve 4.0475    add 0.3736    
Accumulated time: pickout 0.4503    decision 7.4427    set_bounds 9.0891    solve 40.0373    add 3.8125    
Current (lb-rhs): -0.19622570276260376
133964 domains visited
Cumulative time: 70.22348141670227

BaB round 34
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2462] [/input-12, 2465] [/input-12, 806] [/input-12, 2474] [/input-12, 806] [/input-12, 2660] [/input-12, 2149] [/input-12, 7828] [/input-12, 2667] [/input-12, 7828] 
cut re-enabled after branching node selection
0 lb beta sum: 1.42506742477417, worst -0.18870550394058228
10 lb beta sum: 1.42506742477417, worst -0.18862920999526978
Time: prepare 0.7637    bound 2.3951    transfer 0.2147    finalize 0.5273    func 4.0122    
Accumulated time: func 44.2385    prepare 7.3903    bound 27.4727    transfer 2.0234    finalize 5.7402    
all_split False
======================Cut inference begins======================
max lb tensor(0.04878390) min lb tensor(-0.18859440)
Number of Verified Splits: 804 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.7935943603515625 
BICCOS Cumulative time: 9.594070672988892
Preprocessing time: 0.5517597198486328 Inference time: 0.22098565101623535 Add cuts time: 0.02003765106201172 Cut analysis time: 0.0008113384246826172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19014 (29), -0.18859 (30), -0.18750 (29), -0.18702 (30), -0.18700 (29), -0.18688 (30), -0.18613 (30), -0.18590 (30), -0.18559 (30), -0.18528 (30), -0.18480 (29), -0.18442 (29), -0.18432 (30), -0.18418 (29), -0.18412 (30), -0.18402 (30), -0.18383 (30), -0.18360 (30), -0.18351 (30), -0.18345 (29), 
Length of domains: 69691
Time: pickout 0.0324    decision 0.6446    set_bounds 1.4636    solve 4.0173    add 0.9032    
Accumulated time: pickout 0.4828    decision 8.0873    set_bounds 10.5527    solve 44.0546    add 4.7157    
Current (lb-rhs): -0.19013647735118866
149544 domains visited
Cumulative time: 78.13025975227356

BaB round 35
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2474] [/input-12, 3638] [/input-12, 2473] [/input-12, 806] [/input-12, 2474] [/input-12, 806] [/input-12, 806] [/input-12, 2667] [/input-12, 806] [/input-12, 2473] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4211922883987427, worst -0.1827450394630432
10 lb beta sum: 1.4211922883987427, worst -0.18268686532974243
Time: prepare 0.7531    bound 2.3941    transfer 0.2084    finalize 0.5486    func 4.0146    
Accumulated time: func 48.2530    prepare 8.1437    bound 29.8668    transfer 2.2318    finalize 6.2888    
all_split False
======================Cut inference begins======================
max lb tensor(0.04816234) min lb tensor(-0.18265682)
Number of Verified Splits: 749 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.7926807403564453 
BICCOS Cumulative time: 10.386751413345337
Preprocessing time: 0.5617291927337646 Inference time: 0.21075439453125 Add cuts time: 0.019119977951049805 Cut analysis time: 0.0010771751403808594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19014 (29), -0.18859 (30), -0.18750 (29), -0.18702 (30), -0.18700 (29), -0.18613 (30), -0.18590 (30), -0.18559 (30), -0.18528 (30), -0.18480 (29), -0.18442 (29), -0.18432 (30), -0.18418 (29), -0.18412 (30), -0.18402 (30), -0.18383 (30), -0.18360 (30), -0.18351 (30), -0.18345 (29), -0.18340 (29), 
Length of domains: 77134
Time: pickout 0.0305    decision 0.6266    set_bounds 1.5353    solve 4.0187    add 0.3423    
Accumulated time: pickout 0.5133    decision 8.7140    set_bounds 12.0880    solve 48.0733    add 5.0580    
Current (lb-rhs): -0.19013647735118866
165179 domains visited
Cumulative time: 85.51572275161743

BaB round 36
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 806] [/input-12, 806] [/input-12, 2667] [/input-12, 2465] [/input-12, 2474] [/input-12, 2474] [/input-12, 2474] [/input-12, 2667] [/input-12, 2149] [/input-12, 7828] 
cut re-enabled after branching node selection
0 lb beta sum: 1.42367422580719, worst -0.1843598484992981
10 lb beta sum: 1.42367422580719, worst -0.1843751072883606
Time: prepare 0.7668    bound 2.3922    transfer 0.2118    finalize 0.5322    func 4.0158    
Accumulated time: func 52.2688    prepare 8.9109    bound 32.2590    transfer 2.4436    finalize 6.8209    
all_split False
======================Cut inference begins======================
max lb tensor(0.04939115) min lb tensor(-0.18035704)
Number of Verified Splits: 732 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.7712504863739014 
BICCOS Cumulative time: 11.158001899719238
Preprocessing time: 0.5496494770050049 Inference time: 0.20169711112976074 Add cuts time: 0.019266366958618164 Cut analysis time: 0.0006375312805175781
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19014 (29), -0.18859 (30), -0.18750 (29), -0.18702 (30), -0.18700 (29), -0.18613 (30), -0.18590 (30), -0.18559 (30), -0.18528 (30), -0.18480 (29), -0.18442 (29), -0.18432 (30), -0.18418 (29), -0.18412 (30), -0.18402 (30), -0.18383 (30), -0.18351 (30), -0.18345 (29), -0.18314 (29), -0.18285 (30), 
Length of domains: 84594
Time: pickout 0.0281    decision 0.6290    set_bounds 1.5774    solve 4.0201    add 0.3502    
Accumulated time: pickout 0.5415    decision 9.3430    set_bounds 13.6654    solve 52.0934    add 5.4082    
Current (lb-rhs): -0.19013647735118866
180831 domains visited
Cumulative time: 92.93948769569397

BaB round 37
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 806] [/input-12, 2474] [/input-12, 2474] [/input-12, 2660] [/input-12, 2660] [/input-12, 806] [/input-12, 2667] [/input-12, 806] [/input-12, 2667] [/input-12, 2667] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4249533414840698, worst -0.18024639785289764
10 lb beta sum: 1.4249533414840698, worst -0.18057112395763397
Time: prepare 1.5244    bound 2.3958    transfer 0.2118    finalize 0.5469    func 4.7866    
Accumulated time: func 57.0554    prepare 10.4356    bound 34.6548    transfer 2.6554    finalize 7.3678    
all_split False
======================Cut inference begins======================
max lb tensor(0.04952419) min lb tensor(-0.18016247)
Number of Verified Splits: 669 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.7616188526153564 
BICCOS Cumulative time: 11.919620752334595
Preprocessing time: 0.5508887767791748 Inference time: 0.19336962699890137 Add cuts time: 0.016676902770996094 Cut analysis time: 0.0006835460662841797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19014 (29), -0.18859 (30), -0.18702 (30), -0.18700 (29), -0.18613 (30), -0.18590 (30), -0.18559 (30), -0.18528 (30), -0.18480 (29), -0.18432 (30), -0.18412 (30), -0.18402 (30), -0.18383 (30), -0.18351 (30), -0.18345 (29), -0.18314 (29), -0.18285 (30), -0.18276 (30), -0.18266 (31), -0.18229 (30), 
Length of domains: 92117
Time: pickout 0.0312    decision 0.6285    set_bounds 0.8334    solve 4.7910    add 0.3362    
Accumulated time: pickout 0.5727    decision 9.9715    set_bounds 14.4988    solve 56.8844    add 5.7443    
Current (lb-rhs): -0.19013647735118866
196546 domains visited
Cumulative time: 100.36264133453369

BaB round 38
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2465] [/input-12, 2148] [/input-12, 2667] [/input-12, 2465] [/input-12, 2667] [/input-12, 1961] [/input-12, 806] [/input-12, 2667] [/input-12, 2465] [/input-12, 2465] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4180562496185303, worst -0.18111413717269897
10 lb beta sum: 1.4180562496185303, worst -0.18137556314468384
Time: prepare 0.7632    bound 2.3925    transfer 0.2136    finalize 0.5342    func 4.0133    
Accumulated time: func 61.0687    prepare 11.1991    bound 37.0473    transfer 2.8691    finalize 7.9020    
all_split False
======================Cut inference begins======================
max lb tensor(0.04791415) min lb tensor(-0.18038708)
Number of Verified Splits: 657 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.7423968315124512 
BICCOS Cumulative time: 12.662017583847046
Preprocessing time: 0.5372629165649414 Inference time: 0.18799710273742676 Add cuts time: 0.016504287719726562 Cut analysis time: 0.0006325244903564453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19014 (29), -0.18859 (30), -0.18702 (30), -0.18700 (29), -0.18613 (30), -0.18590 (30), -0.18559 (30), -0.18528 (30), -0.18432 (30), -0.18412 (30), -0.18402 (30), -0.18345 (29), -0.18314 (29), -0.18285 (30), -0.18276 (30), -0.18266 (31), -0.18229 (30), -0.18174 (31), -0.18121 (30), -0.18108 (31), 
Length of domains: 99652
Time: pickout 0.0271    decision 0.6241    set_bounds 0.8119    solve 4.8866    add 0.3532    
Accumulated time: pickout 0.5998    decision 10.5956    set_bounds 15.3107    solve 61.7710    add 6.0975    
Current (lb-rhs): -0.19013647735118866
212273 domains visited
Cumulative time: 107.85157942771912

BaB round 39
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 806] [/input-12, 2473] [/input-12, 3809] [/input-12, 806] [/input-12, 806] [/input-12, 806] [/input-12, 806] [/input-12, 2462] [/input-12, 2481] [/input-12, 2465] 
cut re-enabled after branching node selection
0 lb beta sum: 1.416621446609497, worst -0.18263620138168335
10 lb beta sum: 1.416621446609497, worst -0.18261569738388062
Time: prepare 0.7551    bound 2.3937    transfer 0.2117    finalize 0.5187    func 3.9889    
Accumulated time: func 65.0576    prepare 11.9545    bound 39.4410    transfer 3.0808    finalize 8.4207    
all_split False
======================Cut inference begins======================
max lb tensor(0.04699826) min lb tensor(-0.17162520)
Number of Verified Splits: 558 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.7219171524047852 
BICCOS Cumulative time: 13.383934736251831
Preprocessing time: 0.5418555736541748 Inference time: 0.16454195976257324 Add cuts time: 0.014900922775268555 Cut analysis time: 0.0006186962127685547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19014 (29), -0.18859 (30), -0.18702 (30), -0.18700 (29), -0.18613 (30), -0.18590 (30), -0.18559 (30), -0.18528 (30), -0.18432 (30), -0.18412 (30), -0.18402 (30), -0.18345 (29), -0.18314 (29), -0.18285 (30), -0.18276 (30), -0.18266 (31), -0.18229 (30), -0.18174 (31), -0.18121 (30), -0.18108 (31), 
Length of domains: 107286
Time: pickout 0.0287    decision 0.6292    set_bounds 0.8214    solve 3.9918    add 0.3486    
Accumulated time: pickout 0.6285    decision 11.2248    set_bounds 16.1321    solve 65.7628    add 6.4461    
Current (lb-rhs): -0.19013647735118866
228099 domains visited
Cumulative time: 114.43177556991577

BaB round 40
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2474] [/input-12, 2465] [/input-12, 2465] [/input-12, 806] [/input-12, 2462] [/input-12, 3638] [/input-12, 2465] [/input-12, 2667] [/input-12, 2474] [/input-12, 2465] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4108965396881104, worst -0.18606285750865936
10 lb beta sum: 1.4108965396881104, worst -0.18603043258190155
Time: prepare 0.7616    bound 2.3932    transfer 0.2131    finalize 0.5279    func 4.0086    
Accumulated time: func 69.0663    prepare 12.7165    bound 41.8342    transfer 3.2939    finalize 8.9486    
all_split False
======================Cut inference begins======================
max lb tensor(0.04766190) min lb tensor(-0.18599848)
Number of Verified Splits: 660 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.7744672298431396 
BICCOS Cumulative time: 14.15840196609497
Preprocessing time: 0.5619802474975586 Inference time: 0.19423937797546387 Add cuts time: 0.017514944076538086 Cut analysis time: 0.0007326602935791016
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18859 (30), -0.18702 (30), -0.18613 (30), -0.18600 (30), -0.18590 (30), -0.18559 (30), -0.18528 (30), -0.18432 (30), -0.18412 (30), -0.18402 (30), -0.18299 (30), -0.18285 (30), -0.18276 (30), -0.18266 (31), -0.18229 (30), -0.18174 (31), -0.18108 (31), -0.18052 (30), -0.18039 (30), -0.18036 (31), 
Length of domains: 114818
Time: pickout 0.0285    decision 1.5524    set_bounds 0.7956    solve 4.0130    add 0.3461    
Accumulated time: pickout 0.6571    decision 12.7772    set_bounds 16.9277    solve 69.7758    add 6.7922    
Current (lb-rhs): -0.18859440088272095
243823 domains visited
Cumulative time: 121.9945330619812

BaB round 41
Cut Inference reaches max iterations. Recover the setting
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2667] [/input-12, 2474] [/input-12, 2667] [/input-12, 806] [/input-12, 2667] [/input-12, 2667] [/input-12, 2481] [/input-12, 2148] [/input-12, 806] [/input-12, 2473] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4215459823608398, worst -0.18285661935806274
10 lb beta sum: 1.4215459823608398, worst -0.18280988931655884
Time: prepare 0.7594    bound 2.3957    transfer 0.2110    finalize 0.5348    func 4.0113    
Accumulated time: func 73.0776    prepare 13.4762    bound 44.2299    transfer 3.5049    finalize 9.4835    
all_split False
======================Cut inference begins======================
max lb tensor(0.04767394) min lb tensor(-0.18280035)
Number of Verified Splits: 671 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.0008602142333984375 
BICCOS Cumulative time: 14.15926218032837
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18859 (30), -0.18600 (30), -0.18590 (30), -0.18559 (30), -0.18299 (30), -0.18280 (31), -0.18266 (31), -0.18174 (31), -0.18108 (31), -0.18039 (30), -0.18036 (31), -0.18021 (31), -0.18016 (30), -0.18007 (31), -0.18000 (31), -0.17982 (31), -0.17980 (31), -0.17973 (30), -0.17973 (30), -0.17960 (31), 
Length of domains: 122339
Time: pickout 0.0288    decision 0.6266    set_bounds 1.8553    solve 4.0154    add 0.3393    
Accumulated time: pickout 0.6859    decision 13.4037    set_bounds 18.7830    solve 73.7912    add 7.1315    
Current (lb-rhs): -0.18859440088272095
259536 domains visited
Cumulative time: 128.90729570388794

BaB round 42
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 806] [/input-12, 2667] [/input-12, 806] [/input-12, 806] [/input-12, 2660] [/input-12, 2660] [/input-12, 2667] [/input-12, 2667] [/input-12, 7828] [/input-12, 2660] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4267032146453857, worst -0.1844502091407776
10 lb beta sum: 1.4267032146453857, worst -0.1844068169593811
Time: prepare 0.7916    bound 2.3947    transfer 0.2167    finalize 0.5486    func 4.0626    
Accumulated time: func 77.1402    prepare 14.2682    bound 46.6246    transfer 3.7216    finalize 10.0320    
all_split False
======================Cut inference begins======================
max lb tensor(0.04695058) min lb tensor(-0.18437392)
Number of Verified Splits: 766 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.0007047653198242188 
BICCOS Cumulative time: 14.159966945648193
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18600 (30), -0.18437 (31), -0.18299 (30), -0.18280 (31), -0.18266 (31), -0.18180 (31), -0.18174 (31), -0.18137 (31), -0.18039 (30), -0.18036 (31), -0.18021 (31), -0.18016 (30), -0.18007 (31), -0.17982 (31), -0.17980 (31), -0.17973 (30), -0.17973 (30), -0.17960 (31), -0.17944 (30), -0.17943 (29), 
Length of domains: 129765
Time: pickout 0.0274    decision 0.6268    set_bounds 0.8034    solve 4.0666    add 0.3426    
Accumulated time: pickout 0.7133    decision 14.0305    set_bounds 19.5864    solve 77.8578    add 7.4741    
Current (lb-rhs): -0.18599848449230194
275154 domains visited
Cumulative time: 134.82702732086182

BaB round 43
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2148] [/input-12, 2474] [/input-12, 2465] [/input-12, 2474] [/input-12, 2462] [/input-12, 3809] [/input-12, 2667] [/input-12, 2465] [/input-12, 7011] [/input-12, 2474] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4232466220855713, worst -0.1794939637184143
10 lb beta sum: 1.4232466220855713, worst -0.17944437265396118
Time: prepare 0.7826    bound 2.3942    transfer 0.2156    finalize 0.5383    func 4.0395    
Accumulated time: func 81.1797    prepare 15.0511    bound 49.0188    transfer 3.9371    finalize 10.5704    
all_split False
======================Cut inference begins======================
max lb tensor(0.04796630) min lb tensor(-0.17940909)
Number of Verified Splits: 760 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.0006487369537353516 
BICCOS Cumulative time: 14.160615682601929
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18600 (30), -0.18437 (31), -0.18299 (30), -0.18280 (31), -0.18180 (31), -0.18137 (31), -0.18039 (30), -0.18036 (31), -0.18021 (31), -0.18016 (30), -0.18007 (31), -0.17980 (31), -0.17973 (30), -0.17973 (30), -0.17960 (31), -0.17944 (30), -0.17943 (29), -0.17941 (32), -0.17907 (31), -0.17899 (30), 
Length of domains: 137197
Time: pickout 0.0289    decision 0.6260    set_bounds 1.8948    solve 4.0428    add 0.3399    
Accumulated time: pickout 0.7423    decision 14.6565    set_bounds 21.4811    solve 81.9005    add 7.8140    
Current (lb-rhs): -0.18599848449230194
290778 domains visited
Cumulative time: 141.8043999671936

BaB round 44
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2462] [/input-12, 2667] [/input-12, 806] [/input-12, 2465] [/input-12, 2148] [/input-12, 2667] [/input-12, 2465] [/input-12, 2667] [/input-12, 7828] [/input-12, 2465] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4212583303451538, worst -0.17533735930919647
10 lb beta sum: 1.4212583303451538, worst -0.17534594237804413
Time: prepare 0.7896    bound 2.3938    transfer 0.2155    finalize 0.5376    func 4.0469    
Accumulated time: func 85.2266    prepare 15.8409    bound 51.4126    transfer 4.1527    finalize 11.1080    
all_split False
======================Cut inference begins======================
max lb tensor(0.04840636) min lb tensor(-0.17510132)
Number of Verified Splits: 770 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.0006971359252929688 
BICCOS Cumulative time: 14.161312818527222
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18600 (30), -0.18437 (31), -0.18299 (30), -0.18280 (31), -0.18180 (31), -0.18137 (31), -0.18039 (30), -0.18036 (31), -0.18021 (31), -0.18016 (30), -0.18007 (31), -0.17980 (31), -0.17973 (30), -0.17973 (30), -0.17960 (31), -0.17944 (30), -0.17941 (32), -0.17899 (30), -0.17882 (31), -0.17867 (31), 
Length of domains: 144619
Time: pickout 0.0292    decision 0.6290    set_bounds 0.8035    solve 4.0514    add 0.3590    
Accumulated time: pickout 0.7715    decision 15.2855    set_bounds 22.2846    solve 85.9519    add 8.1730    
Current (lb-rhs): -0.18599848449230194
306392 domains visited
Cumulative time: 147.7307345867157

BaB round 45
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2667] [/input-12, 2667] [/input-12, 3809] [/input-12, 2474] [/input-12, 2667] [/input-12, 2474] [/input-12, 2481] [/input-12, 2660] [/input-12, 2667] [/input-12, 806] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4229230880737305, worst -0.17675858736038208
10 lb beta sum: 1.4229230880737305, worst -0.1767933964729309
Time: prepare 0.7791    bound 2.3954    transfer 0.2065    finalize 0.5371    func 4.0292    
Accumulated time: func 89.2558    prepare 16.6203    bound 53.8080    transfer 4.3592    finalize 11.6451    
all_split False
======================Cut inference begins======================
max lb tensor(0.04709888) min lb tensor(-0.17139965)
Number of Verified Splits: 701 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.0007224082946777344 
BICCOS Cumulative time: 14.1620352268219
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18600 (30), -0.18437 (31), -0.18299 (30), -0.18280 (31), -0.18180 (31), -0.18137 (31), -0.18039 (30), -0.18036 (31), -0.18021 (31), -0.18016 (30), -0.18007 (31), -0.17980 (31), -0.17973 (30), -0.17973 (30), -0.17960 (31), -0.17944 (30), -0.17941 (32), -0.17899 (30), -0.17882 (31), -0.17867 (31), 
Length of domains: 152110
Time: pickout 0.0302    decision 0.6286    set_bounds 1.9001    solve 4.0335    add 0.4248    
Accumulated time: pickout 0.8016    decision 15.9140    set_bounds 24.1846    solve 89.9853    add 8.5978    
Current (lb-rhs): -0.18599848449230194
322075 domains visited
Cumulative time: 154.8006980419159

BaB round 46
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2465] [/input-12, 2465] [/input-12, 2474] [/input-12, 2465] [/input-12, 2474] [/input-12, 2465] [/input-12, 7851] [/input-12, 7011] [/input-12, 2667] [/input-12, 2465] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4222609996795654, worst -0.17671161890029907
10 lb beta sum: 1.4222609996795654, worst -0.17663484811782837
Time: prepare 0.7694    bound 2.3938    transfer 0.2121    finalize 0.5233    func 4.0100    
Accumulated time: func 93.2659    prepare 17.3901    bound 56.2019    transfer 4.5713    finalize 12.1684    
all_split False
======================Cut inference begins======================
max lb tensor(0.04713297) min lb tensor(-0.17661053)
Number of Verified Splits: 742 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.0006954669952392578 
BICCOS Cumulative time: 14.162730693817139
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18600 (30), -0.18437 (31), -0.18299 (30), -0.18280 (31), -0.18180 (31), -0.18137 (31), -0.18039 (30), -0.18021 (31), -0.18016 (30), -0.18007 (31), -0.17980 (31), -0.17973 (30), -0.17973 (30), -0.17960 (31), -0.17944 (30), -0.17941 (32), -0.17882 (31), -0.17867 (31), -0.17813 (30), -0.17805 (31), 
Length of domains: 159560
Time: pickout 0.0281    decision 0.6276    set_bounds 0.8098    solve 4.0139    add 0.3512    
Accumulated time: pickout 0.8297    decision 16.5417    set_bounds 24.9945    solve 93.9992    add 8.9490    
Current (lb-rhs): -0.18599848449230194
337717 domains visited
Cumulative time: 160.6804165840149

BaB round 47
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7851] [/input-12, 2474] [/input-12, 806] [/input-12, 2465] [/input-12, 2148] [/input-12, 2473] [/input-12, 2474] [/input-12, 2462] [/input-12, 2465] [/input-12, 1961] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4237029552459717, worst -0.17472843825817108
10 lb beta sum: 1.4237029552459717, worst -0.1749926060438156
Time: prepare 0.7616    bound 2.3929    transfer 0.2112    finalize 0.5279    func 4.0051    
Accumulated time: func 97.2709    prepare 18.1520    bound 58.5948    transfer 4.7825    finalize 12.6963    
all_split False
======================Cut inference begins======================
max lb tensor(0.04807949) min lb tensor(-0.17453961)
Number of Verified Splits: 600 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.0008008480072021484 
BICCOS Cumulative time: 14.16353154182434
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18600 (30), -0.18437 (31), -0.18299 (30), -0.18280 (31), -0.18180 (31), -0.18137 (31), -0.18039 (30), -0.18021 (31), -0.18016 (30), -0.18007 (31), -0.17980 (31), -0.17973 (30), -0.17973 (30), -0.17960 (31), -0.17944 (30), -0.17941 (32), -0.17882 (31), -0.17867 (31), -0.17813 (30), -0.17805 (31), 
Length of domains: 167152
Time: pickout 0.0275    decision 0.6296    set_bounds 2.0008    solve 4.0091    add 0.3508    
Accumulated time: pickout 0.8573    decision 17.1713    set_bounds 26.9953    solve 98.0083    add 9.2997    
Current (lb-rhs): -0.18599848449230194
353501 domains visited
Cumulative time: 167.75078654289246

BaB round 48
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 806] [/input-12, 2667] [/input-12, 2667] [/input-12, 2667] [/input-12, 2148] [/input-12, 2474] [/input-12, 806] [/input-12, 2667] [/input-12, 2473] [/input-12, 2667] 
cut re-enabled after branching node selection
0 lb beta sum: 1.421753168106079, worst -0.1739521622657776
10 lb beta sum: 1.421753168106079, worst -0.17382389307022095
Time: prepare 0.7674    bound 2.3932    transfer 0.2121    finalize 0.5329    func 4.0165    
Accumulated time: func 101.2875    prepare 18.9198    bound 60.9880    transfer 4.9946    finalize 13.2292    
all_split False
======================Cut inference begins======================
max lb tensor(0.04767829) min lb tensor(-0.17375714)
Number of Verified Splits: 566 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.0008115768432617188 
BICCOS Cumulative time: 14.164343118667603
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18600 (30), -0.18437 (31), -0.18299 (30), -0.18280 (31), -0.18180 (31), -0.18137 (31), -0.18039 (30), -0.18021 (31), -0.18007 (31), -0.17980 (31), -0.17973 (30), -0.17973 (30), -0.17960 (31), -0.17944 (30), -0.17941 (32), -0.17882 (31), -0.17867 (31), -0.17771 (32), -0.17741 (30), -0.17739 (31), 
Length of domains: 174778
Time: pickout 0.0276    decision 0.6273    set_bounds 0.8122    solve 4.0207    add 0.3508    
Accumulated time: pickout 0.8849    decision 17.7986    set_bounds 27.8075    solve 102.0290    add 9.6506    
Current (lb-rhs): -0.18599848449230194
369319 domains visited
Cumulative time: 173.63889980316162

BaB round 49
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7011] [/input-12, 806] [/input-12, 2474] [/input-12, 2474] [/input-12, 2465] [/input-12, 2667] [/input-12, 2474] [/input-12, 3809] [/input-12, 2474] [/input-12, 2473] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4189692735671997, worst -0.1770344376564026
10 lb beta sum: 1.4189692735671997, worst -0.17725759744644165
Time: prepare 0.7718    bound 2.3951    transfer 0.2107    finalize 0.5445    func 4.0326    
Accumulated time: func 105.3200    prepare 19.6919    bound 63.3831    transfer 5.2054    finalize 13.7737    
all_split False
======================Cut inference begins======================
max lb tensor(0.04824042) min lb tensor(-0.17699915)
Number of Verified Splits: 588 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.0006465911865234375 
BICCOS Cumulative time: 14.164989709854126
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18600 (30), -0.18437 (31), -0.18299 (30), -0.18280 (31), -0.18180 (31), -0.18137 (31), -0.18021 (31), -0.18007 (31), -0.17980 (31), -0.17973 (30), -0.17944 (30), -0.17941 (32), -0.17882 (31), -0.17867 (31), -0.17771 (32), -0.17741 (30), -0.17739 (31), -0.17729 (31), -0.17711 (31), -0.17710 (31), 
Length of domains: 182382
Time: pickout 0.0280    decision 0.6248    set_bounds 0.8058    solve 5.2652    add 0.3505    
Accumulated time: pickout 0.9129    decision 18.4234    set_bounds 28.6133    solve 107.2943    add 10.0011    
Current (lb-rhs): -0.18599848449230194
385115 domains visited
Cumulative time: 180.75751423835754

BaB round 50
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 806] [/input-12, 3809] [/input-12, 2474] [/input-12, 2148] [/input-12, 2465] [/input-12, 2667] [/input-12, 2148] [/input-12, 2474] [/input-12, 2667] [/input-12, 2667] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4122304916381836, worst -0.17666679620742798
10 lb beta sum: 1.4122304916381836, worst -0.1778445839881897
Time: prepare 0.7741    bound 2.3933    transfer 0.2105    finalize 0.5445    func 4.0307    
Accumulated time: func 109.3507    prepare 20.4663    bound 65.7764    transfer 5.4159    finalize 14.3182    
all_split False
======================Cut inference begins======================
max lb tensor(0.04825068) min lb tensor(-0.17662913)
Number of Verified Splits: 660 of 16384
Stop inferencing: Max iteration reached.
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.0007834434509277344 
BICCOS Cumulative time: 14.165773153305054
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18600 (30), -0.18437 (31), -0.18299 (30), -0.18280 (31), -0.18180 (31), -0.18137 (31), -0.18021 (31), -0.17980 (31), -0.17973 (30), -0.17944 (30), -0.17941 (32), -0.17882 (31), -0.17867 (31), -0.17771 (32), -0.17741 (30), -0.17729 (31), -0.17711 (31), -0.17710 (31), -0.17700 (31), -0.17677 (31), 
Length of domains: 189914
Time: pickout 0.0283    decision 0.6259    set_bounds 0.8033    solve 4.0349    add 0.3478    
Accumulated time: pickout 0.9412    decision 19.0493    set_bounds 29.4166    solve 111.3292    add 10.3489    
Current (lb-rhs): -0.18599848449230194
400839 domains visited
Time out!!!!!!!!
Result: unknown in 204.4427 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 186, vnnlib ID: 186 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-75.80432892, -79.76074982, -80.02556610, -81.34851074, -80.89776611,
         -81.92378998, -82.83847809, -81.65615845, -73.75821686, -79.31383514]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1406]; unstable size 1406; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 82, 1, 1406] with unstable size 81 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 32, 1, 1406] with unstable size 31 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1406] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [541]; unstable size 541; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 32, 1, 541] with unstable size 31 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 541] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [31]; unstable size 31; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.74046111, 4.20176649, 4.54033184, 5.80477953, 5.21156740, 6.28815651,
         7.11691856, 5.75478554, 4.10775375]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0452 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 187, vnnlib ID: 187 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-46.12595749, -49.08537674, -46.80076981, -47.15269470, -46.83448792,
         -47.62091827, -47.38472366, -49.00387955, -44.73740768, -47.93551636]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1567]; unstable size 1567; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 79, 1, 1567] with unstable size 78 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 40, 1, 1567] with unstable size 39 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1567] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [590]; unstable size 590; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 40, 1, 590] with unstable size 39 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 590] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [39]; unstable size 39; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 39] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.19181085,  2.46107435,  0.00837326,  0.35519731, -0.20517707,
          0.70668149,  0.30676436,  1.65981710,  1.61806774]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-46.12595749, -49.08537674, -46.80076981, -47.15269470, -46.83448792,
         -47.62091827, -47.38472366, -49.00387955, -44.73740768, -47.93551636]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.22it/s]100%|██████████| 1/1 [00:00<00:00,  8.21it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-43.69703674, -46.71974182, -43.96884155, -44.33768082, -43.97332764,
          -44.76683426, -44.49669647, -46.12658310, -42.59788513, -45.54311371]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.37544250]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1247 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 7.853385925292969
alpha/beta optimization time: 1.4527583122253418
initial alpha-crown bounds: tensor([[ 0.23475111,  2.54126787,  0.10884190,  0.44402862, -0.10242701,
          0.80047631,  0.38870692,  1.77352595,  1.66421485]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.10242700576782227
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.38167572021484
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.38163566589355
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.38161182403564
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.38158988952637
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.38156938552856
Verifying property 4 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.10242701]], device='cuda:0') need to verify.
Model prediction is: tensor([-46.12595749, -49.08537674, -46.80076981, -47.15269470, -46.83448792,
        -47.62091827, -47.38472366, -49.00387955, -44.73740768, -47.93551636],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.10242701]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1567
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 581
Node /39 input 0: size torch.Size([250]) unstable 38
-----------------
# of unstable neurons: 2186
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00017714500427246094
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10232853889465332
10 lb beta sum: 0.0, worst -0.10232973098754883
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0731    transfer 0.0001    finalize 0.0002    func 0.0737    
Accumulated time: func 0.0737    prepare 0.0002    bound 0.0731    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 223] 
split level 1: [/input-16, 186] 
split level 2: [/input-16, 10] 
split level 3: [/input-16, 64] 
split level 4: [/input-16, 225] 
split level 5: [/input-16, 230] 
split level 6: [/input-16, 126] 
split level 7: [/input-16, 95] 
split level 8: [/input-16, 188] 
split level 9: [/input-16, 138] 
split level 10: [/input-16, 110] 
split level 11: [/input-16, 104] 
split level 12: [/input-16, 154] 
split level 13: [/input-16, 31] 
split level 14: [/input-16, 190] 
split level 15: [/input-16, 41] 
split level 16: [/input-16, 160] 
split level 17: [/input-16, 99] 
split level 18: [/input-16, 7] 
split level 19: [/input-16, 157] 
split level 20: [/input-16, 171] 
split level 21: [/input-16, 235] 
split level 22: [/input-12, 3617] 
split level 23: [/input-12, 796] 
split level 24: [/input-12, 3626] 
split level 25: [/input-12, 3618] 
split level 26: [/input-12, 2474] 
split level 27: [/input-12, 813] 
split level 28: [/input-12, 2913] 
split level 29: [/input-12, 6756] 
split level 30: [/input-12, 821] 
split level 31: [/input-12, 806] 
split level 32: [/input-12, 2027] 
split level 33: [/input-12, 2012] 
split level 34: [/input-12, 814] 
split level 35: [/input-12, 3366] 
split level 36: [/input-12, 4124] 
split level 37: [/input-12, 804] 
split level 38: [/input-12, 4395] 
split level 39: [/input-12, 789] 
split level 40: [/input-12, 2540] 
split level 41: [/input-12, 2452] 
split level 42: [/input-12, 3931] 
split level 43: [/input-12, 2530] 
split level 44: [/input-12, 805] 
split level 45: [/input-12, 3420] 
split level 46: [/input-12, 4132] 
split level 47: [/input-12, 5651] 
split level 48: [/input-12, 5555] 
split level 49: [/input-4, 1159] 
split level 50: [/input-12, 6497] 
split level 51: [/input-12, 543] 
split level 52: [/input-12, 6764] 
split level 53: [/input-12, 6249] 
split level 54: [/input-12, 2018] 
split level 55: [/input-12, 795] 
split level 56: [/input-12, 6261] 
split level 57: [/input-12, 6754] 
split level 58: [/input-12, 3413] 
split level 59: [/input-4, 3236] 
split level 60: [/input-12, 2457] 
split level 61: [/input-4, 3255] 
split level 62: [/input-12, 6253] 
split level 63: [/input-12, 3299] 
split level 64: [/input-12, 3923] 
split level 65: [/input-12, 2461] 
split level 66: [/input-12, 4586] 
split level 67: [/input-12, 2347] 
split level 68: [/input-12, 6252] 
split level 69: [/input-4, 5577] 
split level 70: [/input-12, 7969] 
split level 71: [/input-12, 2035] 
split level 72: [/input-12, 1007] 
split level 73: [/input-12, 2934] 
split level 74: [/input-12, 6753] 
split level 75: [/input-12, 4594] 
split level 76: [/input-4, 181] 
split level 77: [/input-12, 5411] 
split level 78: [/input-4, 1222] 
split level 79: [/input-4, 3256] 
split level 80: [/input-12, 2331] 
split level 81: [/input-4, 1203] 
split level 82: [/input-12, 5640] 
split level 83: [/input-12, 6500] 
split level 84: [/input-4, 103] 
split level 85: [/input-4, 199] 
split level 86: [/input-4, 1736] 
split level 87: [/input-4, 4535] 
split level 88: [/input-4, 4550] 
split level 89: [/input-12, 5556] 
split level 90: [/input-12, 5282] 
split level 91: [/input-12, 3430] 
split level 92: [/input-4, 6329] 
split level 93: [/input-12, 3412] 
split level 94: [/input-12, 2332] 
split level 95: [/input-12, 2618] 
split level 96: [/input-12, 2514] 
split level 97: [/input-4, 5048] 
split level 98: [/input-12, 2858] 
split level 99: [/input-12, 2392] 
split level 100: [/input-4, 4536] 
split level 101: [/input-4, 2888] 
split level 102: [/input-12, 5636] 
split level 103: [/input-12, 4765] 
split level 104: [/input-4, 105] 
split level 105: [/input-4, 1755] 
split level 106: [/input-12, 5644] 
split level 107: [/input-12, 5659] 
split level 108: [/input-12, 3906] 
split level 109: [/input-12, 2547] 
split level 110: [/input-4, 5542] 
split level 111: [/input-4, 1256] 
split level 112: [/input-4, 4553] 
split level 113: [/input-12, 387] 
split level 114: [/input-4, 1078] 
split level 115: [/input-4, 232] 
split level 116: [/input-12, 4199] 
split level 117: [/input-4, 4568] 
split level 118: [/input-12, 2620] 
split level 119: [/input-4, 168] 
split level 120: [/input-4, 4456] 
split level 121: [/input-4, 6327] 
split level 122: [/input-4, 3527] 
split level 123: [/input-4, 7083] 
split level 124: [/input-12, 5658] 
split level 125: [/input-4, 229] 
split level 126: [/input-4, 216] 
split level 127: [/input-12, 2900] 
split level 128: [/input-4, 4791] 
split level 129: [/input-4, 1117] 
split level 130: [/input-12, 2542] 
split level 131: [/input-12, 5648] 
split level 132: [/input-12, 2025] 
split level 133: [/input-12, 2421] 
split level 134: [/input-4, 3000] 
split level 135: [/input-4, 1257] 
split level 136: [/input-4, 5541] 
split level 137: [/input-4, 170] 
split level 138: [/input-4, 1245] 
split level 139: [/input-4, 1723] 
split level 140: [/input-4, 3752] 
split level 141: [/input-12, 4597] 
split level 142: [/input-12, 5165] 
split level 143: [/input-4, 3463] 
split level 144: [/input-4, 2994] 
split level 145: [/input-12, 5650] 
split level 146: [/input-4, 5083] 
split level 147: [/input-12, 2513] 
split level 148: [/input-4, 1118] 
split level 149: [/input-12, 4595] 
split level 150: [/input-12, 2467] 
split level 151: [/input-4, 6340] 
split level 152: [/input-4, 1133] 
split level 153: [/input-4, 231] 
split level 154: [/input-4, 4556] 
split level 155: [/input-4, 2245] 
split level 156: [/input-4, 6345] 
split level 157: [/input-4, 230] 
split level 158: [/input-12, 2308] 
split level 159: [/input-4, 2246] 
split level 160: [/input-4, 6324] 
split level 161: [/input-12, 5637] 
split level 162: [/input-4, 3288] 
split level 163: [/input-12, 1374] 
split level 164: [/input-4, 3238] 
split level 165: [/input-4, 4424] 
split level 166: [/input-4, 1262] 
split level 167: [/input-12, 5643] 
split level 168: [/input-4, 6343] 
split level 169: [/input-12, 7877] 
split level 170: [/input-12, 4403] 
split level 171: [/input-4, 1258] 
split level 172: [/input-4, 3047] 
split level 173: [/input-4, 53] 
split level 174: [/input-12, 5547] 
split level 175: [/input-12, 1568] 
split level 176: [/input-4, 3020] 
split level 177: [/input-12, 7663] 
split level 178: [/input-4, 3034] 
split level 179: [/input-4, 1610] 
split level 180: [/input-4, 4571] 
split level 181: [/input-4, 1032] 
split level 182: [/input-4, 3019] 
split level 183: [/input-12, 5678] 
split level 184: [/input-4, 4439] 
split level 185: [/input-4, 1082] 
split level 186: [/input-4, 1220] 
split level 187: [/input-4, 1240] 
split level 188: [/input-4, 5513] 
split level 189: [/input-4, 3141] 
split level 190: [/input-12, 3937] 
split level 191: [/input-4, 85] 
split level 192: [/input-4, 1048] 
split level 193: [/input-4, 5064] 
split level 194: [/input-12, 5641] 
split level 195: [/input-4, 6618] 
split level 196: [/input-4, 2873] 
split level 197: [/input-12, 2082] 
split level 198: [/input-4, 93] 
split level 199: [/input-4, 2263] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10205364227294922
10 lb beta sum: 0.0, worst -0.10202312469482422
Time: prepare 0.0129    bound 0.1345    transfer 0.0023    finalize 0.0109    func 0.1632    
Accumulated time: func 0.2369    prepare 0.0229    bound 0.2076    transfer 0.0024    finalize 0.0111    
all_split False
======================Cut inference begins======================
max lb tensor(0.49070072) min lb tensor(-0.10201383)
Number of Verified Splits: 17 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.011102914810180664 
BICCOS Cumulative time: 0.011102914810180664
Preprocessing time: 0.009773492813110352 Inference time: 0.0006666183471679688 Add cuts time: 0.00019240379333496094 Cut analysis time: 0.0004703998565673828
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.7650    set_bounds 0.0086    solve 0.1633    add 0.0098    
Accumulated time: pickout 0.0003    decision 0.7650    set_bounds 0.0086    solve 0.1633    add 0.0098    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([223]), tensor([-1.]), tensor([0]), tensor([0.16692829]), tensor([0]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([223]), tensor([1.]), tensor([0]), tensor([343.06396484]), tensor([0]))}
Shallow branching resets to n domains:  2
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03640317916870117

all verified at 1th iter
Time: prepare 0.0003    bound 0.0128    transfer 0.0001    finalize 0.0003    func 0.0135    
Accumulated time: func 0.2504    prepare 0.0232    bound 0.2204    transfer 0.0025    finalize 0.0113    
After pruning, left:  0

Back to Regular BaB


Properties batch 5, size 1
Remaining timeout: 197.13348746299744
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.13342905044556
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.1334068775177
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.13338661193848
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.8667 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 188, vnnlib ID: 188 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-34.59651947, -36.26745224, -33.78772354, -35.24238586, -34.15687561,
         -35.32597351, -35.63835526, -36.62523651, -36.14303589, -35.99483490]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1065]; unstable size 1065; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 80, 1, 1065] with unstable size 79 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 33, 1, 1065] with unstable size 32 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1065] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [542]; unstable size 542; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 33, 1, 542] with unstable size 32 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 542] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [32]; unstable size 32; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 32] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.21460418,  0.64072561,  0.49220893, -0.51730931,  0.53191966,
          0.72049689,  1.56832790,  0.47380131, -0.01988220]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-34.59651947, -36.26745224, -33.78772354, -35.24238586, -34.15687561,
         -35.32597351, -35.63835526, -36.62523651, -36.14303589, -35.99483490]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-35.00022125, -36.51213455, -34.26895523, -35.51848984, -34.22291565,
          -35.60102081, -35.95391083, -36.75694275, -36.53652573, -36.21015167],
         [-35.00022125, -36.51213455, -34.26895523, -35.51848984, -34.22291565,
          -35.60102081, -35.95391083, -36.75694275, -36.53652573, -36.21015167]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.73126602, -0.04603958,  1.94119644]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0062 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0462 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 189, vnnlib ID: 189 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-31.65295219, -33.94409180, -28.85086060, -30.75596046, -28.29216385,
         -31.03287697, -30.00209618, -31.63583946, -33.67806244, -33.19049835]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1084]; unstable size 1084; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 84, 1, 1084] with unstable size 83 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 26, 1, 1084] with unstable size 25 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1084] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [560]; unstable size 560; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 26, 1, 560] with unstable size 25 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 560] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [25]; unstable size 25; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.05255723,  3.63082457, -0.10236120,  1.38946760,  1.70476210,
          0.17029238,  2.18768597,  3.44690752,  2.91096687]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-31.65295219, -33.94409180, -28.85086060, -30.75596046, -28.29216385,
         -31.03287697, -30.00209618, -31.63583946, -33.67806244, -33.19049835]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.33it/s]100%|██████████| 1/1 [00:00<00:00,  8.32it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-32.90701294, -35.27646637, -29.96063805, -32.09158707, -29.73431396,
          -32.35660553, -31.37580872, -33.04667282, -34.93065262, -34.54696655]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.22632408]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1228 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 18.213102340698242
alpha/beta optimization time: 1.4384920597076416
initial alpha-crown bounds: tensor([[ 2.09820652,  3.70786452, -0.04719532,  1.47909045,  1.78790605,
          0.45923698,  2.22837877,  3.51095819,  2.98865652]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.04719531536102295
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.39860439300537
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.39856457710266
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.39854049682617
Verifying property 2 with 1 instances.
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.04719532]], device='cuda:0') need to verify.
Model prediction is: tensor([-31.65295219, -33.94409180, -28.85086060, -30.75596046, -28.29216385,
        -31.03287697, -30.00209618, -31.63583946, -33.67806244, -33.19049835],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.04719532]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1084
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 554
Node /39 input 0: size torch.Size([250]) unstable 24
-----------------
# of unstable neurons: 1662
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 9.822845458984375e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.047158777713775635
10 lb beta sum: 0.0, worst -0.047158241271972656
Time: prepare 0.0002    bound 0.1210    transfer 0.0001    finalize 0.0002    func 0.1216    
Accumulated time: func 0.1216    prepare 0.0002    bound 0.1210    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 111] 
split level 1: [/input-16, 58] 
split level 2: [/input-16, 185] 
split level 3: [/input-16, 195] 
split level 4: [/input-12, 802] 
split level 5: [/input-16, 23] 
split level 6: [/input-12, 3364] 
split level 7: [/input-16, 165] 
split level 8: [/input-16, 65] 
split level 9: [/input-16, 235] 
split level 10: [/input-12, 818] 
split level 11: [/input-16, 140] 
split level 12: [/input-16, 160] 
split level 13: [/input-12, 6476] 
split level 14: [/input-12, 4372] 
split level 15: [/input-12, 1245] 
split level 16: [/input-12, 5276] 
split level 17: [/input-12, 7003] 
split level 18: [/input-12, 3368] 
split level 19: [/input-12, 1692] 
split level 20: [/input-12, 7730] 
split level 21: [/input-12, 787] 
split level 22: [/input-12, 5555] 
split level 23: [/input-16, 103] 
split level 24: [/input-12, 6986] 
split level 25: [/input-12, 2470] 
split level 26: [/input-12, 2379] 
split level 27: [/input-12, 3881] 
split level 28: [/input-12, 7786] 
split level 29: [/input-12, 6483] 
split level 30: [/input-12, 3873] 
split level 31: [/input-12, 606] 
split level 32: [/input-12, 805] 
split level 33: [/input-12, 6872] 
split level 34: [/input-16, 18] 
split level 35: [/input-12, 1994] 
split level 36: [/input-16, 132] 
split level 37: [/input-12, 2492] 
split level 38: [/input-12, 3309] 
split level 39: [/input-12, 6806] 
split level 40: [/input-12, 6733] 
split level 41: [/input-16, 239] 
split level 42: [/input-12, 603] 
split level 43: [/input-12, 1028] 
split level 44: [/input-12, 2316] 
split level 45: [/input-12, 6502] 
split level 46: [/input-12, 3882] 
split level 47: [/input-12, 6510] 
split level 48: [/input-12, 1227] 
split level 49: [/input-12, 2588] 
split level 50: [/input-12, 596] 
split level 51: [/input-12, 3817] 
split level 52: [/input-12, 3371] 
split level 53: [/input-12, 1734] 
split level 54: [/input-12, 1379] 
split level 55: [/input-12, 972] 
split level 56: [/input-12, 6996] 
split level 57: [/input-12, 7948] 
split level 58: [/input-12, 7189] 
split level 59: [/input-12, 6468] 
split level 60: [/input-12, 2526] 
split level 61: [/input-12, 1429] 
split level 62: [/input-4, 3939] 
split level 63: [/input-12, 249] 
split level 64: [/input-12, 2572] 
split level 65: [/input-12, 2371] 
split level 66: [/input-12, 1972] 
split level 67: [/input-12, 1568] 
split level 68: [/input-12, 1444] 
split level 69: [/input-12, 5028] 
split level 70: [/input-12, 630] 
split level 71: [/input-12, 2326] 
split level 72: [/input-12, 1436] 
split level 73: [/input-12, 637] 
split level 74: [/input-12, 73] 
split level 75: [/input-12, 3486] 
split level 76: [/input-12, 1046] 
split level 77: [/input-4, 5028] 
split level 78: [/input-12, 1219] 
split level 79: [/input-12, 4357] 
split level 80: [/input-12, 7651] 
split level 81: [/input-12, 2893] 
split level 82: [/input-12, 7843] 
split level 83: [/input-12, 2445] 
split level 84: [/input-12, 4187] 
split level 85: [/input-4, 4533] 
split level 86: [/input-12, 3808] 
split level 87: [/input-4, 8090] 
split level 88: [/input-12, 1054] 
split level 89: [/input-12, 5538] 
split level 90: [/input-12, 4378] 
split level 91: [/input-12, 3916] 
split level 92: [/input-4, 6595] 
split level 93: [/input-12, 5796] 
split level 94: [/input-12, 7451] 
split level 95: [/input-12, 2453] 
split level 96: [/input-12, 6508] 
split level 97: [/input-12, 3339] 
split level 98: [/input-4, 1716] 
split level 99: [/input-12, 4122] 
split level 100: [/input-4, 5029] 
split level 101: [/input-12, 587] 
split level 102: [/input-4, 4275] 
split level 103: [/input-4, 5813] 
split level 104: [/input-4, 1698] 
split level 105: [/input-12, 3427] 
split level 106: [/input-12, 2466] 
split level 107: [/input-12, 3934] 
split level 108: [/input-4, 4504] 
split level 109: [/input-4, 3675] 
split level 110: [/input-4, 4295] 
split level 111: [/input-12, 7204] 
split level 112: [/input-12, 5689] 
split level 113: [/input-12, 3332] 
split level 114: [/input-4, 8041] 
split level 115: [/input-4, 2757] 
split level 116: [/input-12, 1445] 
split level 117: [/input-4, 5012] 
split level 118: [/input-4, 7828] 
split level 119: [/input-12, 6487] 
split level 120: [/input-12, 7120] 
split level 121: [/input-12, 5665] 
split level 122: [/input-4, 5800] 
split level 123: [/input-12, 5380] 
split level 124: [/input-12, 6475] 
split level 125: [/input-12, 6726] 
split level 126: [/input-12, 5381] 
split level 127: [/input-12, 3612] 
split level 128: [/input-4, 3098] 
split level 129: [/input-12, 6473] 
split level 130: [/input-12, 5664] 
split level 131: [/input-4, 3937] 
split level 132: [/input-4, 7655] 
split level 133: [/input-12, 5372] 
split level 134: [/input-4, 4262] 
split level 135: [/input-4, 2705] 
split level 136: [/input-4, 6712] 
split level 137: [/input-12, 4875] 
split level 138: [/input-4, 2230] 
split level 139: [/input-4, 6568] 
split level 140: [/input-12, 517] 
split level 141: [/input-4, 4902] 
split level 142: [/input-12, 7608] 
split level 143: [/input-12, 8176] 
split level 144: [/input-4, 3303] 
split level 145: [/input-12, 2484] 
split level 146: [/input-4, 6825] 
split level 147: [/input-12, 7657] 
split level 148: [/input-4, 8182] 
split level 149: [/input-4, 4841] 
split level 150: [/input-4, 3101] 
split level 151: [/input-12, 1773] 
split level 152: [/input-12, 3301] 
split level 153: [/input-4, 2263] 
split level 154: [/input-12, 635] 
split level 155: [/input-12, 634] 
split level 156: [/input-12, 5678] 
split level 157: [/input-12, 1453] 
split level 158: [/input-4, 2708] 
split level 159: [/input-4, 5098] 
split level 160: [/input-12, 623] 
split level 161: [/input-12, 4177] 
split level 162: [/input-4, 3724] 
split level 163: [/input-4, 4294] 
split level 164: [/input-12, 1451] 
split level 165: [/input-4, 4506] 
split level 166: [/input-4, 4497] 
split level 167: [/input-4, 4825] 
split level 168: [/input-12, 5684] 
split level 169: [/input-12, 5047] 
split level 170: [/input-4, 6769] 
split level 171: [/input-4, 4483] 
split level 172: [/input-4, 6713] 
split level 173: [/input-12, 798] 
split level 174: [/input-4, 4548] 
split level 175: [/input-4, 6513] 
split level 176: [/input-12, 6492] 
split level 177: [/input-4, 4470] 
split level 178: [/input-4, 4512] 
split level 179: [/input-12, 3922] 
split level 180: [/input-12, 2519] 
split level 181: [/input-12, 548] 
split level 182: [/input-12, 1783] 
split level 183: [/input-4, 8148] 
split level 184: [/input-4, 3016] 
split level 185: [/input-12, 5679] 
split level 186: [/input-12, 3146] 
split level 187: [/input-4, 7104] 
split level 188: [/input-12, 5683] 
split level 189: [/input-12, 4398] 
split level 190: [/input-4, 4919] 
split level 191: [/input-4, 2585] 
split level 192: [/input-12, 1183] 
split level 193: [/input-4, 3609] 
split level 194: [/input-12, 4581] 
split level 195: [/input-4, 4521] 
split level 196: [/input-12, 2022] 
split level 197: [/input-4, 8076] 
split level 198: [/input-4, 7364] 
split level 199: [/input-4, 4247] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04704684019088745
10 lb beta sum: 0.0, worst -0.047047972679138184
Time: prepare 0.0115    bound 0.1330    transfer 0.0016    finalize 0.0068    func 0.1556    
Accumulated time: func 0.2771    prepare 0.0215    bound 0.2540    transfer 0.0017    finalize 0.0071    
all_split False
======================Cut inference begins======================
max lb tensor(0.03058672) min lb tensor(-0.04704422)
Number of Verified Splits: 6 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.010590076446533203 
BICCOS Cumulative time: 0.010590076446533203
Preprocessing time: 0.00999307632446289 Inference time: 0.0002484321594238281 Add cuts time: 9.083747863769531e-05 Cut analysis time: 0.00025773048400878906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04080 (1), -0.04048 (1), -0.04048 (1), -0.03975 (1), -0.03969 (1), -0.03953 (1), -0.03928 (1), -0.03906 (1), -0.03901 (1), -0.03897 (1), -0.03892 (1), -0.03890 (1), -0.03871 (1), -0.03869 (1), -0.03861 (1), -0.03845 (1), -0.03834 (1), -0.03811 (1), -0.03777 (1), -0.03764 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7636    set_bounds 0.0105    solve 0.1557    add 0.0775    
Accumulated time: pickout 0.0003    decision 0.7636    set_bounds 0.0105    solve 0.1557    add 0.0775    
Current (lb-rhs): -0.04079639911651611
50 domains visited
Cumulative time: 1.1507189273834229

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 58] [/input-16, 111] [/input-16, 111] [/input-16, 111] [/input-16, 111] [/input-16, 111] [/input-16, 111] [/input-16, 111] [/input-16, 111] [/input-16, 111] 
split level 1: [/input-16, 185] [/input-16, 185] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] [/input-16, 58] 
split level 2: [/input-16, 195] [/input-16, 195] [/input-16, 185] [/input-16, 195] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] [/input-16, 185] 
split level 3: [/input-16, 23] [/input-16, 23] [/input-16, 23] [/input-16, 23] [/input-16, 23] [/input-16, 23] [/input-16, 23] [/input-16, 23] [/input-16, 23] [/input-16, 23] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.034731268882751465

all verified at 6th iter
Time: prepare 0.0071    bound 0.0606    transfer 0.0015    finalize 0.0051    func 0.0769    
Accumulated time: func 0.3541    prepare 0.0288    bound 0.3146    transfer 0.0032    finalize 0.0122    
all_split False
======================Cut inference begins======================
max lb tensor(0.14012396) min lb tensor(0.00043899)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.03484177589416504 
BICCOS Cumulative time: 0.04543185234069824
Preprocessing time: 0.011779308319091797 Inference time: 0.015108823776245117 Add cuts time: 0.007780313491821289 Cut analysis time: 0.00017333030700683594
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0008    decision 0.0248    set_bounds 0.0121    solve 0.0770    add 0.0152    
Accumulated time: pickout 0.0011    decision 0.7884    set_bounds 0.0226    solve 0.2327    add 0.0927    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 58, 111]), tensor([-1., -1.]), tensor([0, 0]), tensor([7.64503130e+11, 5.96728772e-02]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 58, 111]), tensor([-1.,  1.]), tensor([0, 0]), tensor([7.64503130e+11, 3.76087278e-02]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 58, 111]), tensor([ 1., -1.]), tensor([0, 0]), tensor([1.21488200e+06, 6.08629435e-02]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 58, 111]), tensor([1., 1.]), tensor([0, 0]), tensor([1.21488200e+06, 3.72814387e-02]), tensor([0, 1]))}
Shallow branching resets to n domains:  4
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.004645705223083496

all verified at 0th iter
Time: prepare 0.0003    bound 0.0058    transfer 0.0001    finalize 0.0003    func 0.0066    
Accumulated time: func 0.3607    prepare 0.0291    bound 0.3204    transfer 0.0034    finalize 0.0125    
After pruning, left:  0

Back to Regular BaB


Properties batch 3, size 1
Remaining timeout: 196.89985251426697
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 196.8997838497162
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 196.89976024627686
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 196.89952039718628
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 196.89949488639832
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 196.89947485923767
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 3.1006 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 190, vnnlib ID: 190 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-53.32640839, -57.76589966, -57.09415054, -58.50868607, -56.85153961,
         -59.12226486, -59.23254395, -58.43048096, -51.54996109, -56.12363434]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1522]; unstable size 1522; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 81, 1, 1522] with unstable size 80 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 28, 1, 1522] with unstable size 27 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1522] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [529]; unstable size 529; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 28, 1, 529] with unstable size 27 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 529] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [27]; unstable size 27; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.70284355, 4.07356167, 3.91489768, 5.50351381, 3.66981363, 6.04646826,
         5.77563334, 4.92291689, 2.85733557]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0393 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 191, vnnlib ID: 191 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-40.68238068, -41.56087494, -36.14243317, -34.64450073, -35.70293045,
         -34.74253082, -36.78990936, -38.21681976, -41.10226059, -41.30316162]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1435]; unstable size 1435; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 84, 1, 1435] with unstable size 83 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 39, 1, 1435] with unstable size 38 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1435] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [686]; unstable size 686; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 39, 1, 686] with unstable size 38 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 686] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [38]; unstable size 38; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 38] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.93204165,  4.71720409,  0.36837864, -0.17784309, -0.07222223,
          0.75071549,  1.58569312,  4.12592363,  4.33643389]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-40.68238068, -41.56087494, -36.14243317, -34.64450073, -35.70293045,
         -34.74253082, -36.78990936, -38.21681976, -41.10226059, -41.30316162]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.19it/s]100%|██████████| 1/1 [00:00<00:00,  8.19it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-41.25749588, -42.30479431, -36.77624512, -35.20821762, -36.28781509,
          -35.23068619, -37.56385040, -38.63885117, -41.80878067, -42.01559448],
         [-41.25749588, -42.30479431, -36.77624512, -35.20821762, -36.28781509,
          -35.23068619, -37.56385040, -38.63885117, -41.80878067, -42.01559448]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.07959747, 0.02246857]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1249 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 20.223628997802734
alpha/beta optimization time: 1.4346022605895996
initial alpha-crown bounds: tensor([[ 4.02036953,  4.80985022,  0.42501283, -0.12095499, -0.06459968,
          0.79801512,  1.67962503,  4.23890162,  4.43740892]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.12095499038696289
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.40046858787537
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.4004304409027
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.40040612220764
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.40038418769836
Verifying property 3 with 1 instances.
##### Instance 191 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.12095499]], device='cuda:0') need to verify.
Model prediction is: tensor([-40.68238068, -41.56087494, -36.14243317, -34.64450073, -35.70293045,
        -34.74253082, -36.78990936, -38.21681976, -41.10226059, -41.30316162],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.12095499]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1435
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 675
Node /39 input 0: size torch.Size([250]) unstable 35
-----------------
# of unstable neurons: 2145
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 9.751319885253906e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12090849876403809
10 lb beta sum: 0.0, worst -0.1209111213684082
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0738    transfer 0.0001    finalize 0.0002    func 0.0743    
Accumulated time: func 0.0743    prepare 0.0002    bound 0.0738    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 230] 
split level 1: [/input-16, 64] 
split level 2: [/input-16, 145] 
split level 3: [/input-16, 138] 
split level 4: [/input-16, 110] 
split level 5: [/input-16, 182] 
split level 6: [/input-16, 8] 
split level 7: [/input-16, 95] 
split level 8: [/input-16, 225] 
split level 9: [/input-16, 211] 
split level 10: [/input-16, 31] 
split level 11: [/input-16, 186] 
split level 12: [/input-16, 73] 
split level 13: [/input-16, 190] 
split level 14: [/input-16, 180] 
split level 15: [/input-16, 84] 
split level 16: [/input-16, 7] 
split level 17: [/input-16, 247] 
split level 18: [/input-12, 2915] 
split level 19: [/input-12, 2580] 
split level 20: [/input-12, 2596] 
split level 21: [/input-12, 2442] 
split level 22: [/input-12, 5171] 
split level 23: [/input-12, 3341] 
split level 24: [/input-16, 154] 
split level 25: [/input-16, 99] 
split level 26: [/input-12, 2595] 
split level 27: [/input-12, 1569] 
split level 28: [/input-12, 2586] 
split level 29: [/input-12, 780] 
split level 30: [/input-12, 7001] 
split level 31: [/input-12, 1572] 
split level 32: [/input-12, 349] 
split level 33: [/input-12, 1565] 
split level 34: [/input-12, 6418] 
split level 35: [/input-12, 3347] 
split level 36: [/input-12, 5531] 
split level 37: [/input-12, 1566] 
split level 38: [/input-12, 5653] 
split level 39: [/input-12, 340] 
split level 40: [/input-12, 7835] 
split level 41: [/input-12, 8036] 
split level 42: [/input-12, 2589] 
split level 43: [/input-12, 3602] 
split level 44: [/input-12, 6427] 
split level 45: [/input-12, 2459] 
split level 46: [/input-12, 7894] 
split level 47: [/input-12, 2593] 
split level 48: [/input-12, 3593] 
split level 49: [/input-12, 6251] 
split level 50: [/input-12, 7148] 
split level 51: [/input-12, 7000] 
split level 52: [/input-12, 1574] 
split level 53: [/input-12, 5798] 
split level 54: [/input-12, 2602] 
split level 55: [/input-12, 6242] 
split level 56: [/input-12, 2522] 
split level 57: [/input-12, 8024] 
split level 58: [/input-12, 2450] 
split level 59: [/input-12, 3349] 
split level 60: [/input-12, 2458] 
split level 61: [/input-12, 5643] 
split level 62: [/input-12, 5176] 
split level 63: [/input-12, 4579] 
split level 64: [/input-12, 4892] 
split level 65: [/input-12, 7904] 
split level 66: [/input-12, 5122] 
split level 67: [/input-12, 410] 
split level 68: [/input-12, 2578] 
split level 69: [/input-12, 1198] 
split level 70: [/input-12, 6244] 
split level 71: [/input-12, 8037] 
split level 72: [/input-12, 3620] 
split level 73: [/input-12, 4387] 
split level 74: [/input-12, 2601] 
split level 75: [/input-12, 7843] 
split level 76: [/input-12, 8025] 
split level 77: [/input-12, 5678] 
split level 78: [/input-12, 5163] 
split level 79: [/input-12, 6250] 
split level 80: [/input-4, 1609] 
split level 81: [/input-12, 2603] 
split level 82: [/input-12, 5790] 
split level 83: [/input-12, 4587] 
split level 84: [/input-12, 339] 
split level 85: [/input-12, 5654] 
split level 86: [/input-4, 8077] 
split level 87: [/input-12, 7523] 
split level 88: [/input-12, 2449] 
split level 89: [/input-12, 4572] 
split level 90: [/input-12, 6253] 
split level 91: [/input-4, 4296] 
split level 92: [/input-12, 5639] 
split level 93: [/input-12, 5686] 
split level 94: [/input-12, 7640] 
split level 95: [/input-12, 5177] 
split level 96: [/input-12, 747] 
split level 97: [/input-12, 7910] 
split level 98: [/input-12, 794] 
split level 99: [/input-12, 4584] 
split level 100: [/input-12, 2600] 
split level 101: [/input-4, 4440] 
split level 102: [/input-12, 5538] 
split level 103: [/input-12, 2524] 
split level 104: [/input-4, 3107] 
split level 105: [/input-4, 3075] 
split level 106: [/input-12, 323] 
split level 107: [/input-12, 6234] 
split level 108: [/input-12, 2582] 
split level 109: [/input-12, 2576] 
split level 110: [/input-12, 5149] 
split level 111: [/input-12, 802] 
split level 112: [/input-4, 1607] 
split level 113: [/input-12, 1584] 
split level 114: [/input-4, 5339] 
split level 115: [/input-4, 4409] 
split level 116: [/input-4, 6536] 
split level 117: [/input-12, 786] 
split level 118: [/input-12, 7531] 
split level 119: [/input-4, 4334] 
split level 120: [/input-4, 4313] 
split level 121: [/input-4, 4312] 
split level 122: [/input-4, 344] 
split level 123: [/input-12, 7919] 
split level 124: [/input-4, 7805] 
split level 125: [/input-12, 4590] 
split level 126: [/input-12, 7197] 
split level 127: [/input-4, 4299] 
split level 128: [/input-12, 4909] 
split level 129: [/input-12, 2598] 
split level 130: [/input-12, 2020] 
split level 131: [/input-4, 5755] 
split level 132: [/input-12, 5781] 
split level 133: [/input-4, 7820] 
split level 134: [/input-12, 2469] 
split level 135: [/input-4, 1561] 
split level 136: [/input-12, 3950] 
split level 137: [/input-12, 2460] 
split level 138: [/input-12, 5138] 
split level 139: [/input-4, 4317] 
split level 140: [/input-4, 4627] 
split level 141: [/input-12, 4879] 
split level 142: [/input-4, 4988] 
split level 143: [/input-4, 4298] 
split level 144: [/input-12, 5647] 
split level 145: [/input-4, 4131] 
split level 146: [/input-4, 5756] 
split level 147: [/input-12, 5773] 
split level 148: [/input-4, 2146] 
split level 149: [/input-4, 4138] 
split level 150: [/input-4, 1623] 
split level 151: [/input-12, 3958] 
split level 152: [/input-12, 345] 
split level 153: [/input-12, 5175] 
split level 154: [/input-4, 2699] 
split level 155: [/input-4, 6778] 
split level 156: [/input-4, 1659] 
split level 157: [/input-4, 2852] 
split level 158: [/input-12, 1433] 
split level 159: [/input-4, 4122] 
split level 160: [/input-4, 6521] 
split level 161: [/input-12, 5146] 
split level 162: [/input-12, 1997] 
split level 163: [/input-12, 419] 
split level 164: [/input-12, 3370] 
split level 165: [/input-12, 5366] 
split level 166: [/input-12, 3121] 
split level 167: [/input-4, 1592] 
split level 168: [/input-4, 4281] 
split level 169: [/input-12, 3957] 
split level 170: [/input-4, 4475] 
split level 171: [/input-12, 3363] 
split level 172: [/input-12, 5260] 
split level 173: [/input-4, 8044] 
split level 174: [/input-12, 2590] 
split level 175: [/input-12, 7670] 
split level 176: [/input-12, 7825] 
split level 177: [/input-12, 6515] 
split level 178: [/input-4, 6779] 
split level 179: [/input-4, 4323] 
split level 180: [/input-12, 5130] 
split level 181: [/input-12, 2476] 
split level 182: [/input-4, 2667] 
split level 183: [/input-4, 2187] 
split level 184: [/input-4, 2154] 
split level 185: [/input-12, 796] 
split level 186: [/input-4, 8027] 
split level 187: [/input-12, 5148] 
split level 188: [/input-4, 4990] 
split level 189: [/input-12, 358] 
split level 190: [/input-4, 2171] 
split level 191: [/input-12, 5157] 
split level 192: [/input-4, 3233] 
split level 193: [/input-4, 4300] 
split level 194: [/input-12, 2608] 
split level 195: [/input-4, 4121] 
split level 196: [/input-4, 4774] 
split level 197: [/input-4, 4240] 
split level 198: [/input-4, 7787] 
split level 199: [/input-4, 4297] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12070584297180176
10 lb beta sum: 0.0, worst -0.12070369720458984
Time: prepare 0.0115    bound 0.1326    transfer 0.0024    finalize 0.0083    func 0.1575    
Accumulated time: func 0.2319    prepare 0.0215    bound 0.2064    transfer 0.0026    finalize 0.0086    
all_split False
======================Cut inference begins======================
max lb tensor(0.21404195) min lb tensor(-0.12070227)
Number of Verified Splits: 7 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 7
#cuts >= 20: 0
BICCOS time: 0.010623931884765625 
BICCOS Cumulative time: 0.010623931884765625
Preprocessing time: 0.009935140609741211 Inference time: 0.000293731689453125 Add cuts time: 0.00013065338134765625 Cut analysis time: 0.0002644062042236328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11064 (1), -0.11061 (1), -0.11041 (1), -0.10979 (1), -0.10974 (1), -0.10913 (1), -0.10843 (1), -0.10807 (1), -0.10796 (1), -0.10784 (1), -0.10747 (1), -0.10731 (1), -0.10730 (1), -0.10695 (1), -0.10621 (1), -0.10575 (1), -0.10565 (1), -0.10562 (1), -0.10557 (1), -0.10502 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7630    set_bounds 0.0091    solve 0.1576    add 0.1170    
Accumulated time: pickout 0.0003    decision 0.7630    set_bounds 0.0091    solve 0.1576    add 0.1170    
Current (lb-rhs): -0.1106410026550293
50 domains visited
Cumulative time: 1.1393303871154785

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 64] 
split level 1: [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 145] [/input-16, 145] 
split level 2: [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 145] [/input-16, 138] [/input-16, 138] 
split level 3: [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 95] [/input-16, 138] [/input-16, 95] [/input-16, 95] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10714077949523926

all verified at 4th iter
Time: prepare 0.0067    bound 0.0388    transfer 0.0016    finalize 0.0052    func 0.0549    
Accumulated time: func 0.2867    prepare 0.0284    bound 0.2451    transfer 0.0042    finalize 0.0138    
all_split False
======================Cut inference begins======================
max lb tensor(0.16431344) min lb tensor(0.00373149)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.0352323055267334 
BICCOS Cumulative time: 0.04585623741149902
Preprocessing time: 0.011769771575927734 Inference time: 0.015854358673095703 Add cuts time: 0.00743412971496582 Cut analysis time: 0.00017404556274414062
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0010    decision 0.0248    set_bounds 0.0132    solve 0.0549    add 0.0150    
Accumulated time: pickout 0.0013    decision 0.7878    set_bounds 0.0224    solve 0.2126    add 0.1320    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([138, 230]), tensor([-1., -1.]), tensor([0, 0]), tensor([-1.26703658e+34,  1.92452714e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([138, 230]), tensor([-1.,  1.]), tensor([0, 0]), tensor([-1.26703658e+34,  5.99074811e-02]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([138, 230]), tensor([ 1., -1.]), tensor([0, 0]), tensor([2.26673584e+02, 1.88275144e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([138, 230]), tensor([1., 1.]), tensor([0, 0]), tensor([2.26673584e+02, 6.28750771e-02]), tensor([0, 1]))}
Shallow branching resets to n domains:  4
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.013095378875732422

all verified at 0th iter
Time: prepare 0.0003    bound 0.0058    transfer 0.0001    finalize 0.0003    func 0.0066    
Accumulated time: func 0.2933    prepare 0.0288    bound 0.2509    transfer 0.0043    finalize 0.0140    
After pruning, left:  0

Back to Regular BaB


Properties batch 4, size 1
Remaining timeout: 196.95696139335632
Verifying property 4 with 1 instances.
##### Instance 191 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.06459968]], device='cuda:0') need to verify.
Model prediction is: tensor([-40.68238068, -41.56087494, -36.14243317, -34.64450073, -35.70293045,
        -34.74253082, -36.78990936, -38.21681976, -41.10226059, -41.30316162],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.06459968]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1435
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 675
Node /39 input 0: size torch.Size([250]) unstable 35
-----------------
# of unstable neurons: 2145
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 9.703636169433594e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06459392607212067
10 lb beta sum: 0.0, worst -0.06459453701972961
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0724    transfer 0.0001    finalize 0.0002    func 0.0730    
Accumulated time: func 0.0730    prepare 0.0002    bound 0.0724    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 212] 
split level 1: [/input-16, 110] 
split level 2: [/input-16, 225] 
split level 3: [/input-16, 171] 
split level 4: [/input-16, 154] 
split level 5: [/input-12, 7316] 
split level 6: [/input-16, 31] 
split level 7: [/input-16, 7] 
split level 8: [/input-16, 84] 
split level 9: [/input-12, 7683] 
split level 10: [/input-12, 7315] 
split level 11: [/input-16, 64] 
split level 12: [/input-16, 230] 
split level 13: [/input-16, 18] 
split level 14: [/input-12, 7635] 
split level 15: [/input-12, 7955] 
split level 16: [/input-16, 73] 
split level 17: [/input-16, 5] 
split level 18: [/input-12, 5195] 
split level 19: [/input-16, 24] 
split level 20: [/input-12, 7963] 
split level 21: [/input-16, 188] 
split level 22: [/input-12, 4421] 
split level 23: [/input-4, 854] 
split level 24: [/input-12, 7301] 
split level 25: [/input-12, 5196] 
split level 26: [/input-12, 3189] 
split level 27: [/input-12, 349] 
split level 28: [/input-12, 6794] 
split level 29: [/input-12, 7962] 
split level 30: [/input-12, 1227] 
split level 31: [/input-12, 7972] 
split level 32: [/input-12, 7572] 
split level 33: [/input-12, 340] 
split level 34: [/input-12, 8019] 
split level 35: [/input-12, 7948] 
split level 36: [/input-12, 7188] 
split level 37: [/input-12, 5197] 
split level 38: [/input-12, 5227] 
split level 39: [/input-12, 7629] 
split level 40: [/input-12, 2437] 
split level 41: [/input-12, 862] 
split level 42: [/input-12, 4357] 
split level 43: [/input-12, 861] 
split level 44: [/input-4, 6438] 
split level 45: [/input-12, 4108] 
split level 46: [/input-4, 5145] 
split level 47: [/input-12, 2571] 
split level 48: [/input-16, 99] 
split level 49: [/input-12, 7338] 
split level 50: [/input-12, 2596] 
split level 51: [/input-12, 7171] 
split level 52: [/input-12, 6741] 
split level 53: [/input-12, 5220] 
split level 54: [/input-12, 6470] 
split level 55: [/input-12, 2020] 
split level 56: [/input-12, 2589] 
split level 57: [/input-12, 2595] 
split level 58: [/input-12, 5194] 
split level 59: [/input-4, 36] 
split level 60: [/input-12, 7970] 
split level 61: [/input-12, 1842] 
split level 62: [/input-12, 786] 
split level 63: [/input-12, 2339] 
split level 64: [/input-12, 6857] 
split level 65: [/input-16, 95] 
split level 66: [/input-4, 2121] 
split level 67: [/input-12, 6721] 
split level 68: [/input-12, 7347] 
split level 69: [/input-16, 211] 
split level 70: [/input-12, 6174] 
split level 71: [/input-12, 8020] 
split level 72: [/input-12, 7653] 
split level 73: [/input-12, 5531] 
split level 74: [/input-4, 4899] 
split level 75: [/input-12, 4364] 
split level 76: [/input-12, 1389] 
split level 77: [/input-12, 5218] 
split level 78: [/input-12, 4892] 
split level 79: [/input-4, 53] 
split level 80: [/input-12, 5790] 
split level 81: [/input-12, 7961] 
split level 82: [/input-12, 3593] 
split level 83: [/input-12, 1219] 
split level 84: [/input-12, 5538] 
split level 85: [/input-12, 6476] 
split level 86: [/input-12, 2522] 
split level 87: [/input-12, 5521] 
split level 88: [/input-4, 1384] 
split level 89: [/input-4, 4388] 
split level 90: [/input-12, 5260] 
split level 91: [/input-12, 4369] 
split level 92: [/input-12, 4362] 
split level 93: [/input-4, 39] 
split level 94: [/input-12, 2453] 
split level 95: [/input-12, 3483] 
split level 96: [/input-12, 6728] 
split level 97: [/input-12, 4361] 
split level 98: [/input-12, 4438] 
split level 99: [/input-12, 4461] 
split level 100: [/input-12, 5781] 
split level 101: [/input-12, 3492] 
split level 102: [/input-12, 5122] 
split level 103: [/input-12, 1537] 
split level 104: [/input-12, 628] 
split level 105: [/input-12, 339] 
split level 106: [/input-12, 7170] 
split level 107: [/input-4, 6233] 
split level 108: [/input-12, 7302] 
split level 109: [/input-12, 1191] 
split level 110: [/input-12, 7194] 
split level 111: [/input-4, 1588] 
split level 112: [/input-12, 6253] 
split level 113: [/input-4, 2376] 
split level 114: [/input-12, 5803] 
split level 115: [/input-12, 2897] 
split level 116: [/input-12, 470] 
split level 117: [/input-4, 5667] 
split level 118: [/input-12, 4437] 
split level 119: [/input-12, 1666] 
split level 120: [/input-4, 4358] 
split level 121: [/input-12, 2420] 
split level 122: [/input-4, 5480] 
split level 123: [/input-4, 5701] 
split level 124: [/input-12, 6515] 
split level 125: [/input-12, 7630] 
split level 126: [/input-12, 1809] 
split level 127: [/input-12, 5171] 
split level 128: [/input-12, 1199] 
split level 129: [/input-12, 984] 
split level 130: [/input-4, 6536] 
split level 131: [/input-12, 827] 
split level 132: [/input-4, 5685] 
split level 133: [/input-12, 4393] 
split level 134: [/input-4, 5461] 
split level 135: [/input-4, 1555] 
split level 136: [/input-12, 4401] 
split level 137: [/input-4, 6759] 
split level 138: [/input-12, 2347] 
split level 139: [/input-12, 2346] 
split level 140: [/input-12, 1565] 
split level 141: [/input-4, 5731] 
split level 142: [/input-4, 2378] 
split level 143: [/input-4, 2599] 
split level 144: [/input-4, 2391] 
split level 145: [/input-12, 4781] 
split level 146: [/input-12, 4158] 
split level 147: [/input-12, 7597] 
split level 148: [/input-12, 2590] 
split level 149: [/input-4, 1113] 
split level 150: [/input-12, 6244] 
split level 151: [/input-12, 2601] 
split level 152: [/input-12, 2598] 
split level 153: [/input-12, 2603] 
split level 154: [/input-4, 6725] 
split level 155: [/input-4, 22] 
split level 156: [/input-4, 5123] 
split level 157: [/input-4, 5465] 
split level 158: [/input-12, 716] 
split level 159: [/input-4, 5464] 
split level 160: [/input-4, 8051] 
split level 161: [/input-12, 5177] 
split level 162: [/input-12, 5176] 
split level 163: [/input-12, 6813] 
split level 164: [/input-4, 2072] 
split level 165: [/input-12, 4394] 
split level 166: [/input-12, 4463] 
split level 167: [/input-4, 309] 
split level 168: [/input-4, 5000] 
split level 169: [/input-12, 6772] 
split level 170: [/input-12, 6251] 
split level 171: [/input-12, 2602] 
split level 172: [/input-12, 7197] 
split level 173: [/input-4, 5748] 
split level 174: [/input-4, 2120] 
split level 175: [/input-4, 4404] 
split level 176: [/input-12, 1841] 
split level 177: [/input-12, 345] 
split level 178: [/input-4, 3674] 
split level 179: [/input-12, 3488] 
split level 180: [/input-12, 3789] 
split level 181: [/input-12, 4742] 
split level 182: [/input-4, 4113] 
split level 183: [/input-12, 6242] 
split level 184: [/input-4, 5416] 
split level 185: [/input-4, 2392] 
split level 186: [/input-4, 6963] 
split level 187: [/input-4, 25] 
split level 188: [/input-4, 6758] 
split level 189: [/input-12, 6764] 
split level 190: [/input-12, 6250] 
split level 191: [/input-4, 4422] 
split level 192: [/input-4, 8052] 
split level 193: [/input-4, 4313] 
split level 194: [/input-4, 4106] 
split level 195: [/input-4, 2074] 
split level 196: [/input-12, 1996] 
split level 197: [/input-4, 2394] 
split level 198: [/input-4, 4300] 
split level 199: [/input-4, 2379] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06459426879882812
10 lb beta sum: 0.0, worst -0.06459425389766693
Time: prepare 0.0116    bound 0.1322    transfer 0.0016    finalize 0.0058    func 0.1538    
Accumulated time: func 0.2268    prepare 0.0214    bound 0.2047    transfer 0.0017    finalize 0.0060    
all_split False
======================Cut inference begins======================
max lb tensor(0.00121489) min lb tensor(-0.06459388)
Number of Verified Splits: 1 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.010131359100341797 
BICCOS Cumulative time: 0.010131359100341797
Preprocessing time: 0.009836673736572266 Inference time: 6.890296936035156e-05 Add cuts time: 4.172325134277344e-05 Cut analysis time: 0.00018405914306640625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06222 (1), -0.06217 (1), -0.06213 (1), -0.06206 (1), -0.06201 (1), -0.06196 (1), -0.06196 (1), -0.06186 (1), -0.06174 (1), -0.06172 (1), -0.06169 (1), -0.06168 (1), -0.06153 (1), -0.06132 (1), -0.06125 (1), -0.06123 (1), -0.06105 (1), -0.06101 (1), -0.06090 (1), -0.06088 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7590    set_bounds 0.0090    solve 0.1539    add 0.0719    
Accumulated time: pickout 0.0003    decision 0.7590    set_bounds 0.0090    solve 0.1539    add 0.0719    
Current (lb-rhs): -0.06221500039100647
50 domains visited
Cumulative time: 1.0842716693878174

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 171] [/input-16, 212] [/input-16, 212] [/input-16, 212] [/input-16, 212] [/input-16, 212] [/input-16, 212] [/input-16, 212] [/input-16, 212] [/input-16, 212] 
split level 1: [/input-16, 154] [/input-16, 171] [/input-16, 171] [/input-16, 154] [/input-16, 171] [/input-16, 171] [/input-16, 171] [/input-16, 171] [/input-16, 171] [/input-16, 171] 
split level 2: [/input-16, 31] [/input-16, 7] [/input-16, 154] [/input-16, 31] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 31] [/input-16, 154] [/input-16, 154] 
split level 3: [/input-16, 7] [/input-12, 7315] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 7] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.059695273637771606
10 lb beta sum: 0.1943480521440506, worst -0.05936725437641144
Time: prepare 0.0072    bound 0.1508    transfer 0.0022    finalize 0.0055    func 0.1682    
Accumulated time: func 0.3950    prepare 0.0289    bound 0.3554    transfer 0.0039    finalize 0.0114    
all_split False
======================Cut inference begins======================
max lb tensor(0.05372354) min lb tensor(-0.05926758)
Number of Verified Splits: 22 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 20
#cuts >= 20: 0
BICCOS time: 0.013452291488647461 
BICCOS Cumulative time: 0.023583650588989258
Preprocessing time: 0.011658191680908203 Inference time: 0.0009093284606933594 Add cuts time: 0.0003170967102050781 Cut analysis time: 0.0005676746368408203
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02205 (2), -0.01087 (2), -0.01087 (2), -0.00955 (2), -0.00952 (2), -0.00952 (2), -0.00903 (2), -0.00830 (2), -0.00792 (2), -0.00789 (2), -0.00765 (2), -0.00732 (2), -0.00639 (2), -0.00513 (2), -0.00470 (2), -0.00441 (2), -0.00413 (2), -0.00380 (2), -0.00378 (2), -0.00343 (2), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0253    set_bounds 0.0137    solve 0.1683    add 0.0865    
Accumulated time: pickout 0.0010    decision 0.7843    set_bounds 0.0227    solve 0.3222    add 0.1584    
Current (lb-rhs): -0.022051095962524414
100 domains visited
Cumulative time: 1.3930175304412842

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 171] [/input-16, 171] [/input-16, 154] [/input-16, 171] [/input-16, 171] [/input-16, 171] [/input-16, 171] [/input-16, 171] [/input-16, 171] [/input-16, 171] 
split level 1: [/input-16, 154] [/input-16, 154] [/input-16, 31] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 154] 
split level 2: [/input-16, 31] [/input-16, 31] [/input-16, 7] [/input-16, 31] [/input-16, 31] [/input-16, 31] [/input-16, 31] [/input-16, 31] [/input-16, 31] [/input-16, 31] 
split level 3: [/input-16, 7] [/input-12, 7315] [/input-12, 7315] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-12, 7315] [/input-16, 7] [/input-12, 7315] [/input-16, 7] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.019701242446899414
10 lb beta sum: 0.1360350400209427, worst -0.04412941634654999
Time: prepare 0.0073    bound 0.1755    transfer 0.0017    finalize 0.0054    func 0.1931    
Accumulated time: func 0.5882    prepare 0.0364    bound 0.5309    transfer 0.0056    finalize 0.0169    
all_split False
======================Cut inference begins======================
max lb tensor(0.36052346) min lb tensor(-0.01599586)
Number of Verified Splits: 346 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 5
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.033728599548339844 
BICCOS Cumulative time: 0.0573122501373291
Preprocessing time: 0.011782407760620117 Inference time: 0.014511823654174805 Add cuts time: 0.007128238677978516 Cut analysis time: 0.00030612945556640625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01600 (3), -0.01330 (3), -0.01283 (3), -0.01281 (3), -0.01249 (3), -0.01164 (3), -0.00699 (3), -0.00606 (3), -0.00567 (3), -0.00565 (3), -0.00539 (3), -0.00531 (3), -0.00525 (3), -0.00511 (3), -0.00508 (3), -0.00504 (3), -0.00501 (3), -0.00485 (3), -0.00472 (3), -0.00471 (3), 
Length of domains: 45
Time: pickout 0.0007    decision 0.0250    set_bounds 0.0152    solve 0.1932    add 0.1148    
Accumulated time: pickout 0.0017    decision 0.8093    set_bounds 0.0379    solve 0.5154    add 0.2732    
Current (lb-rhs): -0.01599586009979248
145 domains visited
Cumulative time: 1.7758591175079346

Shallow-BaB round 4
batch: 45
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 212] [/input-16, 212] [/input-16, 212] [/input-16, 212] [/input-16, 171] [/input-16, 212] [/input-16, 212] [/input-16, 171] [/input-16, 212] [/input-16, 212] 
split level 1: [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 171] [/input-16, 171] 
split level 2: [/input-16, 7] [/input-16, 31] [/input-16, 31] [/input-16, 7] [/input-16, 31] [/input-16, 7] [/input-12, 7683] [/input-16, 31] [/input-16, 154] [/input-16, 154] 
split level 3: [/input-12, 7315] [/input-12, 7315] [/input-12, 7315] [/input-12, 7683] [/input-12, 7315] [/input-12, 7683] [/input-12, 7315] [/input-12, 7315] [/input-16, 31] [/input-16, 31] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.01755109429359436
10 lb beta sum: 0.40423843264579773, worst -0.041728436946868896
Time: prepare 0.0064    bound 0.1543    transfer 0.0022    finalize 0.0062    func 0.1715    
Accumulated time: func 0.7596    prepare 0.0431    bound 0.6852    transfer 0.0078    finalize 0.0231    
all_split False
======================Cut inference begins======================
max lb tensor(0.02181345) min lb tensor(-0.01441050)
Number of Verified Splits: 272 of 360
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 5
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.02778458595275879 
BICCOS Cumulative time: 0.08509683609008789
Preprocessing time: 0.010520458221435547 Inference time: 0.012703657150268555 Add cuts time: 0.0042684078216552734 Cut analysis time: 0.00029206275939941406
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01441 (4), -0.01302 (4), -0.01296 (4), -0.01281 (4), -0.01245 (4), -0.01239 (4), -0.01235 (4), -0.01210 (4), -0.01209 (4), -0.01208 (4), -0.01175 (4), -0.01156 (4), -0.01142 (4), -0.01073 (4), -0.01001 (4), -0.00984 (4), -0.00981 (4), -0.00972 (4), -0.00967 (4), -0.00950 (4), 
Length of domains: 38
Time: pickout 0.0007    decision 0.0243    set_bounds 0.0138    solve 0.1716    add 0.2241    
Accumulated time: pickout 0.0024    decision 0.8335    set_bounds 0.0517    solve 0.6870    add 0.4972    
Current (lb-rhs): -0.01441049575805664
183 domains visited
Cumulative time: 2.238356351852417

Shallow-BaB round 5
batch: 38
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 212] [/input-16, 212] [/input-16, 212] [/input-16, 212] [/input-16, 212] [/input-16, 212] [/input-16, 212] [/input-16, 212] [/input-16, 212] [/input-16, 212] 
split level 1: [/input-16, 110] [/input-16, 154] [/input-16, 31] [/input-16, 154] [/input-16, 154] [/input-16, 110] [/input-16, 110] [/input-16, 154] [/input-16, 154] [/input-16, 154] 
split level 2: [/input-16, 154] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-12, 7316] [/input-16, 154] [/input-12, 7316] [/input-12, 7316] [/input-12, 7316] [/input-12, 7316] 
split level 3: [/input-16, 31] [/input-12, 7315] [/input-12, 7315] [/input-12, 7315] [/input-12, 7315] [/input-12, 7316] [/input-16, 31] [/input-12, 7315] [/input-12, 7315] [/input-12, 7315] 
split level 4: [/input-12, 7315] [/input-12, 7963] [/input-12, 7963] [/input-12, 7963] [/input-12, 7963] [/input-12, 7315] [/input-12, 7315] [/input-12, 7963] [/input-12, 7963] [/input-12, 7963] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8287416696548462, worst -0.012868762016296387
10 lb beta sum: 1.0826541185379028, worst -0.03089207410812378
Time: prepare 0.0165    bound 0.1560    transfer 0.0017    finalize 0.0065    func 0.1831    
Accumulated time: func 0.9427    prepare 0.0599    bound 0.8412    transfer 0.0094    finalize 0.0296    
all_split False
======================Cut inference begins======================
max lb tensor(0.25212824) min lb tensor(-0.01163283)
Number of Verified Splits: 68 of 380
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 5
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.016733646392822266 
BICCOS Cumulative time: 0.10183048248291016
Preprocessing time: 0.010965824127197266 Inference time: 0.0035555362701416016 Add cuts time: 0.0017936229705810547 Cut analysis time: 0.00041866302490234375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00359 (5), -0.00359 (5), -0.00357 (5), -0.00357 (5), -0.00357 (5), -0.00356 (5), -0.00346 (5), -0.00344 (5), -0.00341 (5), -0.00339 (5), -0.00338 (5), -0.00337 (5), -0.00333 (5), -0.00332 (5), -0.00327 (5), -0.00320 (5), -0.00315 (5), -0.00311 (5), -0.00296 (5), -0.00291 (5), 
Length of domains: 50
Time: pickout 0.0007    decision 0.0285    set_bounds 0.0133    solve 0.1838    add 0.0985    
Accumulated time: pickout 0.0030    decision 0.8621    set_bounds 0.0650    solve 0.8708    add 0.5957    
Current (lb-rhs): -0.0035918354988098145
233 domains visited
Cumulative time: 2.5800600051879883

Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 64, 171]), tensor([-1., -1.]), tensor([0, 0]), tensor([-1.26703856e+34,  4.30278620e-03]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([7316], [-1.0], [0], [0.00035772056435234845], [3]), '/input-16': (tensor([ 64, 171,  31, 212]), tensor([-1.,  1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([-1.26703856e+34,  2.72816885e-02,  9.24213417e-03,  2.26289202e-02]), tensor([0, 1, 2, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([7316], [-1.0], [0], [0.00035772056435234845], [3]), '/input-16': (tensor([ 64, 171,  31, 212]), tensor([-1.,  1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([-1.26703856e+34,  2.72816885e-02,  9.24213417e-03,  4.25766548e-03]), tensor([0, 1, 2, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([7316], [1.0], [0], [2.4079324489810394e-36], [3]), '/input-16': (tensor([ 64, 171,  31, 212]), tensor([-1.,  1., -1., -1.]), tensor([0, 0, 0, 0]), tensor([-1.26703856e+34,  2.72816885e-02,  9.24213417e-03,  2.31726784e-02]), tensor([0, 1, 2, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([7316], [1.0], [0], [2.4079324489810394e-36], [3]), '/input-16': (tensor([ 64, 171,  31, 212]), tensor([-1.,  1., -1.,  1.]), tensor([0, 0, 0, 0]), tensor([-1.26703856e+34,  2.72816885e-02,  9.24213417e-03,  2.40001245e-03]), tensor([0, 1, 2, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([7316], [-1.0], [0], [0.11873692274093628], [3]), '/input-16': (tensor([ 64, 171,  31, 212]), tensor([-1.,  1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([-1.26703856e+34,  2.72816885e-02,  9.55935009e-03,  2.20242608e-02]), tensor([0, 1, 2, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([7316], [-1.0], [0], [0.11873692274093628], [3]), '/input-16': (tensor([ 64, 171,  31, 212]), tensor([-1.,  1.,  1.,  1.]), tensor([0, 0, 0, 0]), tensor([-1.26703856e+34,  2.72816885e-02,  9.55935009e-03,  2.16494664e-03]), tensor([0, 1, 2, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([7316], [1.0], [0], [0.0017594413366168737], [3]), '/input-16': (tensor([ 64, 171,  31, 212]), tensor([-1.,  1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([-1.26703856e+34,  2.72816885e-02,  9.55935009e-03,  2.14605946e-02]), tensor([0, 1, 2, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([7316], [1.0], [0], [0.0017594413366168737], [3]), '/input-16': (tensor([ 64, 171,  31, 212]), tensor([-1.,  1.,  1.,  1.]), tensor([0, 0, 0, 0]), tensor([-1.26703856e+34,  2.72816885e-02,  9.55935009e-03,  2.60695978e-03]), tensor([0, 1, 2, 4]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([64]), tensor([1.]), tensor([0]), tensor([-1.26703856e+34]), tensor([0]))}
Shallow branching resets to n domains:  10
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06355792284011841
10 lb beta sum: 0.869120717048645, worst -0.05847463011741638
Time: prepare 0.0005    bound 0.1664    transfer 0.0002    finalize 0.0005    func 0.1677    
Accumulated time: func 1.1105    prepare 0.0605    bound 1.0076    transfer 0.0097    finalize 0.0301    
After pruning, left:  6

Back to Regular BaB

BaB round 1
batch: 6
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 212] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 154] [/input-16, 212] 
split level 1: [/input-16, 154] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 7] [/input-16, 171] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9268734455108643, worst -0.054586172103881836
10 lb beta sum: 0.9762934446334839, worst -0.05456852912902832
Time: prepare 0.0013    bound 0.1672    transfer 0.0004    finalize 0.0006    func 0.1697    
Accumulated time: func 1.2802    prepare 0.0619    bound 1.1748    transfer 0.0101    finalize 0.0307    
all_split False
======================Cut inference begins======================
max lb tensor(0.03259969) min lb tensor(-0.05456388)
Number of Verified Splits: 16 of 24
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.9218665957450867, worst -0.03434640169143677
10 lb beta sum: 1.1815993785858154, worst -0.030307859182357788
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 5
#cuts 4-6: 4
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.17402935028076172 
BICCOS Cumulative time: 0.2758598327636719
Preprocessing time: 0.0009355545043945312 Inference time: 0.17200875282287598 Add cuts time: 0.0006246566772460938 Cut analysis time: 0.0004603862762451172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05456 (2), -0.03782 (2), -0.03296 (2), -0.02763 (2), -0.00457 (2), -0.00415 (2), -0.00409 (2), -0.00388 (2), 
Length of domains: 8
Time: pickout 0.0004    decision 0.0137    set_bounds 0.0014    solve 0.1697    add 0.0011    
Accumulated time: pickout 0.0034    decision 0.8758    set_bounds 0.0664    solve 1.0405    add 0.5968    
Current (lb-rhs): -0.05456387996673584
241 domains visited
Cumulative time: 3.134150743484497

BaB round 2
batch: 8
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7683] [/input-16, 110] [/input-16, 31] [/input-16, 154] [/input-16, 110] [/input-16, 110] [/input-12, 7316] [/input-16, 154] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.054250508546829224
10 lb beta sum: 0.5302643775939941, worst -0.05198180675506592
Time: prepare 0.0005    bound 0.1642    transfer 0.0002    finalize 0.0007    func 0.1657    
Accumulated time: func 1.4459    prepare 0.0626    bound 1.3390    transfer 0.0103    finalize 0.0314    
all_split False
======================Cut inference begins======================
max lb tensor(0.01920712) min lb tensor(-0.05197793)
Number of Verified Splits: 5 of 16
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.037114620208740234
10 lb beta sum: 1.0777136087417603, worst -0.010571926832199097
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 5
#cuts 4-6: 4
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.17064261436462402 
BICCOS Cumulative time: 0.4465024471282959
Preprocessing time: 0.0007700920104980469 Inference time: 0.16896986961364746 Add cuts time: 0.00042128562927246094 Cut analysis time: 0.0004813671112060547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05198 (3), -0.04104 (3), -0.03424 (3), -0.03374 (3), -0.02974 (3), -0.02556 (3), -0.02130 (3), -0.01799 (3), -0.00409 (3), -0.00364 (3), -0.00178 (3), 
Length of domains: 11
Time: pickout 0.0004    decision 0.0133    set_bounds 0.0010    solve 0.1658    add 0.0011    
Accumulated time: pickout 0.0039    decision 0.8891    set_bounds 0.0674    solve 1.2062    add 0.5979    
Current (lb-rhs): -0.05197793245315552
252 domains visited
Cumulative time: 3.4866976737976074

BaB round 3
batch: 11
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7316] [/input-12, 7316] [/input-16, 31] [/input-12, 7316] [/input-12, 7683] [/input-12, 7316] [/input-16, 31] [/input-12, 7683] [/input-12, 7683] [/input-16, 31] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7286416888237, worst -0.04909205436706543
10 lb beta sum: 0.7286416888237, worst -0.04906797409057617
Time: prepare 0.0013    bound 0.1673    transfer 0.0002    finalize 0.0009    func 0.1699    
Accumulated time: func 1.6158    prepare 0.0640    bound 1.5063    transfer 0.0105    finalize 0.0323    
all_split False
======================Cut inference begins======================
max lb tensor(0.00112854) min lb tensor(-0.04906303)
Number of Verified Splits: 1 of 22
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.6739247441291809, worst -0.030720219016075134
10 lb beta sum: 0.8712323904037476, worst -0.02009063959121704
Total number of valid cuts: 10.
#cuts 1-3: 5
#cuts 4-6: 4
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.16595888137817383 
BICCOS Cumulative time: 0.6124613285064697
Preprocessing time: 0.0009505748748779297 Inference time: 0.16477394104003906 Add cuts time: 0.00021505355834960938 Cut analysis time: 1.9311904907226562e-05
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04906 (4), -0.04629 (4), -0.03943 (4), -0.03522 (4), -0.03276 (4), -0.03237 (4), -0.02886 (4), -0.02856 (4), -0.02654 (4), -0.02359 (4), -0.02200 (4), -0.02171 (4), -0.01754 (4), -0.01749 (4), -0.01575 (4), -0.01041 (4), -0.00391 (4), -0.00253 (4), -0.00195 (4), -0.00044 (4), 
Length of domains: 21
Time: pickout 0.0005    decision 0.0134    set_bounds 0.0012    solve 0.1699    add 0.0015    
Accumulated time: pickout 0.0043    decision 0.9024    set_bounds 0.0687    solve 1.3761    add 0.5994    
Current (lb-rhs): -0.049063026905059814
273 domains visited
Cumulative time: 3.839294910430908

BaB round 4
batch: 21
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 110] [/input-16, 31] [/input-16, 110] [/input-16, 31] [/input-12, 7315] [/input-16, 110] [/input-12, 7316] [/input-12, 7315] [/input-12, 7315] [/input-16, 110] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7312472462654114, worst -0.04748755693435669
10 lb beta sum: 0.7312472462654114, worst -0.04748129844665527
Time: prepare 0.0022    bound 0.1653    transfer 0.0003    finalize 0.0010    func 0.1692    
Accumulated time: func 1.7850    prepare 0.0664    bound 1.6716    transfer 0.0108    finalize 0.0333    
all_split False
======================Cut inference begins======================
max lb tensor(0.24017432) min lb tensor(-0.04747793)
Number of Verified Splits: 17 of 42
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.6754269599914551, worst -0.034661293029785156
10 lb beta sum: 0.8496100306510925, worst -0.02186959981918335
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 5
#cuts 4-6: 4
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.18179059028625488 
BICCOS Cumulative time: 0.7942519187927246
Preprocessing time: 0.0014998912811279297 Inference time: 0.17916131019592285 Add cuts time: 0.0005977153778076172 Cut analysis time: 0.0005316734313964844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04748 (5), -0.04460 (5), -0.04369 (5), -0.04072 (5), -0.03599 (5), -0.03508 (5), -0.03267 (5), -0.03230 (5), -0.03187 (5), -0.03119 (5), -0.02875 (5), -0.02825 (5), -0.02462 (5), -0.02200 (5), -0.02171 (5), -0.02102 (5), -0.01986 (5), -0.01754 (5), -0.01749 (5), -0.01633 (5), 
Length of domains: 25
Time: pickout 0.0005    decision 0.0140    set_bounds 0.0020    solve 0.1693    add 0.0014    
Accumulated time: pickout 0.0049    decision 0.9164    set_bounds 0.0707    solve 1.5455    add 0.6008    
Current (lb-rhs): -0.047477930784225464
298 domains visited
Cumulative time: 4.208580732345581

BaB round 5
batch: 25
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 110] [/input-16, 7] [/input-16, 110] [/input-16, 18] [/input-16, 7] [/input-16, 110] [/input-16, 7] [/input-16, 110] [/input-16, 110] [/input-16, 7] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04819101095199585
10 lb beta sum: 0.5090537667274475, worst -0.047475844621658325
Time: prepare 0.0013    bound 0.1658    transfer 0.0004    finalize 0.0010    func 0.1689    
Accumulated time: func 1.9539    prepare 0.0680    bound 1.8374    transfer 0.0112    finalize 0.0343    
all_split False
======================Cut inference begins======================
max lb tensor(0.27267411) min lb tensor(-0.04747409)
Number of Verified Splits: 11 of 50
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 7
#cuts >= 20: 0
BICCOS time: 0.0032935142517089844 
BICCOS Cumulative time: 0.7975454330444336
Preprocessing time: 0.0017893314361572266 Inference time: 0.0007965564727783203 Add cuts time: 0.0003619194030761719 Cut analysis time: 0.0003457069396972656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04747 (6), -0.04454 (6), -0.04365 (6), -0.04065 (6), -0.03590 (6), -0.03499 (6), -0.03172 (6), -0.03115 (6), -0.02920 (6), -0.02885 (6), -0.02858 (6), -0.02831 (6), -0.02533 (6), -0.02480 (6), -0.02457 (6), -0.02389 (6), -0.02112 (6), -0.02076 (6), -0.01989 (6), -0.01902 (6), 
Length of domains: 39
Time: pickout 0.0006    decision 0.0142    set_bounds 0.0023    solve 0.1689    add 0.0016    
Accumulated time: pickout 0.0054    decision 0.9306    set_bounds 0.0730    solve 1.7144    add 0.6024    
Current (lb-rhs): -0.04747408628463745
337 domains visited
Cumulative time: 4.399703741073608

BaB round 6
batch: 39
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-12, 7683] [/input-12, 7683] [/input-16, 110] [/input-12, 7683] [/input-12, 7683] [/input-16, 110] [/input-12, 7683] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04465344548225403
10 lb beta sum: 0.43095946311950684, worst -0.04391610622406006
Time: prepare 0.0019    bound 0.1614    transfer 0.0009    finalize 0.0018    func 0.1665    
Accumulated time: func 2.1204    prepare 0.0700    bound 1.9988    transfer 0.0121    finalize 0.0361    
all_split False
======================Cut inference begins======================
max lb tensor(0.61539245) min lb tensor(-0.04391164)
Number of Verified Splits: 14 of 78
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.004517316818237305 
BICCOS Cumulative time: 0.8020627498626709
Preprocessing time: 0.0026543140411376953 Inference time: 0.0011868476867675781 Add cuts time: 0.00033926963806152344 Cut analysis time: 0.0003368854522705078
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04391 (7), -0.04372 (7), -0.04105 (7), -0.04067 (7), -0.04012 (7), -0.03984 (7), -0.03726 (7), -0.03673 (7), -0.03253 (7), -0.03193 (7), -0.03173 (7), -0.03101 (7), -0.02834 (7), -0.02785 (7), -0.02779 (7), -0.02748 (7), -0.02720 (7), -0.02711 (7), -0.02684 (7), -0.02681 (7), 
Length of domains: 64
Time: pickout 0.0006    decision 0.0165    set_bounds 0.0039    solve 0.1666    add 0.0020    
Accumulated time: pickout 0.0060    decision 0.9470    set_bounds 0.0770    solve 1.8810    add 0.6044    
Current (lb-rhs): -0.043911635875701904
401 domains visited
Cumulative time: 4.5942418575286865

BaB round 7
batch: 64
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7315] [/input-12, 7315] [/input-12, 7315] [/input-12, 7315] [/input-16, 18] [/input-12, 7315] [/input-12, 7315] [/input-12, 7315] [/input-12, 7683] [/input-12, 7683] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04317879676818848
10 lb beta sum: 0.5200182199478149, worst -0.04246063530445099
Time: prepare 0.0028    bound 0.1662    transfer 0.0010    finalize 0.0034    func 0.1743    
Accumulated time: func 2.2947    prepare 0.0729    bound 2.1650    transfer 0.0131    finalize 0.0395    
all_split False
======================Cut inference begins======================
max lb tensor(0.34505737) min lb tensor(-0.04245853)
Number of Verified Splits: 16 of 128
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.006182193756103516 
BICCOS Cumulative time: 0.8082449436187744
Preprocessing time: 0.0040590763092041016 Inference time: 0.0013456344604492188 Add cuts time: 0.00032591819763183594 Cut analysis time: 0.0004515647888183594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04246 (8), -0.04226 (8), -0.03980 (8), -0.03961 (8), -0.03959 (8), -0.03923 (8), -0.03874 (8), -0.03845 (8), -0.03706 (8), -0.03668 (8), -0.03584 (8), -0.03582 (8), -0.03553 (8), -0.03532 (8), -0.03296 (8), -0.03244 (8), -0.03123 (8), -0.03051 (8), -0.03021 (8), -0.02912 (8), 
Length of domains: 112
Time: pickout 0.0006    decision 0.0161    set_bounds 0.0058    solve 0.1743    add 0.0025    
Accumulated time: pickout 0.0066    decision 0.9632    set_bounds 0.0828    solve 2.0554    add 0.6070    
Current (lb-rhs): -0.042458534240722656
513 domains visited
Cumulative time: 4.800146818161011

BaB round 8
batch: 112
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-12, 7315] [/input-16, 18] [/input-16, 18] [/input-16, 18] [/input-12, 7315] [/input-12, 7315] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04057353734970093
10 lb beta sum: 0.533575713634491, worst -0.039852261543273926
Time: prepare 0.0045    bound 0.1650    transfer 0.0013    finalize 0.0050    func 0.1773    
Accumulated time: func 2.4720    prepare 0.0776    bound 2.3299    transfer 0.0144    finalize 0.0445    
all_split False
======================Cut inference begins======================
max lb tensor(0.36938769) min lb tensor(-0.03984925)
Number of Verified Splits: 34 of 224
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.010261774063110352 
BICCOS Cumulative time: 0.8185067176818848
Preprocessing time: 0.006729841232299805 Inference time: 0.0026636123657226562 Add cuts time: 0.0002834796905517578 Cut analysis time: 0.0005848407745361328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03985 (9), -0.03966 (9), -0.03907 (9), -0.03890 (9), -0.03718 (9), -0.03708 (9), -0.03699 (9), -0.03667 (9), -0.03641 (9), -0.03626 (9), -0.03623 (9), -0.03588 (9), -0.03572 (9), -0.03562 (9), -0.03547 (9), -0.03529 (9), -0.03452 (9), -0.03420 (9), -0.03376 (9), -0.03344 (9), 
Length of domains: 190
Time: pickout 0.0013    decision 0.0188    set_bounds 0.0098    solve 0.1774    add 0.0038    
Accumulated time: pickout 0.0079    decision 0.9820    set_bounds 0.0925    solve 2.2328    add 0.6108    
Current (lb-rhs): -0.03984925150871277
703 domains visited
Cumulative time: 5.021975994110107

BaB round 9
batch: 190
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 230] [/input-16, 73] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 18] [/input-16, 18] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03907814621925354
10 lb beta sum: 0.6672114729881287, worst -0.03835500776767731
Time: prepare 0.0074    bound 0.1682    transfer 0.0015    finalize 0.0055    func 0.1852    
Accumulated time: func 2.6573    prepare 0.0852    bound 2.4982    transfer 0.0160    finalize 0.0500    
all_split False
======================Cut inference begins======================
max lb tensor(0.01591235) min lb tensor(-0.03835261)
Number of Verified Splits: 80 of 380
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 8
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.021808624267578125 
BICCOS Cumulative time: 0.8403153419494629
Preprocessing time: 0.010992050170898438 Inference time: 0.008310794830322266 Add cuts time: 0.002111673355102539 Cut analysis time: 0.0003941059112548828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03835 (10), -0.03815 (10), -0.03757 (10), -0.03739 (10), -0.03567 (10), -0.03555 (10), -0.03547 (10), -0.03514 (10), -0.03491 (10), -0.03474 (10), -0.03471 (10), -0.03434 (10), -0.03419 (10), -0.03411 (10), -0.03393 (10), -0.03376 (10), -0.03299 (10), -0.03259 (10), -0.03223 (10), -0.03192 (10), 
Length of domains: 300
Time: pickout 0.0010    decision 0.0286    set_bounds 0.0162    solve 0.1854    add 0.0060    
Accumulated time: pickout 0.0088    decision 1.0106    set_bounds 0.1087    solve 2.4181    add 0.6168    
Current (lb-rhs): -0.0383526086807251
1003 domains visited
Cumulative time: 5.2816901206970215

BaB round 10
batch: 256
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 73] [/input-16, 230] [/input-16, 73] [/input-16, 73] [/input-16, 230] [/input-16, 230] [/input-16, 5] [/input-16, 230] [/input-16, 5] [/input-16, 230] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03792974352836609
10 lb beta sum: 0.6251473426818848, worst -0.07029053568840027
Time: prepare 0.0098    bound 0.1725    transfer 0.0054    finalize 0.0100    func 0.2012    
Accumulated time: func 2.8585    prepare 0.0953    bound 2.6707    transfer 0.0213    finalize 0.0600    
all_split False
======================Cut inference begins======================
max lb tensor(0.01762259) min lb tensor(-0.03720598)
Number of Verified Splits: 87 of 512
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 8
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.026772499084472656 
BICCOS Cumulative time: 0.8670878410339355
Preprocessing time: 0.014682531356811523 Inference time: 0.009314298629760742 Add cuts time: 0.002419710159301758 Cut analysis time: 0.0003559589385986328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03739 (10), -0.03721 (11), -0.03696 (11), -0.03642 (11), -0.03491 (10), -0.03474 (10), -0.03454 (11), -0.03437 (11), -0.03434 (10), -0.03430 (11), -0.03419 (10), -0.03393 (10), -0.03392 (11), -0.03353 (11), -0.03296 (11), -0.03258 (11), -0.03223 (10), -0.03192 (10), -0.03184 (11), -0.03141 (11), 
Length of domains: 469
Time: pickout 0.0013    decision 0.0302    set_bounds 0.0215    solve 0.2014    add 0.0082    
Accumulated time: pickout 0.0101    decision 1.0408    set_bounds 0.1302    solve 2.6195    add 0.6250    
Current (lb-rhs): -0.03738760948181152
1428 domains visited
current_vram/total_varm: 2.1GB/99.9GB, batch_size increase to 512
Cumulative time: 5.572136402130127

BaB round 11
batch: 469
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 5] [/input-16, 230] [/input-16, 73] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 5] [/input-16, 230] [/input-16, 230] [/input-16, 230] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6379761695861816, worst -0.03690505027770996
10 lb beta sum: 0.7402058839797974, worst -0.06958933174610138
Time: prepare 0.0391    bound 0.2172    transfer 0.0034    finalize 0.0138    func 0.2796    
Accumulated time: func 3.1381    prepare 0.1346    bound 2.8879    transfer 0.0248    finalize 0.0737    
all_split False
======================Cut inference begins======================
max lb tensor(0.00734447) min lb tensor(-0.03619039)
Number of Verified Splits: 83 of 938
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 8
#cuts 4-6: 5
#cuts >= 20: 0
BICCOS time: 0.03893852233886719 
BICCOS Cumulative time: 0.9060263633728027
Preprocessing time: 0.02787470817565918 Inference time: 0.009228706359863281 Add cuts time: 0.0013756752014160156 Cut analysis time: 0.00045943260192871094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03619 (11), -0.03535 (12), -0.03527 (12), -0.03526 (12), -0.03498 (12), -0.03455 (12), -0.03446 (12), -0.03376 (11), -0.03356 (11), -0.03312 (11), -0.03303 (11), -0.03272 (11), -0.03269 (12), -0.03264 (12), -0.03259 (12), -0.03247 (12), -0.03242 (12), -0.03226 (12), -0.03203 (12), -0.03198 (12), 
Length of domains: 855
Time: pickout 0.0141    decision 0.0451    set_bounds 0.0407    solve 0.2805    add 0.0218    
Accumulated time: pickout 0.0242    decision 1.0859    set_bounds 0.1710    solve 2.9000    add 0.6468    
Current (lb-rhs): -0.03619039058685303
2283 domains visited
Cumulative time: 6.015170574188232

BaB round 12
batch: 512
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 73] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 5] [/input-16, 73] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03522256016731262
10 lb beta sum: 0.631230354309082, worst -0.05919772386550903
Time: prepare 0.0209    bound 0.2247    transfer 0.0038    finalize 0.0140    func 0.2702    
Accumulated time: func 3.4082    prepare 0.1557    bound 3.1126    transfer 0.0286    finalize 0.0878    
all_split False
======================Cut inference begins======================
max lb tensor(0.00602160) min lb tensor(-0.03450322)
Number of Verified Splits: 103 of 1024
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 9
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.04524731636047363 
BICCOS Cumulative time: 0.9512736797332764
Preprocessing time: 0.03101968765258789 Inference time: 0.01175999641418457 Add cuts time: 0.0020401477813720703 Cut analysis time: 0.00042748451232910156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03526 (12), -0.03498 (12), -0.03450 (12), -0.03446 (12), -0.03420 (12), -0.03367 (13), -0.03341 (13), -0.03336 (13), -0.03332 (13), -0.03289 (13), -0.03259 (12), -0.03253 (13), -0.03247 (12), -0.03226 (12), -0.03211 (12), -0.03203 (12), -0.03190 (12), -0.03170 (12), -0.03163 (12), -0.03152 (12), 
Length of domains: 1264
Time: pickout 0.0021    decision 0.0505    set_bounds 0.0452    solve 0.2704    add 0.0202    
Accumulated time: pickout 0.0263    decision 1.1365    set_bounds 0.2161    solve 3.1703    add 0.6670    
Current (lb-rhs): -0.035255298018455505
3204 domains visited
current_vram/total_varm: 4.3GB/99.9GB, batch_size increase to 1024
Cumulative time: 6.4517903327941895

BaB round 13
batch: 1024
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 188] [/input-12, 7963] [/input-16, 73] [/input-16, 73] [/input-12, 7963] [/input-16, 73] [/input-12, 7963] [/input-12, 7963] [/input-16, 73] [/input-12, 7955] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03427654504776001
10 lb beta sum: 0.639419436454773, worst -0.05648025870323181
Time: prepare 0.0402    bound 0.3716    transfer 0.0095    finalize 0.0657    func 0.5004    
Accumulated time: func 3.9086    prepare 0.1961    bound 3.4842    transfer 0.0380    finalize 0.1535    
all_split False
======================Cut inference begins======================
max lb tensor(0.00633344) min lb tensor(-0.03355935)
Number of Verified Splits: 244 of 2048
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 9
#cuts 4-6: 5
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.09764647483825684 
BICCOS Cumulative time: 1.0489201545715332
Preprocessing time: 0.0628209114074707 Inference time: 0.030242919921875 Add cuts time: 0.00396728515625 Cut analysis time: 0.0006153583526611328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03356 (13), -0.03329 (13), -0.03311 (14), -0.03311 (13), -0.03305 (13), -0.03285 (14), -0.03279 (14), -0.03277 (13), -0.03276 (14), -0.03265 (13), -0.03255 (13), -0.03253 (13), -0.03248 (13), -0.03232 (14), -0.03231 (13), -0.03228 (13), -0.03092 (13), -0.03077 (13), -0.03069 (13), -0.03064 (13), 
Length of domains: 2044
Time: pickout 0.0039    decision 0.2446    set_bounds 0.0860    solve 0.5011    add 0.0370    
Accumulated time: pickout 0.0302    decision 1.3811    set_bounds 0.3021    solve 3.6715    add 0.7040    
Current (lb-rhs): -0.03355935215950012
5008 domains visited
current_vram/total_varm: 6.8GB/99.9GB, batch_size increase to 2048
Cumulative time: 7.428457736968994

BaB round 14
batch: 2044
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7955] [/input-12, 7635] [/input-12, 7635] [/input-12, 7635] [/input-12, 7955] [/input-12, 7955] [/input-12, 7635] [/input-12, 7955] [/input-12, 7635] [/input-12, 7635] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03371188044548035
10 lb beta sum: 0.6322667598724365, worst -0.05783271789550781
Time: prepare 0.0863    bound 0.6700    transfer 0.0600    finalize 0.3090    func 1.1525    
Accumulated time: func 5.0611    prepare 0.2827    bound 4.1541    transfer 0.0981    finalize 0.4624    
all_split False
======================Cut inference begins======================
max lb tensor(0.00666180) min lb tensor(-0.03299852)
Number of Verified Splits: 552 of 4088
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 9
#cuts 4-6: 13
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.2128124237060547 
BICCOS Cumulative time: 1.261732578277588
Preprocessing time: 0.1282329559326172 Inference time: 0.07262349128723145 Add cuts time: 0.010863542556762695 Cut analysis time: 0.0010924339294433594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03300 (14), -0.03272 (14), -0.03254 (14), -0.03250 (14), -0.03249 (15), -0.03222 (15), -0.03221 (14), -0.03218 (15), -0.03213 (15), -0.03209 (14), -0.03199 (14), -0.03197 (14), -0.03191 (14), -0.03175 (14), -0.03170 (14), -0.03166 (15), -0.03040 (14), -0.03019 (14), -0.03016 (14), -0.03004 (14), 
Length of domains: 3536
Time: pickout 0.0575    decision 0.1638    set_bounds 0.1720    solve 1.1533    add 0.0790    
Accumulated time: pickout 0.0878    decision 1.5449    set_bounds 0.4742    solve 4.8248    add 0.7830    
Current (lb-rhs): -0.03299851715564728
8544 domains visited
Cumulative time: 9.279045104980469

BaB round 15
batch: 2048
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7635] [/input-12, 7955] [/input-12, 7955] [/input-12, 7955] [/input-12, 7635] [/input-16, 188] [/input-16, 188] [/input-12, 7955] [/input-16, 188] [/input-12, 7635] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03309464454650879
10 lb beta sum: 0.617026686668396, worst -0.05659085512161255
Time: prepare 0.0872    bound 0.8501    transfer 0.0531    finalize 0.1332    func 1.1518    
Accumulated time: func 6.2129    prepare 0.3701    bound 5.0043    transfer 0.1512    finalize 0.5957    
all_split False
======================Cut inference begins======================
max lb tensor(0.01103300) min lb tensor(-0.03237961)
Number of Verified Splits: 713 of 4096
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 33.
#cuts 1-3: 9
#cuts 4-6: 18
#cuts 7-9: 6
#cuts >= 20: 0
BICCOS time: 0.4154961109161377 
BICCOS Cumulative time: 1.6772286891937256
Preprocessing time: 0.1294877529144287 Inference time: 0.2698192596435547 Add cuts time: 0.014689445495605469 Cut analysis time: 0.0014996528625488281
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03249 (15), -0.03238 (15), -0.03222 (15), -0.03218 (15), -0.03213 (15), -0.03211 (15), -0.03190 (15), -0.03188 (15), -0.03166 (15), -0.03155 (15), -0.03141 (15), -0.03132 (15), -0.03130 (15), -0.03126 (15), -0.03108 (15), -0.03105 (15), -0.02989 (15), -0.02981 (15), -0.02969 (14), -0.02962 (15), 
Length of domains: 4871
Time: pickout 0.0084    decision 0.1665    set_bounds 0.1756    solve 1.1530    add 0.1011    
Accumulated time: pickout 0.0961    decision 1.7114    set_bounds 0.6498    solve 5.9777    add 0.8842    
Current (lb-rhs): -0.03248685598373413
11927 domains visited
current_vram/total_varm: 14.3GB/99.9GB, batch_size increase to 4096
Cumulative time: 11.315609693527222

BaB round 16
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7955] [/input-12, 7955] [/input-16, 188] [/input-12, 7635] [/input-12, 7955] [/input-16, 188] [/input-12, 7963] [/input-12, 7635] [/input-12, 7955] [/input-12, 7635] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03251558542251587
10 lb beta sum: 0.6274058818817139, worst -0.05756711959838867
Time: prepare 0.1829    bound 1.6101    transfer 0.1061    finalize 0.4777    func 2.4313    
Accumulated time: func 8.6442    prepare 0.5533    bound 6.6144    transfer 0.2573    finalize 1.0734    
all_split False
======================Cut inference begins======================
max lb tensor(0.01140168) min lb tensor(-0.03179710)
Number of Verified Splits: 1593 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 64.
#cuts 1-3: 9
#cuts 4-6: 43
#cuts 7-9: 12
#cuts >= 20: 0
BICCOS time: 0.545377254486084 
BICCOS Cumulative time: 2.2226059436798096
Preprocessing time: 0.2608470916748047 Inference time: 0.23938608169555664 Add cuts time: 0.042421817779541016 Cut analysis time: 0.0027222633361816406
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03211 (15), -0.03188 (15), -0.03180 (16), -0.03169 (16), -0.03152 (16), -0.03151 (16), -0.03143 (16), -0.03132 (15), -0.03126 (15), -0.03121 (16), -0.03105 (15), -0.03096 (16), -0.03086 (16), -0.03071 (16), -0.03062 (16), -0.02982 (16), -0.02943 (15), -0.02943 (16), -0.02931 (15), -0.02920 (16), 
Length of domains: 7374
Time: pickout 0.0150    decision 0.3167    set_bounds 0.3553    solve 2.4330    add 0.1539    
Accumulated time: pickout 0.1112    decision 2.0280    set_bounds 1.0051    solve 8.4107    add 1.0380    
Current (lb-rhs): -0.032109588384628296
18526 domains visited
current_vram/total_varm: 28.5GB/99.9GB, batch_size increase to 8192
Cumulative time: 15.164553165435791

BaB round 17
batch: 7374
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 24] [/input-16, 188] [/input-16, 24] [/input-16, 188] [/input-12, 7955] [/input-16, 188] [/input-16, 188] [/input-16, 188] [/input-16, 24] [/input-12, 7963] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03212663531303406
10 lb beta sum: 0.6449040770530701, worst -0.05988389253616333
Time: prepare 0.3339    bound 2.8990    transfer 0.2081    finalize 0.5229    func 4.0635    
Accumulated time: func 12.7077    prepare 0.8875    bound 9.5134    transfer 0.4654    finalize 1.5963    
all_split False
======================Cut inference begins======================
max lb tensor(0.02050713) min lb tensor(-0.03143412)
Number of Verified Splits: 3162 of 14748
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 60.
#cuts 1-3: 10
#cuts 4-6: 35
#cuts 7-9: 15
#cuts >= 20: 0
BICCOS time: 1.3249385356903076 
BICCOS Cumulative time: 3.547544479370117
Preprocessing time: 0.4807722568511963 Inference time: 0.772104024887085 Add cuts time: 0.0694284439086914 Cut analysis time: 0.002633810043334961
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03143 (16), -0.03117 (16), -0.03062 (16), -0.03055 (16), -0.03042 (17), -0.03033 (16), -0.03031 (17), -0.03015 (17), -0.03013 (17), -0.03013 (17), -0.03006 (17), -0.03004 (17), -0.02994 (17), -0.02986 (17), -0.02984 (17), -0.02970 (17), -0.02964 (17), -0.02961 (17), -0.02943 (17), -0.02942 (17), 
Length of domains: 11586
Time: pickout 0.2844    decision 0.7085    set_bounds 0.8852    solve 4.0681    add 0.2544    
Accumulated time: pickout 0.3956    decision 2.7365    set_bounds 1.8903    solve 12.4788    add 1.2924    
Current (lb-rhs): -0.03143411874771118
30112 domains visited
Cumulative time: 22.743001461029053

BaB round 18
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7963] [/input-12, 7963] [/input-12, 7963] [/input-12, 4421] [/input-12, 7963] [/input-12, 7963] [/input-12, 7963] [/input-12, 7963] [/input-12, 7963] [/input-12, 4421] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.030782490968704224
10 lb beta sum: 0.653938889503479, worst -0.06155388057231903
Time: prepare 0.3786    bound 3.1836    transfer 0.2126    finalize 0.5428    func 4.4290    
Accumulated time: func 17.1367    prepare 1.2665    bound 12.6969    transfer 0.6780    finalize 2.1391    
all_split False
======================Cut inference begins======================
max lb tensor(0.02254966) min lb tensor(-0.03008528)
Number of Verified Splits: 3146 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 57.
#cuts 1-3: 13
#cuts 4-6: 36
#cuts 7-9: 8
#cuts >= 20: 0
BICCOS time: 1.4357450008392334 
BICCOS Cumulative time: 4.983289480209351
Preprocessing time: 0.5377016067504883 Inference time: 0.8263702392578125 Add cuts time: 0.06930232048034668 Cut analysis time: 0.0023708343505859375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03009 (17), -0.03006 (17), -0.02989 (18), -0.02981 (17), -0.02961 (17), -0.02960 (17), -0.02943 (17), -0.02942 (17), -0.02942 (17), -0.02936 (17), -0.02921 (17), -0.02909 (17), -0.02902 (17), -0.02902 (18), -0.02896 (18), -0.02881 (17), -0.02876 (18), -0.02876 (18), -0.02875 (17), -0.02871 (17), 
Length of domains: 16632
Time: pickout 0.0472    decision 0.6192    set_bounds 1.0136    solve 4.4339    add 0.3633    
Accumulated time: pickout 0.4427    decision 3.3557    set_bounds 2.9040    solve 16.9127    add 1.6558    
Current (lb-rhs): -0.030085280537605286
43350 domains visited
Cumulative time: 30.720352172851562

BaB round 19
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4421] [/input-16, 24] [/input-12, 7301] [/input-12, 7301] [/input-12, 4421] [/input-12, 7301] [/input-12, 7301] [/input-12, 4421] [/input-16, 24] [/input-12, 4421] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.030366241931915283
10 lb beta sum: 0.6823763251304626, worst -0.05267524719238281
Time: prepare 0.3883    bound 3.1818    transfer 0.2141    finalize 0.5581    func 4.4548    
Accumulated time: func 21.5915    prepare 1.6551    bound 15.8787    transfer 0.8921    finalize 2.6972    
all_split False
======================Cut inference begins======================
max lb tensor(0.36931086) min lb tensor(-0.02966605)
Number of Verified Splits: 3078 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 56.
#cuts 1-3: 12
#cuts 4-6: 37
#cuts 7-9: 7
#cuts >= 20: 0
BICCOS time: 1.5423176288604736 
BICCOS Cumulative time: 6.525607109069824
Preprocessing time: 0.5385725498199463 Inference time: 0.8934187889099121 Add cuts time: 0.10801172256469727 Cut analysis time: 0.0023145675659179688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02967 (18), -0.02962 (18), -0.02960 (17), -0.02942 (17), -0.02936 (17), -0.02909 (17), -0.02902 (18), -0.02876 (18), -0.02876 (18), -0.02875 (17), -0.02870 (18), -0.02869 (18), -0.02862 (18), -0.02854 (19), -0.02853 (18), -0.02850 (19), -0.02849 (18), -0.02845 (18), -0.02845 (19), -0.02843 (18), 
Length of domains: 21746
Time: pickout 0.0467    decision 0.6198    set_bounds 1.0815    solve 4.4581    add 0.3139    
Accumulated time: pickout 0.4894    decision 3.9755    set_bounds 3.9854    solve 21.3708    add 1.9697    
Current (lb-rhs): -0.029666051268577576
56656 domains visited
Cumulative time: 38.84458518028259

BaB round 20
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7301] [/input-12, 7301] [/input-12, 2339] [/input-12, 7301] [/input-12, 862] [/input-16, 24] [/input-12, 4421] [/input-12, 4438] [/input-12, 4421] [/input-12, 7301] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.02987334132194519
10 lb beta sum: 0.9879177212715149, worst -0.06297895312309265
Time: prepare 0.3854    bound 3.1809    transfer 0.2114    finalize 0.5585    func 4.4477    
Accumulated time: func 26.0392    prepare 2.0408    bound 19.0596    transfer 1.1035    finalize 3.2557    
all_split False
======================Cut inference begins======================
max lb tensor(0.76824617) min lb tensor(-0.02807871)
Number of Verified Splits: 6825 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 2.243532657623291 
BICCOS Cumulative time: 8.769139766693115
Preprocessing time: 0.5507941246032715 Inference time: 1.5584311485290527 Add cuts time: 0.13381028175354004 Cut analysis time: 0.0004971027374267578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02967 (18), -0.02962 (18), -0.02854 (19), -0.02850 (19), -0.02845 (19), -0.02841 (18), -0.02834 (19), -0.02833 (18), -0.02823 (19), -0.02822 (18), -0.02819 (19), -0.02812 (19), -0.02808 (18), -0.02805 (18), -0.02803 (18), -0.02800 (18), -0.02800 (18), -0.02794 (18), -0.02789 (18), -0.02789 (18), 
Length of domains: 23113
Time: pickout 0.0439    decision 0.6249    set_bounds 1.1845    solve 4.4530    add 0.2341    
Accumulated time: pickout 0.5333    decision 4.6003    set_bounds 5.1700    solve 25.8238    add 2.2038    
Current (lb-rhs): -0.029666051268577576
66215 domains visited
Cumulative time: 47.73418092727661

BaB round 21
batch: 8192
splitting decisions: 
split level 0: [/input-12, 7301] [/input-12, 7963] [/input-12, 5196] [/input-12, 4421] [/input-12, 7301] [/input-12, 4421] [/input-12, 7301] [/input-12, 4421] [/input-12, 4421] [/input-12, 4421] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.02898573875427246
10 lb beta sum: 0.2779654264450073, worst -0.05642780661582947
Time: prepare 0.3915    bound 1.6756    transfer 0.2108    finalize 0.5528    func 2.9417    
Accumulated time: func 28.9809    prepare 2.4326    bound 20.7352    transfer 1.3143    finalize 3.8084    
all_split False
======================Cut inference begins======================
max lb tensor(0.45371523) min lb tensor(2.98023224e-07)
Number of Verified Splits: 16384 of 16384
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.5574579238891602 
BICCOS Cumulative time: 9.326597690582275
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02850 (19), -0.02841 (18), -0.02834 (19), -0.02808 (18), -0.02794 (18), -0.02789 (18), -0.02756 (19), -0.02747 (19), -0.02744 (18), -0.02738 (19), -0.02736 (19), -0.02723 (19), -0.02720 (19), -0.02717 (19), -0.02704 (19), -0.02699 (18), -0.02696 (19), -0.02690 (18), -0.02689 (19), -0.02687 (19), 
Length of domains: 14921
Time: pickout 0.0537    decision 0.6169    set_bounds 1.2775    solve 2.9472    add 0.0089    
Accumulated time: pickout 0.5870    decision 5.2172    set_bounds 6.4475    solve 28.7710    add 2.2127    
Current (lb-rhs): -0.02850136160850525
66215 domains visited
Cumulative time: 53.37421131134033

BaB round 22
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1756] [/input-12, 7301] [/input-12, 4421] [/input-16, 225] [/input-12, 7955] [/input-12, 7347] [/input-12, 5196] [/input-16, 225] [/input-12, 7301] [/input-4, 854] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.02895215153694153
10 lb beta sum: 0.27921104431152344, worst -0.05801704525947571
Time: prepare 0.3884    bound 1.6740    transfer 0.2033    finalize 0.5419    func 3.2958    
Accumulated time: func 32.2767    prepare 2.8214    bound 22.4092    transfer 1.5176    finalize 4.3504    
all_split False
======================Cut inference begins======================
max lb tensor(0.46647042) min lb tensor(1.54972076e-06)
Number of Verified Splits: 16384 of 16384
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.5622220039367676 
BICCOS Cumulative time: 9.888819694519043
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02756 (19), -0.02736 (19), -0.02723 (19), -0.02696 (19), -0.02690 (18), -0.02689 (19), -0.02676 (19), -0.02668 (18), -0.02665 (19), -0.02657 (19), -0.02647 (18), -0.02640 (18), -0.02626 (19), -0.02624 (18), -0.02580 (19), -0.02566 (19), -0.02559 (19), -0.02551 (19), -0.02546 (19), -0.02541 (19), 
Length of domains: 6729
Time: pickout 0.0644    decision 0.6184    set_bounds 1.1435    solve 3.2998    add 0.0055    
Accumulated time: pickout 0.6514    decision 5.8357    set_bounds 7.5910    solve 32.0708    add 2.2181    
Current (lb-rhs): -0.027563482522964478
66215 domains visited
Cumulative time: 59.245442628860474

BaB round 23
batch: 6729
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1756] [/input-12, 7301] [/input-12, 2339] [/input-12, 4421] [/input-12, 861] [/input-12, 862] [/input-12, 4146] [/input-12, 1756] [/input-12, 7338] [/input-12, 1756] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.028674006462097168
10 lb beta sum: 0.2858518660068512, worst -0.0677439272403717
Time: prepare 0.3220    bound 1.3937    transfer 0.1751    finalize 0.4630    func 2.4418    
Accumulated time: func 34.7186    prepare 3.1438    bound 23.8029    transfer 1.6927    finalize 4.8133    
all_split False
======================Cut inference begins======================
max lb tensor(0.44915792) min lb tensor(1.37090683e-06)
Number of Verified Splits: 13458 of 13458
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.4649796485900879 
BICCOS Cumulative time: 10.35379934310913
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0457    decision 0.5063    set_bounds 0.9075    solve 2.4454    add 0.0022    
Accumulated time: pickout 0.6971    decision 6.3419    set_bounds 8.4985    solve 34.5162    add 2.2204    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
66215 domains visited
Cumulative time: 63.75530934333801


Properties batch 5, size 1
Remaining timeout: 133.0245168209076
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 133.02438521385193
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 133.0243570804596
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 133.02433586120605
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 66.9757 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 192, vnnlib ID: 192 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-34.73874664, -37.11381531, -31.01442719, -33.60681915, -31.77618027,
         -33.71712112, -31.87929153, -33.22846222, -37.06167984, -36.88123322]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1354]; unstable size 1354; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 74, 1, 1354] with unstable size 73 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 41, 1, 1354] with unstable size 40 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1354] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [604]; unstable size 604; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 41, 1, 604] with unstable size 40 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 604] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [40]; unstable size 40; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 40] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.24101448,  3.63203526,  1.44683206, -0.16397476,  1.50856709,
         -0.59084010,  0.59543896,  4.54990053,  3.49355507]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-34.73874664, -37.11381531, -31.01442719, -33.60681915, -31.77618027,
         -33.71712112, -31.87929153, -33.22846222, -37.06167984, -36.88123322]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.09it/s]100%|██████████| 1/1 [00:00<00:00,  8.09it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-35.21895981, -37.34997177, -31.40324020, -33.88888931, -32.09737778,
          -34.02252579, -31.70003128, -33.53682327, -37.42535019, -37.05002594],
         [-35.21895981, -37.34997177, -31.40324020, -33.88888931, -32.09737778,
          -34.02252579, -31.70003128, -33.53682327, -37.42535019, -37.05002594]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.69413757, 0.29679108]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1285 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 17.70477294921875
alpha/beta optimization time: 1.4287331104278564
initial alpha-crown bounds: tensor([[ 2.31874681,  3.74447298,  1.53778720, -0.03460181,  1.60304904,
         -0.42632216,  0.72044265,  4.63812494,  3.60307455]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.42632216215133667
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.39708352088928
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.39704298973083
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.3970181941986
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.3969967365265
Verifying property 3 with 1 instances.
##### Instance 192 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.03460181]], device='cuda:0') need to verify.
Model prediction is: tensor([-34.73874664, -37.11381531, -31.01442719, -33.60681915, -31.77618027,
        -33.71712112, -31.87929153, -33.22846222, -37.06167984, -36.88123322],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.03460181]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1354
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 588
Node /39 input 0: size torch.Size([250]) unstable 38
-----------------
# of unstable neurons: 1980
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00010609626770019531
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.034581661224365234
10 lb beta sum: 0.0, worst -0.034577131271362305
Time: prepare 0.0002    bound 0.1220    transfer 0.0001    finalize 0.0002    func 0.1225    
Accumulated time: func 0.1225    prepare 0.0002    bound 0.1220    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 230] 
split level 1: [/input-16, 64] 
split level 2: [/input-16, 225] 
split level 3: [/input-16, 126] 
split level 4: [/input-16, 145] 
split level 5: [/input-16, 208] 
split level 6: [/input-16, 73] 
split level 7: [/input-16, 154] 
split level 8: [/input-16, 31] 
split level 9: [/input-16, 157] 
split level 10: [/input-16, 77] 
split level 11: [/input-16, 190] 
split level 12: [/input-12, 5524] 
split level 13: [/input-12, 2917] 
split level 14: [/input-12, 6467] 
split level 15: [/input-12, 1828] 
split level 16: [/input-12, 7333] 
split level 17: [/input-12, 1826] 
split level 18: [/input-12, 7312] 
split level 19: [/input-12, 6897] 
split level 20: [/input-12, 884] 
split level 21: [/input-12, 7971] 
split level 22: [/input-12, 2577] 
split level 23: [/input-12, 2589] 
split level 24: [/input-12, 6250] 
split level 25: [/input-12, 876] 
split level 26: [/input-12, 2593] 
split level 27: [/input-12, 5349] 
split level 28: [/input-12, 6210] 
split level 29: [/input-12, 2347] 
split level 30: [/input-12, 2339] 
split level 31: [/input-12, 7660] 
split level 32: [/input-12, 3284] 
split level 33: [/input-12, 875] 
split level 34: [/input-12, 1188] 
split level 35: [/input-12, 7473] 
split level 36: [/input-12, 4574] 
split level 37: [/input-12, 3109] 
split level 38: [/input-12, 867] 
split level 39: [/input-12, 3421] 
split level 40: [/input-12, 7652] 
split level 41: [/input-12, 1565] 
split level 42: [/input-12, 5316] 
split level 43: [/input-16, 5] 
split level 44: [/input-12, 2908] 
split level 45: [/input-12, 2569] 
split level 46: [/input-12, 2353] 
split level 47: [/input-12, 2578] 
split level 48: [/input-12, 2346] 
split level 49: [/input-12, 2348] 
split level 50: [/input-12, 3274] 
split level 51: [/input-12, 883] 
split level 52: [/input-12, 2342] 
split level 53: [/input-12, 6765] 
split level 54: [/input-12, 5342] 
split level 55: [/input-12, 5331] 
split level 56: [/input-4, 3158] 
split level 57: [/input-12, 6469] 
split level 58: [/input-12, 4138] 
split level 59: [/input-12, 2362] 
split level 60: [/input-12, 4566] 
split level 61: [/input-12, 5536] 
split level 62: [/input-12, 3437] 
split level 63: [/input-12, 7636] 
split level 64: [/input-12, 7301] 
split level 65: [/input-12, 3195] 
split level 66: [/input-12, 7449] 
split level 67: [/input-12, 4889] 
split level 68: [/input-12, 2571] 
split level 69: [/input-12, 5704] 
split level 70: [/input-12, 4196] 
split level 71: [/input-12, 5357] 
split level 72: [/input-12, 2570] 
split level 73: [/input-12, 122] 
split level 74: [/input-12, 1363] 
split level 75: [/input-12, 5550] 
split level 76: [/input-12, 106] 
split level 77: [/input-12, 6225] 
split level 78: [/input-12, 5651] 
split level 79: [/input-12, 7309] 
split level 80: [/input-12, 7598] 
split level 81: [/input-4, 6299] 
split level 82: [/input-16, 51] 
split level 83: [/input-4, 6997] 
split level 84: [/input-4, 2183] 
split level 85: [/input-12, 1809] 
split level 86: [/input-4, 3210] 
split level 87: [/input-12, 5542] 
split level 88: [/input-12, 7899] 
split level 89: [/input-12, 5323] 
split level 90: [/input-4, 3237] 
split level 91: [/input-12, 3179] 
split level 92: [/input-12, 992] 
split level 93: [/input-4, 1351] 
split level 94: [/input-12, 7645] 
split level 95: [/input-4, 2184] 
split level 96: [/input-12, 2450] 
split level 97: [/input-12, 1202] 
split level 98: [/input-4, 3092] 
split level 99: [/input-12, 2361] 
split level 100: [/input-12, 5314] 
split level 101: [/input-12, 7647] 
split level 102: [/input-12, 5508] 
split level 103: [/input-12, 441] 
split level 104: [/input-12, 877] 
split level 105: [/input-12, 4878] 
split level 106: [/input-12, 871] 
split level 107: [/input-12, 2481] 
split level 108: [/input-4, 3212] 
split level 109: [/input-12, 2568] 
split level 110: [/input-4, 3139] 
split level 111: [/input-4, 3205] 
split level 112: [/input-12, 7466] 
split level 113: [/input-12, 4759] 
split level 114: [/input-12, 1811] 
split level 115: [/input-4, 7733] 
split level 116: [/input-4, 3125] 
split level 117: [/input-4, 6278] 
split level 118: [/input-4, 3204] 
split level 119: [/input-12, 6762] 
split level 120: [/input-12, 5820] 
split level 121: [/input-12, 2606] 
split level 122: [/input-4, 4710] 
split level 123: [/input-12, 2480] 
split level 124: [/input-12, 4107] 
split level 125: [/input-4, 3433] 
split level 126: [/input-12, 6740] 
split level 127: [/input-12, 1182] 
split level 128: [/input-4, 3174] 
split level 129: [/input-12, 6780] 
split level 130: [/input-4, 1432] 
split level 131: [/input-4, 7784] 
split level 132: [/input-4, 2186] 
split level 133: [/input-4, 1379] 
split level 134: [/input-12, 2287] 
split level 135: [/input-4, 5004] 
split level 136: [/input-4, 2200] 
split level 137: [/input-4, 4694] 
split level 138: [/input-12, 6813] 
split level 139: [/input-4, 2102] 
split level 140: [/input-12, 3957] 
split level 141: [/input-4, 1320] 
split level 142: [/input-12, 7908] 
split level 143: [/input-4, 7731] 
split level 144: [/input-4, 2170] 
split level 145: [/input-12, 4789] 
split level 146: [/input-12, 6778] 
split level 147: [/input-4, 5142] 
split level 148: [/input-4, 3106] 
split level 149: [/input-12, 2825] 
split level 150: [/input-4, 1304] 
split level 151: [/input-12, 2882] 
split level 152: [/input-12, 4751] 
split level 153: [/input-12, 6466] 
split level 154: [/input-12, 882] 
split level 155: [/input-4, 3173] 
split level 156: [/input-4, 3220] 
split level 157: [/input-4, 2663] 
split level 158: [/input-4, 4731] 
split level 159: [/input-4, 6282] 
split level 160: [/input-4, 6419] 
split level 161: [/input-12, 442] 
split level 162: [/input-4, 3269] 
split level 163: [/input-12, 6850] 
split level 164: [/input-12, 4907] 
split level 165: [/input-12, 5322] 
split level 166: [/input-12, 3289] 
split level 167: [/input-12, 5819] 
split level 168: [/input-12, 4925] 
split level 169: [/input-4, 7783] 
split level 170: [/input-4, 2274] 
split level 171: [/input-4, 3154] 
split level 172: [/input-4, 6182] 
split level 173: [/input-12, 5818] 
split level 174: [/input-12, 2031] 
split level 175: [/input-12, 6781] 
split level 176: [/input-4, 1434] 
split level 177: [/input-4, 2664] 
split level 178: [/input-12, 4888] 
split level 179: [/input-12, 3180] 
split level 180: [/input-12, 2295] 
split level 181: [/input-12, 3403] 
split level 182: [/input-12, 6779] 
split level 183: [/input-4, 4761] 
split level 184: [/input-4, 2103] 
split level 185: [/input-12, 3436] 
split level 186: [/input-4, 4201] 
split level 187: [/input-4, 4200] 
split level 188: [/input-12, 6216] 
split level 189: [/input-4, 3283] 
split level 190: [/input-4, 4759] 
split level 191: [/input-4, 7747] 
split level 192: [/input-4, 4626] 
split level 193: [/input-4, 4760] 
split level 194: [/input-4, 3385] 
split level 195: [/input-12, 5652] 
split level 196: [/input-4, 1155] 
split level 197: [/input-4, 4708] 
split level 198: [/input-12, 6777] 
split level 199: [/input-4, 4646] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03456461429595947
10 lb beta sum: 0.0, worst -0.034565091133117676
Time: prepare 0.0116    bound 0.1289    transfer 0.0015    finalize 0.0089    func 0.1535    
Accumulated time: func 0.2760    prepare 0.0215    bound 0.2509    transfer 0.0016    finalize 0.0091    
all_split False
======================Cut inference begins======================
max lb tensor(0.11910212) min lb tensor(-0.03455615)
Number of Verified Splits: 16 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.010897159576416016 
BICCOS Cumulative time: 0.010897159576416016
Preprocessing time: 0.009910106658935547 Inference time: 0.0006406307220458984 Add cuts time: 0.00019049644470214844 Cut analysis time: 0.00015592575073242188
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.7644    set_bounds 0.0087    solve 0.1536    add 0.0102    
Accumulated time: pickout 0.0003    decision 0.7644    set_bounds 0.0087    solve 0.1536    add 0.0102    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([230]), tensor([-1.]), tensor([0]), tensor([0.12007213]), tensor([0]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([230]), tensor([1.]), tensor([0]), tensor([0.12007213]), tensor([0]))}
Shallow branching resets to n domains:  2
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.013152599334716797

all verified at 0th iter
Time: prepare 0.0003    bound 0.0064    transfer 0.0001    finalize 0.0003    func 0.0071    
Accumulated time: func 0.2832    prepare 0.0218    bound 0.2573    transfer 0.0018    finalize 0.0093    
After pruning, left:  0

Back to Regular BaB


Properties batch 4, size 1
Remaining timeout: 197.09674048423767
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 197.09664845466614
Verifying property 5 with 1 instances.
##### Instance 192 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.42632216]], device='cuda:0') need to verify.
Model prediction is: tensor([-34.73874664, -37.11381531, -31.01442719, -33.60681915, -31.77618027,
        -33.71712112, -31.87929153, -33.22846222, -37.06167984, -36.88123322],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.42632216]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1354
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 588
Node /39 input 0: size torch.Size([250]) unstable 38
-----------------
# of unstable neurons: 1980
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 0.00010395050048828125
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4263002872467041
10 lb beta sum: 0.0, worst -0.4263046383857727
Time: prepare 0.0002    bound 0.1218    transfer 0.0001    finalize 0.0002    func 0.1224    
Accumulated time: func 0.1224    prepare 0.0002    bound 0.1218    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 37] 
split level 1: [/input-16, 103] 
split level 2: [/input-16, 23] 
split level 3: [/input-16, 190] 
split level 4: [/input-16, 208] 
split level 5: [/input-16, 43] 
split level 6: [/input-16, 225] 
split level 7: [/input-16, 157] 
split level 8: [/input-16, 64] 
split level 9: [/input-16, 77] 
split level 10: [/input-16, 51] 
split level 11: [/input-16, 235] 
split level 12: [/input-16, 178] 
split level 13: [/input-16, 160] 
split level 14: [/input-12, 884] 
split level 15: [/input-16, 145] 
split level 16: [/input-16, 78] 
split level 17: [/input-12, 6897] 
split level 18: [/input-12, 7312] 
split level 19: [/input-16, 247] 
split level 20: [/input-12, 1828] 
split level 21: [/input-12, 2480] 
split level 22: [/input-12, 2481] 
split level 23: [/input-12, 3346] 
split level 24: [/input-12, 2348] 
split level 25: [/input-12, 1809] 
split level 26: [/input-12, 3328] 
split level 27: [/input-12, 2361] 
split level 28: [/input-12, 2569] 
split level 29: [/input-12, 2577] 
split level 30: [/input-12, 877] 
split level 31: [/input-12, 3274] 
split level 32: [/input-12, 3354] 
split level 33: [/input-12, 2368] 
split level 34: [/input-12, 5652] 
split level 35: [/input-12, 5651] 
split level 36: [/input-12, 7333] 
split level 37: [/input-12, 3356] 
split level 38: [/input-12, 3942] 
split level 39: [/input-12, 5659] 
split level 40: [/input-12, 3805] 
split level 41: [/input-12, 3284] 
split level 42: [/input-12, 3289] 
split level 43: [/input-12, 2347] 
split level 44: [/input-12, 2353] 
split level 45: [/input-12, 2029] 
split level 46: [/input-12, 4574] 
split level 47: [/input-12, 4889] 
split level 48: [/input-12, 2578] 
split level 49: [/input-12, 442] 
split level 50: [/input-4, 6997] 
split level 51: [/input-12, 1418] 
split level 52: [/input-12, 2570] 
split level 53: [/input-12, 7449] 
split level 54: [/input-12, 7466] 
split level 55: [/input-12, 7473] 
split level 56: [/input-12, 3957] 
split level 57: [/input-12, 2022] 
split level 58: [/input-12, 441] 
split level 59: [/input-12, 7309] 
split level 60: [/input-12, 1077] 
split level 61: [/input-12, 7638] 
split level 62: [/input-12, 4759] 
split level 63: [/input-12, 2362] 
split level 64: [/input-12, 789] 
split level 65: [/input-12, 871] 
split level 66: [/input-12, 6210] 
split level 67: [/input-12, 2593] 
split level 68: [/input-12, 2571] 
split level 69: [/input-12, 2917] 
split level 70: [/input-4, 5739] 
split level 71: [/input-12, 7308] 
split level 72: [/input-12, 7301] 
split level 73: [/input-4, 3237] 
split level 74: [/input-4, 3266] 
split level 75: [/input-12, 4874] 
split level 76: [/input-16, 132] 
split level 77: [/input-4, 3205] 
split level 78: [/input-12, 5414] 
split level 79: [/input-12, 4566] 
split level 80: [/input-12, 4888] 
split level 81: [/input-12, 5316] 
split level 82: [/input-12, 3109] 
split level 83: [/input-12, 2393] 
split level 84: [/input-12, 4751] 
split level 85: [/input-12, 2287] 
split level 86: [/input-4, 3125] 
split level 87: [/input-12, 870] 
split level 88: [/input-12, 7645] 
split level 89: [/input-12, 6467] 
split level 90: [/input-4, 4440] 
split level 91: [/input-12, 883] 
split level 92: [/input-12, 7908] 
split level 93: [/input-12, 876] 
split level 94: [/input-4, 5685] 
split level 95: [/input-4, 4433] 
split level 96: [/input-4, 7065] 
split level 97: [/input-4, 3139] 
split level 98: [/input-12, 5421] 
split level 99: [/input-12, 7647] 
split level 100: [/input-4, 3111] 
split level 101: [/input-4, 3250] 
split level 102: [/input-12, 6850] 
split level 103: [/input-12, 2547] 
split level 104: [/input-12, 992] 
split level 105: [/input-12, 2536] 
split level 106: [/input-4, 4455] 
split level 107: [/input-12, 2518] 
split level 108: [/input-4, 7731] 
split level 109: [/input-12, 3175] 
split level 110: [/input-12, 2038] 
split level 111: [/input-4, 3028] 
split level 112: [/input-4, 3283] 
split level 113: [/input-4, 8067] 
split level 114: [/input-4, 3204] 
split level 115: [/input-12, 6765] 
split level 116: [/input-4, 3225] 
split level 117: [/input-12, 2015] 
split level 118: [/input-4, 7733] 
split level 119: [/input-12, 5738] 
split level 120: [/input-4, 2274] 
split level 121: [/input-12, 7646] 
split level 122: [/input-12, 5201] 
split level 123: [/input-12, 3085] 
split level 124: [/input-4, 3143] 
split level 125: [/input-12, 1188] 
split level 126: [/input-12, 4878] 
split level 127: [/input-4, 4432] 
split level 128: [/input-12, 2324] 
split level 129: [/input-12, 4196] 
split level 130: [/input-12, 5900] 
split level 131: [/input-12, 2882] 
split level 132: [/input-12, 3198] 
split level 133: [/input-12, 6740] 
split level 134: [/input-12, 7899] 
split level 135: [/input-4, 7098] 
split level 136: [/input-12, 4740] 
split level 137: [/input-12, 3811] 
split level 138: [/input-12, 7636] 
split level 139: [/input-4, 5664] 
split level 140: [/input-12, 3296] 
split level 141: [/input-4, 4960] 
split level 142: [/input-4, 3269] 
split level 143: [/input-4, 3210] 
split level 144: [/input-4, 5537] 
split level 145: [/input-4, 66] 
split level 146: [/input-4, 4216] 
split level 147: [/input-12, 2568] 
split level 148: [/input-12, 6469] 
split level 149: [/input-12, 3951] 
split level 150: [/input-12, 1680] 
split level 151: [/input-12, 6473] 
split level 152: [/input-4, 5048] 
split level 153: [/input-4, 3220] 
split level 154: [/input-12, 5685] 
split level 155: [/input-12, 2295] 
split level 156: [/input-4, 1625] 
split level 157: [/input-4, 2739] 
split level 158: [/input-12, 5819] 
split level 159: [/input-12, 4925] 
split level 160: [/input-4, 4438] 
split level 161: [/input-12, 5357] 
split level 162: [/input-4, 6305] 
split level 163: [/input-4, 4759] 
split level 164: [/input-4, 4200] 
split level 165: [/input-4, 3174] 
split level 166: [/input-4, 4760] 
split level 167: [/input-4, 2772] 
split level 168: [/input-12, 5331] 
split level 169: [/input-4, 1665] 
split level 170: [/input-4, 7864] 
split level 171: [/input-4, 7878] 
split level 172: [/input-4, 6280] 
split level 173: [/input-4, 4400] 
split level 174: [/input-4, 1146] 
split level 175: [/input-4, 7875] 
split level 176: [/input-12, 5323] 
split level 177: [/input-4, 4713] 
split level 178: [/input-4, 4786] 
split level 179: [/input-4, 4753] 
split level 180: [/input-4, 8051] 
split level 181: [/input-12, 5406] 
split level 182: [/input-12, 7630] 
split level 183: [/input-4, 2931] 
split level 184: [/input-12, 6758] 
split level 185: [/input-4, 4722] 
split level 186: [/input-4, 2965] 
split level 187: [/input-4, 2948] 
split level 188: [/input-12, 2339] 
split level 189: [/input-4, 3385] 
split level 190: [/input-12, 5234] 
split level 191: [/input-4, 4754] 
split level 192: [/input-4, 4761] 
split level 193: [/input-4, 3697] 
split level 194: [/input-4, 4676] 
split level 195: [/input-4, 2248] 
split level 196: [/input-4, 1659] 
split level 197: [/input-12, 7652] 
split level 198: [/input-4, 5009] 
split level 199: [/input-12, 3162] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4260927438735962
10 lb beta sum: 0.0, worst -0.42609381675720215
Time: prepare 0.0116    bound 0.1340    transfer 0.0015    finalize 0.0058    func 0.1555    
Accumulated time: func 0.2779    prepare 0.0216    bound 0.2558    transfer 0.0016    finalize 0.0060    
all_split False
======================Cut inference begins======================
max lb tensor(-0.00982980) min lb tensor(-0.42608690)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.01012873649597168 
BICCOS Cumulative time: 0.01012873649597168
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.41770 (1), -0.41766 (1), -0.41740 (1), -0.41735 (1), -0.41732 (1), -0.41731 (1), -0.41698 (1), -0.41644 (1), -0.41634 (1), -0.41633 (1), -0.41614 (1), -0.41563 (1), -0.41555 (1), -0.41466 (1), -0.41461 (1), -0.41447 (1), -0.41440 (1), -0.41432 (1), -0.41377 (1), -0.41361 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7645    set_bounds 0.0098    solve 0.1556    add 0.0798    
Accumulated time: pickout 0.0003    decision 0.7645    set_bounds 0.0098    solve 0.1556    add 0.0798    
Current (lb-rhs): -0.41769951581954956
50 domains visited
Cumulative time: 1.1622722148895264

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 103] [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 37] 
split level 1: [/input-16, 190] [/input-16, 23] [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 103] [/input-16, 103] 
split level 2: [/input-16, 23] [/input-16, 190] [/input-16, 23] [/input-16, 190] [/input-16, 23] [/input-16, 23] [/input-16, 23] [/input-16, 23] [/input-16, 23] [/input-16, 23] 
split level 3: [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 190] [/input-16, 208] [/input-16, 190] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3910386562347412
10 lb beta sum: 0.0, worst -0.3909503221511841
Time: prepare 0.0119    bound 0.1292    transfer 0.0015    finalize 0.0051    func 0.1504    
Accumulated time: func 0.4283    prepare 0.0338    bound 0.3851    transfer 0.0031    finalize 0.0111    
all_split False
======================Cut inference begins======================
max lb tensor(0.25344408) min lb tensor(-0.39092529)
Number of Verified Splits: 59 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 10
#cuts >= 20: 0
BICCOS time: 0.015819072723388672 
BICCOS Cumulative time: 0.02594780921936035
Preprocessing time: 0.011888504028320312 Inference time: 0.0023543834686279297 Add cuts time: 0.0011854171752929688 Cut analysis time: 0.00039076805114746094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14821 (2), -0.14394 (2), -0.13564 (2), -0.12655 (2), -0.11810 (2), -0.07372 (2), -0.07357 (2), -0.07255 (2), -0.07246 (2), -0.07242 (2), -0.07122 (2), -0.07119 (2), -0.07090 (2), -0.07052 (2), -0.07045 (2), -0.07005 (2), -0.06940 (2), -0.06881 (2), -0.06844 (2), -0.06828 (2), 
Length of domains: 50
Time: pickout 0.0007    decision 0.0247    set_bounds 0.0134    solve 0.1505    add 0.0928    
Accumulated time: pickout 0.0010    decision 0.7893    set_bounds 0.0232    solve 0.3061    add 0.1726    
Current (lb-rhs): -0.14821112155914307
100 domains visited
Cumulative time: 1.460461139678955

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 23] [/input-16, 37] [/input-16, 37] 
split level 1: [/input-16, 190] [/input-16, 23] [/input-16, 23] [/input-16, 23] [/input-16, 23] [/input-16, 190] [/input-16, 23] [/input-16, 190] [/input-16, 23] [/input-16, 103] 
split level 2: [/input-16, 208] [/input-16, 190] [/input-16, 190] [/input-16, 190] [/input-16, 190] [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 208] [/input-16, 190] 
split level 3: [/input-16, 43] [/input-16, 208] [/input-16, 43] [/input-16, 208] [/input-16, 43] [/input-16, 43] [/input-16, 43] [/input-16, 43] [/input-16, 43] [/input-16, 208] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11862611770629883
10 lb beta sum: 0.1360263228416443, worst -0.09085631370544434
Time: prepare 0.0067    bound 0.1510    transfer 0.0015    finalize 0.0062    func 0.1681    
Accumulated time: func 0.5964    prepare 0.0408    bound 0.5361    transfer 0.0047    finalize 0.0173    
all_split False
======================Cut inference begins======================
max lb tensor(0.31115961) min lb tensor(-0.04793209)
Number of Verified Splits: 389 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 7
#cuts >= 20: 0
BICCOS time: 0.03598284721374512 
BICCOS Cumulative time: 0.06193065643310547
Preprocessing time: 0.011751413345336914 Inference time: 0.01672053337097168 Add cuts time: 0.0071904659271240234 Cut analysis time: 0.0003204345703125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04793 (3), -0.04785 (3), -0.04766 (3), -0.04562 (3), -0.04560 (3), -0.04557 (3), -0.01750 (3), -0.01516 (3), 
Length of domains: 8
Time: pickout 0.0007    decision 0.0247    set_bounds 0.0154    solve 0.1682    add 0.1153    
Accumulated time: pickout 0.0017    decision 0.8140    set_bounds 0.0386    solve 0.4742    add 0.2879    
Current (lb-rhs): -0.04793208837509155
108 domains visited
Cumulative time: 1.820950984954834

Shallow-BaB round 4
batch: 8
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 37] [/input-16, 103] [/input-16, 103] [/input-16, 37] [/input-16, 37] 
split level 1: [/input-16, 103] [/input-16, 103] [/input-16, 190] [/input-16, 103] [/input-16, 190] [/input-16, 190] [/input-16, 103] [/input-16, 190] 
split level 2: [/input-16, 190] [/input-16, 190] [/input-16, 43] [/input-16, 43] [/input-16, 43] [/input-16, 43] [/input-16, 43] [/input-16, 43] 
split level 3: [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 225] 
split level 4: [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] 
split level 5: [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 157] [/input-16, 157] 
split level 6: [/input-16, 77] [/input-16, 77] [/input-16, 77] [/input-16, 77] [/input-16, 77] [/input-16, 77] [/input-16, 77] [/input-16, 77] 
split level 7: [/input-16, 51] [/input-16, 51] [/input-16, 51] [/input-16, 51] [/input-16, 51] [/input-16, 51] [/input-16, 51] [/input-16, 51] 
split level 8: [/input-16, 178] [/input-16, 178] [/input-16, 178] [/input-16, 178] [/input-16, 235] [/input-16, 178] [/input-16, 178] [/input-16, 178] 
split level 9: [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 160] [/input-16, 178] [/input-16, 235] [/input-16, 160] [/input-16, 160] 
split level 10: [/input-16, 235] [/input-16, 235] [/input-16, 235] [/input-16, 235] [/input-16, 160] [/input-16, 160] [/input-16, 235] [/input-16, 235] 
split level 11: [/input-12, 6897] [/input-12, 6897] [/input-12, 6897] [/input-12, 6897] [/input-12, 6897] [/input-12, 6897] [/input-12, 6897] [/input-12, 6897] 
split level 12: [/input-16, 78] [/input-16, 78] [/input-12, 5651] [/input-12, 2480] [/input-12, 5651] [/input-12, 5651] [/input-12, 2480] [/input-12, 5651] 
split level 13: [/input-12, 5651] [/input-12, 5651] [/input-12, 2480] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-12, 2480] 
split level 14: [/input-12, 2480] [/input-12, 2480] [/input-16, 78] [/input-12, 5651] [/input-12, 2480] [/input-12, 2480] [/input-12, 5651] [/input-16, 78] 
split level 15: [/input-12, 5652] [/input-12, 5652] [/input-12, 5652] [/input-12, 1828] [/input-12, 1828] [/input-12, 1828] [/input-12, 1828] [/input-12, 5652] 
split level 16: [/input-12, 1828] [/input-12, 1828] [/input-12, 1828] [/input-12, 5652] [/input-12, 5652] [/input-12, 5652] [/input-12, 5652] [/input-12, 1828] 
split level 17: [/input-16, 247] [/input-16, 247] [/input-16, 247] [/input-16, 247] [/input-16, 247] [/input-16, 247] [/input-16, 247] [/input-16, 247] 
split level 18: [/input-12, 3805] [/input-12, 3805] [/input-12, 877] [/input-12, 3805] [/input-12, 877] [/input-12, 877] [/input-12, 3805] [/input-12, 3805] 
split level 19: [/input-12, 877] [/input-12, 877] [/input-12, 3805] [/input-12, 877] [/input-12, 3805] [/input-12, 3805] [/input-12, 877] [/input-12, 877] 
split level 20: [/input-12, 7333] [/input-12, 870] [/input-12, 870] [/input-12, 7333] [/input-12, 7333] [/input-12, 7333] [/input-12, 870] [/input-12, 870] 
split level 21: [/input-12, 3274] [/input-12, 7333] [/input-12, 3274] [/input-12, 870] [/input-12, 3274] [/input-12, 3274] [/input-12, 7333] [/input-12, 7333] 
split level 22: [/input-12, 870] [/input-12, 3274] [/input-12, 7333] [/input-12, 3274] [/input-12, 2022] [/input-12, 870] [/input-12, 3274] [/input-12, 3274] 
split level 23: [/input-12, 876] [/input-12, 5659] [/input-12, 876] [/input-12, 876] [/input-12, 870] [/input-12, 2022] [/input-12, 876] [/input-12, 876] 
split level 24: [/input-12, 2022] [/input-12, 876] [/input-12, 2022] [/input-12, 2022] [/input-12, 876] [/input-12, 876] [/input-12, 2022] [/input-12, 2022] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1121680736541748
10 lb beta sum: 0.685808539390564, worst -0.20664721727371216
Time: prepare 0.0068    bound 0.1511    transfer 0.0016    finalize 0.0065    func 0.1686    
Accumulated time: func 0.7650    prepare 0.0488    bound 0.6872    transfer 0.0062    finalize 0.0238    
all_split False
======================Cut inference begins======================
max lb tensor(0.20814317) min lb tensor(-0.01062131)
Number of Verified Splits: 126 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 7
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.020778656005859375 
BICCOS Cumulative time: 0.08270931243896484
Preprocessing time: 0.011513948440551758 Inference time: 0.006821632385253906 Add cuts time: 0.0020246505737304688 Cut analysis time: 0.0004184246063232422
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0005    decision 0.1063    set_bounds 0.0133    solve 0.1687    add 0.0241    
Accumulated time: pickout 0.0022    decision 0.9203    set_bounds 0.0519    solve 0.6429    add 0.3120    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
108 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([208, 103,  37]), tensor([-1., -1., -1.]), tensor([0, 0, 0]), tensor([-1.26703856e+34,  3.33295882e-01,  3.09431851e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([208, 103,  37]), tensor([-1., -1.,  1.]), tensor([0, 0, 0]), tensor([-1.26703856e+34,  3.33295882e-01,  2.92466152e-02]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([208, 103]), tensor([-1.,  1.]), tensor([0, 0]), tensor([-1.26703856e+34,  3.71382684e-02]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([208,  23,  37]), tensor([ 1., -1., -1.]), tensor([0, 0, 0]), tensor([-1.26703856e+34,  1.84146866e-01,  2.71150649e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([208,  23,  37, 103]), tensor([ 1., -1.,  1., -1.]), tensor([0, 0, 0, 0]), tensor([-1.26703856e+34,  1.84146866e-01,  1.00550607e-01,  2.11279884e-01]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([208,  23,  37, 103]), tensor([ 1., -1.,  1.,  1.]), tensor([0, 0, 0, 0]), tensor([-1.26703856e+34,  1.84146866e-01,  1.00550607e-01,  3.71527523e-02]), tensor([0, 1, 2, 3]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([208,  23]), tensor([1., 1.]), tensor([0, 0]), tensor([-1.26703856e+34,  6.04656786e-02]), tensor([0, 1]))}
Shallow branching resets to n domains:  7
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3167998790740967
10 lb beta sum: 0.3056579530239105, worst -0.28838568925857544
Time: prepare 0.0004    bound 0.1495    transfer 0.0002    finalize 0.0004    func 0.1506    
Accumulated time: func 0.9155    prepare 0.0492    bound 0.8368    transfer 0.0064    finalize 0.0242    
After pruning, left:  3

Back to Regular BaB

BaB round 1
batch: 3
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 37] [/input-16, 190] [/input-16, 37] 
split level 1: [/input-16, 23] [/input-16, 43] [/input-16, 103] 
split level 2: [/input-16, 190] [/input-16, 225] [/input-16, 190] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7909512519836426, worst -0.18978142738342285
10 lb beta sum: 0.7953846454620361, worst -0.1895660161972046
Time: prepare 0.0012    bound 0.1489    transfer 0.0004    finalize 0.0006    func 0.1513    
Accumulated time: func 1.0668    prepare 0.0506    bound 0.9856    transfer 0.0067    finalize 0.0248    
all_split False
======================Cut inference begins======================
max lb tensor(0.79553682) min lb tensor(-0.18949425)
Number of Verified Splits: 19 of 24
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.8326136469841003, worst -1.0436782836914062
10 lb beta sum: 0.693763256072998, worst -0.3013978600502014
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 7
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.16278910636901855 
BICCOS Cumulative time: 0.2454984188079834
Preprocessing time: 0.000934600830078125 Inference time: 0.16090059280395508 Add cuts time: 0.0005369186401367188 Cut analysis time: 0.0004169940948486328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18949 (3), -0.17277 (3), -0.04113 (3), -0.03130 (3), -0.00482 (3), 
Length of domains: 5
Time: pickout 0.0004    decision 0.0129    set_bounds 0.0015    solve 0.1513    add 0.0009    
Accumulated time: pickout 0.0025    decision 0.9332    set_bounds 0.0534    solve 0.7942    add 0.3130    
Current (lb-rhs): -0.18949425220489502
113 domains visited
Cumulative time: 2.6538360118865967

BaB round 2
batch: 5
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 43] [/input-16, 43] [/input-16, 43] [/input-16, 64] [/input-16, 43] 
split level 1: [/input-16, 225] [/input-16, 225] [/input-16, 225] [/input-16, 157] [/input-16, 225] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6590926051139832, worst -0.14829117059707642
10 lb beta sum: 0.6590926051139832, worst -0.14809894561767578
Time: prepare 0.0010    bound 0.1481    transfer 0.0004    finalize 0.0006    func 0.1503    
Accumulated time: func 1.2171    prepare 0.0518    bound 1.1338    transfer 0.0071    finalize 0.0255    
all_split False
======================Cut inference begins======================
max lb tensor(0.14109308) min lb tensor(-0.14802426)
Number of Verified Splits: 13 of 20
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.6232926249504089, worst -1.0392858982086182
10 lb beta sum: 0.6634907722473145, worst -0.06979262828826904
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 7
#cuts 4-6: 7
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.15880417823791504 
BICCOS Cumulative time: 0.40430259704589844
Preprocessing time: 0.0008940696716308594 Inference time: 0.15671133995056152 Add cuts time: 0.0005869865417480469 Cut analysis time: 0.0006117820739746094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14802 (5), -0.13188 (5), -0.07699 (5), -0.05483 (5), -0.05036 (5), -0.02554 (5), -0.01184 (5), 
Length of domains: 7
Time: pickout 0.0004    decision 0.0130    set_bounds 0.0013    solve 0.1504    add 0.0012    
Accumulated time: pickout 0.0030    decision 0.9462    set_bounds 0.0547    solve 0.9445    add 0.3141    
Current (lb-rhs): -0.14802426099777222
120 domains visited
Cumulative time: 2.9791643619537354

BaB round 3
batch: 7
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 157] [/input-16, 64] [/input-16, 64] [/input-16, 157] [/input-16, 64] [/input-16, 157] [/input-16, 64] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14092719554901123
10 lb beta sum: 0.0031053167767822742, worst -0.14085352420806885
Time: prepare 0.0004    bound 0.1468    transfer 0.0002    finalize 0.0004    func 0.1480    
Accumulated time: func 1.3651    prepare 0.0524    bound 1.2806    transfer 0.0073    finalize 0.0259    
all_split False
======================Cut inference begins======================
max lb tensor(0.04473245) min lb tensor(-0.14082265)
Number of Verified Splits: 5 of 14
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20502352714538574
10 lb beta sum: 0.17018039524555206, worst -0.0961068868637085
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 7
#cuts 4-6: 7
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.14960575103759766 
BICCOS Cumulative time: 0.5539083480834961
Preprocessing time: 0.0007624626159667969 Inference time: 0.14783954620361328 Add cuts time: 0.00036454200744628906 Cut analysis time: 0.0006392002105712891
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14082 (6), -0.12542 (6), -0.06781 (6), -0.06777 (6), -0.04610 (6), -0.04240 (6), -0.03455 (6), -0.02007 (6), -0.01684 (6), 
Length of domains: 9
Time: pickout 0.0004    decision 0.0131    set_bounds 0.0009    solve 0.1480    add 0.0010    
Accumulated time: pickout 0.0034    decision 0.9593    set_bounds 0.0556    solve 1.0926    add 0.3151    
Current (lb-rhs): -0.1408226490020752
129 domains visited
Cumulative time: 3.292468786239624

BaB round 4
batch: 9
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 64] [/input-16, 157] [/input-16, 64] [/input-16, 157] [/input-16, 64] [/input-16, 157] [/input-16, 64] [/input-16, 64] [/input-16, 157] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1339794397354126
10 lb beta sum: 0.0, worst -0.13391923904418945
Time: prepare 0.0005    bound 0.1477    transfer 0.0002    finalize 0.0005    func 0.1491    
Accumulated time: func 1.5142    prepare 0.0531    bound 1.4283    transfer 0.0075    finalize 0.0264    
all_split False
======================Cut inference begins======================
max lb tensor(0.04270411) min lb tensor(-0.13389575)
Number of Verified Splits: 6 of 18
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2664303779602051
10 lb beta sum: 0.19810664653778076, worst -0.12003222107887268
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 7
#cuts 4-6: 7
#cuts 7-9: 4
#cuts >= 20: 0
BICCOS time: 0.15086746215820312 
BICCOS Cumulative time: 0.7047758102416992
Preprocessing time: 0.0008275508880615234 Inference time: 0.1487886905670166 Add cuts time: 0.000469207763671875 Cut analysis time: 0.000782012939453125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13390 (7), -0.11813 (7), -0.06726 (7), -0.06015 (7), -0.05956 (7), -0.03943 (7), -0.03779 (7), -0.03360 (7), -0.02592 (7), -0.01603 (7), -0.00885 (7), -0.00825 (7), 
Length of domains: 12
Time: pickout 0.0004    decision 0.0131    set_bounds 0.0011    solve 0.1491    add 0.0012    
Accumulated time: pickout 0.0039    decision 0.9724    set_bounds 0.0567    solve 1.2416    add 0.3164    
Current (lb-rhs): -0.13389575481414795
141 domains visited
Cumulative time: 3.608427047729492

BaB round 5
batch: 12
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 51] [/input-16, 51] [/input-16, 51] [/input-16, 51] [/input-16, 51] [/input-16, 51] [/input-16, 51] [/input-16, 51] [/input-16, 51] [/input-16, 51] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12408411502838135
10 lb beta sum: 0.0, worst -0.12403678894042969
Time: prepare 0.0006    bound 0.1475    transfer 0.0002    finalize 0.0006    func 0.1492    
Accumulated time: func 1.6633    prepare 0.0539    bound 1.5758    transfer 0.0077    finalize 0.0270    
all_split False
======================Cut inference begins======================
max lb tensor(0.00904894) min lb tensor(-0.12401795)
Number of Verified Splits: 4 of 24
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2270653247833252
10 lb beta sum: 0.6419631242752075, worst -0.09732753038406372
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 7
#cuts 4-6: 8
#cuts 7-9: 4
#cuts >= 20: 0
BICCOS time: 0.15309691429138184 
BICCOS Cumulative time: 0.857872724533081
Preprocessing time: 0.0009794235229492188 Inference time: 0.1503455638885498 Add cuts time: 0.0009367465972900391 Cut analysis time: 0.0008351802825927734
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12402 (8), -0.11588 (8), -0.10810 (8), -0.10236 (8), -0.05532 (8), -0.05142 (8), -0.04966 (8), -0.04283 (8), -0.03784 (8), -0.03043 (8), -0.03021 (8), -0.02836 (8), -0.02368 (8), -0.01492 (8), -0.01486 (8), -0.01309 (8), -0.01112 (8), -0.00633 (8), -0.00268 (8), -0.00039 (8), 
Length of domains: 20
Time: pickout 0.0005    decision 0.0132    set_bounds 0.0013    solve 0.1492    add 0.0015    
Accumulated time: pickout 0.0043    decision 0.9857    set_bounds 0.0580    solve 1.3908    add 0.3179    
Current (lb-rhs): -0.12401795387268066
161 domains visited
Cumulative time: 3.927457094192505

BaB round 6
batch: 20
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 235] [/input-16, 178] [/input-16, 235] [/input-16, 178] [/input-16, 235] [/input-16, 178] [/input-16, 178] [/input-16, 178] [/input-16, 178] [/input-16, 178] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11933636665344238
10 lb beta sum: 0.0, worst -0.11930787563323975
Time: prepare 0.0008    bound 0.1485    transfer 0.0003    finalize 0.0011    func 0.1512    
Accumulated time: func 1.8145    prepare 0.0549    bound 1.7243    transfer 0.0080    finalize 0.0281    
all_split False
======================Cut inference begins======================
max lb tensor(0.05840085) min lb tensor(-0.11929202)
Number of Verified Splits: 13 of 40
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 13
#cuts 4-6: 11
#cuts 7-9: 4
#cuts >= 20: 0
BICCOS time: 0.00509190559387207 
BICCOS Cumulative time: 0.8629646301269531
Preprocessing time: 0.0014777183532714844 Inference time: 0.0013086795806884766 Add cuts time: 0.0012090206146240234 Cut analysis time: 0.001096487045288086
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11929 (9), -0.10705 (9), -0.10199 (9), -0.10081 (9), -0.09487 (9), -0.08415 (9), -0.08109 (9), -0.05845 (9), -0.04589 (9), -0.04434 (9), -0.04387 (9), -0.04064 (9), -0.03227 (9), -0.03092 (9), -0.02780 (9), -0.02625 (9), -0.02457 (9), -0.02353 (9), -0.02316 (9), -0.02168 (9), 
Length of domains: 27
Time: pickout 0.0005    decision 0.0138    set_bounds 0.0020    solve 0.1512    add 0.0022    
Accumulated time: pickout 0.0048    decision 0.9995    set_bounds 0.0600    solve 1.5420    add 0.3201    
Current (lb-rhs): -0.11929202079772949
188 domains visited
Cumulative time: 4.102453947067261

BaB round 7
batch: 27
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 235] [/input-16, 160] [/input-16, 235] [/input-16, 235] [/input-16, 160] [/input-16, 235] [/input-16, 235] [/input-16, 235] [/input-16, 235] [/input-16, 235] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11041486263275146
10 lb beta sum: 0.0129201989620924, worst -0.11036205291748047
Time: prepare 0.0010    bound 0.1511    transfer 0.0004    finalize 0.0013    func 0.1543    
Accumulated time: func 1.9688    prepare 0.0561    bound 1.8754    transfer 0.0084    finalize 0.0294    
all_split False
======================Cut inference begins======================
max lb tensor(0.04004525) min lb tensor(-0.11035466)
Number of Verified Splits: 22 of 54
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 19
#cuts 4-6: 8
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.006763935089111328 
BICCOS Cumulative time: 0.8697285652160645
Preprocessing time: 0.0018775463104248047 Inference time: 0.0024199485778808594 Add cuts time: 0.00145721435546875 Cut analysis time: 0.001009225845336914
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11035 (10), -0.10611 (10), -0.10233 (10), -0.09671 (10), -0.09580 (10), -0.08981 (10), -0.07914 (10), -0.07613 (10), -0.04825 (10), -0.04758 (10), -0.04747 (10), -0.04038 (10), -0.03885 (10), -0.03802 (10), -0.03733 (10), -0.03653 (10), -0.03615 (10), -0.03448 (10), -0.02745 (10), -0.02667 (10), 
Length of domains: 32
Time: pickout 0.0006    decision 0.0165    set_bounds 0.0026    solve 0.1543    add 0.0026    
Accumulated time: pickout 0.0054    decision 1.0160    set_bounds 0.0625    solve 1.6964    add 0.3227    
Current (lb-rhs): -0.11035466194152832
220 domains visited
Cumulative time: 4.285985231399536

BaB round 8
batch: 32
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 178] [/input-16, 160] [/input-16, 178] [/input-16, 160] [/input-16, 160] [/input-16, 178] [/input-16, 160] [/input-16, 77] [/input-16, 178] [/input-16, 160] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10261571407318115
10 lb beta sum: 0.0046372306533157825, worst -0.10259020328521729
Time: prepare 0.0012    bound 0.1484    transfer 0.0004    finalize 0.0013    func 0.1518    
Accumulated time: func 2.1206    prepare 0.0575    bound 2.0238    transfer 0.0088    finalize 0.0307    
all_split False
======================Cut inference begins======================
max lb tensor(0.01692418) min lb tensor(-0.10258758)
Number of Verified Splits: 11 of 64
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 17
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.00497126579284668 
BICCOS Cumulative time: 0.8746998310089111
Preprocessing time: 0.0021457672119140625 Inference time: 0.0012242794036865234 Add cuts time: 0.0008091926574707031 Cut analysis time: 0.0007920265197753906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10259 (11), -0.09831 (11), -0.09452 (11), -0.09390 (11), -0.08967 (11), -0.08887 (11), -0.08719 (11), -0.08637 (11), -0.08128 (11), -0.08078 (11), -0.08023 (11), -0.07266 (11), -0.07053 (11), -0.06746 (11), -0.06392 (11), -0.06143 (11), -0.03945 (11), -0.03917 (11), -0.03804 (11), -0.03706 (11), 
Length of domains: 53
Time: pickout 0.0006    decision 0.0143    set_bounds 0.0030    solve 0.1518    add 0.0019    
Accumulated time: pickout 0.0060    decision 1.0303    set_bounds 0.0655    solve 1.8482    add 0.3246    
Current (lb-rhs): -0.10258758068084717
273 domains visited
Cumulative time: 4.462853193283081

BaB round 9
batch: 53
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 77] [/input-16, 77] [/input-16, 77] [/input-16, 77] [/input-16, 77] [/input-16, 77] [/input-16, 77] [/input-16, 178] [/input-16, 77] [/input-16, 77] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09899353981018066
10 lb beta sum: 0.006101714447140694, worst -0.09897935390472412
Time: prepare 0.0020    bound 0.1493    transfer 0.0005    finalize 0.0027    func 0.2962    
Accumulated time: func 2.4168    prepare 0.0596    bound 2.1732    transfer 0.0093    finalize 0.0334    
all_split False
======================Cut inference begins======================
max lb tensor(0.30354202) min lb tensor(-0.09897590)
Number of Verified Splits: 51 of 106
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 12
#cuts 4-6: 5
#cuts >= 20: 0
BICCOS time: 0.01165151596069336 
BICCOS Cumulative time: 0.8863513469696045
Preprocessing time: 0.0038132667541503906 Inference time: 0.005945920944213867 Add cuts time: 0.0013210773468017578 Cut analysis time: 0.0005712509155273438
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09898 (12), -0.09467 (12), -0.09086 (12), -0.09001 (12), -0.08592 (12), -0.08527 (12), -0.08364 (12), -0.08267 (12), -0.07767 (12), -0.07713 (12), -0.07673 (12), -0.06877 (12), -0.06665 (12), -0.06386 (12), -0.06007 (12), -0.05673 (12), -0.03532 (12), -0.03512 (12), -0.03409 (12), -0.03319 (12), 
Length of domains: 55
Time: pickout 0.0006    decision 0.0154    set_bounds 0.0048    solve 0.2964    add 0.0020    
Accumulated time: pickout 0.0065    decision 1.0457    set_bounds 0.0703    solve 2.1446    add 0.3266    
Current (lb-rhs): -0.09897589683532715
328 domains visited
Cumulative time: 4.794398069381714

BaB round 10
batch: 55
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] [/input-16, 78] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09394943714141846
10 lb beta sum: 0.08104193210601807, worst -0.09393548965454102
Time: prepare 0.0022    bound 0.1604    transfer 0.0006    finalize 0.0024    func 0.1665    
Accumulated time: func 2.5833    prepare 0.0620    bound 2.3336    transfer 0.0100    finalize 0.0358    
all_split False
======================Cut inference begins======================
max lb tensor(0.02011389) min lb tensor(-0.09392440)
Number of Verified Splits: 33 of 110
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 12
#cuts 4-6: 10
#cuts >= 20: 0
BICCOS time: 0.00914764404296875 
BICCOS Cumulative time: 0.8954989910125732
Preprocessing time: 0.003532886505126953 Inference time: 0.0039119720458984375 Add cuts time: 0.0008361339569091797 Cut analysis time: 0.0008666515350341797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09392 (13), -0.08946 (13), -0.08629 (13), -0.08490 (13), -0.08077 (13), -0.08071 (13), -0.08034 (13), -0.07914 (13), -0.07877 (13), -0.07823 (13), -0.07316 (13), -0.07249 (13), -0.07161 (13), -0.06415 (13), -0.06354 (13), -0.06348 (13), -0.06206 (13), -0.06170 (13), -0.05953 (13), -0.05942 (13), 
Length of domains: 77
Time: pickout 0.0006    decision 0.0194    set_bounds 0.0050    solve 0.1666    add 0.0024    
Accumulated time: pickout 0.0072    decision 1.0651    set_bounds 0.0753    solve 2.3112    add 0.3290    
Current (lb-rhs): -0.09392440319061279
405 domains visited
Cumulative time: 4.998107194900513

BaB round 11
batch: 77
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6897] [/input-12, 6897] [/input-12, 6897] [/input-12, 6897] [/input-12, 6897] [/input-12, 6897] [/input-12, 6897] [/input-12, 6897] [/input-12, 6897] [/input-12, 6897] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08962202072143555
10 lb beta sum: 0.047839198261499405, worst -0.08960437774658203
Time: prepare 0.0032    bound 0.1736    transfer 0.0009    finalize 0.0034    func 0.1821    
Accumulated time: func 2.7654    prepare 0.0654    bound 2.5072    transfer 0.0109    finalize 0.0392    
all_split False
======================Cut inference begins======================
max lb tensor(0.09392725) min lb tensor(-0.08960080)
Number of Verified Splits: 28 of 154
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 14
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.009763002395629883 
BICCOS Cumulative time: 0.9052619934082031
Preprocessing time: 0.004819393157958984 Inference time: 0.003315448760986328 Add cuts time: 0.0007653236389160156 Cut analysis time: 0.0008628368377685547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08960 (14), -0.08572 (14), -0.08503 (14), -0.08158 (14), -0.08145 (14), -0.08027 (14), -0.07674 (14), -0.07609 (14), -0.07578 (14), -0.07570 (14), -0.07565 (14), -0.07394 (14), -0.07360 (14), -0.07326 (14), -0.07259 (14), -0.07151 (14), -0.07117 (14), -0.07076 (14), -0.07069 (14), -0.06819 (14), 
Length of domains: 126
Time: pickout 0.0010    decision 0.0181    set_bounds 0.0049    solve 0.1821    add 0.0028    
Accumulated time: pickout 0.0082    decision 1.0833    set_bounds 0.0802    solve 2.4933    add 0.3318    
Current (lb-rhs): -0.08960080146789551
531 domains visited
Cumulative time: 5.217328071594238

BaB round 12
batch: 126
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 247] [/input-16, 247] [/input-16, 247] [/input-16, 247] [/input-16, 247] [/input-16, 247] [/input-16, 247] [/input-16, 247] [/input-16, 247] [/input-12, 3346] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08443844318389893
10 lb beta sum: 0.01670379564166069, worst -0.08442449569702148
Time: prepare 0.0052    bound 0.1746    transfer 0.0010    finalize 0.0043    func 0.1869    
Accumulated time: func 2.9523    prepare 0.0708    bound 2.6818    transfer 0.0119    finalize 0.0435    
all_split False
======================Cut inference begins======================
max lb tensor(0.01236415) min lb tensor(-0.08441901)
Number of Verified Splits: 60 of 252
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 11
#cuts 4-6: 9
#cuts >= 20: 0
BICCOS time: 0.017194509506225586 
BICCOS Cumulative time: 0.9224565029144287
Preprocessing time: 0.007689952850341797 Inference time: 0.007355213165283203 Add cuts time: 0.0015208721160888672 Cut analysis time: 0.0006284713745117188
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08442 (15), -0.08045 (15), -0.07983 (15), -0.07815 (15), -0.07684 (15), -0.07634 (15), -0.07623 (15), -0.07356 (15), -0.07352 (15), -0.07255 (15), -0.07146 (15), -0.07064 (15), -0.07060 (15), -0.07056 (15), -0.06951 (15), -0.06935 (15), -0.06885 (15), -0.06854 (15), -0.06823 (15), -0.06775 (15), 
Length of domains: 192
Time: pickout 0.0008    decision 0.0265    set_bounds 0.0109    solve 0.1870    add 0.0056    
Accumulated time: pickout 0.0090    decision 1.1098    set_bounds 0.0911    solve 2.6803    add 0.3374    
Current (lb-rhs): -0.08441901206970215
723 domains visited
Cumulative time: 5.466047286987305

BaB round 13
batch: 192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3274] [/input-12, 2480] [/input-12, 3274] [/input-12, 5651] [/input-12, 2480] [/input-12, 2480] [/input-12, 3274] [/input-12, 3274] [/input-12, 3346] [/input-16, 247] 
cut re-enabled after branching node selection
0 lb beta sum: 0.010434888303279877, worst -0.08266615867614746
10 lb beta sum: 0.021983951330184937, worst -0.08266448974609375
Time: prepare 0.0176    bound 0.1734    transfer 0.0035    finalize 0.0063    func 0.2033    
Accumulated time: func 3.1556    prepare 0.0885    bound 2.8552    transfer 0.0154    finalize 0.0498    
all_split False
======================Cut inference begins======================
max lb tensor(0.01608828) min lb tensor(-0.08266270)
Number of Verified Splits: 64 of 384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 12
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.0218660831451416 
BICCOS Cumulative time: 0.9443225860595703
Preprocessing time: 0.011314153671264648 Inference time: 0.007932662963867188 Add cuts time: 0.0018544197082519531 Cut analysis time: 0.0007648468017578125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08266 (16), -0.07896 (16), -0.07797 (16), -0.07708 (16), -0.07461 (16), -0.07459 (16), -0.07343 (16), -0.07298 (16), -0.07286 (16), -0.07231 (16), -0.07132 (16), -0.07032 (16), -0.06996 (16), -0.06970 (16), -0.06873 (16), -0.06836 (16), -0.06836 (16), -0.06759 (16), -0.06736 (16), -0.06720 (16), 
Length of domains: 320
Time: pickout 0.0011    decision 0.0311    set_bounds 0.0165    solve 0.2035    add 0.0084    
Accumulated time: pickout 0.0101    decision 1.1409    set_bounds 0.1076    solve 2.8838    add 0.3457    
Current (lb-rhs): -0.08266270160675049
1043 domains visited
Cumulative time: 5.749345064163208

BaB round 14
batch: 256
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5659] [/input-12, 5651] [/input-12, 5659] [/input-12, 877] [/input-12, 3346] [/input-12, 5659] [/input-12, 2480] [/input-12, 2480] [/input-12, 2348] [/input-12, 3289] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08059918880462646
10 lb beta sum: 0.004827595315873623, worst -0.10130344331264496
Time: prepare 0.0103    bound 0.1733    transfer 0.0024    finalize 0.0103    func 0.1997    
Accumulated time: func 3.3553    prepare 0.0990    bound 3.0285    transfer 0.0179    finalize 0.0601    
all_split False
======================Cut inference begins======================
max lb tensor(0.01094437) min lb tensor(-0.08058035)
Number of Verified Splits: 77 of 512
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 16
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.027912616729736328 
BICCOS Cumulative time: 0.9722352027893066
Preprocessing time: 0.014789581298828125 Inference time: 0.009950399398803711 Add cuts time: 0.002546548843383789 Cut analysis time: 0.0006260871887207031
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08058 (17), -0.07609 (17), -0.07490 (17), -0.07421 (17), -0.07282 (17), -0.07224 (17), -0.07180 (17), -0.07151 (17), -0.07142 (17), -0.07036 (17), -0.06994 (17), -0.06991 (17), -0.06970 (17), -0.06917 (17), -0.06884 (17), -0.06834 (17), -0.06800 (17), -0.06702 (17), -0.06690 (17), -0.06679 (17), 
Length of domains: 499
Time: pickout 0.0015    decision 0.0302    set_bounds 0.0225    solve 0.1999    add 0.0073    
Accumulated time: pickout 0.0116    decision 1.1711    set_bounds 0.1302    solve 3.0836    add 0.3530    
Current (lb-rhs): -0.08058035373687744
1478 domains visited
current_vram/total_varm: 2.1GB/99.9GB, batch_size increase to 512
Cumulative time: 6.0398101806640625

BaB round 15
batch: 499
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5659] [/input-12, 5651] [/input-12, 3274] [/input-12, 5659] [/input-12, 3274] [/input-12, 5659] [/input-12, 3346] [/input-12, 2480] [/input-12, 7312] [/input-12, 2480] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.077767014503479
10 lb beta sum: 0.03092142380774021, worst -0.08810102939605713
Time: prepare 0.0201    bound 0.2290    transfer 0.0065    finalize 0.0220    func 0.2843    
Accumulated time: func 3.6396    prepare 0.1194    bound 3.2574    transfer 0.0244    finalize 0.0821    
all_split False
======================Cut inference begins======================
max lb tensor(0.01272009) min lb tensor(-0.07774734)
Number of Verified Splits: 139 of 998
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 18
#cuts 4-6: 8
#cuts 7-9: 4
#cuts >= 20: 0
BICCOS time: 0.05384945869445801 
BICCOS Cumulative time: 1.0260846614837646
Preprocessing time: 0.030168533325195312 Inference time: 0.019775390625 Add cuts time: 0.0029458999633789062 Cut analysis time: 0.0009596347808837891
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07775 (18), -0.07405 (18), -0.07374 (18), -0.07213 (18), -0.07194 (18), -0.06995 (18), -0.06991 (18), -0.06988 (18), -0.06873 (18), -0.06869 (18), -0.06857 (18), -0.06824 (18), -0.06803 (18), -0.06789 (18), -0.06685 (18), -0.06660 (18), -0.06656 (18), -0.06654 (18), -0.06651 (18), -0.06622 (18), 
Length of domains: 859
Time: pickout 0.0151    decision 0.0530    set_bounds 0.0428    solve 0.2846    add 0.0184    
Accumulated time: pickout 0.0267    decision 1.2241    set_bounds 0.1730    solve 3.3682    add 0.3714    
Current (lb-rhs): -0.07774734497070312
2337 domains visited
Cumulative time: 6.51000189781189

BaB round 16
batch: 512
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3274] [/input-12, 3289] [/input-12, 3346] [/input-12, 2480] [/input-12, 3274] [/input-12, 3274] [/input-12, 3346] [/input-12, 3274] [/input-12, 3274] [/input-12, 5659] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07471764087677002
10 lb beta sum: 0.014918872155249119, worst -0.07931192219257355
Time: prepare 0.0205    bound 0.2244    transfer 0.0041    finalize 0.0180    func 0.2736    
Accumulated time: func 3.9133    prepare 0.1401    bound 3.4819    transfer 0.0284    finalize 0.1001    
all_split False
======================Cut inference begins======================
max lb tensor(0.04568011) min lb tensor(-0.07470596)
Number of Verified Splits: 133 of 1024
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 11
#cuts 4-6: 13
#cuts 7-9: 6
#cuts >= 20: 0
BICCOS time: 0.055753469467163086 
BICCOS Cumulative time: 1.0818381309509277
Preprocessing time: 0.031621694564819336 Inference time: 0.019980669021606445 Add cuts time: 0.0029764175415039062 Cut analysis time: 0.0011746883392333984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07471 (19), -0.07261 (19), -0.07100 (19), -0.07067 (19), -0.06991 (18), -0.06988 (18), -0.06909 (19), -0.06895 (19), -0.06892 (19), -0.06873 (18), -0.06839 (19), -0.06700 (19), -0.06699 (19), -0.06694 (19), -0.06685 (18), -0.06651 (18), -0.06634 (19), -0.06560 (19), -0.06546 (19), -0.06535 (18), 
Length of domains: 1238
Time: pickout 0.0022    decision 0.0478    set_bounds 0.0435    solve 0.2739    add 0.0191    
Accumulated time: pickout 0.0289    decision 1.2719    set_bounds 0.2165    solve 3.6421    add 0.3906    
Current (lb-rhs): -0.07470595836639404
3228 domains visited
current_vram/total_varm: 3.5GB/99.9GB, batch_size increase to 1024
Cumulative time: 6.955872058868408

BaB round 17
batch: 1024
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3346] [/input-12, 3346] [/input-12, 7312] [/input-12, 7312] [/input-12, 5659] [/input-12, 5659] [/input-12, 3274] [/input-12, 3289] [/input-12, 2481] [/input-12, 877] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0038499953225255013, worst -0.9273903369903564
10 lb beta sum: 0.005126435775309801, worst -0.10793030261993408
Time: prepare 0.0759    bound 0.3735    transfer 0.0068    finalize 0.1926    func 0.6631    
Accumulated time: func 4.5763    prepare 0.2162    bound 3.8553    transfer 0.0353    finalize 0.2927    
all_split False
======================Cut inference begins======================
max lb tensor(0.37639740) min lb tensor(-0.06970859)
Number of Verified Splits: 234 of 2048
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 46.
#cuts 1-3: 14
#cuts 4-6: 19
#cuts 7-9: 13
#cuts >= 20: 0
BICCOS time: 0.10780596733093262 
BICCOS Cumulative time: 1.1896440982818604
Preprocessing time: 0.06340408325195312 Inference time: 0.036437034606933594 Add cuts time: 0.006105899810791016 Cut analysis time: 0.0018589496612548828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07471 (19), -0.07100 (19), -0.06971 (20), -0.06909 (19), -0.06875 (19), -0.06792 (20), -0.06788 (20), -0.06761 (20), -0.06694 (19), -0.06692 (19), -0.06602 (20), -0.06601 (20), -0.06562 (19), -0.06560 (19), -0.06531 (20), -0.06514 (20), -0.06493 (20), -0.06485 (19), -0.06428 (19), -0.06428 (19), 
Length of domains: 2028
Time: pickout 0.0056    decision 0.0877    set_bounds 0.0872    solve 0.6635    add 0.0389    
Accumulated time: pickout 0.0345    decision 1.3596    set_bounds 0.3037    solve 4.3056    add 0.4294    
Current (lb-rhs): -0.07470595836639404
5042 domains visited
current_vram/total_varm: 5.9GB/99.9GB, batch_size increase to 2048
Cumulative time: 7.952218532562256

BaB round 18
batch: 2028
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 877] [/input-12, 7312] [/input-12, 3289] [/input-12, 7312] [/input-12, 2480] [/input-12, 7312] [/input-12, 3346] [/input-12, 7312] [/input-12, 5659] [/input-12, 5651] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07180774211883545
10 lb beta sum: 0.36037972569465637, worst -0.09404972195625305
Time: prepare 0.0824    bound 0.6699    transfer 0.0566    finalize 0.1315    func 0.9670    
Accumulated time: func 5.5433    prepare 0.2989    bound 4.5253    transfer 0.0918    finalize 0.4242    
all_split False
======================Cut inference begins======================
max lb tensor(0.43936938) min lb tensor(-0.07057266)
Number of Verified Splits: 1693 of 4056
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 21
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.6000652313232422 
BICCOS Cumulative time: 1.7897093296051025
Preprocessing time: 0.12586236000061035 Inference time: 0.4414792060852051 Add cuts time: 0.03196263313293457 Cut analysis time: 0.0007610321044921875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07057 (20), -0.06853 (20), -0.06686 (20), -0.06524 (21), -0.06495 (20), -0.06483 (21), -0.06458 (20), -0.06450 (20), -0.06358 (21), -0.06334 (20), -0.06292 (20), -0.06270 (20), -0.06154 (21), -0.06128 (20), -0.06107 (21), -0.06101 (20), -0.06071 (20), -0.06054 (21), -0.05964 (21), -0.05941 (21), 
Length of domains: 2363
Time: pickout 0.0606    decision 0.1627    set_bounds 0.1721    solve 0.9683    add 0.0450    
Accumulated time: pickout 0.0951    decision 1.5223    set_bounds 0.4758    solve 5.2739    add 0.4745    
Current (lb-rhs): -0.07057265937328339
7405 domains visited
Cumulative time: 9.983720541000366

BaB round 19
batch: 2048
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3328] [/input-12, 5651] [/input-12, 2361] [/input-12, 7473] [/input-12, 3805] [/input-12, 1828] [/input-12, 3289] [/input-12, 3805] [/input-12, 5659] [/input-12, 7312] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08824753761291504
10 lb beta sum: 0.9993500113487244, worst -0.07115733623504639
Time: prepare 0.0845    bound 0.6667    transfer 0.0531    finalize 0.1330    func 0.9644    
Accumulated time: func 6.5077    prepare 0.3836    bound 5.1919    transfer 0.1449    finalize 0.5572    
all_split False
======================Cut inference begins======================
max lb tensor(0.73981917) min lb tensor(-0.06856024)
Number of Verified Splits: 2562 of 4096
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 31.
#cuts 1-3: 31
#cuts >= 20: 0
BICCOS time: 0.7350895404815674 
BICCOS Cumulative time: 2.52479887008667
Preprocessing time: 0.12922215461730957 Inference time: 0.5639176368713379 Add cuts time: 0.041225433349609375 Cut analysis time: 0.0007243156433105469
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06856 (21), -0.06653 (21), -0.06474 (21), -0.06298 (21), -0.06173 (21), -0.06169 (21), -0.06137 (21), -0.06095 (21), -0.06054 (21), -0.06042 (21), -0.06028 (22), -0.05978 (22), -0.05941 (21), -0.05850 (21), -0.05819 (21), -0.05742 (21), -0.05718 (21), -0.05652 (21), -0.05642 (21), -0.05631 (21), 
Length of domains: 1849
Time: pickout 0.0097    decision 0.1635    set_bounds 0.1803    solve 0.9653    add 0.0424    
Accumulated time: pickout 0.1048    decision 1.6858    set_bounds 0.6561    solve 6.2392    add 0.5169    
Current (lb-rhs): -0.06856024265289307
8939 domains visited
current_vram/total_varm: 14.8GB/99.9GB, batch_size increase to 4096
Cumulative time: 12.113986730575562

BaB round 20
batch: 1849
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3289] [/input-12, 7312] [/input-12, 3289] [/input-12, 3289] [/input-12, 1828] [/input-12, 3805] [/input-12, 1828] [/input-12, 3289] [/input-12, 3328] [/input-12, 5659] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08971548080444336
10 lb beta sum: 2.6336047649383545, worst -0.07560789585113525
Time: prepare 0.0770    bound 0.6174    transfer 0.0507    finalize 0.1271    func 0.8976    
Accumulated time: func 7.4052    prepare 0.4608    bound 5.8093    transfer 0.1956    finalize 0.6843    
all_split False
======================Cut inference begins======================
max lb tensor(0.94416308) min lb tensor(-0.05833149)
Number of Verified Splits: 2951 of 3698
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 35.
#cuts 1-3: 35
#cuts >= 20: 0
BICCOS time: 0.6316416263580322 
BICCOS Cumulative time: 3.156440496444702
Preprocessing time: 0.1170206069946289 Inference time: 0.4737231731414795 Add cuts time: 0.040135860443115234 Cut analysis time: 0.0007619857788085938
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05833 (22), -0.05431 (22), -0.05354 (22), -0.05279 (22), -0.05268 (22), -0.04946 (22), -0.04936 (22), -0.04854 (22), -0.04822 (22), -0.04818 (22), -0.04804 (22), -0.04802 (22), -0.04785 (22), -0.04738 (23), -0.04712 (22), -0.04705 (22), -0.04698 (23), -0.04624 (23), -0.04596 (23), -0.04595 (22), 
Length of domains: 747
Time: pickout 0.0075    decision 0.1512    set_bounds 0.1636    solve 0.8989    add 0.0141    
Accumulated time: pickout 0.1123    decision 1.8370    set_bounds 0.8197    solve 7.1381    add 0.5310    
Current (lb-rhs): -0.05833148956298828
9686 domains visited
Cumulative time: 14.012886762619019

BaB round 21
batch: 747
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1828] [/input-12, 1828] [/input-12, 7312] [/input-12, 2353] [/input-12, 2481] [/input-12, 2481] [/input-12, 7466] [/input-12, 1828] [/input-12, 7466] [/input-12, 7466] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09418129920959473
10 lb beta sum: 3.110860824584961, worst -0.046921372413635254
Time: prepare 0.0312    bound 0.3028    transfer 0.0093    finalize 0.0262    func 0.3794    
Accumulated time: func 7.7846    prepare 0.4923    bound 6.1120    transfer 0.2050    finalize 0.7105    
all_split False
======================Cut inference begins======================
max lb tensor(0.62894917) min lb tensor(-0.04688311)
Number of Verified Splits: 802 of 1494
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.190171480178833 
BICCOS Cumulative time: 3.346611976623535
Preprocessing time: 0.0489654541015625 Inference time: 0.1308901309967041 Add cuts time: 0.010083198547363281 Cut analysis time: 0.000232696533203125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04688 (23), -0.04594 (23), -0.04497 (23), -0.04402 (23), -0.04333 (23), -0.04227 (24), -0.04146 (23), -0.04121 (24), -0.04113 (23), -0.04061 (23), -0.04026 (23), -0.04017 (23), -0.03968 (23), -0.03925 (23), -0.03916 (23), -0.03915 (23), -0.03830 (23), -0.03786 (23), -0.03728 (23), -0.03708 (23), 
Length of domains: 692
Time: pickout 0.0241    decision 0.0685    set_bounds 0.2177    solve 0.3797    add 0.0108    
Accumulated time: pickout 0.1364    decision 1.9055    set_bounds 1.0374    solve 7.5178    add 0.5418    
Current (lb-rhs): -0.04688310623168945
10378 domains visited
Cumulative time: 14.911813259124756

BaB round 22
batch: 692
splitting decisions: 
split level 0: [/input-12, 7466] [/input-12, 3354] [/input-12, 7473] [/input-12, 3354] [/input-12, 3354] [/input-12, 4759] [/input-12, 2353] [/input-12, 3354] [/input-12, 3354] [/input-12, 7466] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10484170913696289
10 lb beta sum: 0.26990917325019836, worst -0.01311221718788147
Time: prepare 0.0280    bound 0.2027    transfer 0.0048    finalize 0.0177    func 0.2622    
Accumulated time: func 8.0469    prepare 0.5204    bound 6.3148    transfer 0.2098    finalize 0.7282    
all_split False
======================Cut inference begins======================
max lb tensor(0.38471401) min lb tensor(0.06066965)
Number of Verified Splits: 1384 of 1384
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.04238176345825195 
BICCOS Cumulative time: 3.388993740081787
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0053    decision 0.0658    set_bounds 0.0585    solve 0.2625    add 0.0001    
Accumulated time: pickout 0.1417    decision 1.9713    set_bounds 1.0959    solve 7.7803    add 0.5419    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
10378 domains visited
Cumulative time: 15.352635383605957


Properties batch 6, size 1
Remaining timeout: 181.57300090789795
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 181.57290029525757
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 181.57287335395813
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 18.4276 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 193, vnnlib ID: 193 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-81.66538239, -77.42317200, -81.83361053, -81.25064850, -81.28599548,
         -81.39415741, -81.56924438, -80.91275024, -81.46582031, -75.38013458]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1386]; unstable size 1386; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 84, 1, 1386] with unstable size 83 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 29, 1, 1386] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1386] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [554]; unstable size 554; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 29, 1, 554] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 554] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [28]; unstable size 28; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.75024796, 0.91425228, 4.20255470, 3.53544950, 3.64061928, 3.62879562,
         3.79760742, 3.12675095, 4.28376007]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0433 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 194, vnnlib ID: 194 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-36.67483902, -41.26070404, -34.34020615, -37.64435959, -34.49190903,
         -37.67086411, -36.00705338, -37.85955429, -39.44539261, -41.19422913]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1493]; unstable size 1493; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 69, 1, 1493] with unstable size 68 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 32, 1, 1493] with unstable size 31 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1493] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [546]; unstable size 546; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 32, 1, 546] with unstable size 31 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 546] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [31]; unstable size 31; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.86013937,  5.41614056,  2.60611916, -0.28688717,  2.60935616,
          0.73468024,  2.41541982,  3.45347834,  5.13299179]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-36.67483902, -41.26070404, -34.34020615, -37.64435959, -34.49190903,
         -37.67086411, -36.00705338, -37.85955429, -39.44539261, -41.19422913]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-36.28075409, -40.75116348, -33.81813049, -37.00616074, -33.79354858,
          -36.98665619, -35.36761856, -37.09739685, -38.90287018, -40.65745544]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.02458191]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0066 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0446 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 195, vnnlib ID: 195 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-39.76342392, -40.29750824, -36.09017563, -36.78663635, -37.51019287,
         -36.85529709, -38.26149750, -38.50452805, -41.46311569, -39.26138306]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1458]; unstable size 1458; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 466, 1, 1458] with unstable size 465 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 24, 1, 1458] with unstable size 23 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1458] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [465]; unstable size 465; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 24, 1, 465] with unstable size 23 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 465] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [23]; unstable size 23; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.24310207, 2.38408947, 0.03231192, 0.78161907, 0.07486054, 1.28657269,
         1.41614103, 3.98720002, 1.47720337]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0367 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 196, vnnlib ID: 196 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-38.02074051, -39.18370819, -35.70130920, -34.65028000, -35.63727570,
         -35.16998291, -34.03299713, -36.65476227, -37.69140625, -37.12456512]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1313]; unstable size 1313; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 85, 1, 1313] with unstable size 84 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 39, 1, 1313] with unstable size 38 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1313] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [638]; unstable size 638; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 39, 1, 638] with unstable size 38 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 638] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [38]; unstable size 38; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 38] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.49469292,  2.09019160, -0.13786006, -0.04332566,  0.35902339,
         -1.47455919,  0.67966020,  0.81592214,  0.60799885]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-38.02074051, -39.18370819, -35.70130920, -34.65028000, -35.63727570,
         -35.16998291, -34.03299713, -36.65476227, -37.69140625, -37.12456512]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-38.02074051, -39.18370819, -35.70131302, -34.65028000, -35.63727951,
          -35.16998291, -34.03299713, -36.65476608, -37.69141006, -37.12456512],
         [-38.02074051, -39.18370819, -35.70131302, -34.65028000, -35.63727951,
          -35.16998291, -34.03299713, -36.65476608, -37.69141006, -37.12456512]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.05103302,  0.98699951, -0.61728287]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.51904768,  0.56666672,  0.51904768,  ...,  0.69365084,
             0.78888893,  0.56666672],
           [ 0.55079371,  0.64603180,  0.67777783,  ...,  0.74126989,
             0.69365084,  0.61428577],
           [ 0.55079371,  0.50317466,  0.58253974,  ...,  0.77301592,
             0.74126989,  0.67777783],
           ...,
           [-1.40158725, -1.52857137, -1.56031740,  ...,  0.61428577,
             0.74126989,  0.64603180],
           [-1.51269829, -1.32222211, -1.54444432,  ...,  0.66190481,
             0.70952386,  0.61428577],
           [-1.59206343, -1.38571417, -1.24285710,  ...,  0.64603180,
             0.59841275,  0.70952386]],

          [[ 0.67632860,  0.54750413,  0.08051541,  ...,  0.78904998,
             0.88566834,  0.66022551],
           [ 0.80515307,  0.83735919,  0.54750413,  ...,  0.85346222,
             0.80515307,  0.70853472],
           [ 0.85346222,  0.78904998,  0.64412248,  ...,  0.86956531,
             0.88566834,  0.78904998],
           ...,
           [-1.46537840, -1.61030602, -1.67471826,  ...,  0.69243163,
             0.82125610,  0.72463775],
           [-1.61030602, -1.43317223, -1.64251208,  ...,  0.74074084,
             0.78904998,  0.69243163],
           [-1.73913050, -1.49758446, -1.30434775,  ...,  0.72463775,
             0.67632860,  0.78904998]],

          [[ 0.90104967,  0.72113961,  0.27136448,  ...,  1.03598225,
             1.17091501,  0.93103468],
           [ 1.00599718,  1.00599718,  0.81109464,  ...,  0.99100471,
             1.08095968,  1.03598225],
           [ 1.05097473,  1.00599718,  0.94602716,  ...,  0.96101969,
             1.12593722,  1.11094475],
           ...,
           [-1.27286363, -1.39280367, -1.43778121,  ...,  1.00599718,
             1.12593722,  1.03598225],
           [-1.39280367, -1.22788620, -1.42278874,  ...,  1.05097473,
             1.09595215,  1.00599718],
           [-1.49775124, -1.28785622, -1.12293863,  ...,  1.03598225,
             0.99100471,  1.09595215]]],


         [[[ 0.51904768,  0.56666672,  0.51904768,  ...,  0.69365084,
             0.78888893,  0.56666672],
           [ 0.55079371,  0.64603180,  0.67777783,  ...,  0.74126989,
             0.69365084,  0.61428577],
           [ 0.55079371,  0.50317466,  0.58253974,  ...,  0.77301592,
             0.74126989,  0.67777783],
           ...,
           [-1.40158725, -1.52857137, -1.56031740,  ...,  0.61428577,
             0.74126989,  0.64603180],
           [-1.51269829, -1.32222211, -1.54444432,  ...,  0.66190481,
             0.70952386,  0.61428577],
           [-1.59206343, -1.38571417, -1.24285710,  ...,  0.64603180,
             0.59841275,  0.70952386]],

          [[ 0.67632860,  0.54750413,  0.08051541,  ...,  0.78904998,
             0.88566834,  0.66022551],
           [ 0.80515307,  0.83735919,  0.54750413,  ...,  0.85346222,
             0.80515307,  0.70853472],
           [ 0.85346222,  0.78904998,  0.64412248,  ...,  0.86956531,
             0.88566834,  0.78904998],
           ...,
           [-1.46537840, -1.61030602, -1.67471826,  ...,  0.69243163,
             0.82125610,  0.72463775],
           [-1.61030602, -1.43317223, -1.64251208,  ...,  0.74074084,
             0.78904998,  0.69243163],
           [-1.73913050, -1.49758446, -1.30434775,  ...,  0.72463775,
             0.67632860,  0.78904998]],

          [[ 0.90104967,  0.72113961,  0.27136448,  ...,  1.03598225,
             1.17091501,  0.93103468],
           [ 1.00599718,  1.00599718,  0.81109464,  ...,  0.99100471,
             1.08095968,  1.03598225],
           [ 1.05097473,  1.00599718,  0.94602716,  ...,  0.96101969,
             1.12593722,  1.11094475],
           ...,
           [-1.27286363, -1.39280367, -1.43778121,  ...,  1.00599718,
             1.12593722,  1.03598225],
           [-1.39280367, -1.22788620, -1.42278874,  ...,  1.05097473,
             1.09595215,  1.00599718],
           [-1.49775124, -1.28785622, -1.12293863,  ...,  1.03598225,
             0.99100471,  1.09595215]]],


         [[[ 0.51904768,  0.56666672,  0.51904768,  ...,  0.69365084,
             0.78888893,  0.56666672],
           [ 0.55079371,  0.64603180,  0.67777783,  ...,  0.74126989,
             0.69365084,  0.61428577],
           [ 0.55079371,  0.50317466,  0.58253974,  ...,  0.77301592,
             0.74126989,  0.67777783],
           ...,
           [-1.40158725, -1.52857137, -1.56031740,  ...,  0.61428577,
             0.74126989,  0.64603180],
           [-1.51269829, -1.32222211, -1.54444432,  ...,  0.66190481,
             0.70952386,  0.61428577],
           [-1.59206343, -1.38571417, -1.24285710,  ...,  0.64603180,
             0.59841275,  0.70952386]],

          [[ 0.67632860,  0.54750413,  0.08051541,  ...,  0.78904998,
             0.88566834,  0.66022551],
           [ 0.80515307,  0.83735919,  0.54750413,  ...,  0.85346222,
             0.80515307,  0.70853472],
           [ 0.85346222,  0.78904998,  0.64412248,  ...,  0.86956531,
             0.88566834,  0.78904998],
           ...,
           [-1.46537840, -1.61030602, -1.67471826,  ...,  0.69243163,
             0.82125610,  0.72463775],
           [-1.61030602, -1.43317223, -1.64251208,  ...,  0.74074084,
             0.78904998,  0.69243163],
           [-1.73913050, -1.49758446, -1.30434775,  ...,  0.72463775,
             0.67632860,  0.78904998]],

          [[ 0.90104967,  0.72113961,  0.27136448,  ...,  1.03598225,
             1.17091501,  0.93103468],
           [ 1.00599718,  1.00599718,  0.81109464,  ...,  0.99100471,
             1.08095968,  1.03598225],
           [ 1.05097473,  1.00599718,  0.94602716,  ...,  0.96101969,
             1.12593722,  1.11094475],
           ...,
           [-1.27286363, -1.39280367, -1.43778121,  ...,  1.00599718,
             1.12593722,  1.03598225],
           [-1.39280367, -1.22788620, -1.42278874,  ...,  1.05097473,
             1.09595215,  1.00599718],
           [-1.49775124, -1.28785622, -1.12293863,  ...,  1.03598225,
             0.99100471,  1.09595215]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0444 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 197, vnnlib ID: 197 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-54.96110916, -61.25542450, -55.75966263, -59.58306503, -58.11404037,
         -60.03891754, -59.54717636, -61.58120346, -57.15965652, -61.48928070]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1293]; unstable size 1293; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 366, 1, 1293] with unstable size 365 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 25, 1, 1293] with unstable size 24 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1293] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [365]; unstable size 365; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 25, 1, 365] with unstable size 24 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 365] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [24]; unstable size 24; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.25075054, 0.08187610, 3.61492610, 2.25099945, 4.02182388, 3.66906404,
         5.56576252, 1.26433229, 5.69498634]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0403 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 198, vnnlib ID: 198 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-39.85471725, -44.70559692, -39.74392319, -40.53109360, -41.44455338,
         -40.92109299, -41.51934814, -42.37868118, -42.32826996, -44.85310364]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1556]; unstable size 1556; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 470, 1, 1556] with unstable size 469 total_size 8192 output_shape (128, 8, 8)
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 29, 1, 1556] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1556] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [469]; unstable size 469; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 29, 1, 469] with unstable size 28 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 469] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [28]; unstable size 28; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.59264159, -0.95279050, -0.34854722,  0.33187103, -0.02145243,
          0.50543475,  1.17511106,  1.34863818,  3.69807339]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-39.85471725, -44.70559692, -39.74392319, -40.53109360, -41.44455338,
         -40.92109299, -41.51934814, -42.37868118, -42.32826996, -44.85310364]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-39.85471725, -44.70560074, -39.74393082, -40.53109741, -41.44455338,
          -40.92108917, -41.51935196, -42.37868118, -42.32827759, -44.85311127],
         [-39.85471725, -44.70560074, -39.74393082, -40.53109741, -41.44455338,
          -40.92108917, -41.51935196, -42.37868118, -42.32827759, -44.85311127]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.11078644,  0.67638016,  1.06637192]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[1.26507962, 1.28095269, 1.37619078,  ..., 1.63015902,
            1.53492093, 1.43968284],
           [1.26507962, 1.31269872, 1.40793681,  ..., 1.72539711,
            1.67777801, 1.58253992],
           [1.31269872, 1.34444475, 1.40793681,  ..., 1.55079389,
            1.53492093, 1.50317490],
           ...,
           [1.69365108, 1.72539711, 1.80476213,  ..., 1.77301610,
            1.75714314, 1.70952404],
           [1.66190505, 1.67777801, 1.72539711,  ..., 1.75714314,
            1.67777801, 1.55079389],
           [1.66190505, 1.66190505, 1.72539711,  ..., 1.64603198,
            1.55079389, 1.42380977]],

          [[1.04669893, 1.07890511, 1.17552364,  ..., 1.43317258,
            1.33655429, 1.23993587],
           [1.06280196, 1.11111140, 1.20772982,  ..., 1.51368785,
            1.46537876, 1.36876035],
           [1.11111140, 1.14331758, 1.20772982,  ..., 1.33655429,
            1.32045114, 1.28824508],
           ...,
           [1.41706955, 1.46537876, 1.54589403,  ..., 1.11111140,
            1.15942061, 1.22383285],
           [1.40096653, 1.41706955, 1.46537876,  ..., 1.22383285,
            1.23993587, 1.27214205],
           [1.40096653, 1.40096653, 1.46537876,  ..., 1.40096653,
            1.36876035, 1.32045114]],

          [[0.91604215, 0.94602716, 1.03598225,  ..., 1.27586246,
            1.20089996, 1.11094475],
           [0.93103468, 0.97601217, 1.06596720,  ..., 1.44078004,
            1.39580250, 1.30584753],
           [0.97601217, 1.00599718, 1.06596720,  ..., 1.27586246,
            1.24587750, 1.21589243],
           ...,
           [1.29085493, 1.33583248, 1.41079497,  ..., 1.09595215,
            1.11094475, 1.14092970],
           [1.27586246, 1.29085493, 1.33583248,  ..., 1.15592217,
            1.14092970, 1.12593722],
           [1.27586246, 1.27586246, 1.33583248,  ..., 1.23088503,
            1.18590748, 1.11094475]]],


         [[[1.26507962, 1.28095269, 1.37619078,  ..., 1.63015902,
            1.53492093, 1.43968284],
           [1.26507962, 1.31269872, 1.40793681,  ..., 1.72539711,
            1.67777801, 1.58253992],
           [1.31269872, 1.34444475, 1.40793681,  ..., 1.55079389,
            1.53492093, 1.50317490],
           ...,
           [1.69365108, 1.72539711, 1.80476213,  ..., 1.77301610,
            1.75714314, 1.70952404],
           [1.66190505, 1.67777801, 1.72539711,  ..., 1.75714314,
            1.67777801, 1.55079389],
           [1.66190505, 1.66190505, 1.72539711,  ..., 1.64603198,
            1.55079389, 1.42380977]],

          [[1.04669893, 1.07890511, 1.17552364,  ..., 1.43317258,
            1.33655429, 1.23993587],
           [1.06280196, 1.11111140, 1.20772982,  ..., 1.51368785,
            1.46537876, 1.36876035],
           [1.11111140, 1.14331758, 1.20772982,  ..., 1.33655429,
            1.32045114, 1.28824508],
           ...,
           [1.41706955, 1.46537876, 1.54589403,  ..., 1.11111140,
            1.15942061, 1.22383285],
           [1.40096653, 1.41706955, 1.46537876,  ..., 1.22383285,
            1.23993587, 1.27214205],
           [1.40096653, 1.40096653, 1.46537876,  ..., 1.40096653,
            1.36876035, 1.32045114]],

          [[0.91604215, 0.94602716, 1.03598225,  ..., 1.27586246,
            1.20089996, 1.11094475],
           [0.93103468, 0.97601217, 1.06596720,  ..., 1.44078004,
            1.39580250, 1.30584753],
           [0.97601217, 1.00599718, 1.06596720,  ..., 1.27586246,
            1.24587750, 1.21589243],
           ...,
           [1.29085493, 1.33583248, 1.41079497,  ..., 1.09595215,
            1.11094475, 1.14092970],
           [1.27586246, 1.29085493, 1.33583248,  ..., 1.15592217,
            1.14092970, 1.12593722],
           [1.27586246, 1.27586246, 1.33583248,  ..., 1.23088503,
            1.18590748, 1.11094475]]],


         [[[1.26507962, 1.28095269, 1.37619078,  ..., 1.63015902,
            1.53492093, 1.43968284],
           [1.26507962, 1.31269872, 1.40793681,  ..., 1.72539711,
            1.67777801, 1.58253992],
           [1.31269872, 1.34444475, 1.40793681,  ..., 1.55079389,
            1.53492093, 1.50317490],
           ...,
           [1.69365108, 1.72539711, 1.80476213,  ..., 1.77301610,
            1.75714314, 1.70952404],
           [1.66190505, 1.67777801, 1.72539711,  ..., 1.75714314,
            1.67777801, 1.55079389],
           [1.66190505, 1.66190505, 1.72539711,  ..., 1.64603198,
            1.55079389, 1.42380977]],

          [[1.04669893, 1.07890511, 1.17552364,  ..., 1.43317258,
            1.33655429, 1.23993587],
           [1.06280196, 1.11111140, 1.20772982,  ..., 1.51368785,
            1.46537876, 1.36876035],
           [1.11111140, 1.14331758, 1.20772982,  ..., 1.33655429,
            1.32045114, 1.28824508],
           ...,
           [1.41706955, 1.46537876, 1.54589403,  ..., 1.11111140,
            1.15942061, 1.22383285],
           [1.40096653, 1.41706955, 1.46537876,  ..., 1.22383285,
            1.23993587, 1.27214205],
           [1.40096653, 1.40096653, 1.46537876,  ..., 1.40096653,
            1.36876035, 1.32045114]],

          [[0.91604215, 0.94602716, 1.03598225,  ..., 1.27586246,
            1.20089996, 1.11094475],
           [0.93103468, 0.97601217, 1.06596720,  ..., 1.44078004,
            1.39580250, 1.30584753],
           [0.97601217, 1.00599718, 1.06596720,  ..., 1.27586246,
            1.24587750, 1.21589243],
           ...,
           [1.29085493, 1.33583248, 1.41079497,  ..., 1.09595215,
            1.11094475, 1.14092970],
           [1.27586246, 1.29085493, 1.33583248,  ..., 1.15592217,
            1.14092970, 1.12593722],
           [1.27586246, 1.27586246, 1.33583248,  ..., 1.23088503,
            1.18590748, 1.11094475]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0499 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 199, vnnlib ID: 199 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundConstant(name=/9, inputs=[], perturbed=False)
  (/10): BoundConstant(name=/10, value=tensor([0], device='cuda:0'))
  (/11): BoundShape(name=/11, inputs=[/9], perturbed=False)
  (/12): BoundGather(name=/12, inputs=[/11, /10], perturbed=False)
  (/13): BoundConstant(name=/13, value=4)
  (/14): BoundConstant(name=/14, value=2)
  (/15): BoundMul(name=/15, inputs=[/13, /14], perturbed=False)
  (/16): BoundSub(name=/16, inputs=[/15, /12], perturbed=False)
  (/17): BoundCast(name=/17, inputs=[/9], perturbed=False)
  (/18): BoundConstantOfShape(name=/18, inputs=[/16], perturbed=False)
  (/19): BoundConcat(name=/19, inputs=[/17, /18], perturbed=False)
  (/20): BoundConstant(name=/20, inputs=[], perturbed=False)
  (/21): BoundReshape(name=/21, inputs=[/19, /20], perturbed=False)
  (/22): BoundConstant(name=/22, value=tensor([0], device='cuda:0'))
  (/23): BoundConstant(name=/23, value=tensor([3], device='cuda:0'))
  (/24): BoundConstant(name=/24, value=tensor([-9223372036854775807], device='cuda:0'))
  (/25): BoundConstant(name=/25, value=tensor([-1], device='cuda:0'))
  (/26): BoundSlice(name=/26, inputs=[/21, /23, /24, /22, /25], perturbed=False, start=3, end=-9223372036854775807, axes=0, step=-1)
  (/27): BoundTranspose(name=/27, inputs=[/26], perturbed=False)
  (/28): BoundConstant(name=/28, value=tensor([-1], device='cuda:0'))
  (/29): BoundReshape(name=/29, inputs=[/27, /28], perturbed=False)
  (/30): BoundCast(name=/30, inputs=[/29], perturbed=False)
  (/31): BoundConstant(name=/31, value=0.0)
  (/input): BoundPad(name=/input, inputs=[/input-1, /30, /31], perturbed=True)
  (/input-4): BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
  (/input-8): BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
  (/input-12): BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
  (/37): BoundFlatten(name=/37, inputs=[/36], perturbed=True)
  (/input-16): BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True)
  (/39): BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
  (/40): BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)
)
Original output: tensor([[-39.76797104, -39.99512100, -37.83259201, -37.92990112, -37.76850510,
         -38.09967804, -36.66736984, -39.10856628, -41.13192368, -39.17990112]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-8, inputs=[/input-4], perturbed=True)
   BoundRelu(name=/36, inputs=[/input-12], perturbed=True)
   BoundRelu(name=/39, inputs=[/input-16], perturbed=True)
layer /input-8 using sparse-features alpha with shape [1305]; unstable size 1305; total size 8192 ([1, 32, 16, 16])
layer /input-8 start_node /input-12 using sparse-spec alpha [2, 84, 1, 1305] with unstable size 83 total_size 128 output_shape 128
layer /input-8 start_node /input-16 using sparse-spec alpha [2, 49, 1, 1305] with unstable size 48 total_size 250 output_shape torch.Size([250])
layer /input-8 start_node /40 using full alpha [2, 9, 1, 1305] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [683]; unstable size 683; total size 8192 ([1, 128, 8, 8])
layer /36 start_node /input-16 using sparse-spec alpha [2, 49, 1, 683] with unstable size 48 total_size 250 output_shape torch.Size([250])
layer /36 start_node /40 using full alpha [2, 9, 1, 683] with unstable size None total_size 9 output_shape 9
layer /39 using sparse-features alpha with shape [48]; unstable size 48; total size 250 ([1, 250])
layer /39 start_node /40 using full alpha [2, 9, 1, 48] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.64698792,  0.10217762, -0.24091673,  0.12700999, -0.43319368,
          0.18889499,  0.21051013,  1.56868601, -0.58722830]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-39.76797104, -39.99512100, -37.83259201, -37.92990112, -37.76850510,
         -38.09967804, -36.66736984, -39.10856628, -41.13192368, -39.17990112]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.71it/s]100%|██████████| 1/1 [00:00<00:00,  7.70it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-41.61800766, -41.92409515, -39.59647369, -39.93566513, -39.43748093,
          -40.09706879, -38.80568695, -40.82449722, -42.91247177, -41.09228516],
         [-41.61800766, -41.92409515, -39.59647369, -39.93566513, -39.43748093,
          -40.09706879, -38.80568695, -40.82449722, -42.91247177, -41.09228516]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.79078674, 0.63179398, 2.28659821]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1326 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 2.7484567165374756
alpha/beta optimization time: 1.4498217105865479
initial alpha-crown bounds: tensor([[ 0.80270982,  0.27175641, -0.14555383,  0.18760628, -0.25889778,
          0.25313157,  0.33300447,  1.73367095, -0.42897129]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 3 ; Worst class: (+ rhs) -0.4289712905883789
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 32, 16, 16]), torch.Size([9, 1, 128, 8, 8]), torch.Size([9, 1, 250])]

Properties batch 0, size 1
Remaining timeout: 198.3780641555786
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.3780255317688
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.37800097465515
Verifying property 2 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.14555383]], device='cuda:0') need to verify.
Model prediction is: tensor([-39.76797104, -39.99512100, -37.83259201, -37.92990112, -37.76850510,
        -38.09967804, -36.66736984, -39.10856628, -41.13192368, -39.17990112],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.14555383]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1305
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 673
Node /39 input 0: size torch.Size([250]) unstable 47
-----------------
# of unstable neurons: 2025
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 9.989738464355469e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1455249786376953
10 lb beta sum: 0.0, worst -0.14552831649780273
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0730    transfer 0.0001    finalize 0.0002    func 0.0736    
Accumulated time: func 0.0736    prepare 0.0002    bound 0.0730    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 110] 
split level 1: [/input-16, 95] 
split level 2: [/input-16, 72] 
split level 3: [/input-16, 46] 
split level 4: [/input-16, 134] 
split level 5: [/input-16, 186] 
split level 6: [/input-16, 21] 
split level 7: [/input-16, 230] 
split level 8: [/input-16, 58] 
split level 9: [/input-16, 10] 
split level 10: [/input-16, 170] 
split level 11: [/input-16, 84] 
split level 12: [/input-16, 16] 
split level 13: [/input-16, 146] 
split level 14: [/input-16, 31] 
split level 15: [/input-16, 65] 
split level 16: [/input-16, 5] 
split level 17: [/input-16, 41] 
split level 18: [/input-12, 3597] 
split level 19: [/input-12, 1436] 
split level 20: [/input-12, 7139] 
split level 21: [/input-12, 7132] 
split level 22: [/input-12, 1747] 
split level 23: [/input-12, 4769] 
split level 24: [/input-12, 1363] 
split level 25: [/input-16, 126] 
split level 26: [/input-12, 1435] 
split level 27: [/input-12, 4387] 
split level 28: [/input-12, 2467] 
split level 29: [/input-12, 2149] 
split level 30: [/input-12, 3411] 
split level 31: [/input-12, 1683] 
split level 32: [/input-12, 1242] 
split level 33: [/input-16, 99] 
split level 34: [/input-12, 4380] 
split level 35: [/input-12, 6053] 
split level 36: [/input-12, 3588] 
split level 37: [/input-12, 1571] 
split level 38: [/input-12, 5532] 
split level 39: [/input-12, 7754] 
split level 40: [/input-12, 1250] 
split level 41: [/input-12, 4459] 
split level 42: [/input-12, 4132] 
split level 43: [/input-12, 6992] 
split level 44: [/input-12, 7568] 
split level 45: [/input-12, 6259] 
split level 46: [/input-12, 1371] 
split level 47: [/input-12, 2477] 
split level 48: [/input-12, 1775] 
split level 49: [/input-12, 6260] 
split level 50: [/input-12, 564] 
split level 51: [/input-12, 5522] 
split level 52: [/input-16, 165] 
split level 53: [/input-12, 3600] 
split level 54: [/input-12, 7202] 
split level 55: [/input-12, 7505] 
split level 56: [/input-12, 2476] 
split level 57: [/input-16, 24] 
split level 58: [/input-12, 7591] 
split level 59: [/input-12, 345] 
split level 60: [/input-12, 8149] 
split level 61: [/input-12, 8046] 
split level 62: [/input-12, 5395] 
split level 63: [/input-12, 1233] 
split level 64: [/input-12, 3816] 
split level 65: [/input-4, 3945] 
split level 66: [/input-12, 7150] 
split level 67: [/input-12, 3630] 
split level 68: [/input-12, 5732] 
split level 69: [/input-12, 2603] 
split level 70: [/input-12, 7151] 
split level 71: [/input-12, 5524] 
split level 72: [/input-12, 7565] 
split level 73: [/input-12, 7216] 
split level 74: [/input-4, 6572] 
split level 75: [/input-12, 1811] 
split level 76: [/input-12, 4124] 
split level 77: [/input-12, 5516] 
split level 78: [/input-12, 2453] 
split level 79: [/input-12, 7588] 
split level 80: [/input-12, 2442] 
split level 81: [/input-12, 4892] 
split level 82: [/input-12, 7962] 
split level 83: [/input-12, 3317] 
split level 84: [/input-12, 7148] 
split level 85: [/input-12, 558] 
split level 86: [/input-12, 1738] 
split level 87: [/input-16, 185] 
split level 88: [/input-12, 1373] 
split level 89: [/input-4, 6571] 
split level 90: [/input-12, 1731] 
split level 91: [/input-12, 2604] 
split level 92: [/input-12, 2470] 
split level 93: [/input-12, 3616] 
split level 94: [/input-12, 7204] 
split level 95: [/input-12, 1461] 
split level 96: [/input-12, 2486] 
split level 97: [/input-12, 1361] 
split level 98: [/input-12, 8040] 
split level 99: [/input-12, 739] 
split level 100: [/input-12, 2594] 
split level 101: [/input-12, 1369] 
split level 102: [/input-12, 3881] 
split level 103: [/input-12, 8173] 
split level 104: [/input-12, 6831] 
split level 105: [/input-12, 5541] 
split level 106: [/input-12, 3570] 
split level 107: [/input-12, 3323] 
split level 108: [/input-12, 802] 
split level 109: [/input-12, 2359] 
split level 110: [/input-12, 6980] 
split level 111: [/input-12, 1216] 
split level 112: [/input-12, 2320] 
split level 113: [/input-12, 7978] 
split level 114: [/input-12, 1812] 
split level 115: [/input-12, 3882] 
split level 116: [/input-12, 3873] 
split level 117: [/input-12, 5506] 
split level 118: [/input-12, 1427] 
split level 119: [/input-12, 8019] 
split level 120: [/input-12, 3917] 
split level 121: [/input-12, 7155] 
split level 122: [/input-12, 2276] 
split level 123: [/input-12, 3964] 
split level 124: [/input-12, 2307] 
split level 125: [/input-12, 5345] 
split level 126: [/input-12, 7205] 
split level 127: [/input-12, 496] 
split level 128: [/input-12, 6225] 
split level 129: [/input-12, 8144] 
split level 130: [/input-12, 536] 
split level 131: [/input-12, 2328] 
split level 132: [/input-4, 2659] 
split level 133: [/input-12, 5349] 
split level 134: [/input-12, 5210] 
split level 135: [/input-12, 7223] 
split level 136: [/input-12, 3857] 
split level 137: [/input-12, 6486] 
split level 138: [/input-12, 1426] 
split level 139: [/input-12, 5787] 
split level 140: [/input-12, 5413] 
split level 141: [/input-4, 7939] 
split level 142: [/input-12, 2602] 
split level 143: [/input-4, 6823] 
split level 144: [/input-4, 3113] 
split level 145: [/input-12, 817] 
split level 146: [/input-12, 6262] 
split level 147: [/input-12, 3342] 
split level 148: [/input-4, 804] 
split level 149: [/input-4, 1922] 
split level 150: [/input-16, 154] 
split level 151: [/input-4, 4827] 
split level 152: [/input-12, 3786] 
split level 153: [/input-12, 2336] 
split level 154: [/input-12, 7013] 
split level 155: [/input-12, 2277] 
split level 156: [/input-12, 6443] 
split level 157: [/input-12, 5299] 
split level 158: [/input-12, 7008] 
split level 159: [/input-12, 4904] 
split level 160: [/input-12, 2462] 
split level 161: [/input-12, 5815] 
split level 162: [/input-12, 7946] 
split level 163: [/input-12, 3883] 
split level 164: [/input-12, 3431] 
split level 165: [/input-12, 5153] 
split level 166: [/input-12, 3337] 
split level 167: [/input-4, 1110] 
split level 168: [/input-12, 5352] 
split level 169: [/input-12, 2558] 
split level 170: [/input-12, 878] 
split level 171: [/input-4, 6824] 
split level 172: [/input-12, 5562] 
split level 173: [/input-12, 3461] 
split level 174: [/input-12, 795] 
split level 175: [/input-12, 1175] 
split level 176: [/input-12, 6740] 
split level 177: [/input-12, 5134] 
split level 178: [/input-4, 6568] 
split level 179: [/input-12, 2070] 
split level 180: [/input-4, 1112] 
split level 181: [/input-12, 782] 
split level 182: [/input-12, 2605] 
split level 183: [/input-12, 438] 
split level 184: [/input-12, 4427] 
split level 185: [/input-12, 6487] 
split level 186: [/input-12, 6246] 
split level 187: [/input-12, 6430] 
split level 188: [/input-12, 3529] 
split level 189: [/input-4, 4828] 
split level 190: [/input-12, 4148] 
split level 191: [/input-12, 4212] 
split level 192: [/input-12, 3965] 
split level 193: [/input-4, 5324] 
split level 194: [/input-12, 2574] 
split level 195: [/input-4, 4259] 
split level 196: [/input-12, 5950] 
split level 197: [/input-12, 3535] 
split level 198: [/input-12, 2411] 
split level 199: [/input-4, 6839] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14527177810668945
10 lb beta sum: 0.0, worst -0.14527034759521484
Time: prepare 0.0115    bound 0.1317    transfer 0.0015    finalize 0.0099    func 0.1573    
Accumulated time: func 0.2308    prepare 0.0217    bound 0.2047    transfer 0.0016    finalize 0.0101    
all_split False
======================Cut inference begins======================
max lb tensor(0.18522978) min lb tensor(-0.14526629)
Number of Verified Splits: 9 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.010652780532836914 
BICCOS Cumulative time: 0.010652780532836914
Preprocessing time: 0.00985574722290039 Inference time: 0.00037097930908203125 Add cuts time: 0.00014448165893554688 Cut analysis time: 0.0002815723419189453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13154 (1), -0.13136 (1), -0.13135 (1), -0.13126 (1), -0.13098 (1), -0.13093 (1), -0.13073 (1), -0.13019 (1), -0.13010 (1), -0.13007 (1), -0.13002 (1), -0.12921 (1), -0.12889 (1), -0.12865 (1), -0.12835 (1), -0.12818 (1), -0.12786 (1), -0.12589 (1), -0.12389 (1), -0.12363 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7697    set_bounds 0.0085    solve 0.1574    add 0.0770    
Accumulated time: pickout 0.0003    decision 0.7697    set_bounds 0.0085    solve 0.1574    add 0.0770    
Current (lb-rhs): -0.13154196739196777
50 domains visited
Cumulative time: 1.1040353775024414

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 72] [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 110] 
split level 1: [/input-16, 46] [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 72] [/input-16, 46] [/input-16, 72] [/input-16, 72] [/input-16, 72] 
split level 2: [/input-16, 134] [/input-16, 46] [/input-16, 134] [/input-16, 46] [/input-16, 134] [/input-16, 46] [/input-16, 134] [/input-16, 46] [/input-16, 46] [/input-16, 46] 
split level 3: [/input-16, 21] [/input-16, 134] [/input-16, 21] [/input-16, 134] [/input-16, 21] [/input-16, 134] [/input-16, 21] [/input-16, 134] [/input-16, 134] [/input-16, 134] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10615205764770508

all verified at 3th iter
Time: prepare 0.0067    bound 0.0311    transfer 0.0020    finalize 0.0051    func 0.0475    
Accumulated time: func 0.2783    prepare 0.0287    bound 0.2358    transfer 0.0037    finalize 0.0152    
all_split False
======================Cut inference begins======================
max lb tensor(0.33665621) min lb tensor(0.00016117)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.035144805908203125 
BICCOS Cumulative time: 0.04579758644104004
Preprocessing time: 0.011734485626220703 Inference time: 0.01570439338684082 Add cuts time: 0.007530927658081055 Cut analysis time: 0.00017499923706054688
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0010    decision 0.0246    set_bounds 0.0130    solve 0.0476    add 0.0151    
Accumulated time: pickout 0.0014    decision 0.7944    set_bounds 0.0215    solve 0.2049    add 0.0921    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 46, 110]), tensor([-1., -1.]), tensor([0, 0]), tensor([-1.26703658e+34,  2.72090733e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 46, 110]), tensor([-1.,  1.]), tensor([0, 0]), tensor([-1.26703658e+34,  1.31145999e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 46, 110]), tensor([ 1., -1.]), tensor([0, 0]), tensor([-1.26703658e+34,  2.93123305e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 46, 110]), tensor([1., 1.]), tensor([0, 0]), tensor([-1.26703658e+34,  1.34627387e-01]), tensor([0, 1]))}
Shallow branching resets to n domains:  4
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.08032846450805664

all verified at 0th iter
Time: prepare 0.0003    bound 0.0058    transfer 0.0001    finalize 0.0003    func 0.0066    
Accumulated time: func 0.2850    prepare 0.0290    bound 0.2416    transfer 0.0038    finalize 0.0155    
After pruning, left:  0

Back to Regular BaB


Properties batch 3, size 1
Remaining timeout: 196.95927667617798
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 196.95920848846436
Verifying property 4 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.25889778]], device='cuda:0') need to verify.
Model prediction is: tensor([-39.76797104, -39.99512100, -37.83259201, -37.92990112, -37.76850510,
        -38.09967804, -36.66736984, -39.10856628, -41.13192368, -39.17990112],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.25889778]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1305
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 673
Node /39 input 0: size torch.Size([250]) unstable 47
-----------------
# of unstable neurons: 2025
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 9.417533874511719e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.25887107849121094
10 lb beta sum: 0.0, worst -0.25887250900268555
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0740    transfer 0.0001    finalize 0.0002    func 0.0745    
Accumulated time: func 0.0745    prepare 0.0002    bound 0.0740    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 230] 
split level 1: [/input-16, 64] 
split level 2: [/input-16, 95] 
split level 3: [/input-16, 110] 
split level 4: [/input-16, 10] 
split level 5: [/input-16, 126] 
split level 6: [/input-16, 46] 
split level 7: [/input-16, 145] 
split level 8: [/input-16, 21] 
split level 9: [/input-16, 84] 
split level 10: [/input-16, 31] 
split level 11: [/input-16, 72] 
split level 12: [/input-16, 7] 
split level 13: [/input-16, 99] 
split level 14: [/input-16, 154] 
split level 15: [/input-16, 134] 
split level 16: [/input-16, 16] 
split level 17: [/input-16, 5] 
split level 18: [/input-12, 558] 
split level 19: [/input-12, 7139] 
split level 20: [/input-12, 1571] 
split level 21: [/input-16, 146] 
split level 22: [/input-12, 6053] 
split level 23: [/input-12, 1683] 
split level 24: [/input-12, 7132] 
split level 25: [/input-16, 180] 
split level 26: [/input-16, 65] 
split level 27: [/input-12, 1363] 
split level 28: [/input-12, 2442] 
split level 29: [/input-12, 7505] 
split level 30: [/input-12, 4132] 
split level 31: [/input-12, 564] 
split level 32: [/input-12, 6992] 
split level 33: [/input-12, 4769] 
split level 34: [/input-12, 1676] 
split level 35: [/input-16, 58] 
split level 36: [/input-12, 6260] 
split level 37: [/input-12, 4459] 
split level 38: [/input-12, 2149] 
split level 39: [/input-12, 6259] 
split level 40: [/input-12, 1436] 
split level 41: [/input-12, 7962] 
split level 42: [/input-12, 5516] 
split level 43: [/input-12, 2594] 
split level 44: [/input-12, 2601] 
split level 45: [/input-12, 6831] 
split level 46: [/input-16, 237] 
split level 47: [/input-12, 739] 
split level 48: [/input-12, 7202] 
split level 49: [/input-12, 3597] 
split level 50: [/input-12, 2603] 
split level 51: [/input-12, 7568] 
split level 52: [/input-12, 3411] 
split level 53: [/input-12, 1435] 
split level 54: [/input-12, 2593] 
split level 55: [/input-12, 7954] 
split level 56: [/input-12, 7150] 
split level 57: [/input-12, 7205] 
split level 58: [/input-12, 1204] 
split level 59: [/input-12, 5522] 
split level 60: [/input-12, 1371] 
split level 61: [/input-12, 6262] 
split level 62: [/input-12, 345] 
split level 63: [/input-12, 7565] 
split level 64: [/input-12, 3588] 
split level 65: [/input-12, 2441] 
split level 66: [/input-12, 6054] 
split level 67: [/input-12, 1242] 
split level 68: [/input-12, 123] 
split level 69: [/input-12, 8046] 
split level 70: [/input-12, 2602] 
split level 71: [/input-12, 2605] 
split level 72: [/input-12, 1461] 
split level 73: [/input-12, 5732] 
split level 74: [/input-12, 7216] 
split level 75: [/input-12, 7148] 
split level 76: [/input-4, 6571] 
split level 77: [/input-12, 6516] 
split level 78: [/input-12, 1250] 
split level 79: [/input-12, 1453] 
split level 80: [/input-12, 2584] 
split level 81: [/input-12, 5532] 
split level 82: [/input-12, 2604] 
split level 83: [/input-12, 2277] 
split level 84: [/input-12, 2592] 
split level 85: [/input-4, 3945] 
split level 86: [/input-12, 7978] 
split level 87: [/input-12, 2610] 
split level 88: [/input-12, 2574] 
split level 89: [/input-12, 5524] 
split level 90: [/input-12, 2600] 
split level 91: [/input-12, 5506] 
split level 92: [/input-12, 2606] 
split level 93: [/input-12, 2573] 
split level 94: [/input-12, 7204] 
split level 95: [/input-12, 2359] 
split level 96: [/input-12, 1775] 
split level 97: [/input-12, 5349] 
split level 98: [/input-12, 1369] 
split level 99: [/input-12, 790] 
split level 100: [/input-12, 2598] 
split level 101: [/input-12, 4124] 
split level 102: [/input-12, 4380] 
split level 103: [/input-12, 7333] 
split level 104: [/input-12, 3600] 
split level 105: [/input-12, 5290] 
split level 106: [/input-12, 1361] 
split level 107: [/input-12, 1203] 
split level 108: [/input-12, 6225] 
split level 109: [/input-12, 7151] 
split level 110: [/input-12, 787] 
split level 111: [/input-12, 4148] 
split level 112: [/input-12, 2433] 
split level 113: [/input-12, 4212] 
split level 114: [/input-12, 496] 
split level 115: [/input-12, 5395] 
split level 116: [/input-12, 1216] 
split level 117: [/input-12, 2320] 
split level 118: [/input-12, 2343] 
split level 119: [/input-16, 186] 
split level 120: [/input-12, 5505] 
split level 121: [/input-12, 7591] 
split level 122: [/input-4, 7939] 
split level 123: [/input-12, 2276] 
split level 124: [/input-4, 1331] 
split level 125: [/input-12, 2609] 
split level 126: [/input-4, 1143] 
split level 127: [/input-12, 7946] 
split level 128: [/input-12, 1347] 
split level 129: [/input-12, 985] 
split level 130: [/input-12, 6468] 
split level 131: [/input-12, 6901] 
split level 132: [/input-4, 6182] 
split level 133: [/input-12, 4904] 
split level 134: [/input-12, 3917] 
split level 135: [/input-12, 3881] 
split level 136: [/input-12, 3570] 
split level 137: [/input-12, 3431] 
split level 138: [/input-4, 2659] 
split level 139: [/input-12, 3323] 
split level 140: [/input-4, 1922] 
split level 141: [/input-12, 330] 
split level 142: [/input-4, 4827] 
split level 143: [/input-12, 2328] 
split level 144: [/input-12, 1373] 
split level 145: [/input-12, 2550] 
split level 146: [/input-12, 6443] 
split level 147: [/input-12, 4892] 
split level 148: [/input-4, 804] 
split level 149: [/input-12, 2608] 
split level 150: [/input-12, 5815] 
split level 151: [/input-12, 1202] 
split level 152: [/input-12, 6222] 
split level 153: [/input-12, 5787] 
split level 154: [/input-12, 4795] 
split level 155: [/input-12, 4913] 
split level 156: [/input-12, 3317] 
split level 157: [/input-12, 6246] 
split level 158: [/input-12, 782] 
split level 159: [/input-12, 6740] 
split level 160: [/input-4, 6823] 
split level 161: [/input-12, 7588] 
split level 162: [/input-12, 795] 
split level 163: [/input-4, 4828] 
split level 164: [/input-12, 7754] 
split level 165: [/input-4, 4644] 
split level 166: [/input-12, 7666] 
split level 167: [/input-12, 5322] 
split level 168: [/input-12, 8019] 
split level 169: [/input-4, 7955] 
split level 170: [/input-12, 2585] 
split level 171: [/input-4, 1110] 
split level 172: [/input-12, 7217] 
split level 173: [/input-12, 5299] 
split level 174: [/input-12, 4144] 
split level 175: [/input-4, 6150] 
split level 176: [/input-12, 3873] 
split level 177: [/input-12, 3883] 
split level 178: [/input-4, 4934] 
split level 179: [/input-12, 5153] 
split level 180: [/input-12, 6487] 
split level 181: [/input-12, 5231] 
split level 182: [/input-4, 5084] 
split level 183: [/input-4, 1112] 
split level 184: [/input-12, 2572] 
split level 185: [/input-4, 8129] 
split level 186: [/input-4, 6824] 
split level 187: [/input-12, 2411] 
split level 188: [/input-12, 4798] 
split level 189: [/input-12, 1731] 
split level 190: [/input-12, 6430] 
split level 191: [/input-12, 3461] 
split level 192: [/input-12, 3535] 
split level 193: [/input-12, 2453] 
split level 194: [/input-4, 5446] 
split level 195: [/input-12, 5352] 
split level 196: [/input-12, 2070] 
split level 197: [/input-4, 3094] 
split level 198: [/input-12, 6780] 
split level 199: [/input-12, 544] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2586376667022705
10 lb beta sum: 0.0, worst -0.2586324214935303
Time: prepare 0.0116    bound 0.1326    transfer 0.0016    finalize 0.0069    func 0.1552    
Accumulated time: func 0.2297    prepare 0.0216    bound 0.2066    transfer 0.0017    finalize 0.0071    
all_split False
======================Cut inference begins======================
max lb tensor(0.21515608) min lb tensor(-0.25863051)
Number of Verified Splits: 4 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.01069784164428711 
BICCOS Cumulative time: 0.01069784164428711
Preprocessing time: 0.00993967056274414 Inference time: 0.00046634674072265625 Add cuts time: 6.914138793945312e-05 Cut analysis time: 0.00022268295288085938
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.24234 (1), -0.24196 (1), -0.24174 (1), -0.24067 (1), -0.24057 (1), -0.24036 (1), -0.23985 (1), -0.23796 (1), -0.23763 (1), -0.23703 (1), -0.23670 (1), -0.23558 (1), -0.23398 (1), -0.23387 (1), -0.23273 (1), -0.23233 (1), -0.23213 (1), -0.23205 (1), -0.23160 (1), -0.23159 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7618    set_bounds 0.0093    solve 0.1553    add 0.0748    
Accumulated time: pickout 0.0003    decision 0.7618    set_bounds 0.0093    solve 0.1553    add 0.0748    
Current (lb-rhs): -0.24233555793762207
50 domains visited
Cumulative time: 1.0957157611846924

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 230] 
split level 1: [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 64] [/input-16, 110] [/input-16, 64] [/input-16, 110] [/input-16, 110] [/input-16, 64] [/input-16, 64] 
split level 2: [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 110] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 110] 
split level 3: [/input-16, 46] [/input-16, 46] [/input-16, 46] [/input-16, 46] [/input-16, 46] [/input-16, 46] [/input-16, 46] [/input-16, 46] [/input-16, 110] [/input-16, 10] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2009814977645874
10 lb beta sum: 0.6721635460853577, worst -0.18122705817222595
Time: prepare 0.0066    bound 0.1507    transfer 0.0015    finalize 0.0066    func 0.1681    
Accumulated time: func 0.3978    prepare 0.0284    bound 0.3573    transfer 0.0032    finalize 0.0137    
all_split False
======================Cut inference begins======================
max lb tensor(0.27646458) min lb tensor(-0.18108761)
Number of Verified Splits: 127 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 13
#cuts >= 20: 0
BICCOS time: 0.01989006996154785 
BICCOS Cumulative time: 0.03058791160583496
Preprocessing time: 0.011899948120117188 Inference time: 0.005840301513671875 Add cuts time: 0.0018193721771240234 Cut analysis time: 0.0003304481506347656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07424 (2), -0.07348 (2), -0.07325 (2), -0.07313 (2), -0.07304 (2), -0.07290 (2), -0.07204 (2), -0.07190 (2), -0.07181 (2), -0.07180 (2), -0.07178 (2), -0.07171 (2), -0.07157 (2), -0.06914 (2), -0.06859 (2), -0.06767 (2), -0.06741 (2), -0.06710 (2), -0.06688 (2), -0.06686 (2), 
Length of domains: 50
Time: pickout 0.0006    decision 0.0247    set_bounds 0.0134    solve 0.1682    add 0.0967    
Accumulated time: pickout 0.0009    decision 0.7866    set_bounds 0.0227    solve 0.3235    add 0.1715    
Current (lb-rhs): -0.07423931360244751
100 domains visited
Cumulative time: 1.4194960594177246

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 230] [/input-16, 230] 
split level 1: [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] [/input-16, 64] 
split level 2: [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 110] [/input-16, 10] [/input-16, 10] 
split level 3: [/input-16, 46] [/input-16, 10] [/input-16, 10] [/input-16, 10] [/input-16, 46] [/input-16, 46] [/input-16, 126] [/input-16, 126] [/input-16, 46] [/input-16, 46] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09356176853179932

all verified at 5th iter
Time: prepare 0.0065    bound 0.0459    transfer 0.0015    finalize 0.0075    func 0.0640    
Accumulated time: func 0.4618    prepare 0.0352    bound 0.4032    transfer 0.0047    finalize 0.0211    
all_split False
======================Cut inference begins======================
max lb tensor(0.38792014) min lb tensor(0.00032544)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.037355899810791016 
BICCOS Cumulative time: 0.06794381141662598
Preprocessing time: 0.0115814208984375 Inference time: 0.01758718490600586 Add cuts time: 0.008011817932128906 Cut analysis time: 0.00017547607421875
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0006    decision 0.0248    set_bounds 0.0157    solve 0.0641    add 0.0196    
Accumulated time: pickout 0.0016    decision 0.8114    set_bounds 0.0384    solve 0.3875    add 0.1911    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 10,  64, 230]), tensor([-1., -1., -1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  1.17514893e-01,  2.41583511e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 10,  64, 230]), tensor([-1., -1.,  1.]), tensor([0, 0, 0]), tensor([-1.26703658e+34,  1.17514893e-01,  2.21839711e-01]), tensor([0, 1, 2]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([10, 64]), tensor([-1.,  1.]), tensor([0, 0]), tensor([-1.26703658e+34,  1.76059410e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 10, 230]), tensor([ 1., -1.]), tensor([0, 0]), tensor([-1.26703658e+34,  3.15377653e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([ 10, 230]), tensor([1., 1.]), tensor([0, 0]), tensor([-1.26703658e+34,  6.20348901e-02]), tensor([0, 1]))}
Shallow branching resets to n domains:  5
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08636319637298584

all verified at 2th iter
Time: prepare 0.0003    bound 0.0196    transfer 0.0001    finalize 0.0003    func 0.0205    
Accumulated time: func 0.4823    prepare 0.0356    bound 0.4228    transfer 0.0048    finalize 0.0215    
After pruning, left:  0

Back to Regular BaB


Properties batch 5, size 1
Remaining timeout: 195.1861069202423
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 195.18603610992432
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 195.1860110759735
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 195.1859905719757
Verifying property 8 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.42897129]], device='cuda:0') need to verify.
Model prediction is: tensor([-39.76797104, -39.99512100, -37.83259201, -37.92990112, -37.76850510,
        -38.09967804, -36.66736984, -39.10856628, -41.13192368, -39.17990112],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-8 start_node /40 with alignment adjustment
setting alpha for layer /36 start_node /40 with alignment adjustment
setting alpha for layer /39 start_node /40 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.42897129]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input-4,/input-12,/input-16,/40
Keeping alphas for these layers: ['/40']
Keeping alphas for these layers: ['/40']
Node /input-8 input 0: size torch.Size([32, 16, 16]) unstable 1305
Node /36 input 0: size torch.Size([128, 8, 8]) unstable 673
Node /39 input 0: size torch.Size([250]) unstable 47
-----------------
# of unstable neurons: 2025
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Cut time: 9.298324584960938e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4289236068725586
10 lb beta sum: 0.0, worst -0.42893362045288086
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0731    transfer 0.0001    finalize 0.0002    func 0.0737    
Accumulated time: func 0.0737    prepare 0.0002    bound 0.0731    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 78] 
split level 1: [/input-16, 51] 
split level 2: [/input-16, 237] 
split level 3: [/input-16, 180] 
split level 4: [/input-16, 178] 
split level 5: [/input-16, 21] 
split level 6: [/input-16, 195] 
split level 7: [/input-16, 65] 
split level 8: [/input-16, 213] 
split level 9: [/input-16, 236] 
split level 10: [/input-16, 46] 
split level 11: [/input-12, 7473] 
split level 12: [/input-16, 146] 
split level 13: [/input-16, 110] 
split level 14: [/input-16, 165] 
split level 15: [/input-12, 7468] 
split level 16: [/input-12, 3114] 
split level 17: [/input-12, 3588] 
split level 18: [/input-16, 185] 
split level 19: [/input-12, 1363] 
split level 20: [/input-12, 5237] 
split level 21: [/input-12, 7458] 
split level 22: [/input-12, 5806] 
split level 23: [/input-12, 123] 
split level 24: [/input-12, 1204] 
split level 25: [/input-12, 882] 
split level 26: [/input-12, 3108] 
split level 27: [/input-12, 5229] 
split level 28: [/input-12, 5924] 
split level 29: [/input-12, 1387] 
split level 30: [/input-12, 7769] 
split level 31: [/input-12, 1434] 
split level 32: [/input-12, 5814] 
split level 33: [/input-12, 1438] 
split level 34: [/input-12, 6992] 
split level 35: [/input-12, 1435] 
split level 36: [/input-12, 1436] 
split level 37: [/input-12, 1203] 
split level 38: [/input-12, 2277] 
split level 39: [/input-12, 1371] 
split level 40: [/input-12, 4354] 
split level 41: [/input-12, 1820] 
split level 42: [/input-12, 564] 
split level 43: [/input-12, 3600] 
split level 44: [/input-12, 2276] 
split level 45: [/input-12, 5802] 
split level 46: [/input-12, 1202] 
split level 47: [/input-12, 5532] 
split level 48: [/input-12, 5231] 
split level 49: [/input-12, 5233] 
split level 50: [/input-12, 558] 
split level 51: [/input-12, 4769] 
split level 52: [/input-12, 5541] 
split level 53: [/input-12, 5224] 
split level 54: [/input-12, 5234] 
split level 55: [/input-12, 3279] 
split level 56: [/input-12, 7139] 
split level 57: [/input-12, 3884] 
split level 58: [/input-12, 1811] 
split level 59: [/input-12, 1571] 
split level 60: [/input-12, 4430] 
split level 61: [/input-12, 1388] 
split level 62: [/input-4, 6246] 
split level 63: [/input-4, 7819] 
split level 64: [/input-12, 5210] 
split level 65: [/input-12, 2411] 
split level 66: [/input-12, 5821] 
split level 67: [/input-12, 1812] 
split level 68: [/input-12, 7754] 
split level 69: [/input-12, 433] 
split level 70: [/input-12, 1547] 
split level 71: [/input-12, 2357] 
split level 72: [/input-12, 8173] 
split level 73: [/input-12, 5787] 
split level 74: [/input-12, 3876] 
split level 75: [/input-12, 8019] 
split level 76: [/input-12, 434] 
split level 77: [/input-12, 1431] 
split level 78: [/input-12, 1683] 
split level 79: [/input-12, 1453] 
split level 80: [/input-12, 3857] 
split level 81: [/input-12, 6230] 
split level 82: [/input-12, 4353] 
split level 83: [/input-12, 1424] 
split level 84: [/input-4, 2700] 
split level 85: [/input-12, 1183] 
split level 86: [/input-12, 6225] 
split level 87: [/input-12, 1417] 
split level 88: [/input-12, 7202] 
split level 89: [/input-12, 3597] 
split level 90: [/input-4, 4693] 
split level 91: [/input-12, 1369] 
split level 92: [/input-12, 5211] 
split level 93: [/input-12, 6979] 
split level 94: [/input-12, 3848] 
split level 95: [/input-12, 3411] 
split level 96: [/input-12, 1460] 
split level 97: [/input-12, 1803] 
split level 98: [/input-12, 3873] 
split level 99: [/input-12, 4380] 
split level 100: [/input-12, 1189] 
split level 101: [/input-12, 7904] 
split level 102: [/input-12, 4362] 
split level 103: [/input-12, 2606] 
split level 104: [/input-12, 1426] 
split level 105: [/input-12, 5395] 
split level 106: [/input-12, 2336] 
split level 107: [/input-12, 7329] 
split level 108: [/input-12, 6242] 
split level 109: [/input-12, 1361] 
split level 110: [/input-12, 3883] 
split level 111: [/input-12, 1250] 
split level 112: [/input-12, 1676] 
split level 113: [/input-12, 3861] 
split level 114: [/input-12, 7588] 
split level 115: [/input-12, 6222] 
split level 116: [/input-12, 3878] 
split level 117: [/input-12, 1440] 
split level 118: [/input-12, 1025] 
split level 119: [/input-12, 1710] 
split level 120: [/input-12, 4212] 
split level 121: [/input-12, 2594] 
split level 122: [/input-12, 5815] 
split level 123: [/input-12, 1459] 
split level 124: [/input-12, 2291] 
split level 125: [/input-12, 1461] 
split level 126: [/input-12, 6500] 
split level 127: [/input-12, 4427] 
split level 128: [/input-12, 2614] 
split level 129: [/input-12, 1242] 
split level 130: [/input-12, 2362] 
split level 131: [/input-4, 1110] 
split level 132: [/input-12, 1347] 
split level 133: [/input-4, 4725] 
split level 134: [/input-12, 5552] 
split level 135: [/input-12, 3528] 
split level 136: [/input-12, 3553] 
split level 137: [/input-12, 4739] 
split level 138: [/input-12, 7568] 
split level 139: [/input-12, 1775] 
split level 140: [/input-12, 5522] 
split level 141: [/input-4, 4757] 
split level 142: [/input-4, 7818] 
split level 143: [/input-4, 4774] 
split level 144: [/input-12, 1427] 
split level 145: [/input-12, 7204] 
split level 146: [/input-12, 8144] 
split level 147: [/input-4, 1288] 
split level 148: [/input-12, 4124] 
split level 149: [/input-12, 6487] 
split level 150: [/input-4, 2659] 
split level 151: [/input-12, 592] 
split level 152: [/input-12, 544] 
split level 153: [/input-12, 7155] 
split level 154: [/input-12, 3539] 
split level 155: [/input-12, 2358] 
split level 156: [/input-12, 1014] 
split level 157: [/input-12, 6754] 
split level 158: [/input-4, 2664] 
split level 159: [/input-12, 5524] 
split level 160: [/input-12, 5202] 
split level 161: [/input-12, 8011] 
split level 162: [/input-4, 804] 
split level 163: [/input-12, 2070] 
split level 164: [/input-12, 6443] 
split level 165: [/input-12, 1216] 
split level 166: [/input-4, 6610] 
split level 167: [/input-12, 2328] 
split level 168: [/input-4, 1211] 
split level 169: [/input-12, 3881] 
split level 170: [/input-12, 7018] 
split level 171: [/input-12, 8161] 
split level 172: [/input-12, 3529] 
split level 173: [/input-12, 6980] 
split level 174: [/input-4, 2663] 
split level 175: [/input-12, 1035] 
split level 176: [/input-12, 7148] 
split level 177: [/input-12, 333] 
split level 178: [/input-12, 8160] 
split level 179: [/input-12, 7205] 
split level 180: [/input-12, 8157] 
split level 181: [/input-12, 5260] 
split level 182: [/input-12, 2263] 
split level 183: [/input-12, 2574] 
split level 184: [/input-4, 3750] 
split level 185: [/input-12, 6246] 
split level 186: [/input-12, 2605] 
split level 187: [/input-4, 4760] 
split level 188: [/input-12, 2320] 
split level 189: [/input-12, 6430] 
split level 190: [/input-4, 2459] 
split level 191: [/input-12, 7013] 
split level 192: [/input-12, 3535] 
split level 193: [/input-12, 2602] 
split level 194: [/input-12, 7990] 
split level 195: [/input-12, 1752] 
split level 196: [/input-12, 2598] 
split level 197: [/input-12, 7009] 
split level 198: [/input-4, 7837] 
split level 199: [/input-12, 6232] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.42854833602905273
10 lb beta sum: 0.0, worst -0.42853856086730957
Time: prepare 0.0117    bound 0.1326    transfer 0.0015    finalize 0.0081    func 0.1566    
Accumulated time: func 0.2302    prepare 0.0216    bound 0.2058    transfer 0.0016    finalize 0.0084    
all_split False
======================Cut inference begins======================
max lb tensor(0.39864635) min lb tensor(-0.42853379)
Number of Verified Splits: 3 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.010352611541748047 
BICCOS Cumulative time: 0.010352611541748047
Preprocessing time: 0.009895563125610352 Inference time: 0.00015687942504882812 Add cuts time: 7.295608520507812e-05 Cut analysis time: 0.00022721290588378906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.39329 (1), -0.39203 (1), -0.39156 (1), -0.39100 (1), -0.39006 (1), -0.38993 (1), -0.38982 (1), -0.38933 (1), -0.38929 (1), -0.38830 (1), -0.38739 (1), -0.38692 (1), -0.38686 (1), -0.38534 (1), -0.38348 (1), -0.38327 (1), -0.38241 (1), -0.38159 (1), -0.37570 (1), -0.37518 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.7641    set_bounds 0.0091    solve 0.1566    add 0.0727    
Accumulated time: pickout 0.0003    decision 0.7641    set_bounds 0.0091    solve 0.1566    add 0.0727    
Current (lb-rhs): -0.39328718185424805
50 domains visited
Cumulative time: 1.0937957763671875

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-16, 180] [/input-16, 237] [/input-16, 51] [/input-16, 51] [/input-16, 237] [/input-16, 51] [/input-16, 51] [/input-16, 178] [/input-16, 180] [/input-16, 51] 
split level 1: [/input-16, 237] [/input-16, 180] [/input-16, 237] [/input-16, 180] [/input-16, 180] [/input-16, 237] [/input-16, 237] [/input-16, 51] [/input-16, 237] [/input-16, 237] 
split level 2: [/input-16, 178] [/input-16, 178] [/input-16, 180] [/input-16, 178] [/input-16, 178] [/input-16, 178] [/input-16, 180] [/input-16, 237] [/input-16, 178] [/input-16, 180] 
split level 3: [/input-16, 65] [/input-16, 65] [/input-16, 65] [/input-16, 65] [/input-16, 65] [/input-16, 65] [/input-16, 178] [/input-16, 65] [/input-16, 65] [/input-16, 178] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2748575210571289
10 lb beta sum: 0.6755564212799072, worst -0.16690462827682495
Time: prepare 0.0067    bound 0.1508    transfer 0.0015    finalize 0.0050    func 0.1666    
Accumulated time: func 0.3968    prepare 0.0286    bound 0.3566    transfer 0.0031    finalize 0.0133    
all_split False
======================Cut inference begins======================
max lb tensor(0.25898671) min lb tensor(-0.16647243)
Number of Verified Splits: 234 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True), BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True), BoundLinear(name=/input-16, inputs=[/37, /5, /6], perturbed=True), BoundLinear(name=/40, inputs=[/39, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input-4, inputs=[/input, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-12, inputs=[/input-8, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.025559425354003906 
BICCOS Cumulative time: 0.03591203689575195
Preprocessing time: 0.011761188507080078 Inference time: 0.009425640106201172 Add cuts time: 0.004189968109130859 Cut analysis time: 0.00018262863159179688
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0007    decision 0.0248    set_bounds 0.0132    solve 0.1667    add 0.0147    
Accumulated time: pickout 0.0011    decision 0.7889    set_bounds 0.0223    solve 0.3233    add 0.0874    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([237,  51]), tensor([-1., -1.]), tensor([0, 0]), tensor([-1.26703658e+34,  3.29155505e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([237,  51]), tensor([-1.,  1.]), tensor([0, 0]), tensor([-1.26703658e+34,  8.38256329e-02]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([237,  51]), tensor([ 1., -1.]), tensor([0, 0]), tensor([-1.26703658e+34,  3.28449070e-01]), tensor([0, 1]))}
Restore {'/input-4': ([], [], [], [], []), '/input-12': ([], [], [], [], []), '/input-16': (tensor([237,  51]), tensor([1., 1.]), tensor([0, 0]), tensor([-1.26703658e+34,  1.41891226e-01]), tensor([0, 1]))}
Shallow branching resets to n domains:  4
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1985630989074707

all verified at 5th iter
Time: prepare 0.0003    bound 0.0386    transfer 0.0001    finalize 0.0003    func 0.0394    
Accumulated time: func 0.4362    prepare 0.0289    bound 0.3952    transfer 0.0033    finalize 0.0136    
After pruning, left:  0

Back to Regular BaB

Result: safe in 6.3458 seconds
############# Summary #############
Final verified acc: 59.5% (total 200 examples)
Problem instances count: 200 , total verified (safe/unsat): 119 , total falsified (unsafe/sat): 73 , timeout: 8
mean time for ALL instances (total 200):10.625370644735877, max time: 230.16379165649414
mean time for verified SAFE instances(total 119): 3.6263687069676505, max time: 130.41467833518982
mean time for verified (SAFE + UNSAFE) instances (total 192): 2.267051891734203, max time: [2.223991870880127, 0.04100227355957031, 0.04270029067993164, 0.039175987243652344, 130.41467833518982, 4.401674747467041, 0.0418848991394043, 0.03927183151245117, 2.9184749126434326, 0.04628777503967285, 0.07854866981506348, 0.041329383850097656, 0.036786794662475586, 0.03699994087219238, 0.03891396522521973, 0.03801679611206055, 0.03741574287414551, 0.03618931770324707, 0.03821754455566406, 4.420384883880615, 0.23218202590942383, 0.037328243255615234, 0.03660440444946289, 0.039926767349243164, 0.039864301681518555, 0.03592848777770996, 2.9513468742370605, 0.09311032295227051, 0.0905141830444336, 0.04521322250366211, 7.938049554824829, 0.05724668502807617, 12.13214635848999, 0.03843355178833008, 0.038736820220947266, 0.03572893142700195, 2.8497731685638428, 0.03604388236999512, 0.03609466552734375, 0.03599214553833008, 0.09491872787475586, 0.05571389198303223, 3.618457317352295, 16.565925121307373, 0.036614179611206055, 15.481767416000366, 0.04137587547302246, 0.03661346435546875, 0.03612399101257324, 0.03595447540283203, 17.94772744178772, 0.040569305419921875, 11.445155143737793, 20.01642608642578, 3.3560774326324463, 0.03973817825317383, 0.03617525100708008, 0.03602147102355957, 0.03670001029968262, 0.03633856773376465, 0.036073923110961914, 0.03598952293395996, 0.03489398956298828, 0.03703951835632324, 17.889716148376465, 0.03942751884460449, 0.03646278381347656, 0.036173105239868164, 0.03708004951477051, 0.038001298904418945, 0.03832745552062988, 0.03808259963989258, 3.9194226264953613, 5.37234091758728, 0.03597307205200195, 0.03616595268249512, 0.0364527702331543, 9.225875616073608, 0.03924250602722168, 0.03627586364746094, 2.8749277591705322, 0.03777766227722168, 0.03638601303100586, 2.839550733566284, 0.0387730598449707, 0.21633481979370117, 0.03631472587585449, 19.189476490020752, 0.03629899024963379, 0.03625154495239258, 0.21973633766174316, 0.036795616149902344, 0.03528022766113281, 0.03728199005126953, 0.04346132278442383, 0.03638601303100586, 0.037461280822753906, 0.03658771514892578, 0.036834001541137695, 0.03642868995666504, 0.03777146339416504, 3.1821792125701904, 6.463971138000488, 0.04038429260253906, 0.03848433494567871, 0.03773856163024902, 0.03505563735961914, 0.037230730056762695, 0.03996849060058594, 0.04516291618347168, 2.866713762283325, 3.1005711555480957, 0.03931784629821777, 66.97572326660156, 18.427639961242676, 0.04325556755065918, 0.036691904067993164, 0.04027438163757324, 6.345775365829468]
mean time for verified SAFE + TIMEOUT instances (total 127): 16.703449985173744, max time: [230.16379165649414, 201.48468351364136, 215.5415313243866, 217.06726670265198, 206.8205714225769, 207.80620455741882, 206.47350525856018, 204.44271755218506] 
mean time for verified UNSAFE instances (total 73): 0.05117927512077436, max time: 0.12693285942077637
safe-incomplete (total 90), index: [0, 2, 7, 8, 14, 17, 20, 22, 23, 26, 27, 28, 30, 31, 33, 36, 38, 39, 40, 41, 42, 47, 49, 51, 52, 55, 59, 60, 62, 68, 70, 71, 73, 74, 79, 84, 85, 86, 89, 92, 99, 101, 103, 104, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 131, 132, 133, 135, 136, 140, 142, 146, 147, 148, 152, 153, 154, 157, 158, 159, 160, 161, 164, 166, 169, 171, 172, 177, 178, 179, 180, 181, 182, 186, 190, 193, 195, 197]
unsafe-pgd (total 73), index: [1, 3, 4, 5, 9, 10, 12, 15, 16, 25, 29, 32, 34, 35, 43, 44, 45, 46, 50, 53, 57, 58, 61, 63, 65, 66, 67, 69, 77, 78, 80, 81, 82, 87, 88, 90, 94, 96, 100, 102, 105, 106, 108, 119, 123, 124, 125, 126, 128, 129, 130, 137, 138, 141, 143, 145, 150, 151, 155, 156, 163, 165, 167, 168, 170, 173, 176, 183, 184, 188, 194, 196, 198]
unknown (total 8), index: [6, 19, 21, 24, 72, 93, 162, 185]
safe (total 29), index: [11, 13, 18, 37, 48, 54, 56, 64, 75, 76, 83, 91, 95, 97, 98, 113, 122, 127, 134, 139, 144, 149, 174, 175, 187, 189, 191, 192, 199]
